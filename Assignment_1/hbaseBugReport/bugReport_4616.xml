<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:20:33 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4616/HBASE-4616.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4616] Update hregion encoded name to reduce logic and prevent region collisions in META</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4616</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description></description>
                <environment></environment>
        <key id="12527685">HBASE-4616</key>
            <summary>Update hregion encoded name to reduce logic and prevent region collisions in META</summary>
                <type id="14" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/genericissue.png">Umbrella</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="4">Incomplete</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="posix4e">Alex Newman</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Oct 2011 01:19:00 +0000</created>
                <updated>Wed, 22 Apr 2015 00:32:17 +0000</updated>
                            <resolved>Wed, 22 Apr 2015 00:32:17 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                            <comments>
                            <comment id="13130298" author="posix4e" created="Wed, 19 Oct 2011 01:22:01 +0000"  >&lt;p&gt;I am going to combine these tasks into one task. This will reduce potential double work v.v meta migration.&lt;/p&gt;</comment>
                            <comment id="13159582" author="posix4e" created="Tue, 29 Nov 2011 22:20:52 +0000"  >&lt;p&gt;I figured I would post what I have to get feedback. There are still some things to complete.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Meta migration&lt;/li&gt;
	&lt;li&gt;Fixing the coprocessor tests&lt;/li&gt;
	&lt;li&gt;Add additional unit tests&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;But i figured it&apos;s better than subbing.&lt;/p&gt;</comment>
                            <comment id="13159596" author="posix4e" created="Tue, 29 Nov 2011 22:37:10 +0000"  >&lt;p&gt;Another starting point, are we sure we can stop using the meta/root key comp or am I missing something?&lt;/p&gt;</comment>
                            <comment id="13159626" author="posix4e" created="Tue, 29 Nov 2011 23:10:24 +0000"  >&lt;p&gt;I condensed the three patches into one&lt;/p&gt;</comment>
                            <comment id="13159648" author="posix4e" created="Tue, 29 Nov 2011 23:33:43 +0000"  >&lt;p&gt;I posted this to reviewboard &lt;a href=&quot;https://reviews.apache.org/r/2971/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2971/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13159676" author="yuzhihong@gmail.com" created="Tue, 29 Nov 2011 23:57:44 +0000"  >&lt;p&gt;Where is MetaSearchRow defined ?&lt;br/&gt;
What&apos;s the difference between MetaSearchRow.getStartSearchRow(tableName, null) and MetaSearchRow.getStartSearchRow(tableName, HConstants.EMPTY_BYTE_ARRAY) ?&lt;/p&gt;</comment>
                            <comment id="13159694" author="yuzhihong@gmail.com" created="Wed, 30 Nov 2011 00:24:46 +0000"  >&lt;p&gt;In HRegionInfo.java:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; END_OF_TABLE_TABLE_NAME = END_OF_TABLE_NAME + 1;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think END_OF_TABLE_NAME_FOR_EMPTY_ENDKEY would be a better name.&lt;/p&gt;

&lt;p&gt;In createRegionName():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (id != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || id.length &amp;gt; 0 ) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&amp;amp;&amp;amp; should be used above.&lt;/p&gt;</comment>
                            <comment id="13159761" author="yuzhihong@gmail.com" created="Wed, 30 Nov 2011 02:42:58 +0000"  >&lt;p&gt;In SplitTransaction.java, getDaughterRegionIdTimestamp() is removed.&lt;br/&gt;
I think we should take care of clock skew.&lt;/p&gt;

&lt;p&gt;Also, using hri.getRegionId() - 1 as Id for daughter region Ids is not intuitive.&lt;/p&gt;</comment>
                            <comment id="13160164" author="posix4e" created="Wed, 30 Nov 2011 17:27:58 +0000"  >&lt;p&gt;Sounds great, I got some great feedback&lt;br/&gt;
@Ted everything you said is great. I&apos;ll add that to my list.&lt;/p&gt;

&lt;p&gt;Some additional things we discussed which I agree with&lt;br/&gt;
We shouldn&apos;t use the term tablets only region&lt;br/&gt;
change getendoftabelrow to getstoprow or something like that.&lt;/p&gt;

&lt;p&gt;Furthermore, Ryan suggested a test where we have one meta row which looks like&lt;/p&gt;

&lt;p&gt;abc, foo, 123&lt;br/&gt;
abc, foo\x00, 123 &lt;/p&gt;

&lt;p&gt;and verify the sort order.&lt;/p&gt;</comment>
                            <comment id="13168708" author="posix4e" created="Tue, 13 Dec 2011 20:55:08 +0000"  >&lt;p&gt;I am copying some comments from Stack to this review.&lt;/p&gt;

&lt;p&gt;=====&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/HRegionInfo.java (Diff revision 1)&lt;br/&gt;
private void setHashCode() {&lt;br/&gt;
350 int allocation = tableName ==  null ? 2 : tableName.length + 2;&lt;br/&gt;
347 byte[] uuidTableName = UUID.nameUUIDFromBytes(tableName).toString().getBytes();&lt;br/&gt;
This should do Bytes.toBytes() and pass the String version (else you are susceptible to the machines&apos; locale &amp;#8211; toBytes does UTF-8 all the time).&lt;br/&gt;
=======&lt;br/&gt;
Is that true, since I am getting the string/bytes from a uuid the chars should be very restricted. Are you talking about what I pass to be uuided?&lt;/p&gt;

&lt;p&gt;=======&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/HRegionInfo.java (Diff revision 1)&lt;br/&gt;
private void setHashCode() {&lt;br/&gt;
393 // Use the region name thus far (namely, &amp;lt;tablename(1|2)&amp;gt;,&amp;lt;endKey&amp;gt;,&amp;lt;id&amp;gt;)&lt;br/&gt;
391 // Use the region name thus far (namely, &amp;lt;UUID tablename(1|2)&amp;gt;,&amp;lt;endKey&amp;gt;,&amp;lt;id&amp;gt;)&lt;br/&gt;
Not sure I grok this change.&lt;br/&gt;
=======&lt;/p&gt;

&lt;p&gt;In an upcoming patch I clarified the javadoc&lt;/p&gt;

&lt;p&gt;=======&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/HRegionInfo.java (Diff revision 1)&lt;br/&gt;
private void setHashCode() {&lt;br/&gt;
399 if (startKey == null || startKey.length &amp;lt; 1) {&lt;br/&gt;
Is this change related to this patch?&lt;br/&gt;
=======&lt;br/&gt;
I moved it around&lt;/p&gt;

&lt;p&gt;=======&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/HRegionInfo.java (Diff revision 1)&lt;br/&gt;
private void setHashCode() {&lt;br/&gt;
419 public static byte [] getTableName(byte[] regionName) {&lt;br/&gt;
422 public static byte [] getTableNameUUID(byte[] regionName) {&lt;br/&gt;
Should change the javadoc?  Can we not get the table name any more once this change goes in?  Get the table name from HRI I mean?  We&apos;d have to do look up into a Map of UUID to tablename?&lt;br/&gt;
=========&lt;/p&gt;

&lt;p&gt;You can still get it from the hri, just not from a static context given just the regionname.&lt;/p&gt;</comment>
                            <comment id="13168719" author="posix4e" created="Tue, 13 Dec 2011 21:09:14 +0000"  >&lt;p&gt;I am going to move to three patches so this patch should be considered deprecated.&lt;/p&gt;</comment>
                            <comment id="13168833" author="stack" created="Tue, 13 Dec 2011 23:09:45 +0000"  >&lt;p&gt;I&apos;m talking about this: &apos;...toString().getBytes();&apos;  I suppose if its uuid, yes, bytes are ascii so not an issue.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In an upcoming patch I clarified the javadoc&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hows that work?  I&apos;m to aggregate the patches in my head or you are going to make an aggregated one?&lt;/p&gt;

&lt;p&gt;Good stuff.&lt;/p&gt;
</comment>
                            <comment id="13168940" author="posix4e" created="Wed, 14 Dec 2011 01:03:17 +0000"  >&lt;p&gt;Created a combined patch for qa&lt;/p&gt;</comment>
                            <comment id="13168953" author="zhihyu@ebaysf.com" created="Wed, 14 Dec 2011 01:21:48 +0000"  >&lt;p&gt;There is error in the name of the latest patch - it should be 4616.&lt;/p&gt;

&lt;p&gt;TestOfflineMetaRebuildBase failed with:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Caused by: java.lang.RuntimeException: Master not initialized after 200 seconds
  at org.apache.hadoop.hbase.util.JVMClusterUtil.startup(JVMClusterUtil.java:206)
  at org.apache.hadoop.hbase.LocalHBaseCluster.startup(LocalHBaseCluster.java:420)
  at org.apache.hadoop.hbase.MiniHBaseCluster.init(MiniHBaseCluster.java:196)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13169517" author="posix4e" created="Wed, 14 Dec 2011 17:29:59 +0000"  >&lt;p&gt;Renamed the file&lt;/p&gt;</comment>
                            <comment id="13169518" author="posix4e" created="Wed, 14 Dec 2011 17:30:45 +0000"  >&lt;p&gt;@Zhihong Yu&lt;/p&gt;

&lt;p&gt;This is because we haven&apos;t taken care of migration yet. Stack promised he would help me out. &lt;/p&gt;

&lt;p&gt;@Stack perhaps I could drop over at su or something like that so we could plan the migration?&lt;/p&gt;</comment>
                            <comment id="13169945" author="hadoopqa" created="Thu, 15 Dec 2011 02:59:10 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12507381/HBASE-4616-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12507381/HBASE-4616-v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 39 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestAdmin&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/512//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/512//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/512//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/512//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/512//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/512//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13172628" author="posix4e" created="Mon, 19 Dec 2011 21:27:17 +0000"  >&lt;p&gt;This now supports HRegionInfo.getTableName(regionName) even if it is deprecated and slow.&lt;/p&gt;</comment>
                            <comment id="13172642" author="zhihyu@ebaysf.com" created="Mon, 19 Dec 2011 21:39:40 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] getTableName() {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (tableName == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || tableName.length == 0) {
      tableName = getRegionName();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is the above code right ?&lt;/p&gt;

&lt;p&gt;In:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] getTableName(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] regionName, Configuration conf)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;InterruptedException should be placed on the same line as IOException&lt;br/&gt;
catalogTracker.stop() should be in finally block.&lt;/p&gt;

&lt;p&gt;There shouldn&apos;t be a space between l and right brace:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (region == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; ){
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13172643" author="hadoopqa" created="Mon, 19 Dec 2011 21:39:42 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12507978/HBASE-4616-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12507978/HBASE-4616-v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 41 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestReplicationSink&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/552//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/552//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/552//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/552//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/552//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/552//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13172653" author="posix4e" created="Mon, 19 Dec 2011 21:49:41 +0000"  >&lt;p&gt;That block of code is absolutely not right. Let me see what I did there.&lt;/p&gt;</comment>
                            <comment id="13172797" author="stack" created="Tue, 20 Dec 2011 00:49:04 +0000"  >&lt;p&gt;Should I be reviewing this big unified patch?&lt;/p&gt;</comment>
                            <comment id="13172811" author="posix4e" created="Tue, 20 Dec 2011 01:04:07 +0000"  >&lt;p&gt;I tried to break them up but that might not buy us anything. I&apos;ll keep the unified patch up to date as that seems the easiest to review.&lt;/p&gt;</comment>
                            <comment id="13174518" author="stack" created="Thu, 22 Dec 2011 00:12:18 +0000"  >&lt;p&gt;Regards UUID, if its an md5 anyways, lets call it what it is.&lt;br/&gt;
I tried to see if a hash that was smaller in size but it seems&lt;br/&gt;
that even murmur hash v3 is 120 bits now. If md5, can get hash&lt;br/&gt;
by doing &apos;md5sum &quot;tablename&quot;&apos; on command line if have to; is&lt;br/&gt;
there a uuid command-line tool so readily available?&lt;/p&gt;

&lt;p&gt;I was thinking too we could get base64 of the md5 so size in meta is less&lt;br/&gt;
but thats probably more pain that its worth.&lt;/p&gt;

&lt;p&gt;Or, what would it take to keep a file of tablenames to int codes in&lt;br/&gt;
the filesystem and use the zero-padded int code in .META. instead?&lt;br/&gt;
All tables under value 10 would be catalog tables... .META. would&lt;br/&gt;
be 00000, etc.  Could sit beside the hbase.version file at head of the&lt;br/&gt;
filesystem; could call the file .hbase.tablenames.map or some such.&lt;br/&gt;
UUID/md5 is nice in that it makes it so don&apos;t need this but they&lt;br/&gt;
are wide compared to a short.  Maybe UUID/md5 the way to go &amp;#8211; less&lt;br/&gt;
complexity and the width is not really concern since we don&apos;t write&lt;br/&gt;
tablename into keys (unless we are replicating I suppose; hmm... maybe&lt;br/&gt;
UUID/md5 is safer because two clusters could have same code for different&lt;br/&gt;
table names &amp;#8211; that&apos;d get really confusing... if you stay w/ md5s, you&lt;br/&gt;
have the same behavior we have now regards cross-dc and table names).&lt;/p&gt;

&lt;p&gt;I think we need to make a list of pros/cons removing tablename from meta still.&lt;/p&gt;

&lt;p&gt;In src/main/java/org/apache/hadoop/hbase/HRegionInfo.java why we import&lt;br/&gt;
Using MetaReader inside in HRI is not on I&apos;d say.  Thats a base hbase&lt;br/&gt;
class using a subpackage class that does client operations... HRI should&lt;br/&gt;
be usable w/o need of a cluster/network.  Ditto CatalogTracker.&lt;/p&gt;

&lt;p&gt;Dont do this.. Expand it: +import org.apache.hadoop.hbase.util.*;&lt;/p&gt;

&lt;p&gt;How is this new format going t play w/ old format?  We have to convert&lt;br/&gt;
all the old formats as part of migration into new format?  What about&lt;br/&gt;
the fact that the dir in the filesystem that holds region data is named&lt;br/&gt;
for a hash of the HRI name?  We can&apos;t rename all dirs in fs as part of&lt;br/&gt;
migration?  Or you think we should?&lt;/p&gt;

&lt;p&gt;You could add some javadoc here:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;New region name format:&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;*    &amp;lt;tablename&amp;gt;,,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;.&amp;lt;encodedName&amp;gt;.&lt;br/&gt;
+   *    &amp;lt;tablename&amp;gt;,,&amp;lt;endkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;.&amp;lt;encodedName&amp;gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;where,&lt;/li&gt;
	&lt;li&gt;&amp;lt;encodedName&amp;gt; is a hex version of the MD5 hash of&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;*    &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;&lt;br/&gt;
+   *    &amp;lt;tablename&amp;gt;,&amp;lt;endkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Isn&apos;t tablename the md5 of tablename now?&lt;/p&gt;

&lt;p&gt;What is this comment about?&lt;/p&gt;

&lt;p&gt;+  // It should say, the tablename encoded in the region ends with 0x01,&lt;br/&gt;
+  // but the last region&apos;s tablename ends with 0x02&lt;br/&gt;
+  public static final int END_OF_TABLE_NAME = 1;&lt;br/&gt;
+  public static final int END_OF_TABLE_NAME_FOR_EMPTY_ENDKEY = END_OF_TABLE_NAME + 1;&lt;/p&gt;

&lt;p&gt;Do you think these should be printable characters?  Else, they&apos;ll show in terminal as a box or something?  For example, if this end-of-tablename marker were a &apos;.&apos;, and the last table had a &apos;:&apos;, that&apos;d sort properly and it wouldn&apos;t look so bad when you listed regions (it would be confusing having &apos;.&apos; for every region name but the last but less confusing that two unprintables that rendor one way for 1 and another for 2).  Or you could have comma as end char and a period for the last region in a table (that makes a bit more &apos;sense&apos;)&lt;/p&gt;

&lt;p&gt;Lines like this are too long:&lt;/p&gt;


&lt;p&gt;+    this.regionName = createRegionName(this.tableName, startKey, endKey, Long.toString(regionId).getBytes(), true);&lt;/p&gt;

&lt;p&gt;Fix your formatting in places like below:&lt;/p&gt;

&lt;p&gt;+                                         boolean newFormat){&lt;br/&gt;
+      // We need to be able to add a single byte easily to the regionName as we are building it up&lt;br/&gt;
+      // It&apos;s being used by appending delimiters and special markers.&lt;br/&gt;
+&lt;br/&gt;
+    byte [] oneByte = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;;&lt;br/&gt;
+    //This cannot return any weird string chars as all uuid chars are a hex char.&lt;/p&gt;

&lt;p&gt;The first comment is too indented.  There is a space between close paren and open of curly brace on function, etc.&lt;/p&gt;

&lt;p&gt;Use Bytes.toBytes instead of below if only for fact that its shorter statement:&lt;/p&gt;

&lt;p&gt;+    byte[] uuidTableName = UUID.nameUUIDFromBytes(tableName).toString().getBytes();&lt;/p&gt;

&lt;p&gt;If null, throw exception?  Don&apos;t keep going?&lt;/p&gt;

&lt;p&gt;+    int allocation = uuidTableName ==  null ? 2 : uuidTableName.length + 2;$&lt;/p&gt;

&lt;p&gt;Explain why you are adding &apos;2&apos; in a comment?&lt;/p&gt;

&lt;p&gt;Why write +    allocation += endKey == null ? 1 : endKey.length + 1; so?&lt;/p&gt;

&lt;p&gt;Why not as if (endKey == null) allocation += endKey.length;&lt;br/&gt;
and then allocation += 1; // COMMENT EXPLAINING WHY THE +1?&lt;/p&gt;

&lt;p&gt;Yeah, if some of these items are null like id or tablename, it should be error?&lt;/p&gt;

&lt;p&gt;This don&apos;t seem necessary, the oneByte that is:&lt;/p&gt;

&lt;p&gt;+      oneByte&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = END_OF_TABLE_NAME_FOR_EMPTY_ENDKEY;$&lt;/p&gt;

&lt;p&gt;Just put the END_OF_TABLE_NAME_FOR_EMPTY_ENDKEY into the  byteArrayDataOutput.put(oneByte);&lt;/p&gt;

&lt;p&gt;Ditto DELIMITER&lt;/p&gt;

&lt;p&gt;In fact, why we need DELIMITER when this is all fixed-length?  Can&apos;t we drop DELIMITER here especially if we change the END_OF_TABLE_NAME thingy to be printable?&lt;/p&gt;

&lt;p&gt;I don&apos;t think that we can get away with a memcmp comparator with this HRI name.   The endrow name will be variable length so we&apos;ll still need to do special comparator that looks for the DELIMITER here on the end and compares id and end row distinctly.  The comparator does get cleaner in that we can memcmp up to the last instance of DELIMITER and then do id compare (&lt;del&gt;ROOT&lt;/del&gt; will be messier but &lt;del&gt;ROOT&lt;/del&gt; should be going away and currenlty only one region in .META. anyways so shouldn&apos;t worry too much about it).&lt;/p&gt;

&lt;p&gt;This should be including the DELIMITER?&lt;/p&gt;

&lt;p&gt;+        md5HashBytes =  MD5Hash.getMD5AsHex(metaKey).getBytes();$&lt;/p&gt;

&lt;p&gt;And you don&apos;t need the oneByte stuff; just use DELIMITE same for ENC_SEPARATORR.&lt;/p&gt;

&lt;p&gt;This commen is odd.&lt;/p&gt;

&lt;p&gt;+   * Get the tableName associated with that region. It only supports$&lt;br/&gt;
+   * user regions, not the meta one.$&lt;/p&gt;

&lt;p&gt;Why can&apos;t we get meta regions?  Those names are well-known; if you recognize it, just return the meta name?&lt;/p&gt;

&lt;p&gt;This method:&lt;/p&gt;

&lt;p&gt;+  public static byte [] getTableName(byte[] regionName, Configuration conf)$&lt;/p&gt;

&lt;p&gt;This is ugly, but maybe its ok?  You&apos;ve deprecated it (but you need to point user elsewhere when you deprecate something).  What you thinking?  That it should&lt;br/&gt;
just not be possible to get tablename from an HRI going forward?  This is kinda ugly method anyways... no longer used I&apos;d say so fine if its going away (I seem to remember it was written for some strange context where needed to find tablename walking filesystem but no cluster up).&lt;/p&gt;

&lt;p&gt;Ditto for the version that don&apos;t take a Configuration... but man, thats ugly creating a Configuration inside in the method.  Needs WARNINGS in javadoc: &quot;DON&quot;T DO IT!!!!!&quot;&lt;/p&gt;


&lt;p&gt;Follow formatting of method opening as is done elsewhere in this file; the below is different:&lt;/p&gt;

&lt;p&gt;+  private static boolean isLHSSplit(final byte[] regionName,$&lt;br/&gt;
+                                    final int offset) throws IOException {$&lt;/p&gt;

&lt;p&gt;The above method needs a bit of doc on what its about.  And there should be a blank line after each method ... there is none here.&lt;/p&gt;

&lt;p&gt;The below method does not look right and should be deprecated anyways (Its returning region name?  At least warn it don&apos;t work any more)?&lt;/p&gt;

&lt;p&gt;   /**$&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Get current table name of the region$&lt;br/&gt;
+   * Get the tablename of the region from the regionKey$&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;@return byte array of table name$&lt;br/&gt;
    */$&lt;br/&gt;
   public byte[] getTableName() {$&lt;br/&gt;
     if (tableName == null || tableName.length == 0) {$&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;tableName = getTableName(getRegionName());$&lt;br/&gt;
+      tableName = getRegionName();$&lt;br/&gt;
     }$&lt;br/&gt;
     return tableName;$&lt;br/&gt;
   }$&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The below &apos;table name&apos; pollution does not belong in KV.  Better in HTableDescriptor?&lt;/p&gt;

&lt;p&gt;+  private static String UUIDMetaTableKey = UUID.nameUUIDFromBytes(Bytes.toBytes(&quot;.META.&quot;)).toString();&lt;/p&gt;

&lt;p&gt;Besides ain&apos;t this a constant length?  Why bother calc it?&lt;/p&gt;

&lt;p&gt;Why we doing this calc anyways?  Ain&apos;t all table lengths now the same whether they are catalog (meta) tables or not?&lt;/p&gt;


&lt;p&gt;The below is a regression that your patch shouldn&apos;t be letting in:&lt;/p&gt;


&lt;p&gt;-import org.apache.hadoop.hbase.client.Get;&lt;br/&gt;
-import org.apache.hadoop.hbase.client.HTable;&lt;br/&gt;
-import org.apache.hadoop.hbase.client.Result;&lt;br/&gt;
-import org.apache.hadoop.hbase.client.ResultScanner;&lt;br/&gt;
-import org.apache.hadoop.hbase.client.Scan;&lt;br/&gt;
+import org.apache.hadoop.hbase.client.*;&lt;/p&gt;


&lt;p&gt;THis don&apos;t look right (variable name is wrong or something):&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;HRegionLocation firstMetaServer = getFirstMetaServerForTable(tableName);$&lt;br/&gt;
 +    HRegionLocation firstMetaServer = getLastMetaServerForTable(tableName);$&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Do we still need this nines stuff?&lt;/p&gt;


&lt;p&gt; 704 -      HRegionInfo.createRegionName(tableName, null, HConstants.NINES, false));$&lt;br/&gt;
 705 +      HRegionInfo.createRegionName(tableName, null, null, HConstants.NINES.getBytes(), false));$&lt;/p&gt;

&lt;p&gt;We know what end region in a table is called?&lt;/p&gt;

&lt;p&gt;Why you have to hardcode?  Can you not pass tableName here like it used to?&lt;/p&gt;

&lt;p&gt; 727 -        return locateRegionInMeta(HConstants.ROOT_TABLE_NAME, tableName, row,$&lt;br/&gt;
 728 -            useCache, metaRegionLock);$&lt;br/&gt;
 729 +$&lt;br/&gt;
 730 +        //HARD CODED TO POINT TO THE FIRST META TABLE$&lt;br/&gt;
 731 +        return locateRegionInMeta(HConstants.ROOT_TABLE_NAME,$&lt;br/&gt;
 732 +                                  HConstants.META_TABLE_NAME,$&lt;br/&gt;
 733 +                                  HConstants.EMPTY_BYTE_ARRAY,$&lt;br/&gt;
 734 +                                  useCache,$&lt;br/&gt;
 735 +                                  metaRegionLock);$&lt;/p&gt;

&lt;p&gt;This exception is not correct for the condition found?&lt;/p&gt;

&lt;p&gt; 762 +      if (result == null) {$&lt;br/&gt;
 763 +        throw new TableNotFoundException(Bytes.toString(tableName));$&lt;br/&gt;
 764 +      }$&lt;/p&gt;

&lt;p&gt;This is nice:&lt;/p&gt;

&lt;p&gt; 820 -      byte [] metaKey = HRegionInfo.createRegionName(tableName, row,$&lt;br/&gt;
 821 -        HConstants.NINES, false);$&lt;br/&gt;
 822 +      final byte [] metaKey = MetaSearchRow.getStartRow(tableName, row);$&lt;/p&gt;


&lt;p&gt;Getting rid of that wacky 9s stuff.&lt;/p&gt;

&lt;p&gt;Are we sure second region is not also offline or split &amp;#8211; or nvm, I see you doing check later?&lt;/p&gt;

&lt;p&gt; 899 +              regionInfoRow = result&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;;$&lt;br/&gt;
 900 +              regionInfo =  resultToHRegionInfo(regionInfoRow,$&lt;br/&gt;
 901 +                                                   tableName,$&lt;br/&gt;
 902 +                                                   parentTable);$&lt;br/&gt;
 903 +              if (regionInfo.isOffline()) {$&lt;br/&gt;
 904 +                regionInfoRow = result&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;;$&lt;br/&gt;
 905 +                regionInfo =  resultToHRegionInfo(regionInfoRow,$&lt;br/&gt;
 906 +                        tableName,$&lt;br/&gt;
 907 +                        parentTable);$&lt;/p&gt;

&lt;p&gt;Should we scan forward more than two rows and put rest into cache (we had something doing this in current code)&lt;/p&gt;

&lt;p&gt;CHange in HTable is white space only.&lt;/p&gt;

&lt;p&gt;MetaSearchRow is utilities for doing searches on meta table?  Seems more generic than that?  Maybe methods belong in HTableDescriptor as utility methods or maybe&lt;br/&gt;
even in Scan?&lt;/p&gt;

&lt;p&gt;We need this nines stuff in below?&lt;/p&gt;

&lt;p&gt;1117 +  public static byte[] getStopRow(final byte[] tableName) {$&lt;br/&gt;
1118 +    final byte[] uuidTableName = UUID.nameUUIDFromBytes(tableName).toString().getBytes();$&lt;br/&gt;
1119 +    byte[] b = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;uuidTableName.length + 3 + HConstants.NINES.getBytes().length&amp;#93;&lt;/span&gt;;$&lt;br/&gt;
1120 +    int offset = uuidTableName.length;$&lt;br/&gt;
1121 +    System.arraycopy(uuidTableName, 0, b, 0, offset);$&lt;br/&gt;
1122 +$&lt;br/&gt;
1123 +    b&lt;span class=&quot;error&quot;&gt;&amp;#91;offset++&amp;#93;&lt;/span&gt; = (byte) (HRegionInfo.END_OF_TABLE_NAME_FOR_EMPTY_ENDKEY + 1);$&lt;br/&gt;
1124 +    b&lt;span class=&quot;error&quot;&gt;&amp;#91;offset++&amp;#93;&lt;/span&gt; = HRegionInfo.DELIMITER;$&lt;br/&gt;
1125 +    b&lt;span class=&quot;error&quot;&gt;&amp;#91;offset++&amp;#93;&lt;/span&gt; = HRegionInfo.DELIMITER;$&lt;br/&gt;
1126 +    System.arraycopy(HConstants.NINES.getBytes(), 0, b, offset, HConstants.NINES.getBytes().length);$&lt;br/&gt;
1127 +    return b;$&lt;br/&gt;
1128 +  }$&lt;/p&gt;

&lt;p&gt;We know the &apos;stop row&apos; is tablename uuid&apos;d + 0x02 + empty row.  If we get a row &amp;gt; than this one, we are into new table?&lt;/p&gt;

&lt;p&gt;Do we need the zeros anymore in the below?  Ain&apos;t the region we want the first one we bump into if specify tablename+0x01+row?&lt;/p&gt;

&lt;p&gt;1155 +  public static byte[] getStartRow(final byte[] tableName, final byte[] searchRow) {$&lt;br/&gt;
1156 +    // Get first region in META$&lt;br/&gt;
1157 +    final byte[] uuidTableName = UUID.nameUUIDFromBytes(tableName).toString().getBytes();$&lt;br/&gt;
1158 +$&lt;br/&gt;
1159 +    if (searchRow == null || searchRow.length == 0) {$&lt;br/&gt;
1160 +      byte[] startRow = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;uuidTableName.length + 3 + HConstants.ZEROES.getBytes().length&amp;#93;&lt;/span&gt;;$&lt;br/&gt;
1161 +      System.arraycopy(uuidTableName, 0, startRow, 0, uuidTableName.length);$&lt;br/&gt;
1162 +      startRow&lt;span class=&quot;error&quot;&gt;&amp;#91;uuidTableName.length&amp;#93;&lt;/span&gt; = HRegionInfo.END_OF_TABLE_NAME - 1;$&lt;br/&gt;
1163 +      startRow&lt;span class=&quot;error&quot;&gt;&amp;#91;uuidTableName.length + 1&amp;#93;&lt;/span&gt; = HRegionInfo.DELIMITER;$&lt;br/&gt;
1164 +      startRow&lt;span class=&quot;error&quot;&gt;&amp;#91;uuidTableName.length + 2&amp;#93;&lt;/span&gt; = HRegionInfo.DELIMITER;$&lt;br/&gt;
1165 +      System.arraycopy(HConstants.ZEROES.getBytes(), 0, startRow, uuidTableName.length + 3, HConstants.ZEROES.getBytes().length);$&lt;br/&gt;
1166 +$&lt;br/&gt;
1167 +      return startRow;$&lt;br/&gt;
1168 +    }$&lt;/p&gt;

&lt;p&gt;For new files, you do not need this line:&lt;/p&gt;

&lt;p&gt;+ * Copyright 2007 The Apache Software Foundation&lt;/p&gt;


&lt;p&gt;I don&apos;t think the below test is necessary &amp;#8211; especially if it means spinning up a cluster:&lt;/p&gt;

&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfoGetTableName.java&lt;/p&gt;</comment>
                            <comment id="13174592" author="zhihyu@ebaysf.com" created="Thu, 22 Dec 2011 03:20:43 +0000"  >&lt;blockquote&gt;&lt;p&gt;Why not as if (endKey == null) allocation += endKey.length;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think Stack meant:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (endKey != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) allocation += endKey.length;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13174624" author="stack" created="Thu, 22 Dec 2011 05:40:18 +0000"  >&lt;p&gt;Yeah, what Zhihong said (Thanks Ted).&lt;/p&gt;

&lt;p&gt;One thought I had Alex was that we could narrow scope of this patch by not trying to hash table name to give it uniform length as part of this patch.  Instead, just do removal of getClosestOrBefore first (to do this you&apos;ll need to swap start for end row).  Hows that sound?   For your last-region-in-table trick, you have a DELIMITER of &apos;,&apos; currently.   Perhaps the last region has a &apos;;&apos;, which sorts after &apos;,&apos; and is illegal as a tablename character (The comparators would have to look for &apos;,&apos; AND &apos;;&apos; to find the table/row boundary).&lt;/p&gt;</comment>
                            <comment id="13174625" author="stack" created="Thu, 22 Dec 2011 05:41:21 +0000"  >&lt;p&gt;If you go that route, we should change name of this JIRA or just abandon it and open a focused new issue instead.&lt;/p&gt;</comment>
                            <comment id="13174934" author="posix4e" created="Thu, 22 Dec 2011 18:06:02 +0000"  >&lt;p&gt;So on the first part about using printable chars in for the last region. Consider the fact that ! is a valid table char as far as I know and comes before other printable chars on the ascii table so that&apos;s out. &lt;/p&gt;

&lt;p&gt;I am not a big fan of the table to int mapping as I think it provides for another level of complexity and it&apos;s own synchronization issues. Also, having to do a direct (hdfs) filesystem operation for adding or removing regions seems like a bad idea. After all opening files in hdfs takes like 200ms. It&apos;d probably be better to have another table like meta/root for something like this. If your worried about using 29 chars consider it&apos;s most likely small when  compared to the size of the hri/row key. If we really want to cut down on space we can just the 128bits of the md5 directly, it will make it even more difficult to read, but it will be compact.&lt;/p&gt;

&lt;p&gt;Pros to pulling the tablename out:&lt;br/&gt;
Constant overhead for large tablenames&lt;br/&gt;
More flexibility on what can be a tablename&lt;br/&gt;
More deterministic overhead&lt;/p&gt;

&lt;p&gt;Cons:&lt;br/&gt;
More difficult to debug&lt;br/&gt;
Not what we do now&lt;/p&gt;

&lt;p&gt;Pros to md5 vs lookup table:&lt;br/&gt;
One less table piece of state&lt;br/&gt;
Easier to debug&lt;br/&gt;
Tables from one cluster wont clobber tables from another&lt;/p&gt;

&lt;p&gt;Cons to the md5 approach:&lt;br/&gt;
More key space overhead than a lookup table(although not with the binary approach)&lt;/p&gt;</comment>
                            <comment id="13174935" author="posix4e" created="Thu, 22 Dec 2011 18:06:26 +0000"  >&lt;p&gt;On the moving of directories. We could easily remove the patch which changes the format of the id if we feel as though moving directories is a bad idea.&lt;/p&gt;</comment>
                            <comment id="13174978" author="posix4e" created="Thu, 22 Dec 2011 19:19:39 +0000"  >&lt;p&gt;On why not just do if (endKey != null) allocation += endKey.length;&lt;br/&gt;
we need to allocate at least 1 for the delimiter. I can break it up into two statements if the ternary is confusing, for now I&apos;ll just add a comment in my branch.&lt;/p&gt;</comment>
                            <comment id="13175067" author="posix4e" created="Thu, 22 Dec 2011 21:15:47 +0000"  >&lt;p&gt;I really think these functions should be removed. It locks us into either having a metadata hit, or Having regionNames in which the tablename is embedded(reversible). After all there already is a getTableName, this static one just doesn&apos;t seem useful. &lt;/p&gt;


&lt;p&gt;===============&lt;br/&gt;
+ public static byte [] getTableName(byte[] regionName, Configuration conf)$&lt;/p&gt;

&lt;p&gt;This is ugly, but maybe its ok? You&apos;ve deprecated it (but you need to point user elsewhere when you deprecate something). What you thinking? That it should&lt;br/&gt;
just not be possible to get tablename from an HRI going forward? This is kinda ugly method anyways... no longer used I&apos;d say so fine if its going away (I seem to remember it was written for some strange context where needed to find tablename walking filesystem but no cluster up).&lt;/p&gt;

&lt;p&gt;Ditto for the version that don&apos;t take a Configuration... but man, thats ugly creating a Configuration inside in the method. Needs WARNINGS in javadoc: &quot;DON&quot;T DO IT!!!!!&quot;&lt;/p&gt;

&lt;p&gt;Follow formatting of method opening as is done elsewhere in this file; the below is different:&lt;/p&gt;

&lt;p&gt;+ private static boolean isLHSSplit(final byte[] regionName,$&lt;br/&gt;
+ final int offset) throws IOException {$&lt;/p&gt;

&lt;p&gt;The above method needs a bit of doc on what its about. And there should be a blank line after each method ... there is none here.&lt;/p&gt;

&lt;p&gt;The below method does not look right and should be deprecated anyways (Its returning region name? At least warn it don&apos;t work any more)?&lt;/p&gt;

&lt;p&gt;/**$&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Get current table name of the region$&lt;br/&gt;
+ * Get the tablename of the region from the regionKey$&lt;br/&gt;
@return byte array of table name$&lt;br/&gt;
*/$&lt;br/&gt;
public byte[] getTableName() {$&lt;br/&gt;
if (tableName == null || tableName.length == 0) {$&lt;br/&gt;
tableName = getTableName(getRegionName());$&lt;br/&gt;
+ tableName = getRegionName();$&lt;br/&gt;
}$&lt;br/&gt;
return tableName;$&lt;br/&gt;
}$&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13175109" author="stack" created="Thu, 22 Dec 2011 22:20:45 +0000"  >&lt;p&gt;You can&apos;t remove them w/o deprecating them first.&lt;/p&gt;

&lt;p&gt;On your other comments:&lt;/p&gt;

&lt;p&gt;What about my proposal that you narrow scope of this patch and attach the priority issue, removing get closestorbefore, and do uuid/md5&apos;ing in another issue?&lt;/p&gt;

&lt;p&gt;&apos;!&apos; is not legal table char.  Here is the function that tests legal characters: &lt;a href=&quot;http://hbase.apache.org/xref/org/apache/hadoop/hbase/HTableDescriptor.html#278&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/xref/org/apache/hadoop/hbase/HTableDescriptor.html#278&lt;/a&gt;  Anything less than &apos;-&apos;, the lowest allowable table character should do.  &apos;,&apos; qualifies (just about) though it would have to be the character to designate the last region and we&apos;d need another delimiter for non-end-regions... most chars are problematic but could use a &apos;+&apos; (I think) or a &apos;#&apos; &amp;#8211; but this&apos;d be too ugly... need to think of something better.&lt;/p&gt;

&lt;p&gt;Agree on not doing int for table name; problematic when replicating not to mind the complexity it adds (as you outline above).&lt;/p&gt;

&lt;p&gt;I like your pros and cons table.&lt;/p&gt;
</comment>
                            <comment id="13184541" author="posix4e" created="Wed, 11 Jan 2012 23:37:16 +0000"  >&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13184542" author="posix4e" created="Wed, 11 Jan 2012 23:37:16 +0000"  >&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13237252" author="hadoopqa" created="Fri, 23 Mar 2012 22:54:01 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12507978/HBASE-4616-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12507978/HBASE-4616-v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 41 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1285//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1285//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12507381" name="HBASE-4616-v2.patch" size="102457" author="posix4e" created="Wed, 14 Dec 2011 17:29:59 +0000"/>
                            <attachment id="12507978" name="HBASE-4616-v3.patch" size="107476" author="posix4e" created="Mon, 19 Dec 2011 21:27:17 +0000"/>
                            <attachment id="12505556" name="HBASE-4616.patch" size="84459" author="posix4e" created="Tue, 29 Nov 2011 23:10:24 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12522848">HBASE-4382</subtask>
                            <subtask id="12527687">HBASE-4617</subtask>
                            <subtask id="12533207">HBASE-4895</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Nov 2011 23:57:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>89005</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 38 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hrjz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101726</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>