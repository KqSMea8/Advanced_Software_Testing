<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:32:15 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5930/HBASE-5930.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5930] Limits the amount of time an edit can live in the memstore.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5930</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;A colleague of mine ran into an interesting issue.&lt;br/&gt;
He inserted some data with the WAL disabled, which happened to fit in the aggregate Memstores memory.&lt;/p&gt;

&lt;p&gt;Two weeks later he a had problem with the HDFS cluster, which caused the region servers to abort. He found that his data was lost. Looking at the log we found that the Memstores were not flushed at all during these two weeks.&lt;/p&gt;

&lt;p&gt;Should we have an option to flush memstores periodically. There are obvious downsides to this, like many small storefiles, etc.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12553819">HBASE-5930</key>
            <summary>Limits the amount of time an edit can live in the memstore.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="devaraj">Devaraj Das</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Thu, 3 May 2012 19:55:18 +0000</created>
                <updated>Tue, 4 Jun 2013 00:06:57 +0000</updated>
                            <resolved>Wed, 15 May 2013 19:38:07 +0000</resolved>
                                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.94.8</fixVersion>
                    <fixVersion>0.95.1</fixVersion>
                                        <due></due>
                            <votes>1</votes>
                                    <watches>23</watches>
                                                                <comments>
                            <comment id="13267754" author="tlipcon" created="Thu, 3 May 2012 19:59:33 +0000"  >&lt;p&gt;Seems reasonable to flush the memstore if it&apos;s had no write activity at all in N minutes. Then it shouldn&apos;t lead to smaller storefiles, right?&lt;/p&gt;</comment>
                            <comment id="13267765" author="lhofhansl" created="Thu, 3 May 2012 20:09:14 +0000"  >&lt;p&gt;What should trigger the flush is an interesting discussion in itself. Should we flush:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;after N timeunits of write inactivity, or&lt;/li&gt;
	&lt;li&gt;when the last flush happened more than N TUs ago&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The former would avoid smaller storefiles, the latter would put a limit on how stale an entry in the memstore can be.&lt;/p&gt;</comment>
                            <comment id="13267812" author="mcorgan" created="Thu, 3 May 2012 21:25:49 +0000"  >&lt;p&gt;Maybe add a boolean to the memstore to track if it contains edits that were not written to the WAL.  No need to auto-flush in the frequent case where all edits are in the WAL.&lt;/p&gt;</comment>
                            <comment id="13267826" author="jdcryans" created="Thu, 3 May 2012 21:36:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;No need to auto-flush in the frequent case where all edits are in the WAL.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;And we already roll every hour. From LogRoller:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;this.rollperiod = this.server.getConfiguration().getLong(&quot;hbase.regionserver.logroll.period&quot;, 3600000);&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Meaning that your data in the WAL can only be sitting there for so long.&lt;/p&gt;</comment>
                            <comment id="13267831" author="tlipcon" created="Thu, 3 May 2012 21:39:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;Maybe add a boolean to the memstore to track if it contains edits that were not written to the WAL&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5886&quot; title=&quot;Add new metric for possible data loss due to puts without WAL &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5886&quot;&gt;&lt;del&gt;HBASE-5886&lt;/del&gt;&lt;/a&gt; adds code which tracks how much un-WAL-ed data is in the memstore.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Meaning that your data in the WAL can only be sitting there for so long.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;But if we retain 20 or so HLogs, and we roll only every hour, then we still have 20 hours worth of data sitting there unflushed, which might be a little strange if the cluster is entirely idle.&lt;/p&gt;</comment>
                            <comment id="13268054" author="aoxiang" created="Fri, 4 May 2012 02:47:17 +0000"  >&lt;p&gt;This feature looks good.&lt;/p&gt;</comment>
                            <comment id="13268995" author="apurtell" created="Sat, 5 May 2012 16:19:20 +0000"  >&lt;p&gt;+1 We basically do the same thing as proposed but on the client side with a shared DAO layer.&lt;/p&gt;</comment>
                            <comment id="13269025" author="mcorgan" created="Sat, 5 May 2012 17:53:16 +0000"  >&lt;p&gt;Periodically flushing the memstore seems like a good feature to me.  Could also help clear out cold data from memory to make more room for bigger memstores on regions that are actually being used.&lt;/p&gt;

&lt;p&gt;A different solution to the underlying data loss issue might be to have a third client setting for WAL writing: NONE, SYNC, and ASYNC.  ASYNC would write the data to a memory buffer, return success to the client, and another thread would flush the buffer to the WAL.  The WAL would ideally only lag a few seconds behind the memstores, but some form of throttling would probably be needed.&lt;/p&gt;</comment>
                            <comment id="13269070" author="stack" created="Sat, 5 May 2012 22:09:23 +0000"  >&lt;p&gt;Is our deferred flush == ASYNC described above?&lt;/p&gt;</comment>
                            <comment id="13269074" author="lhofhansl" created="Sat, 5 May 2012 22:30:05 +0000"  >&lt;p&gt;That (deferred flush) is what I told my colleague to use last week.&lt;br/&gt;
Would be nice if the client could control this (in addition to writeToWal, we could have writeToWalAsynchronously - or something).&lt;/p&gt;

&lt;p&gt;A periodic memstore flush still make sense. If I get some time next week I&apos;ll come up with a patch (unless somebody else wants to take this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ).&lt;/p&gt;</comment>
                            <comment id="13269116" author="stack" created="Sun, 6 May 2012 04:47:12 +0000"  >&lt;p&gt;I like idea of client saying whether to put it on deferred flush queue or whether its to be flushed immediately.&lt;/p&gt;</comment>
                            <comment id="13410457" author="nkeywal" created="Tue, 10 Jul 2012 15:52:09 +0000"  >&lt;p&gt;I also think that a periodic memstore flush. Even with a WAL, it&apos;s seems safer/more efficient.&lt;br/&gt;
It seems that HBase had this a long long time ago:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.regionserver.optionalcacheflushinterval&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;1800000&amp;lt;/value&amp;gt;
    &amp;lt;description&amp;gt;
    Amount of time to wait since the last time a region was flushed before
    invoking an optional cache flush (An optional cache flush is a
    flush even though memcache is not at the memcache.flush.size).
    Default: 30 minutes (in miliseconds)
    &amp;lt;/description&amp;gt;
  &amp;lt;/property&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It could also be linked to major compactions (before a major compaction, flush &apos;old&apos; memstore)?&lt;/p&gt;</comment>
                            <comment id="13499603" author="lhofhansl" created="Sun, 18 Nov 2012 04:52:03 +0000"  >&lt;p&gt;I would like to pick this up again and add a flag to Mutation to indicate deferred WAL sync. If HRegion receives a batch of Mutation of which at least one is not marked as deferred the log is sync&apos;ed. Otherwise it is deferred.&lt;br/&gt;
This will mingle well later with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5954&quot; title=&quot;Allow proper fsync support for HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5954&quot;&gt;&lt;del&gt;HBASE-5954&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13560237" author="enis" created="Wed, 23 Jan 2013 00:37:13 +0000"  >&lt;p&gt;Regardless of whether mutations have deferred sync, we might always want to flush periodically. We are rolling the WAL periodically, but if we do not flush, we may end up with a lof of hlogs to recover from in case of failover. &lt;/p&gt;</comment>
                            <comment id="13560253" author="devaraj" created="Wed, 23 Jan 2013 00:48:14 +0000"  >&lt;p&gt;Yes, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, that&apos;s my plan..&lt;/p&gt;</comment>
                            <comment id="13561286" author="devaraj" created="Thu, 24 Jan 2013 00:43:40 +0000"  >&lt;p&gt;After going some back and forth, I decided to separate the issue of having the feature on asynchronous write to WAL from the periodic flush (and Enis also suggested the same in our offline discussions).&lt;/p&gt;

&lt;p&gt;This is a work-in-progress patch that does the periodic flush based on when was the last flush done, and whether there are any edits after the last flush in any memstore in that region. Resurrected the config hbase.regionserver.optionalcacheflushinterval. Not tested yet.&lt;/p&gt;</comment>
                            <comment id="13561302" author="enis" created="Thu, 24 Jan 2013 01:14:41 +0000"  >&lt;blockquote&gt;&lt;p&gt;I would like to pick this up again and add a flag to Mutation to indicate deferred WAL sync. If HRegion receives a batch of Mutation of which at least one is not marked as deferred the log is sync&apos;ed. Otherwise it is deferred.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I like the idea of having a deferred flush at the Put level. Now the weird thing is that it is per table, not per column family. I guess we can have per-table/per-cf or per batch deferred flush setting. &lt;br/&gt;
With this, maybe we will no longer need skipWAL if we can prove that deferred flush is as fast as skip WAL. Most of the time, we actually do not want to skip WAL, we just want a deferred flush.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I decided to separate the issue of having the feature on asynchronous write to WAL from the periodic flush&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 on doing separating the two. &lt;/p&gt;
</comment>
                            <comment id="13561358" author="lhofhansl" created="Thu, 24 Jan 2013 02:11:02 +0000"  >&lt;p&gt;I&apos;d be fine with this in 0.94 as well.&lt;/p&gt;</comment>
                            <comment id="13561460" author="devaraj" created="Thu, 24 Jan 2013 07:14:26 +0000"  >&lt;p&gt;Simplified the logic that checks whether to do flush or not (HRegion.shouldFlush()).&lt;/p&gt;</comment>
                            <comment id="13561495" author="nkeywal" created="Thu, 24 Jan 2013 08:23:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;With this, maybe we will no longer need skipWAL if we can prove that deferred flush is as fast as skip WAL. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In standard database, skipping the WAL is often used when you&apos;re doing a functional upgrade requiring some unavailability time, i.e.:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;dump&lt;/li&gt;
	&lt;li&gt;run batch scripts to update your data&lt;/li&gt;
	&lt;li&gt;if anything goes wrong reload the dump&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For hundreds of reasons it makes much less sense with HBase, but it could happen (some companies don&apos;t need 24x24). So we should not remove the skipWAL imho, except if it really simplify something internally.&lt;/p&gt;


&lt;p&gt;On the patch itself, I have a question on adding some randomness. The scenario I&apos;m thinking about is a massive but periodic update on a table: all the regions will be written simultaneously, hence flushed simultaneously. That&apos;s the main use case for this JIRA, and this could hammer the namenode, imho. Except if we thing there is enough randomness by having a different flusher by regionserver (which may not be the case if all regions servers are started simultaneously). &lt;/p&gt;

&lt;p&gt;As a side note, I would personally like a flush interval of 10 minutes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;it would help on .META. recovery, especially with the separate wal for .META.&lt;/li&gt;
	&lt;li&gt;this allows to have more regions: today, on average and in theory, each region takes 50% of an hdfs block size of memory. The more regions we flush early, the more empty memstore we have...&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13561739" author="lhofhansl" created="Thu, 24 Jan 2013 16:36:13 +0000"  >&lt;p&gt;How can deferred log flush ever be as fast as not writing the WAL at all?&lt;br/&gt;
Considering only the latency of a single request that might be true in many cases, but it will definitely not be true on a busy cluster since all data is written to the disks twice.&lt;/p&gt;</comment>
                            <comment id="13561810" author="yuzhihong@gmail.com" created="Thu, 24 Jan 2013 18:10:16 +0000"  >&lt;p&gt;Where is PeriodicMemstoreFlusher instantiated ?&lt;br/&gt;
Currently MEMSTORE_PERIODIC_FLUSH_INTERVAL is read by both HRegion and PeriodicMemstoreFlusher.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; shouldFlush() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can we pass the interval to the above method so that HRegion doesn&apos;t need to introduce:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; flushCheckInterval;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What value for MEMSTORE_PERIODIC_FLUSH_INTERVAL would be interpreted as disabling the periodic flush ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13561837" author="devaraj" created="Thu, 24 Jan 2013 18:38:19 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, yeah what &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; meant IMHO is that the latency from the client&apos;s point of view would improve when deferred flush is used for the mutations. Also, we considered the case that users would most likely not want to skip WAL if we promise them that there wouldn&apos;t be latency issues (maybe on a busy cluster). But yeah, it&apos;d not make a difference on the overall IOPS in the cluster...&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt;, generally agree with you that we should not remove the skipWal option without giving it a real good thought and before considering more use cases. And, yes the idea of randomizing the flushes across regionservers sounds good. I&apos;ll think up how to incorporate that.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt;, good catch on the instantiation &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I was focusing on getting the logic right; forgot to instantiate the chore. I&apos;d prefer to leave the shouldFlush() signature as is (it&apos;s a matter of implementation that the shouldFlush method implementation is using the same constant underneath but it could be very well a different constant or shouldFlush implementation could be different sometime when this constant is not even used..).&lt;/p&gt;</comment>
                            <comment id="13562192" author="yuzhihong@gmail.com" created="Fri, 25 Jan 2013 00:24:38 +0000"  >&lt;p&gt;w.r.t. randomizing the flushes across regionservers, one approach is to introduce a new znode whose data is the outstanding count of flush requests, cluster wise. We place an upper bound on this count. PeriodicMemstoreFlusher wouldn&apos;t create new request if the count is at upper bound.&lt;/p&gt;</comment>
                            <comment id="13562213" author="lhofhansl" created="Fri, 25 Jan 2013 00:39:32 +0000"  >&lt;p&gt;That would work (using a znode). I do think it&apos;s fine to place an upper limit per regionserver, and maybe we won&apos;t need an upper limit at all.&lt;br/&gt;
I so like the idea of some randomness. We could stagger per memstore and add a random jigger that could be up to 1/2 (just making this up, though) of the flush interval. We&apos;d get a new random jigger number after each flush and at memstore creation.&lt;/p&gt;</comment>
                            <comment id="13562911" author="devaraj" created="Fri, 25 Jan 2013 19:00:11 +0000"  >&lt;p&gt;In this patch, I added a random sleep (upto the two minutes) before flushes. Changed the default flush interval to 10 minutes.&lt;/p&gt;</comment>
                            <comment id="13562912" author="devaraj" created="Fri, 25 Jan 2013 19:00:44 +0000"  >&lt;p&gt;Trying hudson&lt;/p&gt;</comment>
                            <comment id="13562933" author="hadoopqa" created="Fri, 25 Jan 2013 19:26:42 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12566533/5930-2.1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12566533/5930-2.1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.TestHeapSize&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4182//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13563163" author="yuzhihong@gmail.com" created="Fri, 25 Jan 2013 23:31:41 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Random rand = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Random();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please use SecureRandom.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+          } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException ie){
+            &lt;span class=&quot;code-comment&quot;&gt;//ignore&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please restore interrupt status.&lt;/p&gt;

&lt;p&gt;Should upper bound for the sleep take length of MemStoreFlusher.flushQueue into consideration ?&lt;br/&gt;
When many FlushQueueEntry&apos;s pile up in flushQueue, we may want to wait longer.&lt;/p&gt;

&lt;p&gt;Also, the sleep should be bounded by the remaining time w.r.t. cacheFlushInterval - we don&apos;t want the loop in chore() to outlast cacheFlushInterval.&lt;/p&gt;</comment>
                            <comment id="13563193" author="lhofhansl" created="Sat, 26 Jan 2013 00:12:37 +0000"  >&lt;p&gt;Absolutely not use SecureRandom here. We&apos;re not using this to generate cryptographics keys, but just some jitter for memstore flush timing, right?&lt;br/&gt;
SecureRandom will exhaust your locally generated entropy that is much better used in case where it is actually needed (and it can hang - on Linux at least - if not enough entropy has been collected)&lt;/p&gt;</comment>
                            <comment id="13563217" author="lhofhansl" created="Sat, 26 Jan 2013 00:38:54 +0000"  >&lt;p&gt;I think the delay should algorithmically related to the flush interval (like interval / 3 or something, could make the jitter factor configurable).&lt;br/&gt;
Could we fold the jitter into shouldFlush() rather than actually waiting in chore()?&lt;/p&gt;</comment>
                            <comment id="13563225" author="devaraj" created="Sat, 26 Jan 2013 00:52:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think the delay should algorithmically related to the flush interval&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think what I currently have has a certain advantage - like if the configured value of cacheflushinterval is too low or something, the chore will be triggered very often but the sleep interval (0 - 2 minutes) would keep the #flushes under control. But yeah, I can always enforce a minimum delay before each flush.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Could we fold the jitter into shouldFlush() rather than actually waiting in chore()?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think that shouldFlush shouldn&apos;t be involved in determining how much to delay the flush. Do you see any issues in waiting in the chore?&lt;/p&gt;</comment>
                            <comment id="13563261" author="devaraj" created="Sat, 26 Jan 2013 01:06:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should upper bound for the sleep take length of MemStoreFlusher.flushQueue into consideration ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt;, I think we don&apos;t have to worry about this one as much. The reason being that there is a random delay before each flush is inserted in the queue (as opposed to inserts coming in at a rate faster than what the flusher can handle).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also, the sleep should be bounded by the remaining time w.r.t. cacheFlushInterval - we don&apos;t want the loop in chore() to outlast cacheFlushInterval.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This should be fine. I don&apos;t see issues with this one.&lt;/p&gt;</comment>
                            <comment id="13564097" author="lhofhansl" created="Mon, 28 Jan 2013 07:28:25 +0000"  >&lt;p&gt;Hmm... This is a bit more difficult than I thought.&lt;/p&gt;

&lt;p&gt;I think what we want to limit is this: The maximum time an unflushed edit will remain in the memstore. Otherwise one could trickle in edit 1 every hour and get very old data in the memstore.&lt;br/&gt;
(Doing that could potentially also be cheaper as we do not need to retrieve the current time on each edit, just the first one after a flush).&lt;/p&gt;

&lt;p&gt;If that is true, then what we want track is not the time of the newest edit, but the time of oldest unflushed edit, and flush if that gets too old.&lt;br/&gt;
In order to avoid flushing all memstores at the same time, we want to offset the memstores flush times.&lt;br/&gt;
We can do it the way you have it.&lt;br/&gt;
(but it seems natural to me to do that at the place where we detect that the memstore needs to be flushed. For this to work the chore needs to wake up more frequently than the flush interval.)&lt;/p&gt;

&lt;p&gt;Btw. the flush interval you have a 10mins, not 1h.&lt;/p&gt;</comment>
                            <comment id="13564980" author="devaraj" created="Tue, 29 Jan 2013 01:57:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, I think the patch addresses the use case you mention. The shouldFlush call in HRegion first does a global check whether there was a recent flush done, and if so, returns. If not, it goes over the memstores and if there is a memstore edit that happened after the last flush (and due to the previous global check, implicitly after the timeinterval), it returns true indicating that a flush is needed now. In general, if a memstore has at least one edit after the last flush, and the last flush happened before the timeinterval (let&apos;s say configured to 60 minutes), then a flush will be triggered now. The flushes are offset by a random sleep related up to a max of 2 minutes.&lt;/p&gt;

&lt;p&gt;The attached patch addresses a few of Ted&apos;s comments (setting the interrupt status back in the PeriodicMemstoreFlusher chore). It also puts a minimum delay of 1 sec between flushed. It makes the default sleep to 60 minutes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, would appreciate if you could take a look at this please, and let me know if I missed anything in the patch w.r.t the scenario you outlined..&lt;/p&gt;</comment>
                            <comment id="13565003" author="hadoopqa" created="Tue, 29 Jan 2013 02:28:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12566881/5930-2.2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12566881/5930-2.2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.TestHeapSize&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4226//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13571813" author="devaraj" created="Tue, 5 Feb 2013 22:31:34 +0000"  >&lt;p&gt;Attaching another rev of the patch. Changed the policies for flushing some. Here is a summary:&lt;br/&gt;
0. If the last flush happened in the last 60 minutes don&apos;t request another flush now for the region in question.&lt;br/&gt;
1. For a region, a flush is requested if the following is true:&lt;br/&gt;
   1.1. If the region is the meta region, and if there is at least one edit after the last flush request another flush now.&lt;br/&gt;
   1.2. If the region is not one of the meta regions, a flush is requested,&lt;br/&gt;
     1.2.1. if the last edit is more than 1 minute old, or,&lt;br/&gt;
     1.2.2. if the region wasn&apos;t flushed in the last two flush cycles (this was Enis&apos;s suggestion)&lt;/p&gt;

&lt;p&gt;I also added a new API in FlushRequester to do flush requests with a delay. That is used by the chore (earlier I used to throttle the flushes by doing a sleep in the chore and that seemed a little odd).&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="13571929" author="hadoopqa" created="Tue, 5 Feb 2013 23:42:47 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12568108/5930-2.3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12568108/5930-2.3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestAdmin&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4344//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13572632" author="devaraj" created="Wed, 6 Feb 2013 18:16:15 +0000"  >&lt;p&gt;I should add that making the checks as described before prevents some potentially unneeded flushes, while bounding the max duration an edit lives in the memstore... &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, could you please take a look at the patch.&lt;/p&gt;</comment>
                            <comment id="13573705" author="hadoopqa" created="Thu, 7 Feb 2013 17:48:03 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12568108/5930-2.3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12568108/5930-2.3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.security.access.TestAccessControlFilter&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4369//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13616335" author="nkeywal" created="Thu, 28 Mar 2013 15:13:18 +0000"  >&lt;p&gt;This one has been forgotten. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, do you have any opinion on the patch? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt;, I can finish the work (if any &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ) if you&apos;re busy.&lt;/p&gt;</comment>
                            <comment id="13616417" author="devaraj" created="Thu, 28 Mar 2013 16:53:36 +0000"  >&lt;p&gt;Hey &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt;, thanks for bringing this up. I was actually waiting for &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; to get back with his opinion on the latest patch... &lt;/p&gt;</comment>
                            <comment id="13620354" author="stack" created="Tue, 2 Apr 2013 22:25:08 +0000"  >&lt;p&gt;Moving to 0.95.1  Has question for you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13639213" author="stack" created="Tue, 23 Apr 2013 16:44:23 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; ping.  Question for you in above.&lt;/p&gt;</comment>
                            <comment id="13639805" author="hadoopqa" created="Tue, 23 Apr 2013 23:17:20 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12568108/5930-2.3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12568108/5930-2.3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5418//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5418//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13639890" author="devaraj" created="Wed, 24 Apr 2013 00:18:15 +0000"  >&lt;p&gt;Updated patch w.r.t the current trunk.&lt;/p&gt;</comment>
                            <comment id="13639961" author="hadoopqa" created="Wed, 24 Apr 2013 01:31:59 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12580196/5930-2.4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12580196/5930-2.4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5422//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13640019" author="lhofhansl" created="Wed, 24 Apr 2013 02:46:24 +0000"  >&lt;p&gt;I&apos;d have to reread the patch.&lt;br/&gt;
The semantics that we should achieve is a maximum time for an unlogged KV to remain in the memstore (this is different from periodic flushing - I misnamed this issue).&lt;/p&gt;</comment>
                            <comment id="13640707" author="devaraj" created="Wed, 24 Apr 2013 17:41:53 +0000"  >&lt;p&gt;Yes, Lars, I think the patch does what you talk about.&lt;/p&gt;</comment>
                            <comment id="13640745" author="lhofhansl" created="Wed, 24 Apr 2013 18:19:07 +0000"  >&lt;p&gt;Sorry if I seem difficult with this one... How about a theme like this:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;We record the time of the first edit made to the memstore after a flush. We can even improve this and only record the time of the first unlogged edit made.&lt;/li&gt;
	&lt;li&gt;Periodically we run the chore, if the recorded time of that first edit is older than a configurable X then we flush the memstore.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That would:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;be simpler&lt;/li&gt;
	&lt;li&gt;clearly limit the maximum an edit will stay in the memstore without being flushed&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13641298" author="devaraj" created="Thu, 25 Apr 2013 01:55:42 +0000"  >&lt;p&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Lars, I&apos;d appreciate if you kindly take a look at the patch. The patch as it stands is simple and also limits the maximum time an edit will stay un-flushed. The high level outline is here &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930?focusedCommentId=13571813&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13571813&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5930?focusedCommentId=13571813&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13571813&lt;/a&gt; (I have also put detailed comments in the shouldFlush method added in the patch)&lt;/p&gt;</comment>
                            <comment id="13641356" author="lhofhansl" created="Thu, 25 Apr 2013 03:26:54 +0000"  >&lt;p&gt;Why is the approach in the patch better than what I have described?&lt;/p&gt;

&lt;p&gt;I believe the approach I described is better in the following ways:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;The logic is simpler&lt;/li&gt;
	&lt;li&gt;We directly measure the age of oldest edit in the memstore, which is the exact metric we want to limit&lt;/li&gt;
	&lt;li&gt;We only have track the current time for the first KV inserted into the memstore after a flush (System.currentTimeMillis() is not free)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m happy to make a sample patch, then we can decide on the merit of the two patches.&lt;/p&gt;</comment>
                            <comment id="13641385" author="lhofhansl" created="Thu, 25 Apr 2013 04:00:58 +0000"  >&lt;p&gt;Here&apos;s a sample patch of what I mean.&lt;/p&gt;</comment>
                            <comment id="13641429" author="hadoopqa" created="Thu, 25 Apr 2013 05:11:17 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12580468/5930-track-oldest-sample.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12580468/5930-track-oldest-sample.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the trunk&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5444//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13641489" author="devaraj" created="Thu, 25 Apr 2013 06:27:43 +0000"  >&lt;p&gt;Cool. This looks like it exactly does what you stated in your last comment. +1 (not sure why releaseaudit failed, even though the structure of the patch is essentially the same as what I submitted before). I&apos;d like to commit this tomorrow morning unless I hear otherwise from anyone.&lt;/p&gt;</comment>
                            <comment id="13641987" author="ram_krish" created="Thu, 25 Apr 2013 17:35:12 +0000"  >&lt;p&gt;+1 on the Lars patch. &lt;/p&gt;</comment>
                            <comment id="13641993" author="devaraj" created="Thu, 25 Apr 2013 17:38:29 +0000"  >&lt;p&gt;Don&apos;t think the releaseaudit warning is caused by the last patch. It seems to be there in the other builds prior to this pre-commit build as well (is &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8431&quot; title=&quot;Fix missing headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8431&quot;&gt;&lt;del&gt;HBASE-8431&lt;/del&gt;&lt;/a&gt; the fix?). I ran the releaseaudit test locally and it passed.&lt;/p&gt;</comment>
                            <comment id="13642010" author="devaraj" created="Thu, 25 Apr 2013 17:53:24 +0000"  >&lt;p&gt;I committed this. Thanks for the last update on the patch, Lars.&lt;/p&gt;</comment>
                            <comment id="13642019" author="lhofhansl" created="Thu, 25 Apr 2013 18:02:36 +0000"  >&lt;p&gt;Whoa. You guys are fast. This was more of a sample patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I&apos;ll do a bit more double checking today.&lt;/p&gt;

&lt;p&gt;I would also like to have this 0.94. Any objections to that?&lt;/p&gt;</comment>
                            <comment id="13642022" author="devaraj" created="Thu, 25 Apr 2013 18:07:10 +0000"  >&lt;p&gt;Sure Lars, do the due diligence from your side. No objections for commit to 0.94.&lt;/p&gt;</comment>
                            <comment id="13642141" author="lhofhansl" created="Thu, 25 Apr 2013 20:06:29 +0000"  >&lt;p&gt;Let me keep that open until I have the 0.94 patch.&lt;/p&gt;</comment>
                            <comment id="13642165" author="lhofhansl" created="Thu, 25 Apr 2013 20:20:45 +0000"  >&lt;p&gt;And we should have had a test too.&lt;/p&gt;

&lt;p&gt;Can you think something up DD?&lt;/p&gt;</comment>
                            <comment id="13642177" author="lhofhansl" created="Thu, 25 Apr 2013 20:27:16 +0000"  >&lt;p&gt;Here&apos;s a 0.94 patch. Please have a look.&lt;/p&gt;</comment>
                            <comment id="13642182" author="devaraj" created="Thu, 25 Apr 2013 20:37:12 +0000"  >&lt;p&gt;Okay.. Will think of a test. Will look at the 0.94 patch.&lt;/p&gt;</comment>
                            <comment id="13642206" author="eclark" created="Thu, 25 Apr 2013 20:59:44 +0000"  >&lt;p&gt; hbase-server/src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java got the header removed with this commit.  Here&apos;s a quick addendum.&lt;/p&gt;</comment>
                            <comment id="13642231" author="devaraj" created="Thu, 25 Apr 2013 21:19:38 +0000"  >&lt;p&gt;Thanks, Elliott for catching this. I was testing releaseaudit - randomly chose a java file and removed the header with an intent to make releaseaudit fail. Forgot to revert the change before my commit.&lt;/p&gt;</comment>
                            <comment id="13642248" author="eclark" created="Thu, 25 Apr 2013 21:33:45 +0000"  >&lt;p&gt;Comitted the addendum and rat is clean again.  Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13642279" author="enis" created="Thu, 25 Apr 2013 22:06:14 +0000"  >&lt;p&gt;This is causing the test at patch &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2231&quot; title=&quot;Compaction events should be written to HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2231&quot;&gt;&lt;del&gt;HBASE-2231&lt;/del&gt;&lt;/a&gt; to fail. The reason is that we had a residual configuration in hbase-site.xml from earlier:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &amp;lt;name&amp;gt;hbase.regionserver.optionalcacheflushinterval&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;1000&amp;lt;/value&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I also was not able to understand when we put a delayed flush request to the queue, and later another request with no delay comes, it seems we will just ignore the latter one. Shouldn&apos;t we honor the no-delay one before waiting on the delay? &lt;/p&gt;</comment>
                            <comment id="13642284" author="enis" created="Thu, 25 Apr 2013 22:09:46 +0000"  >&lt;p&gt;Attaching addendum2 patch. Also the logs from the test execution. &lt;/p&gt;</comment>
                            <comment id="13642294" author="lhofhansl" created="Thu, 25 Apr 2013 22:15:33 +0000"  >&lt;p&gt;2nd addendum is good. Will add that to the 0.94 patch as well.&lt;br/&gt;
Are we good with the patch as is, or should we revert and work through the details?&lt;/p&gt;</comment>
                            <comment id="13642298" author="devaraj" created="Thu, 25 Apr 2013 22:21:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;I also was not able to understand when we put a delayed flush request to the queue, and later another request with no delay comes, it seems we will just ignore the latter one. Shouldn&apos;t we honor the no-delay one before waiting on the delay?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Makes sense to honor the no-delay one. I&apos;ll open an issue to take this into account.&lt;/p&gt;</comment>
                            <comment id="13642299" author="enis" created="Thu, 25 Apr 2013 22:22:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;Are we good with the patch as is, or should we revert and work through the details?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Either that or new issue. Whichever is the cleanest. &lt;/p&gt;</comment>
                            <comment id="13642308" author="devaraj" created="Thu, 25 Apr 2013 22:26:47 +0000"  >&lt;p&gt;Lars, I think the addendums fixes the issues to do with rat and the test, but I&apos;d like to open a separate issue on the queuing of flush requests. I&apos;ll get a patch by today (worst case tomorrow) and will do a 0.94 patch for that as well..&lt;/p&gt;</comment>
                            <comment id="13642315" author="lhofhansl" created="Thu, 25 Apr 2013 22:34:41 +0000"  >&lt;p&gt;Sounds good. We have time until 0.94.8, so we&apos;re good, unless &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; want&apos;s to release 0.95.1 tomorrow.&lt;/p&gt;</comment>
                            <comment id="13642583" author="hudson" created="Fri, 26 Apr 2013 04:28:14 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #4080 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4080/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4080/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt;. Removed a configuration that was causing unnecessary flushes in tests. (Revision 1475990)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt; Limits the amount of time an edit can live in the memstore. (Revision 1475970)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt;. Limits the amount of time an edit can live in the memstore. (Revision 1475872)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
ddas : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/resources/hbase-site.xml&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;eclark : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;ddas : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/FlushRequester.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13642615" author="devaraj" created="Fri, 26 Apr 2013 05:29:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;d like to open a separate issue on the queuing of flush requests&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;After some deliberations and code browsing, it seems like we don&apos;t need to do this. The reasons being:&lt;/p&gt;

&lt;p&gt;1. We already have the emergency flush procedure in place (MemStoreFlusher.flushRegion with an emergencyFlush boolean argument exists that is called when there is an urgent need to flush).&lt;/p&gt;

&lt;p&gt;2. In the normal steady state of affairs, entries from the queue are processed asynchronously anyway. Flushes are done by a thread and there is no guarantee when the thread picks a flush request up. By adding a delay, this situation is not worsened much, and especially in combination with (1) above.&lt;/p&gt;

&lt;p&gt;3. To address the issue raised, I was thinking that when a new flush request comes without a delay, we could remove an existing delayed-flush-request entry that was queued before, and queue a new one without a delay. However, there is a complication here - there is logic that queues up entries with delayed flushes in &lt;em&gt;MemStoreFlusher.flushRegion(final FlushRegionEntry)&lt;/em&gt;. That would be impacted if I did what I said.&lt;/p&gt;

&lt;p&gt;All in all, this doesn&apos;t seem like an issue.. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; also ack&apos;ed this in our offline discussions.&lt;/p&gt;</comment>
                            <comment id="13642684" author="hudson" created="Fri, 26 Apr 2013 08:34:36 +0000"  >&lt;p&gt;Integrated in hbase-0.95 #163 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/163/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/163/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt;. Removed a configuration that was causing unnecessary flushes in tests. (Revision 1475991)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt;. Limits the amount of time an edit can live in the memstore. (Revision 1475874)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
ddas : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/resources/hbase-site.xml&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;ddas : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/FlushRequester.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13642798" author="hudson" created="Fri, 26 Apr 2013 12:35:51 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #81 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/81/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/81/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt;. Removed a configuration that was causing unnecessary flushes in tests. (Revision 1475991)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt;. Limits the amount of time an edit can live in the memstore. (Revision 1475874)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
ddas : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/resources/hbase-site.xml&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;ddas : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/FlushRequester.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13642833" author="hudson" created="Fri, 26 Apr 2013 13:22:13 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #511 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/511/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/511/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt;. Removed a configuration that was causing unnecessary flushes in tests. (Revision 1475990)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt; Limits the amount of time an edit can live in the memstore. (Revision 1475970)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt;. Limits the amount of time an edit can live in the memstore. (Revision 1475872)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
ddas : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/resources/hbase-site.xml&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;eclark : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;ddas : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/FlushRequester.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13646397" author="lhofhansl" created="Wed, 1 May 2013 05:48:19 +0000"  >&lt;p&gt;Should I close this one and open a 0.94 backport patch?&lt;/p&gt;</comment>
                            <comment id="13646404" author="devaraj" created="Wed, 1 May 2013 06:03:20 +0000"  >&lt;p&gt;Sorry for the delay in getting back with a review on the 0.94 patch. I will get to it tomorrow. I am fine with a new jira for the 0.94 patch or using this one itself...&lt;/p&gt;</comment>
                            <comment id="13648650" author="devaraj" created="Fri, 3 May 2013 18:25:44 +0000"  >&lt;p&gt;Lars&apos;s patch with the addendum that Enis had submitted.&lt;/p&gt;</comment>
                            <comment id="13651133" author="lhofhansl" created="Tue, 7 May 2013 18:14:33 +0000"  >&lt;p&gt;Cool. If there are no objections I will commit this to 0.94 as well.&lt;br/&gt;
(Should this be disabled by default in 0.94? I can see this both ways.)&lt;/p&gt;</comment>
                            <comment id="13651139" author="enis" created="Tue, 7 May 2013 18:19:37 +0000"  >&lt;p&gt;+1 for this going to 0.94. &lt;/p&gt;</comment>
                            <comment id="13651140" author="jdcryans" created="Tue, 7 May 2013 18:21:35 +0000"  >&lt;p&gt;Would also be good to have a release note here since it&apos;s a new feature coming along with new configs.&lt;/p&gt;</comment>
                            <comment id="13655139" author="lhofhansl" created="Sat, 11 May 2013 03:55:50 +0000"  >&lt;p&gt;Added release notes. I also would like add an option to disable this feature (for example by setting base.regionserver.optionalcacheflushinterval to a value &amp;lt;= 0).&lt;/p&gt;</comment>
                            <comment id="13655298" author="devaraj" created="Sat, 11 May 2013 15:36:55 +0000"  >&lt;p&gt;Patch for trunk with the config for disabling this behavior.&lt;/p&gt;

&lt;p&gt;Complete patch for 0.94.&lt;/p&gt;</comment>
                            <comment id="13656248" author="lhofhansl" created="Mon, 13 May 2013 18:50:01 +0000"  >&lt;p&gt;Thanks DD (you beat me to the patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ). Was more thinking about not starting the chore at at all when disabled.&lt;br/&gt;
Then again, we do have per table (or CF) configs now, right? In that case this approach would be the right one.&lt;/p&gt;</comment>
                            <comment id="13656477" author="devaraj" created="Mon, 13 May 2013 22:40:40 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, yes, the configs could be per table/CF. All right, this patch has some unit tests as you earlier asked for it. If you are okay with it, I&apos;ll commit it in trunk/0.95, and post an updated one for 0.94.&lt;/p&gt;</comment>
                            <comment id="13656548" author="devaraj" created="Mon, 13 May 2013 23:53:25 +0000"  >&lt;p&gt;Had attached an incorrect patch earlier. This is the right one.&lt;/p&gt;</comment>
                            <comment id="13656585" author="lhofhansl" created="Tue, 14 May 2013 00:26:11 +0000"  >&lt;p&gt;Nice. +1 on addendum.&lt;/p&gt;</comment>
                            <comment id="13656615" author="devaraj" created="Tue, 14 May 2013 01:14:01 +0000"  >&lt;p&gt;Patch for 0.94 with the latest config/tests changes.&lt;/p&gt;</comment>
                            <comment id="13657849" author="lhofhansl" created="Wed, 15 May 2013 03:25:37 +0000"  >&lt;p&gt;This is the one for 0.94 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Will commit tomorrow unless I hear objections.&lt;/p&gt;</comment>
                            <comment id="13658696" author="lhofhansl" created="Wed, 15 May 2013 19:38:07 +0000"  >&lt;p&gt;Committed addendum to 0.95 and full patch to 0.94.&lt;br/&gt;
DD committed addendum to trunk on Monday. Closing.&lt;/p&gt;</comment>
                            <comment id="13658903" author="hudson" created="Wed, 15 May 2013 22:31:05 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #141 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/141/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/141/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt; Limits the amount of time an edit can live in the memstore. (Davaraj and LarsH) (Revision 1483022)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/security/src/test/resources/hbase-site.xml&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/FlushRequester.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/resources/hbase-site.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13658966" author="hudson" created="Wed, 15 May 2013 22:57:42 +0000"  >&lt;p&gt;Integrated in hbase-0.95 #196 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/196/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/196/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt; Addendum with tests. (Davaraj) (Revision 1483037)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13659222" author="hudson" created="Thu, 16 May 2013 04:50:41 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #984 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/984/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/984/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt; Limits the amount of time an edit can live in the memstore. (Davaraj and LarsH) (Revision 1483022)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/security/src/test/resources/hbase-site.xml&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/FlushRequester.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/resources/hbase-site.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13659272" author="hudson" created="Thu, 16 May 2013 06:13:06 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #101 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/101/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/101/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5930&quot; title=&quot;Limits the amount of time an edit can live in the memstore.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5930&quot;&gt;&lt;del&gt;HBASE-5930&lt;/del&gt;&lt;/a&gt; Addendum with tests. (Davaraj) (Revision 1483037)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12502631">HBASE-3707</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12551766">HBASE-5843</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12582789" name="5930-0.94-2.txt" size="15457" author="devaraj" created="Sat, 11 May 2013 15:36:55 +0000"/>
                            <attachment id="12583054" name="5930-0.94-added-addendum-with-tests.txt" size="20826" author="devaraj" created="Tue, 14 May 2013 01:14:01 +0000"/>
                            <attachment id="12581723" name="5930-0.94-added-addendum.txt" size="15361" author="devaraj" created="Fri, 3 May 2013 18:25:44 +0000"/>
                            <attachment id="12580577" name="5930-0.94.txt" size="14002" author="lhofhansl" created="Thu, 25 Apr 2013 20:27:16 +0000"/>
                            <attachment id="12566262" name="5930-1.patch" size="9921" author="devaraj" created="Thu, 24 Jan 2013 07:14:26 +0000"/>
                            <attachment id="12566533" name="5930-2.1.patch" size="13064" author="devaraj" created="Fri, 25 Jan 2013 19:00:11 +0000"/>
                            <attachment id="12566881" name="5930-2.2.patch" size="13275" author="devaraj" created="Tue, 29 Jan 2013 01:57:21 +0000"/>
                            <attachment id="12568108" name="5930-2.3.patch" size="17106" author="devaraj" created="Tue, 5 Feb 2013 22:31:34 +0000"/>
                            <attachment id="12580196" name="5930-2.4.patch" size="17063" author="devaraj" created="Wed, 24 Apr 2013 00:18:15 +0000"/>
                            <attachment id="12582788" name="5930-addendum-for-disabling.trunk.txt" size="1506" author="devaraj" created="Sat, 11 May 2013 15:36:55 +0000"/>
                            <attachment id="12583033" name="5930-addendum-for-disabling.trunk.with-tests.txt" size="7037" author="devaraj" created="Mon, 13 May 2013 23:53:25 +0000"/>
                            <attachment id="12583022" name="5930-addendum-for-disabling.trunk.with-tests.txt" size="7049" author="devaraj" created="Mon, 13 May 2013 22:40:40 +0000"/>
                            <attachment id="12580468" name="5930-track-oldest-sample.txt" size="14626" author="lhofhansl" created="Thu, 25 Apr 2013 04:00:58 +0000"/>
                            <attachment id="12566224" name="5930-wip.patch" size="10005" author="devaraj" created="Thu, 24 Jan 2013 00:43:40 +0000"/>
                            <attachment id="12580587" name="HBASE-5930-ADD-0.patch" size="1619" author="eclark" created="Thu, 25 Apr 2013 20:59:44 +0000"/>
                            <attachment id="12580601" name="hbase-5930-addendum2.patch" size="686" author="enis" created="Thu, 25 Apr 2013 22:09:45 +0000"/>
                            <attachment id="12580602" name="hbase-5930-test-execution.log" size="18576" author="enis" created="Thu, 25 Apr 2013 22:09:46 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 3 May 2012 19:59:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>238031</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 31 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hu9r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>102166</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>This feature limits the time that unflushed data will stay in the memstore.&lt;br/&gt;
By default a memstore will flush if data older than 1h (3600000ms) is present.&lt;br/&gt;
&lt;br/&gt;
This can be configured via hbase.regionserver.optionalcacheflushinterval (default value is 3600000).&lt;br/&gt;
</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>