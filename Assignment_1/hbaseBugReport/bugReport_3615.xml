<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:11:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3615/HBASE-3615.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3615] Implement token based DIGEST-MD5 authentication for MapReduce tasks</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3615</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;HBase security currently supports Kerberos authentication for clients, but this isn&apos;t sufficient for map-reduce interoperability, where tasks execute without Kerberos credentials.  In order to fully interoperate with map-reduce clients, we will need to provide our own token authentication mechanism, mirroring the Hadoop token authentication mechanisms.  This will require obtaining an HBase authentication token for the user when the job is submitted, serializing it to a secure location, and then, at task execution, having the client or task code de-serialize the stored authentication token and use that in the HBase client authentication process.&lt;/p&gt;

&lt;p&gt;A detailed implementation proposal is sketched out on the wiki:&lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/hadoop/Hbase/HBaseTokenAuthentication&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/Hbase/HBaseTokenAuthentication&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12500976">HBASE-3615</key>
            <summary>Implement token based DIGEST-MD5 authentication for MapReduce tasks</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ghelmling">Gary Helmling</assignee>
                                    <reporter username="ghelmling">Gary Helmling</reporter>
                        <labels>
                    </labels>
                <created>Thu, 10 Mar 2011 01:20:04 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:21 +0000</updated>
                            <resolved>Fri, 18 Nov 2011 08:02:03 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                                    <component>IPC/RPC</component>
                    <component>security</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13005380" author="apurtell" created="Thu, 10 Mar 2011 22:56:39 +0000"  >&lt;p&gt;Bringing into 0.92.&lt;/p&gt;</comment>
                            <comment id="13005513" author="stack" created="Fri, 11 Mar 2011 06:20:59 +0000"  >&lt;p&gt;I took a read off the wiki page Gary.  The goals seem pretty impossible though I&apos;m sure you&apos;ll pull it off.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;will need to persist somewhere (zookeeper?) to allow for master restarts and failover&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ZK seems good for storing a small thing that does not change.  Will the key be generally available if its in zk?&lt;/p&gt;

&lt;p&gt;Is there a &apos;secure&apos; location in hdfs?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;could be on region checkin/heartbeats, though stack is removing those&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.  Trying.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;but do we really need to do token renewal&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When would you need this?&lt;/p&gt;

&lt;p&gt;Yes, as you note, for case of multiple masters, on failover, new master will need to be able to pick up the token.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;FileSystem.getCanonicalServiceName() is used as the alias for HDFS delegation tokens, what should we use?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Whats this?  We need name for cluster instance?  I suppose we can&apos;t use master ip plus port because could change with time.  The zk ensemble string plus the zk rootdir?  This is ugly &amp;#8211; zk1,zk2,zk3,zk4,zk5/hbase3 where hbase3 is the homedir in zk of the third cluster running against this ensemble &amp;#8211; in that what do you do if you are passed zk1,zk2,zk3 and zk1,zk2,zk3,zk4,zk5?  Are they the same ensemble.  I think so.&lt;/p&gt;

&lt;p&gt;I can&apos;t comment on how secure it all is Gary.  I&apos;m clueless on that stuff.&lt;/p&gt;

&lt;p&gt;Doc. looks great.&lt;/p&gt;</comment>
                            <comment id="13005530" author="ghelmling" created="Fri, 11 Mar 2011 07:04:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;ZK seems good for storing a small thing that does not change. Will the key be generally available if its in zk?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This will rely on securing ZK with kerberos auth (Eugene has a patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-938&quot; title=&quot;Support Kerberos authentication of clients.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-938&quot;&gt;&lt;del&gt;ZOOKEEPER-938&lt;/del&gt;&lt;/a&gt;) and setting up ACLs.  We already need ZK secured as we use it to broadcast changes in ACLs to the RSs, so this seems to fit with that too.  Goes without saying, but using ZK security will be optional config as well from the HBase standpoint.&lt;/p&gt;

&lt;p&gt;We&apos;ll want to periodically roll master keys and communicate updates to RSs.  Hadoop rolls the &quot;current&quot; key every 24 hrs and keeps the last 7, so ZK again seems a good fit to communicate the changes.  I considered just storing the key IDs in ZK for change notification and storing key data in HDFS using file permissions for security, but that&apos;s just another piece that can break when we&apos;re securing ZK anyway.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When would you need this? &lt;span class=&quot;error&quot;&gt;&amp;#91;token renewal&amp;#93;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hadoop again does this.  I think the jobtracker is designed as the token &quot;renewer&quot; and then it pings the NN to keep it live for up to 7 days.  In that case, each token has a &quot;max date&quot;, but expiration is computed separately as current time + some window.  Expiration is a bit fuzzy in that implementation though, as the renewer can still resurrect expired tokens if the current time &amp;lt; the &quot;max date&quot; in the token.  In theory, it limits the window during which token disclosure allows impersonating the user.  If the token expires in 24 hours without renewal, &lt;em&gt;and&lt;/em&gt; the MR job completes in less than that time, then a disclosure of the token 25 hrs after issue, when the token has expired, and the JT has not needed to renew it, will not allow the token to be re-used to impersonate the user.  &lt;/p&gt;

&lt;p&gt;However, this doesn&apos;t really close the loop if you can somehow trick the JT (the designated &quot;renewer&quot;) into resurrecting the expired token for you.  Also, we can&apos;t use the built in JT renewal as it only works for Hadoop DelegationTokens, so something else would have to handle it for the duration of a job execution.  And it&apos;s not clear to me that it&apos;s a meaningful enhancement in security.  So I&apos;ve ignored the expiration/max date distinction and just made it expire date. &lt;/p&gt;

&lt;p&gt;On failure-over, the master would read in the current master keys from ZK and repopulate the valid tokens in memory as they&apos;re used, validating that they use an existing master key and haven&apos;t expired, err.. &quot;maxed out&quot;, yet.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Whats this? We need name for cluster instance? I suppose we can&apos;t use master ip plus port because could change with time. The zk ensemble string plus the zk rootdir?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, this part is a bit tricky.  I hadn&apos;t thought of cluster ensemble subsets.  I was going to ping JD on if replication had anything to use for similar purposes &amp;#8211; uniquely identify clusters to prevent replication loops, say.  Talking with Andy, he suggested generating a UUID on initial FS setup and adding it to hbase.version.  From there master could pop it up in ZK on startup?  Maybe I should open a separate JIRA for discussing that bit?&lt;/p&gt;

&lt;p&gt;Thanks for the comments!  I suppose I should clarify some of these bits on the wiki page.&lt;/p&gt;</comment>
                            <comment id="13006535" author="tlipcon" created="Mon, 14 Mar 2011 17:57:23 +0000"  >&lt;p&gt;Looks pretty good to me. One question - how are we going to get the build to work? For most of the security stuff we&apos;ve been able to use reflection, but since we need to add annotations to our RPC protocols, it might get kind of messy. Do we have to have a long running branch? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13006551" author="ghelmling" created="Mon, 14 Mar 2011 18:23:13 +0000"  >&lt;p&gt;Ah, good catch on the protocol annotations!  Yes, those definitely leak out the secure Hadoop classes.  The token auth stuff will be handling in a secure RPC engine enabled via the pluggable RPC engines configuration.  So the rest of the implementation will be separated out from the standard HBaseClient/Server.  We can duplicate the annotation interfaces &amp;#8211; I&apos;ll look into the implications of this for any lower level class dependencies.&lt;/p&gt;

&lt;p&gt;For build, I&apos;m thinking we have a separate optional build step (I guess practically this means a separate maven module?) with an isolated dependency on secure Hadoop.  The module would separate out source code for the secure RPC engine and AccessController coprocessor and generate a separate jar for these two security products.  (Both are already configured in via class names in hbase-site.xml and use established interfaces to prevent any direct dependencies from core HBase code).  It sounds workable to me, but I&apos;m too much of a maven noob to anticipate how difficult it&apos;ll be.&lt;/p&gt;

&lt;p&gt;I&apos;d love to start working out the build details with people at the hackathon next week.  But any thoughts before then are definitely welcome.&lt;/p&gt;</comment>
                            <comment id="13006589" author="ghelmling" created="Mon, 14 Mar 2011 19:38:48 +0000"  >&lt;p&gt;Thinking through the TokenInfo annotation issue a bit more, we could copy over the TokenInfo annotation and modify it to reference the Token &quot;kind&quot; from the token identifier for matching, then register the TokenSelector using the kind.&lt;/p&gt;

&lt;p&gt;I&apos;m wondering if we even need to go to this trouble &amp;#8211; we could have the implementation just register the selector class for each protocol class it handles.  But I suppose it&apos;s nice to have the protocols be a bit self-documenting.&lt;/p&gt;</comment>
                            <comment id="13009802" author="ghelmling" created="Tue, 22 Mar 2011 19:37:18 +0000"  >&lt;p&gt;Attaching a diff from the security branch (&lt;a href=&quot;https://github.com/trendmicro/hbase/tree/security&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/trendmicro/hbase/tree/security&lt;/a&gt;) implementing authentication tokens.  This builds on top of the secure RPC layer already in place (org.apache.hadoop.hbase.ipc.SecureClient, SecureRpcEngine, SecureServer), so sorry if changes to those are out of context.  If you&apos;d like to see a fuller patch with those included, just ask.&lt;/p&gt;

&lt;p&gt;You can ignore the changes to HBaseClient and HBaseServer.  Those are mostly fixes for subclassing of those by the secure RPC classes.&lt;/p&gt;

&lt;p&gt;Most relevant will be the classes in org.apache.hadoop.hbase.security.token, annotation changes for RPC interfaces, and hooks in org.apache.hadoop.hbase.security.User and TableMapReduceUtil to obtain tokens.&lt;/p&gt;</comment>
                            <comment id="13047635" author="stack" created="Fri, 10 Jun 2011 22:46:11 +0000"  >&lt;p&gt;Moving out of 0.92.0. Pull it back in if you think different.&lt;/p&gt;</comment>
                            <comment id="13152715" author="ghelmling" created="Fri, 18 Nov 2011 08:02:04 +0000"  >&lt;p&gt;Since tokens are one of the possible authentication methods during RPC, this was included as part of the change for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="15017499" author="lars_francke" created="Fri, 20 Nov 2015 12:43:21 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12431322">HBASE-1697</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12467142">HBASE-2742</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12474775">HBASE-3025</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12474325" name="HBASE-3615.patch" size="121290" author="ghelmling" created="Tue, 22 Mar 2011 19:37:17 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 10 Mar 2011 22:56:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33112</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d3sv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74392</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>