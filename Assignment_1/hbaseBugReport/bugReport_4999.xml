<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:23:51 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4999/HBASE-4999.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4999] Constraints - Enhance checkAndPut to do atomic arbitrary constraint checks</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4999</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Related work: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It would be great if checkAndPut (CAS) can be enhanced to not just use a value comparison as a gating factor for the put, but rather have the capability of doing arbitrary constraint checks on the column value (where the current comparinator approach is a subset of possible constraints that can be checked). Commonly used constraints (like comparisons) can be provided out of the box and we should have the ability to accept custom constraints set by the client for the checkAndPut call. &lt;/p&gt;

&lt;p&gt;One use-case would be the ability to implement something like the below in HBase.&lt;br/&gt;
Pseudo sql: &lt;br/&gt;
update table-name&lt;br/&gt;
set column-name = new-value&lt;br/&gt;
where (column-value - new-value) &amp;gt; threshold-value&lt;/p&gt;

&lt;p&gt;... where the mutation would go through only if the specified constraint in the where clause is true.&lt;/p&gt;

&lt;p&gt;Current options include using a co-processor to do preCheckAndPut/postCheckAndPut constraint checks - but this is not atomic. i.e. the row lock needs to be released by the co-processor before the real checkAndPut call, thus not meeting the atomic requirement. &lt;/p&gt;

&lt;p&gt;Everything above is still meant to be at row level (so, no cross-row constraint checking is implied here).&lt;/p&gt;

&lt;p&gt;And ideal end result would be that an HBase client would be able to specify a set of constraints on multiple column qualifiers as part of the checkAndPut call. The call goes through if all the constraints are satisfied or doesn&apos;t if any of the constraints fail. And the above checkAndPut should be atomically executed (just like current checkAndPut semantics).&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12534546">HBASE-4999</key>
            <summary>Constraints - Enhance checkAndPut to do atomic arbitrary constraint checks</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="4">Incomplete</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="svarma">Suraj Varma</reporter>
                        <labels>
                            <label>CAS</label>
                            <label>checkAndPut</label>
                            <label>constraints</label>
                    </labels>
                <created>Fri, 9 Dec 2011 21:29:58 +0000</created>
                <updated>Sat, 11 Apr 2015 01:19:50 +0000</updated>
                            <resolved>Sat, 11 Apr 2015 01:19:50 +0000</resolved>
                                                                    <component>Client</component>
                    <component>Coprocessors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13168050" author="jesse_yates" created="Tue, 13 Dec 2011 01:50:21 +0000"  >&lt;p&gt;Looking through the architecture for checkAndPut (as well as following up the discussion here: &lt;a href=&quot;http://search-hadoop.com/m/SgP0l1gb0TD&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search-hadoop.com/m/SgP0l1gb0TD&lt;/a&gt;), I think we can support this fairly easily. &lt;/p&gt;

&lt;p&gt;My thought would be that we essentially have a CheckCurrentConstraint that looks something like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class CheckCurrentConstraint{
	&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; void check(Put p, Result r) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ConstraintException;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So you have the current Put we want to make and then the actual row that we pull from the table in doing the check.&lt;/p&gt;

&lt;p&gt;This would be run in preCheckAndPut (or just preCheck). There may need to be a little jiggering in the HRegion around when this is is actually run, to ensure that we actually obtain the row lock. &lt;/p&gt;

&lt;p&gt;However, since the row lock would be taken for the row we are checking, no other puts are going to interfere and since we can use the MVCC to get concurrent reads out of the DB, the most up-to-date version should be retrievable without a problem.&lt;/p&gt;

&lt;p&gt;I&apos;m not a big fan of passing in the constraint on the client side and then running it on the server - that seems to break a lot of the intended functionality of constraints which should essentially act as a safeguard on your table. They should be something always run to make sure bad things aren&apos;t put into your table. Right now, they are able to use the configuration to make them highly maleable to running on different CFs and CQs (or not), but these should be things over the lifetime of the table. I can see a use case where client-side specification might be useful occasionally, but IMHO the general case is that it should be far more common to just set up the constraints once on the table according to organization policy and then modify them as necessary.&lt;/p&gt;

&lt;p&gt;Common constraints should be added later when we actually figure out what common use cases are for constraints - as a new feature we want to make sure we don&apos;t cowboy in and start adding excessive code willy-nilly. It tends to be a lot harder to remove code once its in, rather than add it later.&lt;/p&gt;
</comment>
                            <comment id="13168539" author="svarma" created="Tue, 13 Dec 2011 17:50:51 +0000"  >&lt;p&gt;I see this being used similar to a Filter which is specified client side and executes on the server. Just like we have some out of the box filters (added over time as well), I see some being provided out of the box. The ability to add client specified custom constraints would be akin to custom server side filters.&lt;/p&gt;

&lt;p&gt;I think specifying this completely on the server side via configuration (e.g. a constraint like column_name &amp;gt; threshold-value) may work &amp;amp; be sufficient for some cases. I&apos;m thinking of cases where the column names are dynamic (i.e. have ids or attribute values embedded in them) and cannot be specified purely server side via configuration. For these, we will need client specified constraints. Similarly, if I have multiple constraints on different column qualifiers that are a subset of all the qualifiers, the ability to specify this client side is much more flexible.&lt;/p&gt;

&lt;p&gt;So - again - this would work similar to how filters work, in my mind.&lt;/p&gt;</comment>
                            <comment id="13168686" author="jesse_yates" created="Tue, 13 Dec 2011 20:28:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;this would work similar to how filters work, in my mind.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yup, I can see that. Maybe that is going to be a rather big piece - we should consider moving that to its own ticket.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12527475">HBASE-4605</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Dec 2011 01:50:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>220268</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 1 week, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02elb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11965</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>constraints, CAS</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>