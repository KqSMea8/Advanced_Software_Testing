<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:50:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7965/HBASE-7965.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7965] Port table locking to 0.94 (HBASE-7305, HBASE-7546, HBASE-7933)</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7965</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Port table locking to 0.94 (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7305&quot; title=&quot;ZK based Read/Write locks for table operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7305&quot;&gt;&lt;del&gt;HBASE-7305&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7546&quot; title=&quot;Obtain a table read lock on region split operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7546&quot;&gt;&lt;del&gt;HBASE-7546&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7933&quot; title=&quot;NPE in TableLockManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7933&quot;&gt;&lt;del&gt;HBASE-7933&lt;/del&gt;&lt;/a&gt;). This is a new feature, but there has been some interest, and it is necessary for snapshots, and online merge, which are also candidates for backport. &lt;/p&gt;

&lt;p&gt;If we port snapshots, we might need &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7848&quot; title=&quot;Use ZK-based read/write lock to make flush-type snapshot robust against table enable/disable/alter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7848&quot;&gt;&lt;del&gt;HBASE-7848&lt;/del&gt;&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;We can also do disabled by default.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12634720">HBASE-7965</key>
            <summary>Port table locking to 0.94 (HBASE-7305, HBASE-7546, HBASE-7933)</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="enis">Enis Soztutar</assignee>
                                    <reporter username="enis">Enis Soztutar</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Mar 2013 00:02:14 +0000</created>
                <updated>Thu, 26 Sep 2013 04:42:50 +0000</updated>
                            <resolved>Wed, 15 May 2013 06:33:47 +0000</resolved>
                                                                    <component>master</component>
                    <component>Zookeeper</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13590152" author="enis" created="Fri, 1 Mar 2013 01:27:24 +0000"  >&lt;p&gt;Add &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7957&quot; title=&quot;CloneSnapshotHandler.prepare() is not called by SnapshotManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7957&quot;&gt;&lt;del&gt;HBASE-7957&lt;/del&gt;&lt;/a&gt; to the list&lt;/p&gt;</comment>
                            <comment id="13590653" author="jmhsieh" created="Fri, 1 Mar 2013 15:57:18 +0000"  >&lt;p&gt;Snapshots will likely benefit but does not require table locks.  (The potential failure rate when taking a snapshot will just be higher).&lt;/p&gt;</comment>
                            <comment id="13590831" author="lhofhansl" created="Fri, 1 Mar 2013 19:03:00 +0000"  >&lt;p&gt;+1 on this backport.&lt;br/&gt;
As I said before, HBase cannot be considered production ready if a config change in column family requires downtime (disable/enable the table).&lt;br/&gt;
I assume this will solve the online schema change problem?&lt;/p&gt;</comment>
                            <comment id="13590966" author="enis" created="Fri, 1 Mar 2013 21:44:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;I assume this will solve the online schema change problem?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Indeed. My tests show that online schema change with this works. Not sure how we can better test the stability. Any idea here? &lt;/p&gt;

&lt;p&gt;There are &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4815&quot; title=&quot;Disable online altering by default, create a config for it&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4815&quot;&gt;&lt;del&gt;HBASE-4815&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4814&quot; title=&quot;Starting an online alter when regions are splitting can leave their daughters unaltered&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4814&quot;&gt;&lt;del&gt;HBASE-4814&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4794&quot; title=&quot;Altering a tables that splits can hold the command for the CatalogJanitor sleep time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4794&quot;&gt;&lt;del&gt;HBASE-4794&lt;/del&gt;&lt;/a&gt; that we can revisit/resolve I think. &lt;/p&gt;

&lt;p&gt;I had also opened &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7639&quot; title=&quot;Enable online schema update by default &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7639&quot;&gt;&lt;del&gt;HBASE-7639&lt;/del&gt;&lt;/a&gt; for enabling online schema change by default. &lt;/p&gt;</comment>
                            <comment id="13590997" author="jmhsieh" created="Fri, 1 Mar 2013 22:12:15 +0000"  >&lt;p&gt;As much as I like the locking mechanisms, I&apos;m concerned about backporting them to a stable release.  Some questions I have in mind are:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Adding locks prevents races, but could enable deadlocks.  We&apos;ve lived with these races for a long time (at least since 0.90) and basically understand them.  This is a fundamentally different failure scenario and has me worried.&lt;/li&gt;
	&lt;li&gt;This is going to affect a vital path (can&apos;t use hbase if you can&apos;t create tables).  I&apos;d honestly like some evidence (a story!) about some long running tests with fault injection using this mechanism.  This will go a long way to allaying my concerns.&lt;/li&gt;
	&lt;li&gt;What is the rolling upgrade story (0.94.5 -&amp;gt; 0.94.7).  Does cause any incompatibilities?&lt;/li&gt;
&lt;/ol&gt;

</comment>
                            <comment id="13591154" author="enis" created="Sat, 2 Mar 2013 00:42:18 +0000"  >&lt;p&gt;Valid concerns. Let me try to address some of the these.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Adding locks prevents races, but could enable deadlocks. We&apos;ve lived with these races for a long time (at least since 0.90) and basically understand them. This is a fundamentally different failure scenario and has me worried.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;At this stage, there is no hbck support for fixing a table lock, but if deadlock happens, the user can just delete the lock znodes. Plus, I am proposing to backport this as disabled by default. All the lock operations are no-op if disabled, no critical code path will be affected by default. If needed, we can say that this feature is experimental in 0.94. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This is going to affect a vital path (can&apos;t use hbase if you can&apos;t create tables). I&apos;d honestly like some evidence (a story!) about some long running tests with fault injection using this mechanism. This will go a long way to allaying my concerns.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think I&apos;ve went to some details of how I did test these in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7305&quot; title=&quot;ZK based Read/Write locks for table operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7305&quot;&gt;&lt;del&gt;HBASE-7305&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7546&quot; title=&quot;Obtain a table read lock on region split operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7546&quot;&gt;&lt;del&gt;HBASE-7546&lt;/del&gt;&lt;/a&gt; and the RB for those. I&apos;ll consolidate the testing effort here. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;What is the rolling upgrade story (0.94.5 -&amp;gt; 0.94.7). Does cause any incompatibilities?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The set of patches has nothing to do with the wire protocol. I don&apos;t see your concern here. &lt;/p&gt;
</comment>
                            <comment id="13591180" author="eclark" created="Sat, 2 Mar 2013 01:13:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;What is the rolling upgrade story (0.94.5 -&amp;gt; 0.94.7). Does cause any incompatibilities?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;At some point the master will be a version that expects the locks to be honored.  The region servers will be in some indeterminate state.&lt;/p&gt;</comment>
                            <comment id="13591214" author="lhofhansl" created="Sat, 2 Mar 2013 02:12:47 +0000"  >&lt;p&gt;I think it boils down to this:&lt;br/&gt;
If we cannot convince Jon and Elliot sufficiently that this backport does not destabilize 0.94 then we should not do it. So what can we do to create confidence in this backport?&lt;/p&gt;

&lt;p&gt;(And as I said before, HBase is crippled for use in places like Salesforce if schema changes cannot be done without downtime... I am sure we&apos;re not the only ones).&lt;/p&gt;</comment>
                            <comment id="13591216" author="lhofhansl" created="Sat, 2 Mar 2013 02:13:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;At some point the master will be a version that expects the locks to be honored. The region servers will be in some indeterminate state.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That is only a concern if a table operation is in progress while we upgrade the cluster. That does not seems to be worse than the current state.&lt;/p&gt;</comment>
                            <comment id="13591241" author="enis" created="Sat, 2 Mar 2013 02:59:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;At some point the master will be a version that expects the locks to be honored. The region servers will be in some indeterminate state.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If you are doing rolling upgrade from a version which does not have table locks, to one that have 0.94.5 -&amp;gt; 0.95.7, and enale table locks, when master is updated, all ops will start acquiring the lock. And when regionservers are upgraded, the splits will start to get read locks. Until all of the cluster is upgraded, the situation will be the same as w/o table locks, that concurrent table ops and regions splits will cause headaches. It will be ok, if some of the servers knows table locks, while the master / other RSs does not know. You wont get the exclusion guarantee though. &lt;/p&gt;</comment>
                            <comment id="13591242" author="enis" created="Sat, 2 Mar 2013 03:03:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;If we cannot convince Jon and Elliot sufficiently that this backport does not destabilize 0.94 that we should not do it. So what can we do to create confidence in this backport?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Jon, Elliot, please see my notes at &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12571721/HBaseTableLocks.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12571721/HBaseTableLocks.pdf&lt;/a&gt;. I propose to port as disabled by default. In which case NullTableLockManager will be the TLM implementation doing no-ops. The implementation does not touch critical paths. &lt;/p&gt;</comment>
                            <comment id="13591251" author="lhofhansl" created="Sat, 2 Mar 2013 03:32:38 +0000"  >&lt;p&gt;I could also offer to put this release up on one of our test clusters and play around with it a bit (i.e. load 1bn rows into it, then do some schema changes, some manual splits, etc). This is not a full destructive comprehensive test of course.&lt;/p&gt;</comment>
                            <comment id="13591540" author="jmhsieh" created="Sat, 2 Mar 2013 22:00:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;HBase cannot be considered production ready if a config change in column family requires downtime (disable/enable the table).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;All the version of hbase we&apos;ve relased up to now had this property.  I think it is unfair to change that right now. &lt;/p&gt;
</comment>
                            <comment id="13591545" author="jmhsieh" created="Sat, 2 Mar 2013 22:15:15 +0000"  >&lt;p&gt;I&apos;m assuming right now we are in the gathering state since the feature and usage isn&apos;t complete in trunk yet?  This won&apos;t happen until it is basically done there first right?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;At this stage, there is no hbck support for fixing a table lock, but if deadlock happens, the user can just delete the lock znodes. Plus, I am proposing to backport this as disabled by default. All the lock operations are no-op if disabled, no critical code path will be affected by default. If needed, we can say that this feature is experimental in 0.94.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;These are perfect things release notes.  (how to clean up if stuck)&lt;/p&gt;

&lt;p&gt;Disabled by default helps allay my concerns quite a bit, and a general case way to make these things less scary.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think I&apos;ve went to some details of how I did test these in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7305&quot; title=&quot;ZK based Read/Write locks for table operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7305&quot;&gt;&lt;del&gt;HBASE-7305&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7546&quot; title=&quot;Obtain a table read lock on region split operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7546&quot;&gt;&lt;del&gt;HBASE-7546&lt;/del&gt;&lt;/a&gt; and the RB for those. I&apos;ll consolidate the testing effort here.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;A summary here would be great &amp;#8211; I&apos;ve done a read of the code, the jira, and the pdf but didn&apos;t look at rb comments.  Hopefully there some kill tests?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The set of patches has nothing to do with the wire protocol. I don&apos;t see your concern here.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It isn&apos;t just wire protocol &amp;#8211; any data that is serialized and written to zk is a compatibility concern.  We&apos;ve had zk-related compat problem in the past.  (most recently between 0.92 and 0.94).  These are all new znodes so sounds reasonable.&lt;/p&gt;

</comment>
                            <comment id="13591623" author="lhofhansl" created="Sun, 3 Mar 2013 03:43:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;All the version of hbase we&apos;ve relased up to now had this property. I think it is unfair to change that right now.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What&apos;s &quot;unfair&quot; about this? Currently this is wrong, it is a bug. Now we have a facility to fix it, we should make use of it. It will HBase usage more stable tab before.&lt;/p&gt;</comment>
                            <comment id="13605707" author="jmhsieh" created="Mon, 18 Mar 2013 21:49:26 +0000"  >&lt;p&gt;I think it is unfair to claim that the ability to change schema without disabling the table is a feature that is required to for HBase to be production ready.   &lt;/p&gt;

&lt;p&gt;The feature is it is off by default, essentially documented as experimental (&lt;tt&gt;&quot;Its off by default. Enable it at your own risk.&quot;&lt;/tt&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;), so in my eyes fixing it essentially feels like a new feature.  &lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;http://hbase.apache.org/book.html#d1949e2910 .  &lt;/p&gt;

&lt;p&gt;(Sorry for the delay, was away for a 2 weeks).&lt;/p&gt;</comment>
                            <comment id="13605718" author="lhofhansl" created="Mon, 18 Mar 2013 22:00:16 +0000"  >&lt;p&gt;Welcome back Jon &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I do not think it is question about &quot;fair&quot; vs. &quot;unfair&quot;.&lt;/p&gt;

&lt;p&gt;It is a fact that you cannot safely do online schema changes in 0.94.&lt;br/&gt;
When we have an actual patch against 0.94 we can weigh that deficiency against the risk introduced by the patch.&lt;/p&gt;</comment>
                            <comment id="13606713" author="lhofhansl" created="Tue, 19 Mar 2013 19:59:12 +0000"  >&lt;p&gt;The discussion on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7305&quot; title=&quot;ZK based Read/Write locks for table operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7305&quot;&gt;&lt;del&gt;HBASE-7305&lt;/del&gt;&lt;/a&gt; is interesting (thanks Jon). It seem there is some thinking/clarification to do before we backport this to 0.94.&lt;/p&gt;</comment>
                            <comment id="13621753" author="lhofhansl" created="Thu, 4 Apr 2013 04:25:33 +0000"  >&lt;p&gt;Not for 0.94.7 it seems.&lt;/p&gt;</comment>
                            <comment id="13658111" author="lhofhansl" created="Wed, 15 May 2013 06:33:47 +0000"  >&lt;p&gt;Looks like this is not happening for 0.94.&lt;br/&gt;
Closing. Please re-open if you do not think this is right.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 1 Mar 2013 15:57:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315213</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 31 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ie6n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315557</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>