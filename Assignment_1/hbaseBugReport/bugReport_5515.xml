<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:28:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5515/HBASE-5515.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5515] Add a processRow API that supports atomic multiple reads and writes on a row</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5515</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We have modified HRegion.java internally to do some atomic row processing. It will be nice to have a plugable API for this.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12545039">HBASE-5515</key>
            <summary>Add a processRow API that supports atomic multiple reads and writes on a row</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="schen">Scott Chen</assignee>
                                    <reporter username="schen">Scott Chen</reporter>
                        <labels>
                    </labels>
                <created>Sat, 3 Mar 2012 09:22:09 +0000</created>
                <updated>Mon, 23 Sep 2013 18:31:15 +0000</updated>
                            <resolved>Wed, 14 Mar 2012 05:45:07 +0000</resolved>
                                                    <fixVersion>0.95.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13221668" author="phabricator@reviews.facebook.net" created="Sat, 3 Mar 2012 19:07:55 +0000"  >&lt;p&gt;sc requested code review of &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Add a read-modify-write row operation&lt;/p&gt;

&lt;p&gt;  Task ID: #&lt;/p&gt;

&lt;p&gt;  Blame Rev:&lt;/p&gt;

&lt;p&gt;  We have modified HRegion.java internally to do some atomic row processing. It will be nice to have a plugable API for this.&lt;/p&gt;

&lt;p&gt;TEST PLAN&lt;br/&gt;
  unit test&lt;/p&gt;

&lt;p&gt;  Revert Plan:&lt;/p&gt;

&lt;p&gt;  Tags:&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestProcessRow.java&lt;/p&gt;

&lt;p&gt;MANAGE HERALD DIFFERENTIAL RULES&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/view/differential/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/view/differential/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WHY DID I GET THIS EMAIL?&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/transcript/4425/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/transcript/4425/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tip: use the X-Herald-Rules header to filter Herald messages in your client.&lt;/p&gt;</comment>
                            <comment id="13221670" author="phabricator@reviews.facebook.net" created="Sat, 3 Mar 2012 19:11:54 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Update some comments&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestProcessRow.java&lt;/p&gt;</comment>
                            <comment id="13221673" author="phabricator@reviews.facebook.net" created="Sat, 3 Mar 2012 19:15:56 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  More comments change&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestProcessRow.java&lt;/p&gt;</comment>
                            <comment id="13221714" author="phabricator@reviews.facebook.net" created="Sat, 3 Mar 2012 22:11:56 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  The difference between this API and mutateRow() is that RowMutations don&apos;t cover scan, right ?&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/RowProcessor.java:28 There is only one RowProcessor.RowScanner passed to process().&lt;br/&gt;
  So scan should be singular.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java:268 I think this should be moved to after GENERIC_ARRAY_CODE, line 272&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13221723" author="phabricator@reviews.facebook.net" created="Sat, 3 Mar 2012 22:41:55 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  Only small tests were run in &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1085&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1085&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/RowProcessor.java:28 Discard previous comment.&lt;br/&gt;
  The scanner can be used to perform multiple scans.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java:268 Please add an assertion at the end of TestHbaseObjectWritable.testGetClassCode() for RowProcessor.&lt;/p&gt;

&lt;p&gt;  Change the ordinal to 83 in TestHbaseObjectWritable.testGetNextObjectCode()&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4376 1 ClassSize.REFERENCE should be added to HRegion.FIXED_OVERHEAD&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13221726" author="phabricator@reviews.facebook.net" created="Sat, 3 Mar 2012 23:05:55 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/RowProcessor.java:31 Please tag this interface @InterfaceAudience.Public&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13221777" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 03:36:03 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  Ted: Thanks for the review. I will update this soon.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java:268 Thanks! good catch&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4376 Good catch!&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13221779" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 03:46:14 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Addressed Ted&apos;s comments&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestProcessRow.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHbaseObjectWritable.java&lt;/p&gt;</comment>
                            <comment id="13221780" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 03:46:18 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  Ted: Yes, this API allows read-modify-write atomically. Also you can perform multiple reads with dependency on previous results (for example, querying friends of friends in the unit test).&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13221786" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 05:00:07 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  We&apos;re getting a lot of similar but slightly different APIs now.&lt;/p&gt;

&lt;p&gt;  This is not a for a fixed use case, but basically this a command pattern where we pass an arbitrary command to the server execution there.&lt;/p&gt;

&lt;p&gt;  The RowProcessor implementation needs to exist in the RegionServer&apos;s classpath, right?&lt;/p&gt;

&lt;p&gt;  Like atomic multi row mutations, maybe this should only be accessible to a Coprocessor endpoint (see final resolution for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt;), and not to the public HTable API.&lt;/p&gt;

&lt;p&gt;  Pie in the sky: It would be nice if the command itself could be implemented as a coprocessor endpoint (would need to expose locks and mvcc to region-coprocessors, so maybe that&apos;s overkill).&lt;/p&gt;


&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13221818" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 07:39:57 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  Lars: Thanks for the feedback.&lt;/p&gt;

&lt;p&gt;  Yes, the RowProcessor implementation needs to exist on the RegionServer. In our case, it&apos;s some predefined logic that we deployed on the server side.&lt;/p&gt;

&lt;p&gt;  We also thought about using coprocessor also but like you said it will need to expose lots of details of HRegion. So it&apos;s not very easy.&lt;/p&gt;

&lt;p&gt;  I think you have really good points about the API. We should be very careful about adding API because we can&apos;t take them back. The API should be as simple as possible.&lt;/p&gt;

&lt;p&gt;  For our use case, this one is necessary because it allows execution of multiple commands on the server. This is very important for the performance. And I personally think the abstraction level is high enough to be a public API. What do you think?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13221825" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 08:06:05 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  I will also read &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt; to see what are the alternatives. Thanks!&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13221945" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 17:29:57 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Forgot to import InterfaceAudience&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestProcessRow.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHbaseObjectWritable.java&lt;/p&gt;</comment>
                            <comment id="13221960" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 18:15:56 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  @lhofhansl: After look at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt;, I think what you said makes sense. RowProcessor is some logic on server side and should belong to coprocessorExec() not a stand alone HTable API.&lt;/p&gt;

&lt;p&gt;  I will make a change and update this patch soon. Thanks for pointing this out!&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13221964" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 18:31:59 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Addressed Lar&apos;s review comments.&lt;br/&gt;
  Now the API is used from table.coprocessorExec().&lt;br/&gt;
  Thanks!&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHbaseObjectWritable.java&lt;/p&gt;</comment>
                            <comment id="13221966" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 18:35:56 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Fixed some comments&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHbaseObjectWritable.java&lt;/p&gt;</comment>
                            <comment id="13221972" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 18:49:59 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Add a static helper function to allow easier use of the RowProcessor&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHbaseObjectWritable.java&lt;/p&gt;</comment>
                            <comment id="13221999" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 20:22:57 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java:210 Can we remove the braces for this code block (ending at line 223) ?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4318 In the processor, multiple scans may be performed.&lt;br/&gt;
  Should we introduce timeout for this invocation ?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4368 What if the wal sync was unsuccessful ?&lt;br/&gt;
  We should prepare to remove keys from memstore.&lt;br/&gt;
  See line 2204 of doMiniBatchPut().&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4364 Does step 9 have to be in the finally block ?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13222175" author="phabricator@reviews.facebook.net" created="Mon, 5 Mar 2012 06:14:55 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  Thanks sc (Scott).&lt;br/&gt;
  This approach makes more sense to me. I&apos;ll review in more detail tomorrow.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13222464" author="phabricator@reviews.facebook.net" created="Mon, 5 Mar 2012 17:35:55 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  Ted: Thanks for the review! I will update this soon.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4364 I think you&apos;re right. If any of exception thrown, we actually don&apos;t want to completeMemstoreInsert().&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4368 goodcatch&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4318 good idea. I will make that change.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13222593" author="phabricator@reviews.facebook.net" created="Mon, 5 Mar 2012 20:35:57 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  Here&apos;s another thought. This is actually slight different from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt; provides one API for coprocessors to use, while this issue provides the code from the out side (the RowProcessor).&lt;/p&gt;

&lt;p&gt;  I think it would be nice if there was an API on the RegionServer do execute something with lock/mvcc.&lt;br/&gt;
  Not sure about the actual API, but the coprocessor endpoint could &lt;b&gt;be&lt;/b&gt; the RowProcessor, which would have the advantage that they could loaded dynamically and per table if needed.&lt;/p&gt;

&lt;p&gt;  Maybe just public lockAndStartMvcc(row) and unlockAndCommitMvcc methods on RegionServer.&lt;br/&gt;
  Or executeAsTransaction(RowProcessor), or something.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13222718" author="phabricator@reviews.facebook.net" created="Mon, 5 Mar 2012 22:55:56 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Addressed Ted&apos;s review comments.&lt;br/&gt;
  Also 1. Remove unnecessary change in HRegionServer and HRegionInterface&lt;br/&gt;
       2. Make RowProcessor returns generic&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13222732" author="phabricator@reviews.facebook.net" created="Mon, 5 Mar 2012 23:05:55 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Fixed a minor bug&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13222749" author="phabricator@reviews.facebook.net" created="Mon, 5 Mar 2012 23:17:54 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  Good progress.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java:43 Please explain type parameter T in javadoc.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4379 mutations may have many elements.&lt;br/&gt;
  We should control the length of this log.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java:72 This method is used for testing.&lt;br/&gt;
  I suggest making it package private.&lt;/p&gt;

&lt;p&gt;  Also, walEdits is empty upon entrance to this method.&lt;br/&gt;
  Do we need to expose it ? It is not used by friends of friends test.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13222772" author="phabricator@reviews.facebook.net" created="Mon, 5 Mar 2012 23:27:56 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  @lhofhansl: That&apos;s very interesting. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5529&quot; title=&quot;MR test failures becuase MALLOC_ARENA_MAX is not set&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5529&quot;&gt;&lt;del&gt;HBASE-5529&lt;/del&gt;&lt;/a&gt; is more general in the sense that It process multiple rows while this one process only one row but it allows more general process (read-modify-write). Maybe we can have a MultiRowProcessEndpoint in the future &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;  It will be nice to have some API that can allows simple control on lock/mvcc. That will be very powerful.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13222778" author="phabricator@reviews.facebook.net" created="Mon, 5 Mar 2012 23:31:55 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  Ted: Wow, that was super quick! Thanks!&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java:72 This is actually for the application to override to create their own processor. I should document this more clearly. I will make the change.&lt;/p&gt;

&lt;p&gt;  I am passing the walEdit here because internally we also submit some meta data to walEdit (kind of like you can send SQL comments to binlog). Basically passing walEdit here allow us to do more things.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java:43 good point.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4379 yes. I will make the change.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13222804" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 00:05:57 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Addressed Ted&apos;s last review comments&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13222815" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 00:13:55 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java:72 By &quot;internally&quot;, I mean for our internal use case.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13222837" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 00:47:54 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Inject some meta keyvalue in the unit test to demonstrate the use of walEdit&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13222839" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 00:49:54 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Fixed TestHeapSize&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13222843" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 00:57:56 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  @sc:&lt;br/&gt;
  &quot;It will be nice to have some API that can allows simple control on lock/mvcc. That will be very powerful.&quot;&lt;/p&gt;

&lt;p&gt;  But you do not want to do it for this issue? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;  My point is that a RowProcessor implementation class is what coprocessor endpoints were meant for (server side custom code) - with the caveat that coprocessors currently do not have enough access to regionserver details.&lt;/p&gt;


&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13222849" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 01:05:55 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Move completeMemstoreInsert() back to finally block.&lt;br/&gt;
  Ted: I think this should still be in finally block. Otherwise this may block all the reads.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13222858" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 01:13:55 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  @lhofhansl: I would prefer that to be the future work &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Thanks for the insights that you provide for the patch! That really helped a lot.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13222966" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 03:20:02 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4790 Please keep this at 30.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4791 Please change this to 6, accounting for rowProcessorTimeout&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13223013" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 05:58:55 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  Fair enough on doing this in another jira.&lt;br/&gt;
  Looking at this jira, though, I realize you&apos;re almost there.&lt;/p&gt;

&lt;p&gt;  The coprocessor endpoint itself can implement RowProcessor and then pass itself to HRegion.processRow. That way all class loading is done by the coprocessor framework.&lt;/p&gt;

&lt;p&gt;  See inline comments below.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java:44 Wanna have a RowProcessor interface and make this BaseRowProcessor (which of course would implement RowProcessor)?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4372 Nice&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java:54 Since this is for a single row (and hence for a single region) clients should just use the coprocessorProxy interface:&lt;br/&gt;
  RowProcessorProtocol p = table.coprocessorProxy(RowProcessorProtocol.class, myRow);&lt;br/&gt;
  p.process(myRowProcessorInstance);&lt;/p&gt;

&lt;p&gt;  But see above, this method might not even be necessary.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java:41 Rather than having a method that requires another object passed (for which the class needs to be registered at all regionservers, etc). The endpoint itself could have the process method on it.&lt;br/&gt;
  A client would then only have to deploy the coprocessor (a different one for each type of operation, but that is less effort than a separate class for each operation, as coprocessors already implement the right class loading.)&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java:44 I.e. here the coprocessor would pass itself.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13223422" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 16:58:55 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  Thanks for the review, guys. I will update this soon.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java:41 I see. Now I understand what you mean. Yes, there should really be only one class. I will make the change. Thanks!&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java:44 That looks better. I will make the change.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4791 Sorry for the mistake. I will fix it.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13223538" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 18:55:55 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Addressed Lars and Ted&apos;s comments&lt;/p&gt;

&lt;p&gt;  @tedyu: I changed reference count to 31 and long count to 6.&lt;/p&gt;

&lt;p&gt;  This is because we have added the following two things&lt;br/&gt;
  long rowProcessorTimeout&lt;br/&gt;
  RowProcessor.RowScanner rowScanner&lt;/p&gt;


&lt;p&gt;  @lhofhansl: I have made most of the changes you suggested. Thanks!&lt;/p&gt;

&lt;p&gt;  I tried to put RowProcessor into ProcessRowEndpoint.&lt;br/&gt;
  With that approach, we will need multiple CoprocessorProtocol. One for each implementation of RowProcessor.&lt;br/&gt;
  Because the implementation of the RowProcessor is now passed by the protocol class name instead of the Writable.&lt;/p&gt;

&lt;p&gt;  For example, in our unit test, we have to do&lt;br/&gt;
  ---------------&lt;br/&gt;
  FriendsOfFriendsProtocol p =&lt;br/&gt;
    table.coprocessorProxy(FriendsOfFriendsProtocol.class, row);&lt;br/&gt;
  p.processRow();&lt;br/&gt;
  ---------------&lt;br/&gt;
  And the unit test needs to provide both FriendsOfFriendsProtocol and FriendsOfFriendsEndpoint.&lt;br/&gt;
  I feel this is not very convenient. I still prefer to pass the RowProcessor information via a Writable.&lt;/p&gt;

&lt;p&gt;  The other thought is that the user of RowProcessor is actually HRegion.&lt;br/&gt;
  But ProcessRowEndpoint is used by the client via coprocessor.&lt;br/&gt;
  I feel that it would be nice to have them separated instead of listing their methods together.&lt;/p&gt;

&lt;p&gt;  What do you think?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13223548" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 19:03:56 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Forgot to include BaseRowProcessor.java&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13223590" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 19:41:56 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  @Scott: FriendsOfFriendsProtocol would be known to the client and FriendsOfFriendsEndpoint to the server.&lt;br/&gt;
  You can always add a tiny client side wrapper to make it more convenient.&lt;/p&gt;

&lt;p&gt;  It&apos;s cool if you want to do it differently.&lt;br/&gt;
  But keep in mind that a lot of effort went into getting classloading for coprocessors right. They can be loaded dynamically from a jar on HDFS and per table, or statically and globally for all tables.&lt;br/&gt;
  For example you could deploy new row processing logic without touching the servers at all (by loading a jar from HDFS).&lt;br/&gt;
  That is actually something I do not like about filters, to use a new filter it needs to be deployed at every regionserver and requires a rolling restart of the cluster. Coprocessors nicely solve this problems.&lt;/p&gt;

&lt;p&gt;  With the current approach the row processing implementation would need to be deployed outside of the coprocessor framework and always require a cluster restart.&lt;/p&gt;


&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13223703" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 21:59:54 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  @Lars:&lt;br/&gt;
  &quot;They can be loaded dynamically from a jar on HDFS and per table, or statically and globally for all tables.&quot;&lt;br/&gt;
  This is really cool!&lt;/p&gt;

&lt;p&gt;  I made a sight change to HRegion.processRow() so that it takes a RowProcessor interface (instead of the BaseRowProcessor class)&lt;br/&gt;
  Now people can still define their own CorocessorProtocol that implements RowProcessor and have the ability to dynamically load this class as you described.&lt;br/&gt;
  I wrote a unit test TestProcessRowWithCustomMadeProtocol.java to verify that use case.&lt;/p&gt;

&lt;p&gt;  But if this is cool with you, I sill like to keep the ProcessRowProtocol and ProcessRowEndpoint because that&apos;s a convenient entry point for most users.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowWithCustomMadeProtocol.java&lt;/p&gt;</comment>
                            <comment id="13223748" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 22:39:59 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Remove some repeated codes in unit tests&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowWithCustomMadeProtocol.java&lt;/p&gt;</comment>
                            <comment id="13223855" author="phabricator@reviews.facebook.net" created="Wed, 7 Mar 2012 00:21:57 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  Looks good.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java:72 What does this do on top of a &quot;normal&quot; scanner?&lt;br/&gt;
  Is it that a RowProcessor implementation does not have access to the HRegion and hence cannot get a scanner?&lt;br/&gt;
  (One more reason for using coprocessor endpoints, as they can just get the HRegion through the coprocessor environment. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;br/&gt;
  I.e. the coprocessor can just call HRegion.getScanner(scan).&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13223860" author="phabricator@reviews.facebook.net" created="Wed, 7 Mar 2012 00:27:57 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java:72 This just do a getScanner(scan) and then scan for one row. And yes, I add this just to get access to HRegion.getScanner().&lt;/p&gt;

&lt;p&gt;  Coprocessor is really useful. Thanks for all the review comments. I learned a lot about coprocessor after this patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13223889" author="phabricator@reviews.facebook.net" created="Wed, 7 Mar 2012 01:11:56 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java:36 ProcessRowEndpoint.class should be used here.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java:48 Should read &apos;table where the row to process resides&apos;&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowWithCustomMadeProtocol.java:221 walEdit (singular form) would be a better name for the last parameter.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13223918" author="phabricator@reviews.facebook.net" created="Wed, 7 Mar 2012 02:27:56 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Addressed Ted&apos;s review comments, thanks!&lt;br/&gt;
  Also remove more repeated codes in unit tests.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowWithCustomMadeProtocol.java&lt;/p&gt;</comment>
                            <comment id="13223936" author="hadoopqa" created="Wed, 7 Mar 2012 03:19:51 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517356/HBASE-5515.D2067.19.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517356/HBASE-5515.D2067.19.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -129 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 155 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1127//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1127//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1127//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1127//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1127//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1127//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13224681" author="zhihyu@ebaysf.com" created="Wed, 7 Mar 2012 20:30:28 +0000"  >&lt;p&gt;@Andy, @Gary:&lt;br/&gt;
Do you want to take a look at the latest patch ?&lt;/p&gt;</comment>
                            <comment id="13224951" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 02:34:55 +0000"  >&lt;p&gt;jyates has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  Still seems a bit bloated. I don&apos;t know what we really get from having the RowProcessor &lt;em&gt;not&lt;/em&gt; be an endpoint in itself. A lot of the work here could be handled by just having an abstract class that implements CoprocessorEndpoint and is subclasses by actual RowProcessor implementations. This would also help keep the API more condensed. More thoughts inline on how that would work.&lt;/p&gt;

&lt;p&gt;  Otherwise, seems solid.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java:34 This whole process seems a bit roundabout. You make an endpoint that then takes the writable which immediately then just calls the hregion to process that processor.... have to agree with Lars that the endpoint should in fact just be the rowProcesssor - you would have the FriendsOfFriendsProcessor just be a coprocessor that you turn on for your table.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java:52 If you wanted to make it easier for people to implement their own multi-action processing, then (going back to my comment above) you can make the RowProcessorEnpoint just have an abstract method that people use to implement their own processing.&lt;/p&gt;

&lt;p&gt;  This abstract method would actually be called inside of the &apos;process&apos; method that would take care of getting the row lock, etc and leaving just the processing for the actual implementation (which could return an iterable) and then push them back to the back.&lt;/p&gt;

&lt;p&gt;  Some work would be involved in this approach, but it would be easily extractable into the stuff from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5529&quot; title=&quot;MR test failures becuase MALLOC_ARENA_MAX is not set&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5529&quot;&gt;&lt;del&gt;HBASE-5529&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4303 This seems like a lot of copying from other parts in the code - maybe it can be abstracted out? This might be something for the next patch for the MultiRowProcessor stuff&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13225287" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 16:29:56 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  @jyates: Thanks for the review comments. I think what you and Lars think makes sense. I guess I started this patch by using RowProcessor a parameter of HTable. So I feel RowProcessor should be a parameter. But with the Coprocessor case, it seems what you guys think makes more sense.&lt;/p&gt;

&lt;p&gt;  I will update this patch soon.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/ProcessRowEndpoint.java:52 The abstract method approach is a good idea. Thanks!&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13225328" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 17:33:56 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Addressed jyates&apos;s review comments, thanks.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13225333" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 17:49:55 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java:53 Is abstract keyword needed ?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13225339" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 17:59:54 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java:53 goodcatch&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13225340" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 17:59:57 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  I tried making ProcessorRowEnpoint endpoint an abstract class. The difficulty is that when creating ProcessRowProtocal you can not pass parameter in the constructor. So the parameter has to be passed by the actually processRow() call. You can use generic&lt;/p&gt;

&lt;p&gt;  ProcessRowProtocol &lt;/p&gt;
{
  &amp;lt;T, S&amp;gt; T processRow(S input);
  }

&lt;p&gt;  But this is kind of ugly. And you will need to have the actual S in the class path also. This is not good for the same reason you don&apos;t what RowProcessor as a separate class.&lt;/p&gt;

&lt;p&gt;  So I just leave the users to do their own CoprocessorProtocol and CoprocessorEndpoint just like the example in the unit test.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13225343" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 18:01:56 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Remove the redundant abstract keyword&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13225345" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 18:05:55 +0000"  >&lt;p&gt;tedyu has accepted the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  If tests pass.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BRANCH&lt;br/&gt;
  5515&lt;/p&gt;</comment>
                            <comment id="13225353" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 18:13:56 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;br/&gt;
Reviewers: tedyu, dhruba, JIRA&lt;/p&gt;

&lt;p&gt;  Fixed the indentation and remove an unused method&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13225364" author="hadoopqa" created="Thu, 8 Mar 2012 18:26:33 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517577/HBASE-5515.D2067.20.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517577/HBASE-5515.D2067.20.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -129 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 155 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1133//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1133//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1133//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1133//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1133//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1133//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13225392" author="hadoopqa" created="Thu, 8 Mar 2012 18:58:03 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517582/HBASE-5515.D2067.21.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517582/HBASE-5515.D2067.21.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -129 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 155 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestReplicationPeer&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1134//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1134//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1134//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1134//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1134//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1134//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13225403" author="hadoopqa" created="Thu, 8 Mar 2012 19:05:47 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517584/HBASE-5515.D2067.22.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517584/HBASE-5515.D2067.22.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -129 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 155 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1135//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1135//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1135//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1135//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1135//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1135//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13225417" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 19:15:54 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  +1... Ship it.&lt;/p&gt;

&lt;p&gt;  We should unify HRegion.mutateRowWithLocks and HRegion.processRow, but let&apos;s do that as a separate issue.&lt;/p&gt;


&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BRANCH&lt;br/&gt;
  5515&lt;/p&gt;</comment>
                            <comment id="13225419" author="zhihyu@ebaysf.com" created="Thu, 8 Mar 2012 19:19:40 +0000"  >&lt;p&gt;@Lars:&lt;br/&gt;
Do you think this feature should go to 0.94 ?&lt;/p&gt;

&lt;p&gt;Please assign &apos;Fix Version&apos; accordingly.&lt;/p&gt;</comment>
                            <comment id="13225430" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 19:37:55 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;  @Lars, @Ted, @Jesse: Thanks for the reviews &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; You guys helped a lot.&lt;br/&gt;
  I created &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5542&lt;/a&gt; for the unify work.&lt;/p&gt;


&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BRANCH&lt;br/&gt;
  5515&lt;/p&gt;</comment>
                            <comment id="13225433" author="zhihyu@ebaysf.com" created="Thu, 8 Mar 2012 19:41:37 +0000"  >&lt;p&gt;Integrated to TRUNK.&lt;/p&gt;

&lt;p&gt;Thanks for the patch, Scott.&lt;/p&gt;

&lt;p&gt;Thanks for the review Lars and Jesse.&lt;/p&gt;</comment>
                            <comment id="13225465" author="lhofhansl" created="Thu, 8 Mar 2012 20:26:21 +0000"  >&lt;p&gt;I think this should go into 0.96. We can backport later if the need arises.&lt;br/&gt;
Scott, what do you think?&lt;/p&gt;</comment>
                            <comment id="13225469" author="dhruba" created="Thu, 8 Mar 2012 20:34:08 +0000"  >&lt;p&gt;My vote is to put it into hbase-trunk only (and not to backport to 0.94)&lt;/p&gt;</comment>
                            <comment id="13225476" author="lhofhansl" created="Thu, 8 Mar 2012 20:39:43 +0000"  >&lt;p&gt;Yeah with &quot;0.96&quot; above I mean trunk.&lt;/p&gt;</comment>
                            <comment id="13225732" author="hudson" created="Fri, 9 Mar 2012 00:43:25 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2674 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2674/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2674/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; Add a processRow API that supports atomic multiple reads and writes on a row (Scott Chen) (Revision 1298533)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13225861" author="hudson" created="Fri, 9 Mar 2012 05:48:35 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #132 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/132/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/132/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; Add a processRow API that supports atomic multiple reads and writes on a row (Scott Chen) (Revision 1298533)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13225921" author="schen" created="Fri, 9 Mar 2012 08:17:30 +0000"  >&lt;p&gt;@Lars: Yes, 0.96 sounds good to me.&lt;/p&gt;</comment>
                            <comment id="13272651" author="phabricator@reviews.facebook.net" created="Thu, 10 May 2012 19:08:45 +0000"  >&lt;p&gt;sc has closed the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Add a processRow API that supports atomic multiple reads and writes on a row&quot;.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2067&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To: tedyu, dhruba, JIRA, sc&lt;br/&gt;
Cc: lhofhansl, jyates&lt;/p&gt;</comment>
                            <comment id="13775326" author="stack" created="Mon, 23 Sep 2013 18:31:15 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12545700">HBASE-5542</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12516951" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.1.patch" size="24891" author="phabricator@reviews.facebook.net" created="Sat, 3 Mar 2012 19:07:56 +0000"/>
                            <attachment id="12517150" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.10.patch" size="26156" author="phabricator@reviews.facebook.net" created="Mon, 5 Mar 2012 23:05:56 +0000"/>
                            <attachment id="12517161" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.11.patch" size="26346" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 00:05:58 +0000"/>
                            <attachment id="12517168" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.12.patch" size="26626" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 00:47:55 +0000"/>
                            <attachment id="12517169" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.13.patch" size="26626" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 00:49:55 +0000"/>
                            <attachment id="12517174" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.14.patch" size="26616" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 01:05:56 +0000"/>
                            <attachment id="12517282" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.15.patch" size="24720" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 18:55:56 +0000"/>
                            <attachment id="12517287" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.16.patch" size="27838" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 19:03:57 +0000"/>
                            <attachment id="12517313" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.17.patch" size="37173" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 21:59:55 +0000"/>
                            <attachment id="12517326" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.18.patch" size="34735" author="phabricator@reviews.facebook.net" created="Tue, 6 Mar 2012 22:39:59 +0000"/>
                            <attachment id="12517356" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.19.patch" size="32931" author="phabricator@reviews.facebook.net" created="Wed, 7 Mar 2012 02:27:58 +0000"/>
                            <attachment id="12516952" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.2.patch" size="25412" author="phabricator@reviews.facebook.net" created="Sat, 3 Mar 2012 19:11:55 +0000"/>
                            <attachment id="12517577" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.20.patch" size="23062" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 17:33:58 +0000"/>
                            <attachment id="12517582" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.21.patch" size="23035" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 18:01:58 +0000"/>
                            <attachment id="12517584" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.22.patch" size="22831" author="phabricator@reviews.facebook.net" created="Thu, 8 Mar 2012 18:13:57 +0000"/>
                            <attachment id="12516953" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.3.patch" size="25407" author="phabricator@reviews.facebook.net" created="Sat, 3 Mar 2012 19:15:58 +0000"/>
                            <attachment id="12516971" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.4.patch" size="26269" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 03:46:16 +0000"/>
                            <attachment id="12517005" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.5.patch" size="26329" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 17:29:59 +0000"/>
                            <attachment id="12517009" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.6.patch" size="29015" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 18:32:00 +0000"/>
                            <attachment id="12517011" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.7.patch" size="28906" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 18:35:57 +0000"/>
                            <attachment id="12517014" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.8.patch" size="29026" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 18:49:59 +0000"/>
                            <attachment id="12517146" name="ASF.LICENSE.NOT.GRANTED--HBASE-5515.D2067.9.patch" size="26122" author="phabricator@reviews.facebook.net" created="Mon, 5 Mar 2012 22:55:57 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 3 Mar 2012 19:07:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>230225</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0htkn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>102053</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>