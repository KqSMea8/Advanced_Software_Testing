<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:08:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3256/HBASE-3256.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3256] Coprocessors: Coprocessor host and observer for HMaster</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3256</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Implement a coprocessor host for HMaster. Hook observers into administrative operations performed on tables: create, alter, assignment, load balance, and allow observers to modify base master behavior. Support automatic loading of coprocessor implementation. &lt;/p&gt;

&lt;p&gt;Consider refactoring the master coprocessor host and regionserver coprocessor host into a common base class. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12480541">HBASE-3256</key>
            <summary>Coprocessors: Coprocessor host and observer for HMaster</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12441373">HBASE-2000</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ghelmling">Gary Helmling</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Sun, 21 Nov 2010 19:35:53 +0000</created>
                <updated>Fri, 20 Nov 2015 12:42:29 +0000</updated>
                            <resolved>Tue, 21 Dec 2010 20:46:55 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                                    <component>Coprocessors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12934581" author="ghelmling" created="Mon, 22 Nov 2010 20:12:09 +0000"  >&lt;p&gt;Some additional details on the code changes here:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;add a &lt;tt&gt;org.apache.hadoop.hbase.coprocessor.MasterObserver&lt;/tt&gt; interface defining pre/post methods for createTable, deleteTable, modifyTable, addColumn, modifyColumn, deleteColumn, enable/disable, move, balance, and shutdown&lt;/li&gt;
	&lt;li&gt;extract a common base class from the current &lt;tt&gt;org.apache.hadoop.hbase.regionserver.CoprocessorHost&lt;/tt&gt; to &lt;tt&gt;org.apache.hadoop.hbase.coprocessor.CoprocessorHost&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;rename the existing region-specific &lt;tt&gt;org.apache.hadoop.hbase.regionserver.CoprocessorHost&lt;/tt&gt; to &lt;tt&gt;RegionCoprocessorHost&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;add a new &lt;tt&gt;org.apache.hadoop.hbase.master.MasterCoprocessorHost&lt;/tt&gt; for HMaster integration&lt;/li&gt;
	&lt;li&gt;refactor the current &lt;tt&gt;org.apache.hadoop.hbase.coprocessor.CoprocessorEnvironment&lt;/tt&gt; into a base interface with &lt;tt&gt;RegionCoprocessorEnvironment&lt;/tt&gt; and &lt;tt&gt;MasterCoprocessorEnvironment extensions&lt;/tt&gt;&lt;/li&gt;
&lt;/ol&gt;

</comment>
                            <comment id="12934968" author="ghelmling" created="Tue, 23 Nov 2010 18:48:06 +0000"  >&lt;p&gt;Here&apos;s a preview version of the patch adding the MasterObserver interface and related changes and refactorings.  The final version of this is waiting on an implementation of the lifecycle hooks for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3260&quot; title=&quot;Coprocessors: Lifecycle management&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3260&quot;&gt;&lt;del&gt;HBASE-3260&lt;/del&gt;&lt;/a&gt;.  Once I complete those changes, I will merge here, add unit tests and put the final version of this patch up on review board.&lt;/p&gt;</comment>
                            <comment id="12971092" author="ghelmling" created="Tue, 14 Dec 2010 00:08:01 +0000"  >&lt;p&gt;An initial refactoring snapshot is in place up at: &lt;a href=&quot;http://github.com/ghelmling/hbase/tree/master_cp&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/ghelmling/hbase/tree/master_cp&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12973452" author="hbasereviewboard" created="Tue, 21 Dec 2010 02:07:03 +0000"  >&lt;p&gt;Message from: &quot;Gary Helmling&quot; &amp;lt;ghelmling@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1321/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase, stack, Andrew Purtell, and Jonathan Gray.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch adds a new MasterObserver interface with pre/post hooks provided for operations defined in org.apache.hadoop.hbase.ipc.HMasterInterface.&lt;/p&gt;

&lt;p&gt;In order to accommodate the new MasterObserver interface, I&apos;ve also refactored out common coprocessor base code, with subclasses providing for region-specific and master-specific behavior.&lt;/p&gt;

&lt;p&gt;The new code structure is (excuse my poor ascii art):&lt;/p&gt;

&lt;p&gt;CoprocessorEnvironment - base interface for common facilities provided to CP implementations&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;RegionCoprocessorEnvironment - adds access to current HRegion and RegionServerServices (for RegionObservers)&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MasterCoprocessorEnvironment - adds access to MasterServerServices (for MasterObservers)&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;CoprocessorHost - abstract base providing core CP loading and invocation code and the base CoprocessorEnvironment implementation&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;RegionCoprocessorHost - provides hooks for invoking RegionObserver pre/post methods and RegionCoprocessorEnvironment implementation&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MasterCoprocessorHost - provides hooks for invoking MasterObserver pre/post methods and MasterCoprocessorEnvironment implementation&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Also added:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;org.apache.hadoop.hbase.coprocessor.BaseMasterObserver - stubs out full MasterObserver interface with empty methods for convenience&lt;/li&gt;
	&lt;li&gt;org.apache.hadoop.hbase.coprocessor.TestMasterObserver - tests that MasterObserver pre/post methods are called during master operations.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In particular, please let me know if the MasterObserver method inputs and outputs are sufficient for whatever you anticipate doing with it.  It should meet our needs for security checks, but more input would be helpful.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3256&quot; title=&quot;Coprocessors: Coprocessor host and observer for HMaster&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3256&quot;&gt;&lt;del&gt;HBASE-3256&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-3256&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-3256&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseMasterObserver.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserverCoprocessor.java 1ffead0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java c4fa526 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/MasterCoprocessorEnvironment.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java 97198ec &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java 18f7787 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterServices.java 593254b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java f71fea6 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1d48131 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationEndpoint.java 43569f1 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java 902a60f &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java 5434d01 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterObserver.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java 5f5fc9a &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java 3193abf &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 5be8daa &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1321/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Added a new test (org.apache.hadoop.hbase.coprocessor.TestMasterObserver) to cover pre/post hook invocation.&lt;/p&gt;

&lt;p&gt;All existing coprocessor tests still pass.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Gary&lt;/p&gt;

</comment>
                            <comment id="12973457" author="hbasereviewboard" created="Tue, 21 Dec 2010 03:04:03 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1321/#review2127&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#review2127&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6609&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6609&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If we were to allow override of assignments, it would have to happen here. If the cp calls bypass() then return immediately.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6610&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6610&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Likewise if we were to allow overriding assignment, we need a symmetrical operation here.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12973460" author="hbasereviewboard" created="Tue, 21 Dec 2010 03:18:01 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1321/#review2126&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#review2126&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;great work!  just a few small comments but otherwise +1&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6607&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6607&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    does DEFAULT really mean REGION/REGIONSERVER?  or is it both?&lt;/p&gt;

&lt;p&gt;    not a big deal if it&apos;s just variable names but since it&apos;s a config param, we should nail it now before it gets out in a release.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6608&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6608&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    this code might have been in other earlier patches but could there be false positives with this?  it&apos;d be silly to load FancyCoprocessor and then MyFancyCoprocessor but i guess this is to cover the package?  maybe parse out the class name?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6616&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6616&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    doesn&apos;t preBalance() return a void?  it&apos;s preBalanceSwitch that returns boolean&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6617&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6617&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    and here we should get the boolean return value (and base class should return the input value)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6618&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6618&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    would we ever want to override default assign behavior?  it&apos;s feasible... might want to be future proof w/ the api?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6619&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6619&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    same here&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12973477" author="hbasereviewboard" created="Tue, 21 Dec 2010 05:38:03 +0000"  >&lt;p&gt;Message from: &quot;Gary Helmling&quot; &amp;lt;ghelmling@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1321/#review2130&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#review2130&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6621&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6621&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    It actually means &quot;region&quot;.  That conf key is only used for the system coprocessors loaded on regions.&lt;/p&gt;

&lt;p&gt;    I&apos;ll change the name (and config property).&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6622&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6622&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yes, I&apos;m not sure what the original intent was here, obtaining the CP without the full package name?&lt;/p&gt;

&lt;p&gt;    Maybe getClass().getSimpleName().equals() would be better?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6623&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6623&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is the result of env.shouldBypass(), in order to allow a MasterObserver to bypass the normal balance() processing.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6624&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6624&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Right, that&apos;s the only way to modify the input.  Will change.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6628&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6628&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I can add in env.shouldBypass() handling here to allow overriding.  Combined with access to ServerManager through MasterServices, this should allow custom assignment policies.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1321/#comment6629&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#comment6629&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yes, will add in env.shouldBypass() handling here too.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12973491" author="hbasereviewboard" created="Tue, 21 Dec 2010 06:33:03 +0000"  >&lt;p&gt;Message from: &quot;Gary Helmling&quot; &amp;lt;ghelmling@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1321/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-12-20 22:31:38.965609)&lt;/p&gt;


&lt;p&gt;Review request for hbase, stack, Andrew Purtell, and Jonathan Gray.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Changes in response to review comments:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;DEFAULT -&amp;gt; REGION in var name and property&lt;/li&gt;
	&lt;li&gt;CoprocessorHost.findCoprocessor(): use getClass().getSimpleName().equals() instead of getClass().getName().endsWith() for fallback&lt;/li&gt;
	&lt;li&gt;add bypass handling for MasterCoprocessorHost.preAssign() and preUnassign()&lt;/li&gt;
	&lt;li&gt;use return value from MasterObserver.preBalanceSwitch() to allow modifying input&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch adds a new MasterObserver interface with pre/post hooks provided for operations defined in org.apache.hadoop.hbase.ipc.HMasterInterface.&lt;/p&gt;

&lt;p&gt;In order to accommodate the new MasterObserver interface, I&apos;ve also refactored out common coprocessor base code, with subclasses providing for region-specific and master-specific behavior.&lt;/p&gt;

&lt;p&gt;The new code structure is (excuse my poor ascii art):&lt;/p&gt;

&lt;p&gt;CoprocessorEnvironment - base interface for common facilities provided to CP implementations&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;RegionCoprocessorEnvironment - adds access to current HRegion and RegionServerServices (for RegionObservers)&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MasterCoprocessorEnvironment - adds access to MasterServerServices (for MasterObservers)&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;CoprocessorHost - abstract base providing core CP loading and invocation code and the base CoprocessorEnvironment implementation&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;RegionCoprocessorHost - provides hooks for invoking RegionObserver pre/post methods and RegionCoprocessorEnvironment implementation&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MasterCoprocessorHost - provides hooks for invoking MasterObserver pre/post methods and MasterCoprocessorEnvironment implementation&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Also added:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;org.apache.hadoop.hbase.coprocessor.BaseMasterObserver - stubs out full MasterObserver interface with empty methods for convenience&lt;/li&gt;
	&lt;li&gt;org.apache.hadoop.hbase.coprocessor.TestMasterObserver - tests that MasterObserver pre/post methods are called during master operations.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In particular, please let me know if the MasterObserver method inputs and outputs are sufficient for whatever you anticipate doing with it.  It should meet our needs for security checks, but more input would be helpful.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3256&quot; title=&quot;Coprocessors: Coprocessor host and observer for HMaster&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3256&quot;&gt;&lt;del&gt;HBASE-3256&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-3256&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-3256&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseMasterObserver.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserverCoprocessor.java 1ffead0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java c4fa526 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/MasterCoprocessorEnvironment.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java 97198ec &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/package-info.java 1b7918c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java 18f7787 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterServices.java 593254b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java f71fea6 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1d48131 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java PRE-CREATION &lt;br/&gt;
  src/main/resources/hbase-default.xml f1cc4ae &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationEndpoint.java 43569f1 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java 902a60f &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorEndpoint.java 8eb2787 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java 5434d01 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterObserver.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java 5f5fc9a &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java 3193abf &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 5be8daa &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1321/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Added a new test (org.apache.hadoop.hbase.coprocessor.TestMasterObserver) to cover pre/post hook invocation.&lt;/p&gt;

&lt;p&gt;All existing coprocessor tests still pass.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Gary&lt;/p&gt;

</comment>
                            <comment id="12973494" author="hbasereviewboard" created="Tue, 21 Dec 2010 06:41:01 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1321/#review2132&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1321/#review2132&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;looks good.  clean and nicely commented, well done.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12973874" author="ghelmling" created="Tue, 21 Dec 2010 20:45:54 +0000"  >&lt;p&gt;Patch committed to trunk&lt;/p&gt;</comment>
                            <comment id="12973876" author="ghelmling" created="Tue, 21 Dec 2010 20:46:55 +0000"  >&lt;p&gt;Committed to trunk.  Thanks for review jgray and apurtell!&lt;/p&gt;</comment>
                            <comment id="12974522" author="hudson" created="Thu, 23 Dec 2010 04:31:58 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1697 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/HBase-TRUNK/1697/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/HBase-TRUNK/1697/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="15017263" author="lars_francke" created="Fri, 20 Nov 2015 12:42:29 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12480542">HBASE-3257</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12480609">HBASE-3260</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12466760" name="HBASE-3256_final.patch" size="209115" author="ghelmling" created="Tue, 21 Dec 2010 20:45:54 +0000"/>
                            <attachment id="12460291" name="HBASE-3256_initial.patch" size="149327" author="ghelmling" created="Tue, 23 Nov 2010 18:48:06 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 22 Nov 2010 20:12:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32964</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hlfr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100735</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>