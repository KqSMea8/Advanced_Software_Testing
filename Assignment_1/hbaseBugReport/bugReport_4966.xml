<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:23:35 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4966/HBASE-4966.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4966] Put/Delete values cannot be tested with MRUnit</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4966</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;When using the IdentityTableReducer, which expects input values of either a Put or Delete object, testing with MRUnit the Mapper with MRUnit is not possible because neither Put nor Delete implement equals().&lt;/p&gt;

&lt;p&gt;We should implement equals() on both such that equality means:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Both objects are of the same class (in this case, Put or Delete)&lt;/li&gt;
	&lt;li&gt;Both objects are for the same key.&lt;/li&gt;
	&lt;li&gt;Both objects contain an equal set of KeyValues (applicable only to Put)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;KeyValue.equals() appears to already be implemented, but only checks for equality of row key, column family and column qualifier - two KeyValues can be considered &quot;equal&quot; if they contain different values. This won&apos;t work for testing.&lt;/p&gt;

&lt;p&gt;Instead, the Put.equals() and Delete.equals() implementations should do a &quot;deep&quot; equality check on their KeyValues, like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
myKv.equals(theirKv) &amp;amp;&amp;amp; Bytes.equals(myKv.getValue(), theirKv.getValue());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;NOTE: This would impact any code that relies on the existing &quot;identity&quot; implementation of Put.equals() and Delete.equals(), therefore cannot be guaranteed to be backwards-compatible.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12534066">HBASE-4966</key>
            <summary>Put/Delete values cannot be tested with MRUnit</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="nicktelford">Nicholas Telford</assignee>
                                    <reporter username="nicktelford">Nicholas Telford</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Dec 2011 18:33:39 +0000</created>
                <updated>Wed, 16 Nov 2016 21:05:32 +0000</updated>
                                            <version>2.0.0</version>
                                                    <component>Client</component>
                    <component>mapreduce</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13164190" author="lhofhansl" created="Wed, 7 Dec 2011 06:55:13 +0000"  >&lt;p&gt;Do you think you can work out a patch Nicholas?&lt;/p&gt;</comment>
                            <comment id="13197938" author="nicktelford" created="Wed, 1 Feb 2012 16:33:46 +0000"  >&lt;p&gt;I&apos;m working on a sensible implementation and I have a question.&lt;/p&gt;

&lt;p&gt;Currently, KeyValue#equals(Object) returns true if both KeyValues have the same row, irrespective of all other fields (family, qualifier, value, ts etc.).&lt;/p&gt;

&lt;p&gt;This appears to be for the convenience case of using List&amp;lt;KeyValue&amp;gt;#contains(KeyValue) to check for an existing KeyValue for a row.&lt;/p&gt;

&lt;p&gt;The problem I have with this is that it violates the method contract of Object#hashCode() which states: &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Since the &lt;tt&gt;KeyValue#hashCode()&lt;/tt&gt; implementation is derived from &lt;tt&gt;KeyValue#getBuffer()&lt;/tt&gt;, two KVs with the same key but different values would be considered equal but yield different hashCodes.&lt;/p&gt;

&lt;p&gt;I can probably work around this, and I imagine it&apos;s out of the scope of this ticket to change it, but wouldn&apos;t it be a better idea to derive equality from all the KV fields and encapsulate the common use case for &lt;tt&gt;List&amp;lt;KeyValue&amp;gt;#contains(KeyValue)&lt;/tt&gt; somewhere else? Perhaps a sub-class of List that simply provides this useful facility:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class KVList &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; ArrayList&amp;lt;KeyValue&amp;gt; {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; containsRow(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] row) {
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (KeyValue kv : &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;) {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (Bytes.equals(kv.getRow(), row)) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
      }
    }
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13197989" author="zhihyu@ebaysf.com" created="Wed, 1 Feb 2012 17:49:14 +0000"  >&lt;p&gt;@Nicholas:&lt;br/&gt;
Your analysis makes sense.&lt;br/&gt;
It would be good to know what unit tests are broken after the proposed change to KeyValue#hashCode().&lt;/p&gt;

&lt;p&gt;Please upload a patch.&lt;/p&gt;</comment>
                            <comment id="13198018" author="nicktelford" created="Wed, 1 Feb 2012 18:14:16 +0000"  >&lt;p&gt;The changes I&apos;m proposing are to KeyValue#equals(), I think hashCode makes sense as it stands.&lt;/p&gt;

&lt;p&gt;I did look at changing it and it did break several tests. I began working on a patch to fix the affected tests but quickly realized I had no way to be sure other parts of the codebase don&apos;t rely on this behavior.&lt;/p&gt;</comment>
                            <comment id="13574523" author="pjsg" created="Fri, 8 Feb 2013 14:53:16 +0000"  >&lt;p&gt;I suspect that the violation of the equals/hashCode contract makes MRUnit just not work with KeyValue as an output value. MRUnit does all sorts of putting KeyValue objects into maps and then checks whether they are present. I think that the maps are relying on this contract.....&lt;/p&gt;</comment>
                            <comment id="13574629" author="stack" created="Fri, 8 Feb 2013 17:09:54 +0000"  >&lt;p&gt;Any chance of a patch lads?  Will commit to trunk no problem.&lt;/p&gt;</comment>
                            <comment id="13574638" author="nicktelford" created="Fri, 8 Feb 2013 17:22:13 +0000"  >&lt;p&gt;I abandoned this as the proposed changes were far too invasive. There are Lists and Maps all over the place that rely on this behaviour. It really didn&apos;t seem worth the risk of introducing a regression just to get MRUnit working.&lt;/p&gt;

&lt;p&gt;Instead, we&apos;re just moving away from use-cases that involve MapReduce on HBase. I&apos;m happy to have this issue closed &quot;won&apos;t fix&quot;.&lt;/p&gt;</comment>
                            <comment id="13574736" author="pjsg" created="Fri, 8 Feb 2013 19:06:28 +0000"  >&lt;p&gt;In fact I just subclassed KeyValue to make it &quot;work&quot; for MRUnit. I&apos;m happy to have this as won&apos;t fix.&lt;/p&gt;</comment>
                            <comment id="13594621" author="adamos.loizou" created="Wed, 6 Mar 2013 11:21:09 +0000"  >&lt;p&gt;Hello, I&apos;ve also experienced this issue with the latest 0.94.5 version. As Philip pointed out, MRUnit assumes that equals(), hashCode() are overridden in order to validate the actual output against the expected. Perhaps it could be considered an MRUnit shortcoming, not allowing to intercept and custom-match the actual output. I have also worked around the problem with a test-only implementation of Put that enforces the contract and use that implementation for tests and the default for production. We do quite a bit of map/reduce with HBase on my team so it would be really helpful to get this fixed. I&apos;ve seen this issue with Hadoop MapWritable and the convention there seems to be to try and meet the equals() hashCode() contract.&lt;/p&gt;</comment>
                            <comment id="15671628" author="stack" created="Wed, 16 Nov 2016 21:05:32 +0000"  >&lt;p&gt;Still an issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12531847">HBASE-4813</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 7 Dec 2011 06:55:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>219792</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02bkv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11477</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>