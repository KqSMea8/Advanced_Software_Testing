<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:54:37 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-8372/HBASE-8372.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-8372] Provide mutability to CompoundConfiguration</title>
                <link>https://issues.apache.org/jira/browse/HBASE-8372</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In discussion of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8347&quot; title=&quot;TestSecureLoadInc* tests hang repeatedly getting UnsupportedOperationException  in hadoop2 profile&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8347&quot;&gt;&lt;del&gt;HBASE-8347&lt;/del&gt;&lt;/a&gt;, it was proposed that CompoundConfiguration should support mutability.&lt;/p&gt;

&lt;p&gt;This can be done by consolidating ImmutableConfigMap&apos;s on first modification to CompoundConfiguration.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12643219">HBASE-8372</key>
            <summary>Provide mutability to CompoundConfiguration</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jmhsieh">Jonathan Hsieh</assignee>
                                    <reporter username="yuzhihong@gmail.com">Ted Yu</reporter>
                        <labels>
                    </labels>
                <created>Thu, 18 Apr 2013 13:36:52 +0000</created>
                <updated>Thu, 24 Oct 2013 19:22:12 +0000</updated>
                            <resolved>Tue, 23 Apr 2013 19:52:58 +0000</resolved>
                                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.95.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13638524" author="jmhsieh" created="Mon, 22 Apr 2013 22:33:57 +0000"  >&lt;p&gt;Attached patch addes mutability to individual properties, adds a unit test and allows TestSecureLoadInc* to pass under the hadoop2 profile.&lt;/p&gt;</comment>
                            <comment id="13638526" author="jmhsieh" created="Mon, 22 Apr 2013 22:35:19 +0000"  >&lt;p&gt;fixed a nit on initial upload.&lt;/p&gt;</comment>
                            <comment id="13638538" author="sershe" created="Mon, 22 Apr 2013 22:50:13 +0000"  >
&lt;blockquote&gt;&lt;p&gt;+ * WARNING: The values set in the CompoundConfiguration are do not handle Property variable substitution.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If I understand this correctly, this also removes the support for substitutions from data coming from HTD/HCD configuration and metadata...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;underlaying&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Underlying? &lt;/p&gt;

&lt;p&gt;Size implementation is not correct, but it wasn&apos;t before, either.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;CompoundConfiguraiton&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;typo&lt;/p&gt;
</comment>
                            <comment id="13638550" author="jmhsieh" created="Mon, 22 Apr 2013 23:01:37 +0000"  >&lt;p&gt;Will fix typos. Currently running full suites against hadoop1 and hadoop2.  (ran isolated tests prior to posting test).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If I understand this correctly, this also removes the support for substitutions from data coming from HTD/HCD configuration and metadata...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This has been the case since this method was added (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5335&quot; title=&quot;Dynamic Schema Configurations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5335&quot;&gt;&lt;del&gt;HBASE-5335&lt;/del&gt;&lt;/a&gt;, to support dynamic schema change).  I haven&apos;t changed the semantics of get (all the HTC, HCD&apos;s values added using maps aren&apos;t affected &amp;#8211; they couldn&apos;t support this either).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Size implementation is not correct, but it wasn&apos;t before, either.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Since this is &quot;semantics preserving&quot;, mind if I TODO this with a follow on jira?  I primarily care about resolving &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8347&quot; title=&quot;TestSecureLoadInc* tests hang repeatedly getting UnsupportedOperationException  in hadoop2 profile&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8347&quot;&gt;&lt;del&gt;HBASE-8347&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;
</comment>
                            <comment id="13638553" author="jmhsieh" created="Mon, 22 Apr 2013 23:03:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;Since this is &quot;semantics preserving&quot;, mind if I TODO this with a follow on jira? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Or I could make it correct but it would be quite slow, so I&apos;d put warnings on it.&lt;/p&gt;</comment>
                            <comment id="13638555" author="sershe" created="Mon, 22 Apr 2013 23:05:54 +0000"  >&lt;p&gt;Separate JIRA works, +1 assuming typos are fixed/tests pass&lt;/p&gt;</comment>
                            <comment id="13638567" author="yuzhihong@gmail.com" created="Mon, 22 Apr 2013 23:22:28 +0000"  >&lt;p&gt;When mutableConf is not null, can we get rid of the list of ImmutableConfigMap&apos;s ?&lt;br/&gt;
This consolidation can be achieved upon the first call to set().&lt;/p&gt;</comment>
                            <comment id="13638573" author="hadoopqa" created="Mon, 22 Apr 2013 23:44:47 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12579919/hbase-8372.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12579919/hbase-8372.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5386//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13638705" author="jmhsieh" created="Tue, 23 Apr 2013 01:50:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;When mutableConf is not null, can we get rid of the list of ImmutableConfigMap&apos;s ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This consolidation can be achieved upon the first call to set().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt;, I don&apos;t that is correct unless we go through and copy all the values from the parents.  Doing that seems to negate the purpose of having the CompoundConfiguariton.  We also would lose the ability to change a parent configuration under this config and have the change visible to CompoundConfiguration (I believe there the original comments have something about this).  &lt;/p&gt;</comment>
                            <comment id="13638706" author="jmhsieh" created="Tue, 23 Apr 2013 01:51:24 +0000"  >&lt;p&gt;Looks like hadoop1 passed here. In my hadoop2 runs the tests I was concerned about pass (and we have a few failures from the usual hadoop2 flakies).&lt;/p&gt;</comment>
                            <comment id="13638712" author="yuzhihong@gmail.com" created="Tue, 23 Apr 2013 02:04:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;We also would lose the ability to change a parent configuration under this config and have the change visible to CompoundConfiguration&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you elaborate the above a little bit more ?&lt;br/&gt;
If the list of ImmutableConfigMap&apos;s are consolidated into mutableConf, we&apos;re free to change any config entry in mutableConf, right ?&lt;/p&gt;</comment>
                            <comment id="13638716" author="jmhsieh" created="Tue, 23 Apr 2013 02:08:47 +0000"  >&lt;p&gt;The class&apos;s javadoc describes intended semantics.  See the &quot;For clarity&quot; section:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
 * Do a shallow merge of multiple KV configuration pools. This is a very useful
 * utility class to easily add per-object configurations in addition to wider
 * scope settings. This is different from Configuration.addResource()
 * functionality, which performs a deep merge and mutates the common data
 * structure.
 * &amp;lt;p&amp;gt;
 * The iterator on CompoundConfiguration is unmodifiable. Obtaining iterator is an expensive
 * operation.
 * &amp;lt;p&amp;gt;
 * For clarity: the shallow merge allows the user to mutate either of the
 * configuration objects and have changes reflected everywhere. In contrast to a
 * deep merge, that requires you to explicitly know all applicable copies to
 * propagate changes.
 * 
 * WARNING: The values set in the CompoundConfiguration are &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; not handle Property variable
 * substitution.  However, &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; they are set in the underlying configuration substitutions are
 * done. 
 */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13638720" author="jmhsieh" created="Tue, 23 Apr 2013 02:19:21 +0000"  >&lt;p&gt;v2 fixees typos, fixes &quot;new Configuration(false)&quot; so it actually creates an empty config, and adds test that demonstrates that adding to a parent config propagates and is visible to the CompoundConfig that contains it.&lt;/p&gt;</comment>
                            <comment id="13638731" author="yuzhihong@gmail.com" created="Tue, 23 Apr 2013 02:44:03 +0000"  >&lt;p&gt;What happens if compoundConf.set(&quot;a&quot;, &quot;b&quot;) gets called first followed by compoundConf.addStringMap() where one of the entries is also keyed on &quot;a&quot; ?&lt;br/&gt;
The entry from the StringMap should override the tuple (&quot;a&quot;, &quot;b&quot;) from the set() call, right ?&lt;/p&gt;</comment>
                            <comment id="13638748" author="hadoopqa" created="Tue, 23 Apr 2013 03:35:21 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12579963/hbase-8372.v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12579963/hbase-8372.v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5390//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13638979" author="jmhsieh" created="Tue, 23 Apr 2013 12:00:14 +0000"  >&lt;p&gt;v3 address&apos;s ted&apos;s case by throwing an unsupportedOperationException if a bulk add is attempted after a set is called.&lt;/p&gt;</comment>
                            <comment id="13638980" author="jmhsieh" created="Tue, 23 Apr 2013 12:01:36 +0000"  >&lt;p&gt;nice catch ted.  since this never happens in the code currently, I&apos;ve added a check that throws an exception if that occurs.  Will let tests run and if clean I plan on committing.&lt;/p&gt;</comment>
                            <comment id="13639019" author="hadoopqa" created="Tue, 23 Apr 2013 13:03:41 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12580029/hbase-8372.v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12580029/hbase-8372.v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5396//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13639035" author="yuzhihong@gmail.com" created="Tue, 23 Apr 2013 13:19:57 +0000"  >&lt;p&gt;In my opinion, the places where UnsupportedOperationException is added should be good candidates for merging the ImmutableConfigMap&apos;s.&lt;br/&gt;
For patch v3, we would face scenario where dynamic config is no longer supported after one call to set() method. I don&apos;t think this is desirable.&lt;/p&gt;</comment>
                            <comment id="13639042" author="jmhsieh" created="Tue, 23 Apr 2013 13:28:23 +0000"  >&lt;p&gt;I think the unit tests passing show that this is currently a speculative scenario.  If the the scenario is encountered a reasonable warning is provided.&lt;/p&gt;</comment>
                            <comment id="13639051" author="yuzhihong@gmail.com" created="Tue, 23 Apr 2013 13:37:01 +0000"  >&lt;p&gt;In a long running cluster, we should anticipate mixture of calls to set() and addXXX(). We should support them.&lt;/p&gt;

&lt;p&gt;If UnsupportedOperationException is thrown, code utilizing CompoundConfiguration wouldn&apos;t be able to recover.&lt;/p&gt;</comment>
                            <comment id="13639062" author="jmhsieh" created="Tue, 23 Apr 2013 13:48:04 +0000"  >&lt;p&gt;Currently, there are none of these hypothetical edits in our unit tests &amp;#8211; if the did exist today, any attempts would have failed.  This patch only widens the possible places edits can be done but does not introduce the situations you mention.  If can happen somewhere, this means our unit tests are insufficient, and we should add coverage.&lt;/p&gt;

&lt;p&gt;I think it would be appropriate to add that functionality if/when we need it.  If you want me to add it now, please provide a scenario where this problem can happen today.  If a reasonable scenario is described, I&apos;ll file a follow-on-jira to add the unit tests to cover this.  &lt;/p&gt;

</comment>
                            <comment id="13639088" author="yuzhihong@gmail.com" created="Tue, 23 Apr 2013 14:10:03 +0000"  >&lt;p&gt;Consider the scenario described by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8347&quot; title=&quot;TestSecureLoadInc* tests hang repeatedly getting UnsupportedOperationException  in hadoop2 profile&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8347&quot;&gt;&lt;del&gt;HBASE-8347&lt;/del&gt;&lt;/a&gt;. Here is the call stack:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2013-04-15 14:03:50,311 ERROR [IPC Server handler 0 on 53755] access.SecureBulkLoadEndpoint$1(240): Failed to complete bulk load
java.lang.UnsupportedOperationException: Immutable Configuration
        at org.apache.hadoop.hbase.CompoundConfiguration.setClass(CompoundConfiguration.java:511)
        at org.apache.hadoop.ipc.RPC.setProtocolEngine(RPC.java:193)
        at org.apache.hadoop.hdfs.NameNodeProxies.createNNProxyWithClientProtocol(NameNodeProxies.java:249)
        at org.apache.hadoop.hdfs.NameNodeProxies.createNonHAProxy(NameNodeProxies.java:168)
        at org.apache.hadoop.hdfs.NameNodeProxies.createProxy(NameNodeProxies.java:129)
        at org.apache.hadoop.hdfs.DFSClient.&amp;lt;init&amp;gt;(DFSClient.java:409)
        at org.apache.hadoop.hdfs.DFSClient.&amp;lt;init&amp;gt;(DFSClient.java:376)
        at org.apache.hadoop.hdfs.DistributedFileSystem.initialize(DistributedFileSystem.java:123)
        at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:2296)
        at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:85)
        at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:2330)
        at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:2312)
        at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:316)
        at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:162)
        at org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint$1.run(SecureBulkLoadEndpoint.java:224)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here is related code from SecureBulkLoadEndpoint#start():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    conf = env.getConfiguration();
    baseStagingDir = SecureBulkLoadUtil.getBaseStagingDir(conf);

    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      fs = FileSystem.get(conf);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;SecureBulkLoadEndpoint retrieves CompoundConfiguration from CoprocessorEnvironment. This CompoundConfiguration is shared with the underlying HRegion.&lt;br/&gt;
After CompoundConfiguration.setClass() call, this CompoundConfiguration becomes mutable.&lt;br/&gt;
Our expectation would be for the underlying HRegion to continue supporting dynamic config &lt;b&gt;and&lt;/b&gt; for SecureBulkLoadEndpoint to see the new config entries.&lt;/p&gt;</comment>
                            <comment id="13639094" author="jmhsieh" created="Tue, 23 Apr 2013 14:18:44 +0000"  >&lt;p&gt;The specific example great &amp;#8211; please do this in the future!  When this is concrete it is much easier to act upon.  &lt;/p&gt;

&lt;p&gt;Here&apos;s what I get:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
mvn test -Dhadoop.profile=2.0 -Dtest=TestSecureLoadInc*
...
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery
Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.318 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles
Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.376 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13639133" author="jmhsieh" created="Tue, 23 Apr 2013 15:01:15 +0000"  >&lt;p&gt;v4. Updated to support newly added maps/confs after a set call in a CompoundConfiguration.&lt;/p&gt;</comment>
                            <comment id="13639135" author="jmhsieh" created="Tue, 23 Apr 2013 15:03:56 +0000"  >&lt;p&gt;v4 tests against suspect hadoop2 unit tests:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
~/proj/hbase$ mvn test -Dhadoop.profile=2.0 -Dtest=TestSecureLoadInc*,TestStore
...
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 22.233 sec
Running org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 17.217 sec
Running org.apache.hadoop.hbase.regionserver.TestStore
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 13.294 sec
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13639145" author="yuzhihong@gmail.com" created="Tue, 23 Apr 2013 15:14:16 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (mutableConf != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+      &lt;span class=&quot;code-comment&quot;&gt;// convert mutableConf to a immutable one and reset to allow a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; mutable conf
&lt;/span&gt;+      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.configs.add(0, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ImmutableConfWrapper(mutableConf));
+      mutableConf = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can we extract the above into a method ? It is called multiple times.&lt;br/&gt;
&apos;to a immutable&apos;: typo&lt;/p&gt;

&lt;p&gt;When set() and addXXX() are called alternately, we would create multiple ImmutableConfWrapper&apos;s.&lt;br/&gt;
This seems suboptimal.&lt;/p&gt;</comment>
                            <comment id="13639167" author="jmhsieh" created="Tue, 23 Apr 2013 15:34:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can we extract the above into a method ? It is called multiple times.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Fixed&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&apos;to a immutable&apos;: typo&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Fixed&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When set() and addXXX() are called alternately, we would create multiple ImmutableConfWrapper&apos;s. This seems suboptimal.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Do you have a suggestion for something that would be optimal and preserve the intended semantics?&lt;/p&gt;</comment>
                            <comment id="13639172" author="jmhsieh" created="Tue, 23 Apr 2013 15:40:25 +0000"  >&lt;p&gt;v5 does the suggested refactor.&lt;/p&gt;</comment>
                            <comment id="13639187" author="hadoopqa" created="Tue, 23 Apr 2013 16:06:03 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12580055/hbase-8372.v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12580055/hbase-8372.v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5398//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13639203" author="yuzhihong@gmail.com" created="Tue, 23 Apr 2013 16:29:31 +0000"  >&lt;p&gt;My interpretation of mutability for CompoundConfiguration is that once mutableConf is materialized, we can deep merge existing list of ImmutableConfigMap into mutableConf.&lt;br/&gt;
Subsequent calls to addXXX() would merge the config entries of the method parameter into mutableConf.&lt;br/&gt;
This way, we have good control of memory footprint for CompoundConfiguration instances in long running cluster.&lt;/p&gt;</comment>
                            <comment id="13639214" author="hadoopqa" created="Tue, 23 Apr 2013 16:45:12 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12580061/hbase-8372.v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12580061/hbase-8372.v5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5399//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13639247" author="jmhsieh" created="Tue, 23 Apr 2013 17:05:31 +0000"  >&lt;p&gt;If we are not arguing about correctness I&apos;d like to commit this and file a follow on for perf concerns. &lt;/p&gt;

&lt;p&gt;I&apos;m not sure I buy your argument. It sounds like we potentially break semantics and use more mem; both seem undesirable. If we do what you suggest we then end up copying the data everywhere instead of sharing (ex: htabledescription&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt; provides an sharable shallow copy of the map map, in every region).  If we did what you suggest, we&apos;d now have copy of each value into a new mutableConf (an extra hash table entry per prop per region as opposed to a single pointer to a singlethe htd table), and we lose the ability to propagate changes to the added map without hunting down every instance present.  (if we change the table map, we&apos;d need to hunt all instances down to propagate htd changes to each regions conf.) &lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://github.com/apache/hbase/blob/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java#L437&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hbase/blob/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java#L437&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://github.com/apache/hbase/blob/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java#L1413&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hbase/blob/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java#L1413&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://github.com/apache/hbase/blob/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java#L488&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hbase/blob/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java#L488&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13639272" author="yuzhihong@gmail.com" created="Tue, 23 Apr 2013 17:28:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;we&apos;d now have copy of each value into a new mutableConf&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you clarify the meaning of &apos;a new mutableConf&apos; ? Once mutableConf is materialized inside CompoundConfiguration, the list of ImmutableConfigMap&apos;s are no longer needed (after merging them into mutableConf).&lt;/p&gt;

&lt;p&gt;In patch v5, each time freezeMutableConf() is called, ImmutableConfWrapper would keep a reference to mutableConf. This leads to more memory consumption.&lt;/p&gt;</comment>
                            <comment id="13639313" author="jmhsieh" created="Tue, 23 Apr 2013 17:55:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can you clarify the meaning of &apos;a new mutableConf&apos; ? Once mutableConf is materialized inside CompoundConfiguration, the list of ImmutableConfigMap&apos;s are no longer needed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I believe this is false.  Let me spend the time to explicitly illustrate the different approaches with a pseudo code unit test.  &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Conf hbase = &amp;lt;from hbase-site.xml/hbasedefault.xml&amp;gt;. 
Conf htd = &amp;lt;from htabledescription of table t&amp;gt;
Conf hri = &amp;lt;from hregioninfo of region r in table t&amp;gt;
Conf compound = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CompoundConfiguration;
compound.add(hbase);
compound.add(htd);
compound.add(hri);

compound.set(&lt;span class=&quot;code-quote&quot;&gt;&quot;key&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;value&quot;&lt;/span&gt;);
assertEquals(&lt;span class=&quot;code-quote&quot;&gt;&quot;value&quot;&lt;/span&gt;, compound.get(&lt;span class=&quot;code-quote&quot;&gt;&quot;key&quot;&lt;/span&gt;)); &lt;span class=&quot;code-comment&quot;&gt;// passes
&lt;/span&gt;
Map&amp;lt;..&amp;gt; map = &amp;lt;&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; map that doesn&apos;t overlap any values&amp;gt;; 
compound.add(map); &lt;span class=&quot;code-comment&quot;&gt;// trigger freeze
&lt;/span&gt;
hbase.set(&lt;span class=&quot;code-quote&quot;&gt;&quot;hbasekey&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;hbasevalue&quot;&lt;/span&gt;);
assertEquals(&lt;span class=&quot;code-quote&quot;&gt;&quot;hbasevalue&quot;&lt;/span&gt;, compound.get(&lt;span class=&quot;code-quote&quot;&gt;&quot;hbasekey&quot;&lt;/span&gt;)); &lt;span class=&quot;code-comment&quot;&gt;// should pass.  If the triggered freeze did deep copy, it would fail because there is no reference to the higher level&apos;s table
&lt;/span&gt;hri.setProp(&lt;span class=&quot;code-quote&quot;&gt;&quot;...&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;blah&quot;&lt;/span&gt;);
assertEquals(&lt;span class=&quot;code-quote&quot;&gt;&quot;blah&quot;&lt;/span&gt;, compound.get(&lt;span class=&quot;code-quote&quot;&gt;&quot;...&quot;&lt;/span&gt;)); &lt;span class=&quot;code-comment&quot;&gt;// should pass.  If the triggered freeze did deep copy, it would fail because there is no reference to the higher level&apos;s table&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we did a deep copy, and eliminated the list of ImmutableConfigMaps, we&apos;d have a copy of each configuration value, essentially taking up an entry per property in each of the levels instead of a single pointer to the previous level&apos;s map.  This is a common pattern used to manage hierarchical scope.&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;&lt;p&gt;In patch v5, each time freezeMutableConf() is called, ImmutableConfWrapper would keep a reference to mutableConf. This leads to more memory consumption.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Only if there is a mutableConf present.  If I do multiple add* in a row, no new mutableConf will be added.&lt;/p&gt;

&lt;p&gt;I&apos;m surprised I need to be this explicit.  I&apos;ve numbered the relevant lines in the code.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

+  /**
+   * If set has been called, it will create a mutableConf.  This converts the mutableConf to an
+   * immutable one and resets it to allow a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; mutable conf.  This is used when a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; map or
+   * conf is added to the compound configuration to preserve proper override semantics.
+   */
+  void freezeMutableConf() {
1:+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (mutableConf == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
2:+      &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; nothing &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; there is no current mutableConf
&lt;/span&gt;3:+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
4:+    }
5:+
6:+    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.configs.add(0, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ImmutableConfWrapper(mutableConf));
7:+    mutableConf = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
8:+  }
+
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
	&lt;li&gt;Let&apos;s say there has never been a set call.  mutableConf is null.  At line 1, we see this is null, and then as the comment says in line 2, we return at line 3.&lt;/li&gt;
	&lt;li&gt;Let&apos;s say set has been called and mutableConf is not null.  At line 1 we see that mutableConf is not null.  We go to line 6 and then wrap and include the mutable conf to the configs maps.  Then at line 7 we null out the mutableConf
	&lt;ul&gt;
		&lt;li&gt;If set is not called and freeze is called again, mutableConf will be null &amp;#8211; and we proceed via option 1 and exit at line 3.  No new memory allocations.&lt;/li&gt;
		&lt;li&gt;If set is called and then freeze is called again, mutableConf will be non-null &amp;#8211; and we proceed via option 2 and exit at line 7.  One new memory allocation with a pointer to the old mutableConf.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ol&gt;





</comment>
                            <comment id="13639341" author="yuzhihong@gmail.com" created="Tue, 23 Apr 2013 18:18:00 +0000"  >&lt;p&gt;Using example is always the best way to understand assumptions.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;hbase.set(&quot;hbasekey&quot;, &quot;hbasevalue&quot;);&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I am not sure the above usage is supported currently - namely, retrieval of new key/value after the add() call.&lt;br/&gt;
Looking at current TestCompoundConfiguration:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    CompoundConfiguration compoundConf = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CompoundConfiguration()
        .add(baseConf)
        .add(conf);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There is no set() call after the add() calls.&lt;/p&gt;

&lt;p&gt;In your example above, I think the correct way of overriding key with value after the add(hri) call is made should be using another add() call. This is because the order of adding hbase, htd and hri to the compound is significant. When htd and hri contain entries with same key but different values, I do not expect htd.set(key, newValue) would be effective.&lt;/p&gt;</comment>
                            <comment id="13639387" author="jmhsieh" created="Tue, 23 Apr 2013 18:48:01 +0000"  >&lt;p&gt;So wait, you&apos;ve asked me to deal with the case where add is called after set, and I&apos;ve wrote code making it unsupported.  You pointed out a counter example where that was insufficient, and I added code and unit tests that address that.  &lt;/p&gt;

&lt;p&gt;Now you are saying the usage of set after an add is unsupported?  Please make up your mind. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Please provide unit test psuedo-code to demonstrate the semantics you want in a follow-jira.&lt;/b&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;There is no set() call after the add() calls.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In your previous counterexample, with the TestSecureLoadInc* there obviously is an &lt;tt&gt;add&lt;/tt&gt; after a &lt;tt&gt;set&lt;/tt&gt;.  The code in v5 handles that as well as the case where &lt;tt&gt;set&lt;/tt&gt; is called after an &lt;tt&gt;add&lt;/tt&gt;.  The unit tests define the semantics to be that of a standard hierarchically scoped symbol table as described in the class&apos;s javadoc.  Let me refer to this, again:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 * For clarity: the shallow merge allows the user to mutate either of the
 * configuration objects and have changes reflected everywhere. In contrast to a
 * deep merge, that requires you to explicitly know all applicable copies to
 * propagate changes.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;&lt;p&gt;In your example above, I think the correct way of overriding key with value after the add(hri) call is made should be using another add() call. This is because the order of adding hbase, htd and hri to the compound is significant. When htd and hri contain entries with same key but different values, I do not expect htd.set(key, newValue) would be effective.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I noted that the &lt;tt&gt;Map&amp;lt;...&amp;gt; map&lt;/tt&gt; I&apos;ve added after the set doesn&apos;t have any overlapping keys.  Thus if I set hbasekey using the hbase conf, it should by the javadoc propagate up to the compoind&apos;s get call.  The unit tests I added to the code show this.  If I were to add another &lt;tt&gt;set(&quot;hbasekey&quot;,..)&lt;/tt&gt; at the htd level, the htd&apos;s hbasekey value would be returned, overriding the hbase level. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Please be explicit &amp;#8211; provide an example in psuedo-code instead of vague prose.  I don&apos;t have the time to infer or to make your own arguments for you.&lt;/b&gt;  &lt;/p&gt;

&lt;p&gt;If the tests comeback clean, I intend in committing this this afternoon.&lt;/p&gt;
</comment>
                            <comment id="13639432" author="yuzhihong@gmail.com" created="Tue, 23 Apr 2013 19:11:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;If we are not arguing about correctness I&apos;d like to commit this and file a follow on for perf concerns.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I agree with the above.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If the tests comeback clean&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think patch v5 passed QA run.&lt;/p&gt;

&lt;p&gt;Thanks for your patience, Jon.&lt;/p&gt;

&lt;p&gt;+1 from me.&lt;/p&gt;</comment>
                            <comment id="13639490" author="jmhsieh" created="Tue, 23 Apr 2013 19:52:58 +0000"  >&lt;p&gt;Thanks for the reviews sergey and ted.  Committed to trunk and 0.95&lt;/p&gt;</comment>
                            <comment id="13639501" author="jmhsieh" created="Tue, 23 Apr 2013 19:54:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt; please file the follow-on with the perf concern you have because I don&apos;t quite understand it currently.&lt;/p&gt;</comment>
                            <comment id="13639831" author="hudson" created="Tue, 23 Apr 2013 23:36:28 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #4076 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4076/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4076/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8372&quot; title=&quot;Provide mutability to CompoundConfiguration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8372&quot;&gt;&lt;del&gt;HBASE-8372&lt;/del&gt;&lt;/a&gt; Provide mutability to CompoundConfiguration&lt;br/&gt;
This patch also addresses:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8347&quot; title=&quot;TestSecureLoadInc* tests hang repeatedly getting UnsupportedOperationException  in hadoop2 profile&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8347&quot;&gt;&lt;del&gt;HBASE-8347&lt;/del&gt;&lt;/a&gt; TestSecureLoadInc* tests hang repeatedly getting UnsupportedOperationException in hadoop2 profile (Revision 1471118)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
jmhsieh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/CompoundConfiguration.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/test/java/org/apache/hadoop/hbase/TestCompoundConfiguration.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13639957" author="hudson" created="Wed, 24 Apr 2013 01:31:54 +0000"  >&lt;p&gt;Integrated in hbase-0.95 #159 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/159/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/159/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8372&quot; title=&quot;Provide mutability to CompoundConfiguration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8372&quot;&gt;&lt;del&gt;HBASE-8372&lt;/del&gt;&lt;/a&gt; Provide mutability to CompoundConfiguration&lt;br/&gt;
This patch also addresses:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8347&quot; title=&quot;TestSecureLoadInc* tests hang repeatedly getting UnsupportedOperationException  in hadoop2 profile&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8347&quot;&gt;&lt;del&gt;HBASE-8347&lt;/del&gt;&lt;/a&gt; TestSecureLoadInc* tests hang repeatedly getting UnsupportedOperationException in hadoop2 profile (Revision 1471119)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jmhsieh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/java/org/apache/hadoop/hbase/CompoundConfiguration.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/test/java/org/apache/hadoop/hbase/TestCompoundConfiguration.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13640238" author="hudson" created="Wed, 24 Apr 2013 08:38:01 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #508 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/508/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/508/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8372&quot; title=&quot;Provide mutability to CompoundConfiguration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8372&quot;&gt;&lt;del&gt;HBASE-8372&lt;/del&gt;&lt;/a&gt; Provide mutability to CompoundConfiguration&lt;br/&gt;
This patch also addresses:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8347&quot; title=&quot;TestSecureLoadInc* tests hang repeatedly getting UnsupportedOperationException  in hadoop2 profile&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8347&quot;&gt;&lt;del&gt;HBASE-8347&lt;/del&gt;&lt;/a&gt; TestSecureLoadInc* tests hang repeatedly getting UnsupportedOperationException in hadoop2 profile (Revision 1471118)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jmhsieh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/CompoundConfiguration.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/test/java/org/apache/hadoop/hbase/TestCompoundConfiguration.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13640288" author="hudson" created="Wed, 24 Apr 2013 09:34:32 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #78 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/78/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/78/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8372&quot; title=&quot;Provide mutability to CompoundConfiguration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8372&quot;&gt;&lt;del&gt;HBASE-8372&lt;/del&gt;&lt;/a&gt; Provide mutability to CompoundConfiguration&lt;br/&gt;
This patch also addresses:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8347&quot; title=&quot;TestSecureLoadInc* tests hang repeatedly getting UnsupportedOperationException  in hadoop2 profile&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8347&quot;&gt;&lt;del&gt;HBASE-8347&lt;/del&gt;&lt;/a&gt; TestSecureLoadInc* tests hang repeatedly getting UnsupportedOperationException in hadoop2 profile (Revision 1471119)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jmhsieh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/java/org/apache/hadoop/hbase/CompoundConfiguration.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/test/java/org/apache/hadoop/hbase/TestCompoundConfiguration.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13804483" author="hudson" created="Thu, 24 Oct 2013 18:08:14 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.94-security #322 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/322/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/322/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9819&quot; title=&quot;Backport HBASE-8372 &amp;#39;Provide mutability to CompoundConfiguration&amp;#39; to 0.94&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9819&quot;&gt;&lt;del&gt;HBASE-9819&lt;/del&gt;&lt;/a&gt; Backport &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8372&quot; title=&quot;Provide mutability to CompoundConfiguration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8372&quot;&gt;&lt;del&gt;HBASE-8372&lt;/del&gt;&lt;/a&gt; &apos;Provide mutability to CompoundConfiguration&apos; to 0.94 (Ted Yu) (tedyu: rev 1535442)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/CompoundConfiguration.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundConfiguration.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13804582" author="hudson" created="Thu, 24 Oct 2013 19:22:12 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.94 #1181 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/1181/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/1181/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9819&quot; title=&quot;Backport HBASE-8372 &amp;#39;Provide mutability to CompoundConfiguration&amp;#39; to 0.94&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9819&quot;&gt;&lt;del&gt;HBASE-9819&lt;/del&gt;&lt;/a&gt; Backport &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8372&quot; title=&quot;Provide mutability to CompoundConfiguration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8372&quot;&gt;&lt;del&gt;HBASE-8372&lt;/del&gt;&lt;/a&gt; &apos;Provide mutability to CompoundConfiguration&apos; to 0.94 (Ted Yu) (tedyu: rev 1535442)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/CompoundConfiguration.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundConfiguration.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12675182">HBASE-9825</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12642625">HBASE-8347</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12675112">HBASE-9819</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12579919" name="hbase-8372.patch" size="13894" author="jmhsieh" created="Mon, 22 Apr 2013 22:35:19 +0000"/>
                            <attachment id="12579963" name="hbase-8372.v2.patch" size="14319" author="jmhsieh" created="Tue, 23 Apr 2013 02:19:21 +0000"/>
                            <attachment id="12580029" name="hbase-8372.v3.patch" size="17099" author="jmhsieh" created="Tue, 23 Apr 2013 12:00:14 +0000"/>
                            <attachment id="12580055" name="hbase-8372.v4.patch" size="20371" author="jmhsieh" created="Tue, 23 Apr 2013 15:01:15 +0000"/>
                            <attachment id="12580061" name="hbase-8372.v5.patch" size="20321" author="jmhsieh" created="Tue, 23 Apr 2013 15:40:25 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 22 Apr 2013 22:33:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>323629</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 8 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ju3z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>323974</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>