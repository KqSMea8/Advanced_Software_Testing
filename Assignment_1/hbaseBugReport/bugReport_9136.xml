<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:01:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9136/HBASE-9136.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9136] RPC side changes to have a different codec for server to client communication</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9136</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;With reference to the mail sent in the dev list,&lt;br/&gt;
&lt;a href=&quot;http://comments.gmane.org/gmane.comp.java.hadoop.hbase.devel/38984&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://comments.gmane.org/gmane.comp.java.hadoop.hbase.devel/38984&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We should have a provision such that the codec on the server side could be different from the one on the client side.  This would help to remove the tags for security usecases.  &lt;br/&gt;
This JIRA is aimed to provide that capability in the codec itself.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12662057">HBASE-9136</key>
            <summary>RPC side changes to have a different codec for server to client communication</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12646149">HBASE-8496</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="ram_krish">ramkrishna.s.vasudevan</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Aug 2013 07:20:28 +0000</created>
                <updated>Fri, 20 Nov 2015 11:53:05 +0000</updated>
                            <resolved>Fri, 20 Dec 2013 03:53:20 +0000</resolved>
                                                    <fixVersion>0.98.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13730472" author="anoop.hbase" created="Tue, 6 Aug 2013 07:25:07 +0000"  >&lt;p&gt;Ram&lt;/p&gt;

&lt;p&gt;As Stack said in the dev mailing list  (Could the codec itself figure its context and act appropriately)  that would be better??  Is ur idea that Encoder in the codec at RS does not write tags?   Then Replication will be an issue. During Replication teh encoder should write the Tags to the peer cluster&lt;/p&gt;</comment>
                            <comment id="13730483" author="ram_krish" created="Tue, 6 Aug 2013 07:42:50 +0000"  >&lt;p&gt;Yes that would be the idea here.  Changing the codec to figure it is what am also thinking.  May be the title says different. &lt;br/&gt;
&amp;gt;&amp;gt;This JIRA is aimed to provide that capability in the codec itself.&lt;br/&gt;
I added this line in the description.&lt;/p&gt;</comment>
                            <comment id="13730758" author="stack" created="Tue, 6 Aug 2013 13:26:58 +0000"  >&lt;p&gt;Replication is a different context again?  We shuttle the KVs across using a different API.  Could Codec figure this out?  (Just a suggestion)&lt;/p&gt;</comment>
                            <comment id="13731047" author="ram_krish" created="Tue, 6 Aug 2013 18:21:32 +0000"  >&lt;p&gt;&amp;gt;&amp;gt;We shuttle the KVs across using a different API. Could Codec figure this out? &lt;br/&gt;
Yes.  May be like how WAL does by passing the Compression to the codec and checking it for null and calling different encoder and decoder?&lt;br/&gt;
This would mean that we would get different implementation for the same codec?  But in the RPC layer we would not be able to differentiate the options.&lt;/p&gt;

&lt;p&gt;Let me think through on this more and comment here.  &lt;/p&gt;</comment>
                            <comment id="13731154" author="anoop.hbase" created="Tue, 6 Aug 2013 19:33:03 +0000"  >&lt;p&gt;In both cases (Return scan results to client or replication) KVs are serialized by RpcServer by getting the payload(cells) from the PayloadCarryingRpcController.  So not sure how easy it will be, to do any such differentiation in the RPC layer.  JFYI&lt;/p&gt;</comment>
                            <comment id="13731227" author="stack" created="Tue, 6 Aug 2013 20:26:43 +0000"  >&lt;p&gt;Why not just make a codec that strips tags from keys on the encoding and a decoder that can read KVs though the tags are stripped?  Or will clients be sending tags?&lt;/p&gt;</comment>
                            <comment id="13731587" author="ram_krish" created="Wed, 7 Aug 2013 02:40:03 +0000"  >&lt;p&gt;&amp;gt;&amp;gt;But in the RPC layer we would not be able to differentiate the options.&lt;br/&gt;
Yes i saw the code and found it is not easy to do this.&lt;br/&gt;
&amp;gt;&amp;gt;RpcServer by getting the payload(cells) from the PayloadCarryingRpcController.&lt;br/&gt;
Yes i can see that all are handled as cells and it is the same Codec that works on the REplication and in the normal scan.&lt;br/&gt;
&amp;gt;&amp;gt;Or will clients be sending tags?&lt;br/&gt;
Client needs to send the tags.  So only from server to client it has to be removed.&lt;/p&gt;</comment>
                            <comment id="13733225" author="ram_krish" created="Thu, 8 Aug 2013 07:27:01 +0000"  >&lt;p&gt;One way to do this is while creating the RPCClient make it aware whether it is on the client side or on the server side.&lt;br/&gt;
Use this information to initialize a different codec if that new codec is set if not go with the default codec.&lt;/p&gt;

&lt;p&gt;Another way could be,  based on the RPCClient that is created(i.e whether it is on client side or on the server side), set this information to the codec class.&lt;br/&gt;
So handle this flag inside the codec as what to do if the codec is set for a server or for the client.  &lt;br/&gt;
In case of replication, at least for the tag case the tag part should also be written.  &lt;/p&gt;</comment>
                            <comment id="13751117" author="apurtell" created="Tue, 27 Aug 2013 09:32:12 +0000"  >&lt;p&gt;Why can&apos;t we have different codecs set up for the client and server side (by configuration)? Seems generally useful. Putting flags in a monolithic codec produces a result limited to whatever we hardcode the codec to do when dealing with the flags. It&apos;s a lot more flexible to be able to swap in and out codecs on the client and server side. &lt;/p&gt;</comment>
                            <comment id="13759167" author="stack" created="Thu, 5 Sep 2013 15:41:22 +0000"  >&lt;p&gt;Client says what codec it wants to use.  Server replies using the named codec.  It does this:&lt;/p&gt;

&lt;p&gt;this.codec = (Codec)Class.forName(className).newInstance();&lt;/p&gt;

&lt;p&gt;Thats how it curently works.  I suppose you could add indirection so that when client says KeyValueCodec, server instantiates ServerSideKeyValueCodec.  Mapping could be done in Configuration (there is a Configuration instance in the RpcServer context).&lt;/p&gt;</comment>
                            <comment id="13759172" author="ram_krish" created="Thu, 5 Sep 2013 15:46:00 +0000"  >&lt;p&gt;Yes Stack.  We have a patch for this.&lt;br/&gt;
Exactly we have done what you have suggest.  So both client and server would instantiate two codecs.  One that comes from the header and the other that comes from the configuration.&lt;br/&gt;
So local Context and remote Context both would be available.  &lt;br/&gt;
So its like a two way communication.  I can attach a patch for this.  &lt;/p&gt;</comment>
                            <comment id="13772193" author="ram_krish" created="Thu, 19 Sep 2013 19:31:16 +0000"  >&lt;p&gt;Adds a new configuration and that configuration can be changed to add a codec that would allow us to suppress the tags. &lt;br/&gt;
IT is like a server would instantiate what client sends and both client and server would instantiate another codec from the configuration.&lt;/p&gt;</comment>
                            <comment id="13772319" author="hadoopqa" created="Thu, 19 Sep 2013 21:10:21 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12604094/HBASE-9136.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12604094/HBASE-9136.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7303//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13773215" author="apurtell" created="Fri, 20 Sep 2013 17:29:32 +0000"  >&lt;p&gt;In RpcClient you have this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -122,7 +122,9 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class RpcClient {
   &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; tcpKeepAlive; &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; T then use keepalives
&lt;/span&gt;   &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; pingInterval; &lt;span class=&quot;code-comment&quot;&gt;// how often sends ping to the server in msecs
&lt;/span&gt;   &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; FailedServers failedServers;
-  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Codec codec;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Codec localCodec;
+  &lt;span class=&quot;code-comment&quot;&gt;//codec used by the server.  Currently would be used from configuration
&lt;/span&gt;+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Codec remoteCodec;
   &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; CompressionCodec compressor;
   &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; IPCUtil ipcUtil;
 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But there is also a differentiation between local and remote codec on the server:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -1124,7 +1125,11 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class RpcServer &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; RpcServerInterface {
     /**
      * Codec the client asked use.
      */
-    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Codec codec;
+    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Codec remoteCodec;
+    /**
+     * Codec the server is configured to use
+     */
+    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Codec localCodec;
     /**
      * Compression codec the client asked us use.
      */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Is the net effect to simply choose a different codec for client&amp;lt;-&amp;gt;server communication? Don&apos;t we only want to &lt;em&gt;substitute&lt;/em&gt; one codec implementation for another on the server side? &lt;/p&gt;

&lt;p&gt;See what Stack said: &quot;I suppose you could add indirection so that when client says KeyValueCodec, server instantiates ServerSideKeyValueCodec. Mapping could be done in Configuration (there is a Configuration instance in the RpcServer context).&quot;&lt;/p&gt;

&lt;p&gt;Might drop this part of the description of the new configuration parameter:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+		The codec can be updated &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the server has to secure the tags from
+		reaching the client
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It&apos;s specific to one particular use.&lt;/p&gt;</comment>
                            <comment id="13780698" author="anoop.hbase" created="Sat, 28 Sep 2013 05:09:39 +0000"  >&lt;p&gt;Not sure whether we can always make the server not to return the tags back to the callee.  Take the case of Export tool which will create an MR based scan. In this case the server should return the tags also along with KV so that tags will also get exported. Basically the client should be able to tell whether it needs the tags back or not.  Making it more generic the client should be able to specify a Codec to be used&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; using the Encoder server will write and client will use the corresponding Decoder in the Codec.&lt;/p&gt;</comment>
                            <comment id="13780729" author="apurtell" created="Sat, 28 Sep 2013 06:39:36 +0000"  >&lt;blockquote&gt;&lt;p&gt;Making it more generic the client should be able to specify a Codec to be used using the Encoder server will write and client will use the corresponding Decoder in the Codec.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is that part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9351&quot; title=&quot;Connection capability negotiation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9351&quot;&gt;&lt;del&gt;HBASE-9351&lt;/del&gt;&lt;/a&gt;? Maybe the only part we need?&lt;/p&gt;</comment>
                            <comment id="13780754" author="anoop.hbase" created="Sat, 28 Sep 2013 08:40:38 +0000"  >&lt;p&gt;Yes Andy. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9351&quot; title=&quot;Connection capability negotiation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9351&quot;&gt;&lt;del&gt;HBASE-9351&lt;/del&gt;&lt;/a&gt; looks to be a super set of this. I think that is what we need.&lt;/p&gt;</comment>
                            <comment id="13781259" author="apurtell" created="Sun, 29 Sep 2013 06:12:44 +0000"  >&lt;p&gt;I opened &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9681&quot; title=&quot;Basic codec negotiation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9681&quot;&gt;HBASE-9681&lt;/a&gt;. If you guys think this suitably captures the scope of the work here, let&apos;s move to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9681&quot; title=&quot;Basic codec negotiation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9681&quot;&gt;HBASE-9681&lt;/a&gt; and close this issue.&lt;/p&gt;</comment>
                            <comment id="13852700" author="anoop.hbase" created="Thu, 19 Dec 2013 07:25:02 +0000"  >&lt;p&gt;Ram can this be closed ?&lt;/p&gt;</comment>
                            <comment id="15015901" author="lars_francke" created="Fri, 20 Nov 2015 11:53:05 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12665680">HBASE-9351</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12604094" name="HBASE-9136.patch" size="16618" author="ram_krish" created="Thu, 19 Sep 2013 19:29:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 6 Aug 2013 07:25:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>342061</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1mzq7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>342366</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9681&quot; title=&quot;Basic codec negotiation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9681&quot;&gt;HBASE-9681&lt;/a&gt;  deals with this and hence closing.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>