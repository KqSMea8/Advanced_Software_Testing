<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:31:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5796/HBASE-5796.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5796] Fix our abuse of IOE: see http://blog.tsunanet.net/2012/04/apache-hadoop-abuse-ioexception.html</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5796</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Lets make more context particular exceptions rather than throw IOEs everywhere.  See Beno&#238;t&apos;s rant: &lt;a href=&quot;http://blog.tsunanet.net/2012/04/apache-hadoop-abuse-ioexception.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://blog.tsunanet.net/2012/04/apache-hadoop-abuse-ioexception.html&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12551005">HBASE-5796</key>
            <summary>Fix our abuse of IOE: see http://blog.tsunanet.net/2012/04/apache-hadoop-abuse-ioexception.html</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Sun, 15 Apr 2012 22:24:46 +0000</created>
                <updated>Thu, 16 Aug 2012 18:43:03 +0000</updated>
                                                                                <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13254470" author="lhofhansl" created="Mon, 16 Apr 2012 00:31:07 +0000"  >&lt;p&gt;Could be as simple as a better hierarchy of classes extending IOException (like DoNotRetryException).&lt;/p&gt;</comment>
                            <comment id="13254474" author="tsuna" created="Mon, 16 Apr 2012 01:04:31 +0000"  >&lt;p&gt;I propose the following, as a temporary stopgap solution:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Create a new class that inherits from &lt;tt&gt;IOException&lt;/tt&gt;, call it &lt;tt&gt;HBaseException&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;Change &lt;b&gt;all&lt;/b&gt; HBase exceptions to inherit from them.  Replace all bare &lt;tt&gt;new IOException&lt;/tt&gt; with &lt;tt&gt;new HBaseException&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;Classify all exceptions to be under two categories: what can be potentially retried, and what cannot (this partially exists today under &lt;tt&gt;DoNotRetryException&lt;/tt&gt; as Lars points out).&lt;/li&gt;
	&lt;li&gt;At this point, nothing should be a bare &lt;tt&gt;HBaseException&lt;/tt&gt;, and nothing should be creating bare {{IOException}}s either.&lt;/li&gt;
	&lt;li&gt;Update all APIs to specify exceptions thrown with a type as specific as possible.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I believe most (if not all) of the steps above can be done while preserving API compatibility (and maybe even ABI compatibility).&lt;/p&gt;

&lt;p&gt;This would be a good first pass to partially clean up some of the mess we have today.  Also, because Hadoop is even worse than HBase, and because it&apos;s changing slowly, your code will still be crippled with &lt;tt&gt;IOException&lt;/tt&gt; from Hadoop.  I&apos;d recommend wrapping them all in a &lt;tt&gt;HadoopIOException&lt;/tt&gt;, which would inherit from &lt;tt&gt;HBaseException&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;Ultimately, I would &lt;b&gt;strongly&lt;/b&gt; encourage you to move away from &lt;tt&gt;IOException&lt;/tt&gt; altogether.  Not only because it&apos;s the wrong exception to use in most cases where it&apos;s used in Hadoop/HBase, but also because it&apos;s a checked exception.  As I wrote in my blog post, checked exceptions are like communism: they sound like a good idea, but they horribly fail in practice.  Here&apos;s a short but good article that conveys well two of the biggest show-stoppers with checked exceptions: &lt;a href=&quot;http://www.artima.com/intv/handcuffsP.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.artima.com/intv/handcuffsP.html&lt;/a&gt; &#8211; I&apos;m so happy that Scala didn&apos;t pick this up from Java.  Checked exceptions almost always wind up defeating their own purpose.  I&apos;m sure you guys have written enough code in big enough code bases to experience this too.&lt;/p&gt;</comment>
                            <comment id="13254476" author="zhihyu@ebaysf.com" created="Mon, 16 Apr 2012 01:12:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;all in a &lt;tt&gt;HadoopIOException&lt;/tt&gt;, which would inherit from &lt;tt&gt;HBaseException&lt;/tt&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I am afraid that some people would not feel comfortable with the above inheritance.&lt;/p&gt;</comment>
                            <comment id="13254477" author="tsuna" created="Mon, 16 Apr 2012 01:15:32 +0000"  >&lt;p&gt;Just to be clear: the wrapping of Hadoop&apos;s &lt;tt&gt;IOException&lt;/tt&gt; would be for a first pass, to make sure everything HBase throws inherits from an &lt;tt&gt;HBaseException&lt;/tt&gt;.  Ideally it would be better to pick a more specific type of exception, but I expect this will be difficult in various places where Hadoop suffers from the same problem and HBase itself has little to no visibility into what the exception from Hadoop really means.&lt;/p&gt;

&lt;p&gt;Also I&apos;d recommend to actually use &lt;tt&gt;HBaseIOException&lt;/tt&gt; as a base class name, and keep the name &lt;tt&gt;HBaseException&lt;/tt&gt; for when you guys switch to unchecked exceptions, if you&apos;re willing to consider going down that route eventually (that&apos;d require a separate JIRA issue).&lt;/p&gt;

&lt;p&gt;Since HBase 0.96 is the &quot;singularity&quot;, it&apos;s a good opportunity to break API compatibility.  In this case, every release up to and including 0.94.x would have &lt;tt&gt;HBaseIOException&lt;/tt&gt; as the parent class, and in 0.96 the only thing you need to change is to make everything inherit from &lt;tt&gt;HBaseException&lt;/tt&gt; (which itself would inherit from &lt;tt&gt;RuntimeException&lt;/tt&gt;).&lt;/p&gt;</comment>
                            <comment id="13436208" author="jmhsieh" created="Thu, 16 Aug 2012 18:39:50 +0000"  >&lt;p&gt;HBaseException.java and DeserializationException.java snuck in with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5336&quot; title=&quot;Spurious exceptions in HConnectionImplementation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5336&quot;&gt;&lt;del&gt;HBASE-5336&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m working on another patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6586&quot; title=&quot;Quarantine Corrupted HFiles with hbck&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6586&quot;&gt;&lt;del&gt;HBASE-6586&lt;/del&gt;&lt;/a&gt;) and adding am considering adding an HBaseIOException that is a subclass of IOException.  This would allow for compatibility with older versions for the time being and would allow the code to be more readable if used properly.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12600680">HBASE-6474</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 16 Apr 2012 00:31:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>235869</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 18 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hu3b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>102137</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>