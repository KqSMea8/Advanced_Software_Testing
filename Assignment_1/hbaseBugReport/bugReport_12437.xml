<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:33:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12437/HBASE-12437.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12437] HLogFactory should be able to accept multiple custom WALReaders in case of failure to read WAL logs due to upgrade/migrate of hbase</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12437</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The HLogFactory createReader function allows the user to create their own reader and just assumes that the reader will work correctly. &lt;br/&gt;
The default implementation checks between Protobuf and sequencefiles. However, the custom reader option does not account for any differences in the files. &lt;br/&gt;
There should be an option or configuration to specify multiple custom readers in the case that an old custom reader was used for sequence files and and a custom reader is being used for protobuf instead of throwing an IPBRE&lt;br/&gt;
The current HLogFactory does not allow me to fall back and handle upgraded file systems similar to the default case.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12753484">HBASE-12437</key>
            <summary>HLogFactory should be able to accept multiple custom WALReaders in case of failure to read WAL logs due to upgrade/migrate of hbase</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="enhs8920">Enoch Hsu</reporter>
                        <labels>
                    </labels>
                <created>Thu, 6 Nov 2014 19:31:57 +0000</created>
                <updated>Mon, 5 Jan 2015 02:50:36 +0000</updated>
                                            <version>0.96.0</version>
                    <version>0.98.4</version>
                                                    <component>wal</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="14200751" author="busbey" created="Thu, 6 Nov 2014 19:38:57 +0000"  >&lt;p&gt;If the user provided a custom reader it&apos;s pretty dangerous for us to attempt to process them with some other reader blindly. esp if the fall back reader fails softly (that is, fails to read all the data but doesn&apos;t know it), because the logs will be archived/deleted.&lt;/p&gt;

&lt;p&gt;Does the current IPBRE fail loudly with a message that the configured log reader is invalid?&lt;/p&gt;</comment>
                            <comment id="14200775" author="enhs8920" created="Thu, 6 Nov 2014 19:49:38 +0000"  >&lt;p&gt;It&apos;s failing with an invalid wire type&lt;/p&gt;

&lt;p&gt;com.google.protobuf.InvalidProtocolBufferException: Protocol message tag had invalid wire type.&lt;br/&gt;
at com.google.protobuf.InvalidProtocolBufferException.invalidWireType(InvalidProtocolBufferException.java:99)&lt;br/&gt;
at com.google.protobuf.UnknownFieldSet$Builder.mergeFieldFrom(UnknownFieldSet.java:498)&lt;br/&gt;
at com.google.protobuf.GeneratedMessage.parseUnknownField(GeneratedMessage.java:193)&lt;/p&gt;</comment>
                            <comment id="14200791" author="enhs8920" created="Thu, 6 Nov 2014 19:55:20 +0000"  >&lt;p&gt;hmm you bring up a good point.&lt;br/&gt;
Hbase should only override the custom reader if the protobufexception is a wiretype exception then which means that the custom reader is not even able to read the file?&lt;/p&gt;</comment>
                            <comment id="14200807" author="hadoopqa" created="Thu, 6 Nov 2014 20:02:10 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12679925/HBASE_12437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12679925/HBASE_12437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12679925&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11608//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11608//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14200811" author="busbey" created="Thu, 6 Nov 2014 20:03:05 +0000"  >&lt;p&gt;I think we should update the error to make it clearer that they might have misconfigured the LogReader.&lt;/p&gt;

&lt;p&gt;Not being able to read it at all doesn&apos;t give us any more information about how safe it is to rely on a default reader to handle the file. If we get it wrong we get data loss, so I&apos;d much rather we fail loudly and get an operator&apos;s attention. They should know about the reader they have in place and whether or not the default readers can safely be used as a replacement. We can give some guidance on this in the troubleshooting section of the ref guide.&lt;/p&gt;</comment>
                            <comment id="14200917" author="apurtell" created="Thu, 6 Nov 2014 21:02:34 +0000"  >&lt;p&gt;We shouldn&apos;t load the default WAL reader if a custom WAL reader fails. &lt;/p&gt;

&lt;p&gt;So let&apos;s either:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Change the title on this JIRA to the improving logging suggestion above&lt;/li&gt;
	&lt;li&gt;Close as invalid.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14201065" author="jinghe" created="Thu, 6 Nov 2014 22:23:57 +0000"  >&lt;p&gt;Here is the issue.&lt;/p&gt;

&lt;p&gt;In the default case, we provided two WAL readers: ProtobufLogReader and SequenceFileLogReader.&lt;br/&gt;
The purpose is probably for upgrade/migration. In case we still have 0.94 sequence WALs after upgrade, we will fall back to the SequenceFileLogReader to handle them.&lt;/p&gt;

&lt;p&gt;But this mechanism is not available in the custom case.  Suppose I have two custom WAL readers. One for the older version of sequence files. One is for protobuf implementation.&lt;br/&gt;
The current HLogFactory does not allow me to fall back and handle upgrade similar to the default case.&lt;/p&gt;</comment>
                            <comment id="14201071" author="apurtell" created="Thu, 6 Nov 2014 22:26:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;But this mechanism is not available in the custom case. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, that is by design. See above discussion for rationale. &lt;/p&gt;</comment>
                            <comment id="14201083" author="busbey" created="Thu, 6 Nov 2014 22:31:22 +0000"  >&lt;p&gt;The SequenceFileLogReader is indeed for handling upgrades from the old format.&lt;/p&gt;

&lt;p&gt;If we have a more reliable way of determining that something is the old sequence file format we could add that same fall back for custom readers.&lt;/p&gt;

&lt;p&gt;The long term fix is probably handling things with alternate providers (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10378&quot; title=&quot;Divide HLog interface into User and Implementor specific interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10378&quot;&gt;&lt;del&gt;HBASE-10378&lt;/del&gt;&lt;/a&gt;) with the addition of a mechanism for WALProviders to say if a given WAL belonged to them. We&apos;ve discussed adding such a facility, but at the moment it&apos;s backburner until we have a use case. It sounds like yours might be one?&lt;/p&gt;

&lt;p&gt;Current options for work arounds are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Require a clean shutdown prior to upgrading a 0.94 cluster to versions with the protobuf wals (preferable)&lt;/li&gt;
	&lt;li&gt;Your custom reader could fall back to handling the old format in its initialization function&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14213681" author="anoop.hbase" created="Sat, 15 Nov 2014 16:18:29 +0000"  >&lt;p&gt;We do write the Writer class name as meta data into WAL files now right? Is it possible to have an association with writer and corresponding reader so that when we read a WAL, we can decide which reader can read this, based on its writer class &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14213691" author="busbey" created="Sat, 15 Nov 2014 16:32:35 +0000"  >&lt;p&gt;that&apos;s an optional field in the newer protobuf version of the WAL files. This is dealing with legacy wals from before they were even protobuf, so that field won&apos;t help.&lt;/p&gt;</comment>
                            <comment id="14213692" author="busbey" created="Sat, 15 Nov 2014 16:33:39 +0000"  >&lt;p&gt;Don&apos;t sequence files have a well defined magic number? does that magic number collide with what we write as a normal matter of course in the protobuf version?&lt;/p&gt;</comment>
                            <comment id="14213776" author="jinghe" created="Sat, 15 Nov 2014 21:54:43 +0000"  >&lt;p&gt;This is from the SequenceFile doc:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
SequenceFile Header
  version - 3 bytes of magic header SEQ, followed by 1 &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; of actual version number (e.g. SEQ4 or SEQ6) 
  keyClassName -key class 
  valueClassName - value class 
  compression - A &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; which specifies &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; compression is turned on &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; keys/values in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; file. 
  blockCompression - A &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; which specifies &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; block-compression is turned on &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; keys/values in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; file. 
  compression codec - CompressionCodec class which is used &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; compression of keys and/or values (&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; compression is enabled). 
  metadata - Metadata &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; file. 
  sync - A sync marker to denote end of the header. 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And we put additional info int he metadata part:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class SequenceFileLogReader &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; ReaderBase {
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Log LOG = LogFactory.getLog(SequenceFileLogReader.class);

  &lt;span class=&quot;code-comment&quot;&gt;// Legacy stuff from pre-PB WAL metadata.
&lt;/span&gt;  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Text WAL_VERSION_KEY = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Text(&lt;span class=&quot;code-quote&quot;&gt;&quot;version&quot;&lt;/span&gt;);
  &lt;span class=&quot;code-comment&quot;&gt;// Let the version be 1.  Let absence of a version meta tag be old, version 0.
&lt;/span&gt;  &lt;span class=&quot;code-comment&quot;&gt;// Set &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; version &apos;1&apos; to be the version that introduces compression,
&lt;/span&gt;  &lt;span class=&quot;code-comment&quot;&gt;// the COMPRESSION_VERSION.
&lt;/span&gt;  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; COMPRESSION_VERSION = 1;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12689687">HBASE-10378</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12679925" name="HBASE_12437.patch" size="3712" author="enhs8920" created="Thu, 6 Nov 2014 19:51:27 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 6 Nov 2014 19:38:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 4 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i222m7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>