<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:45:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7404/HBASE-7404.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7404] Bucket Cache:A solution about CMS,Heap Fragment and Big Cache on HBASE</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7404</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;First, thanks @neil from Fusion-IO share the source code.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;p&gt;1.Use bucket cache as main memory cache, configured as the following:&lt;br/&gt;
&#8211;&quot;hbase.bucketcache.ioengine&quot; &quot;heap&quot; (or &quot;offheap&quot; if using offheap memory to cache block )&lt;br/&gt;
&#8211;&quot;hbase.bucketcache.size&quot; 0.4 (size for bucket cache, 0.4 is a percentage of max heap size)&lt;/p&gt;

&lt;p&gt;2.Use bucket cache as a secondary cache, configured as the following:&lt;br/&gt;
&#8211;&quot;hbase.bucketcache.ioengine&quot; &quot;file:/disk1/hbase/cache.data&quot;(The file path where to store the block data)&lt;br/&gt;
&#8211;&quot;hbase.bucketcache.size&quot; 1024 (size for bucket cache, unit is MB, so 1024 means 1GB)&lt;br/&gt;
&#8211;&quot;hbase.bucketcache.combinedcache.enabled&quot; false (default value being true)&lt;/p&gt;

&lt;p&gt;See more configurations from org.apache.hadoop.hbase.io.hfile.CacheConfig and org.apache.hadoop.hbase.io.hfile.bucket.BucketCache&lt;/p&gt;


&lt;p&gt;What&apos;s Bucket Cache? &lt;br/&gt;
It could greatly decrease CMS and heap fragment by GC&lt;br/&gt;
It support a large cache space for High Read Performance by using high speed disk like Fusion-io&lt;/p&gt;

&lt;p&gt;1.An implementation of block cache like LruBlockCache&lt;br/&gt;
2.Self manage blocks&apos; storage position through Bucket Allocator&lt;br/&gt;
3.The cached blocks could be stored in the memory or file system&lt;br/&gt;
4.Bucket Cache could be used as a mainly block cache(see CombinedBlockCache), combined with LruBlockCache to decrease CMS and fragment by GC.&lt;br/&gt;
5.BucketCache also could be used as a secondary cache(e.g. using Fusionio to store block) to enlarge cache space&lt;/p&gt;


&lt;p&gt;How about SlabCache?&lt;br/&gt;
We have studied and test SlabCache first, but the result is bad, because:&lt;br/&gt;
1.SlabCache use SingleSizeCache, its use ratio of memory is low because kinds of block size, especially using DataBlockEncoding&lt;br/&gt;
2.SlabCache is uesd in DoubleBlockCache, block is cached both in SlabCache and LruBlockCache, put the block to LruBlockCache again if hit in SlabCache , it causes CMS and heap fragment don&apos;t get any better&lt;br/&gt;
3.Direct heap performance is not good as heap, and maybe cause OOM, so we recommend using &quot;heap&quot; engine &lt;/p&gt;

&lt;p&gt;See more in the attachment and in the patch&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12624815">HBASE-7404</key>
            <summary>Bucket Cache:A solution about CMS,Heap Fragment and Big Cache on HBASE</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="zjushch">chunhui shen</assignee>
                                    <reporter username="zjushch">chunhui shen</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Dec 2012 13:37:28 +0000</created>
                <updated>Mon, 19 May 2014 16:41:14 +0000</updated>
                            <resolved>Mon, 14 Jan 2013 12:35:03 +0000</resolved>
                                    <version>0.94.3</version>
                                    <fixVersion>0.95.0</fixVersion>
                                        <due></due>
                            <votes>7</votes>
                                    <watches>55</watches>
                                                                <comments>
                            <comment id="13537043" author="yuzhihong@gmail.com" created="Thu, 20 Dec 2012 14:36:10 +0000"  >&lt;p&gt;In slide titled &apos;Test Results of First Usage&apos;, TPS is write request per second and QPS is read request per second&lt;/p&gt;</comment>
                            <comment id="13537087" author="ram_krish" created="Thu, 20 Dec 2012 15:39:03 +0000"  >&lt;p&gt;@Chunhui&lt;br/&gt;
So you are back with a bang. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Some terms in that test result YGC, YGCT? Sorry if am ignorant.  Do you mean Young Generation here?&lt;/p&gt;</comment>
                            <comment id="13537103" author="zjushch" created="Thu, 20 Dec 2012 16:04:12 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&lt;br/&gt;
Hoho, I&apos;m here all the same!!&lt;br/&gt;
Yes,&lt;br/&gt;
YGC=Young Generation Count&lt;br/&gt;
YGCT=Young Generation Total Time&lt;/p&gt;

&lt;p&gt;reviewboard &lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/8717/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/8717/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Waiting for yours comments~~~&lt;/p&gt;
</comment>
                            <comment id="13537271" author="apurtell" created="Thu, 20 Dec 2012 19:08:58 +0000"  >&lt;p&gt;Wow.&lt;/p&gt;

&lt;p&gt;So if using the &quot;heap&quot; engine this is an alternative or replacement for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4027&quot; title=&quot;Enable direct byte buffers LruBlockCache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4027&quot;&gt;&lt;del&gt;HBASE-4027&lt;/del&gt;&lt;/a&gt; aka SlabCache? Second to last slide is results of &quot;heap&quot; engine tests, correct? Have you done any direct comparisons between this and the SlabCache?&lt;/p&gt;</comment>
                            <comment id="13537633" author="zjushch" created="Fri, 21 Dec 2012 02:32:50 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=andrew.purtell%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;andrew.purtell@gmail.com&quot;&gt;Andrew Purtell&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Second to last slide is results of &quot;heap&quot; engine tests, correct?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, it use &quot;heap&quot; engine.&lt;br/&gt;
We have studied and test SlabCache first, but I think the result is bad, because:&lt;br/&gt;
1.SlabCache use SingleSizeCache, its use ratio of memory is low because kinds of block size, especially using DataBlockEncoding &lt;br/&gt;
2.SlabCache is uesd in DoubleBlockCache, block is cached both in SlabCache and LruBlockCache, put the block to LruBlockCache again if hit in SlabCache , it causes CMS and heap fragment don&apos;t get any better&lt;br/&gt;
3.Direct heap performance is not good as heap, and maybe cause OOM, so we doesn&apos;t do a test on &quot;offheap&quot; engine &lt;/p&gt;</comment>
                            <comment id="13537790" author="zjushch" created="Fri, 21 Dec 2012 10:29:14 +0000"  >&lt;p&gt;Fix a line bug when making patch. &lt;br/&gt;
Could see that line from review board&lt;/p&gt;</comment>
                            <comment id="13538265" author="sershe" created="Fri, 21 Dec 2012 18:12:23 +0000"  >&lt;p&gt;I started reviewing... will publish several chunks of comments in review board cause I&apos;m paranoid about losing them.&lt;/p&gt;</comment>
                            <comment id="13538323" author="sershe" created="Fri, 21 Dec 2012 19:26:20 +0000"  >&lt;p&gt;Sorry, got to about &quot;freeSpace&quot; in bucketCache, will continue later.&lt;/p&gt;</comment>
                            <comment id="13538647" author="sershe" created="Sat, 22 Dec 2012 02:21:14 +0000"  >&lt;p&gt;got all the way to void multiple(long start, int len, byte[] array, int arrayOffset, Accessor accessor) {...&lt;br/&gt;
I will continue next week hopefully.&lt;/p&gt;</comment>
                            <comment id="13538673" author="zjushch" created="Sat, 22 Dec 2012 05:15:37 +0000"  >&lt;p&gt;Uploading the introducion document for easy to understand bucket cache&lt;/p&gt;</comment>
                            <comment id="13538674" author="zjushch" created="Sat, 22 Dec 2012 05:17:15 +0000"  >&lt;p&gt;Thanks Sergey for the review&lt;br/&gt;
I will upload the new patch as the suggestion on review board&lt;/p&gt;</comment>
                            <comment id="13541567" author="zjushch" created="Tue, 1 Jan 2013 03:08:01 +0000"  >&lt;p&gt;Attaching patchv9 as the review comments&lt;/p&gt;</comment>
                            <comment id="13541645" author="yuzhihong@gmail.com" created="Tue, 1 Jan 2013 15:06:11 +0000"  >&lt;p&gt;For patch v9, I got the following compilation error:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:testCompile (&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;-testCompile) on project hbase-server: Compilation failure
[ERROR] /Users/tyu/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java:[303,30] illegal forward reference
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think this is due to deserializerIdentifier being referenced in the CacheableDeserializer:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; CacheableDeserializer&amp;lt;Cacheable&amp;gt; blockDeserializer =
...
+        @Override
+        &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getDeserialiserIdentifier() {
+          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; deserializerIdentifier;
+        }
...
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; deserializerIdentifier = CacheableDeserializerIdManager
+      .registerDeserializer(blockDeserializer);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13541646" author="yuzhihong@gmail.com" created="Tue, 1 Jan 2013 15:24:28 +0000"  >&lt;p&gt;Patch v10 fixes the compilation error in HFileBlock.java and CacheTestUtils.java&lt;/p&gt;</comment>
                            <comment id="13541650" author="hadoopqa" created="Tue, 1 Jan 2013 15:49:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12562846/7404-trunk-v10.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12562846/7404-trunk-v10.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.TestHeapSize&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13541653" author="hadoopqa" created="Tue, 1 Jan 2013 16:13:41 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12562846/7404-trunk-v10.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12562846/7404-trunk-v10.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.TestHeapSize&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3795//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13541654" author="yuzhihong@gmail.com" created="Tue, 1 Jan 2013 16:22:05 +0000"  >&lt;p&gt;Patch v11 fixes TestHeapSize&lt;/p&gt;</comment>
                            <comment id="13541660" author="hadoopqa" created="Tue, 1 Jan 2013 17:33:00 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12562848/7404-trunk-v11.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12562848/7404-trunk-v11.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestHBaseFsck&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestHCM&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSide&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.io.encoding.TestUpgradeFromHFileV1ToEncoding.testUpgrade(TestUpgradeFromHFileV1ToEncoding.java:83)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3796//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13542129" author="zjushch" created="Wed, 2 Jan 2013 14:08:28 +0000"  >&lt;p&gt;Thanks Ted for modifying the errors.&lt;br/&gt;
Attaching patchV12 to fix javadoc warning and long line warning&lt;/p&gt;</comment>
                            <comment id="13542149" author="hadoopqa" created="Wed, 2 Jan 2013 14:47:20 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12562905/7404-trunk-v12.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12562905/7404-trunk-v12.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestSplitTransaction&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.master.TestOpenedRegionHandler.testOpenedRegionHandlerOnMasterRestart(TestOpenedRegionHandler.java:104)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3801//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13542170" author="hadoopqa" created="Wed, 2 Jan 2013 15:15:09 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12562848/7404-trunk-v11.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12562848/7404-trunk-v11.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.io.encoding.TestUpgradeFromHFileV1ToEncoding.testUpgrade(TestUpgradeFromHFileV1ToEncoding.java:83)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3800//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13542794" author="zjushch" created="Thu, 3 Jan 2013 08:13:07 +0000"  >&lt;p&gt;Attaching newest patchv13 as review comments&lt;/p&gt;</comment>
                            <comment id="13543027" author="hadoopqa" created="Thu, 3 Jan 2013 16:15:22 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12563050/7404-trunk-v13.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12563050/7404-trunk-v13.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.io.encoding.TestUpgradeFromHFileV1ToEncoding.testUpgrade(TestUpgradeFromHFileV1ToEncoding.java:83)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3820//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13543667" author="hadoopqa" created="Fri, 4 Jan 2013 07:20:04 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12563244/7404-trunk-v13.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12563244/7404-trunk-v13.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3850//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13543674" author="hadoopqa" created="Fri, 4 Jan 2013 07:31:01 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12563244/7404-trunk-v13.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12563244/7404-trunk-v13.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.io.encoding.TestUpgradeFromHFileV1ToEncoding.testUpgrade(TestUpgradeFromHFileV1ToEncoding.java:83)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3851//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13544594" author="zjushch" created="Sat, 5 Jan 2013 05:54:50 +0000"  >&lt;p&gt;Addressing newest Ted&apos;s review comments in patchV14&lt;/p&gt;</comment>
                            <comment id="13544610" author="hadoopqa" created="Sat, 5 Jan 2013 06:55:28 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12563398/7404-trunk-v14.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12563398/7404-trunk-v14.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3874//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13546299" author="sershe" created="Mon, 7 Jan 2013 21:42:36 +0000"  >&lt;p&gt;+1 on latest patch&lt;/p&gt;</comment>
                            <comment id="13546540" author="yuzhihong@gmail.com" created="Tue, 8 Jan 2013 02:33:00 +0000"  >&lt;p&gt;+1 from me.&lt;/p&gt;</comment>
                            <comment id="13546619" author="yuzhihong@gmail.com" created="Tue, 8 Jan 2013 05:28:23 +0000"  >&lt;p&gt;@Chunhui:&lt;br/&gt;
This is an important feature. Please fill out Release Notes so that users know how to use it.&lt;/p&gt;</comment>
                            <comment id="13546632" author="zjushch" created="Tue, 8 Jan 2013 05:40:22 +0000"  >&lt;p&gt;OK, I will attach the usage&lt;/p&gt;</comment>
                            <comment id="13550740" author="zjushch" created="Fri, 11 Jan 2013 02:53:47 +0000"  >&lt;p&gt;Thanks for the review, Ted, Sergey&lt;/p&gt;

&lt;p&gt;Commit to trunk tomorrow if no objection.&lt;/p&gt;</comment>
                            <comment id="13552455" author="hudson" created="Mon, 14 Jan 2013 06:10:44 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3739 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3739/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3739/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7404&quot; title=&quot;Bucket Cache:A solution about CMS,Heap Fragment and Big Cache on HBASE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7404&quot;&gt;&lt;del&gt;HBASE-7404&lt;/del&gt;&lt;/a&gt; Bucket Cache:A solution about CMS,Heap Fragment and Big Cache on HBASE (Chunhui) (Revision 1432797)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
zjushch : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferArray.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheStats.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/Cacheable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheableDeserializer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheableDeserializerIdManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CombinedBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/BucketAllocatorException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/BucketCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/BucketCacheStats.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/ByteBufferIOEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/CacheFullException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/CachedEntryQueue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/FileIOEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/IOEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/UniqueIndexMap.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCachedBlockQueue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/bucket&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/bucket/TestBucketCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/bucket/TestByteBufferIOEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/bucket/TestFileIOEngine.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13552598" author="hudson" created="Mon, 14 Jan 2013 12:05:31 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #346 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/346/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/346/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7404&quot; title=&quot;Bucket Cache:A solution about CMS,Heap Fragment and Big Cache on HBASE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7404&quot;&gt;&lt;del&gt;HBASE-7404&lt;/del&gt;&lt;/a&gt; Bucket Cache:A solution about CMS,Heap Fragment and Big Cache on HBASE (Chunhui) (Revision 1432797)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
zjushch : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferArray.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheStats.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/Cacheable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheableDeserializer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheableDeserializerIdManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CombinedBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/BucketAllocatorException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/BucketCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/BucketCacheStats.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/ByteBufferIOEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/CacheFullException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/CachedEntryQueue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/FileIOEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/IOEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/UniqueIndexMap.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCachedBlockQueue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/bucket&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/bucket/TestBucketCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/bucket/TestByteBufferIOEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/bucket/TestFileIOEngine.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13565943" author="rshroff" created="Tue, 29 Jan 2013 23:14:15 +0000"  >&lt;p&gt;ChunHui Shen:&lt;/p&gt;

&lt;p&gt;Thanks for this contribution. I was looking at the presentation docs and I had couple of questions:&lt;br/&gt;
1. For the test configs, can you tell what were the size configs?? In terms of size of the blocks/buckets(default 2MB?) and cache itself.&lt;br/&gt;
2. Did it use the same idea of SINGLE/MULTITOUCH blocks as we have in LRU Block Cache while doing the eviction??&lt;/p&gt;</comment>
                            <comment id="13566069" author="zjushch" created="Wed, 30 Jan 2013 01:57:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;In terms of size of the blocks/buckets(default 2MB?) and cache itself&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Using default block size (64K), buckets (2MB), cache size 0.4&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Did it use the same idea of SINGLE/MULTITOUCH blocks as we have in LRU Block Cache while doing the eviction??&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes&lt;/p&gt;</comment>
                            <comment id="13566074" author="rshroff" created="Wed, 30 Jan 2013 02:04:10 +0000"  >&lt;p&gt;Thanks for the reply. I wanted the know the actual size value of the bucket cache if possible.&lt;/p&gt;</comment>
                            <comment id="13566083" author="zjushch" created="Wed, 30 Jan 2013 02:15:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;the actual size value&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;14G*0.4&lt;/p&gt;</comment>
                            <comment id="13568019" author="rshroff" created="Thu, 31 Jan 2013 19:38:37 +0000"  >&lt;p&gt;Thanks! Any particular reason that it was used in combination with LRU Block Cache and not a replacement of it in the first use case??&lt;/p&gt;</comment>
                            <comment id="13568398" author="zjushch" created="Fri, 1 Feb 2013 02:32:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;combination with LRU Block Cache&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Bloom block and index block will be accessed more frequently(especially for the random read) with a high hit ratio, nearly 100%. So putting them in LRU Block Cache could get better performance&lt;/p&gt;</comment>
                            <comment id="13630100" author="jmspaggi" created="Fri, 12 Apr 2013 14:33:52 +0000"  >&lt;p&gt;Any plan to backport that in 0.94?&lt;/p&gt;</comment>
                            <comment id="13630233" author="davelatham" created="Fri, 12 Apr 2013 16:07:28 +0000"  >&lt;p&gt;Here&apos;s a backport I did to 0.94 a few weeks back with intent of doing some benchmarking, but haven&apos;t had time to follow through with yet.&lt;/p&gt;

&lt;p&gt;Attaching as &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7404&quot; title=&quot;Bucket Cache:A solution about CMS,Heap Fragment and Big Cache on HBASE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7404&quot;&gt;&lt;del&gt;HBASE-7404&lt;/del&gt;&lt;/a&gt;-backport-0.94.patch&quot;&lt;/p&gt;</comment>
                            <comment id="13630239" author="davelatham" created="Fri, 12 Apr 2013 16:10:30 +0000"  >&lt;p&gt;I should make clear that it&apos;s not well tested or even very carefully reviewed, but if someone else is looking at a port it might make a helpful reference point.&lt;/p&gt;</comment>
                            <comment id="13631229" author="yuzhihong@gmail.com" created="Sat, 13 Apr 2013 23:49:24 +0000"  >&lt;p&gt;@Dave:&lt;br/&gt;
Thanks for the patch. I ran 0.94 test suite and result is green:&lt;/p&gt;

&lt;p&gt;Tests run: 1340, Failures: 0, Errors: 0, Skipped: 13&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; ------------------------------------------------------------------------&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; BUILD SUCCESS&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; ------------------------------------------------------------------------&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Total time: 1:08:08.967s&lt;/p&gt;</comment>
                            <comment id="13631469" author="zjushch" created="Mon, 15 Apr 2013 02:40:58 +0000"  >&lt;p&gt;backport-0.94.patch seems good.&lt;/p&gt;

&lt;p&gt;Using bucket cache as main memory cache in the case where block cache hit ratio is not very high(e.g. &amp;lt;= 80%), otherwise LRUBlockCache would be better.&lt;/p&gt;

&lt;p&gt;If use bucket cache as a L2 cache, it seems well now from our daily testing&lt;/p&gt;</comment>
                            <comment id="13663819" author="siyu_828" created="Wed, 22 May 2013 06:07:15 +0000"  >&lt;p&gt;When I used this patch on my cluster ,I found that the randomRead speed is very slow which is about 70% with the speed before patch.&lt;br/&gt;
I want to know waht is the problem? &lt;br/&gt;
The HBase version is 0.94.2 and my cluster consists by one Master and three regionservers.&lt;br/&gt;
The Heapszie is set to 4G while the machine memory is 8G .&lt;br/&gt;
I use the first method,the ocnfiguration is as follow:&lt;br/&gt;
hbase.bucketcache.ioengine  heap&lt;br/&gt;
hbase.bucketcache.size   0.4&lt;br/&gt;
hbase.bucketcache.combinedcache.percentage  0.9f&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13663912" author="zjushch" created="Wed, 22 May 2013 08:04:44 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=siyu_828&quot; class=&quot;user-hover&quot; rel=&quot;siyu_828&quot;&gt;Liang Lee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think your meta block/index block hit ratio is not high as your setting.&lt;/p&gt;

&lt;p&gt;Please lower the configuration of hbase.bucketcache.combinedcache.percentage, and try again, thanks&lt;/p&gt;

&lt;p&gt;In additional, better to use LruCache for small heapsize&lt;/p&gt;</comment>
                            <comment id="13663968" author="siyu_828" created="Wed, 22 May 2013 09:39:35 +0000"  >&lt;p&gt;OK ,Thanks ,I will have a try!&lt;/p&gt;</comment>
                            <comment id="13667490" author="siyu_828" created="Mon, 27 May 2013 06:38:10 +0000"  >&lt;p&gt;Thanks,Ted.&lt;br/&gt;
I modified the configuration and the lruCacheSize is 1G ,the bucketCacheSize isv 1G.&lt;br/&gt;
The Heapszie is set to 4G while the machine memory is 8G .&lt;br/&gt;
I use PerformanceEvaluation tool based on hbase to test the Performance.&lt;br/&gt;
Before this path, the randomRead speed is about 6hours ,which used 10 clients to read 1000W rows(which means each client read 100W rows).&lt;br/&gt;
But After patch ,the randomRead speed is about 7hours,I want to know what&apos;s the matter?&lt;br/&gt;
Thanks!&lt;/p&gt;</comment>
                            <comment id="13667518" author="zjushch" created="Mon, 27 May 2013 07:30:18 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=siyu_828&quot; class=&quot;user-hover&quot; rel=&quot;siyu_828&quot;&gt;Liang Lee&lt;/a&gt;&lt;br/&gt;
I have sent you a mail about the usage and tests.&lt;/p&gt;</comment>
                            <comment id="13667653" author="julian.zhou" created="Mon, 27 May 2013 09:22:46 +0000"  >&lt;p&gt;Hi, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjushch&quot; class=&quot;user-hover&quot; rel=&quot;zjushch&quot;&gt;chunhui shen&lt;/a&gt;, nice feature, I am going to enable and try on our cluster. May I consult about 2 question?&lt;br/&gt;
1) the benchmark result in your document is based on pointing IOEngine to Fusion-IO SSD or common HDD?&lt;br/&gt;
2) any intelligent dynamic switching logic between LRU block cache and bucket cache based on hit ratio or other I/O pattern?&lt;br/&gt;
Thanks~&lt;/p&gt;</comment>
                            <comment id="13667658" author="zjushch" created="Mon, 27 May 2013 09:32:46 +0000"  >&lt;blockquote&gt;&lt;p&gt;based on pointing IOEngine to Fusion-IO SSD or common HDD?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Fusion-IO&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;any intelligent dynamic switching logic between LRU block cache and bucket cache based on hit ratio or other I/O pattern?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Couldn&apos;t switch dynamically now.&lt;/p&gt;</comment>
                            <comment id="13687793" author="lhofhansl" created="Wed, 19 Jun 2013 08:55:00 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=siyu_828&quot; class=&quot;user-hover&quot; rel=&quot;siyu_828&quot;&gt;Liang Lee&lt;/a&gt; Did you ever redo your test? Did you still find it is slower?&lt;/p&gt;</comment>
                            <comment id="13687940" author="jmspaggi" created="Wed, 19 Jun 2013 12:56:05 +0000"  >&lt;p&gt;I&apos;m currently running some perfs tests for Nicolas, but as soon as I&apos;m done I will try this patch because I&apos;m very interested to have it running on my cluster... I might be able to provide some feedback by the end of the week.&lt;/p&gt;</comment>
                            <comment id="13687974" author="zjushch" created="Wed, 19 Jun 2013 13:26:25 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmspaggi&quot; class=&quot;user-hover&quot; rel=&quot;jmspaggi&quot;&gt;Jean-Marc Spaggiari&lt;/a&gt;&lt;br/&gt;
If you take it as a main memory block cache, it is used to decrease CMS and heap fragment by GC rather than improve the performance. &lt;br/&gt;
So it is not appropriate for the scenario where the block cache hit ratio is high (e.g. &amp;gt;= 80%). &lt;br/&gt;
In other scenarios, its performance should be near with or a little higher than the LruBlockCache&apos;s.&lt;/p&gt;
</comment>
                            <comment id="13689013" author="boneylw" created="Thu, 20 Jun 2013 08:35:47 +0000"  >&lt;p&gt;The default value of bucketCachePercentage is 0 currently, I suggest set it to hfile.block.cache.size if combinedWithLru is true.&lt;/p&gt;</comment>
                            <comment id="13703895" author="pbaclace" created="Tue, 9 Jul 2013 22:20:42 +0000"  >&lt;p&gt;The attached &quot;Introduction of Bucket Cache&quot; describes LruBlockCache, SlabCache, and BucketCache but only has advantages/disadvantages for the first two. Surely BucketCache makes engineering tradeoffs that can be documented. For instance, serialization overhead is present and if backed by a slow disk, performance would suffer.&lt;/p&gt;</comment>
                            <comment id="13730126" author="jmhsieh" created="Mon, 5 Aug 2013 23:29:01 +0000"  >&lt;p&gt;I&apos;ve filed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9131&quot; title=&quot;Add admin-level documention about configuration and usage of the Bucket Cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9131&quot;&gt;&lt;del&gt;HBASE-9131&lt;/del&gt;&lt;/a&gt; &amp;#8211; it would be great if someone who worked on this code added documentation at an admin-level to the ref guide.&lt;/p&gt;</comment>
                            <comment id="13774967" author="stack" created="Mon, 23 Sep 2013 18:30:27 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                            <comment id="13781242" author="lhofhansl" created="Sun, 29 Sep 2013 04:31:47 +0000"  >&lt;p&gt;I tried the Dave&apos;s 0.94 backport. It looks good and it gets good results.&lt;br/&gt;
Finally HBase can be usefully run on large memory machines and make use of all that RAM.&lt;/p&gt;

&lt;p&gt;I would like to review the backport a bit closer and then commit it in time for 0.94.13. Any objections? (it&apos;s mostly new code and I have seen no detriments with it disabled).&lt;/p&gt;</comment>
                            <comment id="13781252" author="lhofhansl" created="Sun, 29 Sep 2013 05:12:00 +0000"  >&lt;p&gt;The 0.94 patch had a bunch of CRLF line endings. Some of the patch threw me off. This version fixes that.&lt;/p&gt;</comment>
                            <comment id="13781253" author="lhofhansl" created="Sun, 29 Sep 2013 05:13:10 +0000"  >&lt;p&gt;Filed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9680&quot; title=&quot;0.94 backport: HBASE-7404 Bucket Cache:A solution about CMS,Heap Fragment and Big Cache on HBASE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9680&quot;&gt;&lt;del&gt;HBASE-9680&lt;/del&gt;&lt;/a&gt; for further discussion.&lt;/p&gt;</comment>
                            <comment id="13781345" author="amuraru" created="Sun, 29 Sep 2013 11:28:25 +0000"  >&lt;p&gt;+1 on integrating this in 0.94 branch, thanks Lars.&lt;br/&gt;
One comment regarding the configs: reading through the patch I find misleading the usage of &quot;hbase.offheapcache.percentage&quot; config&lt;/p&gt;

&lt;p&gt;Say I want to use the bucket-cache as a secondary, off-heap block cache&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (offHeapCacheSize &amp;lt;= 0) {
&lt;span class=&quot;code-comment&quot;&gt;// hbase.bucketcache.ioengine=&lt;span class=&quot;code-quote&quot;&gt;&quot;file://ramdisk/hbase&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;code-comment&quot;&gt;// hbase.bucketcache.combinedcache.enabled&quot; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
&lt;/span&gt;... init BucketCache ...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;tt&gt;hbase.offheapcache.percentage&lt;/tt&gt; name is misleading with the addition on this block-cache. &lt;br/&gt;
One suggestion would be to have it renamed to something like:&lt;br/&gt;
&lt;tt&gt;hbase.slab_offheapcache&lt;/tt&gt; or something.&lt;/p&gt;</comment>
                            <comment id="13782657" author="lhofhansl" created="Tue, 1 Oct 2013 06:05:53 +0000"  >&lt;p&gt;Actually I&apos;d rather remove the DoubleBlockCache code; apparently it has never worked right.&lt;/p&gt;

&lt;p&gt;So I did some simple performance tests (with the 0.94 version):&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;For (sequential) scanning I find the performance indistinguishable from the LruCache.&lt;/li&gt;
	&lt;li&gt;For pure random gets I find that setting hbase.bucketcache.size = 0.4 is 60% slower than just setting hfile.block.cache.size = 0.4. Is that expected? In both cases I see no cache misses.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13782688" author="stack" created="Tue, 1 Oct 2013 07:43:19 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; You seen &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8894&quot; title=&quot;Forward port compressed l2 cache from 0.89fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8894&quot;&gt;&lt;del&gt;HBASE-8894&lt;/del&gt;&lt;/a&gt;?   Its an improvement on this patch.  @liang xie has started looking into our Alex&apos;s patch over there.  It might be worth waiting on his findings before you commit this to 0.94?&lt;/p&gt;</comment>
                            <comment id="13782694" author="stack" created="Tue, 1 Oct 2013 07:53:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;Actually I&apos;d rather remove the DoubleBlockCache code; apparently it has never worked right.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1  Lets not have two ways of providing a feature.  DBC didn&apos;t add value.   Was as slow as getting block from os cache (so why use it).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For pure random gets I find that setting hbase.bucketcache.size = 0.4 is 60% slower than just setting hfile.block.cache.size = 0.4. Is that expected? In both cases I see no cache misses.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maybe hbase-8894 will get them closer in perf (only bucket cache is off-heap)&lt;/p&gt;

&lt;p&gt;Good stuff&lt;/p&gt;</comment>
                            <comment id="13783332" author="lhofhansl" created="Tue, 1 Oct 2013 20:56:11 +0000"  >&lt;p&gt;Thanks Stack, will have a look at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8894&quot; title=&quot;Forward port compressed l2 cache from 0.89fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8894&quot;&gt;&lt;del&gt;HBASE-8894&lt;/del&gt;&lt;/a&gt;. Since currently it&apos;s an either/or decision between LRU and BucketCache for data blocks, a 60% slowdown does not seem to be acceptable. I&apos;ll also do some more tests.&lt;/p&gt;</comment>
                            <comment id="13784889" author="zjushch" created="Thu, 3 Oct 2013 07:28:30 +0000"  >&lt;p&gt;bq,For pure random gets I find that setting hbase.bucketcache.size = 0.4 is 60% slower than just setting hfile.block.cache.size = 0.4. Is that expected?&lt;/p&gt;

&lt;p&gt;Maybe the usage of this feature is misunderstood. &lt;br/&gt;
It&apos;s not used to replace LruBlockCache.  &lt;br/&gt;
Its function is reducing JVM GC under low cache hit ratio or creating a L2 cache for HBase&lt;/p&gt;

&lt;p&gt;Thus, for the above test case where cache hit ratio is near 100%, it will have worse  performance than LruBlockCache. Becasue BucketCache will do a memory copy when hitting the block&lt;/p&gt;</comment>
                            <comment id="13785286" author="lhofhansl" created="Thu, 3 Oct 2013 15:40:41 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjushch&quot; class=&quot;user-hover&quot; rel=&quot;zjushch&quot;&gt;chunhui shen&lt;/a&gt;. I do understand the aim of the patch. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
This does replace the LruCache when you enable it, right? (for all but meta blocks)&lt;br/&gt;
I.e. you cannot use the BucketCache for some data blocks and the LruCache for some other data blocks. That is the reason why this cannot be generally enabled.&lt;/p&gt;

&lt;p&gt;If the bucket cache was in addition to the LruCache as a &quot;cold&quot; cache or L2 cache then it would be a different story (for example, say you have a machine with 128 or 256gb or ram, currently HBase cannot make use of that except for as OS buffer cache, if some of this memory could be given to the bucket cache while the LruCache would still be used as before we could always enable this). That appears to be the aim of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8894&quot; title=&quot;Forward port compressed l2 cache from 0.89fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8894&quot;&gt;&lt;del&gt;HBASE-8894&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13785456" author="lhofhansl" created="Thu, 3 Oct 2013 19:19:42 +0000"  >&lt;p&gt;Also... A 60% slowdown is expected here? (I want to make sure I did not misconfigure this). Thanks.&lt;/p&gt;</comment>
                            <comment id="13785672" author="jinghe" created="Thu, 3 Oct 2013 23:24:14 +0000"  >&lt;p&gt;We&apos;d like to have this in 0.94 too.&lt;br/&gt;
On the other hand, just to confirm, if this feature is not configured/enabled, there is no impact to anything existing, correct?&lt;/p&gt;</comment>
                            <comment id="13785676" author="lhofhansl" created="Thu, 3 Oct 2013 23:36:15 +0000"  >&lt;p&gt;That is correct.&lt;/p&gt;</comment>
                            <comment id="13803905" author="jinghe" created="Thu, 24 Oct 2013 06:38:17 +0000"  >&lt;p&gt;Any intention and activity putting this in 0.94?  &lt;/p&gt;</comment>
                            <comment id="13804386" author="lhofhansl" created="Thu, 24 Oct 2013 16:48:09 +0000"  >&lt;p&gt;Was waiting for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8894&quot; title=&quot;Forward port compressed l2 cache from 0.89fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8894&quot;&gt;&lt;del&gt;HBASE-8894&lt;/del&gt;&lt;/a&gt;, but it seems that has some ways to go.&lt;br/&gt;
The problem with this patch is that when you enable the off-heap bucketcache the blockcache is disabled for all but the index blocks. There is no in-between. So from that angle it is not very useful, because most folks couldn&apos;t just switch it on, since it is quite a bit slower than the blockcache.&lt;/p&gt;

&lt;p&gt;If it would be configurable per table/cf that would be another story. One could then have smaller, hot table still use the blockcache and have larger not-so-tables use the offheap cache; and thus we&apos;d be able to make use of RAM sizes of 128gb or more.&lt;/p&gt;

&lt;p&gt;At the same time, since this is all new code, I&apos;m fine with reviewing Dave&apos;s backport a bit more and then committing it.&lt;br/&gt;
Comments?&lt;/p&gt;</comment>
                            <comment id="13877833" author="vrodionov" created="Tue, 21 Jan 2014 20:37:22 +0000"  >&lt;p&gt;Although, I am not big fan of this implementation (BucketCache), I still think that nobody has actually tried it in a real applications - not in synthetic benchmark. Keeping INDEX and BLOOM blocks on heap and DATA blocks off heap is very reasonable approach, taking into account that  DATA blocks takes ~95% of space and only 33% accesses (get INDEX, get BLOOM, get DATA - correct?). Therefore 2/3 of ALL block cache requests must be served from fast on heap cache. Deserialiization of serialized block is limited only by memory bandwidth and even with modest 1GB per sec per CPU core we can get 15K blocks per sec per CPU core. Definitely, not a bottleneck if one takes into account HBase network stack limitations as well. &lt;/p&gt;



</comment>
                            <comment id="13878174" author="xieliang007" created="Wed, 22 Jan 2014 02:34:35 +0000"  >&lt;p&gt;We(xiaomi) had ported it into our 0.94 branch and run in several latency sensltive clusters for several months already&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13878249" author="lhofhansl" created="Wed, 22 Jan 2014 04:31:18 +0000"  >&lt;p&gt;I&apos;m not opposed backporting this if there is interest. I&apos;m wrestling with large memory machines myself currently. This is in 0.96 and later already; and this is almost completely new code with very little risk to existing functionality.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=xieliang007&quot; class=&quot;user-hover&quot; rel=&quot;xieliang007&quot;&gt;Liang Xie&lt;/a&gt;, is your patch the same as the one posted here by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=davelatham&quot; class=&quot;user-hover&quot; rel=&quot;davelatham&quot;&gt;Dave Latham&lt;/a&gt;? If not, mind adding refreshed patch?&lt;br/&gt;
If you had some performance numbers that would be great too.&lt;/p&gt;

&lt;p&gt;I&apos;d also be curious how this fares performance wise against just using the OS buffer cache. I.e. how does serialization from the OS cache compare to serialization from the bucket cache.&lt;br/&gt;
And - to preempt any comments to that extend - I realize that the bucket cache provides more flexibility than the OS buffer cache, which indiscriminately caches blocks (unless we use fadvise hints, etc)&lt;/p&gt;</comment>
                            <comment id="13878250" author="lhofhansl" created="Wed, 22 Jan 2014 04:33:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt; You are right for point request (GETs). For scans, however, the performance penalty is substantial (less that 1/2 the scan performance when I measured last, but I can check again).&lt;/p&gt;</comment>
                            <comment id="13878253" author="stack" created="Wed, 22 Jan 2014 04:42:53 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt; &quot;..Although, I am not big fan of this implementation (BucketCache),...&quot;&lt;/p&gt;

&lt;p&gt;What issues do you have w/ it V?  Out of interest?  I&apos;m starting to dig in here.  Thanks boss.&lt;/p&gt;</comment>
                            <comment id="13878261" author="vrodionov" created="Wed, 22 Jan 2014 05:04:26 +0000"  >&lt;blockquote&gt;
&lt;p&gt;What issues do you have w/ it V? Out of interest? I&apos;m starting to dig in here. Thanks boss.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It keeps block keys on heap. It evicts blocks in batches. It does not support compression. Disk-based (SSD) cache is not SSD-friendly. It does not do both: RAM and Disk at the same time.&lt;/p&gt;</comment>
                            <comment id="13878270" author="vrodionov" created="Wed, 22 Jan 2014 05:16:09 +0000"  >&lt;blockquote&gt;
&lt;p&gt; For scans, however, the performance penalty is substantial (less that 1/2 the scan performance when I measured last, but I can check again).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think, for scans w/o filters (and skips) the performance should be comparable. The more skips we have in a scanner - the less performance we will get from off heap - based cache, due to the obvious deserialization overhead ... but this holds only if ALL your data fits block cache. This is not the case for application in production, usually. To de-serialize 64K block  takes less than 30 microseconds (2GB per sec). To fetch the same block from HDD local - 10ms, from SSD - 0.5-1ms.  Therefore, when your data does not fit comfortably into LruBlockCache (10-30GB), I think off heap has a huge advantage.&lt;/p&gt;</comment>
                            <comment id="13878272" author="stack" created="Wed, 22 Jan 2014 05:16:40 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It keeps block keys on heap.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You&apos;d have the indices offheap too?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It evicts blocks in batches.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What you thinking instead boss?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It does not support compression. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&amp;lt;ugly buzzer sound&amp;gt;Unnggghhhh&amp;lt;/ugly buzzer sound&amp;gt;  Let me looksee if can fix...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Disk-based (SSD) cache is not SSD-friendly&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The access pattern wears?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It does not do both: RAM and Disk at the same time.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is the Lars Hofhansl suggestion that we have LRUBlockCache OR BucketCache based off a table configuration?  Or you thinking L1/L2 layout?&lt;/p&gt;

&lt;p&gt;Thanks boss.&lt;/p&gt;</comment>
                            <comment id="13878386" author="vrodionov" created="Wed, 22 Jan 2014 08:06:59 +0000"  >&lt;p&gt;Yes, keys needs to be off-heaped as well to allow scaling well beyond 100G, real-time eviction is better (but harder) for latency sensitive applications, SSD-friendliness means seq writes and &lt;b&gt;much&lt;/b&gt; lower latency variations as opposed to random writes &amp;amp; worse access consistency, yes - L1/L2 layout is what I am thinking about, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="13878498" author="xieliang007" created="Wed, 22 Jan 2014 10:24:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;is your patch the same as the one posted here by Dave Latham? If not, mind adding refreshed patch?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;our ported stuff was against internal 0.94.3 branch, but i guess there should be no difference with Dave&apos;s, since most of the 7404&apos;s changes are new files&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If you had some performance numbers that would be great too.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;we decided to port since the biggest latency contributor in our several clusters is gc, after porting this jira and with lots of vm tuning, the total gc cost each day decreased from &lt;span class=&quot;error&quot;&gt;&amp;#91;2000,3000&amp;#93;&lt;/span&gt;s to &lt;span class=&quot;error&quot;&gt;&amp;#91;300,500&amp;#93;&lt;/span&gt;s, then the top contributor of 99th percentile latency isn&apos;t gc any more&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  i think the ported stuff should contribute about &lt;span class=&quot;error&quot;&gt;&amp;#91;200,400&amp;#93;&lt;/span&gt;ms reduction probably at least, i have forgot the detail number, several months ago, you know&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I agree that if we don&apos;t have a gc trouble, then no benefit from here, unless we want to run on a fast flash, it&apos;s not my scenario.&lt;/p&gt;</comment>
                            <comment id="13879091" author="liyin" created="Wed, 22 Jan 2014 19:45:15 +0000"  >&lt;p&gt;Liang, just curious, what&apos;s the top contributor for the p99 latency in your case ?&lt;/p&gt;</comment>
                            <comment id="13879398" author="xieliang007" created="Thu, 23 Jan 2014 03:02:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=liyin&quot; class=&quot;user-hover&quot; rel=&quot;liyin&quot;&gt;Liyin Tang&lt;/a&gt;, so far as i know, most are them related with hdfs layer, the existing unfinished jiras(1. hedged read; 2 two wal writers) should be expected to alleviate somehow, but still have other works need to do, e.g. HDFS io qos or request priority(&lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-5727&quot; title=&quot;introduce a self-maintaining io queue handling mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-5727&quot;&gt;HDFS-5727&lt;/a&gt;). i am a late entry to the hbase+hdfs percentile latency tuning game, but i have an intuitive sense of still having lots of improvement space.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12544478">HBASE-5487</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12656650">HBASE-8894</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12603333">HBASE-6572</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12605769" name="7404-0.94-fixed-lines.txt" size="134516" author="lhofhansl" created="Sun, 29 Sep 2013 05:12:00 +0000"/>
                            <attachment id="12562846" name="7404-trunk-v10.patch" size="133645" author="yuzhihong@gmail.com" created="Tue, 1 Jan 2013 15:24:28 +0000"/>
                            <attachment id="12562848" name="7404-trunk-v11.patch" size="133935" author="yuzhihong@gmail.com" created="Tue, 1 Jan 2013 16:22:05 +0000"/>
                            <attachment id="12562905" name="7404-trunk-v12.patch" size="134349" author="zjushch" created="Wed, 2 Jan 2013 14:15:11 +0000"/>
                            <attachment id="12563050" name="7404-trunk-v13.patch" size="135931" author="zjushch" created="Thu, 3 Jan 2013 08:13:07 +0000"/>
                            <attachment id="12563244" name="7404-trunk-v13.txt" size="135931" author="zjushch" created="Fri, 4 Jan 2013 06:27:12 +0000"/>
                            <attachment id="12563398" name="7404-trunk-v14.patch" size="135940" author="zjushch" created="Sat, 5 Jan 2013 05:54:50 +0000"/>
                            <attachment id="12561892" name="BucketCache.pdf" size="299407" author="zjushch" created="Thu, 20 Dec 2012 13:41:12 +0000"/>
                            <attachment id="12578433" name="HBASE-7404-backport-0.94.patch" size="155602" author="davelatham" created="Fri, 12 Apr 2013 16:07:28 +0000"/>
                            <attachment id="12562209" name="Introduction of Bucket Cache.pdf" size="988918" author="zjushch" created="Sat, 22 Dec 2012 05:15:37 +0000"/>
                            <attachment id="12562064" name="hbase-7404-94v2.patch" size="124632" author="zjushch" created="Fri, 21 Dec 2012 10:29:14 +0000"/>
                            <attachment id="12562063" name="hbase-7404-trunkv2.patch" size="127637" author="zjushch" created="Fri, 21 Dec 2012 10:29:14 +0000"/>
                            <attachment id="12562833" name="hbase-7404-trunkv9.patch" size="133386" author="zjushch" created="Tue, 1 Jan 2013 03:08:01 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Dec 2012 14:36:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>301323</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 47 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i16rof:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>247616</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>BucketCache is another implementation of BlockCache which supports big block cache for high performance and would greatly decrease CMS and heap fragmentation in JVM caused by read activities.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Usage:&lt;br/&gt;
&lt;br/&gt;
1.Use bucket cache as main memory cache, configured as the following:&lt;br/&gt;
&#8211;&amp;quot;hbase.bucketcache.ioengine&amp;quot; &amp;quot;heap&amp;quot;&lt;br/&gt;
&#8211;&amp;quot;hbase.bucketcache.size&amp;quot; 0.4 (size for bucket cache, 0.4 is a percentage of max heap size)&lt;br/&gt;
&lt;br/&gt;
2.Use bucket cache as a secondary cache, configured as the following:&lt;br/&gt;
&#8211;&amp;quot;hbase.bucketcache.ioengine&amp;quot; &amp;quot;file:/disk1/hbase/cache.data&amp;quot;(The file path where to store the block data)&lt;br/&gt;
&#8211;&amp;quot;hbase.bucketcache.size&amp;quot; 1024 (size for bucket cache, unit is MB, so 1024 means 1GB)&lt;br/&gt;
&#8211;&amp;quot;hbase.bucketcache.combinedcache.enabled&amp;quot; false (default value being true)&lt;br/&gt;
</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.96notable</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>