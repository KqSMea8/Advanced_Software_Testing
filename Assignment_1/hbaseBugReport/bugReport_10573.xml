<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:15:09 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10573/HBASE-10573.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10573] Use Netty 4</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10573</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Pull in Netty 4 and sort out the consequences.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12696134">HBASE-10573</key>
            <summary>Use Netty 4</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12685275">HBASE-10191</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nkeywal">Nicolas Liochon</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Feb 2014 01:38:51 +0000</created>
                <updated>Sat, 21 Feb 2015 23:29:18 +0000</updated>
                            <resolved>Tue, 20 May 2014 11:08:24 +0000</resolved>
                                    <version>0.99.0</version>
                    <version>hbase-10191</version>
                                    <fixVersion>0.99.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="13906477" author="apurtell" created="Thu, 20 Feb 2014 01:52:38 +0000"  >&lt;p&gt;I have brought in Netty 4 and excluded Netty 3 from our Hadoop dependencies. It &quot;works&quot;.&lt;/p&gt;

&lt;p&gt;It is ugly that hadoop-mapreduce-client-core and hadoop-mapreduce-client-jobclient bring in Netty 3.x as a dependency, possible complications for MR applications using HBase are concerning. So does hadoop-minicluser, but this is completely understandable, so I bring in the old 3.x Netty at test scope, and tests pass.&lt;/p&gt;

&lt;p&gt;In terms of HBase code I needed to reimplement the multicast ClusterStatusPublisher (not sure if it works, no test for it) and modify TestFuzzyRowAndColumnRangeFilter.&lt;/p&gt;</comment>
                            <comment id="13907083" author="nkeywal" created="Thu, 20 Feb 2014 15:44:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;ClusterStatusPublisher&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The test is TestHCM#testClusterStatus, it seems to fail under some ide. &lt;/p&gt;</comment>
                            <comment id="13907118" author="ndimiduk" created="Thu, 20 Feb 2014 16:03:55 +0000"  >&lt;p&gt;I&apos;m curious about the decision to use Netty&apos;s classes here. In particular, I believe the reason &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mcorgan&quot; class=&quot;user-hover&quot; rel=&quot;mcorgan&quot;&gt;Matt Corgan&lt;/a&gt; introduced the ByteRange interface was because none of the existing &quot;byte buffer&quot; concepts allowed for buffer re-use. The concern being for excessive GC during compactions. I looked at Netty&apos;s ByteBuf a while back and found it didn&apos;t support instance reuse, thus was insufficient for his requirement. Did I miss something?&lt;/p&gt;</comment>
                            <comment id="13907126" author="nkeywal" created="Thu, 20 Feb 2014 16:10:34 +0000"  >&lt;p&gt;I actually have the same question about using netty byteBuf (not netty itself). I wonder if we won&apos;t have an issue, for example when we will want to pass the buffer from the hbase socket to hdfs. The Java API is very very bad, and does not  even support extension, so I understand why Netty had to rewrite it. But I&apos;m not sure about the interoperability then.&lt;/p&gt;

&lt;p&gt;Note that I&apos;m not a Netty expert, especially not a Netty 4 one, so my concerns may be just off.&lt;/p&gt;</comment>
                            <comment id="13907232" author="apurtell" created="Thu, 20 Feb 2014 17:47:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m curious about the decision to use Netty&apos;s classes here&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Call it an investigation. &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;We use Netty already&lt;/li&gt;
	&lt;li&gt;Composite buffers&lt;/li&gt;
	&lt;li&gt;Arena allocation&lt;/li&gt;
	&lt;li&gt;Dynamic buffer resizing&lt;/li&gt;
	&lt;li&gt;Reference counting&lt;/li&gt;
	&lt;li&gt;Dev and testing by another community&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;I looked at Netty&apos;s ByteBuf a while back and found it didn&apos;t support instance reuse, thus was insufficient for his requirement. Did I miss something?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If that is the most important consideration above all else, outweighing all positives, then you did not miss something. &lt;/p&gt;

&lt;p&gt;What specifically would you suggest in the alternative?&lt;/p&gt;</comment>
                            <comment id="13907250" author="ndimiduk" created="Thu, 20 Feb 2014 17:58:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;What specifically would you suggest in the alternative?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t have anything else at this time, perhaps except for ByteBuffers + some reflection voodoo. This has the benefit of sticking with the JVM &quot;native&quot; APIs, but has the down side of reflection voodoo. I wrote up a little benchmark a while back, comparing allocating new DirectByteBuffers vs. reusing a single instance and re-assigning it with reflection. Reflection was slower than a single allocation, but I it didn&apos;t account for the collection afterwords. I also don&apos;t think the synthetic microbenchmark is indicative of use in the real system. In any case, even if dbb + reflection proves viable, we don&apos;t get the many other benefits you itemize above. DirectByteBuffers + reflection does open up the possibility of using the unsafe directly to manage memory, which may be desirable.&lt;/p&gt;

&lt;p&gt;As you say, more investigation is necessary &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13907272" author="apurtell" created="Thu, 20 Feb 2014 18:22:41 +0000"  >&lt;blockquote&gt;&lt;p&gt;perhaps except for ByteBuffers + some reflection voodoo&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Voodoo is kind of nonspecific as far as implementation strategy descriptions go. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I guess we need to reuse such a wrapper object if we must take a reflection-based instantiation hit each time.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;DirectByteBuffers + reflection does open up the possibility of using the unsafe directly to manage memory, which may be desirable.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Isn&apos;t this undesirable? Unsafe is a vendor specific extension. Even then Oracle recently ran a public survey asking what uses of Unsafe are common and what would happen if it went away. We do use Unsafe and have some exposure to this, but do have an un-Unsafe fallback in those places. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This has the benefit of sticking with the JVM &quot;native&quot; APIs,&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Don&apos;t the &quot;native&quot; ByteBuffer method calls tend not to be inlined? I have heard the complaint but have not personally examined JIT disassembly (yet). Aren&apos;t there boundary checks and index compensations sprinkled throughout? (which Netty does away with in the simple ByteBuf types)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;As you say, more investigation is necessary&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Great, let&apos;s proceed. At the moment this issue is about what happens if you even try to bring in 4. On that, N pointed me to TestHCM#testClusterStatus, which tests the multicast status publisher he implemented with Netty 3 channels. My port of that to Netty 4 APIs fails if I remove the @Ignore decoration, so I don&apos;t have it right yet.&lt;/p&gt;</comment>
                            <comment id="13907284" author="apurtell" created="Thu, 20 Feb 2014 18:31:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;I wonder if we won&apos;t have an issue, for example when we will want to pass the buffer from the hbase socket to hdfs. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt;, I worry about this also.&lt;/p&gt;</comment>
                            <comment id="13907298" author="ndimiduk" created="Thu, 20 Feb 2014 18:42:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;Voodoo is kind of nonspecific as far as implementation strategy descriptions go.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed. I&apos;m happy to share my experiment (in a more appropriate place than this Netty ticket perhaps), but here&apos;s a &lt;a href=&quot;https://gist.github.com/ndimiduk/9120342&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;gist&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Isn&apos;t this undesirable? Unsafe is a vendor specific extension.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, in the long term. My understanding is that the OpenJDK is moving to make some of these facilities more accessible. The timeline appears to be for Java9 or later, as far as I can tell. I think it would be reasonable to consider use of Unsafe for any short-medium term implementation.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Don&apos;t the &quot;native&quot; ByteBuffer method calls tend not to be inlined?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Unknown.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Great, let&apos;s proceed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, please proceed! I&apos;ll discontinue my conjecture and instead have a look at your work &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13917695" author="mcorgan" created="Mon, 3 Mar 2014 02:20:59 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10191&quot; title=&quot;Move large arena storage off heap&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10191&quot;&gt;HBASE-10191&lt;/a&gt;&lt;blockquote&gt;&lt;p&gt;We could make the investment of writing our own slab allocator. Experiments with Netty 4 ByteBufs are in part about seeing if we can re-use open source in production already rather than redo the work. On the other hand, it could be a crucial component so maybe it&apos;s necessary to have complete control. Perhaps we can move additional comments on this sub-topic over to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10573&quot; title=&quot;Use Netty 4&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10573&quot;&gt;&lt;del&gt;HBASE-10573&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;&lt;/blockquote&gt;Writing from scratch does seem attractive for keeping it simple and targeted at hbase&apos;s use cases.  It could probably be hbase-unaware and have a dedicated test suite.  The basic concepts are pretty straightforward - most of the complexity would probably arise in concurrency related operations like ref-counting to know when a slab is 100% safe to recycle.  When a block is copied to a new slab, new readers can use the new location, and old readers can still use the block on the old slab, but you have to be sure to wait for all the old readers to finish before recycling the slab.  You have to wait for straggling readers and be sure to decrement the ref-counts for errored readers, etc.&lt;/p&gt;</comment>
                            <comment id="13917715" author="apurtell" created="Mon, 3 Mar 2014 03:43:07 +0000"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;We could make the investment of writing our own slab allocator.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Writing from scratch does seem attractive for keeping it simple and targeted at hbase&apos;s use cases.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10655&quot; title=&quot;ByteRange-fronted slab allocator for on- and off-heap cellblock storage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10655&quot;&gt;HBASE-10655&lt;/a&gt; for follow up. &lt;/p&gt;

&lt;p&gt;There are other reasons for using Netty 4 in addition to ByteBuf. Will proceed with this issue a bit further. We can use ByteRange so as to be allocator agnostic. &lt;/p&gt;</comment>
                            <comment id="13918360" author="stack" created="Mon, 3 Mar 2014 18:20:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;I wonder if we won&apos;t have an issue, for example when we will want to pass the buffer from the hbase socket to hdfs.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Do we mean passing netty bytebuf from hbase to hdfs in the above?  We will want to go both ways &amp;#8211; out and in.&lt;/p&gt;

&lt;p&gt;The list of netty(5) benefits are long as Andrew notes so even if we skirt ByteBuf &amp;#8211; no reuse probably simplifies implementation would be my guess &amp;#8211; this ticket is worthwhile.&lt;/p&gt;</comment>
                            <comment id="13973576" author="apurtell" created="Thu, 17 Apr 2014 23:51:29 +0000"  >&lt;p&gt;Just to close the circle on the current patch, the multicast ClusterStatusPublisher and ClusterStatusListener uses Netty 3 APIs that go away in later versions. I made a stab at &quot;porting&quot; but didn&apos;t end up with functional code according to the (disabled) TestHCM unit test for it. Updated version of the patch simply removes this code. &lt;/p&gt;</comment>
                            <comment id="13973621" author="stack" created="Fri, 18 Apr 2014 00:25:47 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; What you think?  Ok to disable the multicast or you think it required going forward?  Thanks boss.&lt;/p&gt;</comment>
                            <comment id="13973861" author="nkeywal" created="Fri, 18 Apr 2014 07:48:19 +0000"  >&lt;p&gt;in 0.98 and previous, it&apos;s the only solution to limit the impact of hbase.rpc.timeout. In trunk we&apos;re a little bit better since I decoupled the socket timeout from the rpc timeout, but it&apos;s still fresh, and as well multicasting the message will still be more efficient, by ~10 seconds in many cases. So yes, I really want to keep it.&lt;/p&gt;

&lt;p&gt;I can give a try to the Netty 4 conversion, but not before end of next week, or may be in two weeks.&lt;/p&gt;</comment>
                            <comment id="13996559" author="nkeywal" created="Tue, 13 May 2014 16:22:46 +0000"  >&lt;p&gt;Here is a version that works here. It seems that the handlers are surprised by the Datagram objects.... I removed them to do the work directly, they don&apos;t add much.&lt;/p&gt;</comment>
                            <comment id="13996759" author="stack" created="Tue, 13 May 2014 18:40:28 +0000"  >&lt;p&gt;lgtm  +1 if tests pass.&lt;/p&gt;

&lt;p&gt;We still have to enable the clusterstatus broadcast, right?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It seems that the handlers are surprised by the Datagram objects....&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What does the above mean? The listener is on the client side, not on the server-side.&lt;/p&gt;
</comment>
                            <comment id="13997353" author="nkeywal" created="Wed, 14 May 2014 07:25:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;We still have to enable the clusterstatus broadcast, right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What does the above mean?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Netty also uses this &quot;handler&quot; wording. An handler takes something on the pipeline and puts something back. But it does not work exactly as it used to in Netty 3.x, so I ended up with a single handler instead of 2.&lt;/p&gt;</comment>
                            <comment id="13997786" author="stack" created="Wed, 14 May 2014 17:11:39 +0000"  >&lt;p&gt;I see.&lt;/p&gt;

&lt;p&gt;+1 if tests pass for you.&lt;/p&gt;</comment>
                            <comment id="14002593" author="stack" created="Mon, 19 May 2014 23:50:17 +0000"  >&lt;p&gt;Any luck &lt;span class=&quot;error&quot;&gt;&amp;#91;~liochon&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="14002779" author="stack" created="Tue, 20 May 2014 04:14:43 +0000"  >&lt;p&gt;I ran unit tests over here and all seemed to pass:&lt;/p&gt;

&lt;p&gt;...&lt;br/&gt;
Running org.apache.hadoop.hbase.security.token.TestTokenAuthentication&lt;br/&gt;
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.343 sec&lt;br/&gt;
Running org.apache.hadoop.hbase.security.visibility.TestVisibilityLabels&lt;br/&gt;
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 32.163 sec&lt;br/&gt;
Running org.apache.hadoop.hbase.migration.TestUpgradeTo96&lt;br/&gt;
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 14.559 sec&lt;br/&gt;
Running org.apache.hadoop.hbase.migration.TestNamespaceUpgrade&lt;br/&gt;
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 45.436 sec&lt;/p&gt;

&lt;p&gt;Results :&lt;/p&gt;

&lt;p&gt;Tests run: 1187, Failures: 0, Errors: 0, Skipped: 5&lt;/p&gt;
</comment>
                            <comment id="14003081" author="nkeywal" created="Tue, 20 May 2014 11:08:18 +0000"  >&lt;p&gt;I committed it. I was waiting for hadoop-qa feedback (you know all this code analysis...) but it seems it will never come, so...&lt;/p&gt;

&lt;p&gt;Thanks for the review!&lt;/p&gt;</comment>
                            <comment id="14003740" author="stack" created="Tue, 20 May 2014 17:54:35 +0000"  >&lt;p&gt;Did we break hbase on java6?  See &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9550//testReport/org.apache.hadoop.hbase.client/TestHCM/org_apache_hadoop_hbase_client_TestHCM/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9550//testReport/org.apache.hadoop.hbase.client/TestHCM/org_apache_hadoop_hbase_client_TestHCM/&lt;/a&gt; where it complains:&lt;/p&gt;

&lt;p&gt;Caused by: java.lang.UnsupportedOperationException: Only supported on java 7+.&lt;br/&gt;
	at io.netty.channel.socket.nio.NioDatagramChannel.checkJavaVersion(NioDatagramChannel.java:103)&lt;br/&gt;
	at io.netty.channel.socket.nio.NioDatagramChannel.joinGroup(NioDatagramChannel.java:381)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.ClusterStatusPublisher$MulticastPublisher.connect(ClusterStatusPublisher.java:271)&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;I built with java7.&lt;/p&gt;</comment>
                            <comment id="14003764" author="nkeywal" created="Tue, 20 May 2014 18:16:41 +0000"  >&lt;p&gt;Likely.... Ouch. Do we still support java6 on 1.0?&lt;br/&gt;
Anyway we can deactivate the test to ends the build?&lt;/p&gt;

&lt;p&gt;I&apos;m on my phone, I can&apos;t do it right now but I will do it in a few hours...&lt;/p&gt;
</comment>
                            <comment id="14004392" author="hudson" created="Wed, 21 May 2014 05:51:23 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #5135 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5135/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5135/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10573&quot; title=&quot;Use Netty 4&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10573&quot;&gt;&lt;del&gt;HBASE-10573&lt;/del&gt;&lt;/a&gt; Use Netty 4 (nkeywal: rev 1596192)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/pom.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientIdGenerator.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClusterStatusListener.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Addressing.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-prefix-tree/pom.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/pom.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TableMapReduceUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/ClusterStatusPublisher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHCM.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFuzzyRowAndColumnRangeFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/pom.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14004755" author="nkeywal" created="Wed, 21 May 2014 15:18:42 +0000"  >&lt;p&gt;10573.add.patch contains what I plan to commit once the migration to git is done.&lt;/p&gt;</comment>
                            <comment id="14007429" author="nkeywal" created="Fri, 23 May 2014 17:35:24 +0000"  >&lt;p&gt;committed. Hopefully we&apos;re done.&lt;/p&gt;</comment>
                            <comment id="14007471" author="hudson" created="Fri, 23 May 2014 18:00:42 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5139 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5139/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5139/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10573&quot; title=&quot;Use Netty 4&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10573&quot;&gt;&lt;del&gt;HBASE-10573&lt;/del&gt;&lt;/a&gt; Use Netty 4 - addendum (nkeywal: rev 220037c465735f3f7c88fa1cdd966a872df714e5)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHCM.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14330547" author="enis" created="Sat, 21 Feb 2015 23:29:18 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12646024" name="10573.add.patch" size="2105" author="nkeywal" created="Wed, 21 May 2014 15:18:08 +0000"/>
                            <attachment id="12640738" name="10573.patch" size="29243" author="apurtell" created="Thu, 17 Apr 2014 23:51:29 +0000"/>
                            <attachment id="12629964" name="10573.patch" size="20312" author="apurtell" created="Thu, 20 Feb 2014 01:52:06 +0000"/>
                            <attachment id="12644643" name="10573.v3.patch" size="26076" author="nkeywal" created="Tue, 13 May 2014 16:18:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Feb 2014 15:44:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>374611</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1sk07:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>374911</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>