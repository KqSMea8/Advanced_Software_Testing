<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:54:06 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14540/HBASE-14540.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14540] Write Ahead Log Batching Optimization</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14540</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The new write ahead log mechanism seems to batch too few mutations when running inside the disruptor.  As we scaled our load up (many threads with small writes), we saw the number of hdfs sync operations grow in concert with the number of writes.  Generally, one would expect the size of the batches to grow but the number of actual sync operations to settle. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12902119">HBASE-14540</key>
            <summary>Write Ahead Log Batching Optimization</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="jleach">John Leach</assignee>
                                    <reporter username="jleach">John Leach</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Oct 2015 13:31:19 +0000</created>
                <updated>Sat, 31 Oct 2015 01:13:15 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="14941153" author="jleach" created="Fri, 2 Oct 2015 13:49:11 +0000"  >&lt;p&gt;Here is a modified Wait Strategy to apply to the disruptor.&lt;/p&gt;</comment>
                            <comment id="14941155" author="jleach" created="Fri, 2 Oct 2015 13:51:28 +0000"  >&lt;p&gt;I did not run this on HBase based benchmarks but I did run this while we (SpliceMachine) were running TPCC benchmarks and it showed a significant improvement (2x).&lt;/p&gt;

&lt;p&gt;Also we were able to get rid of these types of error messages.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;wal.FSHLog: Slow sync cost
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14941276" author="eclark" created="Fri, 2 Oct 2015 15:41:13 +0000"  >&lt;p&gt;This will negatively impact the average response time since on average everything will wait 2ms (1ms for wait and 1 ms for sync). So it might work for a throughput oriented workload, it won&apos;t be all that good for a online workloads.&lt;/p&gt;</comment>
                            <comment id="14941280" author="stack" created="Fri, 2 Oct 2015 15:43:22 +0000"  >&lt;p&gt;Lets get it in as an option. Let me try a WALPE workload against it.&lt;/p&gt;</comment>
                            <comment id="14941309" author="jleach" created="Fri, 2 Oct 2015 16:04:03 +0000"  >&lt;p&gt;Elliott, that is what I intuitively thought as well for a long time.  A few implementations have changed my mind on this...&lt;/p&gt;

&lt;p&gt;FYI, Here is a nice article on smart batching and why it is important even in low latency systems.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mechanical-sympathy.blogspot.com/2011/10/smart-batching.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mechanical-sympathy.blogspot.com/2011/10/smart-batching.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Stack, let me know if I can help on the testing front.  I know you put a ton of work in on the disruptor piece.&lt;/p&gt;</comment>
                            <comment id="14941319" author="eclark" created="Fri, 2 Oct 2015 16:12:53 +0000"  >&lt;p&gt;So right now I have clusters with less than 1ms average response time. This will absolutely negatively impact those. Smart batching is great. This is just adding wait time. We already have the smart batching algorithm that the linked article describes.&lt;/p&gt;</comment>
                            <comment id="14941327" author="jleach" created="Fri, 2 Oct 2015 16:18:32 +0000"  >&lt;p&gt; Good point...  Probably not a good idea then.&lt;/p&gt;</comment>
                            <comment id="14941335" author="eclark" created="Fri, 2 Oct 2015 16:24:31 +0000"  >&lt;p&gt;To expand a bit more this is the classic throughput vs response time trade off. We already have the smart batching method described in the linked article. If requests come in bunches we&apos;ll sync fewer times with larger payloads. This just adds more wait time.&lt;/p&gt;

&lt;p&gt;The attached class will wait longer than the described smart batching algorithm. That will increase throughput as it will mean less round trips to HDFS. However since on average everything will twice for while going through the ring it will increase latency. For clusters that optimize for throughput ( benchmarks and olap based workloads ) that&apos;s a good trade off. For people with an online workload this will set a baseline that they can&apos;t go faster than 2ms on average.&lt;/p&gt;</comment>
                            <comment id="14941338" author="eclark" created="Fri, 2 Oct 2015 16:26:27 +0000"  >&lt;p&gt;I think something like this could really add throughput for people who have an olap workload, so we should totally try this out and then make it an option. Just allow online workloads to use something else.&lt;/p&gt;</comment>
                            <comment id="14941346" author="jleach" created="Fri, 2 Oct 2015 16:30:19 +0000"  >&lt;p&gt;Clearly, I think we should make it configurable.  The problem with the &quot;smart batching&quot; we have is that it is designed for in-memory processing vs. a distributed WAL.  &lt;/p&gt;

&lt;p&gt;I appreciate you thinking on this...&lt;/p&gt;</comment>
                            <comment id="14983255" author="stack" created="Fri, 30 Oct 2015 20:32:51 +0000"  >&lt;p&gt;Make wait strategy pluggable. Add in Johns&apos; waitFor 2ms as option.&lt;/p&gt;</comment>
                            <comment id="14983306" author="stack" created="Fri, 30 Oct 2015 20:59:49 +0000"  >&lt;p&gt;I ran a test. Empty table. YCSB all writes going to a single RegionServer sitting on a HDFS of 5 nodes.  25 clients.  As is, the new strategy slows writes pretty radically (the strategy is on place for the 5% of the graph that is on the far right side). Let me try but upping the clients a bunch... but would be good if the strategy was a bit smarter and didn&apos;t wait when loading was relatively low.&lt;/p&gt;</comment>
                            <comment id="14983338" author="stack" created="Fri, 30 Oct 2015 21:22:25 +0000"  >&lt;p&gt;Bumping threads to 100 bumps the write throughput only slightly. Threads are doing this kinda stuff... waiting:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt; 102 (PriorityRpcServer.handler=19,queue=1,port=16020):
  State: TIMED_WAITING
  Blocked count: 78747
  Waited count: 110565
  Stack:
    java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
    org.apache.hadoop.hbase.regionserver.wal.SyncFuture.get(SyncFuture.java:167)
    org.apache.hadoop.hbase.regionserver.wal.FSHLog.blockOnSync(FSHLog.java:1356)
    org.apache.hadoop.hbase.regionserver.wal.FSHLog.publishSyncThenBlockOnCompletion(FSHLog.java:1350)
    org.apache.hadoop.hbase.regionserver.wal.FSHLog.sync(FSHLog.java:1456)
    org.apache.hadoop.hbase.regionserver.HRegion.syncOrDefer(HRegion.java:7901)
    org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutation(HRegion.java:3150)
    org.apache.hadoop.hbase.regionserver.HRegion.batchMutate(HRegion.java:2812)
    org.apache.hadoop.hbase.regionserver.HRegion.batchMutate(HRegion.java:2754)
    org.apache.hadoop.hbase.regionserver.RSRpcServices.doBatchOp(RSRpcServices.java:779)
    org.apache.hadoop.hbase.regionserver.RSRpcServices.doNonAtomicRegionMutation(RSRpcServices.java:741)
    org.apache.hadoop.hbase.regionserver.RSRpcServices.multi(RSRpcServices.java:2156)
    org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$2.callBlockingMethod(ClientProtos.java:32462)
    org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2179)
    org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:106)
    org.apache.hadoop.hbase.ipc.RpcExecutor.consumerLoop(RpcExecutor.java:130)
    org.apache.hadoop.hbase.ipc.RpcExecutor$1.run(RpcExecutor.java:107)
    java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:745)
&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt; 101 (PriorityRpcServer.handler=18,queue=0,port=16020):
  State: TIMED_WAITING
  Blocked count: 78786
  Waited count: 110881
  Stack:
    java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
    org.apache.hadoop.hbase.regionserver.wal.SyncFuture.get(SyncFuture.java:167)
    org.apache.hadoop.hbase.regionserver.wal.FSHLog.blockOnSync(FSHLog.java:1356)
    org.apache.hadoop.hbase.regionserver.wal.FSHLog.publishSyncThenBlockOnCompletion(FSHLog.java:1350)
    org.apache.hadoop.hbase.regionserver.wal.FSHLog.sync(FSHLog.java:1456)
    org.apache.hadoop.hbase.regionserver.HRegion.syncOrDefer(HRegion.java:7901)
    org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutation(HRegion.java:3150)
    org.apache.hadoop.hbase.regionserver.HRegion.batchMutate(HRegion.java:2812)
    org.apache.hadoop.hbase.regionserver.HRegion.batchMutate(HRegion.java:2754)
    org.apache.hadoop.hbase.regionserver.RSRpcServices.doBatchOp(RSRpcServices.java:779)
    org.apache.hadoop.hbase.regionserver.RSRpcServices.doNonAtomicRegionMutation(RSRpcServices.java:741)
    org.apache.hadoop.hbase.regionserver.RSRpcServices.multi(RSRpcServices.java:2156)
    org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$2.callBlockingMethod(ClientProtos.java:32462)
    org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2179)
    org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:106)
    org.apache.hadoop.hbase.ipc.RpcExecutor.consumerLoop(RpcExecutor.java:130)
    org.apache.hadoop.hbase.ipc.RpcExecutor$1.run(RpcExecutor.java:107)
    java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:745)
&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt; 100 (PriorityRpcServer.handler=17,queue=1,port=16020):
  State: TIMED_WAITING
  Blocked count: 78899
  Waited count: 110706
  Stack:
    java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
    org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl.waitForRead(MultiVersionConcurrencyControl.java:218)
    org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl.completeAndWait(MultiVersionConcurrencyControl.java:149)
    org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutation(HRegion.java:3166)
    org.apache.hadoop.hbase.regionserver.HRegion.batchMutate(HRegion.java:2812)
    org.apache.hadoop.hbase.regionserver.HRegion.batchMutate(HRegion.java:2754)
    org.apache.hadoop.hbase.regionserver.RSRpcServices.doBatchOp(RSRpcServices.java:779)
    org.apache.hadoop.hbase.regionserver.RSRpcServices.doNonAtomicRegionMutation(RSRpcServices.java:741)
    org.apache.hadoop.hbase.regionserver.RSRpcServices.multi(RSRpcServices.java:2156)
    org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$2.callBlockingMethod(ClientProtos.java:32462)
    org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2179)
    org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:106)
    org.apache.hadoop.hbase.ipc.RpcExecutor.consumerLoop(RpcExecutor.java:130)
    org.apache.hadoop.hbase.ipc.RpcExecutor$1.run(RpcExecutor.java:107)
    java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:745)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I tried to go to 300 threads with 100 clients on one of three servers but won&apos;t go above half the write rate of default strategy. Maybe I&apos;m doing something wrong or the fact tthat this is apache hbase branch-1?&lt;/p&gt;</comment>
                            <comment id="14983350" author="jleach" created="Fri, 30 Oct 2015 21:25:22 +0000"  >&lt;p&gt;I did it on Cloudera 5.4.1 for my test...&lt;/p&gt;</comment>
                            <comment id="14983356" author="stack" created="Fri, 30 Oct 2015 21:26:36 +0000"  >&lt;p&gt;What was the loading like &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jleach&quot; class=&quot;user-hover&quot; rel=&quot;jleach&quot;&gt;John Leach&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14983704" author="hadoopqa" created="Sat, 31 Oct 2015 00:49:17 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12769858/14540.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12769858/14540.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit ec651bfc7bb004c7a14503bd6ea5dc376975bd3e.&lt;br/&gt;
  ATTACHMENT ID: 12769858&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1731 checkstyle errors (more than the master&apos;s current 1730 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16320//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16320//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16320//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16320//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16320//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16320//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16320//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16320//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14983720" author="hadoopqa" created="Sat, 31 Oct 2015 01:13:15 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12769858/14540.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12769858/14540.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit c6d3dcdea33efa4fa745b323f6ff46b8b0711309.&lt;br/&gt;
  ATTACHMENT ID: 12769858&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1731 checkstyle errors (more than the master&apos;s current 1730 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16322//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16322//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16322//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16322//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16322//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16322//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16322//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16322//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12769858" name="14540.txt" size="5721" author="stack" created="Fri, 30 Oct 2015 20:32:51 +0000"/>
                            <attachment id="12764770" name="HBaseWALBlockingWaitStrategy.java" size="1965" author="jleach" created="Fri, 2 Oct 2015 13:49:11 +0000"/>
                            <attachment id="12769865" name="writes.png" size="31255" author="stack" created="Fri, 30 Oct 2015 20:59:49 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 2 Oct 2015 15:41:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 6 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2mjfj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>