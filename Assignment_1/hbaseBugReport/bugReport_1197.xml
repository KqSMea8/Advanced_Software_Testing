<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:51:32 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1197/HBASE-1197.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1197] IPC of large cells should transfer in chunks not via naive full copy</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1197</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Several instances of OOME when trying to serve up large cells to clients have been observed. IPC should send large cell content in chunks instead of as one large naive copy. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12414605">HBASE-1197</key>
            <summary>IPC of large cells should transfer in chunks not via naive full copy</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Wed, 11 Feb 2009 18:56:35 +0000</created>
                <updated>Wed, 14 May 2014 02:50:51 +0000</updated>
                            <resolved>Wed, 14 May 2014 02:50:51 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="12672889" author="stack" created="Thu, 12 Feb 2009 05:50:46 +0000"  >&lt;p&gt;Its almost as though we should chunk end-to-end; from hfile all the ways on out to the client.&lt;/p&gt;

&lt;p&gt;Tough one is on the way in.  The big cell is going to have to sit in the mecache for some &amp;#8211; probably small if its a big cell value &amp;#8211; period of time.  Can we chunk on the way in?  From client to hfile?&lt;/p&gt;
</comment>
                            <comment id="12672920" author="apurtell" created="Thu, 12 Feb 2009 09:04:22 +0000"  >&lt;p&gt;From: Ryan Rawson&lt;br/&gt;
To: hbase-dev@hadoop.apache.org&lt;/p&gt;

&lt;p&gt;I doubt we could chunk values straight into HFile - you&apos;d have to have 1file for 1 value.  If your value is that large (more than hundreds of megs), maybe you shouldn&apos;t be storing that in HBase - store directly in HDFS and use HBase to index the content and provide filename pointers.&lt;/p&gt;

&lt;p&gt;As it stands, right now a key/value has to live in memcache for some period of time (seconds? minutes?), so storing an entire key/value has to be feasable.  Not supporting chunking/streaming doesn&apos;t seem to be a major deficiency.&lt;/p&gt;

&lt;p&gt;I think of hbase as a way of making it possible to effiency store smallish values on HDFS.  I think we should support reasonably large values, but right now there is a 2gb value max size (int size for value).  With enough RAM thrown at HBase it should be possible to support nearly all of that size.&lt;/p&gt;</comment>
                            <comment id="12672922" author="apurtell" created="Thu, 12 Feb 2009 09:07:38 +0000"  >&lt;p&gt;I wonder if storing Web content into HBase isn&apos;t a canonical use case. Certainly the Heritrix hbase-writer makes it easy enough. The example Bigtable schema on the HBase Architecture page implies a use case of storing views of Web data snapshotted over time. Podcasts and large software packages can exceed 100MB. They are outliers certainly but with the current scheme where they are copied multiple times on the heap it is not only inefficient but also occasionally fatal via OOME.&lt;/p&gt;</comment>
                            <comment id="12701642" author="stack" created="Wed, 22 Apr 2009 18:59:18 +0000"  >&lt;p&gt;Shall we move this out of 0.20.0?&lt;/p&gt;</comment>
                            <comment id="12701739" author="apurtell" created="Wed, 22 Apr 2009 23:33:43 +0000"  >&lt;p&gt;+1 &lt;/p&gt;

&lt;p&gt;Tabled.&lt;/p&gt;</comment>
                            <comment id="13994716" author="apurtell" created="Mon, 12 May 2014 00:28:49 +0000"  >&lt;p&gt;Resurrect for 1.0 or close ? Ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13994889" author="nkeywal" created="Mon, 12 May 2014 07:37:04 +0000"  >&lt;p&gt;The use case is valid for sure (easier to say now than 5 years ago &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;br/&gt;
I guess that compared to 5 years ago, sending 100mb is much less of an issue now, so chunks are less useful? May be this jira is partially superseded by the ones on of the offheap stuff?&lt;/p&gt;
</comment>
                            <comment id="13994910" author="apurtell" created="Mon, 12 May 2014 07:53:58 +0000"  >&lt;p&gt;This issue was particular to something I was working on a while back. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; It was the wild west. Today I would break up content destined for large cells into smaller values and keep metadata around to reconstruct, or store in HDFS and put the path into HBase instead. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;May be this jira is partially superseded by the ones on of the offheap stuff?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We could get some code reuse, depending. But that work doesn&apos;t have any provision for clients and servers being smart enough to break up a large cell into &quot;packets&quot;.  I was thinking resolving as &apos;Not A Problem&apos; or &apos;Later&apos; given storing large cells is discouraged. &lt;/p&gt;</comment>
                            <comment id="13996950" author="enis" created="Tue, 13 May 2014 21:59:32 +0000"  >&lt;p&gt;This ties into blob store discussions which would enable a lot of more interesting use cases for hbase. However, it is an architectural level work that can sit on top of hbase as well, like what Microsoft did in &lt;a href=&quot;http://sigops.org/sosp/sosp11/current/2011-Cascais/printable/11-calder.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://sigops.org/sosp/sosp11/current/2011-Cascais/printable/11-calder.pdf&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Even if we are able to store large cells in hfiles, the write amplification from compactions would be a big problem. We would like to use the block storage in hdfs directly to store large objects. Andrew, you had a coprocessor + custom compactions based solution for this, no? &lt;/p&gt;</comment>
                            <comment id="13997215" author="apurtell" created="Wed, 14 May 2014 02:46:42 +0000"  >&lt;p&gt;Yes let&apos;s close this issue and open another for the coprocessor + custom compaction work known as &quot;HBase LOB&quot;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12455264">HBASE-2182</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 12 Feb 2009 05:50:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32034</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 31 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hbwn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99191</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>