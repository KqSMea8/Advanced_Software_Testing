<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:21:07 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4683/HBASE-4683.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4683] Always cache index and bloom blocks</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4683</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This would add a new boolean config option: hfile.block.cache.datablocks&lt;br/&gt;
Default would be true.&lt;/p&gt;

&lt;p&gt;Setting this to false allows HBase in a mode where only index blocks are cached, which is useful for analytical scenarios where a useful working set of the data cannot be expected to fit into the (aggregate) cache.&lt;br/&gt;
This is the equivalent of setting cacheBlocks to false on all scans (including scans on behalf of gets).&lt;/p&gt;

&lt;p&gt;I would like to get a general feeling about what folks think about this.&lt;br/&gt;
The change itself would be simple.&lt;/p&gt;

&lt;p&gt;Update (Mikhail): we probably don&apos;t need a new conf option. Instead, we will make index blocks cached by default.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12528995">HBASE-4683</key>
            <summary>Always cache index and bloom blocks</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikhail">Mikhail Bautin</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Wed, 26 Oct 2011 23:52:38 +0000</created>
                <updated>Fri, 12 Oct 2012 05:35:05 +0000</updated>
                            <resolved>Thu, 15 Dec 2011 18:28:07 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                    <fixVersion>0.94.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13136609" author="jdcryans" created="Wed, 26 Oct 2011 23:57:04 +0000"  >&lt;p&gt;Sounds sophisticated! +1&lt;/p&gt;</comment>
                            <comment id="13136766" author="lhofhansl" created="Thu, 27 Oct 2011 04:37:02 +0000"  >&lt;p&gt;As a separate issue... index blocks could be treated with MEMORY priority in the LRU cache.&lt;/p&gt;</comment>
                            <comment id="13137285" author="streamy" created="Thu, 27 Oct 2011 17:05:19 +0000"  >&lt;p&gt;+1 on both ideas, Lars.&lt;/p&gt;</comment>
                            <comment id="13137702" author="lhofhansl" created="Thu, 27 Oct 2011 23:03:27 +0000"  >&lt;p&gt;Here&apos;s the simple patch.&lt;/p&gt;

&lt;p&gt;This has only a global setting. Might make sense to have this per CF, or maybe per CF and a global default setting.&lt;/p&gt;</comment>
                            <comment id="13137705" author="lhofhansl" created="Thu, 27 Oct 2011 23:05:47 +0000"  >&lt;p&gt;As for treating index blocks with MEMORY priority (not part of the patch), should we just always do that, or should that be configurable as well?&lt;/p&gt;</comment>
                            <comment id="13138787" author="lhofhansl" created="Fri, 28 Oct 2011 21:25:43 +0000"  >&lt;p&gt;passes all test&lt;/p&gt;</comment>
                            <comment id="13145131" author="lhofhansl" created="Sun, 6 Nov 2011 22:02:28 +0000"  >&lt;p&gt;v2 has a config option to cache index block with in-memory priority.&lt;/p&gt;</comment>
                            <comment id="13151869" author="lhofhansl" created="Thu, 17 Nov 2011 06:51:21 +0000"  >&lt;p&gt;Any more comments? Is useful for anybody? Should I add something else? Should this maybe be set per CF?&lt;/p&gt;</comment>
                            <comment id="13152402" author="jdcryans" created="Thu, 17 Nov 2011 22:24:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is useful for anybody? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m sure it would be.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should this maybe be set per CF?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good question, I can&apos;t tell really without a use case although. IIUC, currently with HFile v2 setting block cache to false doesn&apos;t even cache index blocks? If so, my opinion would be that we should always cache index blocks and don&apos;t even bother having a config for that. I&apos;m curious as if there&apos;s ever a situation where you wouldn&apos;t want to cache index blocks since they are so small.&lt;/p&gt;</comment>
                            <comment id="13152410" author="lhofhansl" created="Thu, 17 Nov 2011 22:32:05 +0000"  >&lt;p&gt;That might be a better option (always cache index blocks), looks like that&apos;d be some amount of refactoring (as CacheConfig.blockCache is currently null if cache size is set to 0).&lt;/p&gt;

&lt;p&gt;The 2nd part of this is classifying index blocks (optionally) as in memory, so they are less likely to be evicted due to churn of data blocks.&lt;/p&gt;</comment>
                            <comment id="13152411" author="jdcryans" created="Thu, 17 Nov 2011 22:40:13 +0000"  >&lt;p&gt;I&apos;m fine with not caching index blocks if there&apos;s no cache, but maybe we should educate our users instead to disable block caching on their tables instead in order to have index caching.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The 2nd part of this is classifying index blocks (optionally) as in memory, so they are less likely to be evicted due to churn of data blocks.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah... I wonder if it&apos;s really going to make a difference...&lt;/p&gt;</comment>
                            <comment id="13152419" author="lhofhansl" created="Thu, 17 Nov 2011 22:53:26 +0000"  >&lt;p&gt;So what I set out to do with this already possible by disabling BLOCKCACHE on the CF.&lt;br/&gt;
I think I am just going to close this jira.&lt;/p&gt;</comment>
                            <comment id="13152423" author="jdcryans" created="Thu, 17 Nov 2011 22:56:14 +0000"  >&lt;p&gt;So just to be sure, in HFile v2, if you disable BC for a CF does it still cache the index blocks?&lt;/p&gt;</comment>
                            <comment id="13152432" author="lhofhansl" created="Thu, 17 Nov 2011 23:05:54 +0000"  >&lt;p&gt;Looks like it in the code. blockCache is only null if hfile.block.cache.size is set to 0. If it is not null, the cache setting is already overridden for index blocks in HFileBlockIndex.seekToDataBlock.&lt;/p&gt;

&lt;p&gt;I&apos;ll verify then close this if confirmed.&lt;/p&gt;</comment>
                            <comment id="13166601" author="mikhail" created="Fri, 9 Dec 2011 21:54:05 +0000"  >&lt;p&gt;This is from HFileBlockIndex.java, line 202 (trunk): boolean shouldCache = cacheBlocks || (lookupLevel &amp;lt; searchTreeLevel)&lt;/p&gt;

&lt;p&gt;On the other hand, in HFileReaderV2 we have: cacheBlock &amp;amp;= cacheConf.shouldCacheDataOnRead().&lt;/p&gt;

&lt;p&gt;So currently, when we disable block caching, we don&apos;t even cache data blocks, and there is a valid issue to be fixed in this JIRA.&lt;/p&gt;</comment>
                            <comment id="13166611" author="lhofhansl" created="Fri, 9 Dec 2011 22:02:40 +0000"  >&lt;p&gt;Thanks Mikkhail.&lt;br/&gt;
So it&apos;s indeed not possible to achieve this currently (by setting disabling BLOCKCACHE on the CF).&lt;br/&gt;
I&apos;ll post a patch when I get to this (unless you want to &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;/p&gt;</comment>
                            <comment id="13167660" author="mikhail" created="Mon, 12 Dec 2011 18:39:59 +0000"  >&lt;p&gt;Lars: we won&apos;t be able to cache index blocks if the block cache is disabled completely. However, if it is enabled, we should always cache index blocks. Please let me know if your understanding of this issue is different.&lt;/p&gt;</comment>
                            <comment id="13167699" author="jdcryans" created="Mon, 12 Dec 2011 19:32:06 +0000"  >&lt;p&gt;Mikhail, this line seems only to be used for bloom filters:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;cacheBlock &amp;amp;= cacheConf.shouldCacheDataOnRead().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What about the other meta blocks?&lt;/p&gt;</comment>
                            <comment id="13167730" author="jdcryans" created="Mon, 12 Dec 2011 19:58:03 +0000"  >&lt;p&gt;Oh I see it&apos;s also in readBlock...&lt;/p&gt;</comment>
                            <comment id="13167824" author="mikhail" created="Mon, 12 Dec 2011 21:34:37 +0000"  >&lt;p&gt;Actually shouldCacheDataOnRead is weird. It is true by default as long as block cache is enabled, unless it is explicitly disabled in cacheConf. So I don&apos;t really know if that particular line ever becomes a problem when block cache is enabled. &lt;/p&gt;</comment>
                            <comment id="13167860" author="jdcryans" created="Mon, 12 Dec 2011 22:14:00 +0000"  >&lt;p&gt;This patch for 0.92 makes it work for me. I&apos;m backporting a few things from trunk, adding the method that Lars had in his patch and doing an additional check in readBlock to make sure we always cache indexes if there&apos;s an LRU.&lt;/p&gt;</comment>
                            <comment id="13167904" author="lhofhansl" created="Mon, 12 Dec 2011 22:42:33 +0000"  >&lt;p&gt;Thanks for running with this Mikhail and J-D.&lt;/p&gt;

&lt;p&gt;Looks good to me. Does this also work if the blockcache was disabled through the HColumnDescriptor?&lt;/p&gt;</comment>
                            <comment id="13167912" author="jdcryans" created="Mon, 12 Dec 2011 22:48:18 +0000"  >&lt;p&gt;The test I did was with block cache enabled on the region server but disabled for the column family I was testing.&lt;/p&gt;</comment>
                            <comment id="13168075" author="phabricator@reviews.facebook.net" created="Tue, 13 Dec 2011 02:21:30 +0000"  >&lt;p&gt;mbautin requested code review of &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; Always cache index and bloom blocks&quot;.&lt;br/&gt;
Reviewers: jdcryans, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Making sure that we always cache index and bloom blocks, as long as we have block cache, even if the cache is disabled for the CF. Adding a unit test to verify this using metrics. In process of doing this, I&apos;ve factored out a region creation method in HBaseTestingUtility, and cleaned up a few things in HFile readers/writers. I have also categorized HFile v1 bloom blocks (that are technically meta blocks) as bloom blocks in metrics.&lt;/p&gt;

&lt;p&gt;TEST PLAN&lt;br/&gt;
  Unit tests&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D807&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaMetrics.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestForceCacheImportantBlocks.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;/p&gt;

&lt;p&gt;MANAGE HERALD DIFFERENTIAL RULES&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/view/differential/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/view/differential/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WHY DID I GET THIS EMAIL?&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/transcript/1719/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/transcript/1719/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tip: use the X-Herald-Rules header to filter Herald messages in your client.&lt;/p&gt;</comment>
                            <comment id="13168162" author="phabricator@reviews.facebook.net" created="Tue, 13 Dec 2011 06:31:31 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; Always cache index and bloom blocks&quot;.&lt;/p&gt;

&lt;p&gt;  Looks good to me generally. The metric changes are unrelated, though. Correct?&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java:192 This is an unrelated change it seems&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java:248 another unrelated change&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D807&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13168298" author="phabricator@reviews.facebook.net" created="Tue, 13 Dec 2011 10:45:30 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; Always cache index and bloom blocks&quot;.&lt;br/&gt;
Reviewers: jdcryans, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Actually, the metrics changes are important. The unit test uses per-CF metrics to determine whether the blocks have been cached (or not cached, for data blocks), and when running the unit test I discovered some bugs in how table and CF name are passed down to HFile readers/writers, so I had to clean that up a bit.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D807&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaMetrics.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestForceCacheImportantBlocks.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/metrics/TestSchemaConfigured.java&lt;/p&gt;</comment>
                            <comment id="13168736" author="phabricator@reviews.facebook.net" created="Tue, 13 Dec 2011 21:21:30 +0000"  >&lt;p&gt;jdcryans has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; Always cache index and bloom blocks&quot;.&lt;/p&gt;

&lt;p&gt;  I only have one question with compactions, after that I&apos;m +1&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java:293 Are we caching even in the case of isCompaction?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D807&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13168747" author="jdcryans" created="Tue, 13 Dec 2011 21:31:47 +0000"  >&lt;p&gt;This needs to be in 0.92 too, the potential performance regression is too big.&lt;/p&gt;</comment>
                            <comment id="13168888" author="stack" created="Tue, 13 Dec 2011 23:51:32 +0000"  >&lt;p&gt;The below...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; shouldCache = isBlockCacheEnabled()
+        &amp;amp;&amp;amp; (cacheDataOnRead ||
+            category == BlockCategory.INDEX ||
+            category == BlockCategory.BLOOM);
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; shouldCache;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;should just be:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; isBlockCacheEnabled() &amp;amp;&amp;amp;
  (cacheDataOnRead ||
    category == BlockCategory.INDEX ||
    category == BlockCategory.BLOOM);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;No need of intermediary local var.   But no biggie...&lt;/p&gt;

&lt;p&gt;Is this SchemaConfigured stuff in 0.92 branch?&lt;/p&gt;

&lt;p&gt;Unused imports in TestHRegion?&lt;/p&gt;

&lt;p&gt;Otherwise patch looks ok to me.  Is it enough?&lt;/p&gt;</comment>
                            <comment id="13168899" author="zhihyu@ebaysf.com" created="Tue, 13 Dec 2011 23:58:49 +0000"  >&lt;p&gt;SchemaConfigured was introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4768&quot; title=&quot;Per-(table, columnFamily) metrics with configurable table name inclusion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4768&quot;&gt;&lt;del&gt;HBASE-4768&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Looks like backport is needed since this JIRA is marked against 0.92&lt;/p&gt;</comment>
                            <comment id="13168916" author="jdcryans" created="Wed, 14 Dec 2011 00:24:02 +0000"  >&lt;p&gt;Trunk patch ported to 0.92 without the metrics, tested on my cluster with BC disabled on the family and made sure the indexes were still cached.&lt;/p&gt;</comment>
                            <comment id="13168922" author="phabricator@reviews.facebook.net" created="Wed, 14 Dec 2011 00:34:30 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; Always cache index and bloom blocks&quot;.&lt;/p&gt;

&lt;p&gt;  Thanks for explaining Mikhail. Looks good to me. +1&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D807&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13168959" author="stack" created="Wed, 14 Dec 2011 01:32:34 +0000"  >&lt;p&gt;+1 on 0.92 version of patch.  Apply and i&apos;ll cut RC.&lt;/p&gt;</comment>
                            <comment id="13168984" author="phabricator@reviews.facebook.net" created="Wed, 14 Dec 2011 01:58:30 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; Always cache index and bloom blocks&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java:293 Compactions mostly consist of continuous reads and should not do a lot of seeks. But yes, this will cache index/bloom blocks even in case of compactions. I guess I could add a unit test to make sure we really don&apos;t utilize the block index during compactions, and we can explicitly disable them here. Or we could leave it as it is in case compactions do use the block index in a limited way (need to find out if that is the case).&lt;br/&gt;
  @jdcryans: any thoughts/suggestions on this?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D807&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13169012" author="phabricator@reviews.facebook.net" created="Wed, 14 Dec 2011 02:30:30 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; Always cache index and bloom blocks&quot;.&lt;/p&gt;

&lt;p&gt;  I would guess that even compactions do reseeks to the next column.&lt;br/&gt;
  Those reseeks would be slow without the index blocks in cache.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D807&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13169030" author="phabricator@reviews.facebook.net" created="Wed, 14 Dec 2011 02:56:30 +0000"  >&lt;p&gt;jdcryans has accepted the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; Always cache index and bloom blocks&quot;.&lt;/p&gt;

&lt;p&gt;  My testing of the 0.92 patch I put in the jira shows that it works as advertised, so +1. @mbautin would you mind giving a quick at that patch to make sure I didn&apos;t do anything weird?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D807&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13169720" author="mikhail" created="Wed, 14 Dec 2011 21:34:50 +0000"  >&lt;p&gt;+1 on J-D&apos;s patch for 0.92&lt;/p&gt;</comment>
                            <comment id="13169785" author="phabricator@reviews.facebook.net" created="Wed, 14 Dec 2011 23:09:30 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; Always cache index and bloom blocks&quot;.&lt;br/&gt;
Reviewers: jdcryans, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Rebasing up to r1214519.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D807&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaMetrics.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestForceCacheImportantBlocks.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/metrics/TestSchemaConfigured.java&lt;/p&gt;</comment>
                            <comment id="13169787" author="mikhail" created="Wed, 14 Dec 2011 23:10:07 +0000"  >&lt;p&gt;Attaching the patch rebased on top of r1214519.&lt;/p&gt;</comment>
                            <comment id="13169979" author="hudson" created="Thu, 15 Dec 2011 05:52:37 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #190 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/190/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/190/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt;  Always cache index and bloom blocks&lt;/p&gt;

&lt;p&gt;jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13170097" author="hudson" created="Thu, 15 Dec 2011 10:20:45 +0000"  >&lt;p&gt;Integrated in HBase-0.92-security #39 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92-security/39/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92-security/39/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt;  Always cache index and bloom blocks&lt;/p&gt;

&lt;p&gt;jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13170392" author="jdcryans" created="Thu, 15 Dec 2011 18:28:07 +0000"  >&lt;p&gt;Committed to branch and trunk, thanks for the quick work Mikhail!&lt;/p&gt;</comment>
                            <comment id="13170718" author="hudson" created="Fri, 16 Dec 2011 02:42:10 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2548 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2548/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2548/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt;  Always cache index and bloom blocks&lt;/p&gt;

&lt;p&gt;jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/metrics/TestSchemaConfigured.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13170773" author="hudson" created="Fri, 16 Dec 2011 05:02:51 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #33 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/33/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/33/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt;  Always cache index and bloom blocks&lt;/p&gt;

&lt;p&gt;jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/metrics/TestSchemaConfigured.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13172667" author="phabricator@reviews.facebook.net" created="Mon, 19 Dec 2011 22:09:30 +0000"  >&lt;p&gt;mbautin has abandoned the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; Always cache index and bloom blocks&quot;.&lt;br/&gt;
Added CCs: nspiegelberg, stack, tedyu&lt;/p&gt;

&lt;p&gt;  @jdcryans: you committed this one, right?  Closing the Phabricator revision.&lt;/p&gt;

&lt;p&gt;  A reminder to committers (quoting @nspiegelberg) so that we can properly close Phabricator revisions when committed (cc: @tedyu, @stack).&lt;/p&gt;

&lt;p&gt;  &amp;gt;    since we&apos;ve decided to allow more Metadata in our commit logs, it would be nice to use the patch comments when committing this diff. Namely, including &apos;Differential Revision: #&apos; will allow Phabricator to automatically mark the review as closed.&lt;/p&gt;

&lt;p&gt;  Here are the steps to set up Arcanist and Phabricator in your working directory so you can auto-generate the commit message:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;mvn -Darc initialize&lt;/li&gt;
	&lt;li&gt;arc amend --revision &amp;lt;revision_number&amp;gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  You can install Arcanist (arc) by following the instructions at &lt;a href=&quot;http://www.phabricator.com/docs/phabricator/article/Arcanist_User_Guide.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.phabricator.com/docs/phabricator/article/Arcanist_User_Guide.html&lt;/a&gt;. More instructions about Phabricator/JIRA integration are available at &lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/PhabricatorCodeReview&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cwiki.apache.org/confluence/display/Hive/PhabricatorCodeReview&lt;/a&gt; (that is a howto for Hive but it should be very similar for HBase).&lt;/p&gt;


&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D807&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13205200" author="mikhail" created="Fri, 10 Feb 2012 03:45:39 +0000"  >&lt;p&gt;@jdcryans: it looks like TestForceCacheImportantBlocks.java was not included into your trunk commit of this JIRA. I will verify that the test still works and post an addendum patch.&lt;/p&gt;</comment>
                            <comment id="13205216" author="phabricator@reviews.facebook.net" created="Fri, 10 Feb 2012 04:19:57 +0000"  >&lt;p&gt;mbautin requested code review of &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; Test that we always cache index and bloom blocks&quot;.&lt;br/&gt;
Reviewers: JIRA, jdcryans, lhofhansl, Liyin&lt;/p&gt;

&lt;p&gt;  This was reviewed D807 but was not checked in. Submitting unit test as a separate patch, and extending the scope of the test to also handle the case when block cache is enabled for the column family.&lt;/p&gt;

&lt;p&gt;TEST PLAN&lt;br/&gt;
  Run unit tests&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1695&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1695&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestForceCacheImportantBlocks.java&lt;/p&gt;

&lt;p&gt;MANAGE HERALD DIFFERENTIAL RULES&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/view/differential/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/view/differential/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WHY DID I GET THIS EMAIL?&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/transcript/3621/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/transcript/3621/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tip: use the X-Herald-Rules header to filter Herald messages in your client.&lt;/p&gt;</comment>
                            <comment id="13205622" author="phabricator@reviews.facebook.net" created="Fri, 10 Feb 2012 18:44:57 +0000"  >&lt;p&gt;jdcryans has accepted the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; Test that we always cache index and bloom blocks&quot;.&lt;/p&gt;

&lt;p&gt;  +1, sorry about that. Please open a new jira.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1695&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1695&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13205728" author="mikhail" created="Fri, 10 Feb 2012 20:34:31 +0000"  >&lt;p&gt;The new JIRA with the unit test is &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5382&quot; title=&quot;Test that we always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5382&quot;&gt;&lt;del&gt;HBASE-5382&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13205765" author="hudson" created="Fri, 10 Feb 2012 21:20:25 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2658 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2658/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2658/&lt;/a&gt;)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5382&quot; title=&quot;Test that we always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5382&quot;&gt;&lt;del&gt;HBASE-5382&lt;/del&gt;&lt;/a&gt; Test that we always cache index and bloom blocks&lt;/p&gt;

&lt;p&gt;Summary: This is a unit test that should have been part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; but was&lt;br/&gt;
not committed. The original test was reviewed as part of&lt;br/&gt;
&lt;a href=&quot;https://reviews.facebook.net/D807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D807&lt;/a&gt;. Submitting unit test as a separate JIRA and&lt;br/&gt;
patch, and extending the scope of the test to also handle the case when block&lt;br/&gt;
cache is enabled for the column family.&lt;/p&gt;

&lt;p&gt;Test Plan: Run unit tests&lt;/p&gt;

&lt;p&gt;Reviewers: JIRA, jdcryans, lhofhansl, Liyin&lt;/p&gt;

&lt;p&gt;Reviewed By: jdcryans&lt;/p&gt;

&lt;p&gt;CC: jdcryans&lt;/p&gt;

&lt;p&gt;Differential Revision: &lt;a href=&quot;https://reviews.facebook.net/D1695&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1695&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;mbautin : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestForceCacheImportantBlocks.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13206033" author="hudson" created="Sat, 11 Feb 2012 05:53:04 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #108 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/108/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/108/&lt;/a&gt;)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5382&quot; title=&quot;Test that we always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5382&quot;&gt;&lt;del&gt;HBASE-5382&lt;/del&gt;&lt;/a&gt; Test that we always cache index and bloom blocks&lt;/p&gt;

&lt;p&gt;Summary: This is a unit test that should have been part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4683&quot; title=&quot;Always cache index and bloom blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4683&quot;&gt;&lt;del&gt;HBASE-4683&lt;/del&gt;&lt;/a&gt; but was&lt;br/&gt;
not committed. The original test was reviewed as part of&lt;br/&gt;
&lt;a href=&quot;https://reviews.facebook.net/D807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D807&lt;/a&gt;. Submitting unit test as a separate JIRA and&lt;br/&gt;
patch, and extending the scope of the test to also handle the case when block&lt;br/&gt;
cache is enabled for the column family.&lt;/p&gt;

&lt;p&gt;Test Plan: Run unit tests&lt;/p&gt;

&lt;p&gt;Reviewers: JIRA, jdcryans, lhofhansl, Liyin&lt;/p&gt;

&lt;p&gt;Reviewed By: jdcryans&lt;/p&gt;

&lt;p&gt;CC: jdcryans&lt;/p&gt;

&lt;p&gt;Differential Revision: &lt;a href=&quot;https://reviews.facebook.net/D1695&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1695&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;mbautin : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestForceCacheImportantBlocks.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12534549">HBASE-5000</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12507453" name="0001-Cache-important-block-types.patch" size="47650" author="mikhail" created="Wed, 14 Dec 2011 23:10:07 +0000"/>
                            <attachment id="12502694" name="4683-v2.txt" size="10072" author="lhofhansl" created="Sun, 6 Nov 2011 22:02:28 +0000"/>
                            <attachment id="12501186" name="4683.txt" size="9713" author="lhofhansl" created="Thu, 27 Oct 2011 23:03:27 +0000"/>
                            <attachment id="12514074" name="ASF.LICENSE.NOT.GRANTED--D1695.1.patch" size="8081" author="phabricator@reviews.facebook.net" created="Fri, 10 Feb 2012 04:19:58 +0000"/>
                            <attachment id="12507117" name="ASF.LICENSE.NOT.GRANTED--D807.1.patch" size="33907" author="phabricator@reviews.facebook.net" created="Tue, 13 Dec 2011 02:21:31 +0000"/>
                            <attachment id="12507165" name="ASF.LICENSE.NOT.GRANTED--D807.2.patch" size="42689" author="phabricator@reviews.facebook.net" created="Tue, 13 Dec 2011 10:45:31 +0000"/>
                            <attachment id="12507452" name="ASF.LICENSE.NOT.GRANTED--D807.3.patch" size="42786" author="phabricator@reviews.facebook.net" created="Wed, 14 Dec 2011 23:09:30 +0000"/>
                            <attachment id="12507270" name="HBASE-4683-0.92-v2.patch" size="8655" author="jdcryans" created="Wed, 14 Dec 2011 00:24:01 +0000"/>
                            <attachment id="12507072" name="HBASE-4683-v3.patch" size="3154" author="jdcryans" created="Mon, 12 Dec 2011 22:14:00 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 26 Oct 2011 23:57:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>214855</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 44 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08qu7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>48948</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>