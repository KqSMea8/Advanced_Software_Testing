<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:36:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6411/HBASE-6411.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6411] Move Master Metrics to metrics 2</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6411</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Move Master Metrics to metrics 2&lt;/p&gt;</description>
                <environment></environment>
        <key id="12599180">HBASE-6411</key>
            <summary>Move Master Metrics to metrics 2</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12512380">HBASE-4050</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="alexb">Alex Baranau</assignee>
                                    <reporter username="eclark">Elliott Clark</reporter>
                        <labels>
                    </labels>
                <created>Tue, 17 Jul 2012 21:59:07 +0000</created>
                <updated>Mon, 23 Sep 2013 18:31:42 +0000</updated>
                            <resolved>Thu, 2 Aug 2012 19:00:02 +0000</resolved>
                                                    <fixVersion>0.95.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13418352" author="alexb" created="Thu, 19 Jul 2012 15:15:04 +0000"  >&lt;p&gt;Attached patch which is based on my suggestion at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4050&quot; title=&quot;Update HBase metrics framework to metrics2 framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4050&quot;&gt;&lt;del&gt;HBASE-4050&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;NOTE: Haven&apos;t changed added by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4050&quot; title=&quot;Update HBase metrics framework to metrics2 framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4050&quot;&gt;&lt;del&gt;HBASE-4050&lt;/del&gt;&lt;/a&gt; classes.&lt;/p&gt;

&lt;p&gt;NOTE: Added ability to create unit-tests for MetricsSources and added simplest unit-test for MasterMetrics.&lt;/p&gt;

&lt;p&gt;NOTE: I know that this patch changes committed approach from Elliott&apos;s patch at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4050&quot; title=&quot;Update HBase metrics framework to metrics2 framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4050&quot;&gt;&lt;del&gt;HBASE-4050&lt;/del&gt;&lt;/a&gt;. Please refer to my last comments at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4050&quot; title=&quot;Update HBase metrics framework to metrics2 framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4050&quot;&gt;&lt;del&gt;HBASE-4050&lt;/del&gt;&lt;/a&gt; for reasoning.&lt;/p&gt;

&lt;p&gt;Again: I will be completely OK if you turn down my suggestion. Just wanted to share thoughts in which I saw some benefits.&lt;/p&gt;

&lt;p&gt;Please, let me know what you think.&lt;/p&gt;</comment>
                            <comment id="13418417" author="alexb" created="Thu, 19 Jul 2012 16:26:59 +0000"  >&lt;p&gt;To sum up:&lt;/p&gt;

&lt;p&gt;To me, with approach in this patch, we &lt;b&gt;really&lt;/b&gt; create &lt;b&gt;shim for hadoop classes&lt;/b&gt; as opposed to moving HBase classes (metric sources implementations and such) into the shim layer. This way every class/interface from hadoop-compat acts as a shim for hadoop class, which makes it easier to switch to actual implementation later down the road. I&apos;d say we may be should follow this logic when adding things into the shim layer.&lt;/p&gt;

&lt;p&gt;But there might be a con to that: we have to provide shim for more classes with this approach. Though still it looks like there shouldn&apos;t be many of them. For now the difference boils down to two extra Mutable metrics classes.&lt;/p&gt;</comment>
                            <comment id="13418443" author="alexb" created="Thu, 19 Jul 2012 17:00:10 +0000"  >&lt;p&gt;Oh, and I ran the build with:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;mvn clean install -Dtest=TestMasterMetrics
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;MAVEN_OPTS=-Xmx2048m mvn clean test help:active-profiles -X -Dtest=TestMasterMetrics -Dhadoop.profile=2.0
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13418486" author="eclark" created="Thu, 19 Jul 2012 17:41:07 +0000"  >&lt;p&gt;For my opinion this removes most abstraction of the actual metrics2 implementation, which was something I liked about the first approach.  It would be possible for someone to implement their own metrics1 implementation with the earlier approach.  This approach metrics2 code and classes are seeping into the hbase-server code. In addition there are a lot more moving parts and a lot more code than is needed if more code is moved into the compat modules.  I&apos;ll post a patch that shows what I&apos;m thinking in a little bit.&lt;/p&gt;</comment>
                            <comment id="13418493" author="alexb" created="Thu, 19 Jul 2012 17:49:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;For my opinion this removes most abstraction of the actual metrics2 implementation, which was something I liked about the first approach. It would be possible for someone to implement their own metrics1 implementation with the earlier approach.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right. I guess the Q is do we really need this extra abstraction?&lt;br/&gt;
At the same time, by adding extra abstraction hadoop-compat with hadoop1/2-compat modules in this case turn into smth like metrics-api and metrics-impl modules. I.e. not just &quot;shim over hadoop classes&quot;. Which may be OK, I don&apos;t know.&lt;/p&gt;</comment>
                            <comment id="13418496" author="zhihyu@ebaysf.com" created="Thu, 19 Jul 2012 17:52:10 +0000"  >&lt;p&gt;Looking at MasterMetrics2, should it live in org.apache.hadoop.hbase.master.metrics2 package ?&lt;/p&gt;

&lt;p&gt;Should we introduce config param such that HMaster.metrics / HMaster.myMetrics can be switched off at runtime ?&lt;/p&gt;</comment>
                            <comment id="13418505" author="alexb" created="Thu, 19 Jul 2012 17:57:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;Looking at MasterMetrics2, should it live in org.apache.hadoop.hbase.master.metrics2 package ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should we introduce config param such that HMaster.metrics / HMaster.myMetrics can be switched off at runtime ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Do you think we might be OK with exposing two nodes in JMX when old metrics are not removed yet?&lt;/p&gt;</comment>
                            <comment id="13418513" author="zhihyu@ebaysf.com" created="Thu, 19 Jul 2012 18:05:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;OK with exposing two nodes in JMX&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes.&lt;br/&gt;
I was thinking either of the two metrics systems can be switched off.&lt;/p&gt;</comment>
                            <comment id="13418517" author="eclark" created="Thu, 19 Jul 2012 18:08:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;At the same time, by adding extra abstraction hadoop-compat with hadoop1/2-compat modules in this case turn into smth like metrics-api and metrics-impl modules. I.e. not just &quot;shim over hadoop classes&quot;. Which may be OK, I don&apos;t know.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes.  That&apos;s what I was thinking. That&apos;s also why one of the work items is to start using guice to inject dependencies.  However I am hoping that more than just metrics will be abstracted over.  Right now we have issues with compiling for hadoop1 and running with hadoop2.  I&apos;m hoping that can be solved in the same way that we&apos;ve solved metrics2 issues.&lt;/p&gt;

&lt;p&gt;As things are modularized it gives us an opportunity make things more abstracted and maybe make it so that hbase&apos;s usage of hadoop is fully pluggable.  This would make testing things easier and it could allow us to have other storage engines. (obviously that&apos;s a long way away and might not ever be realized, however just trying means that things become more testable.)&lt;/p&gt;</comment>
                            <comment id="13418518" author="alexb" created="Thu, 19 Jul 2012 18:10:05 +0000"  >&lt;p&gt;Aha, sorry, misread.&lt;br/&gt;
Can we do that with hadoop-metrics(2).conf? Not sure. Will look at it&lt;/p&gt;</comment>
                            <comment id="13418578" author="alexb" created="Thu, 19 Jul 2012 18:59:47 +0000"  >&lt;p&gt;@Elliott&lt;/p&gt;

&lt;p&gt;Abstracting over third-party implementations makes perfect sense to me. With what you said in ming I guess it leads us to defining a good, more or less generic metrics-api in compat module, so that one can implement it with any tools they want (not just with metrics2 of hadoop) and at the same time it is usable in hbase code. This API might consist of basic interfaces/abstractions e.g. like in hadoop metrics2 framework: MetricsSystem, MetricsSource, MetricsSink, MetricInfo (Metric &amp;amp; MetricTag), metric types (counter/gauge), etc. If we want to define such an API, it will look closer to this patch though... Otherwise specific classes like: ReplicationMetricsSource doesn&apos;t look like generic API. &lt;/p&gt;

&lt;p&gt;Or if we don&apos;t need it to be generic, this doesn&apos;t sound like &lt;b&gt;extracting&lt;/b&gt; API for metrics system to implement, but rather &lt;b&gt;separating&lt;/b&gt; &quot;hbase-metrics&quot; module/component, i.e. just putting all classes which implement metrics (incl. specific for HBase) into separate module (with an api in compat jar). I.e. &lt;b&gt;splitting&lt;/b&gt; hbase codebase as opposed to reducing dependency on third party implementation of a tool (like metrics) &lt;em&gt;used&lt;/em&gt; by hbase.&lt;/p&gt;

&lt;p&gt;Perhaps, &lt;b&gt;splitting&lt;/b&gt; hbase codebase (not abstracting from third-party dependencies) is what really you intend?&lt;/p&gt;</comment>
                            <comment id="13418648" author="eclark" created="Thu, 19 Jul 2012 20:32:54 +0000"  >&lt;p&gt;The way I&apos;m approaching it is hbase-hadoop1-compat and hbase-hadoop2-compat will be the implementation of things that are backed by hadoop 1 and 2 respectively.  By putting things backed by the different versions into different modules we&apos;ll see where things are tied together; and get to untangle them.&lt;/p&gt;

&lt;p&gt;Perhaps MasterMetricsSource and ReplicationMetricsSource was the wrong naming as it ties them too closely to the o.a.h.metrics2.MetricsSource.  Maybe something like &lt;/p&gt;
{Master|Replication|Base}
&lt;p&gt;MetricsExporter? would give the correct impression that it exposes metrics to the underlying metrics system.&lt;/p&gt;</comment>
                            <comment id="13418822" author="eclark" created="Fri, 20 Jul 2012 00:11:36 +0000"  >&lt;p&gt;Here&apos;s a working implementation of master with metrics2.  It includes some tests but not a whole lot.  I plan to include a lot more once I am able to inject test metricsources (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6407&quot; title=&quot;Investigate moving to DI (guice) framework for plugin arch.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6407&quot;&gt;&lt;del&gt;HBASE-6407&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;It doesn&apos;t include histograms of the split size (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6409&quot; title=&quot;Create histogram class for metrics 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6409&quot;&gt;&lt;del&gt;HBASE-6409&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13418891" author="alexb" created="Fri, 20 Jul 2012 02:49:02 +0000"  >&lt;p&gt;Glanced over your patch. I like this way better (over initial patch at 4050): exposing the real interface of MetricsSource (in this case master metrics). I.e. with methods defines, not empty + hashmap.&lt;/p&gt;

&lt;p&gt;1. What do you think about having MasterMetricsFactory  available through compat module (created by CompatibilitySingletonFactory?) which is creating MetricsSource, like this:&lt;/p&gt;

&lt;p&gt;interface MasterMetricsFactory &lt;/p&gt;
{
  MasterMetricsSource create(final String name, final String sessionId);
}

&lt;p&gt;This way we could pass parameters and control creation of metrics source.&lt;/p&gt;

&lt;p&gt;2. Independent on the above: how about removing BaseMetricsSource interface from compat as we don&apos;t really need it with explicit definition of metrics in sources? This way current BaseMetricsSourceImpl could be renamed to MetricsRegistry and used via composition (as a field) in metrics sources instead of realization. Thus, creating &amp;amp; initializing of the sources which might be different for each could stay in metrics source implementation itself. Including deciding on using JvmMetricsSource (I assume not every source should create it), etc. &lt;br/&gt;
This way they would look as normal metricsSources from hadoop codebase, just that they will use hbase&apos;s MetricsRegistry which allows metrics removals.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;


</comment>
                            <comment id="13418898" author="alexb" created="Fri, 20 Jul 2012 03:09:06 +0000"  >&lt;p&gt;Looks like you reassigned the task, so I should probably not touch the patch to avoid intersection, right?&lt;/p&gt;

&lt;p&gt;Was going to add actual metrics tests (which test metrics values changes in addition to testing factories/classes loading) and perhaps apply the 2nd point above, if it makes sense to you.&lt;/p&gt;</comment>
                            <comment id="13418923" author="eclark" created="Fri, 20 Jul 2012 05:11:14 +0000"  >&lt;p&gt;Sorry didn&apos;t mean to re-assign.  I must have done that when submitting to hadoop qa.  Sorry I didn&apos;t mean to step on any toes.&lt;/p&gt;

&lt;p&gt;I agree that a metrics factory or something like it could be very useful.  However like I said above I was hoping to take a crack using guice to do most of the factory stuff.  However maybe until I get that up it would be useful.&lt;/p&gt;

&lt;p&gt;On #2 I don&apos;t think removing them interface completely is really the way to go since both the replication metrics and the region server metrics are mostly dynamic metrics; ie they aren&apos;t pre-created like the master metrics. I think it still makes sense to have a source that&apos;s mostly focused on those map based metrics.&lt;/p&gt;</comment>
                            <comment id="13418968" author="hadoopqa" created="Fri, 20 Jul 2012 06:46:30 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12537268/HBASE-6411-0.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12537268/HBASE-6411-0.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 16 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.security.access.TestZKPermissionsWatcher&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2418//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13419375" author="alexb" created="Fri, 20 Jul 2012 17:36:29 +0000"  >&lt;p&gt;Adjusted Elliott&apos;s patch.&lt;/p&gt;

&lt;p&gt;Added example unit-test for MasterMetrics that verifies metrics value change. Had to create MetricsAsserts shim in test sources in compat modules.&lt;/p&gt;

&lt;p&gt;Please let me know what you think.&lt;/p&gt;

&lt;p&gt;Will try to extract maps in BaseMetricsSourceImpl(s) into separate class and add support for MetricTags. I guess we agreed on that previously.&lt;/p&gt;</comment>
                            <comment id="13419399" author="eclark" created="Fri, 20 Jul 2012 18:05:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;Will try to extract maps in BaseMetricsSourceImpl(s) into separate class and add support for MetricTags. I guess we agreed on that previously.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Thanks.  That sounds great.&lt;/p&gt;</comment>
                            <comment id="13419411" author="hadoopqa" created="Fri, 20 Jul 2012 18:24:04 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12537375/HBASE-6411-1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12537375/HBASE-6411-1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 39 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause mvn compile goal to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestFromClientSide&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestAssignmentManager&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2422//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2422//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2422//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2422//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13421145" author="zhihyu@ebaysf.com" created="Tue, 24 Jul 2012 03:30:38 +0000"  >&lt;p&gt;For TestMasterMetrics:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void startCluster() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception{
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Normally such method is annotated with @Before&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    mxBean = CompatibilitySingletonFactory.getInstance(MBeanSource.class).register(&lt;span class=&quot;code-quote&quot;&gt;&quot;hbase&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;HMaster,sub=MXBean&quot;&lt;/span&gt;, mxBeanInfo);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above line is longer than 100 characters.&lt;/p&gt;

&lt;p&gt;If TestMasterMetrics is placed in master.metrics package, the following method can be package-private:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; unit-test usage
&lt;/span&gt;+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; MasterMetricsSource getMetricsSource() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class MetricsAssertsImpl &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; MetricsAsserts {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please add javadoc for the above class.&lt;/p&gt;</comment>
                            <comment id="13421478" author="alexb" created="Tue, 24 Jul 2012 15:29:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;Normally such method is annotated with @Before&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right. I actually got this idea not to place it in @Before from one of the existing tests. The benefit is that you can place in the test class other tests that does not require cluster startup. Otherwise (if cluster startup is in @Before) it will be always started. Does it make sense to you?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If TestMasterMetrics is placed in master.metrics package, the following method can be package-private:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right. Again, I think by example, placed it in master package. It also accesses package-private getter from HMaster. So in any case we&apos;ll need to make this or that one you mentioned public. As we are likely to manipulate HMaster a lot in this unit-test, I think it makes more sense to leave test class in master package.&lt;/p&gt;

&lt;p&gt;Fixed other things.&lt;/p&gt;

&lt;p&gt;Also extracted MetricsRegistry implementation. And this made me thinking about the following. It might makes sense to have different registries: StaticMetricsRegistry and DynamicMetricsRegistry. The latter one allows dynamically adding/removing metrics. This way where it is not needed StaticMetricsRegistry can be used and its implementation will be more efficient (no need for it to be thread-safe). Thoughts?&lt;/p&gt;

&lt;p&gt;Had to give different name than MetricsRegistry to the one I added, since I had to put it into hadoop.metrics2.lib package.&lt;/p&gt;

&lt;p&gt;Btw, Q to Elliott about the initial patch: I see you changed the existing &quot;old&quot; MasterMetrics, but I think we were discussing somewhere that we need to keep it for some time. Am I missing smth?&lt;/p&gt;</comment>
                            <comment id="13421480" author="alexb" created="Tue, 24 Jul 2012 15:32:52 +0000"  >&lt;p&gt;Attached patch as per comment above.&lt;/p&gt;

&lt;p&gt;Plan to refactor BaseMetricsSource &amp;amp; Impl, if there are no objections:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;metrics source initialization should be extracted as it is unique for every source (e.g. not everyone probably should use JvmMetrics, plus one (MasterMetrics) may want to pass extra params, like servername/sessionId)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13421515" author="hadoopqa" created="Tue, 24 Jul 2012 16:25:32 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12537701/HBASE-6411-2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12537701/HBASE-6411-2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 45 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause mvn compile goal to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestSplitLogManager&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2432//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2432//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2432//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2432//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13421534" author="zhihyu@ebaysf.com" created="Tue, 24 Jul 2012 16:56:22 +0000"  >&lt;p&gt;@Alex:&lt;br/&gt;
I read your arguments @ 24/Jul/12 15:29&lt;/p&gt;

&lt;p&gt;Since DynamicMetricsRegistry (in hbase-hadoop1-compat) is to be replaced by org.apache.hadoop.metrics2.lib.MetricsRegistry in the future, it should be annotated with @InterfaceStability.Evolving&lt;br/&gt;
The same class in hbase-hadoop2-compat is correctly annotated.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; LinkedHashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, MetricsTag&amp;gt; tagsMap =
+      &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, MetricsTag&amp;gt;();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Do we need to consider concurrency for the above map ?&lt;br/&gt;
For incr():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      }
+      &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (m &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; MetricMutableCounter&amp;lt;?&amp;gt;) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Style comment: the keyword else should be on the same line as the preceding }&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MetricsException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Unsupported incr() &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; metric &quot;&lt;/span&gt;+ name);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Including the String form of MetricMutable (m) would reveal more.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (factory != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+      metricsMap.put(name, factory.newMetric(name));
+      incr(name, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The last line above results in a recursive call. I would suggest storing the new metric in MetricMutable m to remove the recursive call.&lt;br/&gt;
Similar comment for the case of factory != null in decr().&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MetricsException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Metric &quot;&lt;/span&gt;+ name +&lt;span class=&quot;code-quote&quot;&gt;&quot; doesn&apos;t exist&quot;&lt;/span&gt;);
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In the above case name would be null. Exception message should be clearer.&lt;/p&gt;

&lt;p&gt;Please put future patches on review board.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13421552" author="eclark" created="Tue, 24 Jul 2012 17:16:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;Plan to refactor BaseMetricsSource &amp;amp; Impl, if there are no objections&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We shouldn&apos;t care about dynamic/static metrics registry.  They both do the same things.  Right now we have that dichotomy and using it is a giant pain.  I would vote strongly against that.  Stack and I discussed long ago how having both makes it very hard to add dynamic metrics after the fact and how users should not need to know when somethings are dynamic metrics and others are static.  So it&apos;s best to have them together.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;. not everyone probably should use JvmMetrics&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s only done once.  We do always want to have jvm metrics, and it&apos;s better to have them there than to put that init into the base classes.  So far HBase has put way too much knowledge of metrics into the base HRegion/HRegionServer/HMaster classes.  Putting it in an init of the sources separates this&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MetricsException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Unsupported incr() &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; metric &quot;&lt;/span&gt;+ name);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MetricsException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Unsupported add(value) &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; metric &quot;&lt;/span&gt;+ name);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Throwing code in metrics code is a big part of the stuff I was trying to avoid.  Since we don&apos;t consider metrics exceptions fatal it leads to having to wrap things in giant try catches.  These exceptions are not something that a user would ever need to know about so we shouldn&apos;t throw them.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  /**
+   * Increment a metric by name.
+   * @param name  of the metric
+   */
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void incr(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name) {
+    incr(name, mf);
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;increment shouldn&apos;t be on the registry. The registry is there to create and hold metrics.  Others are there to manipulate them.  We want the registry to be functionally close to what&apos;s in org.apache.hadoop.metrics2 so that if they ever add a remove function then we can use that registry wholesale.&lt;/p&gt;


&lt;p&gt;Since you&apos;ve moved the metrics creation out of the source, it&apos;s possible that more then one thread could be using it and everything will need to be done using concurrent hash maps.&lt;/p&gt;</comment>
                            <comment id="13421566" author="zhihyu@ebaysf.com" created="Tue, 24 Jul 2012 17:35:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;increment shouldn&apos;t be on the registry. The registry is there to create and hold metrics.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Looking at MetricsRegistry source code in metrics2.lib of hadoop 1.0, I do see the following method:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void incr(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It would be nice to voice concern in a HADOOP JIRA so that it is heard by more developers.&lt;/p&gt;</comment>
                            <comment id="13421595" author="alexb" created="Tue, 24 Jul 2012 18:04:49 +0000"  >&lt;p&gt;Thanks for the comments guys!&lt;/p&gt;

&lt;p&gt;@Ted:&lt;/p&gt;

&lt;p&gt;Re concurrency, see below. Other nits: this is the code copied from hadoop metrics2. The only lines added are removeMetric() method and after it (3 methods total). Other code is unchanged (as we probably don&apos;t want to change it, see below also).&lt;/p&gt;

&lt;p&gt;@Elliott:&lt;/p&gt;

&lt;p&gt;RE having one for dynamic and static: understood. Makes sense.&lt;/p&gt;

&lt;p&gt;By refactoring I didn&apos;t mean to create two registries, but only extract MetricsSource initialization. Ok, let&apos;s leave it as is.&lt;/p&gt;

&lt;p&gt;Re exceptions: OK, agreed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;increment shouldn&apos;t be on the registry. The registry is there to create and hold metrics.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree, I haven&apos;t added it. It is from hadoop&apos;s code, as Ted Yu mentioned. I.e. I have same thoughts about doing exactly this:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We want the registry to be functionally close to what&apos;s in org.apache.hadoop.metrics2 so that if they ever add a remove function then we can use that registry wholesale.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;On:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Since you&apos;ve moved the metrics creation out of the source, it&apos;s possible that more then one thread could be using it and everything will need to be done using concurrent hash maps.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There&apos;s no access to the registry from outside the BaseMetricsSourceImpl class, so I don&apos;t see how extracting changes things. In the MetricsRegistry impl that I added you can see that concurrent maps are used to hold metrics. Didn&apos;t think that tags will be created a lot, but rather in initialization methods once, so haven&apos;t changed to using concurrent map for it.&lt;br/&gt;
At the same time I see that access to maps in hadoop code (and hence the one I copied) is synchronized (didn&apos;t notice that, sorry). So it looks like we either need to make added methods to be synchronized, or use concurrent collections. If we do want to change &lt;em&gt;minimally&lt;/em&gt; existing hadoop code (for the reasons we said above) it makes sense to just make these methods  use those sync internal methods when adding metrics and such.&lt;/p&gt;

&lt;p&gt;Thanx again for the comments!&lt;/p&gt;</comment>
                            <comment id="13421600" author="alexb" created="Tue, 24 Jul 2012 18:11:16 +0000"  >&lt;p&gt;Some more words on incr() in registry. This may actually be OK. Or rather &quot;not that big a deal&quot;. I.e. to me this interface that we have:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;public interface BaseMetricsSource {
  public void setGauge(String gaugeName, long value);
  public void incGauge(String gaugeName, long delta);
  public void decGauge(String gaugeName, long delta);
  public void removeGauge(String key);
  public void incCounters(String counterName, long delta);
  public void removeCounter(String key);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;looks like &quot;registry description&quot;: smth which holds metrics (allows to add/remove them by name) and provides read/write access to them &lt;em&gt;by name&lt;/em&gt; (if one doesn&apos;t want to deal with the specific classes/implementations of those metrics). I.e. seems not that bad.&lt;/p&gt;

&lt;p&gt;That is why I suggested we replace this class with the registry in the first place. But OK to leave it.&lt;/p&gt;</comment>
                            <comment id="13421659" author="eclark" created="Tue, 24 Jul 2012 19:05:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;There&apos;s no access to the registry from outside the BaseMetricsSourceImpl class, so I don&apos;t see how extracting changes things. In the MetricsRegistry impl that I added you can see that concurrent maps are used to hold metrics. Didn&apos;t think that tags will be created a lot, but rather in initialization methods once, so haven&apos;t changed to using concurrent map for it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The only usage before was through a guaranteed singleton that was only used on a single thread at a time (The master rpc thread or the replication thread).  Once there&apos;s the possibility that a registry can be shared other places we need to guard against concurrent access.  I would vote using concurrent hash maps.  That&apos;s usually my preferred way beacuse it&apos;s faster if there is a lot of contention.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I agree, I haven&apos;t added it. It is from hadoop&apos;s code, as Ted Yu mentioned. I.e. I have same thoughts about doing exactly this:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Awesome.  we&apos;re on the same page then.  Too bad it&apos;s already in shipped hadoop code.  Seems like a design flaw on their part.  Oh well.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;That is why I suggested we replace this class with the registry in the first place.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;When I started part of my purpose was to do the clean up so that the interfaces, used by classes in hbase-server, are not in any way tied to metrics2.  I want to modularize things and make most of hbase&apos;s use of hadoop actually pluggable.&lt;/p&gt;</comment>
                            <comment id="13421683" author="eclark" created="Tue, 24 Jul 2012 19:23:36 +0000"  >&lt;p&gt;I like the generic increment even if we both think it&apos;s in the wrong location.  Maybe we should file a new hbase jira to make the BaseMetricsSource have a generic increment and decrement only.  Then if we try and do a set on something that was created as a counter it can be &quot;promoted&quot; to a gauge.  Thoughts ?&lt;/p&gt;</comment>
                            <comment id="13421703" author="eclark" created="Tue, 24 Jul 2012 19:45:04 +0000"  >&lt;p&gt;Sorry for all the comment spam.&lt;/p&gt;

&lt;p&gt;Looks like I left ReplicationMetricsSourceFactory in by accident.  Can you remove it whenever you post your next version.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13421732" author="alexb" created="Tue, 24 Jul 2012 20:21:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;The only usage before was through a guaranteed singleton that was only used on a single thread at a time (The master rpc thread or the replication thread)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this remained the same. MetricsRegistry is used in same MetricSources as private field, so it is shared only if the source is shared. Anyhow, using concurrent hash map makes more sense to me too, if we are ok with a bit more of modifying &quot;copied&quot; MetricsRegistry code.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Maybe we should file a new hbase jira to make the BaseMetricsSource have a generic increment and decrement only&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think it existing methods are OK. We need also at list remove() method as well.&lt;/p&gt;

&lt;p&gt;I think we are mostly on the same page! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;One thing that catches my eye:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;in MasterMetrics we have metrics values (counters &amp;amp; gauges) managed by the class in hadoop-compat module, which exposes interface for working with them (MasterMetricsSource)&lt;/li&gt;
	&lt;li&gt;while with ReplicationSink(Source)Metrics we have different pattern: metrics values managed in the classes created in hbase-server code and ReplicationSourceMetrics interface is empty (provides just generic methods from BaseMetricsSource)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;by &quot;managed&quot; I mean defines interface for creating/changing values.&lt;/p&gt;


&lt;p&gt;Should we probably unify that? E.g. push managing &quot;sink.ageOfLastAppliedOp&quot; metrics and such to xxxMetricsSource?&lt;/p&gt;</comment>
                            <comment id="13423339" author="alexb" created="Thu, 26 Jul 2012 18:36:12 +0000"  >&lt;p&gt;Tried to fix things we mentioned about. Created review request: &lt;a href=&quot;https://reviews.apache.org/r/6161&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/6161&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Removed those incr() methods we were willing to (it turned out that they were only in hadoop 1.0 metrics2 lib, and were removed in hadoop 2.0, so we are ok removing it and no need to ask hadoop guys about it).&lt;/p&gt;

&lt;p&gt;Switched to using concurrent collections inside metric registries. It turned out that &quot;synchronize-guarded&quot; methods where only in hadoop 2.0, not in hadoop 1.0. In both cases replaced them with working with concurrent collections.&lt;/p&gt;

&lt;p&gt;Tried to remove throwing MetricsExceptions, but there are still cases where I throw them. Not sure what is the best way to avoid this in those particular cases. Advice is much appreciated.&lt;/p&gt;

&lt;p&gt;Two Qs remained:&lt;br/&gt;
1. what about old MasterMetrics? Are we sure we want to replace it? I though we want to leave it for some time&lt;br/&gt;
2. my Q from the comment above related to metricsSources interfaces - not critical, can be addressed later, I guess.&lt;/p&gt;</comment>
                            <comment id="13423348" author="eclark" created="Thu, 26 Jul 2012 18:46:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;what about old MasterMetrics? Are we sure we want to replace it? I though we want to leave it for some time&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The class is still there so we&apos;re not breaking compat.  All that we&apos;re doing is changing which metrics system exports to file/jmx/ganglia.  From the conversations I&apos;ve had it seems like people are fine with changing to the new metrics system as the backing as long as we don&apos;t remove classes that could be used externally.  eg. we&apos;ll have to leave the current implementation of MetricsHistorgram as it&apos;s possible that someone is using it outside of hbase internal code.&lt;/p&gt;

&lt;p&gt;(That&apos;s all just my understanding and if someone disagree&apos;s that&apos;s fine too.)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should we probably unify that? E.g. push managing &quot;sink.ageOfLastAppliedOp&quot; metrics and such to xxxMetricsSource?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Stuffing dealing with the replication source uses dynamic metric names so it relies on the more general interface and since we wanted those metrics under the same node in jmx, I think the way we have it is fine for now; or at least good enough to leave it as is until after your patch gets applied.&lt;/p&gt;</comment>
                            <comment id="13423373" author="alexb" created="Thu, 26 Jul 2012 19:27:20 +0000"  >&lt;p&gt;Here&apos;s why I&apos;m concerned about rewriting existing MasterMetrics class: as a part of &quot;revising metrics&quot; we are likely to change existing metrics (incl. names that we expose, esp. dependent on old stuff like MetricsTimeVaryingRate). Though we now just copied in the initial patch all metrics from old master metrics, they may change. That&apos;s why in my first version I just added &quot;empty placeholder&quot; class with single &quot;example&quot; metric (cluster_requests), so that after we revise existing we can fill in more (and they are likely to be different from the old Master/RegionServer metrics). I guess this was discussed a bit in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4050&quot; title=&quot;Update HBase metrics framework to metrics2 framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4050&quot;&gt;&lt;del&gt;HBASE-4050&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
May be that is more true for RegionServer metrics though where we have a lot of such old metrics types we don&apos;t want to support anymore. But I guess the approach should be the same w.r.t. &quot;overwrite or add new metrics class&quot;.&lt;/p&gt;

&lt;p&gt;Thanx for your answers!&lt;/p&gt;</comment>
                            <comment id="13423399" author="eclark" created="Thu, 26 Jul 2012 19:52:59 +0000"  >&lt;p&gt;You&apos;re 100% correct we are for sure going to add, remove, and rename metrics; these changes are potentially a big deal.  However, 0.96 is the singularity release so now&apos;s the time.  Lars wanted a big metrics clean up so we might as well get started on that while moving over to metrics 2.&lt;/p&gt;</comment>
                            <comment id="13423406" author="eclark" created="Thu, 26 Jul 2012 20:02:24 +0000"  >&lt;p&gt;Thanks so much for all your work on the patch.  Functionally it looks great.  I&apos;m +1&lt;/p&gt;</comment>
                            <comment id="13423512" author="hadoopqa" created="Thu, 26 Jul 2012 22:30:15 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12538040/HBASE-6411-3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12538040/HBASE-6411-3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 45 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause mvn compile goal to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestServerCustomProtocol&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2442//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2442//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2442//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2442//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13423567" author="zhihyu@ebaysf.com" created="Thu, 26 Jul 2012 23:54:03 +0000"  >&lt;p&gt;Put up some comments on review board.&lt;/p&gt;</comment>
                            <comment id="13425844" author="alexb" created="Tue, 31 Jul 2012 15:22:46 +0000"  >&lt;p&gt;Uploaded newer diff on review board. Fixed nits.&lt;/p&gt;

&lt;p&gt;Note: after trunk update had to remove&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  public RegionsInTransitionInfo[] getRegionsInTransition()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;method from master.metrics.MBean. I believe that this metric is now exposed via metrics, not via this bean. Please correct me if I&apos;m wrong.&lt;/p&gt;

&lt;p&gt;There are two Qs for Elliott inside, pasting here for convenience:&lt;/p&gt;

&lt;p&gt;1.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;/hbase-server/src/main/java/org/apache/hadoop/hbase/master/metrics/MXBean.java (Diff revision 1)
18	
package org.apache.hadoop.hbase.master.metrics;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ted:&lt;br/&gt;
Should this class be in org.apache.hadoop.hbase.master namespace ?&lt;/p&gt;

&lt;p&gt;Alex Baranau:&lt;br/&gt;
Hm, I guess we now have two pairs of classes: MXBean and MXBeanImpl in org.apache.hadoop.hbase.master and in org.apache.hadoop.hbase.master.metrics. Not sure what was intended by Elliott here. I assume that he forgot to remove one of them (in org.apache.hadoop.hbase.master? why to move it in metrics package then?)&lt;/p&gt;

&lt;p&gt;Elliott, could you provide some insight here please?&lt;/p&gt;

&lt;p&gt;2. &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;/hbase-server/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetrics.java (Diff revision 1)
63 Deleted:	
  final MetricsHistogram splitTime = new MetricsHistogram(&quot;splitTime&quot;, registry);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We don&apos;t maintain such metrics now ?&lt;/p&gt;

&lt;p&gt;Alex Baranau&lt;br/&gt;
I believe Elliott is working on new such metrics (different issue) and this is why he removed it. Elliott?&lt;/p&gt;</comment>
                            <comment id="13425943" author="eclark" created="Tue, 31 Jul 2012 17:30:45 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Hm, I guess we now have two pairs of classes: MXBean and MXBeanImpl in org.apache.hadoop.hbase.master and in org.apache.hadoop.hbase.master.metrics. Not sure what was intended by Elliott here. I assume that he forgot to remove one of them (in org.apache.hadoop.hbase.master? why to move it in metrics package then?)&lt;/p&gt;

&lt;p&gt;Elliott, could you provide some insight here please?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yea, I must have just missed deleting them.  The move was just because those classes are only about metrics and not used anywhere else.  So might as well clean up as we go.  They were interface private so moving shouldn&apos;t be an issue.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I believe Elliott is working on new such metrics (different issue) and this is why he removed it. Elliott?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Correct.  One of the sub-tasks of 4050 is creating a metrics2 histogram(Actually there will be two but that&apos;s out of scope) and using histograms where ever it&apos;s useful.&lt;/p&gt;</comment>
                            <comment id="13425954" author="zhihyu@ebaysf.com" created="Tue, 31 Jul 2012 17:41:49 +0000"  >&lt;p&gt;Since MXBean.java is in master.metrics, should TestMXBean.java be in the same package ?&lt;/p&gt;</comment>
                            <comment id="13426002" author="alexb" created="Tue, 31 Jul 2012 18:34:42 +0000"  >&lt;p&gt;Cleaned up redundant MXBean and MXBeanImpl. Looks like all comments and Qs are resolved.&lt;/p&gt;</comment>
                            <comment id="13426005" author="alexb" created="Tue, 31 Jul 2012 18:39:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;Since MXBean.java is in master.metrics, should TestMXBean.java be in the same package ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;d say it may be the same situation as with TestMasterMetrics. It&apos;s just easier to place it here as test relies on access to master internal state heavily.&lt;/p&gt;</comment>
                            <comment id="13426066" author="hadoopqa" created="Tue, 31 Jul 2012 19:54:23 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12538593/HBASE-6411-4_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12538593/HBASE-6411-4_2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 45 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause mvn compile goal to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2463//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2463//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2463//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2463//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13426070" author="alexb" created="Tue, 31 Jul 2012 19:58:57 +0000"  >&lt;p&gt;Not sure if I should do smth about these:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;-1 javac. The patch appears to cause mvn compile goal to fail.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-1 findbugs. The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Please let me know.&lt;/p&gt;</comment>
                            <comment id="13426742" author="zhihyu@ebaysf.com" created="Wed, 1 Aug 2012 16:43:58 +0000"  >&lt;p&gt;For findbugs:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-remote-resources-plugin:1.1:process (&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;) on project hbase-hadoop1-compat: Failed to resolve dependencies &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; one or more projects in the reactor. Reason: Missing:
[ERROR] ----------
[ERROR] 1) org.apache.hbase:hbase-hadoop-compat:test-jar:tests:0.95-SNAPSHOT
[ERROR] 
[ERROR] Try downloading the file manually from the project website.
[ERROR] 
[ERROR] Then, install it using the command:
[ERROR] mvn install:install-file -DgroupId=org.apache.hbase -DartifactId=hbase-hadoop-compat -Dversion=0.95-SNAPSHOT -Dclassifier=tests -Dpackaging=test-jar -Dfile=/path/to/file
[ERROR] 
[ERROR] Alternatively, &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; you host your own repository you can deploy the file there:
[ERROR] mvn deploy:deploy-file -DgroupId=org.apache.hbase -DartifactId=hbase-hadoop-compat -Dversion=0.95-SNAPSHOT -Dclassifier=tests -Dpackaging=test-jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]
[ERROR] 
[ERROR] Path to dependency:
[ERROR] 1) org.apache.hbase:hbase-hadoop1-compat:jar:0.95-SNAPSHOT
[ERROR] 2) org.apache.hbase:hbase-hadoop-compat:test-jar:tests:0.95-SNAPSHOT
[ERROR] 
[ERROR] ----------
[ERROR] 1 required artifact is missing.
[ERROR] 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13427386" author="alexb" created="Thu, 2 Aug 2012 15:30:22 +0000"  >&lt;p&gt;As we discussed a bit with Ted, to move forward, let&apos;s exclude integration with hadoop&apos;s metrics2 unit-testing tools form this jira issue as it is somewhat problematic. Briefly we ran into this bug with maven: &lt;a href=&quot;http://jira.codehaus.org/browse/MRRESOURCES-53&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jira.codehaus.org/browse/MRRESOURCES-53&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I created separate task for that: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6501&quot; title=&quot;Integrate with unit-testing tools of hadoop&amp;#39;s metrics2 framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6501&quot;&gt;&lt;del&gt;HBASE-6501&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13427388" author="alexb" created="Thu, 2 Aug 2012 15:31:14 +0000"  >&lt;p&gt;Attached patch without integration with unit-testing tools of hadoop&apos;s metrics2&lt;/p&gt;</comment>
                            <comment id="13427419" author="hadoopqa" created="Thu, 2 Aug 2012 16:24:03 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12538917/HBASE-6411-5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12538917/HBASE-6411-5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 27 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 10 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestFromClientSideWithCoprocessor&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2482//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13427451" author="zhihyu@ebaysf.com" created="Thu, 2 Aug 2012 17:00:28 +0000"  >&lt;p&gt;I ran TestFromClientSideWithCoprocessor#testPoolBehavior and it passed locally.&lt;/p&gt;

&lt;p&gt;Integrated to trunk.&lt;/p&gt;

&lt;p&gt;Thanks for the patch, Alex.&lt;/p&gt;

&lt;p&gt;Thanks for the review, Elliot.&lt;/p&gt;</comment>
                            <comment id="13427498" author="hudson" created="Thu, 2 Aug 2012 18:06:40 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3190 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3190/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3190/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6411&quot; title=&quot;Move Master Metrics to metrics 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6411&quot;&gt;&lt;del&gt;HBASE-6411&lt;/del&gt;&lt;/a&gt; Move Master Metrics to metrics 2 (Alex Baranau) (Revision 1368598)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/conf/hadoop-metrics2.properties&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/pom.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/CompatibilitySingletonFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/metrics&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetricsSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/MBeanSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSourceFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/test/java/org/apache/hadoop/hbase/master&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/test/java/org/apache/hadoop/hbase/master/metrics&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/test/java/org/apache/hadoop/hbase/master/metrics/MasterMetricsSourceFactoryTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/test/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSourceFactoryTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/master&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/master/metrics&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetricsSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/metrics/BaseMetricsSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/metrics/MBeanSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/metrics2&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/metrics2/lib&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/resources/META-INF/services/org.apache.hadoop.hbase.master.metrics.MasterMetricsSource&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/resources/META-INF/services/org.apache.hadoop.hbase.metrics.MBeanSource&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/test/java/org/apache/hadoop/hbase/master&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/test/java/org/apache/hadoop/hbase/master/metrics&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/test/java/org/apache/hadoop/hbase/master/metrics/MasterMetricsSourceImplTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/test/java/org/apache/hadoop/hbase/metrics/BaseMetricsSourceImplTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/test/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSourceImplTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/master&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/master/metrics&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetricsSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/metrics/BaseMetricsSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/metrics/MBeanSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/HBaseMetricsFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/resources/META-INF/services/org.apache.hadoop.hbase.master.metrics.MasterMetricsSource&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/resources/META-INF/services/org.apache.hadoop.hbase.metrics.MBeanSource&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/master&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/master/metrics&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/master/metrics/MasterMetricsSourceImplTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/metrics/BaseMetricsSourceImplTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSourceImplTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MXBean.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MXBeanImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/metrics/MXBean.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/metrics/MXBeanImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationSinkMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationSourceMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMXBean.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13427528" author="alexb" created="Thu, 2 Aug 2012 19:00:02 +0000"  >&lt;p&gt;Marking as fixed since patch was committed&lt;/p&gt;</comment>
                            <comment id="13427744" author="hudson" created="Thu, 2 Aug 2012 23:51:46 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #119 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/119/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/119/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6411&quot; title=&quot;Move Master Metrics to metrics 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6411&quot;&gt;&lt;del&gt;HBASE-6411&lt;/del&gt;&lt;/a&gt; Move Master Metrics to metrics 2 (Alex Baranau) (Revision 1368598)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/conf/hadoop-metrics2.properties&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/pom.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/CompatibilitySingletonFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/metrics&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetricsSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/MBeanSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSourceFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/test/java/org/apache/hadoop/hbase/master&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/test/java/org/apache/hadoop/hbase/master/metrics&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/test/java/org/apache/hadoop/hbase/master/metrics/MasterMetricsSourceFactoryTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/test/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSourceFactoryTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/master&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/master/metrics&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetricsSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/metrics/BaseMetricsSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/metrics/MBeanSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/metrics2&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/metrics2/lib&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/resources/META-INF/services/org.apache.hadoop.hbase.master.metrics.MasterMetricsSource&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/resources/META-INF/services/org.apache.hadoop.hbase.metrics.MBeanSource&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/test/java/org/apache/hadoop/hbase/master&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/test/java/org/apache/hadoop/hbase/master/metrics&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/test/java/org/apache/hadoop/hbase/master/metrics/MasterMetricsSourceImplTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/test/java/org/apache/hadoop/hbase/metrics/BaseMetricsSourceImplTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/test/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSourceImplTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/master&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/master/metrics&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetricsSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/metrics/BaseMetricsSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/metrics/MBeanSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/HBaseMetricsFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/resources/META-INF/services/org.apache.hadoop.hbase.master.metrics.MasterMetricsSource&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/resources/META-INF/services/org.apache.hadoop.hbase.metrics.MBeanSource&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/master&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/master/metrics&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/master/metrics/MasterMetricsSourceImplTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/metrics/BaseMetricsSourceImplTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationMetricsSourceImplTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MXBean.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MXBeanImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/metrics/MXBean.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/metrics/MXBeanImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationSinkMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/metrics/ReplicationSourceMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMXBean.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13775530" author="stack" created="Mon, 23 Sep 2013 18:31:42 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12537268" name="HBASE-6411-0.patch" size="70923" author="eclark" created="Fri, 20 Jul 2012 00:11:36 +0000"/>
                            <attachment id="12537375" name="HBASE-6411-1.patch" size="72904" author="alexb" created="Fri, 20 Jul 2012 17:36:29 +0000"/>
                            <attachment id="12537701" name="HBASE-6411-2.patch" size="119744" author="alexb" created="Tue, 24 Jul 2012 15:32:52 +0000"/>
                            <attachment id="12538040" name="HBASE-6411-3.patch" size="121139" author="alexb" created="Thu, 26 Jul 2012 18:36:12 +0000"/>
                            <attachment id="12538561" name="HBASE-6411-4.patch" size="121922" author="alexb" created="Tue, 31 Jul 2012 15:22:46 +0000"/>
                            <attachment id="12538593" name="HBASE-6411-4_2.patch" size="129840" author="alexb" created="Tue, 31 Jul 2012 18:34:42 +0000"/>
                            <attachment id="12538917" name="HBASE-6411-5.patch" size="113500" author="alexb" created="Thu, 2 Aug 2012 15:31:14 +0000"/>
                            <attachment id="12537188" name="HBASE-6411_concept.patch" size="68126" author="alexb" created="Thu, 19 Jul 2012 15:15:04 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 19 Jul 2012 15:15:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>249460</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0aemv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>58644</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Master metrics now use Hadoop&amp;#39;s metrics2 framework</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>