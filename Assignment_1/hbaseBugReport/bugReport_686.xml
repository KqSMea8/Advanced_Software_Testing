<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:46:34 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-686/HBASE-686.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-686] MemcacheScanner didn&apos;t return the first row(if it exists), cause HScannerInterface&apos;s output incorrect</title>
                <link>https://issues.apache.org/jira/browse/HBASE-686</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;HTable.obtainScanner methods should return the start row if it exists, although HTable&apos;s javadoc didn&apos;t clearly desc. but i found the result of htable scanners sometimes contain the start row, sometimes not.&lt;/p&gt;

&lt;p&gt;after more testing and code review, i found it should be a bug in HStore.Memcache.MemcacheScanner. in the constructor it set this.currentRow = firstRow, but when doing next(), there&apos;s a this.currentRow = getNextRow(this.currentRow) before fetch result.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12398270">HBASE-686</key>
            <summary>MemcacheScanner didn&apos;t return the first row(if it exists), cause HScannerInterface&apos;s output incorrect</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jimk">Jim Kellerman</assignee>
                                    <reporter username="ln@webcate.net">Luo Ning</reporter>
                        <labels>
                    </labels>
                <created>Sat, 14 Jun 2008 08:12:48 +0000</created>
                <updated>Fri, 22 Aug 2008 21:13:17 +0000</updated>
                            <resolved>Tue, 17 Jun 2008 20:52:04 +0000</resolved>
                                    <version>0.1.2</version>
                    <version>0.2.0</version>
                                    <fixVersion>0.1.3</fixVersion>
                    <fixVersion>0.2.0</fixVersion>
                                        <due></due>
                            <votes>3</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12605048" author="ln@webcate.net" created="Sat, 14 Jun 2008 08:17:16 +0000"  >&lt;p&gt;a testcase for this issue, i add this to TestHMemcache.java for reproduce and validating my patch.&lt;br/&gt;
    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Test memcache scanner scanning cached rows, see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-686&quot; title=&quot;MemcacheScanner didn&amp;#39;t return the first row(if it exists), cause HScannerInterface&amp;#39;s output incorrect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-686&quot;&gt;&lt;del&gt;HBASE-686&lt;/del&gt;&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;@throws IOException&lt;br/&gt;
     */&lt;br/&gt;
    public void testScanner_686() throws IOException&lt;br/&gt;
    {&lt;br/&gt;
        addRows(this.hmemcache);&lt;br/&gt;
        long timestamp = System.currentTimeMillis();&lt;br/&gt;
        Text[] cols = new Text&lt;span class=&quot;error&quot;&gt;&amp;#91;COLUMNS_COUNT * ROW_COUNT&amp;#93;&lt;/span&gt;;&lt;br/&gt;
        for (int i = 0; i &amp;lt; ROW_COUNT; i++)
        &lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {            for (int ii = 0; ii &amp;lt; COLUMNS_COUNT; ii++)            {
                cols[(ii + (i * COLUMNS_COUNT))] = getColumnName(i, ii);
            }        }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;        //starting from each row, validate results should contain the starting row&lt;br/&gt;
        for (int startRowId = 0; startRowId &amp;lt; ROW_COUNT; startRowId++)&lt;br/&gt;
        {&lt;br/&gt;
            HInternalScannerInterface scanner =&lt;br/&gt;
                    this.hmemcache.getScanner(timestamp, cols&lt;br/&gt;
                            , new Text(getRowName(startRowId)));&lt;br/&gt;
            HStoreKey key = new HStoreKey();&lt;br/&gt;
            TreeMap&amp;lt;Text, byte[]&amp;gt; results = new TreeMap&amp;lt;Text, byte[]&amp;gt;();&lt;br/&gt;
            for (int i = 0; scanner.next(key, results); i++)&lt;/p&gt;
            &lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {                int rowId = startRowId + i;                assertTrue(&amp;quot;Row name&amp;quot;,                        key.toString().startsWith(getRowName(rowId).toString()));                assertEquals(&amp;quot;Count of columns&amp;quot;, COLUMNS_COUNT,                        results.size());                TreeMap&amp;lt;Text, byte[]&amp;gt; row = new TreeMap&amp;lt;Text, byte[]&amp;gt;();                for (Map.Entry&amp;lt;Text, byte[]&amp;gt; e }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;        }&lt;br/&gt;
    }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12605049" author="ln@webcate.net" created="Sat, 14 Jun 2008 08:19:09 +0000"  >&lt;p&gt;my patch, due to my local source changed for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-684&quot; title=&quot;unnecessary iteration in HMemcache.internalGet? got much better reading performance after break it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-684&quot;&gt;&lt;del&gt;HBASE-684&lt;/del&gt;&lt;/a&gt;, the line number is incorrect i think.&lt;/p&gt;

&lt;p&gt;Index: src/java/org/apache/hadoop/hbase/HStore.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; src/java/org/apache/hadoop/hbase/HStore.java	Sat Jun 14 15:46:26 CST 2008&lt;br/&gt;
+++ src/java/org/apache/hadoop/hbase/HStore.java	Sat Jun 14 15:46:26 CST 2008&lt;br/&gt;
@@ -631,8 +631,7 @@&lt;br/&gt;
        if (results.size() &amp;gt; 0) &lt;/p&gt;
{
          results.clear();
        }
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;while (results.size() &amp;lt;= 0 &amp;amp;&amp;amp;&lt;/li&gt;
	&lt;li&gt;(this.currentRow = getNextRow(this.currentRow)) != null) {&lt;br/&gt;
+       while (results.size() &amp;lt;= 0 &amp;amp;&amp;amp; this.currentRow != null) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {          if (deletes.size() &amp;gt; 0) {
            deletes.clear();
          }@@ -661,6 +660,7 @@            }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;            results.put(column, c);&lt;br/&gt;
          }&lt;br/&gt;
+         this.currentRow = getNextRow(this.currentRow);&lt;br/&gt;
        }&lt;br/&gt;
        return results.size() &amp;gt; 0;&lt;br/&gt;
      }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12605411" author="jimk" created="Mon, 16 Jun 2008 21:09:25 +0000"  >&lt;p&gt;LN,&lt;/p&gt;

&lt;p&gt;Could you please post your testcase and patch as attachments to this Jira. Jira has mangled your input to the extent that it is difficult to make a working test program or patch out of either of your posts.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12605415" author="acure" created="Mon, 16 Jun 2008 21:23:45 +0000"  >&lt;p&gt;    My test case :&lt;/p&gt;

&lt;p&gt;        you have to create table &apos;aaa&apos; with a column family &apos;xxx&apos;&lt;/p&gt;


&lt;p&gt;		HTable htable = new HTable(&quot;aaa&quot;);&lt;br/&gt;
		  BatchUpdate batch = new BatchUpdate(&quot;123456&quot;.getBytes());&lt;br/&gt;
		  batch.put(&quot;xxx&quot;, &quot;some value&quot;.getBytes());&lt;br/&gt;
		  htable.commit(batch);&lt;/p&gt;

&lt;p&gt;		  byte[][] cols = new byte[][]&lt;/p&gt;
{ &quot;xxx&quot;.getBytes() }
&lt;p&gt;;		  		   &lt;br/&gt;
		  RowResult row = htable.getRow(&quot;123456&quot;.getBytes(), cols, new Date().getTime());&lt;br/&gt;
		  System.out.println(&quot;there is a row = &quot; + row.get(&quot;xxx&quot;.getBytes()).toString());&lt;/p&gt;

&lt;p&gt;		  cols = new byte[][]&lt;/p&gt;
{ &quot;xxx:&quot;.getBytes() }
&lt;p&gt;;		  &lt;br/&gt;
		  Scanner scanner = htable.getScanner(cols);&lt;/p&gt;

&lt;p&gt;		  if (scanner.iterator().hasNext()) &lt;/p&gt;
{
			  System.out.println(&quot; GOOD !!!! - scanner returns some rows &quot;);
		  }
&lt;p&gt; else &lt;/p&gt;
{
			  System.out.println(&quot; WRONG !!!! - scanner didn&apos;t found any rows&quot;);
		  }
&lt;p&gt;		  &lt;/p&gt;
</comment>
                            <comment id="12605418" author="jimk" created="Mon, 16 Jun 2008 21:34:13 +0000"  >&lt;p&gt;This patch is listed as affecting hbase-0.1.2, but the APIs you are using only exist in trunk (0.2.0) is this issue for 0.1.2 or for 0.2.0?&lt;/p&gt;</comment>
                            <comment id="12605472" author="jimk" created="Tue, 17 Jun 2008 01:09:39 +0000"  >&lt;p&gt;From the comments in the issue, this is the best test case I could come up with. It passes tests on hbase-0.1 branch&lt;/p&gt;</comment>
                            <comment id="12605474" author="jimk" created="Tue, 17 Jun 2008 01:14:49 +0000"  >&lt;p&gt;This is a updated version of the test to work with trunk. Again, it passes with no issues.&lt;/p&gt;</comment>
                            <comment id="12605477" author="jimk" created="Tue, 17 Jun 2008 01:22:17 +0000"  >&lt;p&gt;This issue cannot be replicated on either the 0.1 branch or trunk. If there are explicit test cases attached which can reproduce the issue, please re-open with both the versions affected and please attach a test case that demonstrates that the test case fails for that release.&lt;/p&gt;</comment>
                            <comment id="12605500" author="ln@webcate.net" created="Tue, 17 Jun 2008 05:33:26 +0000"  >&lt;p&gt;here is a modified memcache test cases(0.1.2 release) and my patch, i have add a new case &apos;testScanner_686&apos;.  i also have a small ant task definition to run this case seprately if u need.&lt;/p&gt;</comment>
                            <comment id="12605502" author="ln@webcate.net" created="Tue, 17 Jun 2008 05:56:21 +0000"  >&lt;p&gt;i can&apos;t understand why this issue resolved as CR in 9 hours(before i wake up&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. i HAVE post my testcase when opening this issue, with clearly piont out it is part of TestHMemcache.java, which is the 0.1.2 test source about memcache. &lt;/p&gt;

&lt;p&gt;and, the mistake in the source should be wrong iteration control, as i commented in the issue description.&lt;/p&gt;

&lt;p&gt;junit result here:&lt;br/&gt;
Testsuite: org.apache.hadoop.hbase.TestHMemcache&lt;br/&gt;
Tests run: 7, Failures: 1, Errors: 0, Time elapsed: 0.22 sec&lt;/p&gt;

&lt;p&gt;Testcase: testSnapshotting took 0.16 sec&lt;br/&gt;
Testcase: testGetFull took 0.01 sec&lt;br/&gt;
Testcase: testGetNextRow took 0.01 sec&lt;br/&gt;
Testcase: testGetClosest took 0 sec&lt;br/&gt;
Testcase: testScanner_686 took 0.01 sec&lt;br/&gt;
	FAILED&lt;br/&gt;
Row name&lt;br/&gt;
junit.framework.AssertionFailedError: Row name&lt;br/&gt;
	at org.apache.hadoop.hbase.TestHMemcache.testScanner_686(TestHMemcache.java:195)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;/p&gt;

&lt;p&gt;Testcase: testScanner took 0.01 sec&lt;br/&gt;
Testcase: testGetRowKeyAtOrBefore took 0.02 sec&lt;/p&gt;</comment>
                            <comment id="12605573" author="acure" created="Tue, 17 Jun 2008 12:37:37 +0000"  >&lt;p&gt;it&apos;s test case for ver 0.2.0 dev  from trunk. - sources inside the jar package&lt;/p&gt;

&lt;p&gt;  this is class with main method which do : &lt;br/&gt;
  1) creates table - if it doesn&apos;t exist&lt;br/&gt;
  2) create BatchUpdate with a &quot;rowKey&quot; and commit into a table&lt;br/&gt;
  3) make - getRow with &quot;rowKey&quot; - and shows on console data in this row&lt;br/&gt;
  4) make - getScanner on whole table  and shows all rows - and counts how many rows scanner returns&lt;/p&gt;

&lt;p&gt;it returns :&lt;/p&gt;

&lt;p&gt;table : testTable exists. &lt;br/&gt;
 data inserted &lt;br/&gt;
-------------------------------------&lt;br/&gt;
 getRow : &lt;br/&gt;
  isEmpty = false&lt;br/&gt;
  row key = 0000&lt;br/&gt;
  col val = testvalue&lt;br/&gt;
-------------------------------------&lt;br/&gt;
 getScanner : &lt;br/&gt;
scanner find : 0 rows in this table.&lt;br/&gt;
 done. &lt;/p&gt;

&lt;p&gt; what does it mean ?&lt;br/&gt;
getRow can gets data by rowKey - this data exists in table, but the scanner doesn&apos;t see this row - and return 0 rows.&lt;/p&gt;

&lt;p&gt;   Antoni&lt;/p&gt;</comment>
                            <comment id="12605663" author="jimk" created="Tue, 17 Jun 2008 17:14:23 +0000"  >&lt;p&gt;Mea culpa on closing this issue too early.&lt;/p&gt;

&lt;p&gt;The patch and test case provided do indeed demonstrate and fix the problem. All other regression tests passed as well with the patch applied. Committed to 0.1 branch. Thanks for the contribution LN!&lt;/p&gt;</comment>
                            <comment id="12605687" author="krzysiek" created="Tue, 17 Jun 2008 18:33:08 +0000"  >&lt;p&gt;It also affects 0.2 from trunk as test case provided by Antonii (in scanner-test-for.ver.0.2.0.dev.jar) shows&lt;/p&gt;</comment>
                            <comment id="12605718" author="jimk" created="Tue, 17 Jun 2008 20:52:04 +0000"  >&lt;p&gt;Committed to both 0.1 branch and trunk. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12384105" name="HBASE-686.patch" size="832" author="ln@webcate.net" created="Tue, 17 Jun 2008 05:33:26 +0000"/>
                            <attachment id="12384097" name="HBASE_686.java" size="2425" author="jimk" created="Tue, 17 Jun 2008 01:14:49 +0000"/>
                            <attachment id="12384096" name="HBASE_686.java" size="2147" author="jimk" created="Tue, 17 Jun 2008 01:09:39 +0000"/>
                            <attachment id="12384104" name="TestHMemcache.java" size="10245" author="ln@webcate.net" created="Tue, 17 Jun 2008 05:33:26 +0000"/>
                            <attachment id="12384123" name="scanner-test-for.ver.0.2.0.dev.jar.jar" size="3020" author="acure" created="Tue, 17 Jun 2008 12:37:36 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 16 Jun 2008 21:09:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25334</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 27 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h8tr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98692</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>