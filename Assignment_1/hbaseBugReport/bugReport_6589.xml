<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:38:05 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6589/HBASE-6589.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6589] RegionServer can&apos;t load class for dynamically loaded coprocessors with self defined class</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6589</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;When using coprocessor with custom classes like LongColumnInterpreter(mine is MultiColumnSchema), the coprocessor can not work for hot deploy, if the custom classes do not deploy in the regionserver&apos;s classpath. Although the self-defined class is deployed in the regions&apos; classpath through hdfs jar.&lt;/p&gt;

&lt;p&gt;The exception threw at the regionserver&apos;s log:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2012-08-15 16:24:24,403 ERROR org.apache.hadoop.hbase.io.HbaseObjectWritable: Error in readFields
java.io.IOException: Can&apos;t find class com.taobao.hbase.coprocessor.MultiColumnSchema
        at org.apache.hadoop.hbase.io.HbaseObjectWritable.readObject(HbaseObjectWritable.java:674)
        at org.apache.hadoop.hbase.client.coprocessor.Exec.readFields(Exec.java:114)
        at org.apache.hadoop.hbase.io.HbaseObjectWritable.readObject(HbaseObjectWritable.java:682)
        at org.apache.hadoop.hbase.ipc.Invocation.readFields(Invocation.java:125)
        at org.apache.hadoop.hbase.ipc.HBaseServer$Connection.processData(HBaseServer.java:1292)
        at org.apache.hadoop.hbase.ipc.HBaseServer$Connection.readAndProcess(HBaseServer.java:1207)
        at org.apache.hadoop.hbase.ipc.HBaseServer$Listener.doRead(HBaseServer.java:735)
        at org.apache.hadoop.hbase.ipc.HBaseServer$Listener$Reader.doRunLoop(HBaseServer.java:524)
        at org.apache.hadoop.hbase.ipc.HBaseServer$Listener$Reader.run(HBaseServer.java:499)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
Caused by: java.lang.ClassNotFoundException: com.taobao.hbase.coprocessor.MultiColumnSchema
        at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt;.loadClass(&lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt;.java:306)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt;.loadClass(&lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt;.java:247)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.forName0(Native Method)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.forName(&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.java:247)
        at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:943)
        at org.apache.hadoop.hbase.io.HbaseObjectWritable.getClassByName(HbaseObjectWritable.java:784)
        at org.apache.hadoop.hbase.io.HbaseObjectWritable.readObject(HbaseObjectWritable.java:671)
        ... 11 more

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;It is similar as &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4946&quot; title=&quot;HTable.coprocessorExec (and possibly coprocessorProxy) does not work with dynamically loaded coprocessors (from hdfs or local system), because the RPC system tries to deserialize an unknown class. &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4946&quot;&gt;&lt;del&gt;HBASE-4946&lt;/del&gt;&lt;/a&gt;, but I do not know how to solve this bug.&lt;br/&gt;
If add these custom class to the RegionServer&apos;s classloader may fix it, but it is conflicted with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6308&quot; title=&quot;Coprocessors should be loaded in a custom ClassLoader to prevent dependency conflicts with HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6308&quot;&gt;&lt;del&gt;HBASE-6308&lt;/del&gt;&lt;/a&gt; to prevent dependency conflicts.&lt;br/&gt;
Does anyone have some idea?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12603592">HBASE-6589</key>
            <summary>RegionServer can&apos;t load class for dynamically loaded coprocessors with self defined class</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="xingshi">ShiXing</reporter>
                        <labels>
                    </labels>
                <created>Wed, 15 Aug 2012 14:44:31 +0000</created>
                <updated>Mon, 24 Nov 2014 07:51:57 +0000</updated>
                                                                            <component>Coprocessors</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13437567" author="v.himanshu" created="Sun, 19 Aug 2012 19:21:03 +0000"  >&lt;p&gt;Are you using &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6308&quot; title=&quot;Coprocessors should be loaded in a custom ClassLoader to prevent dependency conflicts with HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6308&quot;&gt;&lt;del&gt;HBASE-6308&lt;/del&gt;&lt;/a&gt;?  If yes, then MultiColumnSchema should be loaded by CoprocessorClassLoader. This error is when you try to invoke the CP, or the loading itself?&lt;/p&gt;</comment>
                            <comment id="13437680" author="xingshi" created="Mon, 20 Aug 2012 06:39:47 +0000"  >&lt;p&gt;It is when I try to invoke the CP. Because the MultiColumnSchema is not recognized by the rs.&lt;/p&gt;</comment>
                            <comment id="13666165" author="vkocubinsky" created="Fri, 24 May 2013 09:42:40 +0000"  >&lt;p&gt;Did you find any solution for your problem?&lt;/p&gt;

&lt;p&gt;I have the same problem. I need to deploy different version our system on the same cluster(cdh 4.2.0). But I got the exception with the same stack trace when deploy my library on hadoop file system. &lt;/p&gt;

&lt;p&gt;I have coprocessor&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; HReportsServerProtocol &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; CoprocessorProtocol {

	HReportSegment runHReport(HQuery query);

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And in my case HbaseObjectWritable can not find class HQuery. &lt;/p&gt;


</comment>
                            <comment id="14222755" author="haoch" created="Mon, 24 Nov 2014 07:45:43 +0000"  >&lt;p&gt;I found that the problem is not about the coprocessor framework but the RPC system, because If adding below static code in the coprocessor implementation, we found that it should load successfully, which means: these customized classes were loaded in Coprocoessor but not loaded by HbaseObjectWritable. As to the reason is that coprocessor classes are loaded by custom CoprocessorClassLoader instead of the region server&apos;s default ClassLoader, so custom classes using in coprocessor are only loaded for coprocessor but not for RPC system, and RPC system is just like gateway before calling Coprocessor instance. &lt;/p&gt;

&lt;p&gt;One possible solution is that you may serialize the customized class into any type that HbaseObjectWritable recognize like byte[] in client, pass to coprocessor, and then deserializewith customized class  in coprocessor side.&lt;/p&gt;

&lt;p&gt;static{&lt;br/&gt;
       try &lt;/p&gt;
{
	      LOG.info(&quot;Loading class CustomClass&quot;);
              HReportsServerProtocol .class.getClassLoader().loadClass(&quot;CustomClass &quot;);
              LOG.info(&quot;Loaded class CustomClass&quot;);
        }
&lt;p&gt; catch (ClassNotFoundException e) &lt;/p&gt;
{
	       LOG.error(&quot;Failed to load class: CustomClass&quot;, e);
	}
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;// == log output == &lt;br/&gt;
// INFO Loading class CustomClass&lt;br/&gt;
// INFO Loaded class CustomClass&lt;/p&gt;</comment>
                            <comment id="14222760" author="haoch" created="Mon, 24 Nov 2014 07:51:57 +0000"  >&lt;p&gt;Otherwise, may need to deploy to jars into region servers&apos; classpath and restart. In fact there is same problem for custom filter: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1936&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1936&lt;/a&gt; which resolved in hbase-0.98.0.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 19 Aug 2012 19:21:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>241724</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 3 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02bmf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11484</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>