<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:33:52 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6109/HBASE-6109.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6109] Improve RIT performances during assignment on large clusters</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6109</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The main points in this patch are:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;lowering the number of copy of the RIT list&lt;/li&gt;
	&lt;li&gt;lowering the number of synchronization&lt;/li&gt;
	&lt;li&gt;synchronizing on a region rather than on everything&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;It also contains:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;some fixes around the RIT notification: the list was sometimes modified without a corresponding &apos;notify&apos;.&lt;/li&gt;
	&lt;li&gt;some tests flakiness correction, actually unrelated to this patch.&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12558216">HBASE-6109</key>
            <summary>Improve RIT performances during assignment on large clusters</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nkeywal">Nicolas Liochon</assignee>
                                    <reporter username="nkeywal">Nicolas Liochon</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 May 2012 23:55:51 +0000</created>
                <updated>Mon, 23 Sep 2013 18:30:16 +0000</updated>
                            <resolved>Wed, 20 Jun 2012 10:15:59 +0000</resolved>
                                    <version>0.95.2</version>
                                    <fixVersion>0.95.0</fixVersion>
                                    <component>master</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13283841" author="zhihyu@ebaysf.com" created="Sat, 26 May 2012 00:12:13 +0000"  >&lt;p&gt;Looking forward to your patch, N.&lt;/p&gt;</comment>
                            <comment id="13283858" author="nkeywal" created="Sat, 26 May 2012 00:51:52 +0000"  >&lt;p&gt;Here it is. I haven&apos;t merged it with trunk, as I don&apos;t know yet the impact of the modules and I expect many commits the next few days &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                            <comment id="13284565" author="stack" created="Mon, 28 May 2012 22:44:00 +0000"  >&lt;p&gt;@nkeywal Trunk should have settled now.  Can you redo your patch so its against the hbase root dir?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;+  &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Locker locker = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Locker();&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Is this a generic locker?  Should it be named for what its locking?&lt;/p&gt;

&lt;p&gt;NotifiableConcurrentSkipListMap needs class comment.  It seems like its for use in a very particular circumstance.  It needs explaining.&lt;/p&gt;

&lt;p&gt;Does it need to be public?  Only used in master package?   Perhaps make it package private then?&lt;/p&gt;

&lt;p&gt;internalList is a bad name for the internal delegate instance.  Is &apos;delegatee&apos; a better name than internalList?&lt;/p&gt;

&lt;p&gt;For sure this is ok?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.master.isStopped() &amp;amp;&amp;amp;
+      &lt;span class=&quot;code-comment&quot;&gt;// no lock concurrent access ok: sequentially consistent
&lt;/span&gt;+      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransition.containsKey(hri.getEncodedName())) {
+      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransition.waitForListUpdate();
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We checked rit contains a name but then in a separate statement we do the waitForListUpdate?  What if the region we are looking for is removed between the check and the waitForListUpdate invocation?&lt;/p&gt;

&lt;p&gt;Will this log be annoying?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;regionState=&quot;&lt;/span&gt; + regionState +
+        &lt;span class=&quot;code-quote&quot;&gt;&quot; failoverProcessedRegions.containsKey(encodedRegionName)=&quot;&lt;/span&gt; + failoverProcessedRegions.containsKey(encodedRegionName));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This too... &apos;+      LOG.info(&quot;et=&quot; + et);&apos;?&lt;/p&gt;

&lt;p&gt;.. and this &apos;+        LOG.info(&quot;regionInfo.isMetaTable()=&quot; + regionInfo.isMetaTable());&apos;?&lt;/p&gt;

&lt;p&gt;Add the region removed to the log message here? +      LOG.debug(&quot;Removed region from reopening regions because it was closed&quot;);?&lt;/p&gt;

&lt;p&gt;Sometimes your indents are off.  For example:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (regionsInTransition) {
+      &lt;span class=&quot;code-comment&quot;&gt;// We need a lock here as we&apos;re going to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; a put later and we don&apos;t want multiple state
&lt;/span&gt;+      &lt;span class=&quot;code-comment&quot;&gt;//  creation
&lt;/span&gt;+    Reentran....
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are gratuitious reformattings of code.&lt;/p&gt;

&lt;p&gt;Is this true:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-comment&quot;&gt;// no lock concurrency ok: there is a write when we update the timestamp but it&apos;s ok
&lt;/span&gt;+      &lt;span class=&quot;code-comment&quot;&gt;//  as its the only one updating &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; field
&lt;/span&gt;+      RegionState rs = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransition.get(e.getKey());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;How is it enforced?&lt;/p&gt;

&lt;p&gt;Check these...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

+    }&lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {



 or here


+      }&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;needs space after curly parens.  Sometimes you do it and sometimes you don&apos;t.&lt;/p&gt;



&lt;p&gt;I reviewed half of the patch.&lt;/p&gt;

&lt;p&gt;It looks great.  Nice stuff N.&lt;/p&gt;</comment>
                            <comment id="13284573" author="zhihyu@ebaysf.com" created="Mon, 28 May 2012 23:26:05 +0000"  >&lt;p&gt;It would be nice to have a test for NotifiableConcurrentSkipListMap.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void waitListUpdate(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; timeout) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException {
+    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (internalList){
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Since internalList is actually a Map, name the above method waitForUpdate() ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void clear() {
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!internalList.isEmpty()) {
+      &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (internalList) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is it possible that internalList becomes empty after entering the synchronized block ?&lt;/p&gt;

&lt;p&gt;For Locker,&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+ * An utility class to manage a set of lock. Each lock is identified by a &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; who serves
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;the above should read &apos;A utility class to manage a set of locks. Each lock is identified by a String which serves&apos;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class Locker {
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Log LOG = LogFactory.getLog(AssignmentManager.class);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It should be Locker.class&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; NB_CONCURRENT_LOCK = 1000;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The constant should be named NB_CONCURRENT_LOCKS.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * Return a lock &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the given key. The lock is already lockek.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The last word should be locked.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; message = &lt;span class=&quot;code-quote&quot;&gt;&quot;Can&apos;t release the lock &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &quot;&lt;/span&gt; + key;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It would be nice to add more about reason.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (regionsInTransition) {
-      nodes.removeAll(regionsInTransition.keySet());
-    }
+    &lt;span class=&quot;code-comment&quot;&gt;// no lock concurrent access ok: some threads may be adding/removing items but its java-valid
&lt;/span&gt;+    nodes.removeAll(regionsInTransition.keySet());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Looking at batchRemove() of &lt;a href=&quot;http://www.docjar.com/html/api/java/util/ArrayList.java.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.docjar.com/html/api/java/util/ArrayList.java.html&lt;/a&gt; around line 669, I don&apos;t see synchronization.&lt;br/&gt;
Meaning, existence check of elements from nodes in regionsInTransition.keySet() may not be deterministic.&lt;/p&gt;</comment>
                            <comment id="13284843" author="nkeywal" created="Tue, 29 May 2012 14:19:27 +0000"  >&lt;p&gt;@stack&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Is this a generic locker? Should it be named for what its locking?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Renamed to LockerByString. If you have a better name...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;NotifiableConcurrentSkipListMap needs class comment. It seems like its for use in a very particular circumstance. It needs explaining.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;done.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Does it need to be public? Only used in master package? Perhaps make it package private then?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The issue was:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  public NotifiableConcurrentSkipListMap&amp;lt;String, RegionState&amp;gt; getRegionsInTransition() {
    return regionsInTransition;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But it&apos;s used in tests only, so I can actually make both package protected. Done.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;internalList is a bad name for the internal delegate instance. Is &apos;delegatee&apos; a better name than internalList?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;done.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;We checked rit contains a name but then in a separate statement we do the waitForListUpdate? What if the region we are looking for is removed between the check and the waitForListUpdate invocation?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Actually yes, it could happen. I added a timeout, so we will now check every 100ms.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;Will this log be annoying?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Removed. I added them while debugging.&lt;/p&gt;

&lt;p&gt;This one was already there however. I kept it.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  public void removeClosedRegion(HRegionInfo hri) {
    if (regionsToReopen.remove(hri.getEncodedName()) != null) {
      LOG.debug(&quot;Removed region from reopening regions because it was closed&quot;);
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;blockquote&gt;&lt;p&gt;Is this true / How is it enforced?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Oops, it not enforced (I don&apos;t know I could do it), but it&apos;s also not true: the update will set it as well. But it&apos;s not an issue as it&apos;s an atomic long. Comment updated.&lt;br/&gt;
It&apos;s btw tempting to:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;change the implementation of updateTimestampToNow to use a lazySet&lt;/li&gt;
	&lt;li&gt;get the timestamp only once before looping on the region set.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I didn&apos;t do it in my patch, but I think it should be done. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;needs space after curly parens. Sometimes you do it and sometimes you don&apos;t.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done&lt;/p&gt;



&lt;p&gt;&amp;gt; @ted&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It would be nice to have a test for NotifiableConcurrentSkipListMap.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Will do for final release.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Since internalList is actually a Map, name the above method waitForUpdate() ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;the above should read &apos;A utility class to manage a set of locks. Each lock is identified by a String which serves&apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It should be Locker.class&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The constant should be named NB_CONCURRENT_LOCKS.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The last word should be locked.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It would be nice to add more about reason.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Looking at batchRemove() of &lt;a href=&quot;http://www.docjar.com/html/api/java/util/ArrayList.java.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.docjar.com/html/api/java/util/ArrayList.java.html&lt;/a&gt; around line 669, I don&apos;t see synchronization. Meaning, existence check of elements from nodes in regionsInTransition.keySet() may not be deterministic.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;After looking at the java api code, I don&apos;t think there is an issue here. The set we&apos;re using is documented as: &quot;The view&apos;s iterator is a &quot;weakly consistent&quot; iterator that will never throw ConcurrentModificationException, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.&quot;. So we won&apos;t have any java error. Then, if an element is added/removed to/from the RIT while we&apos;re doing the removeAll, it may be added/removed or not, but we&apos;re not less deterministic that we would be by adding a lock around the removeAll: the add/remove could be as well be done just before/after we take the lock, and we would not know it.&lt;/p&gt;



&lt;p&gt;I&apos;m currently checking how it works with split, then I will update it to the current trunk.&lt;/p&gt;</comment>
                            <comment id="13285229" author="stack" created="Tue, 29 May 2012 22:54:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;Renamed to LockerByString. If you have a better name...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;regionLocker?&lt;/p&gt;
</comment>
                            <comment id="13285640" author="hadoopqa" created="Wed, 30 May 2012 13:12:15 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12530195/6109.v19.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12530195/6109.v19.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 26 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2052//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2052//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2052//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2052//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13285671" author="nkeywal" created="Wed, 30 May 2012 14:03:57 +0000"  >&lt;p&gt;I think it&apos;s ok for a commit.&lt;br/&gt;
From the code I read, we should have the same behavior as before on split. I will write some parallel tests later on, but I would expect the same behavior as today at least. It may take time as I may encounter some flakiness on this path &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;br/&gt;
I don&apos;t have a test class for NotifiableConcurrentSkipListMap, this class is small so I don&apos;t think it&apos;s an issue right now. I will push one with the other tests I will write.&lt;/p&gt;</comment>
                            <comment id="13285779" author="zhihyu@ebaysf.com" created="Wed, 30 May 2012 16:10:58 +0000"  >&lt;p&gt;Patch v3 rebased on trunk.&lt;/p&gt;</comment>
                            <comment id="13285809" author="zhihyu@ebaysf.com" created="Wed, 30 May 2012 16:49:44 +0000"  >&lt;p&gt;Rename TestLocker class to TestKeyLocker ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-comment&quot;&gt;// It has no reason to be a lock shares with the other operations.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;shares with&apos; -&amp;gt; &apos;shared with&apos;&lt;/p&gt;

&lt;p&gt;Indentation in AssignmentManager.addToRITandCallClose() was off. It would be nice to correct the existing lines.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-comment&quot;&gt;// No lock concurrency: adding a share &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; here would not prevent to have two
&lt;/span&gt;+    &lt;span class=&quot;code-comment&quot;&gt;//  entries as we don&apos;t check &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the region is already there. This must be ensured by the
&lt;/span&gt;+    &lt;span class=&quot;code-comment&quot;&gt;//  method callers. todo nli: check&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;share synchronized&apos; -&amp;gt; &apos;synchronized&apos;. Remove the &apos;todo nli:&apos; at the end.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, RegionPlan&amp;gt; plans=&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, RegionPlan&amp;gt;();
+    Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, RegionPlan&amp;gt; plans=&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, RegionPlan&amp;gt;(regions.size());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Insert spaces around = sign.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; True &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; none of the regions in the set are in transition
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;are in&apos; -&amp;gt; &apos;is in&apos;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; NavigableMap&amp;lt;K, V&amp;gt; copyMap() {
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; delegatee.clone();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Why not call the method clone() ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void clear() {
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!delegatee.isEmpty()) {
+      &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (delegatee) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Suppose delegatee is empty upon entry to the above method, what if an entry is added after the isEmpty() check ?&lt;/p&gt;</comment>
                            <comment id="13285821" author="zhihyu@ebaysf.com" created="Wed, 30 May 2012 17:00:17 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-comment&quot;&gt;// A number of lock we want to easily support. It&apos;s not a maximum.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;A number&apos; -&amp;gt; &apos;The number&apos;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-comment&quot;&gt;// We need an atomic counter to manage the number of people using the lock and free it when
&lt;/span&gt;+  &lt;span class=&quot;code-comment&quot;&gt;//  it&apos;s equals to zero.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;number of people&apos; -&amp;gt; &apos;number of users&apos;&lt;br/&gt;
&apos;it&apos;s equals to zero.&apos; -&amp;gt; &apos;it&apos;s equal to zero.&apos;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; class RegionLock&amp;lt;K&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; ReentrantLock {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The outer class is generic. The inner class shouldn&apos;t mention Region.&lt;/p&gt;</comment>
                            <comment id="13285828" author="nkeywal" created="Wed, 30 May 2012 17:19:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;Rename TestLocker class to TestKeyLocker ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&apos;shares with&apos; -&amp;gt; &apos;shared with&apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Indentation in AssignmentManager.addToRITandCallClose() was off. It would be nice to correct the existing lines.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&apos;share synchronized&apos; -&amp;gt; &apos;synchronized&apos;. Remove the &apos;todo nli:&apos; at the end.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Insert spaces around = sign.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&apos;are in&apos; -&amp;gt; &apos;is in&apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why not call the method clone() ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We don&apos;t really want the NotifiableConcurrentSkipListMap to be cloneable: however, some functions want to work on a copy of the data structure, for reporting or test (with all the &apos;Map&apos; semantic), hence the internal clone.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Suppose delegatee is empty upon entry to the above method, what if an entry is added after the isEmpty() check ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It will be equivalent to adding it just after the clear.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&apos;A number&apos; -&amp;gt; &apos;The number&apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&apos;number of people&apos; -&amp;gt; &apos;number of users&apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&apos;it&apos;s equals to zero.&apos; -&amp;gt; &apos;it&apos;s equal to zero.&apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The outer class is generic. The inner class shouldn&apos;t mention Region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done&lt;/p&gt;</comment>
                            <comment id="13285840" author="zhihyu@ebaysf.com" created="Wed, 30 May 2012 17:35:39 +0000"  >&lt;p&gt;@N:&lt;br/&gt;
Thanks for the quick turn-around.&lt;/p&gt;</comment>
                            <comment id="13285876" author="hadoopqa" created="Wed, 30 May 2012 18:23:32 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12530237/6109.v21.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12530237/6109.v21.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 26 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestDrainingServer&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestAssignmentManager&lt;br/&gt;
                  org.apache.hadoop.hbase.security.access.TestZKPermissionsWatcher&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2056//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2056//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2056//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2056//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13285909" author="nkeywal" created="Wed, 30 May 2012 18:50:28 +0000"  >&lt;p&gt;I need to have a look at this one. org.apache.hadoop.hbase.master.TestAssignmentManager.testRegionInOpeningStateOnDeadRSWhileMasterFailover &lt;/p&gt;</comment>
                            <comment id="13285914" author="stack" created="Wed, 30 May 2012 18:52:33 +0000"  >&lt;p&gt;Thanks N.&lt;/p&gt;</comment>
                            <comment id="13286401" author="nkeywal" created="Thu, 31 May 2012 08:00:39 +0000"  >&lt;p&gt;testRegionInOpeningStateOnDeadRSWhileMasterFailover fails at this line:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  public void testRegionInOpeningStateOnDeadRSWhileMasterFailover() throws IOException,
      KeeperException, ServiceException, InterruptedException {
    AssignmentManagerWithExtrasForTesting am = setUpMockedAssignmentManager(this.server,
        this.serverManager);
    ZKAssign.createNodeOffline(this.watcher, REGIONINFO, SERVERNAME_A);   &amp;lt;============== FAILED HERE: KeeperErrorCode = NodeExists for /hbase/unassigned/5c7fe078551611acb0923a9ca0e1e1f4
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So it&apos;s more a test error. This node should be deleted in the after() clause of the previous, for whatever reason it was not or was recreated after the delete. Investigating...&lt;/p&gt;</comment>
                            <comment id="13286452" author="nkeywal" created="Thu, 31 May 2012 10:07:44 +0000"  >&lt;p&gt;Hopefully we&apos;re done &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
v23 contains the fix for the issue above (unrelated to my changes) + the merge with the trunk as of now... I&apos;ve executed locally 100 times TestAssignmentManager without getting any error.&lt;/p&gt;</comment>
                            <comment id="13286463" author="ram_krish" created="Thu, 31 May 2012 10:29:22 +0000"  >&lt;p&gt;@N&lt;br/&gt;
Minor nits.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/*
       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.watcher.close();
+      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+        &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(2000);
+      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
+      }  */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Some commented line is there. Just had a glance on the latest patch.  &lt;/p&gt;</comment>
                            <comment id="13286467" author="nkeywal" created="Thu, 31 May 2012 10:36:53 +0000"  >&lt;p&gt;@ram You&apos;re right, I forgot to remove my flakiness detector before doing the patch. Ok, I&apos;m good for a v24 then. I will do it after looking at the test results for the v23...&lt;/p&gt;</comment>
                            <comment id="13286503" author="hadoopqa" created="Thu, 31 May 2012 11:49:50 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12530368/6109.v23.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12530368/6109.v23.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 26 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithAbort&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplication&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2075//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2075//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2075//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2075//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13286505" author="nkeywal" created="Thu, 31 May 2012 11:56:03 +0000"  >&lt;p&gt;Locally everything is ok and these tests are known as flaky, so I think it&apos;s ok. v24 is the version with the comments in TestAssignement.&lt;/p&gt;</comment>
                            <comment id="13286532" author="hadoopqa" created="Thu, 31 May 2012 12:43:10 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12530378/6109.v24.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12530378/6109.v24.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 26 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestServerCustomProtocol&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2076//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2076//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2076//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2076//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13286544" author="nkeywal" created="Thu, 31 May 2012 12:56:25 +0000"  >&lt;p&gt;ok for commit imho.&lt;/p&gt;</comment>
                            <comment id="13286718" author="zhihyu@ebaysf.com" created="Thu, 31 May 2012 16:27:40 +0000"  >&lt;p&gt;In ZKUtil.java, the only change was:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Deleting node &quot;&lt;/span&gt;+node);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can I take this out at time of integration ?&lt;/p&gt;</comment>
                            <comment id="13286725" author="zhihyu@ebaysf.com" created="Thu, 31 May 2012 16:36:57 +0000"  >&lt;p&gt;Integrated to trunk.&lt;/p&gt;

&lt;p&gt;Thanks for the patch, N.&lt;/p&gt;

&lt;p&gt;Thanks for the review, Stack and Ram.&lt;/p&gt;</comment>
                            <comment id="13286788" author="hudson" created="Thu, 31 May 2012 18:05:49 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2966 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2966/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2966/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6109&quot; title=&quot;Improve RIT performances during assignment on large clusters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6109&quot;&gt;&lt;del&gt;HBASE-6109&lt;/del&gt;&lt;/a&gt; Improve RIT performances during assignment on large clusters (N Keywal) (Revision 1344802)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/AssignmentManagerStatusTmpl.jamon&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MXBeanImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterDumpServlet.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/NotifiableConcurrentSkipListMap.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/KeyLocker.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/TestDrainingServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHCM.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/Mocking.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestAssignmentManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterFailover.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterNoCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterStatusServlet.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestKeyLocker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13287037" author="hudson" created="Thu, 31 May 2012 23:44:54 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #35 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/35/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/35/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6109&quot; title=&quot;Improve RIT performances during assignment on large clusters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6109&quot;&gt;&lt;del&gt;HBASE-6109&lt;/del&gt;&lt;/a&gt; Improve RIT performances during assignment on large clusters (N Keywal) (Revision 1344802)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/AssignmentManagerStatusTmpl.jamon&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MXBeanImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterDumpServlet.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/NotifiableConcurrentSkipListMap.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/KeyLocker.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/TestDrainingServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHCM.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/Mocking.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestAssignmentManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterFailover.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterNoCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterStatusServlet.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestKeyLocker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13774882" author="stack" created="Mon, 23 Sep 2013 18:30:16 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12612338">HBASE-7007</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12551766">HBASE-5843</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12530195" name="6109.v19.patch" size="60340" author="nkeywal" created="Wed, 30 May 2012 12:22:05 +0000"/>
                            <attachment id="12530237" name="6109.v21.patch" size="60266" author="nkeywal" created="Wed, 30 May 2012 17:21:42 +0000"/>
                            <attachment id="12530368" name="6109.v23.patch" size="63015" author="nkeywal" created="Thu, 31 May 2012 10:05:10 +0000"/>
                            <attachment id="12530378" name="6109.v24.patch" size="62608" author="nkeywal" created="Thu, 31 May 2012 11:54:31 +0000"/>
                            <attachment id="12529827" name="6109.v7.patch" size="74507" author="nkeywal" created="Sat, 26 May 2012 00:49:32 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 26 May 2012 00:12:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>249462</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0aenb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>58646</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>