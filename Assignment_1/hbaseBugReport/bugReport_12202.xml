<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:30:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12202/HBASE-12202.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12202] Support DirectByteBuffer usage in HFileBlock</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12202</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description></description>
                <environment></environment>
        <key id="12746674">HBASE-12202</key>
            <summary>Support DirectByteBuffer usage in HFileBlock</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12724166">HBASE-11425</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="anoop.hbase">Anoop Sam John</assignee>
                                    <reporter username="anoop.hbase">Anoop Sam John</reporter>
                        <labels>
                    </labels>
                <created>Wed, 8 Oct 2014 09:49:24 +0000</created>
                <updated>Sat, 21 Feb 2015 23:45:12 +0000</updated>
                            <resolved>Sun, 26 Oct 2014 02:40:19 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>0.99.2</fixVersion>
                                    <component>regionserver</component>
                    <component>Scanners</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="14163492" author="anoop.hbase" created="Wed, 8 Oct 2014 13:44:45 +0000"  >&lt;p&gt;Trying to avoid calls to BB#array()  BB#arrayOffset().&lt;br/&gt;
Can give patch in a day or 2.&lt;/p&gt;</comment>
                            <comment id="14163625" author="stack" created="Wed, 8 Oct 2014 15:36:53 +0000"  >&lt;p&gt;Good one &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; I was looking in these parts these last few days.  I was trying to shoehorn in using the ByteBuffer API on DFSInputStream &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11710&quot; title=&quot;if offheap L2 blockcache, read from DFS into offheap and copy to blockcache without coming onheap&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11710&quot;&gt;HBASE-11710&lt;/a&gt; to try and see if speedup.  If we got data from DFS in ByteBuffers, we might be able to make use of the native checksummers (probably not directly, not w/o work &amp;#8211; checksumming is from 20--30% of CPU used in simple tests).  So, read into offheap BB and passing to checksummer offheap could be a win.  Would mean we&apos; need to change read to be ByteBuffer rather than byte [] -based.  Seemed like substantial change but we are doing a bit of ByteBuffer slinging already in here in HFileBlock? WDYT?&lt;/p&gt;</comment>
                            <comment id="14163826" author="ram_krish" created="Wed, 8 Oct 2014 17:31:31 +0000"  >&lt;p&gt;We discussed about this.  &lt;br/&gt;
Already we raised a JIRA to make BRs to be used in HFileBlock. But not sure if that is needed now.  If so we need to pursue that also. Should we try for BR?&lt;br/&gt;
Also the thought is that we may not convert entire read path starting from DFS client passed byte [] to be converted to ByteBuffer at the first stage. Only when the block moves to L2 cache from there start serving the reads from Offheap byte buffer. What do you think? Do you feel we can address from the DFSClient API itself?&lt;/p&gt;</comment>
                            <comment id="14163844" author="stack" created="Wed, 8 Oct 2014 17:45:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;Already we raised a JIRA to make BRs to be used in HFileBlock. But not sure if that is needed now.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Lets do some experiments, POC, to see what is best fit?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should we try for BR?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Lets draw out the pipeline.  Can mark where BR is better fit and ditto BB (BR does not preclude BB, right?)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also the thought is that we may not convert entire read path starting from DFS client passed byte [] to be converted to ByteBuffer at the first stage. Only when the block moves to L2 cache from there start serving the reads from Offheap byte buffer. What do you think? Do you feel we can address from the DFSClient API itself?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not sure I follow &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; Please say again.&lt;/p&gt;

&lt;p&gt;Would be cool if we could get from dfsclient into DBBs, checksum, and then put into BC.  May necessitate a copy from the DFSClient DBB to our own BC DBB because DFSClient will want its DBB back.  Offheap copy of DBBs should be fast though and no garbage?  Anyways, just thinking out loud.&lt;/p&gt;</comment>
                            <comment id="14163914" author="anoop.hbase" created="Wed, 8 Oct 2014 18:23:38 +0000"  >&lt;p&gt;Current work/idea is to continue the read from DFSClient to on heap only.(This is to a byte[] now) The L2 cache will/can be offheap and then when HFileBlock is being got from L2 cache avoid the need to copy to on heap.   DFSClient read part can be checked as next steps. (If you are experimenting with that great. Will wait to see your analysis and test results)&lt;/p&gt;</comment>
                            <comment id="14164171" author="stack" created="Wed, 8 Oct 2014 21:08:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; ok.  Looking forward to patch.&lt;/p&gt;</comment>
                            <comment id="14164612" author="ram_krish" created="Thu, 9 Oct 2014 02:24:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;Lets do some experiments, POC, to see what is best fit?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Then based on this there may be some API changes needed in HFileBlock. I have some patch for this but changing the entire code path to BR including the BC related code is quite challenging.&lt;/p&gt;</comment>
                            <comment id="14164767" author="lhofhansl" created="Thu, 9 Oct 2014 05:13:41 +0000"  >&lt;p&gt;Careful with DBBs. JVM will one for each size allocated and not reuse (unless same size), and in addition they not cleaned until we do a full GC (at least that used to be the case). So we need to make sure we allocate DBB of same size (maybe from a pool). There might be other issues too.&lt;/p&gt;</comment>
                            <comment id="14164777" author="anoop.hbase" created="Thu, 9 Oct 2014 05:26:45 +0000"  >&lt;p&gt;As part of this issue and coming sub tasks we wont be creating new DBBs. Only thing is in the read path , there is assumption of BB being HBB. Just will avoid that so that if DBB used to back up the data we don&apos;t get issues.  When the data block is in L2 cache and that is offheap we don&apos;t need to copy it back to on heap again.    Thanks for the advice Lars.&lt;/p&gt;</comment>
                            <comment id="14164797" author="lhofhansl" created="Thu, 9 Oct 2014 05:43:02 +0000"  >&lt;p&gt;I see. That makes sense. If the DFSClient already hands us a DBB, we should use that.&lt;/p&gt;</comment>
                            <comment id="14164800" author="anoop.hbase" created="Thu, 9 Oct 2014 05:48:01 +0000"  >&lt;p&gt;Stack is working on that area in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11710&quot; title=&quot;if offheap L2 blockcache, read from DFS into offheap and copy to blockcache without coming onheap&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11710&quot;&gt;HBASE-11710&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14169273" author="hadoopqa" created="Mon, 13 Oct 2014 13:18:46 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12674496/HBASE-12202.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12674496/HBASE-12202.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12674496&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 4 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11325//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14171743" author="stack" created="Wed, 15 Oct 2014 00:11:12 +0000"  >&lt;p&gt;Interesting. ByteBufferInputStream seems to be a pretty common invention if I poke on net.  Thought there was one already in hadoop but no....&lt;/p&gt;

&lt;p&gt;Generally I think this unnecessary... it is going to happen anyways?&lt;/p&gt;

&lt;p&gt;67	    if (b == null) &lt;/p&gt;
{
68	      throw new NullPointerException();

... and this?

    }
&lt;p&gt; else if (off &amp;lt; 0 || len &amp;lt; 0 || len &amp;gt; b.length - off) &lt;/p&gt;
{
70	      throw new IndexOutOfBoundsException();
71	    }


&lt;p&gt;Looks good to me.  You think it can work w/ offheap BBs now?&lt;/p&gt;

</comment>
                            <comment id="14171948" author="anoop.hbase" created="Wed, 15 Oct 2014 03:50:46 +0000"  >&lt;p&gt;The null checks and others I can remove. Agree with you.&lt;br/&gt;
It can work with offheap within this class. But an e2e test can be possible only after we do similar work in other read flow areas. Me and Ram working on those already. &lt;br/&gt;
Like the above checks they are there in BB impls. Andy used to share concerns over this wrt perf. Also these can result in code not getting inlined. BB to BR change was ib that regard so that we can have own simplied impls of BB which is backed by BR &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Any way those area will touch after these changes.&lt;br/&gt;
Thanks boss&lt;/p&gt;</comment>
                            <comment id="14171971" author="stack" created="Wed, 15 Oct 2014 04:41:43 +0000"  >&lt;p&gt;Ok +1 to commit.  Remove the checks on commit.&lt;/p&gt;</comment>
                            <comment id="14172180" author="ram_krish" created="Wed, 15 Oct 2014 09:34:19 +0000"  >&lt;p&gt;Pls give me a day&apos;s time. I will check this and get back on it.&lt;/p&gt;</comment>
                            <comment id="14172343" author="anoop.hbase" created="Wed, 15 Oct 2014 13:17:57 +0000"  >&lt;p&gt;Sure Ram.&lt;/p&gt;</comment>
                            <comment id="14173634" author="hadoopqa" created="Thu, 16 Oct 2014 11:30:10 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12675256/HBASE-12202_V2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12675256/HBASE-12202_V2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12675256&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.http.TestHttpServerLifecycle.testStartedServerIsAlive(TestHttpServerLifecycle.java:71)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11375//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14173689" author="ram_krish" created="Thu, 16 Oct 2014 12:28:37 +0000"  >&lt;p&gt;Had a look at the patch.  &lt;br/&gt;
-&amp;gt; Now doing duplicate and a slice, we are doing more operations but they may be minor I suppose.&lt;br/&gt;
-&amp;gt; ByteBufferUtils.copyFromBufferToBuffer() can we reuse the one above the new one. I mean can we refactor both of them.&lt;br/&gt;
-&amp;gt; In HfileBlock.getBufferReadOnly()&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; ByteBuffer.wrap(buf.array(), buf.arrayOffset(),
-        buf.limit() - totalChecksumBytes()).slice();
+    ByteBuffer dup = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.buf.duplicate();
+    dup.limit(buf.limit() - totalChecksumBytes());
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; dup.slice();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This will impact the limit and the capacity of the returning array.  Will that be a concern? When we say a read only will it be better to return a real read only Buffer?  In case of BR we tried to do achieve that by returning an ImmutableBR unless and otherwise stated to return a MutableBR.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ByteBuffer inDup = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.buf.duplicate();
+      inDup.limit(inDup.limit() + headerSize());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Why is the limit after considering the headerSize()? &lt;/p&gt;</comment>
                            <comment id="14173756" author="anoop.hbase" created="Thu, 16 Oct 2014 13:55:31 +0000"  >&lt;p&gt;No extra overhead. Previously we had wrap() call and then slice. This will create 2 new objects but no data copy. In patch also same way.&lt;br/&gt;
The existing will move the position of the destination buffer and is being used already.  This is different in which both src and destination ops are absolute and no pos changes. IMO better can have 2 methods. Not many lines of codes.. Than passing a boolean and based on that do op, better 2 APIs&lt;/p&gt;

&lt;p&gt;getBufferReadOnly -&amp;gt; the ops will be same as the old way. We want to limit the new buffer to exclude the checksum bytes.  &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;return a real read only Buffer? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;But we need new limit. So no new BB object is needed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why is the limit after considering the headerSize()?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We increase the limit here because we have to copy the header data of the next block.  In case of array based copying this was ok. But now it is buffer to buffer copy. We can not read/write after limit.  I just wrote comments above this code.&lt;/p&gt;</comment>
                            <comment id="14174034" author="ram_krish" created="Thu, 16 Oct 2014 17:58:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;We increase the limit here because we have to copy the header data of the next block&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is limit right?  So it is fine. &lt;br/&gt;
When I meant read only buffer I meant should we have way to return a read only byte buffer?&lt;/p&gt;</comment>
                            <comment id="14174774" author="anoop.hbase" created="Fri, 17 Oct 2014 06:34:46 +0000"  >&lt;p&gt;We keep it as it was in old code. Further cleanup may be as follow up issue? It depends also on whether we change to BR&lt;/p&gt;</comment>
                            <comment id="14176092" author="stack" created="Sat, 18 Oct 2014 19:42:04 +0000"  >&lt;p&gt;I see what Ram is saying.  Looking, duplicate is effectively equal to a wrap (new instance plus setting internal pointers).  You good w/ the patch then &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14176319" author="anoop.hbase" created="Sun, 19 Oct 2014 14:13:58 +0000"  >&lt;p&gt;Ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; for branch-1&lt;/p&gt;</comment>
                            <comment id="14176356" author="ram_krish" created="Sun, 19 Oct 2014 17:19:47 +0000"  >&lt;p&gt;Ya good with the patch.  And surely a later clean up for getting Read only BB.  BB already has the facility to create actual read only buffer.  We can do that in the clean up.&lt;/p&gt;</comment>
                            <comment id="14177932" author="enis" created="Tue, 21 Oct 2014 04:36:06 +0000"  >&lt;p&gt;Skimmed the patch. Looks good for branch-1 as well. &lt;/p&gt;</comment>
                            <comment id="14178334" author="anoop.hbase" created="Tue, 21 Oct 2014 12:30:45 +0000"  >&lt;p&gt;Pushed to 0.99+&lt;br/&gt;
Thanks for the reviews&lt;/p&gt;</comment>
                            <comment id="14178407" author="hudson" created="Tue, 21 Oct 2014 13:48:40 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.0 #332 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/332/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/332/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12202&quot; title=&quot;Support DirectByteBuffer usage in HFileBlock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12202&quot;&gt;&lt;del&gt;HBASE-12202&lt;/del&gt;&lt;/a&gt; Support DirectByteBuffer usage in HFileBlock. (anoopsamjohn: rev 67d1cee2d868d0924968dccfb93b1536a0265086)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBufferInputStream.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultDecodingContext.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/io/TestByteBufferInputStream.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14178451" author="hudson" created="Tue, 21 Oct 2014 14:20:46 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #5678 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5678/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5678/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12202&quot; title=&quot;Support DirectByteBuffer usage in HFileBlock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12202&quot;&gt;&lt;del&gt;HBASE-12202&lt;/del&gt;&lt;/a&gt; Support DirectByteBuffer usage in HFileBlock. (anoopsamjohn: rev c01d9981d89ba3633377952d132c88536c86ebc5)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultDecodingContext.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBufferInputStream.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/io/TestByteBufferInputStream.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14184015" author="anoop.hbase" created="Sat, 25 Oct 2014 07:27:49 +0000"  >&lt;p&gt;ByteBufferUtils#compareTo  having an issue. Addendum fixes it.&lt;/p&gt;</comment>
                            <comment id="14184357" author="yuzhihong@gmail.com" created="Sun, 26 Oct 2014 01:49:00 +0000"  >&lt;p&gt;+1 on addendum.&lt;/p&gt;</comment>
                            <comment id="14184366" author="anoop.hbase" created="Sun, 26 Oct 2014 02:38:22 +0000"  >&lt;p&gt;Opening for commiting the addendum&lt;/p&gt;</comment>
                            <comment id="14184367" author="anoop.hbase" created="Sun, 26 Oct 2014 02:40:19 +0000"  >&lt;p&gt;Pushed addendum to 0.99+.  Thanks Ted.&lt;/p&gt;</comment>
                            <comment id="14184392" author="hudson" created="Sun, 26 Oct 2014 04:14:25 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.0 #361 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/361/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/361/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12202&quot; title=&quot;Support DirectByteBuffer usage in HFileBlock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12202&quot;&gt;&lt;del&gt;HBASE-12202&lt;/del&gt;&lt;/a&gt; Support DirectByteBuffer usage in HFileBlock - addendum (anoop.s.john: rev 37ac17f62638420430e1004aa48e29d5291e07b5)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14184393" author="hudson" created="Sun, 26 Oct 2014 04:20:31 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #5702 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5702/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5702/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12202&quot; title=&quot;Support DirectByteBuffer usage in HFileBlock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12202&quot;&gt;&lt;del&gt;HBASE-12202&lt;/del&gt;&lt;/a&gt; Support DirectByteBuffer usage in HFileBlock - addendum (anoop.s.john: rev 34f9962618c85ad041ca7eac4913453335a81647)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14331600" author="enis" created="Sat, 21 Feb 2015 23:45:12 +0000"  >&lt;p&gt;Closing this issue after 0.99.2 release.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12677088" name="HBASE-12202-addendum.patch" size="721" author="anoop.hbase" created="Sat, 25 Oct 2014 07:27:49 +0000"/>
                            <attachment id="12674496" name="HBASE-12202.patch" size="26544" author="anoop.hbase" created="Mon, 13 Oct 2014 11:37:30 +0000"/>
                            <attachment id="12675256" name="HBASE-12202_V2.patch" size="26140" author="anoop.hbase" created="Thu, 16 Oct 2014 10:29:28 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 8 Oct 2014 15:36:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i20xfr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>