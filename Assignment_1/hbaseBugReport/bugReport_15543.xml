<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:04:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-15543/HBASE-15543.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-15543] HFileScannerImpl.getCell() allocates cell object on every call</title>
                <link>https://issues.apache.org/jira/browse/HBASE-15543</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This accounts for 28% of memory allocation in compaction thread.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12953791">HBASE-15543</key>
            <summary>HFileScannerImpl.getCell() allocates cell object on every call</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12953787">HBASE-15542</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="vrodionov">Vladimir Rodionov</assignee>
                                    <reporter username="vrodionov">Vladimir Rodionov</reporter>
                        <labels>
                    </labels>
                <created>Sat, 26 Mar 2016 22:07:43 +0000</created>
                <updated>Fri, 15 Apr 2016 21:00:46 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="15215586" author="ram_krish" created="Tue, 29 Mar 2016 07:10:35 +0000"  >&lt;p&gt;I had done some work here. The compaction scanner also has caching enabled. So ever next() call accumulates the cells and then it is written to the writer. Best could be that as and when a cell is parsed from the underlying Bb directly write it to the new writer. But that could be costlier? &lt;/p&gt;</comment>
                            <comment id="15216018" author="stack" created="Tue, 29 Mar 2016 13:48:02 +0000"  >&lt;p&gt;The method creates a variety of Cell types dependent on setup. Is the reported 28% creation of new Cell or new Cell reference when the Cell is being made against a backing BB that is offheap from BucketCache?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But that could be costlier?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;  Why you think? We have to do one copy at least from old backing BB to the new buffer. There is a further copy being made just so the Cell can exist outside of this Scanner?&lt;/p&gt;</comment>
                            <comment id="15216272" author="ram_krish" created="Tue, 29 Mar 2016 16:25:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is the reported 28% creation of new Cell or new Cell reference when the Cell is being made against a backing BB that is offheap from BucketCache?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I would think this is the case where a Cell reference is made from the underlying HDFS BB. Because generally in case of compaction we don&apos;t read from the cache?  Even if we do then this cell should be formed from the offheap BB incase of Bucket cache. ( NON DBE case).&lt;br/&gt;
If we could directly copy this buffer&apos;s contents corresponding to the cell to the new file writer&apos;s buffer it is going to be easier. We can avoid this object creation. &lt;br/&gt;
Ya in case of DBE yes- we will do the copy of the value part and I don think we can avoid that. &lt;/p&gt;</comment>
                            <comment id="15216343" author="anoop.hbase" created="Tue, 29 Mar 2016 17:05:06 +0000"  >&lt;p&gt;Even we can do with single Cell object also.  ( I consider compaction case only)  There was another patch with a reset API on cell.   So only one KeyValue object will be there. As we traverse through the HFile blocks, we will reset the offset/length of KeyValue.    So it can reduce new Cell object need with every cell..   How much this will help us wrt GC reduction? &lt;/p&gt;</comment>
                            <comment id="15216360" author="ram_krish" created="Tue, 29 Mar 2016 17:15:28 +0000"  >&lt;p&gt;Yes. That wil work only for compaction. As I said we should not do a batch next() call in that case. That is what I tried to do. &lt;/p&gt;</comment>
                            <comment id="15216578" author="vrodionov" created="Tue, 29 Mar 2016 18:31:17 +0000"  >&lt;blockquote&gt;
&lt;p&gt;The compaction scanner also has caching enabled. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Why? Must be off.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Is the reported 28% creation of new Cell or new Cell reference when the Cell is being made against a backing BB that is offheap from BucketCache?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;On heap. Both byte array and object are allocated. &lt;/p&gt;


</comment>
                            <comment id="15243631" author="vrodionov" created="Fri, 15 Apr 2016 20:57:34 +0000"  >&lt;p&gt;experimental patch. Only for compaction threads. The optimization should work for any scanner with caching disabled, but make it easy usable for general case is not that easy (hate additional config options)&lt;/p&gt;

&lt;p&gt;This shows some 20% reduction in memory allocation speed during compactions. Combined with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15509&quot; title=&quot;Avoid copy of block data in HFileBlock$Writer.finishBlock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15509&quot;&gt;HBASE-15509&lt;/a&gt; it will give 40-45% reduction.&lt;/p&gt;</comment>
                            <comment id="15243639" author="vrodionov" created="Fri, 15 Apr 2016 21:00:46 +0000"  >&lt;p&gt;Wrong Jira.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Mar 2016 07:10:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            35 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2v9av:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>