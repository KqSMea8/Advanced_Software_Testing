<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:44:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-457/HBASE-457.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-457] Factor Master into Master, RegionManager, and ServerManager</title>
                <link>https://issues.apache.org/jira/browse/HBASE-457</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Even with TableOperation and descendants factored out of HMaster, it&apos;s still a huge class. Every bit of master state basically lives in one class, so it&apos;s very challenging to understand the logical groupings of everything.&lt;/p&gt;

&lt;p&gt;To make this a little more manageable, let&apos;s make two new abstractions, ServerManager and RegionManager.&lt;/p&gt;

&lt;p&gt;ServerManager keeps track of servers - leases, message processing, load and load average, etc. &lt;/p&gt;

&lt;p&gt;RegionManager keeps track of the root location, meta table online state, assigning regions to servers, and so on. &lt;/p&gt;

&lt;p&gt;HMaster then keeps around one of each of these classes to track state and do it&apos;s master stuff. The HMaster class itself does not change it&apos;s interface to external consumers. It also retains the main processing loop, HBase closed state, start and stop, etc.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12388943">HBASE-457</key>
            <summary>Factor Master into Master, RegionManager, and ServerManager</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12386905">HBASE-75</parent>
                                    <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanduxbury">Bryan Duxbury</assignee>
                                    <reporter username="bryanduxbury">Bryan Duxbury</reporter>
                        <labels>
                    </labels>
                <created>Mon, 18 Feb 2008 21:14:44 +0000</created>
                <updated>Fri, 22 Aug 2008 21:13:09 +0000</updated>
                            <resolved>Sat, 23 Feb 2008 23:53:23 +0000</resolved>
                                    <version>0.2.0</version>
                                    <fixVersion>0.2.0</fixVersion>
                                    <component>master</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12570013" author="bryanduxbury" created="Mon, 18 Feb 2008 21:29:23 +0000"  >&lt;p&gt;Here&apos;s my first draft. &lt;/p&gt;

&lt;p&gt;I believe that all the state is segmented how it should be, but the methods of access are pretty muddy still. For instance, I&apos;d greatly prefer it if external classes didn&apos;t have to directly access the various region state lists, but since they have to synchronize on them, it&apos;s tricky.&lt;/p&gt;

&lt;p&gt;Also, ServerManager and RegionManager are coupled tightly right now, as ServerManager passes messages to RegionManager pretty much explicitly. It&apos;d be preferable to allow any class to subscribe to certain message types from ServerManager, and then we could add other cool consumers of the event data. &lt;/p&gt;</comment>
                            <comment id="12570548" author="bryanduxbury" created="Wed, 20 Feb 2008 02:52:20 +0000"  >&lt;p&gt;Here&apos;s another version. It&apos;s re-merged with trunk.&lt;/p&gt;

&lt;p&gt;It also now includes a few small changes to SoftSortedMap and HConnectionManager to try and deal with the random failures we&apos;ve been seeing of NPEs in getRegionLocation. The (non-reproducible) theory is that between checking if the cache for a table is empty and actually getting the key, it gets garbage collected into emptiness. &lt;/p&gt;</comment>
                            <comment id="12570559" author="jimk" created="Wed, 20 Feb 2008 03:45:20 +0000"  >&lt;p&gt;+0 TestTableMapReduce failed with:&lt;/p&gt;

&lt;p&gt;junit.framework.AssertionFailedError&lt;br/&gt;
	at org.apache.hadoop.hbase.MultiRegionTable.makeMultiRegionTable(MultiRegionTable.java:150)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapred.TestTableMapReduce.localTestMultiRegionTable(TestTableMapReduce.java:279)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapred.TestTableMapReduce.testTableMapReduce(TestTableMapReduce.java:206)&lt;/p&gt;

&lt;p&gt;On the other hand TestTableIndex which runs the same code, passed.&lt;/p&gt;</comment>
                            <comment id="12570572" author="bryanduxbury" created="Wed, 20 Feb 2008 04:41:20 +0000"  >&lt;p&gt;Do you consistently get that failure? What does the failure mean? (We should at least change the failure to include a message, don&apos;t you think?)&lt;/p&gt;</comment>
                            <comment id="12571190" author="bryanduxbury" created="Thu, 21 Feb 2008 21:24:15 +0000"  >&lt;p&gt;That error in MultiRegionTable is just checking if the split parent region&apos;s directory still exists. If it doesn&apos;t exist, doesn&apos;t that mean that the daughters could have been compacted and therefore the parent would have been cleaned up? How could this be an issue caused by master refactoring?&lt;/p&gt;</comment>
                            <comment id="12571210" author="stack" created="Thu, 21 Feb 2008 22:19:13 +0000"  >&lt;p&gt;Here&apos;s a few comments on the patch:&lt;/p&gt;

&lt;p&gt;+ This seems odd in MetaScanner: &apos;synchronized (master.regionManager.metaScannerLock) &apos;  Would think classes should never have this kind of intimate knowledge of others: i.e. MetaScanner knowing that master has a data member named regionManager which in turn has an object to lock.  Or this kinda thing: &apos;master.regionManager.onlineMetaRegions&apos; or &apos;master.regionManager.metaRegionsToScan.pol&apos; (I understand this is first stage of an extensive refactoring and that these once-inner classes are tough to unravel but maybe something can be done about this intimacy?).  This problem seems prevalent throughout the patch.&lt;br/&gt;
+ Can these changes:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-          master.onlineMetaRegions.remove(info.getStartKey());
+          master.regionManager.onlineMetaRegions.remove(info.getStartKey());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;be replace with a method on master named something like removeOnlineMetaRegion(final Text startKey)?&lt;/p&gt;

&lt;p&gt;One suggestion would be to make a getRegionManager method for the master (Are these supposed to be singletons?) and then a removeOnlineMetaRegions method on RegionManager.&lt;/p&gt;

&lt;p&gt;Same for these in ServerManager:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      HServerAddress root = master.getRootRegionLocation();
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (root != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; root.equals(storedInfo.getServerAddress())) {
+        master.regionManager.unassignRootRegion();
+      }
+      master.delayedToDoQueue.put(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ProcessServerShutdown(master, storedInfo));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;+ I like the ServerManager and RegionManager classes&lt;br/&gt;
+  Can ServerManager and RegionManager be finals on master?  Can they be private? (smile)&lt;/p&gt;

&lt;p&gt;+ Just remove this kinda stuff rather than leave it commented in:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+/*        &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (master.regionManager.onlineMetaRegions) {
+          metaRegion = master.regionManager.onlineMetaRegions.size() == 1 ? 
+              master.regionManager.onlineMetaRegions.get(master.regionManager.onlineMetaRegions.firstKey()) :
+                master.regionManager.onlineMetaRegions.containsKey(regionInfo.getRegionName()) ?
+                    master.regionManager.onlineMetaRegions.get(regionInfo.getRegionName()) :
+                      master.regionManager.onlineMetaRegions.get(master.regionManager.onlineMetaRegions.headMap(
                           regionInfo.getRegionName()).lastKey());
-        }
-        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.metaRegionName = metaRegion.getRegionName();
+        }*/
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There is another example of above in SortedSoftMap.&lt;/p&gt;

&lt;p&gt;Otherwise, patch is definetly going in right direction.&lt;/p&gt;</comment>
                            <comment id="12571508" author="bryanduxbury" created="Fri, 22 Feb 2008 18:22:46 +0000"  >&lt;p&gt;Here&apos;s a version with some of the problems fixed. This isn&apos;t the final product, but it is an incremental step in that direction.&lt;/p&gt;</comment>
                            <comment id="12571585" author="stack" created="Fri, 22 Feb 2008 20:38:45 +0000"  >&lt;p&gt;Is this change intentional where you use regionManager instead of master in the below?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!master.closed.get() &amp;amp;&amp;amp; !master.rootScanned &amp;amp;&amp;amp;
-      master.rootRegionLocation.get() == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!master.closed.get() &amp;amp;&amp;amp; !regionManager.rootScanned &amp;amp;&amp;amp;
+      regionManager.rootRegionLocation.get() == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These are unfortunate in BaseScanner but shouldn&apos;t block the patch: &apos;synchronized (regionManager.killList) {&apos;  i.e. synchronizing on a lock that is over in another class.  We can work on them over time.&lt;/p&gt;

&lt;p&gt;Should we be passing in a ServerManager into Base/MetaScanner on construction?  Would it help w/ the likes of the below:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      storedInfo = master.serversToServerInfo.get(serverName);
-      deadServer = master.deadServers.contains(serverName);
+      storedInfo = master.serverManager.serversToServerInfo.get(serverName);
+      deadServer = master.serverManager.deadServers.contains(serverName);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Would suggest adding a getServerManager accessor on master otherwise.&lt;/p&gt;

&lt;p&gt;I like these changes:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        master.onlineMetaRegions.put(region.getStartKey(), region);
+        regionManager.putMetaRegionOnline(region);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This code seems odd:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    master.initialMetaScanComplete = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
+    regionManager.initialMetaScanComplete = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Why does the region manager have the flag for whether a scan is complete &amp;#8211; meta or root?  Could this be kept in the scanner classes themselves?&lt;/p&gt;

&lt;p&gt;You could also add a setter to regionManager for this kinda stuff (so MetaScanner doesn&apos;t have to know about regionmanager data members)&lt;/p&gt;

&lt;p&gt;Should you be passing RegionManager to TableOperation constructor so you don&apos;t have to do this?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-          master.onlineMetaRegions.remove(info.getStartKey());
+          master.regionManager.offlineMetaRegion(info.getStartKey());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Should below just be changed to a master.getRegionLocation?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        server = master.connection.getHRegionConnection(master.rootRegionLocation.get());
+        server = master.connection.getHRegionConnection(
+          master.regionManager.rootRegionLocation.get());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In ServerManager you have this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;volatile&lt;/span&gt; Set&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; deadServers =
+    Collections.synchronizedSet(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Would suggest the volatile be changed to a final and that you default data members as private till some one complains they need it otherwise (Same for other members of this class)&lt;/p&gt;</comment>
                            <comment id="12571680" author="bryanduxbury" created="Sat, 23 Feb 2008 01:49:48 +0000"  >&lt;p&gt;This patch makes it so the vast majority of fields on RegionManager are no longer used directly.&lt;/p&gt;</comment>
                            <comment id="12571795" author="stack" created="Sat, 23 Feb 2008 22:56:38 +0000"  >&lt;p&gt;In the below in metascanner...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  /** Work &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the meta scanner is queued up here */
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;volatile&lt;/span&gt; BlockingQueue&amp;lt;MetaRegion&amp;gt; metaRegionsToScan =
+    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LinkedBlockingQueue&amp;lt;MetaRegion&amp;gt;();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;...change the volatile to final.  I think your hope was that the volatile would apply to the content of metaRegionsToScan.  Rather it applies to the metaRegionsToScan reference... and that ain&apos;t going to change once its been allocated (See &lt;a href=&quot;http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.3.1.4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.3.1.4&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;You should change the few like the below in ServerManager also:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  /** The map of known server names to server info */
+  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;volatile&lt;/span&gt; Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, HServerInfo&amp;gt; serversToServerInfo =
+    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ConcurrentHashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, HServerInfo&amp;gt;();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Do data members in ServerManager have to be protected?  Can they not be private or are they need to be protected for tests?  E.g:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; HMaster master;
+  
+  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Leases serverLeases;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If need to be protected for tests then lets make an issue to fix this using something like this, &lt;a href=&quot;http://www.onjava.com/pub/a/onjava/2003/11/12/reflection.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.onjava.com/pub/a/onjava/2003/11/12/reflection.html&lt;/a&gt;, if its not too much of a pain.&lt;/p&gt;

&lt;p&gt;Does only the master have a regionManager?  If so, why not master.getRegionManager and make the method package-private?  Then it would not have to be passed to the MetaScanner constructor? Not important &amp;#8211; passing on construction saves an indirection every time... just a thought... would help w/ the below from ProcessServerShutdown:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-          master.onlineMetaRegions.remove(info.getStartKey());
+          master.regionManager.offlineMetaRegion(info.getStartKey());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I like the cleanup done in the below:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    ArrayList&amp;lt;MetaRegion&amp;gt; regions = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;MetaRegion&amp;gt;();
-    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (master.onlineMetaRegions) {
-      regions.addAll(master.onlineMetaRegions.values());
-    }
+    List&amp;lt;MetaRegion&amp;gt; regions = regionManager.getListOfOnlineMetaRegions();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(Not important), the below is a TODO?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  /** compute the average load across all region servers */
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; averageLoad() {
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 0;
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I like the new setUnassigned and noLongerPending, getRootRegionLocation, etc., methods&lt;/p&gt;

&lt;p&gt;Fix the volatiles in RegionManager... make them finals.  You can do this now you declare and define all in the one statement.&lt;/p&gt;

&lt;p&gt;I ran the patch locally and it passed. Suggest that you address what you think important in the above &amp;#8211; at least the volatiles I&apos;d say &amp;#8211; and if tests pass locally for you, just apply v5.&lt;/p&gt;</comment>
                            <comment id="12571806" author="bryanduxbury" created="Sat, 23 Feb 2008 23:53:23 +0000"  >&lt;p&gt;I just committed this.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12387513">HBASE-71</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12375990" name="457-v2.patch" size="122139" author="bryanduxbury" created="Wed, 20 Feb 2008 02:52:20 +0000"/>
                            <attachment id="12376248" name="457-v3.patch" size="126609" author="bryanduxbury" created="Fri, 22 Feb 2008 18:22:46 +0000"/>
                            <attachment id="12376290" name="457-v4.patch" size="131532" author="bryanduxbury" created="Sat, 23 Feb 2008 01:49:48 +0000"/>
                            <attachment id="12375860" name="457.patch" size="118952" author="bryanduxbury" created="Mon, 18 Feb 2008 21:29:23 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 20 Feb 2008 03:45:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31710</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 43 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h7fb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98465</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>