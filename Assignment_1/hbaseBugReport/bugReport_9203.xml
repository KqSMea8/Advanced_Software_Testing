<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:02:20 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9203/HBASE-9203.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9203] Secondary index support through coprocessors</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9203</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We have been working on implementing secondary index in HBase and open sourced  on hbase 0.94.8 version.&lt;br/&gt;
The project is available on github.&lt;br/&gt;
&lt;a href=&quot;https://github.com/Huawei-Hadoop/hindex&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Huawei-Hadoop/hindex&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This Jira is to support secondary index on trunk(0.98).&lt;/p&gt;

&lt;p&gt;Following features will be supported.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;multiple indexes on table,&lt;/li&gt;
	&lt;li&gt;multi column index,&lt;/li&gt;
	&lt;li&gt;index based on part of a column value,&lt;/li&gt;
	&lt;li&gt;equals and range condition scans using index, and&lt;/li&gt;
	&lt;li&gt;bulk loading data to indexed table (Indexing done with bulk load)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Most of the kernel changes needed for secondary index is available in trunk. Very minimal changes needed for it.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12663357">HBASE-9203</key>
            <summary>Secondary index support through coprocessors</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="rajesh23">rajeshbabu</assignee>
                                    <reporter username="rajesh23">rajeshbabu</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Aug 2013 06:42:45 +0000</created>
                <updated>Tue, 12 May 2015 12:13:03 +0000</updated>
                                                                                <due></due>
                            <votes>11</votes>
                                    <watches>55</watches>
                                                                                                            <comments>
                            <comment id="13737916" author="rajesh23" created="Tue, 13 Aug 2013 06:45:30 +0000"  >&lt;p&gt;I am working on this. I will upload the patch in couple of days.&lt;/p&gt;</comment>
                            <comment id="13738014" author="linwukang" created="Tue, 13 Aug 2013 09:18:09 +0000"  >&lt;p&gt;Well done!&lt;br/&gt;
Why this jira is tag as a bug? tag as &apos;New Feature&apos; may be better.&lt;/p&gt;</comment>
                            <comment id="13738015" author="linwukang" created="Tue, 13 Aug 2013 09:22:27 +0000"  >&lt;p&gt;One more question, is this implement support wildcard query with the index table?&lt;/p&gt;</comment>
                            <comment id="13738026" author="anoop.hbase" created="Tue, 13 Aug 2013 09:36:20 +0000"  >&lt;p&gt;You mean the index usage for a query like col LIKE &quot;ab%&quot; ?&lt;/p&gt;</comment>
                            <comment id="13738035" author="linwukang" created="Tue, 13 Aug 2013 09:52:50 +0000"  >&lt;p&gt;@Anoop yes, that what i exactly means. I read the ppt that published on the HBTC, It seems not address to this issue.&lt;/p&gt;</comment>
                            <comment id="13738040" author="anoop.hbase" created="Tue, 13 Aug 2013 09:55:57 +0000"  >&lt;p&gt;You are correct. This can be done. &lt;br/&gt;
&lt;a href=&quot;https://github.com/Huawei-Hadoop/hindex/issues/6&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Huawei-Hadoop/hindex/issues/6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13738042" author="linwukang" created="Tue, 13 Aug 2013 09:59:02 +0000"  >&lt;p&gt;Nice! 3Q Anoop!&lt;/p&gt;</comment>
                            <comment id="13738301" author="yuzhihong@gmail.com" created="Tue, 13 Aug 2013 14:41:52 +0000"  >&lt;p&gt;A high level design doc would help reviewers understand this feature.&lt;/p&gt;</comment>
                            <comment id="13739228" author="rajesh23" created="Wed, 14 Aug 2013 05:02:53 +0000"  >&lt;p&gt;Ted, I will upload by tomorrow.&lt;/p&gt;</comment>
                            <comment id="13739307" author="lhofhansl" created="Wed, 14 Aug 2013 06:58:08 +0000"  >&lt;p&gt;Is it possible to provide the 0.94 changes as a patch as well? Looks like this would be a large patch with many of the core classes changed.&lt;/p&gt;</comment>
                            <comment id="13739313" author="anoop.hbase" created="Wed, 14 Aug 2013 07:01:18 +0000"  >&lt;p&gt;&lt;a href=&quot;https://github.com/Huawei-Hadoop/hindex/blob/master/dev-support/SecondaryIndexKernelChanges.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Huawei-Hadoop/hindex/blob/master/dev-support/SecondaryIndexKernelChanges.patch&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13739318" author="anoop.hbase" created="Wed, 14 Aug 2013 07:04:08 +0000"  >&lt;p&gt;There are still some more CP hooks which are not contributed back.  Also same changes to make the across region (within a RS) transaction kind of stuff.&lt;/p&gt;

&lt;p&gt;I guess this is there in our future roadmap to support a cross region transaction(regions within same RS).  I opened one JIRA for that. Based on the patch will get inputs for making a patch for that issue. Will work on that later if it sounds interesting generally. &lt;/p&gt;</comment>
                            <comment id="13739323" author="rajesh23" created="Wed, 14 Aug 2013 07:06:38 +0000"  >&lt;p&gt;Lars, 0.94 there core classes changed are high only. But in trunk, there are very few changes in kernel.&lt;br/&gt;
0.94 kernel changes patch available here &lt;a href=&quot;https://github.com/Huawei-Hadoop/hindex/blob/master/dev-support/SecondaryIndexKernelChanges.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Huawei-Hadoop/hindex/blob/master/dev-support/SecondaryIndexKernelChanges.patch&lt;/a&gt;&lt;br/&gt;
Is it fine or you want me to upload here?&lt;/p&gt;</comment>
                            <comment id="13739331" author="rajesh23" created="Wed, 14 Aug 2013 07:10:48 +0000"  >&lt;p&gt;Sorry Anoop, our comments crossed. Yes we have few more issues need to committed. Then we can still reduce kernel changes.&lt;/p&gt;</comment>
                            <comment id="13739860" author="yuzhihong@gmail.com" created="Wed, 14 Aug 2013 16:48:13 +0000"  >&lt;p&gt;Given a base table, what is the impact of creating 1, 2 or more index tables associated with the base table ?&lt;/p&gt;

&lt;p&gt;The impact would first be measured by write performance to the base table.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13739872" author="anoop.hbase" created="Wed, 14 Aug 2013 16:58:08 +0000"  >&lt;p&gt;&amp;gt; impact of creating 1, 2 or more index tables &lt;/p&gt;

&lt;p&gt;There will be only one index table associated with base table for 1 or more indices on base table... JFYI.  Yes the write throughput to the base table when there are 1,2 or more index are there, to be measured.&lt;/p&gt;</comment>
                            <comment id="13739889" author="ram_krish" created="Wed, 14 Aug 2013 17:08:36 +0000"  >&lt;p&gt;When there are more than one index we would definitely have some hit on the write through put but how much matters.  &lt;br/&gt;
Given the readings we can definitely improve on that.  Cross region transaction, supporting WAlEdits for different regions in a single Edit are some areas that would improve the write performance.&lt;/p&gt;</comment>
                            <comment id="13740049" author="lhofhansl" created="Wed, 14 Aug 2013 18:58:18 +0000"  >&lt;p&gt;I&apos;d certainly be interested to put the plumbing (additional coprocessor hooks, etc) into 0.94 - barring any risks of course, such that the indexing stuff would be purely additional code, external to HBase.&lt;/p&gt;</comment>
                            <comment id="13740511" author="yuzhihong@gmail.com" created="Thu, 15 Aug 2013 00:59:10 +0000"  >&lt;p&gt;First batch of comments.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isIndexTable(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tableName) {
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; tableName.endsWith(INDEX_TABLE_SUFFIX);
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What if some existing table(s) at customer site already uses the above suffix ?&lt;br/&gt;
How about using metadata in HTableDescriptor for this purpose ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; indexEnabled = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.conf.getBoolean(&lt;span class=&quot;code-quote&quot;&gt;&quot;hbase.use.secondary.index&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please introduce constant for the above config.&lt;/p&gt;

&lt;p&gt;Looking at changes in BaseMasterObserver.java :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void preCreateTableHandler(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ObserverContext&amp;lt;MasterCoprocessorEnvironment&amp;gt; ctx,
+      HTableDescriptor desc, HRegionInfo[] regions) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It would be nice if the above changes are extracted from the big patch into a small one which adds additional hooks to coprocessor API - this way it would be easier for the small patch to be accepted.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+ * Copyright 2011 The Apache Software Foundation
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Year is not needed.&lt;/p&gt;

&lt;p&gt;For MasterObserverExt.java:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 * This is an extension &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the MasterObserver &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt;. The APIs added into &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; are not
+ * exposed by HBase. This is internally being used by CMWH HBase. Customer should not make use of
+ * &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; points. &amp;lt;br&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please modify the above comment - it is not consistent with Apache HBase.&lt;/p&gt;</comment>
                            <comment id="13740996" author="rajesh23" created="Thu, 15 Aug 2013 14:22:24 +0000"  >&lt;p&gt;These two issues made kernel changes patch bigger. These are not available in 0.94 version so we can back port them.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6633&quot; title=&quot;Adding new hooks to the split flow - For roll backs and one final hook after split is completed either successfully or failed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6633&quot;&gt;&lt;del&gt;HBASE-6633&lt;/del&gt;&lt;/a&gt;(Adding new hooks to the split flow - For roll backs and one final hook after split is completed either successfully or failed)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5584&quot; title=&quot;Coprocessor hooks can be called in the respective handlers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5584&quot;&gt;&lt;del&gt;HBASE-5584&lt;/del&gt;&lt;/a&gt;(Coprocessor hooks can be called in the respective handlers)&lt;/p&gt;</comment>
                            <comment id="13741050" author="ram_krish" created="Thu, 15 Aug 2013 15:15:41 +0000"  >&lt;p&gt;We need not back port I think. May be new hooks we can contribute to trunk.  &lt;/p&gt;</comment>
                            <comment id="13741141" author="rajesh23" created="Thu, 15 Aug 2013 16:23:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;What if some existing table(s) at customer site already uses the above suffix ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;How about using metadata in HTableDescriptor for this purpose ?&lt;br/&gt;
In trunk we can add index tables to system namespaces,so we distinguish user tables and index tables. In 94 its better to use metadata. &lt;br/&gt;
I will handle the above case and other comments in trunk patch.&lt;br/&gt;
For github raised an issue:&lt;br/&gt;
&lt;a href=&quot;https://github.com/Huawei-Hadoop/hindex/issues/16&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Huawei-Hadoop/hindex/issues/16&lt;/a&gt;&lt;/p&gt;


</comment>
                            <comment id="13741153" author="yuzhihong@gmail.com" created="Thu, 15 Aug 2013 16:32:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;we can add index tables to system namespaces&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;How do you deal with permissions ?&lt;br/&gt;
Suppose user A has access to tables in namespace A. Would you grant permission on hbase:A-index to user A ?&lt;/p&gt;

&lt;p&gt;I think using metadata across releases would be more consistent.&lt;/p&gt;</comment>
                            <comment id="13741264" author="lhofhansl" created="Thu, 15 Aug 2013 17:51:14 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rajesh23&quot; class=&quot;user-hover&quot; rel=&quot;rajesh23&quot;&gt;rajeshbabu&lt;/a&gt;, I looked through the two patches. They are innocuous - just adding new coproc hooks and defaulting their actions in BaseRegionObserver (all observer should be derived from that class, although I assume it is possible that somebody implemented RegionObserver directly).&lt;/p&gt;

&lt;p&gt;Even if we add these there would be some other kernel changes, though, right? &lt;/p&gt;</comment>
                            <comment id="13741521" author="yuzhihong@gmail.com" created="Thu, 15 Aug 2013 21:40:32 +0000"  >&lt;p&gt;The trunk patch would put new classes for secondaryindex in a new module, I assume.&lt;/p&gt;

&lt;p&gt;On page 15 of Anoop&apos;s presentation, one index table was created, right ?&lt;br/&gt;
If the number of index tables increases, what would the put performance be like ?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// TODO check some implementations here. Seems buggy!!
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class IndexHalfStoreFileReader &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; StoreFile.Reader {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What potential bug may exist in IndexHalfStoreFileReader ?&lt;/p&gt;

&lt;p&gt;For TestIndexRegionObserver, what does testHDP2938 cover ?&lt;/p&gt;</comment>
                            <comment id="13741875" author="ram_krish" created="Fri, 16 Aug 2013 03:52:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;What potential bug may exist in IndexHalfStoreFileReader ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Some apis were not implemented.  Those things needs to be revisited.&lt;br/&gt;
&amp;gt;&amp;gt;For TestIndexRegionObserver, what does testHDP2938 cover ?&lt;br/&gt;
Yes, renaming would be necessary.  Some internal github issue has been raised for the same.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Even if we add these there would be some other kernel changes, though, right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes there are few more.  In the kernel patch attached check for HRegion, SplitTransaction, and some client side changes.&lt;/p&gt;</comment>
                            <comment id="13741904" author="rajesh23" created="Fri, 16 Aug 2013 04:32:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;The trunk patch would put new classes for secondaryindex in a new module, I assume.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes Ted.&lt;/p&gt;</comment>
                            <comment id="13741915" author="anoop.hbase" created="Fri, 16 Aug 2013 05:01:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;If the number of index tables increases, what would the put performance be like ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Just to make it clear, There will be only one index table per actual table, irrespective of the #indices.  Yes need to calculate the put performance throughput with say 2,3,5 indices also  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13743846" author="rajesh23" created="Mon, 19 Aug 2013 14:27:16 +0000"  >&lt;p&gt;Here is the design doc for secondary index.&lt;/p&gt;</comment>
                            <comment id="13744051" author="yuzhihong@gmail.com" created="Mon, 19 Aug 2013 17:46:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;We will hide the index table regions from this actual load balancer.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The actual load balancer would support favored nodes feature. We should consider the placement not just for one replica of HFiles but the second and third replica as well.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The index table can be created with a name which is the actual table name suffixed with a predefined pattern &#8216;_idx&#8217;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Using fixed table name suffix is not flexible.&lt;/p&gt;

&lt;p&gt;For CreateTableWithSplits diagram, the flow is different from that of TableCreate diagram - there is second createTable call issued by Master. What if this second call has some IOException ? Would the user table be dropped in that case ?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When the user table is having N number of indices, N entries need to get added into the index region for this user table row.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The above implementation may result in the size of index table region being larger than the size of user table region. I assume split policy would be customized for index table.&lt;/p&gt;</comment>
                            <comment id="13744090" author="yuzhihong@gmail.com" created="Mon, 19 Aug 2013 18:33:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;When the index is on more than one column we need to take values of all the columns and add them in the rowkey in the same order of columns added to the index specifier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;What if user specifies two indices on the same set of columns but in different order ?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This index name max length is configurable using the parameter &amp;lt;&amp;lt;&amp;gt;&amp;gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Was there a typo above (w.r.t. the parameter name) ?&lt;br/&gt;
If the max length is changed after index table is created and written to, would index row key parsing be affected ?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For this we take the maxValueLength for an indexed column when table is created.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;What if the maxValueLength cannot cover the actual value for indexed column from the user query ?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In order to make integers compare correctly, we need to flip the sign bit.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OrderedBytes is in 0.95 and trunk. It should help with this use case.&lt;/p&gt;</comment>
                            <comment id="13744170" author="yuzhihong@gmail.com" created="Mon, 19 Aug 2013 20:24:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;As the user table and index table data is with different row keys, we won&#8217;t be able to split the index region same way as user region at some middle point.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Since the midpoint for index table region may not be chosen for the split, it is possible that the daughter regions of index region may have (quite) different amount of data. How can we mitigate this effect ?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Now what is different with the split of index region is the role of HalfStoreFileReader.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Typo above: different with the split of user table region&lt;/p&gt;
</comment>
                            <comment id="13744672" author="ram_krish" created="Tue, 20 Aug 2013 03:50:30 +0000"  >&lt;p&gt;&amp;gt;&amp;gt;The actual load balancer would support favored nodes feature. We should consider the placement not just for one replica of HFiles but the second and third replica as well.&lt;br/&gt;
Okie.  So the HFiles of main and index table should be placed on the same node.&lt;br/&gt;
&amp;gt;&amp;gt;The above implementation may result in the size of index table region being larger than the size of user table region. I assume split policy would be customized for index table.&lt;br/&gt;
Currently there is no customization here.  Mostly it will be the same data but the thing is we would read the HFile twice to create the top and bottom files for the index region.&lt;br/&gt;
Your concern seems valid, need to check those instances.&lt;br/&gt;
&amp;gt;&amp;gt;Using fixed table name suffix is not flexible.&lt;br/&gt;
Yes - I think we can mitigate this (with namespaces in place now). &lt;br/&gt;
&amp;gt;&amp;gt;here is second createTable call issued by Master. What if this second call has some IOException ? &lt;br/&gt;
overall there is some lack of mechanism to know what happens on the CP calls.  Most of the master operations are now happening on the RPC handler thread rather than the main threadmainly to reduce the impact of this problem.&lt;/p&gt;</comment>
                            <comment id="13744677" author="yuzhihong@gmail.com" created="Tue, 20 Aug 2013 03:57:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;Yes - I think we can mitigate this (with namespaces in place now). &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you elaborate a bit more on the above ? Index table would be created in its own namespace ?&lt;/p&gt;</comment>
                            <comment id="13744906" author="rajesh23" created="Tue, 20 Aug 2013 12:07:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;What if user specifies two indices on the same set of columns but in different order ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The two indices will be considered as independent.&lt;br/&gt;
Lets suppose c1,c2 are the columns and indices are &lt;span class=&quot;error&quot;&gt;&amp;#91;idx1,c1,c2&amp;#93;&lt;/span&gt;,&lt;span class=&quot;error&quot;&gt;&amp;#91;idx2,c2,c1&amp;#93;&lt;/span&gt; &lt;br/&gt;
For some queries where c1 has equal condition and c2 has range condition then idx1 will considered optimal index.&lt;br/&gt;
Similarly if c2 has equal condition then idx2 will be considered as optimal index.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Was there a typo above (w.r.t. the parameter name) ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Presently not given any configuration for max index name length. I will add a configuration for this.&lt;br/&gt;
This is different from maxValueLength.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If the max length is changed after index table is created and written to, would index row key parsing be affected ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I assume you mean max value length? Yes index rowkey parsing will have effect, We need to validate this properly and should not allow to modify maxValueLength. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;What if the maxValueLength cannot cover the actual value for indexed column from the user query ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That record wont come in result.  &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Since the midpoint for index table region may not be chosen for the split, it is possible that the daughter regions of index region may have (quite) different amount of data. How can we mitigate this effect ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Index region should split along with user region split only, we are avoiding splitting index region from external split requests. There should not be a problem.&lt;/p&gt;</comment>
                            <comment id="13744928" author="anoop.hbase" created="Tue, 20 Aug 2013 12:37:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;Since the midpoint for index table region may not be chosen for the split, it is possible that the daughter regions of index region may have (quite) different amount of data. How can we mitigate this effect ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this wont happen. The daughter regions of index region will have similar size proportions as that of the actual table region. For an actual table region there are 10 entries in that and now its is split as 6,4.  Consider there one index for the data. The index region before the split will contain 10 entries in it and after the spilt the daugthers will have 6,4 entries each.   Only diff will be the way the half file reading will happen. In case of normal table there is a clear split point wrt RK and the readers can readup split point/ read from split point. But for the index region, both the daugther region readers need to start from the begin position and check whether each entry belongs to it or not and traverse.  After a split the compaction will happen using the HalfFileReader and split it into 2 physical files. So the reader overhead is only temporal.&lt;/p&gt;</comment>
                            <comment id="13744970" author="ram_krish" created="Tue, 20 Aug 2013 13:46:19 +0000"  >&lt;p&gt;For the indexhalf store file reader,&lt;br/&gt;
Yes, as i said in the above comment &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Mostly it will be the same data but the thing is we would read the HFile twice to create the top and bottom files for the index region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;For the namespaces I think we could move index table to a namespace so that it is not directly workable for the user something like a system table.&lt;/p&gt;</comment>
                            <comment id="13833222" author="apurtell" created="Tue, 26 Nov 2013 23:40:18 +0000"  >&lt;p&gt;Moving out of 0.98. Put back if you feel otherwise.&lt;/p&gt;</comment>
                            <comment id="13833603" author="nkeywal" created="Wed, 27 Nov 2013 09:25:08 +0000"  >&lt;p&gt;Any life here, btw?&lt;/p&gt;</comment>
                            <comment id="13833608" author="rajesh23" created="Wed, 27 Nov 2013 09:31:27 +0000"  >&lt;p&gt;Yes. I am working on this &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt;. First contributing the kernel changes needed for it and working on trunk patch.&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="13833610" author="nkeywal" created="Wed, 27 Nov 2013 09:34:50 +0000"  >&lt;p&gt;Great! Do you target the 0.98 branch, even if it could be too late for the first cut ?&lt;/p&gt;</comment>
                            <comment id="13833676" author="rajesh23" created="Wed, 27 Nov 2013 11:25:53 +0000"  >&lt;p&gt;We wanted to target 0.98 branch but I am afraid that it might be too late as it will take at least couple of weeks to come up with patch.&lt;/p&gt;</comment>
                            <comment id="13834207" author="apurtell" created="Wed, 27 Nov 2013 22:01:55 +0000"  >&lt;p&gt;I&apos;m thinking of branching 0.98 on 12/1. However, there&apos;s no reason we can&apos;t take a patch for trunk and the branch (the delta would be very small) both soon thereafter if this is about ready. Definitely we can take the &quot;kernel changes&quot; right?&lt;/p&gt;</comment>
                            <comment id="13835598" author="andylee" created="Sat, 30 Nov 2013 02:47:34 +0000"  >&lt;p&gt;Your desgin documention are very good and explicit. &lt;br/&gt;
I have some question: &lt;br/&gt;
1.Do you have verify tool to check user table and secondary index table &apos;s data, this can ensure the data consistency?&lt;br/&gt;
   like VerifyReplication.&lt;br/&gt;
2.This solution may be contain secondary index bulkload, load the data to user table and secondary index table same time.&lt;br/&gt;
3.When I have user table and have used some time (abundant data in the table), I want to create index for some column.&lt;br/&gt;
   Is this scenario supported?&lt;/p&gt;</comment>
                            <comment id="13835610" author="anoop.hbase" created="Sat, 30 Nov 2013 04:03:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;1.Do you have verify tool to check user table and secondary index table &apos;s data, this can ensure the data consistency?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;like VerifyReplication.&lt;br/&gt;
It was there in the plan. Not yet done. +1 for having some tool for this&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;2.This solution may be contain secondary index bulkload, load the data to user table and secondary index table same time.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes this is supported. Can bulk load data to user table. The ImportTSV like tool will then create index data for the index table&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;3.When I have user table and have used some time (abundant data in the table), I want to create index for some column.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Is this scenario supported?&lt;br/&gt;
This was also done. That code is available in Git Rajesh?&lt;/p&gt;</comment>
                            <comment id="13835616" author="rajesh23" created="Sat, 30 Nov 2013 05:04:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;This was also done. That code is available in Git Rajesh?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes Anoop. Its available. We can use org.apache.hadoop.hbase.index.mapreduce.TableIndexer mapreduce job to create index for existing data.&lt;/p&gt;</comment>
                            <comment id="13836456" author="jyothi.mandava" created="Mon, 2 Dec 2013 12:00:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;Yes this is supported. Can bulk load data to user table. The ImportTSV like tool will then create index data for the index table&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Please use org.apache.hadoop.hbase.index.mapreduce.IndexImportTSV tool for updating index along with the user table data.&lt;/p&gt;</comment>
                            <comment id="13859544" author="rajesh23" created="Tue, 31 Dec 2013 16:06:15 +0000"  >&lt;p&gt;updated specifying index details part as for the latest patch.&lt;/p&gt;</comment>
                            <comment id="13860012" author="yuzhihong@gmail.com" created="Thu, 2 Jan 2014 04:15:08 +0000"  >&lt;p&gt;In figure CreateTableWithSplits, there is an arrow from CreateTableHandler to IndexMasterObserver labeled CreateIndexTableCameout. I don&apos;t find such callback in the patch. What does the arrow represent ?&lt;/p&gt;</comment>
                            <comment id="13860016" author="yuzhihong@gmail.com" created="Thu, 2 Jan 2014 05:04:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;First 2 bytes is the length of the start key of the index region and last 2 bytes is the offset to the actual table&#8217;s rowkey within the index rowkey.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you explain the second sentence in more detail ?&lt;/p&gt;

&lt;p&gt;In section 5:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;LoadIncrementalHFiles utility can be used for this.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;IndexLoadIncrementalHFile is the utility that does the loading into index table.&lt;/p&gt;

&lt;p&gt;For section 6. Bulk load data to indexed table:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Create a new mapper class which&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Is IndexTsvImporterMapper this new class ? There is another mapper, IndexCreationMapper, in the patch. Neither of them has class javadoc.&lt;br/&gt;
In the figure for section 6, there is a dummy CF under .indexTable directory. What&apos;s its purpose ?&lt;/p&gt;</comment>
                            <comment id="13860165" author="rajesh23" created="Thu, 2 Jan 2014 12:04:55 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; Thanks for review.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;In figure CreateTableWithSplits, there is an arrow from CreateTableHandler to IndexMasterObserver labeled CreateIndexTableCameout. I don&apos;t find such callback in the patch. What does the arrow represent ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Just wanted to represent coming back to IndexMasterObserver from CreateTableHandler. There are no such call backs in the code, the arrow should start from CreateTableHandler(by mistake drawn from HMaster).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can you explain the second sentence in more detail ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Since the rowkey for the index table put is like this&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
startkey of index region + index name + indexed column(s) value(s) + user table rowkey 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The last two bytes represents  starting position of actual rowkey.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;IndexLoadIncrementalHFile is the utility that does the loading into index table.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes it should be IndexLoadIncrementalHFile utility. Nice catch Ted.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Is IndexTsvImporterMapper this new class ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes its IndexTsvImporterMapper. It will be used to prepare puts for both user table index table from raw data.&lt;br/&gt;
IndexCreationMapper will be used to prepare index table puts from user table data. I will add javadoc.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;there is a dummy CF under .indexTable directory. What&apos;s its purpose ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Actually it&apos;s column family in index table name. Didn&apos;t decide the name at that time so given some name.&lt;/p&gt;</comment>
                            <comment id="13865001" author="rajesh23" created="Wed, 8 Jan 2014 02:48:53 +0000"  >&lt;p&gt;Updated design doc addressing Ted&apos;s comments.&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="13868757" author="xieliang007" created="Sat, 11 Jan 2014 12:25:59 +0000"  >&lt;p&gt;to me, one main drawback of this design is the required padding mechanism, for &quot;index name&quot; section inside index table&apos;s row key, maybe we can give a doc to educate end-user,  but other &quot;indexed column(s) value(s)&quot;, are totally depend on real user scenario, e.g. most of indexed column value probably very short, say &quot;a&quot;, and a few long value, say &quot;abode...z&quot;, then even for the short &quot;a&quot; value, based on current design, we still need to pad to sth like &quot;a000..0&quot;, am i correct?   i don&apos;t have a better improvement idea through...&lt;/p&gt;</comment>
                            <comment id="13868759" author="xieliang007" created="Sat, 11 Jan 2014 12:36:26 +0000"  >&lt;p&gt;another problem: about scan(e.g. there&apos;s a filter on the indexed column) performance. how to decide or evaluate when we do the query into user table directly and when we do the query into index table first then do the (multi-)get into user table ?&lt;/p&gt;</comment>
                            <comment id="13868812" author="anoop.hbase" created="Sat, 11 Jan 2014 15:10:36 +0000"  >&lt;p&gt;I think instead of the padding approach, can change this to having a separator byte. (0 byte) .. That should work out.&lt;/p&gt;</comment>
                            <comment id="13868831" author="ram_krish" created="Sat, 11 Jan 2014 16:42:53 +0000"  >&lt;p&gt;&amp;gt;&amp;gt;bout scan(e.g. there&apos;s a filter on the indexed column) performance. how to decide or evaluate when we do the query into user table directly and when we do the query into index table first then do the (multi-)get into user table ?&lt;br/&gt;
You mean the dynamic decision whether to use index or not?  Should that be user decision?&lt;/p&gt;</comment>
                            <comment id="13897450" author="jamestaylor" created="Tue, 11 Feb 2014 02:06:53 +0000"  >&lt;p&gt;Is it possible to break this JIRA down into smaller pieces? The only part that Phoenix would need is the custom load balancer that keeps two regions co-located. If that functionality was available, I believe that Phoenix could support a local index option to compliment its global index feature. Would it be possible for that to be a separate JIRA that is tackled first?&lt;/p&gt;</comment>
                            <comment id="13897526" author="ram_krish" created="Tue, 11 Feb 2014 04:28:57 +0000"  >&lt;p&gt;&amp;gt;&amp;gt;The only part that Phoenix would need is the custom load balancer that keeps two regions co-located. If that functionality was available&lt;br/&gt;
This is like 95% outside the hbase code.  I think some small part we had a dependency on the hbase code.  Rajesh could clarify that as for the current status.&lt;br/&gt;
We just wrote a custom balancer and all the logic of colocating the regions was in that balancer. So should be easy for Phoenix too.&lt;/p&gt;</comment>
                            <comment id="13897547" author="jamestaylor" created="Tue, 11 Feb 2014 05:32:45 +0000"  >&lt;p&gt;Wow, I didn&apos;t realize so much of the custom load balancer was outside of HBase. Would there be interest in submitting a patch to Phoenix for this? It could be done on the 4.0 branch that works with 0.98. Is the other 5% already in the HBase code base?&lt;/p&gt;</comment>
                            <comment id="13897556" author="rajesh23" created="Tue, 11 Feb 2014 05:54:58 +0000"  >&lt;p&gt;Yes most of the code outside of HBase.The are few dependencies required to handle master restart scenarios and split scenarios. The changes are not present in HBase code base.&lt;/p&gt;</comment>
                            <comment id="13897569" author="anoop.hbase" created="Tue, 11 Feb 2014 06:34:09 +0000"  >&lt;p&gt;What all core changes still we need to get in HBase?  I know some changes in HRegion.  What abt the Master and collocation and balancer side changes?  Suggest raising those as subtasks to this JIra.  Even the load balancer also raise as a Subtask here.  Later we can raise in Phoenix also and copy the patch to there. &lt;/p&gt;</comment>
                            <comment id="13897572" author="ram_krish" created="Tue, 11 Feb 2014 06:39:04 +0000"  >&lt;p&gt;May be only the apis need to go in HBase and the other one will have in Phoenix for now.  Later can merge to hbase also (i mean the actual customized load balancer).&lt;/p&gt;</comment>
                            <comment id="13897580" author="rajesh23" created="Tue, 11 Feb 2014 06:51:43 +0000"  >&lt;blockquote&gt;&lt;p&gt;What abt the Master and collocation and balancer side changes? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;As of now there are two APIs to update/remove region location in the custom balancer.&lt;br/&gt;
These APIs should be called when region is online or offline.&lt;/p&gt;






</comment>
                            <comment id="13906872" author="hoarhoar" created="Thu, 20 Feb 2014 11:15:45 +0000"  >&lt;p&gt;hi rajeshbabu , how do i add a new index on existing table. I get the  HTableDescriptor using HBaseAdmin.getTableDescriptor(table name ), and how to convert it to IndexedHTableDescriptor?&lt;/p&gt;</comment>
                            <comment id="13906880" author="rajesh23" created="Thu, 20 Feb 2014 11:45:20 +0000"  >&lt;p&gt;If you have some data then you can use org.apache.hadoop.hbase.index.mapreduce.TableIndexer mapreduce job to create index for existing data.&lt;/p&gt;

&lt;p&gt;Are you refering IndexedHTableDescriptor from &lt;a href=&quot;https://github.com/Huawei-Hadoop/hindex/blob/master/secondaryindex/src/main/java/org/apache/hadoop/hbase/index/IndexedHTableDescriptor.java?&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Huawei-Hadoop/hindex/blob/master/secondaryindex/src/main/java/org/apache/hadoop/hbase/index/IndexedHTableDescriptor.java?&lt;/a&gt;&lt;br/&gt;
If yes, currently you need to create IndexHTableDescriptor and set columns and properties of htabledescritor to IndexTableDescriptor object and add new indices(its little ugly). We have in plan to support add and drop indices dynamically.&lt;/p&gt;

&lt;p&gt;In current work we are setting indices details as meta data to HTableDescriptor(see HTableDescriptor.java#setValue(byte[], byte[])) so need not have special table descritor(IndexedTableDescriptor).&lt;br/&gt;
For ex:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    TableIndices tableIndices = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TableIndices();
    tableIndices.addIndex(iSpec);
    htd.setValue(Constants.INDEX_SPEC_KEY, tableIndices.toByteArray());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="13909992" author="hoarhoar" created="Mon, 24 Feb 2014 03:00:00 +0000"  >&lt;p&gt;thank you very much ,rajeshbabu. &lt;/p&gt;</comment>
                            <comment id="14092057" author="nemccarthy" created="Sun, 10 Aug 2014 08:58:19 +0000"  >&lt;p&gt;I&apos;m keen to see this. What is the progress. Anything I can do to help?&lt;/p&gt;</comment>
                            <comment id="14539730" author="anoop.hbase" created="Tue, 12 May 2015 12:13:03 +0000"  >&lt;p&gt;As discussed above and in mail list, it is not possible for a global solution which satisfy all sort of needs.  So to HBase core code we might not add any indexing.  As you said, Phoenix have local indexing solution. It also has global indexing solution.  Depending on the need and data size user can opt for any.  The local indexing try to reduce the write time hit and make things 100% strong consistent model.  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But hey! What do I know. I&apos;m not a committer ... ;-P&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;One idea or comment is treated as per the quality of it and not based on whether it is from committer or not. I have not come across some non committers complaining that their comments/ideas are just ignored.  Just saying.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12684812">HBASE-10167</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12694457">HBASE-10498</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12547614">HBASE-5617</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12598763" name="SecondaryIndex Design.pdf" size="1127555" author="rajesh23" created="Mon, 19 Aug 2013 14:27:16 +0000"/>
                            <attachment id="12620942" name="SecondaryIndex Design_Updated.pdf" size="1139614" author="rajesh23" created="Tue, 31 Dec 2013 16:06:15 +0000"/>
                            <attachment id="12621909" name="SecondaryIndex Design_Updated_2.pdf" size="1098964" author="rajesh23" created="Wed, 8 Jan 2014 02:48:53 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12663973">HBASE-9241</subtask>
                            <subtask id="12663987">HBASE-9244</subtask>
                            <subtask id="12664073">HBASE-9249</subtask>
                            <subtask id="12664377">HBASE-9261</subtask>
                            <subtask id="12667735">HBASE-9489</subtask>
                            <subtask id="12680506">HBASE-10016</subtask>
                            <subtask id="12685961">HBASE-10222</subtask>
                            <subtask id="12696241">HBASE-10576</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Aug 2013 09:18:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>343358</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 31 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1n7pj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>343662</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.96notable Phoenix</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                </customfields>
    </item>
</channel>
</rss>