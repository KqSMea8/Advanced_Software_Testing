<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:50:54 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14215/HBASE-14215.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14215] Default cost used for PrimaryRegionCountSkewCostFunction is not sufficient </title>
                <link>https://issues.apache.org/jira/browse/HBASE-14215</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Current multiplier of 500 used in the stochastic balancer cost function &lt;tt&gt;PrimaryRegionCountSkewCostFunction&lt;/tt&gt; to calculate the cost of  total primary replication skew doesn&apos;t seem to be sufficient to prevent the skews (Refer &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14110&quot; title=&quot;Add CostFunction for balancing primary region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14110&quot;&gt;&lt;del&gt;HBASE-14110&lt;/del&gt;&lt;/a&gt;). We would want the default cost to be a higher value so that skews in primary region replica has higher cost. The following is the test result by setting the multiplier value to 10000 (same as the region replica rack cost multiplier) on a 3 Rack 9 RS node cluster which seems to get the balancer distribute the primaries uniformly.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Initial Primary replica distribution - using the current multiplier&lt;/b&gt;	&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  102&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n11&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n9&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;    88&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n11&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n9&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   124&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  135&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n11&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  124&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n9&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;    129&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;b&gt;After long duration of read &amp;amp; writes - using current multiplier&lt;/b&gt;	&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r1n10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  102&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r1n11&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r1n9&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;    88&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r2n10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r2n11&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r2n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   124&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r3n10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  135&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r3n11&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  124&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r3n9&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;    129&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;b&gt;After manual balancing&lt;/b&gt; 	&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r1n10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  102&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r1n11&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r1n9&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;    88&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r2n10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r2n11&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r2n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   124&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r3n10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  135&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r3n11&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  124&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r3n9&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;    129&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;b&gt;Increased multiplier for primaryRegionCountSkewCost to 10000&lt;/b&gt;	&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r1n10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  114&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r1n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 113&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r1n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   114&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r2n10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  114&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r2n11&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  114&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r2n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   113&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r3n10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  115&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r3n11&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  115&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; r3n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   115 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Setting the &lt;tt&gt;PrimaryRegionCountSkewCostFunction&lt;/tt&gt; multiplier value to 10000 should help HBase general use.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12855403">HBASE-14215</key>
            <summary>Default cost used for PrimaryRegionCountSkewCostFunction is not sufficient </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="gsbiju">Biju Nair</reporter>
                        <labels>
                    </labels>
                <created>Wed, 12 Aug 2015 00:02:42 +0000</created>
                <updated>Fri, 4 Sep 2015 18:27:42 +0000</updated>
                                                                            <component>Balancer</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="14692865" author="hadoopqa" created="Wed, 12 Aug 2015 03:41:11 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12749992/14215-v1.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12749992/14215-v1.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 135451477f2e4e95a69033c47523ea063f67b5e2.&lt;br/&gt;
  ATTACHMENT ID: 12749992&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestProcessBasedCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportExport&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScanBase.testScan(TestTableInputFormatScanBase.java:244)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan2.testScanOPPToEmpty(TestTableInputFormatScan2.java:70)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestImportTsv.testBulkOutputWithAnExistingTableNoStrictTrue(TestImportTsv.java:203)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestImportExport.testImport94Table(TestImportExport.java:231)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15064//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15064//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15064//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15064//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15064//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15064//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15064//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15064//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14692873" author="yuzhihong@gmail.com" created="Wed, 12 Aug 2015 03:56:47 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Failing test : org.apache.hadoop.hbase.mapreduce.TestImportExport
Failing test : org.apache.hadoop.hbase.util.TestProcessBasedCluster
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above failures have occurred in other QA runs.&lt;br/&gt;
Both TestStochasticLoadBalancer2 and TestStochasticLoadBalancer passed.&lt;/p&gt;</comment>
                            <comment id="14694308" author="ndimiduk" created="Wed, 12 Aug 2015 22:26:30 +0000"  >&lt;p&gt;Seems alright to me &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gsbiju&quot; class=&quot;user-hover&quot; rel=&quot;gsbiju&quot;&gt;Biju Nair&lt;/a&gt;, though I haven&apos;t spent much time in stochastic balancer. These replica weights of 10000 seem really high compared to the other weight values used in other cost functions. Locality, for instance, is only 25, and this often has a high impact on multi-tenent environments (so much so that we have &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6721&quot; title=&quot;RegionServer Group based Assignment&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6721&quot;&gt;&lt;del&gt;HBASE-6721&lt;/del&gt;&lt;/a&gt;). Any chance you can test on a wider variety of cluster sizes and rack distributions to give us a better feel for how this will behave in practice? I&apos;d be willing to commit with a couple more data points.&lt;/p&gt;

&lt;p&gt;I think &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; have spent more time on balancer, maybe they can weigh in too.&lt;/p&gt;</comment>
                            <comment id="14694328" author="eclark" created="Wed, 12 Aug 2015 22:35:36 +0000"  >&lt;p&gt;That cost is pretty freaking high and it could lead to some churn (I really think we need to do another pass over the weights that are currently there).&lt;br/&gt;
If there&apos;s an issue with not converging on for primary replica&apos;s then we should add a candidate generator. That usually has a larger effect on converging then the weights.&lt;/p&gt;</comment>
                            <comment id="14696795" author="enis" created="Fri, 14 Aug 2015 10:07:44 +0000"  >&lt;p&gt;Agreed that 10K for cost is too much. We have &lt;tt&gt;hbase.master.balancer.stochastic.regionReplicaRackCostKey=10000&lt;/tt&gt; and &lt;tt&gt;hbase.master.balancer.stochastic.regionReplicaHostCostKey=100000&lt;/tt&gt;. These are excplicitly set high so that, these costs dominate and have the affect of doing a soft-constraint on replica anti-colocation. Setting &lt;tt&gt;PrimaryRegionCountSkewCostFunction=10000&lt;/tt&gt; probably causes host based replica placement to work correctly, but rack based anti-colocation is given up. &lt;/p&gt;

&lt;p&gt;Biju, did you try with smaller costs? You should be able to set it via conf without changing the code. &lt;/p&gt;</comment>
                            <comment id="14703160" author="gsbiju" created="Wed, 19 Aug 2015 15:11:32 +0000"  >&lt;p&gt;Thanks all for the comments. The following is the reasoning for setting the value to 10000 for &lt;tt&gt;hbase.master.balancer.stochastic.primaryRegionCountCost&lt;/tt&gt; in the context of region replication &amp;gt; 1 based on my limited understanding.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;High value of 100000 set to &lt;tt&gt;regionReplicaHostCostKey&lt;/tt&gt; helps with reducing/eliminating duplicate replication of regions on hosts and in turn improving availability. Elimination of duplicate regions on hosts also helps with performance with secondary calls being made to different hosts and hence distributing the query load.&lt;/li&gt;
	&lt;li&gt;The function to reduce duplicates of region replicas on the same rack which uses the multiplier &lt;tt&gt;regionReplicaRackCostKey&lt;/tt&gt; helps with availability but not as much with the performance of queries since they get distributed to the servers with no consideration to rack.&lt;/li&gt;
	&lt;li&gt;The new function to reduce skews of primary region replicas on servers is to distribute the primaries uniformly across all the servers which intern distributes query load and improves performance since by default all queries will get serviced by primary replicas.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;While duplicate replicas on servers are eliminated by high cost of 100000 which also helps with performance, the next criteria was to balance between rack level availability vs request performance. By setting &lt;tt&gt;primaryRegionCountCost&lt;/tt&gt; equal to  &lt;tt&gt;regionReplicaRackCostKey&lt;/tt&gt; which is 10000 the assumption was that the candidate cluster which will be used will be balanced for availability and performance. Let me know what was overlooked so it will help with the understanding.&lt;/p&gt;

&lt;p&gt;As suggested will try other cost values and update the ticket.  Currently we are using site.xml to vary the costs.&lt;/p&gt;</comment>
                            <comment id="14709750" author="gsbiju" created="Mon, 24 Aug 2015 18:06:00 +0000"  >&lt;p&gt;The following are the distributions of primary replication with different primary replication skew cost multipliers. The two sets of data are before and after execution of balancer for each cost multiplier. For this case the test shows that the primary will be uniformly distributed when the &lt;tt&gt;primaryRegionCountCost&lt;/tt&gt; multiplier is somewhere in between 2000 &amp;amp; 4000 which is higher than all other multiplier except &lt;tt&gt;regionReplicaRackCostKey&lt;/tt&gt; and &lt;tt&gt;regionReplicaHostCostKey&lt;/tt&gt;. So what is the drawback of setting &lt;tt&gt;primaryRegionCountCost&lt;/tt&gt; equals &lt;tt&gt;regionReplicaRackCostKey&lt;/tt&gt; if some one is targetting to get uniform query distribution which inturn helps with performance.&lt;/p&gt;

&lt;p&gt;============================	&lt;br/&gt;
Cost multiplier of 500	&lt;br/&gt;
============================	&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Host  &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Cnt &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;------&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;hr /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;103 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;102 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;140 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;134 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;136 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;103 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;103 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;103 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;103 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Host  &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Cnt &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;------&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;hr /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;103 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;102 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;140 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;134 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;136 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;103 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;103 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;103 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;103 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;============================	&lt;br/&gt;
Cost multiplier of 1000	&lt;br/&gt;
============================	&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Host  &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Cnt &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;------&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;hr /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;113 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;113 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;132 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;113 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;98 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Host  &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Cnt &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;------&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;hr /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;113 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;113 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;132 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;113 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;98 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;============================	&lt;br/&gt;
Cost multiplier of 2000	&lt;br/&gt;
============================	&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Host  &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Cnt &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;------&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;hr /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;112 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;111 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;113 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;124 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;135 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;88 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Host  &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Cnt &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;------&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;hr /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;117 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;113 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;107 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;116 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;============================	&lt;br/&gt;
Cost multiplier of 4000	&lt;br/&gt;
============================	&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Host  &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Cnt &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;------&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;hr /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;176 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;120 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;161 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Host  &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Cnt &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;------&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;hr /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;113 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n11 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n9 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</comment>
                            <comment id="14726404" author="enis" created="Tue, 1 Sep 2015 23:15:02 +0000"  >&lt;p&gt;Thanks Biju for coming up with these numbers. Your summary above is pretty good. It seems pretty possible that we cannot go out of the local minimas in the search for the &quot;global optimum&quot; when we are doing greedy descent search in the SLB when we try with 3 racks and 9 servers. Possible that high costs like 4000 helps overcome the local minima coming from the candidate temporary plans that co-locates the region replicas in the same rack or cluster (those with 10K cost). Since 3 racks and region replication = 3, LB cannot &quot;simulate&quot; new candidate plans effectively.  &lt;/p&gt;

&lt;p&gt;The rack cost is needed for cases where losing a rack should still not lose a replica (by ensuring that we are not co-locating in the same rack), but it is optional. Would it be possible to repeat the experiment with &lt;tt&gt;hbase.master.balancer.stochastic.regionReplicaRackCostKey=0&lt;/tt&gt; which should effectively disable the rack based cost. The expectation is that with rack based costs gone, the LB would be able to come up with better plans even with &lt;tt&gt;hbase.master.balancer.stochastic.primaryRegionCountCost=500&lt;/tt&gt;. &lt;/p&gt;</comment>
                            <comment id="14729693" author="gsbiju" created="Thu, 3 Sep 2015 20:08:16 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; for your comments. Disabling rack awareness will enable SLB to come-up with a better plan even with lower &lt;tt&gt;hbase.master.balancer.stochastic.primaryRegionCountCost&lt;/tt&gt;. Will try to do some tests.&lt;/p&gt;

&lt;p&gt;Given that potential candidates are generated randomly, one would assume that &quot;global optimum&quot; will be attained with multiple candidate generations and there will be no &quot;local optimum&quot;. No?&lt;/p&gt;

&lt;p&gt;As we included a new cost function for primary replication skew, will taking into account of primary replicas in the candidate generator (may be in &lt;tt&gt;RegionReplicaCandidateGenerator&lt;/tt&gt;) can help keep &lt;tt&gt;hbase.master.balancer.stochastic.primaryRegionCountCost&lt;/tt&gt; lower?&lt;/p&gt;</comment>
                            <comment id="14729961" author="enis" created="Thu, 3 Sep 2015 22:44:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;Given that potential candidates are generated randomly, one would assume that &quot;global optimum&quot; will be attained with multiple candidate generations and there will be no &quot;local optimum&quot;. No?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;SLB works something like the &lt;a href=&quot;https://en.wikipedia.org/wiki/Gradient_descent&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://en.wikipedia.org/wiki/Gradient_descent&lt;/a&gt;, except that we do not generate all the &quot;candidates&quot; that are the neighbors for the next assignment plan. We randomly generate a new candidate plan, and we always accept the candidate plan if it reduces the cost. This greedy search is thus vulnerable to local minimas. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;As we included a new cost function for primary replication skew, will taking into account of primary replicas in the candidate generator (may be in RegionReplicaCandidateGenerator) can help keep hbase.master.balancer.stochastic.primaryRegionCountCost lower?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It might. RRCG has a code section which prefers to move the secondary region replica to move out, rather than a primary. Maybe that is causing more primary region count skew more. Do you want to try cutting it out, or trying with a changing the candidate generator? I can take on this if you want (there is a way that can simulate a cluster and assignment plans in a unit test env so that we can iterate quick). &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-comment&quot;&gt;// we have found the primary id &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the region to move. Now find the actual regionIndex
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// with the given primary, prefer to move the secondary region.
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; j = 0; j &amp;lt; regionsPerGroup.length; j++) {
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; regionIndex = regionsPerGroup[j];
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (selectedPrimaryIndex == regionIndexToPrimaryIndex[regionIndex]) {
          &lt;span class=&quot;code-comment&quot;&gt;// always move the secondary, not the primary
&lt;/span&gt;          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (selectedPrimaryIndex != regionIndex) {
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; regionIndex;
          }
        }
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14730875" author="gsbiju" created="Fri, 4 Sep 2015 14:26:58 +0000"  >&lt;p&gt;Primary replica distribution with &lt;tt&gt;hbase.master.balancer.stochastic.regionReplicaRackCostKey=0&lt;/tt&gt; and &lt;tt&gt;hbase.master.balancer.stochastic.primaryRegionCountCost=500&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;*&lt;b&gt;Randomly assigned the primaries with balancer off&lt;/b&gt;*&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n9	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;112&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n10	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;108&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n9	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;116&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n10	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;134&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n11	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;119&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n11	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;109&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n10	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;119&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n11	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n9	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;95&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;*&lt;b&gt;Primary distribution after balancer run&lt;/b&gt;*&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n9	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n10	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;115&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n9	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n10	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n11	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r2n11	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n10	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r1n9	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;r3n11	&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;114&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;As expected the primary replicas seem to get uniformly distributed even with a low cost multiplier for &lt;tt&gt;hbase.master.balancer.stochastic.primaryRegionCountCost&lt;/tt&gt; when rack awareness is disabled.&lt;/p&gt;</comment>
                            <comment id="14731202" author="enis" created="Fri, 4 Sep 2015 18:27:42 +0000"  >&lt;p&gt;Thanks Biju. So, the theory was correct about the local minima? &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12749992" name="14215-v1.txt" size="932" author="yuzhihong@gmail.com" created="Wed, 12 Aug 2015 00:08:28 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 12 Aug 2015 03:41:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 15 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2iss7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>