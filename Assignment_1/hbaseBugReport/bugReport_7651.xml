<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:47:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7651/HBASE-7651.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7651] RegionServerSnapshotManager fails with CancellationException if previous snapshot fails in per region task</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7651</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I&apos;ve reproduced this problem consistently on a 20 node cluster.&lt;/p&gt;

&lt;p&gt;The first run fails on a node (jon-snaphots-2 in this case) to take snapshot due to a NotServingRegionException (this is acceptable)&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2013-01-23 13:32:48,631 DEBUG org.apache.hadoop.hbase.errorhandling.ForeignExceptionDispatcher:  accepting received exception
org.apache.hadoop.hbase.errorhandling.ForeignException$ProxyThrowable via jon-snapshots-2.ent.cloudera.com,22101,1358976524369:org.apache.hadoop.hbase.errorhandling.ForeignException$ProxyThrowable: org.apache.hadoop.hbase.NotServingRegionException: TestTable,0002493652,1358976652443.b858147ad87a7812ac9a73dd8fef36ad. is closing
        at org.apache.hadoop.hbase.errorhandling.ForeignException.deserialize(ForeignException.java:184)
        at org.apache.hadoop.hbase.procedure.ZKProcedureCoordinatorRpcs.abort(ZKProcedureCoordinatorRpcs.java:240)
        at org.apache.hadoop.hbase.procedure.ZKProcedureCoordinatorRpcs$1.nodeCreated(ZKProcedureCoordinatorRpcs.java:182)
        at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.process(ZooKeeperWatcher.java:294)
        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:519)
        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:495)
Caused by: org.apache.hadoop.hbase.errorhandling.ForeignException$ProxyThrowable: org.apache.hadoop.hbase.NotServingRegionException: TestTable,0002493652,1358976652443.b858147ad87a7812ac9a73dd8fef36ad. is closing
        at org.apache.hadoop.hbase.regionserver.snapshot.RegionServerSnapshotManager$SnapshotSubprocedurePool.waitForOutstandingTasks(RegionServerSnapshotManager.java:343)
        at org.apache.hadoop.hbase.regionserver.snapshot.FlushSnapshotSubprocedure.flushSnapshot(FlushSnapshotSubprocedure.java:107)
        at org.apache.hadoop.hbase.regionserver.snapshot.FlushSnapshotSubprocedure.insideBarrier(FlushSnapshotSubprocedure.java:123)
        at org.apache.hadoop.hbase.procedure.Subprocedure.call(Subprocedure.java:181)
        at org.apache.hadoop.hbase.procedure.Subprocedure.call(Subprocedure.java:52)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
2013-01-23 13:32:48,631 DEBUG org.apache.hadoop.hbase.errorhandling.ForeignExceptionDispatcher:  Recieved error, notifying listeners...
2013-01-23 13:32:48,730 ERROR org.apache.hadoop.hbase.procedure.Procedure: Procedure &apos;pe-6&apos; execution failed!
org.apache.hadoop.hbase.errorhandling.ForeignException$ProxyThrowable via jon-snapshots-2.ent.cloudera.com,22101,1358976524369:org.apache.hadoop.hbase.errorhandling.ForeignException$ProxyThrowable: org.apache.hadoop.hbase.NotServingRegionException: TestTable,0002493652,1358976652443.b858147ad87a7812ac9a73dd8fef36ad. is closing
        at org.apache.hadoop.hbase.errorhandling.ForeignExceptionDispatcher.rethrowException(ForeignExceptionDispatcher.java:84)
        at org.apache.hadoop.hbase.procedure.Procedure.waitForLatch(Procedure.java:357)
        at org.apache.hadoop.hbase.procedure.Procedure.call(Procedure.java:203)
        at org.apache.hadoop.hbase.procedure.Procedure.call(Procedure.java:68)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
Caused by: org.apache.hadoop.hbase.errorhandling.ForeignException$ProxyThrowable: org.apache.hadoop.hbase.NotServingRegionException: TestTable,0002493652,1358976652443.b858147ad87a7812ac9a73dd8fef36ad. is closing
        at org.apache.hadoop.hbase.regionserver.snapshot.RegionServerSnapshotManager$SnapshotSubprocedurePool.waitForOutstandingTasks(RegionServerSnapshotManager.java:343)
        at org.apache.hadoop.hbase.regionserver.snapshot.FlushSnapshotSubprocedure.flushSnapshot(FlushSnapshotSubprocedure.java:107)
        at org.apache.hadoop.hbase.regionserver.snapshot.FlushSnapshotSubprocedure.insideBarrier(FlushSnapshotSubprocedure.java:123)
        at org.apache.hadoop.hbase.procedure.Subprocedure.call(Subprocedure.java:181)
        at org.apache.hadoop.hbase.procedure.Subprocedure.call(Subprocedure.java:52)
        ... 5 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Subsequent snapshot attempts that require jon-snapshot-2 to participate fail like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.hadoop.hbase.errorhandling.ForeignException$ProxyThrowable via jon-snapshots-2.ent.cloudera.com,22101,1358976524369:org.apache.hadoop.hbase.errorhandling.ForeignException$ProxyThrowable: java.util.concurrent.CancellationException
        at org.apache.hadoop.hbase.errorhandling.ForeignException.deserialize(ForeignException.java:184)
        at org.apache.hadoop.hbase.procedure.ZKProcedureCoordinatorRpcs.abort(ZKProcedureCoordinatorRpcs.java:240)
        at org.apache.hadoop.hbase.procedure.ZKProcedureCoordinatorRpcs$1.nodeCreated(ZKProcedureCoordinatorRpcs.java:182)
        at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.process(ZooKeeperWatcher.java:294)
        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:519)
        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:495)
Caused by: org.apache.hadoop.hbase.errorhandling.ForeignException$ProxyThrowable: java.util.concurrent.CancellationException
        at org.apache.hadoop.hbase.procedure.Subprocedure.cancel(Subprocedure.java:270)
        at org.apache.hadoop.hbase.procedure.Subprocedure.call(Subprocedure.java:202)
        at org.apache.hadoop.hbase.procedure.Subprocedure.call(Subprocedure.java:52)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
2013-01-23 13:32:59,557 DEBUG org.apache.hadoop.hbase.errorhandling.ForeignExceptionDispatcher:  Recieved error, notifying listeners...
2013-01-23 13:32:59,810 ERROR org.apache.hadoop.hbase.procedure.Procedure: Procedure &apos;pe-7&apos; execution failed!
org.apache.hadoop.hbase.errorhandling.ForeignException$ProxyThrowable via jon-snapshots-2.ent.cloudera.com,22101,1358976524369:org.apache.hadoop.hbase.errorhandling.ForeignException$ProxyThrowable: java.util.concurrent.CancellationException
        at org.apache.hadoop.hbase.errorhandling.ForeignExceptionDispatcher.rethrowException(ForeignExceptionDispatcher.java:84)
        at org.apache.hadoop.hbase.procedure.Procedure.waitForLatch(Procedure.java:357)
        at org.apache.hadoop.hbase.procedure.Procedure.call(Procedure.java:203)
        at org.apache.hadoop.hbase.procedure.Procedure.call(Procedure.java:68)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
Caused by: org.apache.hadoop.hbase.errorhandling.ForeignException$ProxyThrowable: java.util.concurrent.CancellationException
        at org.apache.hadoop.hbase.procedure.Subprocedure.cancel(Subprocedure.java:270)
        at org.apache.hadoop.hbase.procedure.Subprocedure.call(Subprocedure.java:202)
        at org.apache.hadoop.hbase.procedure.Subprocedure.call(Subprocedure.java:52)
        ... 5 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12628970">HBASE-7651</key>
            <summary>RegionServerSnapshotManager fails with CancellationException if previous snapshot fails in per region task</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12619005">HBASE-7290</parent>
                                    <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jmhsieh">Jonathan Hsieh</assignee>
                                    <reporter username="jmhsieh">Jonathan Hsieh</reporter>
                        <labels>
                    </labels>
                <created>Wed, 23 Jan 2013 21:57:14 +0000</created>
                <updated>Mon, 23 Sep 2013 18:31:10 +0000</updated>
                            <resolved>Thu, 24 Jan 2013 23:27:53 +0000</resolved>
                                    <version>hbase-7290</version>
                                    <fixVersion>0.95.0</fixVersion>
                                    <component>snapshots</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13561156" author="jmhsieh" created="Wed, 23 Jan 2013 22:16:19 +0000"  >&lt;p&gt;NSRE&apos;s are possible with this snapshotting implementation (master gets a list of regions/regionservers to care about, regions move, and then the snapshotting request is sent to the rs&apos;s.)&lt;/p&gt;

&lt;p&gt;Restarting the particular node (jon-snapshot-2 from the example) fixes the problem but when the next NSRE pops up elsewhere we get stuck again.&lt;/p&gt;</comment>
                            <comment id="13561198" author="yuzhihong@gmail.com" created="Wed, 23 Jan 2013 22:56:36 +0000"  >&lt;p&gt;Line 343 in RegionServerSnapshotManager#waitForOutstandingTasks():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
            LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;cancelling region task&quot;&lt;/span&gt;);
            f.cancel(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Shall we pass false to cancel() ?&lt;/p&gt;</comment>
                            <comment id="13561325" author="jmhsieh" created="Thu, 24 Jan 2013 01:34:16 +0000"  >&lt;p&gt;I took a bit of digging but I have a fix that I&apos;m currently testing. &lt;/p&gt;

&lt;p&gt;Root cause:  We have a shared SnapshotSubprocedurePool object per region server for all snapshots instead of one per snapshot per regionserver.  Internally it uses a java.util.concurrent.ExecutorCompletionService that has its own java.util.concurrent.ThreadPoolExecutor.  We were actually getting cancelled snapshot region tasks from the previous snapshots request!&lt;/p&gt;

&lt;p&gt;The SnasphotSubprocedurePool needs to be drained of all Futures &amp;#8211; when cancelling we still need to pull them out of the completion queue.  Previously we we only pulled the successful ones &amp;#8211; any others would remain and the next snapshot request would enqueue more snapshot region tasks but fail right a way pulling out the old cancelled tasks.  Since the completion queue is filled as tasks are completed/cancelled, we never drain the thing completely.&lt;/p&gt;

&lt;p&gt;I have a rough draft of the patch running on a 20 node cluster currently and results are promising so far.  I&apos;ll polish and post after it goes for a few hours.&lt;/p&gt;</comment>
                            <comment id="13561328" author="jmhsieh" created="Thu, 24 Jan 2013 01:35:42 +0000"  >&lt;p&gt;Here&apos;s a test program I wrote to understand the sematnics better.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class TestTaskCancels {
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Log LOG = LogFactory.getLog(TestTaskCancels.class);

  @Test
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testCompletionServiceCancellationSemantics() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException { 
    
    ThreadPoolExecutor executor = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ThreadPoolExecutor(1, 3, 60000, TimeUnit.MILLISECONDS,
        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LinkedBlockingQueue&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Runnable&lt;/span&gt;&amp;gt;(), &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DaemonThreadFactory(&lt;span class=&quot;code-quote&quot;&gt;&quot;pool&quot;&lt;/span&gt;));
    ExecutorCompletionService&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt; taskPool = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ExecutorCompletionService&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt;(executor);

    Callable&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt; failFast = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Callable&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt;() {
      @Override
      &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt; call() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(500);
        LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;failing first&quot;&lt;/span&gt;);
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;code-quote&quot;&gt;&quot;failing first&quot;&lt;/span&gt;);
      }
    };
    
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; count = 5;
    Callable&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt;[] succeedSlows = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Callable[count];
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; count ; i++) {
      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; j = i;
      succeedSlows[i] = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Callable&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt;() {
        @Override
        &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt; call() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
          LOG.info(j + &lt;span class=&quot;code-quote&quot;&gt;&quot;: started right a way but&quot;&lt;/span&gt;);
          &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(1000);
          LOG.info(j + &lt;span class=&quot;code-quote&quot;&gt;&quot;: succeed after 1s&quot;&lt;/span&gt;);
          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
        }
      };
    }

    Collection&amp;lt;Future&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt;&amp;gt; tasks = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Future&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt;&amp;gt;();
    tasks.add(taskPool.submit(failFast));
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; count; i++) {
      tasks.add(taskPool.submit(succeedSlows[i]));
    }
    
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i=0; i&amp;lt; count +1; i++) {
        Future&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt; f = taskPool.take();
        f.get();
      }
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
      LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Got InterruptedException in SnapshotSubprocedurePool&quot;&lt;/span&gt;, e);
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (ExecutionException e) {
      LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Got ExecutionException in SnapshotSubprocedurePool&quot;&lt;/span&gt;, e.getCause());
    } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Future&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt; f: tasks) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!f.isDone()){
          LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;cancelling region task&quot;&lt;/span&gt;);
          f.cancel(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
        }
      }
    }
    
    &lt;span class=&quot;code-comment&quot;&gt;// kind of a hack -- we can&apos;t get the number of remaining elements in the taskPool queue.
&lt;/span&gt;    &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(100);
    
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; polled = 0;
    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt;(taskPool.poll() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;polled out a task&quot;&lt;/span&gt;);
      polled ++ ;
    }
    LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;State of task pool: &quot;&lt;/span&gt; + taskPool);
    assertEquals(5, polled);
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13561858" author="jmhsieh" created="Thu, 24 Jan 2013 18:55:34 +0000"  >&lt;p&gt;First cut of patch.  Need to add unit test.  Something very similar to this has been testing on 20 node cluster for several hours. Not all snapshot succeed but the snapshotting mechanism no longer gets stuck.&lt;/p&gt;</comment>
                            <comment id="13561924" author="mbertozzi" created="Thu, 24 Jan 2013 20:07:10 +0000"  >&lt;p&gt;+1, the core of this patch is having one SubprocedurePool per Subprocedure&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     &lt;span class=&quot;code-keyword&quot;&gt;switch&lt;/span&gt; (snapshot.getType()) {
     &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; FLUSH:
+      SnapshotSubprocedurePool taskManager =
+        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SnapshotSubprocedurePool(rss.getServerName().toString(), conf);
       &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FlushSnapshotSubprocedure(member, exnDispatcher, wakeMillis,
           timeoutMillis, involvedRegions, snapshot, taskManager);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13561986" author="yuzhihong@gmail.com" created="Thu, 24 Jan 2013 21:09:55 +0000"  >&lt;p&gt;I think the above change is fine - considering we&apos;re going to support concurrent snapshots in the future.&lt;/p&gt;

&lt;p&gt;In cleanup():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e1) {
+      &lt;span class=&quot;code-comment&quot;&gt;// TODO currently eating &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; exception, think about &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Do you want to perform some action above (such as restoring interrupt status) ?&lt;/p&gt;

&lt;p&gt;There&apos;re a lot of new log statements added in this patch. Can you remove some ?&lt;/p&gt;

&lt;p&gt;Thanks for fixing this bug.&lt;/p&gt;</comment>
                            <comment id="13562082" author="jmhsieh" created="Thu, 24 Jan 2013 22:49:17 +0000"  >&lt;p&gt;thanks for the reminder on the TODO &amp;#8211; missed it on the clean up pass.  I&apos;ll restore the interrupt flag.  I&apos;ll pull the unrelated logs/spelling fixes to this into another patch. &lt;/p&gt;

&lt;p&gt;If you all don&apos;t mind, I&apos;m going to punt on writing a unit test for this &amp;#8211; I&apos;ve spent an hour or two on this and it is non-trivial.  Instead, here&apos;s the an excerpt of the system level test I&apos;ve bene using that triggered the problem (it happened usually within 10 snapshot attempts on a 20 node cluster).&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
SSCOUNT=30

# start loading data
hbase org.apache.hadoop.hbase.PerformanceEvaluation --rows=$ROWS randomWrite 1 2&amp;gt; report.perf-eval.err &amp;amp;

# sleep a little to let the table be created
sleep 15

# fail error &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; Perf eval table is missing.
echo &lt;span class=&quot;code-quote&quot;&gt;&quot;Kernel.exit 127 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; list(&apos;TestTable&apos;).size == 0&quot;&lt;/span&gt; | hbase shell

echo &lt;span class=&quot;code-quote&quot;&gt;&quot;==== take snapshots&quot;&lt;/span&gt;
# take snapshots
# pe-snapshots.sh
echo &lt;span class=&quot;code-quote&quot;&gt;&quot;(1..$SSCOUNT).map {|x| snapshot &apos;TestTable&apos;, &apos;pe-&apos;+x.to_s}&quot;&lt;/span&gt; | hbase shell
# fail error &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; no snapshot are taken, some may fail (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; is ok)
echo &lt;span class=&quot;code-quote&quot;&gt;&quot;Kernel.exit 127 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; list_snapshots(&apos;pe-.*&apos;).size == 0&quot;&lt;/span&gt; | hbase shell
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13562102" author="yuzhihong@gmail.com" created="Thu, 24 Jan 2013 23:00:05 +0000"  >&lt;p&gt;What&apos;s the content of pe-snapshots.sh ?&lt;/p&gt;

&lt;p&gt;What are (typical) values of list_snapshots(&apos;pe-.*&apos;).size during the test run ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13562107" author="jmhsieh" created="Thu, 24 Jan 2013 23:05:15 +0000"  >&lt;p&gt;pe-snapshots.sh was the line right below it:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
echo &lt;span class=&quot;code-quote&quot;&gt;&quot;(1..$SSCOUNT).map {|x| snapshot &apos;TestTable&apos;, &apos;pe-&apos;+x.to_s}&quot;&lt;/span&gt; | hbase shell
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;list_snapshots lists the names of the snapshots that matche the regex &amp;#8211; so we try to take SSCOUNT=30 snapshots call pe-1, pe-2...pe-30, and then list all that match pe-*.   This fails only if there are not snapshots.  In the logs we&apos;d see the first log from the description and then all others would fail with essentially the second log in the description.&lt;/p&gt;</comment>
                            <comment id="13562108" author="jmhsieh" created="Thu, 24 Jan 2013 23:06:47 +0000"  >&lt;p&gt;(I used to do this manually, but now this is part of a automatic rig.)&lt;/p&gt;</comment>
                            <comment id="13562113" author="yuzhihong@gmail.com" created="Thu, 24 Jan 2013 23:10:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;then all others would fail with essentially the second log in the description.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;With the patch, the second log wouldn&apos;t appear, right ?&lt;/p&gt;

&lt;p&gt;+1 on patch after cleaning up log statements.&lt;/p&gt;</comment>
                            <comment id="13562119" author="jmhsieh" created="Thu, 24 Jan 2013 23:19:49 +0000"  >&lt;p&gt;v2 just contains the core changes and log fixes from the files where core changes occured.&lt;/p&gt;</comment>
                            <comment id="13562121" author="jmhsieh" created="Thu, 24 Jan 2013 23:21:40 +0000"  >&lt;p&gt;correct &amp;#8211; the second log does not show up anymore &amp;#8211; if there is a problem in a RS&apos;s region task, it exits in a clean enough way to that future snapshots requests can succeed.  (before the patch, all subsequent snapshotting requests would get stuck).&lt;/p&gt;</comment>
                            <comment id="13562130" author="jmhsieh" created="Thu, 24 Jan 2013 23:27:35 +0000"  >&lt;p&gt;I&apos;ve committed to the snapshots branch.&lt;/p&gt;</comment>
                            <comment id="13562447" author="yuzhihong@gmail.com" created="Fri, 25 Jan 2013 05:50:16 +0000"  >&lt;p&gt;In class SnapshotSubprocedurePool:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      executor = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ThreadPoolExecutor(1, threads, keepAlive, TimeUnit.MILLISECONDS,
          &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LinkedBlockingQueue&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Runnable&lt;/span&gt;&amp;gt;(), &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DaemonThreadFactory(&lt;span class=&quot;code-quote&quot;&gt;&quot;rs(&quot;&lt;/span&gt;
              + name + &lt;span class=&quot;code-quote&quot;&gt;&quot;)-snapshot-pool&quot;&lt;/span&gt;));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To support concurrent snapshots, we can consider giving the executor number of threads proportional to number of regions involved in the snapshot.&lt;/p&gt;</comment>
                            <comment id="13562539" author="jmhsieh" created="Fri, 25 Jan 2013 08:34:55 +0000"  >&lt;p&gt;If we want to change it, let&apos;s file a follow on jira to change it..  I believe it could be helpful.  &lt;/p&gt;</comment>
                            <comment id="13564555" author="yuzhihong@gmail.com" created="Mon, 28 Jan 2013 19:10:00 +0000"  >&lt;p&gt;In your test runs, how much time did taking / restoring snapshot operation last ?&lt;/p&gt;</comment>
                            <comment id="13564568" author="jmhsieh" created="Mon, 28 Jan 2013 19:16:28 +0000"  >&lt;p&gt;On a loaded 5 node cluster taking an online flush snapshot takes around 2-10 seconds.  Cloning is much more variable 5-10 seconds with spikes the order of a minute.  I believe much of this time because enabling is slow (often triggers compactions).&lt;/p&gt;

&lt;p&gt;On the larger cluster it is closer to 5-30s to take, and 10-25s with a few that take minutes to clone.  It is not as robust on the larger case &amp;#8211; I&apos;m actually getting quite a few timeouts and am investigating them further.&lt;/p&gt;</comment>
                            <comment id="13775281" author="stack" created="Mon, 23 Sep 2013 18:31:10 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12566345" name="hbase-7651.patch" size="20320" author="jmhsieh" created="Thu, 24 Jan 2013 18:55:34 +0000"/>
                            <attachment id="12566400" name="hbase-7651.v2.patch" size="13649" author="jmhsieh" created="Thu, 24 Jan 2013 23:19:49 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 Jan 2013 22:56:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>308493</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1cgc7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>280778</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>