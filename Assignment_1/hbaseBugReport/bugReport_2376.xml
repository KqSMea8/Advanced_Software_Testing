<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:01:21 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2376/HBASE-2376.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2376] Add special SnapshotScanner which presents view of all data at some time in the past</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2376</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In order to support a particular kind of database &quot;snapshot&quot; feature which doesn&apos;t require copying data, we came up with the idea for a special SnapshotScanner that would present a view of your data at some point in the past.  The primary use case for this would be to be able to recover particular data/rows (but not all data, like a global rollback) should they have somehow been messed up (application fault, application bug, user error, etc.).&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12460250">HBASE-2376</key>
            <summary>Add special SnapshotScanner which presents view of all data at some time in the past</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="7">Later</resolution>
                                        <assignee username="blackpearl">Pritam Damania</assignee>
                                    <reporter username="streamy">Jonathan Gray</reporter>
                        <labels>
                    </labels>
                <created>Thu, 25 Mar 2010 15:54:30 +0000</created>
                <updated>Wed, 16 Nov 2016 19:47:34 +0000</updated>
                            <resolved>Wed, 16 Nov 2016 19:47:33 +0000</resolved>
                                    <version>0.20.3</version>
                                                    <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="12849738" author="streamy" created="Thu, 25 Mar 2010 16:00:48 +0000"  >&lt;p&gt;The initial idea is that we&apos;d introduce a new per-family configuration, something like TTKAV (Time To Keep All Versions).  This setting would define how far back you would be able to perform this snapshot.  In practice, it might be something like 1 day or 1 week, but could be configured.  This setting would ensure that no versions are deleted until outside the TTKAV.  Once outside that range, the original TTL and MaxVersions settings would be enforced (on major compactions).&lt;/p&gt;

&lt;p&gt;The second piece would be a special SnapshotScanner that took a timestamp and returned data as it was at that timestamp.  This stamp would of course have to be less than now() and greater than now() - TTKAV.  It would have the smarts to basically toss out anything with a newer stamp, including deletes.&lt;/p&gt;

&lt;p&gt;The reason for introducing a new parameter is that you must keep all versions of everything in order to perform the back-in-time snapshot, but you don&apos;t want to force constraints on how you would use the normal maxVersions/TTL parameters to clear out multiple versions of stuff during major compactions (once outside the snapshotable time window).&lt;/p&gt;</comment>
                            <comment id="12849785" author="dhruba" created="Thu, 25 Mar 2010 17:10:26 +0000"  >&lt;p&gt;Awesome. This will be really helpful to mitigate any kind of application logical bugs where the app mistakenly removes a bunch of records from Hbase, then the user/admin realises his/her mistake, and wants to refetch those records from a previous point in time.&lt;/p&gt;</comment>
                            <comment id="12850428" author="apurtell" created="Sat, 27 Mar 2010 00:37:49 +0000"  >&lt;p&gt;I assume the default TTKAV would be something like 0 (no-op)? &lt;/p&gt;</comment>
                            <comment id="12850459" author="ryanobjc" created="Sat, 27 Mar 2010 02:17:50 +0000"  >&lt;p&gt;This would cause challenges when users set timestamps, also when people use the unadorned cell-delete command which does an (internal) timestamp set.  We might have to add a new timestamp that would allow us to discern the age of a put regardless of the actually &apos;user visible&apos; timestamp.&lt;/p&gt;</comment>
                            <comment id="12850609" author="dhruba" created="Sat, 27 Mar 2010 23:38:46 +0000"  >&lt;p&gt;@andrew: Yes, the TTAK should default to 0.&lt;/p&gt;

&lt;p&gt;@ryan: If we explain that when a user set timestamps, then the TTKAV will apply to it. If the user dos not set timestamps, then the system will assign a timestamp to every record and will use it to not delete records within the TTKAV. do you see any confusion here?&lt;/p&gt;</comment>
                            <comment id="12851278" author="ryanobjc" created="Tue, 30 Mar 2010 06:31:50 +0000"  >&lt;p&gt;dhruba: but if a user does a delete (cell) then the system will pick the timestamp of the cell to apply it to and enter it in thusly.  so you would never have a point in time where that cell was not deleted.  there would be 2 keyvalues, one put ts=X and the other delete ts=X, even if the delete was executed at X+L where L might be days, years, centuries (hey with longs it would allow it).&lt;/p&gt;</comment>
                            <comment id="13185167" author="lhofhansl" created="Thu, 12 Jan 2012 19:24:20 +0000"  >&lt;p&gt;Is this addressed with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4536&quot; title=&quot;Allow CF to retain deleted rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4536&quot;&gt;&lt;del&gt;HBASE-4536&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13501602" author="blackpearl" created="Wed, 21 Nov 2012 00:15:04 +0000"  >&lt;p&gt;Here are the relevant patches for this feature in the 89fb branch :&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=r1395032&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=r1395032&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=r1406789&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=r1406789&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=r1410118&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=r1410118&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13501651" author="lhofhansl" created="Wed, 21 Nov 2012 01:54:10 +0000"  >&lt;p&gt;Is this addressed with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4536&quot; title=&quot;Allow CF to retain deleted rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4536&quot;&gt;&lt;del&gt;HBASE-4536&lt;/del&gt;&lt;/a&gt; together with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4071&quot; title=&quot;Data GC: Remove all versions &amp;gt; TTL EXCEPT the last written version&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4071&quot;&gt;&lt;del&gt;HBASE-4071&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13501669" author="blackpearl" created="Wed, 21 Nov 2012 02:41:01 +0000"  >&lt;p&gt;I don&apos;t think those two JIRAs give us that flexibility. For example if TTL is 5 days and max versions is 3. If we want to support a query that gives us a view upto 7 days in the past, then we need to retain versions upto 7 + 5 days (effective TTL for compactions and flushes is 12 days and not 5) and we need to retain a maximum of 3 versions before 7 days so that if we do a query for data on 7 days in the past, we have 3 versions to surface for that query if present.&lt;/p&gt;

&lt;p&gt;The basic idea is if we support queries in the past upto &apos;x&apos; days, the compactions and flushes should be behaving as if they were happening &apos;x days&apos; in the past.&lt;/p&gt;

&lt;p&gt;Simply retaining deletes or retaining just one version is not sufficient.&lt;/p&gt;</comment>
                            <comment id="13501681" author="lhofhansl" created="Wed, 21 Nov 2012 03:16:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4071&quot; title=&quot;Data GC: Remove all versions &amp;gt; TTL EXCEPT the last written version&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4071&quot;&gt;&lt;del&gt;HBASE-4071&lt;/del&gt;&lt;/a&gt; is a bit misnamed. It introduces MIN_VERSIONS. So setting TTL and MIN_VERSIONS does give you exactly what you describe above (I think).&lt;/p&gt;</comment>
                            <comment id="13501704" author="blackpearl" created="Wed, 21 Nov 2012 05:08:18 +0000"  >&lt;p&gt;I&apos;m not sure how you would achieve it with TTL and MIN_VERSIONS, but lets take an example, suppose the current time in millliseconds is 60 and the table has max versions set to 3.&lt;/p&gt;

&lt;p&gt;Suppose we want to support FlashBackQueries for upto 10ms in the past. What you want is atmost 3 versions for the time between t=0 to t=50. How does MIN_VERSIONS achieve keeping atmost 3 versions in that time range ? Does MIN_VERSIONS apply only to expired kvs ?&lt;/p&gt;

&lt;p&gt;Also an issue with TTL and MIN_VERSIONS is that you cannot support something like if I want a TTL of 6 days but a FlashBack upto 8 days. The FlashBack and TTL time have to be the same which some applications might not want. Some applications might want to keep all their other parameters the same and just specify that they want to do a read back in time for &apos;x&apos; days. Changing the TTL value for an application to provide this functionality would also change what a scan returns since although you are pushing TTL back to retain enough data to do a read in the past, your queries in the current time are also affected since they will surface all kvs which are within TTL. &lt;/p&gt;</comment>
                            <comment id="13501710" author="lhofhansl" created="Wed, 21 Nov 2012 05:25:57 +0000"  >&lt;p&gt;MIN_VERSIONS affects expired KVs. It&apos;s means: &quot;You can expire KVs after this TTL, but keep at least MIN_VERSIONS versions around&quot;.&lt;/p&gt;

&lt;p&gt;I was going to Jonathan&apos;s initial description:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;TTKAV (Time To Keep All Versions) This setting would define how far back you would be able to perform this snapshot.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You&apos;d do that by setting MAX_VERSIONS to MAX_LONG, TTL to the flashback time, and MIN_VERSIONS to the number of version you want keep around. Now within the TTL you&apos;d keep all versions, outside of the TTL MIN_VERSIONS versions are kept.&lt;/p&gt;

&lt;p&gt;But I see now. So the snapshot scanner is special in that only through this specific scanner you can look further back than the TTL.&lt;/p&gt;

&lt;p&gt;This does seem a pretty esoteric feature then, though.&lt;br/&gt;
Flashback only makes sense together with TTL (otherwise you could set the TTL). You have a TTL and a sort of a super TTL for which you can only use a special scanner.&lt;/p&gt;</comment>
                            <comment id="13501743" author="kannanm" created="Wed, 21 Nov 2012 07:42:42 +0000"  >&lt;p&gt;Lars wrote: &amp;lt;&amp;lt;&amp;lt;Flashback queries only makes sense with TTL&amp;gt;&amp;gt;&amp;gt;. This is not true. A simple CF with VERSIONS=1 &amp;amp; no TTL (i.e. TTL of infinity) can also benefit from ability to FlashBack query. Flash back is simply an ability to query the DB as of a previous point in time. Why should we overload that functionality with versions, TTL, etc.?&lt;/p&gt;

&lt;p&gt;I think it is useful to think of FlashBack as completely independent of other settings like TTL, MAXVERSIONS, MINVERSIONS, etc. The latter should be picked at schema design time based on the application requirements. For example, you may have many tables in your system with different TTL, VERSIONS requirements. Maybe you have different CFs within a table, with differing TTL &amp;amp; VERSION requirements. &lt;/p&gt;

&lt;p&gt;But on top of all those, suppose across all my tables I want to be able to query the entire DB as of a previous point in time. From a user&apos;s point of view, the only setting they need to worry about is the &quot;time period&quot; (back in time) up to which flash back queries are supported.&lt;/p&gt;

&lt;p&gt;For example, you might have one CF, with VERSIONS=1, where you are keeping hourly rollup data that you want to retain for 1 month (TTL) and, another CF where you keep daily rollup data also with VERSIONS=1 where you want to retain data for 3 years. But separately, I want the ability to be able to do flash back queries up to say 7 days back. This &quot;7 days&quot; should be a completely different setting, and there seems to be no reason to confuse this with TTL &amp;amp; Verions.&lt;/p&gt;

&lt;p&gt;Now, API wise, we need the ability to say that we are doing a flashback query i.e. &quot;Scan @ T&quot; instead of regular &quot;Scan&quot;. In Oracle DB too, for instance, flash back queries have this special syntax:&lt;/p&gt;

&lt;p&gt;SELECT * FROM employee &lt;br/&gt;
  AS OF TIMESTAMP &amp;lt;TS&amp;gt;&lt;br/&gt;
  WHERE name = &apos;JOHN&apos;;&lt;/p&gt;

&lt;p&gt;Regarding &amp;lt;&amp;lt;&amp;lt; So the snapshot scanner is special in that only through this specific scanner you can look further back than the TTL.&amp;gt;&amp;gt;&amp;gt;: I think that is by design. Note: Scan @ T (flash back query) is different than doing a Scan with setTimeRange(0, T). A delete done a T+1 of a key is immaterial for Scan @ T query; whereas for a Scan with setTimeRange(0, T), you will still see the effect of the delete done at T+1. &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;In summary, we should not confuse our users by forcing them to change their schema design (i.e. choice of VERSIONS, TTL, etc.) to support flashback queries. Flashback support should be configured using a simple extra knob that can be set a system, table or CF level. We should NOT overload that knob with TTL and Versions.&lt;/p&gt;

&lt;hr /&gt;


</comment>
                            <comment id="15671412" author="esteban" created="Wed, 16 Nov 2016 19:47:34 +0000"  >&lt;p&gt;Equivalent functionality can be achieved by using &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4536&quot; title=&quot;Allow CF to retain deleted rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4536&quot;&gt;&lt;del&gt;HBASE-4536&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4071&quot; title=&quot;Data GC: Remove all versions &amp;gt; TTL EXCEPT the last written version&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4071&quot;&gt;&lt;del&gt;HBASE-4071&lt;/del&gt;&lt;/a&gt; if you think this stills necessary please re-open.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12525597">HBASE-4536</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 25 Mar 2010 17:10:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32547</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05q7r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31344</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>