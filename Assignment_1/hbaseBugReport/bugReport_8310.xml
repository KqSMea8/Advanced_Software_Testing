<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:54:00 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-8310/HBASE-8310.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-8310] HBase snapshot timeout default values and TableLockManger timeout</title>
                <link>https://issues.apache.org/jira/browse/HBASE-8310</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;There are a few timeout values and defaults being used by HBase snapshot.&lt;br/&gt;
DEFAULT_MAX_WAIT_TIME (60000 milli sec, 1 min) for client response&lt;br/&gt;
TIMEOUT_MILLIS_DEFAULT (60000 milli sec, 1 min) for Procedure timeout&lt;br/&gt;
SNAPSHOT_TIMEOUT_MILLIS_DEFAULT (60000 milli sec, 1 min) for region server subprocedure  &lt;/p&gt;

&lt;p&gt;There is also other timeout involved, for example, &lt;br/&gt;
DEFAULT_TABLE_WRITE_LOCK_TIMEOUT_MS (10 mins) for TakeSnapshotHandler#prepare()&lt;/p&gt;

&lt;p&gt;We could have this case:&lt;br/&gt;
The user issues a sync snapshot request, waits for 1 min, and gets an exception.&lt;br/&gt;
In the meantime the snapshot handler is blocked on the table lock, and the snapshot may continue to finish after 10 mins.&lt;br/&gt;
But the user will probably re-issue the snapshot request during the 10 mins.&lt;br/&gt;
This is a little confusing and messy when this happens.&lt;br/&gt;
To be more reasonable, we should either increase the DEFAULT_MAX_WAIT_TIME or decrease the table lock waiting time.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12641731">HBASE-8310</key>
            <summary>HBase snapshot timeout default values and TableLockManger timeout</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="jinghe">Jerry He</assignee>
                                    <reporter username="jinghe">Jerry He</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Apr 2013 21:53:11 +0000</created>
                <updated>Sat, 27 Dec 2014 22:55:13 +0000</updated>
                            <resolved>Sat, 27 Dec 2014 22:55:13 +0000</resolved>
                                    <version>0.95.0</version>
                                                    <component>snapshots</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13627196" author="yuzhihong@gmail.com" created="Tue, 9 Apr 2013 22:22:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;or decrease the table lock waiting time.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I would choose the above.&lt;/p&gt;</comment>
                            <comment id="13627221" author="jinghe" created="Tue, 9 Apr 2013 22:50:18 +0000"  >&lt;p&gt;What is the reasonable table lock timeout for snapshot? 1 min?&lt;/p&gt;</comment>
                            <comment id="13627230" author="yuzhihong@gmail.com" created="Tue, 9 Apr 2013 22:57:38 +0000"  >&lt;p&gt;@Jerry:&lt;br/&gt;
Just curious: what does &apos;defautls&apos; in the subject mean ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13627254" author="jinghe" created="Tue, 9 Apr 2013 23:28:47 +0000"  >&lt;p&gt;@Ted,&lt;br/&gt;
Corrected. Thanks for pointing out &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13628436" author="jinghe" created="Wed, 10 Apr 2013 23:33:32 +0000"  >&lt;p&gt;Any objection to drop the snapshot wait time for table lock to 1 min?&lt;br/&gt;
It makes sense since snapshot operation is more like &apos;I try&apos; instead of &apos;I have to&apos;.&lt;/p&gt;</comment>
                            <comment id="13661716" author="lhofhansl" created="Mon, 20 May 2013 02:56:52 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mbertozzi&quot; class=&quot;user-hover&quot; rel=&quot;mbertozzi&quot;&gt;Matteo Bertozzi&lt;/a&gt;? You good with decreasing the timeout?&lt;/p&gt;</comment>
                            <comment id="13661760" author="mbertozzi" created="Mon, 20 May 2013 03:58:29 +0000"  >&lt;p&gt;I haven&apos;t followed the table lock I think that &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmhsieh&quot; class=&quot;user-hover&quot; rel=&quot;jmhsieh&quot;&gt;Jonathan Hsieh&lt;/a&gt; has more context&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The user issues a sync snapshot request, waits for 1 min, and gets an exception.&lt;br/&gt;
In the meantime the snapshot handler is blocked on the table lock, and the snapshot may continue to finish after 10 mins.&lt;br/&gt;
But the user will probably re-issue the snapshot request during the 10 mins.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In this case the snapshot is still in progress and a next request will return &quot;Rejected taking snapshot because we are already running another snapshot&quot; from the snapshotManager and you should wait... no table lock is involved on the exception... but the table lock is lost because has a timeout? so... the table lock logic seems wrong here.. &lt;br/&gt;
so my vote here is tending to the minus, but I have not enough context on the implementation of the snapshots and table lock.&lt;/p&gt;</comment>
                            <comment id="13662329" author="jinghe" created="Mon, 20 May 2013 20:24:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;In this case the snapshot is still in progress and a next request will return &quot;Rejected taking snapshot because we are already running another snapshot&quot; from the snapshotManager and you should wait ...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agree. This is a defense against really messing up on the server.&lt;br/&gt;
Still this would contradict the synchronized purpose of the client snapshot request?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;but the table lock is lost because has a timeout?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;? &lt;br/&gt;
Could you provide some details?&lt;/p&gt;
</comment>
                            <comment id="13662616" author="enis" created="Tue, 21 May 2013 03:00:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;but the table lock is lost because has a timeout&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The timeout in the table lock context is the timeout time for waiting to acquire the lock. Once you have it, it does not expire. The only exception is that if hbck is run with -fix, it will report / delete the table lock that has expired (held more than expiry time (10 min by default if I remember correctly)). &lt;/p&gt;</comment>
                            <comment id="13662656" author="lhofhansl" created="Tue, 21 May 2013 04:06:36 +0000"  >&lt;p&gt;Moving to 0.94.9.&lt;/p&gt;</comment>
                            <comment id="13662665" author="mbertozzi" created="Tue, 21 May 2013 04:23:24 +0000"  >&lt;p&gt;If I understood correctly the explanation of Enis, this is not a problem on the lock or snapshots.&lt;/p&gt;

&lt;p&gt;This seems more a semantic problem on the client...&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Still this would contradict the synchronized purpose of the client snapshot request?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is a problem with the current client, that will be solved with the next async version and the possibility to cancel tasks. On the client side now there&apos;s a timeout to avoid to lock the user.. but there&apos;s no guarantee that the operation is aborted/finished. If you take a look at the messages e.g. isTableEnabled() you get something like &quot;Table not yet enabled, after %d ms&quot;.&lt;/p&gt;

&lt;p&gt;NOTE that snapshot (in contrast with other operations, e.g. isTableEnabled) has a HBaseAdmin.isSnapshotFinished()... this means that if you get the &quot;wasn&apos;t completed in expectedTime&quot; message you can wait loop on isSnapshotFinished()&lt;/p&gt;</comment>
                            <comment id="13663128" author="jinghe" created="Tue, 21 May 2013 17:02:33 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mbertozzi&quot; class=&quot;user-hover&quot; rel=&quot;mbertozzi&quot;&gt;Matteo Bertozzi&lt;/a&gt;&lt;br/&gt;
Thanks for the explanation. We can probably live with the &apos;imperfect&apos; synchronized client for now. But I am still worried about the big out-of-sync in the time out values: 1 min for client and 10 mins for lock.&lt;/p&gt;

&lt;p&gt;On the other hand, I looked at the latest code again. This is what we do in SnapshotManager#snapshotTable()&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      handler.prepare();
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.executorService.submit(handler);
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.snapshotHandlers.put(snapshot.getTable(), handler);
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The handler is not put in the map until after the lock attempt in prepare(). This would allow the other snapshot request to come in the meantime without getting a rejection.&lt;br/&gt;
Should we move it up? or anything I missed?&lt;/p&gt;

</comment>
                            <comment id="13663138" author="mbertozzi" created="Tue, 21 May 2013 17:14:37 +0000"  >&lt;blockquote&gt;&lt;p&gt;&lt;br/&gt;
The handler is not put in the map until after the lock attempt in prepare(). This would allow the other snapshot request to come in the meantime without getting a rejection. Should we move it up? or anything I missed?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You can move it up but, at the moment this code is under synchronized so just one request at the time will get into this code...&lt;/p&gt;</comment>
                            <comment id="13663612" author="jinghe" created="Wed, 22 May 2013 00:07:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mbertozzi&quot; class=&quot;user-hover&quot; rel=&quot;mbertozzi&quot;&gt;Matteo Bertozzi&lt;/a&gt;&lt;br/&gt;
I attached a simple change to see if you are ok with it or I misunderstand anything.&lt;br/&gt;
The synchronized blocking will not last for the snapshot to finish. &lt;br/&gt;
We are more relying on the table lock at the moment to prevent concurrent snapshot of the same table.&lt;br/&gt;
If you agree with change, I&apos;ll do more testing to execute some corner cases.&lt;/p&gt;</comment>
                            <comment id="13663645" author="mbertozzi" created="Wed, 22 May 2013 01:03:16 +0000"  >&lt;p&gt;-1 on the patch&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We are more relying on the table lock at the moment to prevent concurrent snapshot of the same table.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No. The table lock is not involved with the &quot;Reject snapshot&quot; exception.&lt;br/&gt;
The synchronized block cover the fact that a single snapshot at the time can be enqueued, and the snapshotHandler is checked before performing a snapshotTable() operation. isSnapshotInProgress() or isRestoreInProgress() are the ones that throws the &quot;rejecting snapshot exception&quot; not the table lock.&lt;/p&gt;

&lt;p&gt;Take a look a SnapshotManager.prepareToTakeSnapshot() to see where the exception is thrown.&lt;/p&gt;</comment>
                            <comment id="13663779" author="jinghe" created="Wed, 22 May 2013 05:03:11 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mbertozzi&quot; class=&quot;user-hover&quot; rel=&quot;mbertozzi&quot;&gt;Matteo Bertozzi&lt;/a&gt;&lt;br/&gt;
Thanks for your comment. I totally agree with you.&lt;br/&gt;
Sorry I mis-communicated badly with the stmt you quoted.&lt;/p&gt;

&lt;p&gt;Yes, the &quot;reject snapshot&quot; exception is thrown in prepareToTakeSnapshot() by checking the the snapshotHandler. But in this particular case at the moment:&lt;br/&gt;
1) The current snapshot A is blocked on table lock in snapshotTable(). Its snapshotHandler is not put into the map yet. &lt;br/&gt;
2) The next snapshot B comes in and calls prepareToTakeSnapshot(). It will pass thru without being rejected since there is no current snapshotHandler in the map yet.&lt;br/&gt;
3) snapshot B can not enter snapshotTable() since it is synchronized.&lt;br/&gt;
4) snapshot A can not leave snapshotTable() because it is blocked on table lock.&lt;br/&gt;
5) Effectively snapshot B is prevented from going in by the table lock block.&lt;/p&gt;

&lt;p&gt;But you are right. I don&apos;t think the patch solves the problem, which is to let snapshot B get &quot;Reject snapshot&quot; exception in prepareToTakeSnapshot().  &lt;/p&gt;</comment>
                            <comment id="13663790" author="jinghe" created="Wed, 22 May 2013 05:20:28 +0000"  >&lt;p&gt;ok, the intermediate level methods are synchronized as well, not just snapshotTable() &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13663793" author="mbertozzi" created="Wed, 22 May 2013 05:24:51 +0000"  >&lt;blockquote&gt;
&lt;p&gt;1) The current snapshot A is blocked on table lock in snapshotTable(). Its snapshotHandler is not put into the map yet. &lt;br/&gt;
2) The next snapshot B comes in and calls prepareToTakeSnapshot(). It will pass thru without being rejected since there is no current snapshotHandler in the map yet.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This can&apos;t happen... prepareToTakeSnapshot() and snapshotTable() are under synchronized... &lt;br/&gt;
so if B is asking for the same table gets the rejected exception if the first one doesn&apos;t fail...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;4) snapshot A can not leave snapshotTable() because it is blocked on table lock.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;lock on what? e.g. createTable(), deleteTable(), ...? maybe...&lt;br/&gt;
In this case having the prepare() inside the snapshotTable() is not a good idea since a snapshot on a different table may be executed. &lt;br/&gt;
My guess is that the table lock integration with the snapshot was not very well thought. the snapshot and restore handlers are good for 94 where the table lock does not exists, but I guess that the addition of the table lock should have replaced those two. I&apos;ll be +1 on a patch that extract the table lock from the snapshot/restore handlers and replaces the current handlers map.&lt;/p&gt;</comment>
                            <comment id="13664294" author="jinghe" created="Wed, 22 May 2013 17:31:27 +0000"  >&lt;p&gt;Well said. &lt;br/&gt;
The new proposal makes sense.&lt;/p&gt;</comment>
                            <comment id="13687595" author="stack" created="Wed, 19 Jun 2013 04:29:58 +0000"  >&lt;p&gt;Moving out till we get updated patch.&lt;/p&gt;</comment>
                            <comment id="14259512" author="jinghe" created="Sat, 27 Dec 2014 22:55:13 +0000"  >&lt;p&gt;Clean up JIRAs.&lt;br/&gt;
Close this a Won&apos;t Fix.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12584204" name="trunk.patch" size="1412" author="jinghe" created="Wed, 22 May 2013 00:06:58 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 9 Apr 2013 22:22:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>322146</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 50 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1jkyn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>322491</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>