<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:49:35 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7845/HBASE-7845.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7845] optimize hfile index key</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7845</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Leveldb uses ByteWiseComparatorImpl::FindShortestSeparator() &amp;amp; FindShortSuccessor() to reduce index key size, it would be helpful under special conditions.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12632324">HBASE-7845</key>
            <summary>optimize hfile index key</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="xieliang007">Liang Xie</assignee>
                                    <reporter username="xieliang007">Liang Xie</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 Feb 2013 05:44:16 +0000</created>
                <updated>Tue, 15 Oct 2013 04:46:36 +0000</updated>
                            <resolved>Sat, 23 Mar 2013 21:13:38 +0000</resolved>
                                    <version>0.95.2</version>
                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                    <component>HFile</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                <comments>
                            <comment id="13581048" author="xieliang007" created="Tue, 19 Feb 2013 06:20:25 +0000"  >&lt;p&gt;After a further investigation, i know:&lt;br/&gt;
1)For leveldb, the index key was a &quot;faked&quot; key which larger or equals than current data block&apos;s last key, and smaller than the next data block&apos;s first key&lt;br/&gt;
2)For HFileV2, we use the first key in current data block, there&apos;s a discussion before:&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4443&quot; title=&quot;optimize/avoid seeking to &amp;quot;previous&amp;quot; block when key you are interested in is the first one of a block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4443&quot;&gt;HBASE-4443&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;IMHO, a &quot;faked&quot; last key has more benefit than mentioned in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4443&quot; title=&quot;optimize/avoid seeking to &amp;quot;previous&amp;quot; block when key you are interested in is the first one of a block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4443&quot;&gt;HBASE-4443&lt;/a&gt;. e.g, there&apos;s a good example from leveldb&apos;s comments:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  // We do not emit the index entry for a block until we have seen the&lt;br/&gt;
  // first key for the next data block.  This allows us to use shorter&lt;br/&gt;
  // keys in the index block.  For example, consider a block boundary&lt;br/&gt;
  // between the keys &quot;the quick brown fox&quot; and &quot;the who&quot;.  We can use&lt;br/&gt;
  // &quot;the r&quot; as the key for the index block entry since it is &amp;gt;= all&lt;br/&gt;
  // entries in the first block and &amp;lt; all entries in subsequent&lt;br/&gt;
  // blocks.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;d like to have a try to make a patch these days on it. Any comments and advices will be highly appreciated&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13581051" author="mcorgan" created="Tue, 19 Feb 2013 06:30:26 +0000"  >&lt;p&gt;I don&apos;t really have time to work on it, but using prefix-tree format would be nearly ideal for index blocks.&lt;/p&gt;</comment>
                            <comment id="13581060" author="xieliang007" created="Tue, 19 Feb 2013 06:51:28 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mcorgan&quot; class=&quot;user-hover&quot; rel=&quot;mcorgan&quot;&gt;Matt Corgan&lt;/a&gt;, thanks for your comments, i haven&apos;t looked into &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4676&quot; title=&quot;Prefix Compression - Trie data block encoding&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4676&quot;&gt;&lt;del&gt;HBASE-4676&lt;/del&gt;&lt;/a&gt; yet, will try to do a simple benchmark if possible after maked an raw patch.&lt;br/&gt;
IIRC, these two manners are not conflict, at least in leveldb, both prefix-compaction and above &quot;faked&quot; index key are exist&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13585824" author="xieliang007" created="Mon, 25 Feb 2013 12:33:37 +0000"  >&lt;p&gt;Attached is a proto patch to explain my intention. it&apos;ll optimize index key with two aspects:&lt;br/&gt;
1) row key length, i just implemented a simple algorithm like leveldb&apos;s FindShortestSeparator&lt;br/&gt;
2) key + epsilon, which discussed @ &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4443&quot; title=&quot;optimize/avoid seeking to &amp;quot;previous&amp;quot; block when key you are interested in is the first one of a block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4443&quot;&gt;HBASE-4443&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Still need some work on testing, but any comments are highly welcome&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13585855" author="hadoopqa" created="Mon, 25 Feb 2013 13:40:42 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12570777/HBASE-7845.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12570777/HBASE-7845.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 3 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.wal.TestHLog&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4526//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13586950" author="xieliang007" created="Tue, 26 Feb 2013 08:55:12 +0000"  >&lt;p&gt;Fixed a findbugs warning&lt;/p&gt;</comment>
                            <comment id="13587031" author="xieliang007" created="Tue, 26 Feb 2013 11:25:43 +0000"  >&lt;p&gt;Here is a simple test result, loaded data with YCSB: &lt;br/&gt;
recordcount=100000000&lt;br/&gt;
fieldcount=1&lt;br/&gt;
fieldlength=50&lt;/p&gt;


&lt;p&gt;The original metric after loading done &amp;amp; major_compact:&lt;br/&gt;
numberOfStores=1, numberOfStorefiles=1, storefileUncompressedSizeMB=9847, storefileSizeMB=9850, compressionRatio=1.0003, memstoreSizeMB=197, storefileIndexSizeMB=0, readRequestsCount=0, writeRequestsCount=28225, rootIndexSizeKB=6, totalStaticIndexSizeKB=9356, totalStaticBloomSizeKB=0, totalCompactingKVs=99260688, currentCompactedKVs=99260688, compactionProgressPct=1.0, coprocessors=[]&lt;/p&gt;

&lt;p&gt;The patched metric after loading done &amp;amp; major_compact:&lt;br/&gt;
numberOfStores=1, numberOfStorefiles=1, storefileUncompressedSizeMB=9845, storefileSizeMB=9848, compressionRatio=1.0003, memstoreSizeMB=197, storefileIndexSizeMB=0, readRequestsCount=0, writeRequestsCount=28225, rootIndexSizeKB=4, totalStaticIndexSizeKB=7161, totalStaticBloomSizeKB=0, totalCompactingKVs=99260688, currentCompactedKVs=99260688, compactionProgressPct=1.0, coprocessors=[]&lt;/p&gt;


&lt;p&gt;we could observe &quot;totalStaticIndexSizeKB&quot; is reduced by (9356-7161)/9356 = 23.4608807%, in deed, the result should be dominated by real key characteristic&lt;/p&gt;</comment>
                            <comment id="13587178" author="yuzhihong@gmail.com" created="Tue, 26 Feb 2013 14:57:55 +0000"  >&lt;p&gt;@Liang:&lt;br/&gt;
Latest patch didn&apos;t get through hadoop QA.&lt;br/&gt;
Mind attaching patch again?&lt;/p&gt;</comment>
                            <comment id="13587331" author="yuzhihong@gmail.com" created="Tue, 26 Feb 2013 18:14:57 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kannanm&quot; class=&quot;user-hover&quot; rel=&quot;kannanm&quot;&gt;Kannan Muthukkaruppan&lt;/a&gt;:&lt;br/&gt;
What do you think of Liang&apos;s patch ?&lt;/p&gt;</comment>
                            <comment id="13587864" author="xieliang007" created="Wed, 27 Feb 2013 01:47:10 +0000"  >&lt;p&gt;re-upload patch to kick off QA robot&lt;/p&gt;</comment>
                            <comment id="13587953" author="yuzhihong@gmail.com" created="Wed, 27 Feb 2013 03:14:36 +0000"  >&lt;p&gt;Took a brief look over the patch.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      dataBlockIndexWriter.addEntry(shortestSeparator, lastDataBlockOffset,onDiskSize);
+    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+      dataBlockIndexWriter.addEntry(firstKeyInBlock, lastDataBlockOffset,onDiskSize);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;How would the above affect existing HFilev2 ?&lt;/p&gt;

&lt;p&gt;I would expect a bump in minor version, at least.&lt;/p&gt;</comment>
                            <comment id="13587956" author="hadoopqa" created="Wed, 27 Feb 2013 03:15:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12571110/HBASE-7845-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12571110/HBASE-7845-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 3 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestMiniClusterLoadParallel&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestMiniClusterLoadSequential&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestHTableMultiplexer&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestBlocksRead&lt;br/&gt;
                  org.apache.hadoop.hbase.io.encoding.TestEncodedSeekers&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4568//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13587959" author="xieliang007" created="Wed, 27 Feb 2013 03:21:35 +0000"  >&lt;p&gt;There is no impact on existing read path at all, just replace a real block start key with a faked shorter key. so seems it doesn&apos;t need to bump a minor version.&lt;/p&gt;</comment>
                            <comment id="13588005" author="ram_krish" created="Wed, 27 Feb 2013 05:15:40 +0000"  >&lt;p&gt;Had a look at the patch.  Seems like a good option. Not an expert in this area. &lt;/p&gt;</comment>
                            <comment id="13588026" author="xieliang007" created="Wed, 27 Feb 2013 05:41:17 +0000"  >&lt;p&gt;Thanks&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;It&apos;s just a proto right now, i am looking into the failed cases&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13588111" author="enis" created="Wed, 27 Feb 2013 08:15:27 +0000"  >&lt;p&gt;I like the approach, but wondering whether there is any impact on the writing speed. &lt;/p&gt;</comment>
                            <comment id="13591646" author="xieliang007" created="Sun, 3 Mar 2013 05:37:15 +0000"  >&lt;p&gt;Diving into the failed cases, it somehow really funny to me &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
#TestHalfStoreFileReader failed, due to there&apos;s an offset(-1) based on the optimized index key, so we need to treak the target midkey in split test cases.&lt;br/&gt;
#TestHFileWriterV2 failed due to call append(final byte[] key, final byte[] value) api, without setting any ts, it&apos;ll never exist in real path.&lt;br/&gt;
#most interesting failed case: TestBlocksScanned, after debugging, i found the api blockSeek() has a diff rule/convention with upper consumers, i&apos;ll file a bug on it.&lt;/p&gt;</comment>
                            <comment id="13591648" author="xieliang007" created="Sun, 3 Mar 2013 05:46:41 +0000"  >&lt;p&gt;seem i could not modify the old comments in place...&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;the api blockSeek() has a diff rule/convention with upper consumers, i&apos;ll file a bug on it&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;this is incorrect, maybe i just misunderstanded it.&lt;br/&gt;
I&apos;ll update the POC patch later&lt;/p&gt;</comment>
                            <comment id="13591650" author="xieliang007" created="Sun, 3 Mar 2013 05:57:06 +0000"  >&lt;p&gt;And, one thing need to note is, it&apos;ll have a conflict with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5987&quot; title=&quot;HFileBlockIndex improvement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5987&quot;&gt;&lt;del&gt;HBASE-5987&lt;/del&gt;&lt;/a&gt; seems.&lt;/p&gt;</comment>
                            <comment id="13591654" author="yuzhihong@gmail.com" created="Sun, 3 Mar 2013 06:07:17 +0000"  >&lt;p&gt;@Liang:&lt;br/&gt;
Thanks for sharing your finding.&lt;br/&gt;
We can introduce config once your experimentation draws to close.&lt;br/&gt;
Do you think we need to bump minor version now ?&lt;/p&gt;</comment>
                            <comment id="13591655" author="xieliang007" created="Sun, 3 Mar 2013 06:12:32 +0000"  >&lt;p&gt;yes, you are correct, per my current knowledge&lt;/p&gt;</comment>
                            <comment id="13594586" author="xieliang007" created="Wed, 6 Mar 2013 10:37:11 +0000"  >&lt;p&gt;I&apos;d done a workable version on our internal 0.94.3 codebase. Attached v3 is a patch for trunk, i merged it manually, let&apos;s see what QA robot will say&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13594629" author="hadoopqa" created="Wed, 6 Mar 2013 11:41:57 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12572305/HBASE-7845-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12572305/HBASE-7845-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 3 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestMasterFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationQueueFailoverCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestSplitLogWorker&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4696//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13595445" author="xieliang007" created="Thu, 7 Mar 2013 02:16:28 +0000"  >&lt;p&gt;Please refer to TestBlocksRead case in v3, it&apos;s easy to see the performance gain.&lt;br/&gt;
It means after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4434&quot; title=&quot;seek optimization: don&amp;#39;t do eager HFile Scanner next() unless the next KV is needed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4434&quot;&gt;&lt;del&gt;HBASE-4434&lt;/del&gt;&lt;/a&gt;,&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4433&quot; title=&quot;avoid extra next (potentially a seek) if done with column/row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4433&quot;&gt;&lt;del&gt;HBASE-4433&lt;/del&gt;&lt;/a&gt;,&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4496&quot; title=&quot;HFile V2 does not honor setCacheBlocks when scanning.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4496&quot;&gt;&lt;del&gt;HBASE-4496&lt;/del&gt;&lt;/a&gt;,&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4465&quot; title=&quot;Lazy-seek optimization for StoreFile scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4465&quot;&gt;&lt;del&gt;HBASE-4465&lt;/del&gt;&lt;/a&gt;,&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4585&quot; title=&quot;Avoid next operations (and instead reseek) when current kv is deleted&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4585&quot;&gt;&lt;del&gt;HBASE-4585&lt;/del&gt;&lt;/a&gt;,&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4532&quot; title=&quot;Avoid top row seek by dedicated bloom filter for delete family bloom filter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4532&quot;&gt;&lt;del&gt;HBASE-4532&lt;/del&gt;&lt;/a&gt;, we can optimize seeking number again, avoid extra potentially disk IO&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;For another expected benefit:  reduce index size,  it depends on the real key characteristic, if you have a random long key distribution(e.g. md5 hash key) and short value, then the optimization result will be very outstanding;  and if most of keys are increased sequentially(e.g. key1000,key1001,key1002)&#65292;then no obvious index size optimization will be observed.&lt;/p&gt;</comment>
                            <comment id="13595694" author="xieliang007" created="Thu, 7 Mar 2013 08:55:24 +0000"  >&lt;p&gt;v4 fixed the javadoc warnings, and avoid an unnecessary byte array new.&lt;/p&gt;</comment>
                            <comment id="13595733" author="hadoopqa" created="Thu, 7 Mar 2013 10:02:16 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12572508/HBASE-7845-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12572508/HBASE-7845-v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4712//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13595985" author="yuzhihong@gmail.com" created="Thu, 7 Mar 2013 15:51:58 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
           &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 0; &lt;span class=&quot;code-comment&quot;&gt;// indicate exact match
&lt;/span&gt;-        }
-
-        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (comp &amp;lt; 0) {
+        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (comp &amp;lt; 0) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There is no need to introduce &apos;else&apos; above&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (comparator &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; KeyComparator &amp;amp;&amp;amp; blockEncoder.getEncodingOnDisk() ==
+        DataBlockEncoding.NONE &amp;amp;&amp;amp; blockEncoder.getEncodingInCache() == DataBlockEncoding.NONE) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This limits the scenarios where the optimization applies. Can we do better ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] shortestSeparator = ((KeyComparator) comparator).getFakedKey(
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Suggest aligning variable name with method name: how about fakeKey ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (comparator.compare(shortestSeparator, firstKeyInBlock) &amp;gt; 0) {
+        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Unexpected getFakedKey result, shortestSeparator:&quot;&lt;/span&gt; +
+      shortestSeparator + &lt;span class=&quot;code-quote&quot;&gt;&quot;, firstKeyInBlock:&quot;&lt;/span&gt; + firstKeyInBlock);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can we log an error message and fall back to adding firstKeyInBlock ?&lt;/p&gt;
</comment>
                            <comment id="13596922" author="xieliang007" created="Fri, 8 Mar 2013 07:42:53 +0000"  >&lt;p&gt;Addressed Ted&apos;s comments.&lt;br/&gt;
1) rename variable&lt;br/&gt;
2) err log and fallback&lt;br/&gt;
3) bump minor version&lt;/p&gt;</comment>
                            <comment id="13596947" author="hadoopqa" created="Fri, 8 Mar 2013 08:58:39 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12572724/HBASE-7845-v5.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12572724/HBASE-7845-v5.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestFromClientSide&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSideWithCoprocessor&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4728//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13597320" author="yuzhihong@gmail.com" created="Fri, 8 Mar 2013 17:38:12 +0000"  >&lt;p&gt;I ran the failed tests and they passed locally.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Unexpected getFakedKey result, fakeKey:&quot;&lt;/span&gt; +
+      fakeKey + &lt;span class=&quot;code-quote&quot;&gt;&quot;, firstKeyInBlock:&quot;&lt;/span&gt; + firstKeyInBlock);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Indentation is off.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    Bytes.equals(newKey, KeyValue.ROW_LENGTH_SIZE, newRowLength, expectedArray, 0,
+      expectedArray.length);
+    &lt;span class=&quot;code-comment&quot;&gt;//verify: same with &lt;span class=&quot;code-quote&quot;&gt;&quot;row + family + qualifier&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; rightKey directly&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Style: please leave a blank line above the comment in test.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] getFakedKey(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] leftKey, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] rightKey) {
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; Arrays.copyOf(rightKey, rightKey.length);
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Add @Override to above method.&lt;/p&gt;
</comment>
                            <comment id="13598504" author="xieliang007" created="Mon, 11 Mar 2013 03:44:53 +0000"  >&lt;p&gt;just a quick update:  i&apos;ll try to understand data block encoding read/write internal path, such that we can make this optimization benefits on more scenarios.&lt;/p&gt;</comment>
                            <comment id="13599953" author="xieliang007" created="Tue, 12 Mar 2013 11:54:54 +0000"  >&lt;p&gt;v6 tries to support data block encoding scenario&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13599955" author="xieliang007" created="Tue, 12 Mar 2013 11:55:39 +0000"  >&lt;p&gt;and fixed the above style problems per Ted&apos;s comments&lt;/p&gt;</comment>
                            <comment id="13600007" author="hadoopqa" created="Tue, 12 Mar 2013 13:02:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12573309/HBASE-7845-v6.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12573309/HBASE-7845-v6.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4777//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13600138" author="yuzhihong@gmail.com" created="Tue, 12 Mar 2013 16:24:35 +0000"  >&lt;p&gt;For HFileReaderV2.seekTo():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; -1 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the key is earlier than the first key of the file,
-     *         0 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we are at the given key, and 1 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we are past the given key
+     *         0 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we are at the given key, 1 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we are past the given key
+     *         -2 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the key is earlier than the first key of the file &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is -1 no longer returned ?&lt;/p&gt;

&lt;p&gt;In TestKeyValue.java, some variables are renamed:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    KeyValue rowA = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValue(Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;testtable,www.hbase.org/,1234&quot;&lt;/span&gt;),
+    KeyValue row1 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValue(Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;testtable,www.hbase.org/,1234&quot;&lt;/span&gt;),
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Would be nice if the renaming is not done so that reviewers get to the gist of your change.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+     * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; newKey: the &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; generated faked key
+     */
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] getFakedKey(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] leftKey, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] rightKey) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;new generated&apos; -&amp;gt; &apos;newly generated&apos;&lt;br/&gt;
Please add javadoc for the two parameters.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-comment&quot;&gt;//&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; KeyValue.createFirstOnRow(newRowKey, family, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;).getKey();&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Remove the above comment.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=liyin&quot; class=&quot;user-hover&quot; rel=&quot;liyin&quot;&gt;Liyin Tang&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;:&lt;br/&gt;
Mind taking a look ?&lt;/p&gt;</comment>
                            <comment id="13600773" author="xieliang007" created="Wed, 13 Mar 2013 03:36:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is -1 no longer returned ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;it still returns.  &quot;-2&quot; will be returned while fakedKeyOfCurrentBlock &amp;lt;= seekKey &amp;lt; firstRealKeyOfCurrentBlock&lt;/p&gt;</comment>
                            <comment id="13606471" author="yuzhihong@gmail.com" created="Tue, 19 Mar 2013 16:26:15 +0000"  >&lt;p&gt;-2 is returned in several places.&lt;br/&gt;
How about introducing a constant so that it is obvious what purpose return value of -2 serves ?&lt;/p&gt;</comment>
                            <comment id="13606869" author="stack" created="Tue, 19 Mar 2013 21:40:03 +0000"  >&lt;p&gt;Interesting optimization.  I like it.&lt;/p&gt;

&lt;p&gt;There is a ./hbase-server/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java  Can you use this to show better numbers using your index key?&lt;/p&gt;

&lt;p&gt;Why these changes?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;KeyValue rowB = new KeyValue(Bytes.toBytes(&quot;testtable,www.hbase.org/%20,99999&quot;),&lt;br/&gt;
+    KeyValue row2 = new KeyValue(Bytes.toBytes(&quot;testtable,www.hbase.org/%20,99999&quot;),&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;or these&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;kvs = getData(FAMILY, &quot;row&quot;, Arrays.asList(&quot;col2&quot;, &quot;col3&quot;), 3);&lt;br/&gt;
+      kvs = getData(FAMILY, &quot;row&quot;, Arrays.asList(&quot;col2&quot;, &quot;col3&quot;), 2);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;How is this happening?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;// Expected block reads: 2. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4443&quot; title=&quot;optimize/avoid seeking to &amp;quot;previous&amp;quot; block when key you are interested in is the first one of a block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4443&quot;&gt;HBASE-4443&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;kvs = getData(FAMILY, &quot;row&quot;, Arrays.asList(&quot;col5&quot;), 2);&lt;br/&gt;
+      // Expected block reads: 1. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4443&quot; title=&quot;optimize/avoid seeking to &amp;quot;previous&amp;quot; block when key you are interested in is the first one of a block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4443&quot;&gt;HBASE-4443&lt;/a&gt;&amp;amp;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7845&quot; title=&quot;optimize hfile index key&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7845&quot;&gt;&lt;del&gt;HBASE-7845&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
+      kvs = getData(FAMILY, &quot;row&quot;, Arrays.asList(&quot;col5&quot;), 1);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What is this&lt;/p&gt;


&lt;p&gt;+    @Override&lt;br/&gt;
+    public byte[] getFakedKey(final byte[] leftKey, final byte[] rightKey) &lt;/p&gt;
{
+      return Arrays.copyOf(rightKey, rightKey.length);
+    }

&lt;p&gt;It doesn&apos;t look right.&lt;/p&gt;

&lt;p&gt;What Ted said regards opaque looking code like the below:&lt;/p&gt;

&lt;p&gt;+            return -2; // using faked index key&lt;/p&gt;


&lt;p&gt;Thanks Liang&lt;/p&gt;</comment>
                            <comment id="13607423" author="xieliang007" created="Wed, 20 Mar 2013 09:05:59 +0000"  >&lt;p&gt;v7 introducd a constant to address &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&apos;s comments&lt;br/&gt;
And reverted several variables renaming in test case(in deed, the original renaming aims to eliminate &quot;hidden variable&quot; warning in IDE)&lt;/p&gt;</comment>
                            <comment id="13607437" author="xieliang007" created="Wed, 20 Mar 2013 09:19:49 +0000"  >&lt;blockquote&gt;
&lt;p&gt;+ @Override&lt;br/&gt;
+ public byte[] getFakedKey(final byte[] leftKey, final byte[] rightKey)&lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: { + return Arrays.copyOf(rightKey, rightKey.length); + }&lt;/span&gt; &lt;/div&gt; &lt;/blockquote&gt;

&lt;p&gt;My intention is that there is no necessary to optimize META/ROOT hfiles, of cause, it could be done, we can parse the special format just like MetaKeyComparator.compareRows impletement, but the benefit is just a bit, seems to me.&lt;/p&gt;

&lt;p&gt;About perf, like &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4443&quot; title=&quot;optimize/avoid seeking to &amp;quot;previous&amp;quot; block when key you are interested in is the first one of a block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4443&quot;&gt;HBASE-4443&lt;/a&gt;&apos;s description mentioned:&lt;br/&gt;
&quot;when you are storing large blobs, i.e. when blocks contain small number of keys, and the chances of the key you are looking for being the first block of a key is higher.&quot;&lt;br/&gt;
Another benefit is reducing index size.&lt;/p&gt;

&lt;p&gt;I thought HFilePerformanceEvaluation does not cover this scenario, probably we need to add a bunch of new code&#65306;&#65289;&lt;/p&gt;</comment>
                            <comment id="13607468" author="hadoopqa" created="Wed, 20 Mar 2013 10:14:44 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12574510/HBASE-7845-v7.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12574510/HBASE-7845-v7.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestAtomicOperation&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestHLogSplitCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestHLog&lt;br/&gt;
                  org.apache.hadoop.hbase.io.encoding.TestEncodedSeekers&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4906//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13607487" author="xieliang007" created="Wed, 20 Mar 2013 10:41:27 +0000"  >&lt;p&gt;rebase due to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8012&quot; title=&quot;Reseek should position to the beginning of file for the first time it is invoked with a KV smaller than the first KV in file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8012&quot;&gt;&lt;del&gt;HBASE-8012&lt;/del&gt;&lt;/a&gt;, emmm, i hate rebase, really annoying&lt;/p&gt;</comment>
                            <comment id="13607488" author="xieliang007" created="Wed, 20 Mar 2013 10:43:51 +0000"  >&lt;p&gt;the rebased v8 should make TestEncodedSeekers pass,  the other 3 cases(TestAtomicOperation/TestHLogSplitCompressed/TestHLog) passed in my box even before rebased, so just false alarm seems to me.&lt;/p&gt;</comment>
                            <comment id="13607534" author="hadoopqa" created="Wed, 20 Mar 2013 11:53:10 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12574520/HBASE-7845-v8.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12574520/HBASE-7845-v8.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestJoinedScanners&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4908//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13607554" author="xieliang007" created="Wed, 20 Mar 2013 12:42:01 +0000"  >&lt;p&gt;TestJoinedScanners should be a false alarm, just filed a jira for it&lt;/p&gt;</comment>
                            <comment id="13607566" author="xieliang007" created="Wed, 20 Mar 2013 12:52:13 +0000"  >&lt;p&gt;About HFilePerformanceEvaluation, i ran three times both with and without the change on our internal version based on 0.94.3 modified.&lt;br/&gt;
I found the test result is very unstable, still not sure the system resource or benchmark code contributed right now, so the following number just for initial refer:&lt;/p&gt;

&lt;p&gt;without change, run1:&lt;/p&gt;

&lt;p&gt;Running SequentialWriteBenchmark for 1000000 rows took 1588ms.&lt;br/&gt;
Running UniformRandomSmallScan for 1000000 rows took 4771ms.&lt;br/&gt;
Running UniformRandomReadBenchmark for 1000000 rows took 164284ms.&lt;br/&gt;
Running GaussianRandomReadBenchmark for 1000000 rows took 169258ms.&lt;br/&gt;
Running SequentialReadBenchmark for 1000000 rows took 678ms.&lt;/p&gt;

&lt;p&gt;without change, run2:&lt;/p&gt;

&lt;p&gt;Running SequentialWriteBenchmark for 1000000 rows took 1432ms.&lt;br/&gt;
Running UniformRandomSmallScan for 1000000 rows took 5312ms.&lt;br/&gt;
Running UniformRandomReadBenchmark for 1000000 rows took 152581ms.&lt;br/&gt;
Running GaussianRandomReadBenchmark for 1000000 rows took 168693ms.&lt;br/&gt;
Running SequentialReadBenchmark for 1000000 rows took 686ms.&lt;/p&gt;

&lt;p&gt;without change, run3:&lt;/p&gt;

&lt;p&gt;Running SequentialWriteBenchmark for 1000000 rows took 1599ms.&lt;br/&gt;
Running UniformRandomSmallScan for 1000000 rows took 4603ms.&lt;br/&gt;
Running UniformRandomReadBenchmark for 1000000 rows took 154997ms.&lt;br/&gt;
Running GaussianRandomReadBenchmark for 1000000 rows took 175720ms.&lt;br/&gt;
Running SequentialReadBenchmark for 1000000 rows took 698ms.&lt;/p&gt;

&lt;p&gt;with change, run1:&lt;/p&gt;

&lt;p&gt;Running SequentialWriteBenchmark for 1000000 rows took 1164ms.&lt;br/&gt;
Running UniformRandomSmallScan for 1000000 rows took 4639ms.&lt;br/&gt;
Running UniformRandomReadBenchmark for 1000000 rows took 154133ms.&lt;br/&gt;
Running GaussianRandomReadBenchmark for 1000000 rows took 169388ms.&lt;br/&gt;
Running SequentialReadBenchmark for 1000000 rows took 521ms.&lt;/p&gt;

&lt;p&gt;with change, run2:&lt;/p&gt;

&lt;p&gt;Running SequentialWriteBenchmark for 1000000 rows took 1806ms.&lt;br/&gt;
Running UniformRandomSmallScan for 1000000 rows took 4554ms.&lt;br/&gt;
Running UniformRandomReadBenchmark for 1000000 rows took 155959ms.&lt;br/&gt;
Running GaussianRandomReadBenchmark for 1000000 rows took 174015ms.&lt;br/&gt;
Running SequentialReadBenchmark for 1000000 rows took 702ms.&lt;/p&gt;

&lt;p&gt;with change, run3:&lt;/p&gt;

&lt;p&gt;Running SequentialWriteBenchmark for 1000000 rows took 1510ms.&lt;br/&gt;
Running UniformRandomSmallScan for 1000000 rows took 5141ms.&lt;br/&gt;
Running UniformRandomReadBenchmark for 1000000 rows took 147168ms.&lt;br/&gt;
Running GaussianRandomReadBenchmark for 1000000 rows took 166012ms.&lt;br/&gt;
Running SequentialReadBenchmark for 1000000 rows took 692ms.&lt;/p&gt;</comment>
                            <comment id="13607572" author="jmspaggi" created="Wed, 20 Mar 2013 12:55:56 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=xieliang007&quot; class=&quot;user-hover&quot; rel=&quot;xieliang007&quot;&gt;Liang Xie&lt;/a&gt; cna you share he command line you are using for your tests? I have a dedicated server for performances tests. I can try 0.94.6 with and withour your patch and run it 10 times for each to compare?&lt;/p&gt;</comment>
                            <comment id="13608631" author="xieliang007" created="Thu, 21 Mar 2013 04:44:27 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmspaggi&quot; class=&quot;user-hover&quot; rel=&quot;jmspaggi&quot;&gt;Jean-Marc Spaggiari&lt;/a&gt;, thanks for your help.&lt;br/&gt;
I just appended &quot;-Xmx4096m -Xms4096m&quot; to hbase-env.sh, then start hbase instance, then ran &quot;bin/hbase org.apache.hadoop.hbase.HFilePerformanceEvaluation&quot; one by one.&lt;br/&gt;
Because it&apos;ll check file exist and delete/recreate file in each run, so seems to me it didn&apos;t need to restart hbase server between each run.&lt;/p&gt;</comment>
                            <comment id="13609093" author="jmspaggi" created="Thu, 21 Mar 2013 16:33:19 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=xieliang007&quot; class=&quot;user-hover&quot; rel=&quot;xieliang007&quot;&gt;Liang Xie&lt;/a&gt; I ran 10 times the test in Trunk without your patch. I&apos;m now running with your patch. I also used &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7953&quot; title=&quot;Some HFilePerformanceEvaluation tests might fail because of scanner.getValue when there is no more row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7953&quot;&gt;&lt;del&gt;HBASE-7953&lt;/del&gt;&lt;/a&gt; to make sure tests are not failing. I will post the results today.&lt;/p&gt;</comment>
                            <comment id="13609196" author="jmspaggi" created="Thu, 21 Mar 2013 17:54:06 +0000"  >&lt;p&gt;Here we go!&lt;br/&gt;
jmspaggi@hbasetest:~/hbase$ cat before.txt | grep took | grep Gaus&lt;br/&gt;
13/03/21 11:39:36 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 120260ms.&lt;br/&gt;
13/03/21 11:44:42 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 119153ms.&lt;br/&gt;
13/03/21 11:49:49 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 119066ms.&lt;br/&gt;
13/03/21 11:54:55 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 118865ms.&lt;br/&gt;
13/03/21 12:00:02 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 119450ms.&lt;br/&gt;
13/03/21 12:05:11 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 122048ms.&lt;br/&gt;
13/03/21 12:10:14 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 119197ms.&lt;br/&gt;
13/03/21 12:15:22 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 119977ms.&lt;br/&gt;
13/03/21 12:20:32 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 121030ms.&lt;br/&gt;
13/03/21 12:25:38 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 119880ms.&lt;br/&gt;
jmspaggi@hbasetest:~/hbase$ cat after.txt | grep took | grep Gaus&lt;br/&gt;
13/03/21 12:56:07 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 119765ms.&lt;br/&gt;
13/03/21 13:01:14 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 119730ms.&lt;br/&gt;
13/03/21 13:06:20 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 119945ms.&lt;br/&gt;
13/03/21 13:11:24 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 119283ms.&lt;br/&gt;
13/03/21 13:16:29 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 118535ms.&lt;br/&gt;
13/03/21 13:21:30 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 117409ms.&lt;br/&gt;
13/03/21 13:26:37 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 119458ms.&lt;br/&gt;
13/03/21 13:31:43 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 119178ms.&lt;br/&gt;
13/03/21 13:36:48 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 118427ms.&lt;br/&gt;
13/03/21 13:41:55 INFO hbase.HFilePerformanceEvaluation: Running GaussianRandomReadBenchmark for 1000000 rows took 119580ms.&lt;/p&gt;


&lt;p&gt;jmspaggi@hbasetest:~/hbase$ cat before.txt | grep took | grep Write&lt;br/&gt;
13/03/21 11:35:42 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1307ms.&lt;br/&gt;
13/03/21 11:40:51 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1333ms.&lt;br/&gt;
13/03/21 11:45:58 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1328ms.&lt;br/&gt;
13/03/21 11:51:04 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1313ms.&lt;br/&gt;
13/03/21 11:56:09 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1302ms.&lt;br/&gt;
13/03/21 12:01:15 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1322ms.&lt;br/&gt;
13/03/21 12:06:23 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1304ms.&lt;br/&gt;
13/03/21 12:11:29 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1299ms.&lt;br/&gt;
13/03/21 12:16:37 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1329ms.&lt;br/&gt;
13/03/21 12:21:45 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1354ms.&lt;br/&gt;
jmspaggi@hbasetest:~/hbase$ cat after.txt | grep took | grep Write&lt;br/&gt;
13/03/21 12:52:14 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1261ms.&lt;br/&gt;
13/03/21 12:57:21 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1286ms.&lt;br/&gt;
13/03/21 13:02:27 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1338ms.&lt;br/&gt;
13/03/21 13:07:33 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1309ms.&lt;br/&gt;
13/03/21 13:12:39 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1317ms.&lt;br/&gt;
13/03/21 13:17:41 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1303ms.&lt;br/&gt;
13/03/21 13:22:45 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1328ms.&lt;br/&gt;
13/03/21 13:27:51 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1302ms.&lt;br/&gt;
13/03/21 13:32:57 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1301ms.&lt;br/&gt;
13/03/21 13:38:03 INFO hbase.HFilePerformanceEvaluation: Running SequentialWriteBenchmark for 1000000 rows took 1292ms.&lt;/p&gt;


&lt;p&gt;jmspaggi@hbasetest:~/hbase$ cat before.txt | grep took | grep UniformRandomSmallScan&lt;br/&gt;
13/03/21 11:35:46 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3989ms.&lt;br/&gt;
13/03/21 11:40:55 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3840ms.&lt;br/&gt;
13/03/21 11:46:01 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3898ms.&lt;br/&gt;
13/03/21 11:51:07 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3857ms.&lt;br/&gt;
13/03/21 11:56:13 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3912ms.&lt;br/&gt;
13/03/21 12:01:19 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3991ms.&lt;br/&gt;
13/03/21 12:06:27 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3858ms.&lt;br/&gt;
13/03/21 12:11:33 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3902ms.&lt;br/&gt;
13/03/21 12:16:41 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3898ms.&lt;br/&gt;
13/03/21 12:21:49 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3844ms.&lt;br/&gt;
jmspaggi@hbasetest:~/hbase$ cat after.txt | grep took | grep UniformRandomSmallScan&lt;br/&gt;
13/03/21 12:52:18 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3853ms.&lt;br/&gt;
13/03/21 12:57:25 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3915ms.&lt;br/&gt;
13/03/21 13:02:31 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3909ms.&lt;br/&gt;
13/03/21 13:07:37 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3955ms.&lt;br/&gt;
13/03/21 13:12:43 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3852ms.&lt;br/&gt;
13/03/21 13:17:45 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3853ms.&lt;br/&gt;
13/03/21 13:22:49 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3890ms.&lt;br/&gt;
13/03/21 13:27:55 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3848ms.&lt;br/&gt;
13/03/21 13:33:01 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3881ms.&lt;br/&gt;
13/03/21 13:38:07 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomSmallScan for 1000000 rows took 3893ms.&lt;/p&gt;


&lt;p&gt;jmspaggi@hbasetest:~/hbase$ cat before.txt | grep took | grep UniformRandomReadBenchmark&lt;br/&gt;
13/03/21 11:37:36 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 110016ms.&lt;br/&gt;
13/03/21 11:42:43 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 107885ms.&lt;br/&gt;
13/03/21 11:47:50 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 108216ms.&lt;br/&gt;
13/03/21 11:52:56 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 108158ms.&lt;br/&gt;
13/03/21 11:58:03 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 109513ms.&lt;br/&gt;
13/03/21 12:03:09 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 109805ms.&lt;br/&gt;
13/03/21 12:08:15 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 108181ms.&lt;br/&gt;
13/03/21 12:13:22 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 108953ms.&lt;br/&gt;
13/03/21 12:18:31 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 110007ms.&lt;br/&gt;
13/03/21 12:23:38 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 108967ms.&lt;br/&gt;
jmspaggi@hbasetest:~/hbase$ cat after.txt | grep took | grep UniformRandomReadBenchmark&lt;br/&gt;
13/03/21 12:54:08 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 109396ms.&lt;br/&gt;
13/03/21 12:59:14 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 109176ms.&lt;br/&gt;
13/03/21 13:04:20 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 108506ms.&lt;br/&gt;
13/03/21 13:09:25 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 107536ms.&lt;br/&gt;
13/03/21 13:14:30 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 107418ms.&lt;br/&gt;
13/03/21 13:19:32 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 107035ms.&lt;br/&gt;
13/03/21 13:24:37 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 107874ms.&lt;br/&gt;
13/03/21 13:29:44 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 108782ms.&lt;br/&gt;
13/03/21 13:34:50 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 109058ms.&lt;br/&gt;
13/03/21 13:39:55 INFO hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark for 1000000 rows took 108650ms.&lt;/p&gt;


&lt;p&gt;jmspaggi@hbasetest:~/hbase$ cat before.txt | grep took | grep SequentialReadBenchmark&lt;br/&gt;
13/03/21 11:39:37 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 414ms.&lt;br/&gt;
13/03/21 11:44:42 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 447ms.&lt;br/&gt;
13/03/21 11:49:49 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 567ms.&lt;br/&gt;
13/03/21 11:54:55 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 418ms.&lt;br/&gt;
13/03/21 12:00:03 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 421ms.&lt;br/&gt;
13/03/21 12:05:11 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 414ms.&lt;br/&gt;
13/03/21 12:10:15 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 433ms.&lt;br/&gt;
13/03/21 12:15:22 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 434ms.&lt;br/&gt;
13/03/21 12:20:32 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 418ms.&lt;br/&gt;
13/03/21 12:25:38 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 432ms.&lt;br/&gt;
jmspaggi@hbasetest:~/hbase$ cat after.txt | grep took | grep SequentialReadBenchmark&lt;br/&gt;
13/03/21 12:56:08 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 410ms.&lt;br/&gt;
13/03/21 13:01:14 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 418ms.&lt;br/&gt;
13/03/21 13:06:20 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 436ms.&lt;br/&gt;
13/03/21 13:11:25 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 403ms.&lt;br/&gt;
13/03/21 13:16:29 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 424ms.&lt;br/&gt;
13/03/21 13:21:30 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 423ms.&lt;br/&gt;
13/03/21 13:26:37 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 411ms.&lt;br/&gt;
13/03/21 13:31:44 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 422ms.&lt;br/&gt;
13/03/21 13:36:49 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 425ms.&lt;br/&gt;
13/03/21 13:41:55 INFO hbase.HFilePerformanceEvaluation: Running SequentialReadBenchmark for 1000000 rows took 428ms.&lt;/p&gt;


&lt;p&gt;Now, number wise...&lt;/p&gt;

&lt;p&gt;Here is the average for before your patch and after your patch. The % is the time it took for AFTER to complete compared to BEFORE. So overall, it has always been faster. From a small 0.6% for the GaussianRandomReadBenchmark to a big 4.5%  for SequentialReadBenchmark.&lt;/p&gt;


&lt;p&gt;GaussianRandomReadBenchmark	Before	119892.6	&lt;br/&gt;
GaussianRandomReadBenchmark	After	119131	99.36%&lt;/p&gt;

&lt;p&gt;SequentialWriteBenchmark	Before	1319.1	&lt;br/&gt;
SequentialWriteBenchmark	After	1303.7	98.83%&lt;/p&gt;

&lt;p&gt;UniformRandomallScan	Before	3898.9	&lt;br/&gt;
UniformRandomallScan	After	3884.9	99.64%&lt;/p&gt;

&lt;p&gt;UniformRandomReadBenchmark	Before	108970.1	&lt;br/&gt;
UniformRandomReadBenchmark	After	108343.1	99.42%&lt;/p&gt;

&lt;p&gt;SequentialReadBenchmark	Before	439.8	&lt;br/&gt;
SequentialReadBenchmark	After	420	95.50%&lt;/p&gt;</comment>
                            <comment id="13609206" author="yuzhihong@gmail.com" created="Thu, 21 Mar 2013 17:58:01 +0000"  >&lt;p&gt;Thanks Jean-Marc for doing the comparison.&lt;/p&gt;

&lt;p&gt;Based on the above, I give +1 for Liang&apos;s patch.&lt;/p&gt;</comment>
                            <comment id="13609226" author="ram_krish" created="Thu, 21 Mar 2013 18:02:39 +0000"  >&lt;p&gt;JM , thanks for your work.  &lt;/p&gt;</comment>
                            <comment id="13609327" author="stack" created="Thu, 21 Mar 2013 19:12:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmspaggi&quot; class=&quot;user-hover&quot; rel=&quot;jmspaggi&quot;&gt;Jean-Marc Spaggiari&lt;/a&gt; Nice.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13609345" author="stack" created="Thu, 21 Mar 2013 19:25:26 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=xieliang007&quot; class=&quot;user-hover&quot; rel=&quot;xieliang007&quot;&gt;Liang Xie&lt;/a&gt; I don&apos;t think you answered all my review questions above.  Thanks.&lt;/p&gt;

&lt;p&gt;getFakedKey is a bad name for what you are about.  How about getShortMidpointKey?  Also, in the comment, say what the method is trying to achieve.  You point at the issue but that is being a little (lazy) and besides the issue subject is &apos;optimize&apos; which is pretty general.&lt;/p&gt;

&lt;p&gt;Do you need to do this copy?&lt;/p&gt;

&lt;p&gt;+      if (leftKey == null) &lt;/p&gt;
{
+        return Arrays.copyOf(rightKey, rightKey.length);
+      }

&lt;p&gt;I suppose it is safer.&lt;/p&gt;

&lt;p&gt;This define should be in HFile rather than in HConstants so it is beside where it is used:&lt;/p&gt;

&lt;p&gt;HConstants.FAKE_INDEX_KEY_MAGIC&lt;/p&gt;

&lt;p&gt;Also, &apos;FAKE&apos; has negative connotations whereas what you are doing here is clever in a good way; would suggest you drop use of &apos;fake&apos; and just say INDEX_KEY_MAGIC (ditto for method names).&lt;/p&gt;

&lt;p&gt;Why this now:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      &lt;span class=&quot;code-comment&quot;&gt;// Expected block reads: 2. [HBASE-4443]
&lt;/span&gt;-      kvs = getData(FAMILY, &lt;span class=&quot;code-quote&quot;&gt;&quot;row&quot;&lt;/span&gt;, Arrays.asList(&lt;span class=&quot;code-quote&quot;&gt;&quot;col5&quot;&lt;/span&gt;), 2);
+      &lt;span class=&quot;code-comment&quot;&gt;// Expected block reads: 1. [HBASE-4443]&amp;amp;[HBASE-7845]
&lt;/span&gt;+      kvs = getData(FAMILY, &lt;span class=&quot;code-quote&quot;&gt;&quot;row&quot;&lt;/span&gt;, Arrays.asList(&lt;span class=&quot;code-quote&quot;&gt;&quot;col5&quot;&lt;/span&gt;), 1);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You have a good few tests of new functionality.  That is good.  I&apos;d think we should try this as part of a long-running job before commit.  I can volunteer to do that....... &lt;/p&gt;</comment>
                            <comment id="13609849" author="xieliang007" created="Fri, 22 Mar 2013 03:10:22 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, the expected blocks read number being reduced because:&lt;br/&gt;
Without patch, the search for row/cf1/col5 is done by looking for &quot;row/cf1/col5/LATEST_TIMESTAMP/...&quot;, and this will land us in previous block(col4), found mis-matched(blockseek return 1), then advance to current block(issued a HFileScanner.next operation).&lt;/p&gt;

&lt;p&gt;With patch, due to faked index key effect, we locate the current block(col5) directly and blockSeek return -2, then we don&apos;t need to request HFileScanner.next, which will call readNextDataBlock internally&lt;/p&gt;

&lt;p&gt;Hope it&apos;s clear, sorry for my poor english&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13609852" author="yuzhihong@gmail.com" created="Fri, 22 Mar 2013 03:15:13 +0000"  >&lt;p&gt;Liang:&lt;br/&gt;
I think you explained clearly.&lt;br/&gt;
There is no need to say that your English is poor.&lt;/p&gt;

&lt;p&gt;Cheers&lt;/p&gt;

</comment>
                            <comment id="13609893" author="xieliang007" created="Fri, 22 Mar 2013 04:14:37 +0000"  >&lt;p&gt;v9 renamed getFakedKey to getShortMidpointKey&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This define should be in HFile rather than in HConstants so it is beside where it is used:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If we move it into HFile(hbase-server module), then hbase-common module(BufferedDataBlockEncoder) will need to depend it, it&apos;s improper seems to me.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;I&apos;d think we should try this as part of a long-running job before commit. I can volunteer to do that....... &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Thanks very much. btw, this feature had been enabled in our internal 0.94.3 cluster more than ten days before, so far so good&lt;/p&gt;</comment>
                            <comment id="13609953" author="hadoopqa" created="Fri, 22 Mar 2013 05:20:31 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12574952/HBASE-7845-v9.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12574952/HBASE-7845-v9.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestTableLockManager&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.TestGlobalMemStoreSize.testGlobalMemStore(TestGlobalMemStoreSize.java:131)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4961//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13609959" author="stack" created="Fri, 22 Mar 2013 05:27:25 +0000"  >&lt;p&gt;I&apos;m +1 on this patch for trunk and 0.95 after looking at latest version &amp;#8211; thanks for addressing the review &amp;#8211; and given you fellas are running it.  Let me retry hadoopqa to see if the above fails are just sporadic.&lt;/p&gt;</comment>
                            <comment id="13609994" author="hadoopqa" created="Fri, 22 Mar 2013 06:44:32 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12574964/HBASE-7845-v9.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12574964/HBASE-7845-v9.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestTableLockManager&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4963//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13610021" author="xieliang007" created="Fri, 22 Mar 2013 07:37:19 +0000"  >&lt;p&gt;so weird, i ran &quot;mvn clean test -P localTests -Dtest=TestTableLockManager&quot; in local twice, both were successful, and it took about 330s.&lt;br/&gt;
and from HADOOP QA report, the failure were caused by &quot;test timed out after 600000 milliseconds&quot;&lt;/p&gt;</comment>
                            <comment id="13610969" author="yuzhihong@gmail.com" created="Fri, 22 Mar 2013 17:33:18 +0000"  >&lt;p&gt;TestTableLockManager failure is tracked by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8164&quot; title=&quot;TestTableLockManager fails intermittently in trunk builds&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8164&quot;&gt;&lt;del&gt;HBASE-8164&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13611698" author="xieliang007" created="Sat, 23 Mar 2013 12:41:04 +0000"  >&lt;p&gt;Is there any other blocking things for this jira need me to do? or we could go ahead now ?&lt;/p&gt;</comment>
                            <comment id="13611856" author="stack" created="Sat, 23 Mar 2013 21:13:38 +0000"  >&lt;p&gt;Committed to 0.95 and to 0.98.  Thanks for nice little trick making keys for index &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=xieliang007&quot; class=&quot;user-hover&quot; rel=&quot;xieliang007&quot;&gt;Liang Xie&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13611907" author="hudson" created="Sun, 24 Mar 2013 00:05:37 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #39 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/39/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/39/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7845&quot; title=&quot;optimize hfile index key&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7845&quot;&gt;&lt;del&gt;HBASE-7845&lt;/del&gt;&lt;/a&gt; optimize hfile index key (Revision 1460232)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksRead.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13775389" author="stack" created="Mon, 23 Sep 2013 18:31:24 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12523623">HBASE-4443</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12571110" name="HBASE-7845-v2.txt" size="9790" author="xieliang007" created="Wed, 27 Feb 2013 01:47:10 +0000"/>
                            <attachment id="12572305" name="HBASE-7845-v3.txt" size="26140" author="xieliang007" created="Wed, 6 Mar 2013 10:37:11 +0000"/>
                            <attachment id="12572508" name="HBASE-7845-v4.txt" size="24837" author="xieliang007" created="Thu, 7 Mar 2013 08:55:24 +0000"/>
                            <attachment id="12572724" name="HBASE-7845-v5.txt" size="25428" author="xieliang007" created="Fri, 8 Mar 2013 07:42:53 +0000"/>
                            <attachment id="12573309" name="HBASE-7845-v6.txt" size="26060" author="xieliang007" created="Tue, 12 Mar 2013 11:54:54 +0000"/>
                            <attachment id="12574510" name="HBASE-7845-v7.txt" size="24646" author="xieliang007" created="Wed, 20 Mar 2013 09:02:00 +0000"/>
                            <attachment id="12574520" name="HBASE-7845-v8.txt" size="25165" author="xieliang007" created="Wed, 20 Mar 2013 10:41:27 +0000"/>
                            <attachment id="12574964" name="HBASE-7845-v9.txt" size="25474" author="stack" created="Fri, 22 Mar 2013 05:27:59 +0000"/>
                            <attachment id="12574952" name="HBASE-7845-v9.txt" size="25474" author="xieliang007" created="Fri, 22 Mar 2013 04:07:30 +0000"/>
                            <attachment id="12570951" name="HBASE-7845.txt" size="9790" author="xieliang007" created="Tue, 26 Feb 2013 08:55:12 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 19 Feb 2013 06:30:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>312820</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1hzfb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>313166</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mimics Leveldb ByteWiseComparatorImpl::FindShortestSeparator() &amp;amp; FindShortSuccessor() to reduce index key size</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.96notable</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>