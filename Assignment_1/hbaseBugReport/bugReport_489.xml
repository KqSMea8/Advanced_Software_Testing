<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:44:44 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-489/HBASE-489.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-489] CellValue class for transporting cell timestamp with cell value simultaneously</title>
                <link>https://issues.apache.org/jira/browse/HBASE-489</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;All of the get* methods take a timestamp parameter that means &quot;at least as old as X&quot;. This is handy for getting data that fits your expectations about when it should exist. However, the result you get back doesn&apos;t actually contain the real timestamp the cell was stored at. &lt;/p&gt;

&lt;p&gt;For example, let&apos;s say you write the stock price for your favorite company into row &quot;YHOO&quot; at cell &quot;stock:price&quot;. It takes the default timestamp of right now. Then, a day passes. You want to get the most recent stock price for YHOO, and also when the price was gathered. In the current system, you couldn&apos;t do this at all without also doing a scan at the same time. &lt;/p&gt;

&lt;p&gt;If we added a new class called CellValue that contained the byte[] cell value as well as the long timestamp of when it was stored, we could return an instance of this class wherever we used to return just the byte[]. This could be used in all the get() methods, getRow, getClosestAtOrBefore, etc. This has the advantage of making timestamp into a first-class citizen in HBase, which it hasn&apos;t been so far.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12390103">HBASE-489</key>
            <summary>CellValue class for transporting cell timestamp with cell value simultaneously</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanduxbury">Bryan Duxbury</assignee>
                                    <reporter username="bryanduxbury">Bryan Duxbury</reporter>
                        <labels>
                    </labels>
                <created>Tue, 4 Mar 2008 00:18:33 +0000</created>
                <updated>Fri, 22 Aug 2008 21:13:10 +0000</updated>
                            <resolved>Sat, 8 Mar 2008 18:32:49 +0000</resolved>
                                                    <fixVersion>0.2.0</fixVersion>
                                    <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12574809" author="stack" created="Tue, 4 Mar 2008 00:54:22 +0000"  >&lt;p&gt;We need this&lt;/p&gt;</comment>
                            <comment id="12574811" author="bryanduxbury" created="Tue, 4 Mar 2008 00:58:57 +0000"  >&lt;p&gt;Since you can&apos;t overload methods on return type, we&apos;re going to have to make an incompatible change or use new methods altogether (ie getWithTimestamp). I&apos;m leaning towards breaking compatibility. Others want to chime in?&lt;/p&gt;</comment>
                            <comment id="12574820" author="jimk" created="Tue, 4 Mar 2008 02:32:53 +0000"  >&lt;p&gt;+1 on adding this.&lt;/p&gt;

&lt;p&gt;In trunk it is ok to break compatibility so long as you deprecate the old interface and continue to support it for one version.&lt;/p&gt;</comment>
                            <comment id="12574821" author="bryanduxbury" created="Tue, 4 Mar 2008 02:43:00 +0000"  >&lt;p&gt;We can&apos;t deprecate the old version, because we&apos;re only changing the return value. &lt;/p&gt;

&lt;p&gt;Current:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] get(Text row, Text column)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;New:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; CellValue get(Text row, Text column)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We could rename either the new or old methods to something like &quot;getCellValue&quot; or &quot;getByteArray&quot; or &quot;getOldStyle&quot; etc. However any approach that doesn&apos;t break already written code is also very ugly and will have to change in the future one way or another.&lt;/p&gt;</comment>
                            <comment id="12574822" author="jimk" created="Tue, 4 Mar 2008 02:57:58 +0000"  >&lt;p&gt;Yuk! You are right.&lt;/p&gt;

&lt;p&gt;We need this, but cannot break compatibility until 0.3. So just deprecate the current APIs for now and that will give use more time to think about the right interface for 0.3.&lt;/p&gt;

&lt;p&gt;This is not a must have for 0.2 which is supposed to focus on reliability and robustness.&lt;/p&gt;</comment>
                            <comment id="12574823" author="jimk" created="Tue, 4 Mar 2008 03:02:57 +0000"  >&lt;p&gt;There have also been requests for cells between time X and time Y. Keep that in mind.&lt;/p&gt;</comment>
                            <comment id="12574833" author="stack" created="Tue, 4 Mar 2008 03:58:19 +0000"  >&lt;p&gt;Deprecating API w/o pointing user at alternative is going to be confusing.  How about we just go for it and if complaint point to the immature software clause as our protection?  Probably sooner rather than later would be better though, yeah, its a bit off-focus for next release.&lt;/p&gt;</comment>
                            <comment id="12575127" author="bryanduxbury" created="Tue, 4 Mar 2008 20:29:25 +0000"  >&lt;p&gt;I also agree that the immature software clause is our best protection. &lt;/p&gt;

&lt;p&gt;While it&apos;s not critical for 0.2, it is a really useful improvement, and it is best if we can do it sooner than later. At the very least we could implement in at the layers lower than the HTable API and pull it up later when its appropriate. Or, we could change the methods to do what we want them to right away, and make new methods like getWithoutTimestamp that are immediately deprecated, but give people a way to change their code minimally.&lt;/p&gt;</comment>
                            <comment id="12576364" author="bryanduxbury" created="Fri, 7 Mar 2008 20:33:47 +0000"  >&lt;p&gt;Let&apos;s call the new class Cell, not CellValue. Nothing else changes.&lt;/p&gt;</comment>
                            <comment id="12576409" author="bryanduxbury" created="Fri, 7 Mar 2008 22:19:21 +0000"  >&lt;p&gt;Here&apos;s the first go at this issue.&lt;/p&gt;

&lt;p&gt;I&apos;ve added the Cell class. Every get and getRow method now returns Cell objects where they used to return byte[] objects. There are versions of get and getRow that return byte[] named *WithoutTimestamps that just pull off the timestamp parts.&lt;/p&gt;

&lt;p&gt;I&apos;ve also updated HBaseMapWritable to throw exceptions if the object you&apos;re trying to put isn&apos;t a Writable in the short list at the beginning of the class. &lt;/p&gt;

&lt;p&gt;Finally, as a side effect, I removed REST&apos;s unused MIME code, because it was getting to be a hassle to update code that wasn&apos;t ever being used.&lt;/p&gt;

&lt;p&gt;Review, please!&lt;/p&gt;</comment>
                            <comment id="12576418" author="bryanduxbury" created="Fri, 7 Mar 2008 22:28:48 +0000"  >&lt;p&gt;Only difference in this patch is includes fix to HBaseMapWritable for HRegionInfo appearing in two spots in code creation.&lt;/p&gt;</comment>
                            <comment id="12576440" author="jimk" created="Fri, 7 Mar 2008 23:30:21 +0000"  >&lt;p&gt;Review of changes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;We probably don&apos;t need new methods that are immediately deprecated. This is an incompatible change and people will have to modify their code anyway. They might as well do the &apos;right thing&apos; from the start.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Javadoc for Cell.java please. What does the class do? Where/how is it used. Maybe a note about immutability. @return for the getters.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Bump version number in HRegionInterface&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In HStore:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/*        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; ImmutableBytesWritable.toArray(results);*/
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;No need to comment out, just delete. We can always get back the old code from svn.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In GenericHandler, ScannerHandler. TableHandler: matter of style. If you comment out using // at beginning of line, you can never get burned by a stray */ Eclipse and Emacs make this easy by selecting a region and then (for eclipse) source-&amp;gt;toggle comment (or for emacs) M-x comment-region. They both have reverse operations too.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-SelectCommand, TableHandler, ThriftServer: Why use the deprecated interfaces when they will just have to be changed anyway?&lt;/p&gt;

&lt;p&gt;-HBaseTestCase: Cell is imported twice&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;TestDeleteAll, TestDeleteFamily, TestGet2: just remove assertCellEquals&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I assume that all the tests run.&lt;/p&gt;

&lt;p&gt;With above changes, +1&lt;/p&gt;
</comment>
                            <comment id="12576467" author="bryanduxbury" created="Sat, 8 Mar 2008 01:43:20 +0000"  >&lt;p&gt;This patch incorporates Jim&apos;s suggestions. Yes, the tests pass locally.&lt;/p&gt;

&lt;p&gt;If I could get Stack or Jim to run the test suite and +1 I&apos;ll commit.&lt;/p&gt;</comment>
                            <comment id="12576479" author="jimk" created="Sat, 8 Mar 2008 02:45:32 +0000"  >&lt;p&gt;Aside from some javadoc where there are two @throws IOException or there is no mention for @throws IOError in ThriftServer.java, the edits look real nice. Thanks Bryan!. Running the tests now.&lt;/p&gt;</comment>
                            <comment id="12576481" author="jimk" created="Sat, 8 Mar 2008 03:03:05 +0000"  >&lt;p&gt;All tests passed except TestTableMapReduce which we know is problematic.&lt;/p&gt;

&lt;p&gt;So if Javadoc for ThriftServer is fixed, +1&lt;/p&gt;

&lt;p&gt;For future reference, if we deprecate an interface, we should update tests to use the new one. Not a problem in this case, but when we deprecated startUpdate, put, delete, commit, etc on HTable, the tests should have been updated to use the new BatchUpdate interface.&lt;/p&gt;

&lt;p&gt;Thanks again Bryan!&lt;/p&gt;</comment>
                            <comment id="12576576" author="bryanduxbury" created="Sat, 8 Mar 2008 18:32:49 +0000"  >&lt;p&gt;I just committed this with a few javadoc updates Jim suggested.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12390273">HBASE-493</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12387335">HBASE-40</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12388250">HBASE-430</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12383016">HBASE-31</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12377400" name="489-v2.patch" size="75151" author="bryanduxbury" created="Fri, 7 Mar 2008 22:28:48 +0000"/>
                            <attachment id="12377413" name="489-v3.patch" size="80070" author="bryanduxbury" created="Sat, 8 Mar 2008 01:43:20 +0000"/>
                            <attachment id="12377399" name="489.patch" size="74893" author="bryanduxbury" created="Fri, 7 Mar 2008 22:19:20 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 4 Mar 2008 00:54:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31726</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 41 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h7lz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98495</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>