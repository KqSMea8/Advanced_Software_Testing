<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:07:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3112/HBASE-3112.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3112] Enable and disable of table needs a bit of loving in new master</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3112</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The tools are in place to do a more reliable enable/disable of tables.  Some work has been done to hack in a basic enable/disable but its not enough &amp;#8211; see the test avro/thrift tests where a disable/enable/disable switchback can confuse the table state (and has been disabled until this issue addressed).&lt;/p&gt;

&lt;p&gt;This issue is about finishing off enable/disable in the new master.   I think we need to add to the table znode an enabling/disabling state rather than have them binary with a watcher that will stop an enable (or disable) starting until the previous completes (Currently we atomically switch the state though the region close/open lags &amp;#8211; some work in enable/disable handlers helps in that they won&apos;t complete till all regions have transitioned.. but its not enough).&lt;/p&gt;

&lt;p&gt;Need to add tests too.&lt;/p&gt;

&lt;p&gt;Marking issue critical bug because loads of the questions we get on lists are about enable/disable probs.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12477377">HBASE-3112</key>
            <summary>Enable and disable of table needs a bit of loving in new master</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 Oct 2010 17:17:47 +0000</created>
                <updated>Fri, 20 Nov 2015 12:41:15 +0000</updated>
                            <resolved>Tue, 9 Nov 2010 21:33:56 +0000</resolved>
                                                    <fixVersion>0.90.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12924075" author="jdcryans" created="Fri, 22 Oct 2010 23:15:52 +0000"  >&lt;p&gt;While testing if &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2522&quot; title=&quot;Disabling a table during a split (tricky) can leave the daughter regions assigned and marked offline in .META.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2522&quot;&gt;&lt;del&gt;HBASE-2522&lt;/del&gt;&lt;/a&gt; was still there with the new master, I found out that we assign the parent regions when we re-enable the table (but disabling seems to work ok).&lt;/p&gt;</comment>
                            <comment id="12926683" author="stack" created="Sun, 31 Oct 2010 06:00:33 +0000"  >&lt;p&gt;Testing up on a biggish cluster (3k regions), I see this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

hbase(main):002:0&amp;gt; disable &apos;usertable&apos;





10/10/31 05:52:45 INFO client.HBaseAdmin: Disabled usertable
0 row(s) in 113.3990 seconds

hbase(main):003:0&amp;gt;
hbase(main):004:0*
hbase(main):005:0*
hbase(main):006:0*
hbase(main):007:0*
hbase(main):008:0* enable &apos;usertable&apos;




10/10/31 05:57:45 INFO client.HBaseAdmin: Enabled table usertable
0 row(s) in 273.0060 seconds
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... it seems wrong that the shell is waiting.  I thought enable/disable near instantaneous... I suppose these are shell commands are hung up on the disable/enable handlers which is fine I suppose, for now.  Checking.&lt;/p&gt;</comment>
                            <comment id="12928294" author="stack" created="Thu, 4 Nov 2010 18:20:19 +0000"  >&lt;p&gt;Shell waits on enable/disable.  Thats probably fine except I see this on enable of 600 regions that are taking a little while:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

ERROR: java.net.SocketTimeoutException: Call to sv2borg180/10.20.20.180:60000 failed on socket timeout exception: java.net.SocketTimeoutException: 60000 millis timeout &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; channel to be ready &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; read. ch : java.nio.channels.SocketChannel[connected local=/10.20.20.180:40901 remote=sv2borg180/10.20.20.180:60000]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... which would be a little disorientating.&lt;/p&gt;

&lt;p&gt;St.Ack&lt;/p&gt;</comment>
                            <comment id="12928876" author="stack" created="Fri, 5 Nov 2010 23:33:43 +0000"  >&lt;p&gt;So, its possible for the &apos;enabled&apos; flag to be set in zk but all regions get offlined (e.g. server crashed while disabling some regions).  The way we online is that we get the list of all the regions in a table and regardless, we go assign WHETHER OR NOT THE REGION HAS BEEN OFFLINED OR NOT.  Can &quot;double&quot; the regions on your cluster.&lt;/p&gt;

&lt;p&gt;Currently also, the client will not go to the server if it sees that the table state is disabled up in zk.  This is not helpful for the case where not all regions were offlined (see above).&lt;/p&gt;

&lt;p&gt;So, need to think about it some.  Could be as simple as checking state of region before we enable/disable (assign/unassign) since we got its state from .META. (if not in RIT that is).&lt;/p&gt;

&lt;p&gt;Could introduce a disabling/enabling state and disabling a table, you make entry in zk, one for each region.&lt;/p&gt;

&lt;p&gt;Need to add to hbck note as to whether table is enabled or disabled.&lt;/p&gt;

&lt;p&gt;Could do minimum for now and come back to this later after 0.90.0.&lt;/p&gt;</comment>
                            <comment id="12928881" author="streamy" created="Fri, 5 Nov 2010 23:41:41 +0000"  >&lt;p&gt;I don&apos;t think we need disabling/enabling at region granularity.  When master acknowledges opens/closes of regions, he already checks if a table is disabled.  I think that stuff is mostly good.&lt;/p&gt;

&lt;p&gt;I think adding enabling/disabling to the disabled table node that we&apos;ve added should be sufficient.  Just need a master to have an internal state about an enabling or disabling table.  If failover, master will rebuild this state for any table in a enabling/disabling state (he&apos;ll have to actually ask everyone what they serve) and will issue assign/unassign as necessary.&lt;/p&gt;

&lt;p&gt;Can you describe the case you&apos;ve seen a little better?  I&apos;d like to add a test of it.  It&apos;s when enabling a table?  Not quite sure I understand exactly at which point who is dying?&lt;/p&gt;</comment>
                            <comment id="12928929" author="stack" created="Sat, 6 Nov 2010 04:32:09 +0000"  >&lt;p&gt;On way home was thinking of how I need a disabling/enabling state for a table.  I need at least for case where a split is happening when a region is being disabled.  When splits go to open on the regionserver, they should check zk if table is disabled or disabling and pass on the open (splits don&apos;t do state up in zk).&lt;/p&gt;

&lt;p&gt;@Jon Disable and enable are run from executor.  In each case, we do a get of all regions in a table and then per region we run unassign inline inside in the executor.  Any failure of a server while this process is going on makes for a table that is partially disabled/enabled.&lt;/p&gt;
</comment>
                            <comment id="12928932" author="stack" created="Sat, 6 Nov 2010 05:02:04 +0000"  >&lt;p&gt;Currently enable/disable runs synchronously and serially in that the enable/disable handler runs each table regions unassign one after the other.  This is at a minimum slow when it doesn&apos;t have to be.&lt;/p&gt;

&lt;p&gt;What if we changed it so it was async.&lt;/p&gt;

&lt;p&gt;Here is how it might work.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Client invokes disable table on master
	&lt;ul&gt;
		&lt;li&gt;Disable invocation returns immediately&lt;/li&gt;
		&lt;li&gt;We add a new is_disabled/is_enabled call to client so client can check on state of enable/disable.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Master queues a DisableTableHandler.
	&lt;ul&gt;
		&lt;li&gt;DTH checks if table already disabled, if so returns&lt;/li&gt;
		&lt;li&gt;Otherwise, sets disabling flag up in zk then loops on
		&lt;ul&gt;
			&lt;li&gt;Getting all regions in a table from meta&lt;/li&gt;
			&lt;li&gt;Per region, checks if in RIT or not already offline, and if not queues close region executor&lt;/li&gt;
			&lt;li&gt;Waits around till all table regions clear RIT&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;On exit from the loop, it sets up in zk that table is disabled.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Same for ETH&lt;/p&gt;

&lt;p&gt;If master dies midway, new master will start up a DTH or ETH per table that has disabling or enabling up in zk.&lt;/p&gt;

&lt;p&gt;DTH/ETH must be made idempotent because I think there are situations even still in which they might fail. If they fail, user might reschedule the disable/enable which would start up a new DTH (if already a DTH queued and running, they won&apos;t clash since only one thread for this exectuor and the second will just early out because when it checks flag in zk it&apos;ll be disabled so it&apos;ll have no work to do).&lt;/p&gt;</comment>
                            <comment id="12928935" author="stack" created="Sat, 6 Nov 2010 06:05:59 +0000"  >&lt;p&gt;Just a start.&lt;/p&gt;

&lt;p&gt;Cleans out code that used set the offline of a region into .META.  We don&apos;t do &apos;offline&apos; disabling.. that state is in zk.  Offline is only for parents of splits not yet cleared.&lt;/p&gt;

&lt;p&gt;Started in on a bulk assigned for enable/disable of table so can have an executor to run assign/unassigns in bulk.&lt;/p&gt;

&lt;p&gt;DTH is a mess.&lt;/p&gt;

&lt;p&gt;TODO: Add disabling/enabling of table.. try to use same znode to hold all disabling/enable/disabled states.&lt;/p&gt;</comment>
                            <comment id="12929313" author="stack" created="Sun, 7 Nov 2010 06:08:09 +0000"  >&lt;p&gt;Here is complete implementation for disable.  I have enable to do yet.&lt;/p&gt;

&lt;p&gt;Adds new base bulk assign class used on start up doing bulk assign and for enable/disable.  Adds new enabling/disabling table states up in zk.&lt;/p&gt;

&lt;p&gt;Not tested but outline of how things will work should be plain.&lt;/p&gt;</comment>
                            <comment id="12929383" author="stack" created="Sun, 7 Nov 2010 18:35:22 +0000"  >&lt;p&gt;Add enable of a table.  Still need to test.&lt;/p&gt;</comment>
                            <comment id="12929689" author="hbasereviewboard" created="Mon, 8 Nov 2010 19:40:28 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase and Jonathan Gray.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Renamed ZKTableDisable as ZKTable, making it a generic zk util for managing &apos;tables&apos;.&lt;br/&gt;
Added enabing/disabling states to table the current set of enabled/disabled only.&lt;/p&gt;

&lt;p&gt;M src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;br/&gt;
  (createSetData): Added.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  Removed offlining region utility methods no longer used.&lt;br/&gt;
  (We do it now over in MetaEditor)&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
  Javadoc.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;br/&gt;
  Add a base abstract class to do &apos;bulk assignments&apos;.  Redo&lt;br/&gt;
  assignAllUserRegions to use subclass of new bulk assigner class.&lt;br/&gt;
  Added isTableEnabled, disablingTable, enablingTable.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java&lt;br/&gt;
  Redid to use new bulk assigner class.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java&lt;br/&gt;
A Added TestZKTable&lt;/p&gt;


&lt;p&gt;This addresses bug hbase-3112.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/hbase-3112&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/hbase-3112&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/DeleteTableHandler.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableDisable.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 1032652 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/master/TestMasterFailover.java 1032652 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/zookeeper/TestZKTable.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1187/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;stack&lt;/p&gt;

</comment>
                            <comment id="12929694" author="hbasereviewboard" created="Mon, 8 Nov 2010 19:49:07 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-11-08 11:47:12.895726)&lt;/p&gt;


&lt;p&gt;Review request for hbase and Jonathan Gray.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Patch was missing the new files.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Renamed ZKTableDisable as ZKTable, making it a generic zk util for managing &apos;tables&apos;.&lt;br/&gt;
Added enabing/disabling states to table the current set of enabled/disabled only.&lt;/p&gt;

&lt;p&gt;M src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;br/&gt;
  (createSetData): Added.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  Removed offlining region utility methods no longer used.&lt;br/&gt;
  (We do it now over in MetaEditor)&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
  Javadoc.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;br/&gt;
  Add a base abstract class to do &apos;bulk assignments&apos;.  Redo&lt;br/&gt;
  assignAllUserRegions to use subclass of new bulk assigner class.&lt;br/&gt;
  Added isTableEnabled, disablingTable, enablingTable.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java&lt;br/&gt;
  Redid to use new bulk assigner class.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java&lt;br/&gt;
A Added TestZKTable&lt;/p&gt;


&lt;p&gt;This addresses bug hbase-3112.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/hbase-3112&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/hbase-3112&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/DeleteTableHandler.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTable.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableDisable.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 1032652 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/master/TestMasterFailover.java 1032652 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/zookeeper/TestZKTable.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1187/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;stack&lt;/p&gt;

</comment>
                            <comment id="12929700" author="hbasereviewboard" created="Mon, 8 Nov 2010 19:52:29 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/#review1840&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#review1840&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Going to continue review on v2 patch&lt;/p&gt;


&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment5962&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment5962&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    whitespace (and we don&apos;t have IOException in javadoc but that&apos;s not your fault)&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment5964&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment5964&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What does this mean?  done vs. not done?  I think we should be more descriptive in the logging (if done, then we&apos;ve completed assignment of regions on cluster startup).  But if not done, on startup, what does this mean?  There&apos;s comment later that RIT timeouts should fix it up, so should be in log message here?  Or on startup case of bulk assign, should we fail startup here if this doesn&apos;t pass?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment5961&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment5961&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can we move all this stuff into a separate class?  AssignmentManager is getting huge.  Maybe BulkAssign could be class that contains all these other class definitions?&lt;/p&gt;

&lt;p&gt;    Also gives good opportunity in class comment to describe in general how this stuff works.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12929703" author="hbasereviewboard" created="Mon, 8 Nov 2010 20:03:05 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-08 11:50:55, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java, line 1143&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/diff/1/?file=16872#file16872line1143&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff/1/?file=16872#file16872line1143&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What does this mean?  done vs. not done?  I think we should be more descriptive in the logging (if done, then we&apos;ve completed assignment of regions on cluster startup).  But if not done, on startup, what does this mean?  There&apos;s comment later that RIT timeouts should fix it up, so should be in log message here?  Or on startup case of bulk assign, should we fail startup here if this doesn&apos;t pass?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Removed it.  It confuses (see above for exhibit A).&lt;/p&gt;

&lt;p&gt;If problem doing bulk assign, we&apos;ll crash out master.  Otherwise, timeout of RIT should fix bulk assign stragglers.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-08 11:50:55, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java, line 1149&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/diff/1/?file=16872#file16872line1149&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff/1/?file=16872#file16872line1149&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can we move all this stuff into a separate class?  AssignmentManager is getting huge.  Maybe BulkAssign could be class that contains all these other class definitions?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Also gives good opportunity in class comment to describe in general how this stuff works.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;BulkAssigner class comment says &amp;#8211; perhaps a little curtly &amp;#8211; what it does?  I&apos;ll move it out.  The implementations though I&apos;ll leave beside where they are used &amp;#8211; in class.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/#review1840&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#review1840&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12929709" author="hbasereviewboard" created="Mon, 8 Nov 2010 20:14:27 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/#review1841&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#review1841&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Looks pretty good.  Should be much improved.&lt;/p&gt;

&lt;p&gt;What about client-side semantics and checks?  I thought there was going to be some change there?  An async trigger and then a fast way to see if it&apos;s done or not?  Should be clear on javadoc since enable/disable is always thing we get questions on.&lt;/p&gt;

&lt;p&gt;I think most of my issues with patch is that it adds huge amount of new code into already big AssignmentManager class.  Should move these classes out and not sure if we should have these methods which just touch ZK.  I think having all logic about the state transitions, usage of ZK, etc more explicitly controlled in the handlers themselves might be more clear to follow how this works.  Maybe not but was a little hard to follow (that, for example, we don&apos;t have enabling/disabling states in memory... where we were talking about in-memory state vs zk states, etc).&lt;/p&gt;

&lt;p&gt;Also, ZKTable can be simplified (and made more future proof) with an enum.&lt;/p&gt;

&lt;p&gt;Now, for failover, I know we said we would punt to 0.92 on handling of this case, but we should at least make it so we don&apos;t get into broken state if we have a master failover.  What will happen if we are in disabling up in zk but not all closes have been done?&lt;/p&gt;

&lt;p&gt;Lastly... I think we definitely need some unit tests on this stuff.  TestMasterFailover does a little but not really relevant to these changes (only deals with regions already RIT).  TestRollingRestart does an enable/disable of table.  But none of this stuff takes into account failure of stuff in handlers, failure of RS, etc... Don&apos;t need to hold up this patch on unit tests if it&apos;s working in cluster testing on large tables, but it&apos;s kind of thing that would be good to test at some point.&lt;/p&gt;


&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment5966&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment5966&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I thought we had this method somewhere already?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment5967&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment5967&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    nevermind, you just moved it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment5968&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment5968&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace, and should make note that this is checking ZK not in-memory state?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment5969&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment5969&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Are these methods necessary?  Seems like unnecessary stuff in AssignmentManager.  The Handlers can just use the ZK methods directly?  (keep the AM methods as check/set of it&apos;s internal state?)&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment5970&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment5970&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is for repeated runs of enable?  Should we log if this actually removes regions (table has X total regions, already Y online, assigning Z still offline)?&lt;/p&gt;

&lt;p&gt;    It&apos;s okay that this operation is not done under any locks?  Couldn&apos;t regions be coming online/offline concurrent with this operation?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTable.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment5972&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment5972&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    whitespace&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTable.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment5973&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment5973&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    enum?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTable.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment5975&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment5975&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    yeah, instead of all these permutations on isEnabledOrDisabling and what not, should just use an enum and pass that in as argument to method which checks node state.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment5976&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment5976&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What is this method&apos;s policy on watches?  Please note it in javadoc.  This method is not at all strict and is multiple operations so is not safe to use on nodes where we rely on watches / monitoring of state transitions, so let&apos;s make some kind of note.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12929841" author="hbasereviewboard" created="Tue, 9 Nov 2010 00:07:22 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-08 12:13:11, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Looks pretty good.  Should be much improved.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; What about client-side semantics and checks?  I thought there was going to be some change there?  An async trigger and then a fast way to see if it&apos;s done or not?  Should be clear on javadoc since enable/disable is always thing we get questions on.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I think most of my issues with patch is that it adds huge amount of new code into already big AssignmentManager class.  Should move these classes out and not sure if we should have these methods which just touch ZK.  I think having all logic about the state transitions, usage of ZK, etc more explicitly controlled in the handlers themselves might be more clear to follow how this works.  Maybe not but was a little hard to follow (that, for example, we don&apos;t have enabling/disabling states in memory... where we were talking about in-memory state vs zk states, etc).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Also, ZKTable can be simplified (and made more future proof) with an enum.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Now, for failover, I know we said we would punt to 0.92 on handling of this case, but we should at least make it so we don&apos;t get into broken state if we have a master failover.  What will happen if we are in disabling up in zk but not all closes have been done?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Lastly... I think we definitely need some unit tests on this stuff.  TestMasterFailover does a little but not really relevant to these changes (only deals with regions already RIT).  TestRollingRestart does an enable/disable of table.  But none of this stuff takes into account failure of stuff in handlers, failure of RS, etc... Don&apos;t need to hold up this patch on unit tests if it&apos;s working in cluster testing on large tables, but it&apos;s kind of thing that would be good to test at some point.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Added to shell is_enabled and is_disabled.  Added javadoc to enableTable and disableTable explaining how these methods return immediately now but that process can take a while to complete.&lt;/p&gt;

&lt;p&gt;On methods that just touch zk, they are of a class of which one member &amp;#8211; isTableDisabled &amp;#8211; does checks of AM data structures... so I can&apos;t really move them out.&lt;/p&gt;

&lt;p&gt;Change ZKTable to use enums.&lt;/p&gt;

&lt;p&gt;If disabling and master failover, when new master comes online, will be broke. But enable/disable are idempotent and a rerun of enable/disable will start up the process again and it should finish off properly.  Thats the theory anyways.&lt;/p&gt;

&lt;p&gt;Regards unit tests, enable/disable is used all over unit test code base.  If you are looking for a test that simulates big table enable/disable, that&apos;s hard to do in a unit test.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-08 12:13:11, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java, line 1302&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/diff/2/?file=16884#file16884line1302&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff/2/?file=16884#file16884line1302&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I thought we had this method somewhere already?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;there is a similarly named one for zk that you added &amp;#8211; is that what you are referring to?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-08 12:13:11, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java, line 1573&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/diff/2/?file=16884#file16884line1573&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff/2/?file=16884#file16884line1573&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Are these methods necessary?  Seems like unnecessary stuff in AssignmentManager.  The Handlers can just use the ZK methods directly?  (keep the AM methods as check/set of it&apos;s internal state?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;See note above where argument is that these are of a set and that since one of the set members does AM machinations, then all belong in AM.  For now I think its fine.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-08 12:13:11, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java, line 97&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/diff/2/?file=16888#file16888line97&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff/2/?file=16888#file16888line97&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This is for repeated runs of enable?  Should we log if this actually removes regions (table has X total regions, already Y online, assigning Z still offline)?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     It&apos;s okay that this operation is not done under any locks?  Couldn&apos;t regions be coming online/offline concurrent with this operation?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Added logging to enable/disable.&lt;/p&gt;

&lt;p&gt;Regards &apos;locks&apos;, these are my own local copies of these Lists.  Also notion that regions in table count can change is sort of allowed..  Each time through loop we&apos;ll recheck .META. for enabling and we&apos;ll re-look at the list of table regions in AssignmentManager....&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-08 12:13:11, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTable.java, line 41&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/diff/2/?file=16890#file16890line41&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff/2/?file=16890#file16890line41&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     enum?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;done&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-08 12:13:11, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java, line 716&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/diff/2/?file=16892#file16892line716&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff/2/?file=16892#file16892line716&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What is this method&apos;s policy on watches?  Please note it in javadoc.  This method is not at all strict and is multiple operations so is not safe to use on nodes where we rely on watches / monitoring of state transitions, so let&apos;s make some kind of note.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;K. This method is for non-watched znode.  Will add this to javadoc.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/#review1841&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#review1841&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12929843" author="hbasereviewboard" created="Tue, 9 Nov 2010 00:11:41 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-11-08 16:09:44.239145)&lt;/p&gt;


&lt;p&gt;Review request for hbase and Jonathan Gray.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Added shell is_enabled, is_disabled. Did some fixup because of issues revealed testing.  Implemented jgray suggestions.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Renamed ZKTableDisable as ZKTable, making it a generic zk util for managing &apos;tables&apos;.&lt;br/&gt;
Added enabing/disabling states to table the current set of enabled/disabled only.&lt;/p&gt;

&lt;p&gt;M src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;br/&gt;
  (createSetData): Added.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  Removed offlining region utility methods no longer used.&lt;br/&gt;
  (We do it now over in MetaEditor)&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
  Javadoc.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;br/&gt;
  Add a base abstract class to do &apos;bulk assignments&apos;.  Redo&lt;br/&gt;
  assignAllUserRegions to use subclass of new bulk assigner class.&lt;br/&gt;
  Added isTableEnabled, disablingTable, enablingTable.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java&lt;br/&gt;
  Redid to use new bulk assigner class.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java&lt;br/&gt;
A Added TestZKTable&lt;/p&gt;


&lt;p&gt;This addresses bug hbase-3112.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/hbase-3112&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/hbase-3112&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/BulkAssigner.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/DeleteTableHandler.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTable.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableDisable.java 1032652 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 1032652 &lt;br/&gt;
  trunk/src/main/ruby/hbase/admin.rb 1032778 &lt;br/&gt;
  trunk/src/main/ruby/shell.rb 1032778 &lt;br/&gt;
  trunk/src/main/ruby/shell/commands/disable.rb 1032778 &lt;br/&gt;
  trunk/src/main/ruby/shell/commands/enable.rb 1032778 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 1032652 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/master/TestMasterFailover.java 1032652 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/zookeeper/TestZKTable.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1187/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;stack&lt;/p&gt;

</comment>
                            <comment id="12929860" author="hbasereviewboard" created="Tue, 9 Nov 2010 01:05:36 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/#review1853&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#review1853&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;I can live without the state-checking methods in ZKTable but it&apos;s fine, no big deal as is.&lt;/p&gt;

&lt;p&gt;Only issue is that we&apos;re hitting ZK on each assign().&lt;/p&gt;

&lt;p&gt;Otherwise, if tests are passing and it&apos;s working for you up on cluster, I&apos;m +1 on this.&lt;/p&gt;

&lt;p&gt;If you add async/sync support, let&apos;s be sure to nail the javadoc.&lt;/p&gt;


&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment6017&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment6017&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    why describe &apos;enabling&apos; state in our client API?  do we let out &apos;enabling&apos; at all anywhere?&lt;/p&gt;

&lt;p&gt;    and do we need to make mention that if it seems to never finish, this method should be retried?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment6019&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment6019&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    same.  i think the javadoc is descriptive enough with this explanation of states.  just not sure if we need any javadoc about retrying?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment6022&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment6022&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    isTableDisabling is actually a ZK read rather than checking in-memory state.  Should be move enabling/disabling to in-memory state as well?  I&apos;m not sure it&apos;s a good idea to have to read from ZK on every assign() call, especially for something as rare as disabling.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12929960" author="hbasereviewboard" created="Tue, 9 Nov 2010 05:18:07 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-08 17:04:25, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I can live without the state-checking methods in ZKTable but it&apos;s fine, no big deal as is.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Only issue is that we&apos;re hitting ZK on each assign().&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Otherwise, if tests are passing and it&apos;s working for you up on cluster, I&apos;m +1 on this.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; If you add async/sync support, let&apos;s be sure to nail the javadoc.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I want the state-checking methods to flag bad state transitions.&lt;/p&gt;

&lt;p&gt;On hitting zk on each assign, pardon me, I didn&apos;t grok what you were on about when you talked this up earlier.  I get it now.  Will fix.&lt;/p&gt;

&lt;p&gt;Tests are failing because I changed sematics; disable/enable are now async where before they were sync.  Will do your suggestion of creating a sync version if only to make tests pass (should only be for use of tests).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-08 17:04:25, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java, line 447&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/diff/3/?file=16953#file16953line447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff/3/?file=16953#file16953line447&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     why describe &apos;enabling&apos; state in our client API?  do we let out &apos;enabling&apos; at all anywhere?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     and do we need to make mention that if it seems to never finish, this method should be retried?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ok.  removed mention of states.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-08 17:04:25, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java, line 659&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/diff/3/?file=16955#file16955line659&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff/3/?file=16955#file16955line659&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     isTableDisabling is actually a ZK read rather than checking in-memory state.  Should be move enabling/disabling to in-memory state as well?  I&apos;m not sure it&apos;s a good idea to have to read from ZK on every assign() call, especially for something as rare as disabling.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Will fix in next patch.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/#review1853&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#review1853&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12929983" author="hbasereviewboard" created="Tue, 9 Nov 2010 06:36:40 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-11-08 22:35:19.111130)&lt;/p&gt;


&lt;p&gt;Review request for hbase and Jonathan Gray.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Addressed Jon comments.   Still to do is finish up synchronizations on cache passed into ZKTable, cache of table states to save on trips to zk ensemble.   Also, need to run tests an put in place calls to synchronized enable/disable table methods that this patch adds so tests start passing again.  Will do in morning.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Renamed ZKTableDisable as ZKTable, making it a generic zk util for managing &apos;tables&apos;.&lt;br/&gt;
Added enabing/disabling states to table the current set of enabled/disabled only.&lt;/p&gt;

&lt;p&gt;M src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;br/&gt;
  (createSetData): Added.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  Removed offlining region utility methods no longer used.&lt;br/&gt;
  (We do it now over in MetaEditor)&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
  Javadoc.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;br/&gt;
  Add a base abstract class to do &apos;bulk assignments&apos;.  Redo&lt;br/&gt;
  assignAllUserRegions to use subclass of new bulk assigner class.&lt;br/&gt;
  Added isTableEnabled, disablingTable, enablingTable.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java&lt;br/&gt;
  Redid to use new bulk assigner class.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java&lt;br/&gt;
A Added TestZKTable&lt;/p&gt;


&lt;p&gt;This addresses bug hbase-3112.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/hbase-3112&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/hbase-3112&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/BulkAssigner.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/LoadBalancer.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/DeleteTableHandler.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTable.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableDisable.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 1032841 &lt;br/&gt;
  trunk/src/main/ruby/hbase/admin.rb 1032841 &lt;br/&gt;
  trunk/src/main/ruby/shell.rb 1032841 &lt;br/&gt;
  trunk/src/main/ruby/shell/commands/disable.rb 1032841 &lt;br/&gt;
  trunk/src/main/ruby/shell/commands/enable.rb 1032841 &lt;br/&gt;
  trunk/src/main/ruby/shell/commands/is_disabled.rb PRE-CREATION &lt;br/&gt;
  trunk/src/main/ruby/shell/commands/is_enabled.rb PRE-CREATION &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 1032841 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/master/TestMasterFailover.java 1032841 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/zookeeper/TestZKTable.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1187/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;stack&lt;/p&gt;

</comment>
                            <comment id="12930207" author="hbasereviewboard" created="Tue, 9 Nov 2010 17:53:16 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-11-09 09:50:33.321899)&lt;/p&gt;


&lt;p&gt;Review request for hbase and Jonathan Gray.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Ok. All table state is now managed by ZKTable, moved out of AM.  It also keeps cache of states to save on zk ensemble roundtrips.  I think I&apos;ve addressed all of your review comments now Jon.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Renamed ZKTableDisable as ZKTable, making it a generic zk util for managing &apos;tables&apos;.&lt;br/&gt;
Added enabing/disabling states to table the current set of enabled/disabled only.&lt;/p&gt;

&lt;p&gt;M src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;br/&gt;
  (createSetData): Added.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  Removed offlining region utility methods no longer used.&lt;br/&gt;
  (We do it now over in MetaEditor)&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
  Javadoc.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;br/&gt;
  Add a base abstract class to do &apos;bulk assignments&apos;.  Redo&lt;br/&gt;
  assignAllUserRegions to use subclass of new bulk assigner class.&lt;br/&gt;
  Added isTableEnabled, disablingTable, enablingTable.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java&lt;br/&gt;
  Redid to use new bulk assigner class.&lt;br/&gt;
M src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java&lt;br/&gt;
A Added TestZKTable&lt;/p&gt;


&lt;p&gt;This addresses bug hbase-3112.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/hbase-3112&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/hbase-3112&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/BulkAssigner.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/LoadBalancer.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/ClosedRegionHandler.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/DeleteTableHandler.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/OpenedRegionHandler.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/handler/TableEventHandler.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTable.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableDisable.java 1032841 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 1032841 &lt;br/&gt;
  trunk/src/main/ruby/hbase/admin.rb 1032841 &lt;br/&gt;
  trunk/src/main/ruby/shell.rb 1032841 &lt;br/&gt;
  trunk/src/main/ruby/shell/commands/disable.rb 1032841 &lt;br/&gt;
  trunk/src/main/ruby/shell/commands/enable.rb 1032841 &lt;br/&gt;
  trunk/src/main/ruby/shell/commands/is_disabled.rb PRE-CREATION &lt;br/&gt;
  trunk/src/main/ruby/shell/commands/is_enabled.rb PRE-CREATION &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 1032841 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/master/TestMasterFailover.java 1032841 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/zookeeper/TestZKTable.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1187/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;stack&lt;/p&gt;

</comment>
                            <comment id="12930237" author="hbasereviewboard" created="Tue, 9 Nov 2010 19:06:23 +0000"  >&lt;p&gt;Message from: &quot;Jean-Daniel Cryans&quot; &amp;lt;jdcryans@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/#review1866&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#review1866&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment6054&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment6054&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I gave you my comments in person. Short version, I think that those methods&apos; method shouldn&apos;t change and that we should have methods clearly marked as &quot;async&quot;, and then do a job of educating people towards using them.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment6052&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment6052&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Looks an awful lot like BulkDisabler&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTable.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/#comment6053&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#comment6053&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    A few methods need javadoc&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jean-Daniel&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12930277" author="hbasereviewboard" created="Tue, 9 Nov 2010 20:24:23 +0000"  >&lt;p&gt;Message from: &quot;Jean-Daniel Cryans&quot; &amp;lt;jdcryans@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-09 11:05:46, Jean-Daniel Cryans wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java, line 444&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/diff/5/?file=17034#file17034line444&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff/5/?file=17034#file17034line444&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I gave you my comments in person. Short version, I think that those methods&apos; method shouldn&apos;t change and that we should have methods clearly marked as &quot;async&quot;, and then do a job of educating people towards using them.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I meant method&apos;s behavior&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jean-Daniel&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/#review1866&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#review1866&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12930285" author="hbasereviewboard" created="Tue, 9 Nov 2010 20:58:57 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-09 11:05:46, Jean-Daniel Cryans wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java, line 444&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/diff/5/?file=17034#file17034line444&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff/5/?file=17034#file17034line444&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I gave you my comments in person. Short version, I think that those methods&apos; method shouldn&apos;t change and that we should have methods clearly marked as &quot;async&quot;, and then do a job of educating people towards using them.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jean-Daniel Cryans wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I meant method&apos;s behavior&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, I agree with you after chatting.  Will fix (And you spotted prob. w/ way async was running anyways).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-09 11:05:46, Jean-Daniel Cryans wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java, line 135&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1187/diff/5/?file=17043#file17043line135&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/diff/5/?file=17043#file17043line135&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Looks an awful lot like BulkDisabler&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I disagree.  The overrides each differ substantially (They look similar if you don&apos;t look close &amp;#8211; smile).&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1187/#review1866&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1187/#review1866&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12930292" author="stack" created="Tue, 9 Nov 2010 21:29:41 +0000"  >&lt;p&gt;Here is what I committed.  Thanks for reviews Jon and J-D.&lt;/p&gt;</comment>
                            <comment id="12930294" author="stack" created="Tue, 9 Nov 2010 21:33:56 +0000"  >&lt;p&gt;Resolving after commit.&lt;/p&gt;</comment>
                            <comment id="15016923" author="lars_francke" created="Fri, 20 Nov 2015 12:41:15 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12459179" name="3112-v14.txt" size="83996" author="stack" created="Tue, 9 Nov 2010 21:29:41 +0000"/>
                            <attachment id="12459015" name="3112-v2.txt" size="43376" author="stack" created="Sun, 7 Nov 2010 06:08:09 +0000"/>
                            <attachment id="12459021" name="3112-v3.txt" size="47700" author="stack" created="Sun, 7 Nov 2010 18:35:22 +0000"/>
                            <attachment id="12458987" name="3112.txt" size="12435" author="stack" created="Sat, 6 Nov 2010 06:05:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 22 Oct 2010 23:15:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26655</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hksn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100631</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>