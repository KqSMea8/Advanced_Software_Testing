<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:14:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10504/HBASE-10504.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10504] Define Replication Interface</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10504</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;HBase has replication.  Fellas have been hijacking the replication apis to do all kinds of perverse stuff like indexing hbase content (hbase-indexer &lt;a href=&quot;https://github.com/NGDATA/hbase-indexer&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/NGDATA/hbase-indexer&lt;/a&gt;) and our &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; just showed up w/ overrides that replicate via an alternate channel (over a secure thrift channel between dcs over on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9360&quot; title=&quot;Enable 0.94 -&amp;gt; 0.96 replication to minimize upgrade down time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9360&quot;&gt;HBASE-9360&lt;/a&gt;).  This issue is about surfacing these APIs as public with guarantees to downstreamers similar to those we have on our public client-facing APIs (and so we don&apos;t break them for downstreamers).&lt;/p&gt;

&lt;p&gt;Any input &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt&quot; class=&quot;user-hover&quot; rel=&quot;phunt&quot;&gt;Patrick Hunt&lt;/a&gt; or &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gabriel.reid&quot; class=&quot;user-hover&quot; rel=&quot;gabriel.reid&quot;&gt;Gabriel Reid&lt;/a&gt; or &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12694619">HBASE-10504</key>
            <summary>Define Replication Interface</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="enis">Enis Soztutar</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Tue, 11 Feb 2014 23:36:09 +0000</created>
                <updated>Fri, 24 Oct 2014 04:38:56 +0000</updated>
                                                            <fixVersion>2.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>26</watches>
                                                                                                            <comments>
                            <comment id="13898504" author="stack" created="Tue, 11 Feb 2014 23:37:08 +0000"  >&lt;p&gt;Is &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9507&quot; title=&quot;Promote methods of WALActionsListener to WALObserver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9507&quot;&gt;&lt;del&gt;HBASE-9507&lt;/del&gt;&lt;/a&gt; related?&lt;/p&gt;</comment>
                            <comment id="13898507" author="ndimiduk" created="Tue, 11 Feb 2014 23:39:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9507&quot; title=&quot;Promote methods of WALActionsListener to WALObserver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9507&quot;&gt;&lt;del&gt;HBASE-9507&lt;/del&gt;&lt;/a&gt; related?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think so, yes, but that&apos;s based on code study and catching changes along the 0.94 line that broke the above tool.&lt;/p&gt;</comment>
                            <comment id="13898543" author="phunt" created="Wed, 12 Feb 2014 00:20:46 +0000"  >&lt;p&gt;My 0.02. Being able to receive notifications in NRT when things change in HBase is useful. Having a stable API for this would be great. The hbase-indexer service that &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; linked to in the description does indeed use the replication API to get notifications and update a Solr/Lucene based index, this provides an NRT secondary index(es) of sorts on HBase. In our case (indexer) we are using the interface to be notified of changes in real time, which then update the index immediately. This has worked extremely well (reliable, secure, allows filtering, etc...), however we have hit issues with the fact that the interface is private. Each release tends to have some changes to this interface (or it&apos;s supporting code) that impacts the indexer. We get around this by updating the code, but it&apos;s non-optimal. It would be great if this interface could be made public/stable.&lt;/p&gt;</comment>
                            <comment id="13898904" author="gabriel.reid" created="Wed, 12 Feb 2014 07:59:51 +0000"  >&lt;p&gt;I would echo &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt&quot; class=&quot;user-hover&quot; rel=&quot;phunt&quot;&gt;Patrick Hunt&lt;/a&gt;&apos;s points &amp;#8211; having these interfaces public and stable would be great.&lt;/p&gt;

&lt;p&gt;I think that from the point of view of the hbase-indexer project, the main contact points that are involved are o.a.h.h.replication.regionserver.ReplicationSource and o.a.h.h.Server, as well as the generated AdminProtos, although I assume that the scope of this ticket will be a fair bit wider than that.&lt;/p&gt;

&lt;p&gt;If we&apos;re going to move to having a published stable API, now is also probably the time to make any changes that may be needed. The one thing I can think of right now that would be nice is a better hook into o.a.h.h.replication.regionserver.ReplicationSource#removeNonReplicableEdits. Right now we override that method to do additional filtering on HLog entries that we know we don&apos;t want do send to the indexer, but it would be good to make that into a public method with some kind of filter interface.&lt;/p&gt;</comment>
                            <comment id="13899573" author="toffer" created="Wed, 12 Feb 2014 21:03:53 +0000"  >&lt;p&gt;+1 this is sorely needed. In our case we needed to add changes to ReplicationSourceManager, ReplicationSource, ReplicationSink and ReplicationZookeeper&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. I&apos;ll try to put up the changes we had to do.&lt;/p&gt;

&lt;p&gt;For the use case of NRT listening on HBase changes. Maybe we should consider making it a first class API instead of looking at replication interface changes to support it. That way WALEdit would still be private-ish?&lt;/p&gt;</comment>
                            <comment id="13900879" author="jmhsieh" created="Thu, 13 Feb 2014 23:24:24 +0000"  >&lt;p&gt;Let&apos;s mark the apis used as @InterfaceAudience.LimitedPrivate(&quot;replication&quot;) (or something like that) so that reviewers and mods start taking compat considerations in mind.&lt;/p&gt;</comment>
                            <comment id="13902005" author="gabriel.reid" created="Fri, 14 Feb 2014 21:58:06 +0000"  >&lt;p&gt;Making the NRT listening of changes on HBase into a first-class API as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; suggested sounds like an interesting idea, if there&apos;s interest in going that far in actively supporting this use case. &lt;/p&gt;

&lt;p&gt;If there is interest in doing that, the current hbase-sep library (which is the current library used for latching in via replication and responding to changes for the hbase-indexer project) could be a possible starting point. The current API interfaces&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; as well as the impl are within sub-modules&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; of the hbase-indexer project on GitHub.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://github.com/NGDATA/hbase-indexer/tree/master/hbase-sep/hbase-sep-api/src/main/java/com/ngdata/sep&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/NGDATA/hbase-indexer/tree/master/hbase-sep/hbase-sep-api/src/main/java/com/ngdata/sep&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://github.com/NGDATA/hbase-indexer/tree/master/hbase-sep&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/NGDATA/hbase-indexer/tree/master/hbase-sep&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13907397" author="stack" created="Thu, 20 Feb 2014 19:46:30 +0000"  >&lt;p&gt;Making blocker so we deal w/ it now.&lt;/p&gt;</comment>
                            <comment id="13908678" author="enis" created="Fri, 21 Feb 2014 18:59:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;Making blocker so we deal w/ it now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed. &lt;/p&gt;</comment>
                            <comment id="13962351" author="jdcryans" created="Mon, 7 Apr 2014 22:46:53 +0000"  >&lt;p&gt;It does seem that people want to be able to listen to row operations in HBase. I&apos;m not sure how we can fully support this use case if bulk loads and edits that aren&apos;t hitting the WALs are mixed in. The current contract is that we replicate everything that&apos;s sent to the WAL and that got sync&apos;d.&lt;/p&gt;

&lt;p&gt;Regarding the actual interfaces, here&apos;s how I see it (I&apos;m sure I&apos;m missing a few things):&lt;/p&gt;

&lt;h5&gt;&lt;a name=&quot;Replicationsource&quot;&gt;&lt;/a&gt;Replication source&lt;/h5&gt;

&lt;h6&gt;&lt;a name=&quot;FilteringWALEdits&quot;&gt;&lt;/a&gt;Filtering WALEdits&lt;/h6&gt;
&lt;p&gt;We need to formalize what &lt;tt&gt;ReplicationSource#removeNonReplicableEdits&lt;/tt&gt; is currently doing, maybe it could be done as a chain &#224; la &lt;tt&gt;FileCleanerDelegate&lt;/tt&gt;.&lt;/p&gt;

&lt;h6&gt;&lt;a name=&quot;Replicationmanagement&quot;&gt;&lt;/a&gt;Replication management&lt;/h6&gt;
&lt;p&gt;Currently, enable/disabling/adding/removing peers is all done via ZK which we&apos;re trying to not use as a permanent data store. This jira goes into more details &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10295&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;HBASE-10295&lt;/a&gt;. If the master is going to be in charge of it, then it means we need to define a new protobuf service that the RS will implement. It should be separate from AdminProtos. &lt;/p&gt;

&lt;h5&gt;&lt;a name=&quot;Replicationsink&quot;&gt;&lt;/a&gt;Replication sink&lt;/h5&gt;

&lt;h6&gt;&lt;a name=&quot;Recreatingaregionserver&quot;&gt;&lt;/a&gt;Re-creating a region server&lt;/h6&gt;
&lt;p&gt;Replication is currently done via our RPC mechanism, so you need to start &lt;tt&gt;RpcServer&lt;/tt&gt; in order to receive requests. The the next part of the contract that replication relies on is that the sinks are discoverable via ZooKeeper, basically piggybacking on the RS discovery process. This means setting up a &lt;tt&gt;ZooKeeperWatcher&lt;/tt&gt;, crafting a server name and then creating the znode. A good example of this can be found in SEP: &lt;a href=&quot;https://github.com/NGDATA/hbase-indexer/blob/master/hbase-sep/hbase-sep-impl-0.95/src/main/java/com/ngdata/sep/impl/SepConsumer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/NGDATA/hbase-indexer/blob/master/hbase-sep/hbase-sep-impl-0.95/src/main/java/com/ngdata/sep/impl/SepConsumer.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It may not seem as whole lot of code but it&apos;s code that can easily be broken with a few signature changes since those interfaces aren&apos;t clearly marked.&lt;/p&gt;

&lt;h6&gt;&lt;a name=&quot;ReplicateWALEntry&quot;&gt;&lt;/a&gt;ReplicateWALEntry&lt;/h6&gt;
&lt;p&gt;&lt;tt&gt;ReplicateWALEntry&lt;/tt&gt; is a service offered as part of AdminProtos so it needs to move out. It should be a separate service from the previous one I described in &quot;Replication management&quot;. The unfortunate thing here is that &lt;tt&gt;Replay&lt;/tt&gt; relies on the same messages: &lt;a href=&quot;https://github.com/apache/hbase/blob/trunk/hbase-protocol/src/main/protobuf/Admin.proto#L260&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hbase/blob/trunk/hbase-protocol/src/main/protobuf/Admin.proto#L260&lt;/a&gt;. To extract &lt;tt&gt;ReplicateWALEntry&lt;/tt&gt; in a compatible way we&apos;ll have to deprecate it and maybe also deprecate &lt;tt&gt;Replay&lt;/tt&gt;&apos;s current signature to give it its own appropriately-named messages (or not, not a big deal).&lt;/p&gt;</comment>
                            <comment id="13962579" author="stack" created="Tue, 8 Apr 2014 05:00:38 +0000"  >&lt;p&gt;Just a few comments...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;...via our RPC mechanism...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It doesn&apos;t have to be &apos;our&apos; RPC, right JD?  You don&apos;t have to have the hbase RPC classes on the implementors side.  An RPC just needs to implement the protocol described here &lt;a href=&quot;http://hbase.apache.org/book.html#d248e15581&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/book.html#d248e15581&lt;/a&gt;  It can be &apos;your&apos; RPC --whether an instance of the hbase classes instantiated and set running or a python implementation of the protocol... &amp;#8211; if you want, right?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;.... This means setting up a ZooKeeperWatcher, crafting a server name and then creating the znode. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Similar, we don&apos;t care how you write the znode.  It doesn&apos;t have to be our wacky ZKW that does the writing.  You just have to write the znode data in the same format that hbase expects it to be in (We could do folks a favor and describe it in the Interface).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It may not seem as whole lot of code but it&apos;s code that can easily be broken with a few signature changes since those interfaces aren&apos;t clearly marked.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We can&apos;t change the RPC protocol, not in an incompatible way.  We&apos;ll undo being able to have old and new client and servers communicate.  Ditto for how we serialize znodes.  The above statement makes it appear as though RPC protocol and zk serialization are more brittle than they actually are.&lt;/p&gt;

&lt;p&gt;Otherwise, good stuff.&lt;/p&gt;</comment>
                            <comment id="13963281" author="jdcryans" created="Tue, 8 Apr 2014 18:32:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;It doesn&apos;t have to be &apos;our&apos; RPC, right JD?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, I guess I meant RPC protocol instead of mechanism.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You just have to write the znode data in the same format that hbase expects it to be in&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You&apos;re right, so we just have to make it explicit. And also you need to be authenticated if using security.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The above statement makes it appear as though RPC protocol and zk serialization are more brittle than they actually are.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sorry, I was referring to the code that I had just linked to where they use our internal APIs like ServerName and ZKUtil. Considering your two previous comments, that part of my writeup is irrelevant.&lt;/p&gt;</comment>
                            <comment id="13992995" author="enis" created="Thu, 8 May 2014 18:31:21 +0000"  >&lt;p&gt;I have a very basic prototype patch that we can consider as a direction for this. The idea is to break up ReplicationSource into two parts, the part that tails the WAL and listens to the replication queue, and the part that talks to the ReplicationSink in the peer cluster to ship the edits. The new interface &quot;ReplicationConsumer&quot; (we can change the names) is the plugin point. &lt;/p&gt;

&lt;p&gt;There is still one ReplicationSource per peer in every RS. The ReplicationSource tails the logs for the peer, and holds a ReplicationConsumer pointer. It calls ReplicationConsumer.shipEdits() method for actual shipping logic. A default HBaseClusterReplicator implements ReplicationConsumer and talks to the ReplicationSink on the other cluster etc. &lt;/p&gt;

&lt;p&gt;For each peer, there is now a class implementing ReplicationConsumer, and possibly some configuration. This allows one to implement a ReplicationConsumer for SOLR (or any other data store) and directly plug it in to the RS without having to do a proxy layer and mocking zookeeper / RS RPC etc. &lt;/p&gt;

&lt;p&gt;Let me know what you think. Early feedback will help shape up the patch. &lt;/p&gt;


</comment>
                            <comment id="13993004" author="enis" created="Thu, 8 May 2014 18:39:01 +0000"  >&lt;p&gt;Here is the prototype patch. &lt;/p&gt;</comment>
                            <comment id="13995685" author="jdcryans" created="Mon, 12 May 2014 21:49:57 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; So IIUC you are going a completely different way than what was discussed before, right? I don&apos;t mind it but I want to make sure that we&apos;re on the same track.&lt;/p&gt;

&lt;p&gt;So instead of having people define their sinks, they instead put that code in the ReplicationConsumer. Seems like a good idea, you don&apos;t have to mess around getting a fake cluster up and running, among other issues. Might still be nice to offer some tools like removeNonReplicableEdits(), the basic metrics the handling of a disabled peer, etc, for the other consumers.&lt;/p&gt;</comment>
                            <comment id="13996979" author="enis" created="Tue, 13 May 2014 22:24:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;So IIUC you are going a completely different way than what was discussed before, right? I don&apos;t mind it but I want to make sure that we&apos;re on the same track.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Indeed. If you want to replicate to SOLR for example, no need to add another proxy layer. You can have SOLR clients do the transformations, and send the updates directly. Having to mock a cluster with pluggable sink approach requires to implement some hbase-specific implementation details (zookeeper interactions, meta, rpc layer etc). &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Might still be nice to offer some tools like removeNonReplicableEdits()&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed. I was thinking of doing a Filter interface for that. You can either pass a filter, or you can implement your own filter and invoke it. I have to dig a bit more for that. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;the basic metrics the handling of a disabled peer, etc, for the other consumers.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In the POC patch, I keep the peer definition, but peers can have pluggable ReplicationConsumer. You can still enable/disable a peer, get the metrics for the peer coming from the ReplicationSource for that peer. We should allow the replicationConsumer to put up its own metrics with the peer name as well.&lt;/p&gt;</comment>
                            <comment id="13997727" author="jdcryans" created="Wed, 14 May 2014 16:33:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, sounds like a plan. Oh and something we should not forget is setting the right InterfaceAudience. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gabriel.reid&quot; class=&quot;user-hover&quot; rel=&quot;gabriel.reid&quot;&gt;Gabriel Reid&lt;/a&gt; you down with this? It means that this class (1) will need a few changes just to continue working like it currently does, and eventually a lot more will need to change to use the replication consumer but it should simplify the code a lot. It will also have an impact on the deployment since you won&apos;t need a fake slave cluster anymore.&lt;/p&gt;

&lt;p&gt;1. &lt;a href=&quot;https://github.com/NGDATA/hbase-indexer/blob/master/hbase-sep/hbase-sep-impl-0.98/src/main/java/com/ngdata/sep/impl/SepReplicationSource.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/NGDATA/hbase-indexer/blob/master/hbase-sep/hbase-sep-impl-0.98/src/main/java/com/ngdata/sep/impl/SepReplicationSource.java&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13997936" author="gabriel.reid" created="Wed, 14 May 2014 19:31:26 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt; I think that this would make a great addition to HBase in general &amp;#8211; if I&apos;m reading it correctly, it basically works out as a kind of RegionObserver.postPut that runs in process, but off of the write path. However, I&apos;m less sure of how well this general approach would work for hbase-indexer.&lt;/p&gt;

&lt;p&gt;Although this approach would simplify a lot of things (e.g.removing the need to to act as a slave cluster), it also introduces a number of important changes in the execution model of something that runs via the SepConsumer (i.e. reacting to HBase updates)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;the number of replication endpoints becomes directly linked to the number of regionservers &amp;#8211; as far as I see, it would no longer be possible to have more or fewer replication endpoints than regionservers&lt;/li&gt;
	&lt;li&gt;the replication (ReplicationConsumer) runs within the same JVM as the regionserver, which brings some important changes: all of the dependencies then need to be present in the classpath of the regionserver (and compatible with the dependencies of the regionserver), it has an effect on the heap, is no longer possible to tune the JVM settings for the replication process on its own&lt;/li&gt;
	&lt;li&gt;from what I see of the current patch (although I&apos;m sure this could be changed) is that it looks like there&apos;s only a single ReplicationConsumer, meaning that it wouldn&apos;t be possible to have &quot;real&quot; replication running next to a custom ReplicationSource&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The tighter-coupling issues that I outlined above could be worked around by having a lightweight ReplicationConsumer that just passes data to an external process via RPC, but that&apos;s basically exactly what the replication code in HBase is doing right now, so it would be a shame to re-implement something like that.&lt;/p&gt;</comment>
                            <comment id="13998272" author="enis" created="Wed, 14 May 2014 23:37:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;the number of replication endpoints becomes directly linked to the number of regionservers &#8211; as far as I see, it would no longer be possible to have more or fewer replication endpoints than regionservers&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;As you said, if you want to still have a proxy layer to have a different configuration then you can implement your own server + client layer and plug only the client in. Run the servers in whatever conf / jvm you want.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;the replication (ReplicationConsumer) runs within the same JVM as the regionserver, which brings some important changes: all of the dependencies then need to be present in the classpath of the regionserver (and compatible with the dependencies of the regionserver), it has an effect on the heap, is no longer possible to tune the JVM settings for the replication process on its own&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Same as above, you can have a thin client layer and tick server layer on your own if you prefer. Otherwise, this will simplify deployments a lot. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;from what I see of the current patch (although I&apos;m sure this could be changed) is that it looks like there&apos;s only a single ReplicationConsumer, meaning that it wouldn&apos;t be possible to have &quot;real&quot; replication running next to a custom ReplicationSource&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is a single ReplicationConsumer per peer. HBaseClusterReplicator implements this interface. You can have one peer definition replicating to a different cluster and a peer replicating to a third party. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The tighter-coupling issues that I outlined above could be worked around by having a lightweight ReplicationConsumer that just passes data to an external process via RPC, but that&apos;s basically exactly what the replication code in HBase is doing right now, so it would be a shame to re-implement something like that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Even in that case, the server-client implementation will be much simpler than what you have in SEP I think, which does hbase RPC + zookeeper + zk mockup. Only a server discovery + simple one method thrift / PB RPC is what is needed from my understanding. It would be great to have a skeleton for this living in HBase proper as well. &lt;/p&gt;</comment>
                            <comment id="13998525" author="gabriel.reid" created="Thu, 15 May 2014 07:23:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;Even in that case, the server-client implementation will be much simpler than what you have in SEP I think, which does hbase RPC + zookeeper + zk mockup. Only a server discovery + simple one method thrift / PB RPC is what is needed from my understanding. It would be great to have a skeleton for this living in HBase proper as well.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The SEP does indeed make use of HBase RPC and ZK, and does masquerades in ZK as a region server, but I don&apos;t see that much of an advantage of doing a separate thrift or PB-based RPC. I think that this would just be exchanging one existing RPC mechanism (hbase) for another (thrift/PB). The service discovery would still be required, which would also involve ZK. Not having to do the setup of masquerading as a regionserver would indeed be a plus.&lt;/p&gt;

&lt;p&gt;Taking this road for the SEP would then require:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;defining/setting up RPC (which is currently already provided by hbase&lt;/li&gt;
	&lt;li&gt;implementing a ReplicationConsumer (and deploying and configuring it in hbase RS) that does service discovery, RPC endpoint selection, and properly deals with failing/flaky RPC endpoints (also already provided in hbase replication)&lt;/li&gt;
	&lt;li&gt;reworking the SEP RPC server to use the new RPC mechanism&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This seems to me like work that is difficult to justify for the SEP because it makes use of existing HBase RPC and replication failover handling, and currently works. I may very well be missing something, but I don&apos;t see how reimplementing this stuff in the SEP would simplify things very much.&lt;/p&gt;

&lt;p&gt;The one big potential advantage that I do see is that it would protect the SEP from changes in the internal HBase replication interfaces.&lt;/p&gt;

&lt;p&gt;Obviously these comments are purely from the standpoint of SEP maintenance. As I mentioned in a previous comment, I think that this proposal would be a great addition to HBase and very useful &amp;#8211; I just don&apos;t see it&apos;s usefulness to the SEP yet.&lt;/p&gt;</comment>
                            <comment id="13999301" author="enis" created="Thu, 15 May 2014 21:58:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;This seems to me like work that is difficult to justify for the SEP because it makes use of existing HBase RPC and replication failover handling, and currently works&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Of course RPC and RS discovery etc are internal to HBase. The main advantage would be that you will be protected against changes there. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Obviously these comments are purely from the standpoint of SEP maintenance. As I mentioned in a previous comment, I think that this proposal would be a great addition to HBase and very useful &#8211; I just don&apos;t see it&apos;s usefulness to the SEP yet.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Fair enough. HBase&apos;s own inner workings for inter-cluster replication is not changing with this patch, so you should be able to have SEP as it is. I think I don&apos;t fully understand why would you want to have a proxy layer as a separate service (other than isolation issues).  &lt;/p&gt;</comment>
                            <comment id="13999804" author="gabriel.reid" created="Fri, 16 May 2014 13:48:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think I don&apos;t fully understand why would you want to have a proxy layer as a separate service (other than isolation issues).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Process isolation and deployment isolation are indeed the two main issues. The process isolation side of things probably speaks for itself. Deployment isolation is another issue however. Keeping dependencies of hbase-indexer in line with all deps in hbase is an issue (as all hbase-indexer jars would need to be deployed into the HBase lib for this approach to work), and all configuration, config changes, and restarting would also become directly linked to HBase.&lt;/p&gt;</comment>
                            <comment id="14000121" author="whoschek" created="Fri, 16 May 2014 18:42:14 +0000"  >&lt;p&gt;+1 to what &lt;span class=&quot;error&quot;&gt;&amp;#91;~greid&amp;#93;&lt;/span&gt; already said. &lt;/p&gt;

&lt;p&gt;To help illustrate some of the benefits of process isolation take a look at the large and complex dependency tree of hbase-indexer below. I can&apos;t imagine having something like this run inside of the primary region server process without causing ongoing stability, scalability, reliability, flexibility and resource management issues for HBase.&lt;/p&gt;

&lt;p&gt;In addition, being able to decouple the lifecycle of the hbase-indexer processes and their configuration from the primary region server processes further contributes to reliability and flexibility and ease of management. It also means we can scale out the Indexer tier more independently from the HBase tier without violating resource management SLAs. For example, indexing can suck quite some CPU.&lt;/p&gt;

&lt;p&gt;When this JIRA was originally filed we were hoping for it to help ease some of the hbase-indexer pain, but at the moment it looks like it&apos;s going in a different direction, a direction that doesn&apos;t apply to our use case even though it may well be great for other use cases, and, at least from our perspective, I&apos;m afraid it would be more like a step backwards.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[INFO] --- maven-dependency-plugin:2.1:tree (&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;-cli) @ hbase-indexer-server ---
[INFO] com.ngdata:hbase-indexer-server:jar:1.5-SNAPSHOT
[INFO] +- com.ngdata:hbase-indexer-engine:jar:1.5-SNAPSHOT:compile
[INFO] |  +- com.ngdata:hbase-indexer-common:jar:1.5-SNAPSHOT:compile
[INFO] |  |  +- com.ngdata:hbase-sep-api:jar:1.5-SNAPSHOT:compile
[INFO] |  |  +- com.ngdata:hbase-sep-impl:jar:1.5-hbase0.98-SNAPSHOT:compile
[INFO] |  |  |  \- com.ngdata:hbase-sep-impl-common:jar:1.5-SNAPSHOT:compile
[INFO] |  |  \- org.apache.solr:solr:war:4.4.0:compile
[INFO] |  +- com.ngdata:hbase-indexer-model:jar:1.5-SNAPSHOT:compile
[INFO] |  |  \- net.iharder:base64:jar:2.3.8:compile
[INFO] |  +- org.apache.solr:solr-core:jar:4.4.0:compile
[INFO] |  |  +- org.apache.lucene:lucene-core:jar:4.4.0:compile
[INFO] |  |  +- org.apache.lucene:lucene-codecs:jar:4.4.0:compile
[INFO] |  |  +- org.apache.lucene:lucene-analyzers-common:jar:4.4.0:compile
[INFO] |  |  +- org.apache.lucene:lucene-analyzers-kuromoji:jar:4.4.0:compile
[INFO] |  |  +- org.apache.lucene:lucene-analyzers-phonetic:jar:4.4.0:compile
[INFO] |  |  +- org.apache.lucene:lucene-highlighter:jar:4.4.0:compile
[INFO] |  |  +- org.apache.lucene:lucene-memory:jar:4.4.0:compile
[INFO] |  |  +- org.apache.lucene:lucene-misc:jar:4.4.0:compile
[INFO] |  |  +- org.apache.lucene:lucene-queryparser:jar:4.4.0:compile
[INFO] |  |  +- org.apache.lucene:lucene-spatial:jar:4.4.0:compile
[INFO] |  |  |  \- com.spatial4j:spatial4j:jar:0.3:compile
[INFO] |  |  +- org.apache.lucene:lucene-suggest:jar:4.4.0:compile
[INFO] |  |  +- org.apache.lucene:lucene-grouping:jar:4.4.0:compile
[INFO] |  |  +- org.apache.lucene:lucene-queries:jar:4.4.0:compile
[INFO] |  |  +- com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:jar:1.2:compile
[INFO] |  |  +- commons-fileupload:commons-fileupload:jar:1.2.1:compile
[INFO] |  |  +- joda-time:joda-time:jar:1.6:compile (version managed from 2.2)
[INFO] |  |  +- org.restlet.jee:org.restlet:jar:2.1.1:compile
[INFO] |  |  +- org.restlet.jee:org.restlet.ext.servlet:jar:2.1.1:compile
[INFO] |  |  +- org.codehaus.woodstox:wstx-asl:jar:3.2.7:runtime
[INFO] |  |  +- org.apache.httpcomponents:httpclient:jar:4.2.5:compile
[INFO] |  |  |  \- org.apache.httpcomponents:httpcore:jar:4.2.5:compile (version managed from 4.2.4)
[INFO] |  |  \- org.apache.httpcomponents:httpmime:jar:4.2.5:compile
[INFO] |  +- org.apache.solr:solr-solrj:jar:4.4.0:compile
[INFO] |  |  \- org.noggit:noggit:jar:0.5:compile
[INFO] |  +- org.apache.solr:solr-cell:jar:4.4.0:compile
[INFO] |  |  \- org.apache.tika:tika-parsers:jar:1.4:compile
[INFO] |  |     +- org.apache.tika:tika-core:jar:1.4:compile
[INFO] |  |     +- org.gagravarr:vorbis-java-tika:jar:0.1:compile
[INFO] |  |     +- edu.ucar:netcdf:jar:4.2-min:compile
[INFO] |  |     +- org.apache.james:apache-mime4j-core:jar:0.7.2:compile
[INFO] |  |     +- org.apache.james:apache-mime4j-dom:jar:0.7.2:compile
[INFO] |  |     +- org.apache.pdfbox:pdfbox:jar:1.8.1:compile
[INFO] |  |     |  +- org.apache.pdfbox:fontbox:jar:1.8.1:compile
[INFO] |  |     |  \- org.apache.pdfbox:jempbox:jar:1.8.1:compile
[INFO] |  |     +- org.bouncycastle:bcmail-jdk15:jar:1.45:compile
[INFO] |  |     +- org.bouncycastle:bcprov-jdk15:jar:1.45:compile
[INFO] |  |     +- org.apache.poi:poi:jar:3.9:compile
[INFO] |  |     +- org.apache.poi:poi-scratchpad:jar:3.9:compile
[INFO] |  |     +- org.apache.poi:poi-ooxml:jar:3.9:compile
[INFO] |  |     |  +- org.apache.poi:poi-ooxml-schemas:jar:3.9:compile
[INFO] |  |     |  |  \- org.apache.xmlbeans:xmlbeans:jar:2.3.0:compile
[INFO] |  |     |  \- dom4j:dom4j:jar:1.6.1:compile
[INFO] |  |     +- org.ccil.cowan.tagsoup:tagsoup:jar:1.2.1:compile
[INFO] |  |     +- com.googlecode.mp4parser:isoparser:jar:1.0-RC-1:compile
[INFO] |  |     +- com.drewnoakes:metadata-extractor:jar:2.6.2:compile
[INFO] |  |     +- de.l3s.boilerpipe:boilerpipe:jar:1.1.0:compile
[INFO] |  |     +- rome:rome:jar:0.9:compile
[INFO] |  |     |  \- jdom:jdom:jar:1.0:compile
[INFO] |  |     \- com.googlecode.juniversalchardet:juniversalchardet:jar:1.0.3:compile
[INFO] |  +- com.google.guava:guava:jar:11.0.2:compile
[INFO] |  |  \- com.google.code.findbugs:jsr305:jar:1.3.9:compile
[INFO] |  \- com.yammer.metrics:metrics-core:jar:2.2.0:compile
[INFO] +- com.ngdata:hbase-indexer-mr:jar:1.5-SNAPSHOT:compile
[INFO] |  +- com.cloudera.search:search-mr:jar:1.0.0-cdh5.0.0:compile
[INFO] |  |  +- org.apache.tika:tika-xmp:jar:1.4:compile
[INFO] |  |  |  \- com.adobe.xmp:xmpcore:jar:5.1.2:compile
[INFO] |  |  \- net.sourceforge.argparse4j:argparse4j:jar:0.4.3:compile
[INFO] |  \- org.apache.zookeeper:zookeeper:jar:3.4.5-cdh4.4.0:compile
[INFO] |     \- jline:jline:jar:0.9.94:compile
[INFO] +- com.ngdata:hbase-indexer-morphlines:jar:1.5-SNAPSHOT:compile
[INFO] |  \- org.kitesdk:kite-morphlines-all:pom:0.13.0:compile (version managed from 0.10.0-cdh5.0.0)
[INFO] |     +- org.kitesdk:kite-morphlines-core:jar:0.13.0:compile
[INFO] |     |  +- com.typesafe:config:jar:1.0.2:compile
[INFO] |     |  +- com.codahale.metrics:metrics-core:jar:3.0.1:compile
[INFO] |     |  \- com.codahale.metrics:metrics-healthchecks:jar:3.0.1:compile
[INFO] |     +- org.kitesdk:kite-morphlines-avro:jar:0.13.0:compile
[INFO] |     +- org.kitesdk:kite-morphlines-json:jar:0.13.0:compile
[INFO] |     |  \- com.fasterxml.jackson.core:jackson-databind:jar:2.3.1:compile
[INFO] |     |     +- com.fasterxml.jackson.core:jackson-annotations:jar:2.3.0:compile
[INFO] |     |     \- com.fasterxml.jackson.core:jackson-core:jar:2.3.1:compile
[INFO] |     +- org.kitesdk:kite-morphlines-saxon:jar:0.13.0:compile
[INFO] |     |  \- net.sf.saxon:Saxon-HE:jar:9.5.1-5:compile
[INFO] |     +- org.kitesdk:kite-morphlines-hadoop-core:jar:0.13.0:compile
[INFO] |     |  \- org.kitesdk:kite-hadoop-compatibility:jar:0.13.0:compile
[INFO] |     +- org.kitesdk:kite-morphlines-hadoop-parquet-avro:jar:0.13.0:compile
[INFO] |     |  \- com.twitter:parquet-avro:jar:1.2.5:compile
[INFO] |     |     +- com.twitter:parquet-column:jar:1.2.5:compile
[INFO] |     |     |  +- com.twitter:parquet-common:jar:1.2.5:compile
[INFO] |     |     |  \- com.twitter:parquet-encoding:jar:1.2.5:compile
[INFO] |     |     |     \- com.twitter:parquet-generator:jar:1.2.5:compile
[INFO] |     |     +- com.twitter:parquet-hadoop:jar:1.2.5:compile
[INFO] |     |     \- com.twitter:parquet-format:jar:1.0.0:compile
[INFO] |     +- org.kitesdk:kite-morphlines-hadoop-sequencefile:jar:0.13.0:compile
[INFO] |     +- org.kitesdk:kite-morphlines-hadoop-rcfile:jar:0.13.0:compile
[INFO] |     +- org.kitesdk:kite-morphlines-tika-core:jar:0.13.0:compile
[INFO] |     +- org.kitesdk:kite-morphlines-tika-decompress:jar:0.13.0:compile
[INFO] |     +- org.kitesdk:kite-morphlines-solr-core:jar:0.13.0:compile
[INFO] |     +- org.kitesdk:kite-morphlines-solr-cell:jar:0.13.0:compile
[INFO] |     +- org.kitesdk:kite-morphlines-twitter:jar:0.13.0:compile
[INFO] |     +- org.kitesdk:kite-morphlines-maxmind:jar:0.13.0:compile
[INFO] |     |  \- com.maxmind.db:maxmind-db:jar:0.3.1:compile
[INFO] |     +- org.kitesdk:kite-morphlines-metrics-servlets:jar:0.13.0:compile
[INFO] |     |  +- com.codahale.metrics:metrics-servlets:jar:3.0.1:compile
[INFO] |     |  |  +- com.codahale.metrics:metrics-json:jar:3.0.1:compile
[INFO] |     |  |  \- com.codahale.metrics:metrics-jvm:jar:3.0.1:compile
[INFO] |     |  \- org.eclipse.jetty:jetty-servlet:jar:8.1.14.v20131031:compile
[INFO] |     |     \- org.eclipse.jetty:jetty-security:jar:8.1.14.v20131031:compile
[INFO] |     |        \- org.eclipse.jetty:jetty-server:jar:8.1.14.v20131031:compile
[INFO] |     |           +- org.eclipse.jetty.orbit:javax.servlet:jar:3.0.0.v201112011016:compile
[INFO] |     |           +- org.eclipse.jetty:jetty-continuation:jar:8.1.14.v20131031:compile
[INFO] |     |           \- org.eclipse.jetty:jetty-http:jar:8.1.14.v20131031:compile
[INFO] |     |              \- org.eclipse.jetty:jetty-io:jar:8.1.14.v20131031:compile
[INFO] |     |                 \- org.eclipse.jetty:jetty-util:jar:8.1.14.v20131031:compile
[INFO] |     \- org.kitesdk:kite-morphlines-useragent:jar:0.13.0:compile
[INFO] |        \- ua_parser:ua-parser:jar:1.3.0:compile
[INFO] |           \- org.yaml:snakeyaml:jar:1.10:compile
[INFO] +- org.apache.hadoop:hadoop-core:jar:2.0.0-mr1-cdh4.4.0:compile
[INFO] |  +- commons-cli:commons-cli:jar:1.2:compile
[INFO] |  +- xmlenc:xmlenc:jar:0.52:compile
[INFO] |  +- commons-httpclient:commons-httpclient:jar:3.1:compile
[INFO] |  +- commons-codec:commons-codec:jar:1.4:compile
[INFO] |  +- commons-net:commons-net:jar:3.1:compile
[INFO] |  +- org.mortbay.jetty:jetty:jar:6.1.26.cloudera.2:compile
[INFO] |  +- org.mortbay.jetty:jetty-util:jar:6.1.26.cloudera.2:compile
[INFO] |  +- tomcat:jasper-runtime:jar:5.5.23:compile
[INFO] |  +- tomcat:jasper-compiler:jar:5.5.23:compile
[INFO] |  +- org.codehaus.jackson:jackson-core-asl:jar:1.8.8:compile
[INFO] |  +- org.codehaus.jackson:jackson-mapper-asl:jar:1.8.8:compile
[INFO] |  +- javax.servlet.jsp:jsp-api:jar:2.1:compile
[INFO] |  +- commons-el:commons-el:jar:1.0:compile
[INFO] |  +- net.java.dev.jets3t:jets3t:jar:0.6.1:compile
[INFO] |  +- javax.servlet:servlet-api:jar:2.5:compile
[INFO] |  +- hsqldb:hsqldb:jar:1.8.0.10:compile
[INFO] |  \- org.eclipse.jdt:core:jar:3.1.1:compile
[INFO] +- org.slf4j:slf4j-log4j12:jar:1.7.5:compile
[INFO] |  +- org.slf4j:slf4j-api:jar:1.7.5:compile
[INFO] |  \- log4j:log4j:jar:1.2.17:compile
[INFO] +- org.slf4j:jcl-over-slf4j:jar:1.7.5:compile
[INFO] +- org.slf4j:jul-to-slf4j:jar:1.7.5:compile
[INFO] +- com.yammer.metrics:metrics-ganglia:jar:2.2.0:compile
[INFO] +- junit:junit:jar:4.8.1:test
[INFO] +- org.apache.hadoop:hadoop-test:jar:2.3.0-mr1-cdh5.1.0-SNAPSHOT:test
[INFO] |  +- org.apache.ftpserver:ftplet-api:jar:1.0.0:test
[INFO] |  +- org.apache.mina:mina-core:jar:2.0.0-M5:test
[INFO] |  +- org.apache.ftpserver:ftpserver-core:jar:1.0.0:test
[INFO] |  \- org.apache.ftpserver:ftpserver-deprecated:jar:1.0.0-M2:test
[INFO] +- org.mockito:mockito-core:jar:1.9.0:test
[INFO] |  +- org.hamcrest:hamcrest-core:jar:1.1:test
[INFO] |  \- org.objenesis:objenesis:jar:1.0:test
[INFO] +- org.apache.hadoop:hadoop-hdfs:jar:2.3.0-cdh5.1.0-SNAPSHOT:compile
[INFO] |  +- commons-io:commons-io:jar:2.4:compile
[INFO] |  +- commons-lang:commons-lang:jar:2.6:compile
[INFO] |  +- commons-logging:commons-logging:jar:1.1.3:compile
[INFO] |  +- commons-daemon:commons-daemon:jar:1.0.13:compile
[INFO] |  \- com.google.protobuf:protobuf-java:jar:2.5.0:compile
[INFO] +- com.sun.jersey:jersey-server:jar:1.17:compile
[INFO] |  \- asm:asm:jar:3.1:compile
[INFO] +- com.sun.jersey:jersey-servlet:jar:1.17:compile
[INFO] +- com.sun.jersey:jersey-core:jar:1.17:compile
[INFO] +- javax.ws.rs:jsr311-api:jar:1.1.1:compile
[INFO] +- org.kohsuke:akuma:jar:1.9:compile
[INFO] |  \- net.java.dev.jna:jna:jar:3.4.0:compile
[INFO] +- org.apache.hadoop:hadoop-hdfs:jar:tests:2.3.0-cdh5.1.0-SNAPSHOT:test
[INFO] +- org.apache.hadoop:hadoop-common:jar:tests:2.3.0-cdh5.1.0-SNAPSHOT:test
[INFO] +- org.apache.hbase:hbase-server:test-jar:tests:0.98.1-cdh5.1.0-SNAPSHOT:test
[INFO] |  \- org.apache.hadoop:hadoop-hdfs:test-jar:tests:2.3.0-cdh5.1.0-SNAPSHOT:test
[INFO] +- org.apache.hbase:hbase-hadoop2-compat:test-jar:tests:0.98.1-cdh5.1.0-SNAPSHOT:test
[INFO] +- org.apache.hbase:hbase-hadoop-compat:test-jar:tests:0.98.1-cdh5.1.0-SNAPSHOT:test
[INFO] +- org.apache.hbase:hbase-server:jar:0.98.1-cdh5.1.0-SNAPSHOT:compile
[INFO] |  +- org.apache.hbase:hbase-common:jar:0.98.1-cdh5.1.0-SNAPSHOT:compile
[INFO] |  +- org.apache.hbase:hbase-protocol:jar:0.98.1-cdh5.1.0-SNAPSHOT:compile
[INFO] |  +- org.apache.hbase:hbase-client:jar:0.98.1-cdh5.1.0-SNAPSHOT:compile
[INFO] |  |  \- io.netty:netty:jar:3.6.6.Final:compile
[INFO] |  +- org.apache.hbase:hbase-prefix-tree:jar:0.98.1-cdh5.1.0-SNAPSHOT:runtime
[INFO] |  +- commons-collections:commons-collections:jar:3.2.1:compile
[INFO] |  +- org.apache.hbase:hbase-hadoop-compat:jar:0.98.1-cdh5.1.0-SNAPSHOT:compile
[INFO] |  +- org.apache.hbase:hbase-hadoop2-compat:jar:0.98.1-cdh5.1.0-SNAPSHOT:compile
[INFO] |  +- com.github.stephenc.high-scale-lib:high-scale-lib:jar:1.1.1:compile
[INFO] |  +- org.apache.commons:commons-math:jar:2.1:compile
[INFO] |  +- org.mortbay.jetty:jetty-sslengine:jar:6.1.26.cloudera.2:compile
[INFO] |  +- org.mortbay.jetty:jsp-2.1:jar:6.1.14:compile
[INFO] |  +- org.mortbay.jetty:jsp-api-2.1:jar:6.1.14:compile
[INFO] |  +- org.mortbay.jetty:servlet-api-2.5:jar:6.1.14:compile
[INFO] |  +- org.codehaus.jackson:jackson-jaxrs:jar:1.8.8:compile
[INFO] |  +- org.jamon:jamon-runtime:jar:2.3.1:compile
[INFO] |  +- com.sun.jersey:jersey-json:jar:1.17:compile (version managed from 1.8)
[INFO] |  |  +- org.codehaus.jettison:jettison:jar:1.1:compile
[INFO] |  |  +- com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:compile
[INFO] |  |  \- org.codehaus.jackson:jackson-xc:jar:1.9.2:compile
[INFO] |  +- javax.xml.bind:jaxb-api:jar:2.1:compile
[INFO] |  |  \- javax.activation:activation:jar:1.1:compile
[INFO] |  +- org.cloudera.htrace:htrace-core:jar:2.04:compile
[INFO] |  +- org.apache.hadoop:hadoop-common:jar:2.3.0-cdh5.1.0-SNAPSHOT:compile
[INFO] |  |  +- org.apache.commons:commons-math3:jar:3.1.1:compile
[INFO] |  |  +- commons-configuration:commons-configuration:jar:1.6:compile
[INFO] |  |  |  +- commons-digester:commons-digester:jar:1.8:compile
[INFO] |  |  |  |  \- commons-beanutils:commons-beanutils:jar:1.7.0:compile
[INFO] |  |  |  \- commons-beanutils:commons-beanutils-core:jar:1.8.0:compile
[INFO] |  |  +- org.apache.avro:avro:jar:1.7.5-cdh5.1.0-SNAPSHOT:compile
[INFO] |  |  |  +- com.thoughtworks.paranamer:paranamer:jar:2.3:compile
[INFO] |  |  |  \- org.xerial.snappy:snappy-java:jar:1.0.5:compile
[INFO] |  |  +- com.jcraft:jsch:jar:0.1.42:compile
[INFO] |  |  \- org.apache.commons:commons-compress:jar:1.4.1:compile
[INFO] |  |     \- org.tukaani:xz:jar:1.0:compile
[INFO] |  +- org.apache.hadoop:hadoop-auth:jar:2.3.0-cdh5.1.0-SNAPSHOT:compile
[INFO] |  +- org.apache.hadoop:hadoop-annotations:jar:2.3.0-cdh5.1.0-SNAPSHOT:compile
[INFO] |  |  \- jdk.tools:jdk.tools:jar:1.7:system
[INFO] |  \- com.github.stephenc.findbugs:findbugs-annotations:jar:1.3.9-1:compile
[INFO] +- org.apache.hbase:hbase-client:test-jar:tests:0.98.1-cdh5.1.0-SNAPSHOT:test
[INFO] \- org.apache.hbase:hbase-common:test-jar:tests:0.98.1-cdh5.1.0-SNAPSHOT:test
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14028693" author="enis" created="Thu, 12 Jun 2014 01:30:46 +0000"  >&lt;p&gt;Attaching the first version patch as an inclusion candidate. Would be good to have this in 1.0. &lt;/p&gt;

&lt;p&gt;Patch adds a new plugin point ReplicationEndpoint. ReplicationSource tails the log, ReplicationEndpoint implementations are responsible for actually shipping the edits to the other (hbase or non-hbase) cluster. &lt;/p&gt;

&lt;p&gt;ReplicationEndpoint can be defined per peer. Default inter-cluster replication works without any changes (lily etc should still work). &lt;/p&gt;

&lt;p&gt;RB here: &lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/22490/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/22490/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14028779" author="hadoopqa" created="Thu, 12 Jun 2014 03:09:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12649979/hbase-10504_v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12649979/hbase-10504_v1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12649979&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 7 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +    this.replicationPeers.addPeer(id, new ReplicationPeerConfig().setClusterKey(clusterKey), tableCFs);&lt;br/&gt;
+  public ReplicationPeerZKImpl(Configuration conf, String id, ReplicationPeerConfig peerConfig) throws ReplicationException {&lt;br/&gt;
+  void addPeer(String peerId, ReplicationPeerConfig peerConfig, String tableCFs) throws ReplicationException;&lt;br/&gt;
+  public void addPeer(String id, ReplicationPeerConfig peerConfig, String tableCFs) throws ReplicationException {&lt;br/&gt;
+          LOG.warn(&quot;Failed to get replication peer configuration of clusterid=&quot; + id + &quot; znode content, continuing.&quot;);&lt;br/&gt;
+  private static ReplicationPeerConfig parsePeerFrom(final byte[] bytes) throws DeserializationException {&lt;br/&gt;
+              new java.lang.String[] &lt;/p&gt;
{ &quot;Clusterkey&quot;, &quot;ReplicationEndpointImpl&quot;, &quot;Data&quot;, &quot;Configuration&quot;, }
&lt;p&gt;);&lt;br/&gt;
+ * class rather than implementing &lt;/p&gt;
{@link ReplicationEndpoint}
&lt;p&gt; directly for better backwards compatibility.&lt;br/&gt;
+public abstract class HBaseReplicationEndpoint extends BaseReplicationEndpoint implements Abortable {&lt;br/&gt;
+        // send the edits to the endpoint. Will block until the edits are actually sent and acknowledged&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9751//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14029275" author="jdcryans" created="Thu, 12 Jun 2014 15:42:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, as per the discussion above, I think what you are proposing is good but it doesn&apos;t solve the problem that this jira is about. How about we open a new jira, titled something like &quot;Make ReplicationSource extendable&quot;, and do the review/commit over there?&lt;/p&gt;</comment>
                            <comment id="14029534" author="enis" created="Thu, 12 Jun 2014 18:11:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;as per the discussion above, I think what you are proposing is good but it doesn&apos;t solve the problem that this jira is about. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;My understanding of the issue description and discussions is that the new interface ReplicationEndpoint &lt;b&gt;is&lt;/b&gt; the supported replication interface as per the title. What do you have in mind otherwise? We should expose any of our RPC or zookeeper details to replication plugins. &lt;/p&gt;</comment>
                            <comment id="14029791" author="enis" created="Thu, 12 Jun 2014 20:53:56 +0000"  >&lt;p&gt;Thinking a bit more about this, if we want to provide isolation for the replication services in hbase, we can have a simple host as another daemon which hosts the ReplicationEndpoint implementation. RS&apos;s will use a built-in RE to send the edits to this layer, and the host will delegate it to the RE implementation. &lt;br/&gt;
The flow would be something like: &lt;br/&gt;
RS --&amp;gt; RE inside RS --&amp;gt; Host daemon for RE --&amp;gt; Actual RE implementation --&amp;gt; third party system&lt;br/&gt;
But I am not sure whether we will have this daemon host layer implemented by 1.0. &lt;/p&gt;</comment>
                            <comment id="14029806" author="jdcryans" created="Thu, 12 Jun 2014 21:06:25 +0000"  >&lt;p&gt;As long as the RE daemons are disjoint from the region servers that would work, since you need to be able to have as many/few of them as you want, plus to be able to have them on different machines.&lt;/p&gt;

&lt;p&gt;I could even see this as being useful for certain use cases that want inter-HBase replication to be done through specific gateways.&lt;/p&gt;

&lt;p&gt;We then have to architect a way to discover those endpoints, etc... kind of what the current replication code already does with sinks.&lt;/p&gt;</comment>
                            <comment id="14033203" author="enis" created="Mon, 16 Jun 2014 23:55:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;As long as the RE daemons are disjoint from the region servers that would work, since you need to be able to have as many/few of them as you want, plus to be able to have them on different machines.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I could even see this as being useful for certain use cases that want inter-HBase replication to be done through specific gateways.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sounds good to me. I think it is ok to maintain such a gateway inside hbase proper. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt; mind giving the patch a review? Do you want to do this in a subtask? &lt;/p&gt;</comment>
                            <comment id="14033216" author="jdcryans" created="Tue, 17 Jun 2014 00:06:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;Do you want to do this in a subtask?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, please.&lt;/p&gt;</comment>
                            <comment id="14033267" author="enis" created="Tue, 17 Jun 2014 00:51:59 +0000"  >&lt;p&gt;Ok, moved the patch to subtask &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11367&quot; title=&quot;Pluggable replication endpoint&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11367&quot;&gt;&lt;del&gt;HBASE-11367&lt;/del&gt;&lt;/a&gt;. Thanks JD. &lt;/p&gt;</comment>
                            <comment id="14126573" author="enis" created="Tue, 9 Sep 2014 04:13:12 +0000"  >&lt;p&gt;Unscheduling this for 1.x series. Put it back if you want to work on it. I don&apos;t think we will have another kind of process for providing isolation to replication endpoints as discussed above. Otherwise &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11367&quot; title=&quot;Pluggable replication endpoint&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11367&quot;&gt;&lt;del&gt;HBASE-11367&lt;/del&gt;&lt;/a&gt; provides the pluggable endpoint similar to our current co-processors. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12668123">HBASE-9507</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12649979" name="hbase-10504_v1.patch" size="210219" author="enis" created="Thu, 12 Jun 2014 01:30:46 +0000"/>
                            <attachment id="12643987" name="hbase-10504_wip1.patch" size="32382" author="enis" created="Thu, 8 May 2014 18:39:01 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12721560">HBASE-11367</subtask>
                            <subtask id="12722900">HBASE-11392</subtask>
                            <subtask id="12722903">HBASE-11393</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Feb 2014 23:39:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>373127</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 14 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1savr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>373428</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>