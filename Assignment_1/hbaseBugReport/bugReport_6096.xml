<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:33:45 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6096/HBASE-6096.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6096] AccessController v2</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6096</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Umbrella issue for iteration on the initial AccessController drop.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12558146">HBASE-6096</key>
            <summary>AccessController v2</summary>
                <type id="14" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/genericissue.png">Umbrella</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 May 2012 17:31:32 +0000</created>
                <updated>Tue, 29 Apr 2014 21:09:28 +0000</updated>
                            <resolved>Tue, 29 Apr 2014 21:09:28 +0000</resolved>
                                    <version>0.94.1</version>
                    <version>0.95.2</version>
                                                    <component>security</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>15</watches>
                                                                                                            <comments>
                            <comment id="13284807" author="lakshman" created="Tue, 29 May 2012 13:30:42 +0000"  >&lt;p&gt;Please validate my understanding and correct me.&lt;/p&gt;

&lt;p&gt;1) Derived from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6061&quot; title=&quot;Fix ACL &amp;quot;Admin&amp;quot; Table inconsistent permission check&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6061&quot;&gt;&lt;del&gt;HBASE-6061&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Table Owner + Table CREATE = Table ADMIN&lt;/p&gt;

&lt;p&gt;2) Table ADMIN should be able to perform any operation on a table. (inline with GLOBAL ADMIN)&lt;br/&gt;
Table ADMIN = CREATE + READ + WRITE + ADMIN PERMISSIONS&lt;/p&gt;

&lt;p&gt;ADMIN PERMISSIONS - Includes &lt;/p&gt;

&lt;p&gt;ADMIN should be able to perform operations like GET, SCAN, PUT and DELETE without explicit &quot;READ&quot; and &quot;WRITE&quot; permissions.&lt;/p&gt;

&lt;p&gt;3) Table WRITE permission is NOT an inclusion of Table READ.&lt;/p&gt;

&lt;p&gt;i.e., having WRITE permission alone indicates User is NOT authorized to do READ operations like GET/SCAN.&lt;/p&gt;
</comment>
                            <comment id="13284981" author="mbertozzi" created="Tue, 29 May 2012 18:04:22 +0000"  >&lt;p&gt;1) no admin is different... able to do operation on the cluster (region move, unassign, ... and create/delete/modify all the tables)&lt;/p&gt;

&lt;p&gt;2) if you grant for &apos;A&apos; you don&apos;t get RWC &lt;br/&gt;
so admin are not able to read but are able to perform actions (create/delete/modify) on all tables&lt;/p&gt;

&lt;p&gt;3) if you grant &apos;W&apos; you don&apos;t get &apos;R&apos;&lt;/p&gt;

&lt;p&gt;The permission checks are done in this way:&lt;br/&gt;
AccessController.permissionGranted()&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Allow All to READ on .META. and &lt;del&gt;ROOT&lt;/del&gt;&lt;/li&gt;
	&lt;li&gt;Allow Users with global ADMIN/CREATE to write on .META. (Add/Remove Table...)&lt;/li&gt;
	&lt;li&gt;Allow if user is Table Owner&lt;/li&gt;
	&lt;li&gt;Allow if user has Table Level rights&lt;/li&gt;
	&lt;li&gt;Allow if user has (Table) Family Level rights&lt;/li&gt;
	&lt;li&gt;Allow if user has (Table, Family) Qualifier Level rights&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13284994" author="apurtell" created="Tue, 29 May 2012 18:23:46 +0000"  >&lt;p&gt;Thanks Matteo, concur.&lt;/p&gt;

&lt;p&gt;IMO, it&apos;s preferable to conceptualize ADMIN permission as only an extra bit that allows you to interact with the Master on table management concerns.&lt;/p&gt;</comment>
                            <comment id="13285373" author="lakshman" created="Wed, 30 May 2012 04:30:03 +0000"  >&lt;p&gt;Thanks Matteo. I will try to come up with an ACL matrix with expected and actual permissions.&lt;br/&gt;
Hope that helps in identifying all issues related to ACL.&lt;/p&gt;</comment>
                            <comment id="13285402" author="mbertozzi" created="Wed, 30 May 2012 05:54:42 +0000"  >&lt;ul&gt;
	&lt;li&gt;Admin
	&lt;ul&gt;
		&lt;li&gt;grant/revoke/get permission&lt;/li&gt;
		&lt;li&gt;create/delete/enable/disable all tables&lt;/li&gt;
		&lt;li&gt;move/assign/unassign/balance&lt;/li&gt;
		&lt;li&gt;shutdown/stop master&lt;br/&gt;
@Laxman I already have this list... is not complete but can help you starting with your matrix&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Create
	&lt;ul&gt;
		&lt;li&gt;create table&lt;/li&gt;
		&lt;li&gt;modify/delete/enable/disable table (if you&#8217;re table owner)&lt;/li&gt;
		&lt;li&gt;modify/delete/enable/disable table&lt;/li&gt;
		&lt;li&gt;add/modify/delete column&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Write
	&lt;ul&gt;
		&lt;li&gt;put/delete/increment&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Read
	&lt;ul&gt;
		&lt;li&gt;get/getClosestRow../exists/scan/&lt;/li&gt;
		&lt;li&gt;checkAndPut/checkAndDelete&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13285418" author="lakshman" created="Wed, 30 May 2012 06:19:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;2) if you grant for &apos;A&apos; you don&apos;t get RWC&lt;br/&gt;
so admin are not able to read but are able to perform actions (create/delete/modify) on all tables&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;IMO, it&apos;s preferable to conceptualize ADMIN permission as only an extra bit that allows you to interact with the Master on table management concerns.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree. But I still need some details to prepare ACL matrix.&lt;/p&gt;

&lt;p&gt;There are two levels of &apos;A&apos; (ADMIN) now.&lt;br/&gt;
a) GLOBAL ADMIN (Super user - Configured using hbase.superuser)&lt;br/&gt;
b) TABLE ADMIN (via grant)&lt;/p&gt;

&lt;p&gt;I&apos;m not able to clearly differentiate between them.&lt;/p&gt;

&lt;p&gt;In the current implementation, GLOBAL ADMIN is able to read/write to any table. Which means, TABLE ADMIN will not be able to perform some operations on a table which GLOBAL ADMIN is able to do. Now we may need to discuss which part of these needs correction?&lt;/p&gt;

&lt;p&gt;IMO, GLOBAL ADMIN (for all tables) semantics should be inline with TABLE ADMIN (for one table).&lt;/p&gt;</comment>
                            <comment id="13285420" author="lakshman" created="Wed, 30 May 2012 06:24:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;Read - checkAndPut/checkAndDelete&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;@Matteo, I feel these two requires READ and WRITE together. No?&lt;/p&gt;</comment>
                            <comment id="13285554" author="mbertozzi" created="Wed, 30 May 2012 10:26:23 +0000"  >&lt;p&gt;@Laxman if you look at TableAuthManager there&apos;re two SkipList USER_CACHE and TABLE_USER_CACHE&lt;br/&gt;
USER_CACHE contains the global rights, TABLE_USER_CACHE contains the table one.&lt;/p&gt;

&lt;p&gt;hbase.superuser is read at startup TableAuthManager.initGlobal() and fills the USER_CACHE with specified users with RWCA rights (so is not just ADMIN is RWCA)&lt;/p&gt;

&lt;p&gt;All CA operation are checked against global rights (USER_CACHE) &lt;br/&gt;
so specifying CA in table rights has no effect.&lt;/p&gt;

&lt;p&gt;grant &apos;user&apos;, &apos;RWCA&apos; -&amp;gt; fill USER_CACHE global rights&lt;br/&gt;
grant &apos;user&apos;, &apos;RW&apos;, &apos;table&apos; -&amp;gt; FILL TABLE_USER_CACHE&lt;/p&gt;

&lt;p&gt;this means if you&apos;re &quot;global granted&quot; (CREATE/ADMIN) you can add/modify/remove tables with the restriction that, if you&apos;ve CREATE you can just modify/delete your own table while ADMIN you can modify/delete all the available tables.&lt;br/&gt;
if you&apos;re table granted you can do just read/write depends on what is your permission, but you don&apos;t have the ability to create/modify/delete even if you&apos;ve CA (CA are not checked against TABLE_USER_CACHE just USER_CACHE)&lt;/p&gt;

&lt;p&gt;for checkAndPut()/checkAndDelete() there&apos;s a jira open &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6062&quot; title=&quot;preCheckAndPut/Delete() checks for READ when also a WRITE is performed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6062&quot;&gt;&lt;del&gt;HBASE-6062&lt;/del&gt;&lt;/a&gt; and yes it needs to check both Read and Write.&lt;/p&gt;</comment>
                            <comment id="13285611" author="lakshman" created="Wed, 30 May 2012 12:12:59 +0000"  >&lt;p&gt;@Matteo, Thanks a lot for detailed explanation.&lt;br/&gt;
With your above explanation, I understand that current design/implementation ignores TABLE CREATE/ADMIN permissions. But here, I&apos;m trying to get more on &quot;How it should be?&quot; than &quot;How it is currently?&quot;&lt;/p&gt;

&lt;p&gt;Found related discussion (TABLE ADMIN vs GLOBAL ADMIN) @ &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5372&quot; title=&quot;Table mutation operations should check table level rights, not global rights &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5372&quot;&gt;&lt;del&gt;HBASE-5372&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
I&apos;m sorry if I&apos;m asking basic questions.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;IMO, GLOBAL ADMIN (for all tables) semantics should be inline with TABLE ADMIN (for one table).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is this correct expectation or any different opinions?&lt;/p&gt;</comment>
                            <comment id="13285766" author="apurtell" created="Wed, 30 May 2012 15:57:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;hbase.superuser is read at startup TableAuthManager.initGlobal() and fills the USER_CACHE with specified users with RWCA rights (so is not just ADMIN is RWCA)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The &quot;superuser&quot; concept is a legacy from the initial implementation. Instead of having ADMIN rights mean something per user, there was/is an implicit grant of ADMIN rights to the superuser and that is it, for simplicity. So in our production the &quot;hbase&quot; user is used to manage the cluster by ops, and users have grants of only READ or WRITE as appropriate.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;GLOBAL ADMIN (for all tables) semantics should be inline with TABLE ADMIN (for one table).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;The &quot;superuser&quot; shortcut should be removed. Instead the AccessController could add a GLOBAL ADMIN grant on demand for the service principal of the master and regionservers when creating the ACL table. I don&apos;t think anyone is setting the &quot;superuser&quot; to anything other than the service principal. &lt;/p&gt;

&lt;p&gt;Also we could drop the &quot;owner&quot; concept (and table attribute) and instead have the AccessController add a TABLE ADMIN grant at table creation time, as discussed in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5372&quot; title=&quot;Table mutation operations should check table level rights, not global rights &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5372&quot;&gt;&lt;del&gt;HBASE-5372&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13285769" author="apurtell" created="Wed, 30 May 2012 15:59:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;checkAndPut/checkAndDelete&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;These should need READ + WRITE. &lt;/p&gt;</comment>
                            <comment id="13285771" author="apurtell" created="Wed, 30 May 2012 16:01:16 +0000"  >&lt;p&gt;And to clarify, the &quot;superuser&quot; can do anything, there is not only an implicit grant of ADMIN. Now that people are working on functioning global permissions it&apos;s not necessary to have this shortcut.&lt;/p&gt;</comment>
                            <comment id="13286125" author="enis" created="Wed, 30 May 2012 22:20:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;The &quot;superuser&quot; shortcut should be removed.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We need something like a superuser, so that if somehow there is a mixup of grants, we can fix it. But as Andrew suggest, just using the service principal should be good enough. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also we could drop the &quot;owner&quot; concept&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1. It is better to manage all permissions from one place.&lt;/p&gt;</comment>
                            <comment id="13286143" author="ghelmling" created="Wed, 30 May 2012 22:37:37 +0000"  >&lt;p&gt;The one possible downside to dropping the &quot;owner&quot; concept is that we lose any direct path to pushing down ownership to the table HFiles in HDFS.&lt;/p&gt;

&lt;p&gt;That said, I haven&apos;t seen any pressing need to push down ownership to HDFS, and the &quot;owner&quot; role was a bit of an odd exception in the permissions scheme, so I&apos;m actually +1 on dropping it as well.  Just wanted to raise this for completeness.&lt;/p&gt;</comment>
                            <comment id="13286445" author="lakshman" created="Thu, 31 May 2012 09:59:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;Matteo:&lt;br/&gt;
2) if you grant for &apos;A&apos; you don&apos;t get RWC&lt;br/&gt;
so admin are not able to read but are able to perform actions (create/delete/modify) on all tables&lt;/p&gt;&lt;/blockquote&gt;


&lt;blockquote&gt;&lt;p&gt;Andrew:&lt;br/&gt;
IMO, it&apos;s preferable to conceptualize ADMIN permission as only an extra bit that allows you to interact with the Master on table management concerns.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;@Matteo &amp;amp; Andy, thank you for your explanation.&lt;/p&gt;

&lt;p&gt;Yes, I couldn&apos;t agree to the point &quot;ADMIN can&apos;t READ/WRITE&quot;. &lt;/p&gt;

&lt;p&gt;Say, GLOBAL/TABLE ADMIN should NOT be able to READ/WRITE from/to a table. But, they should be able to do ADMIN operations (including grant, revoke, etc.) on the table. Then, ADMIN can grant themselves any permission(CRW).&lt;/p&gt;

&lt;p&gt;&lt;b&gt;It&apos;s an unwanted backdoor (may be a vulnerability). No?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;IMO, its no use in restricting ADMIN from READ/WRITE.&lt;/p&gt;</comment>
                            <comment id="13286485" author="apurtell" created="Thu, 31 May 2012 11:27:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;IMO, its no use in restricting ADMIN from READ/WRITE.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Though ADMIN can allow someone to grant themselves READ and/or WRITE permission, ADMIN should be a bit that allows DDL and table management ops, nothing to do with READ or WRITE permission. You raise a valid point Laxman but it&apos;s a documentation issue IMHO. &lt;/p&gt;</comment>
                            <comment id="13288367" author="lakshman" created="Mon, 4 Jun 2012 06:13:06 +0000"  >&lt;p&gt;One observation:&lt;/p&gt;

&lt;p&gt;Revoke of Global permission is not taking effect without restart.&lt;br/&gt;
Revoke is updating the &lt;em&gt;acl&lt;/em&gt; table but it&apos;s not updating the USER_CACHE.&lt;/p&gt;

&lt;p&gt;Do we have any open issue for this or it needs a new jira?&lt;/p&gt;</comment>
                            <comment id="13288444" author="apurtell" created="Mon, 4 Jun 2012 09:22:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;Revoke of Global permission is not taking effect without restart.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Better to make a new JIRA than reopen &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5342&quot; title=&quot;Grant/Revoke global permissions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5342&quot;&gt;&lt;del&gt;HBASE-5342&lt;/del&gt;&lt;/a&gt; I&apos;d say. &lt;/p&gt;</comment>
                            <comment id="13288504" author="lakshman" created="Mon, 4 Jun 2012 11:28:51 +0000"  >&lt;p&gt;Thanks Andy. Added as a subtask &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6157&quot; title=&quot;Revoke of Global permission is not taking effect without restart.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6157&quot;&gt;&lt;del&gt;HBASE-6157&lt;/del&gt;&lt;/a&gt; to this parent jira. Hope that should be fine.&lt;/p&gt;</comment>
                            <comment id="13289350" author="lakshman" created="Tue, 5 Jun 2012 11:46:40 +0000"  >&lt;p&gt;Currently, concurrent access control operations (grant, revoke) may fail.&lt;br/&gt;
Should we consider supporting concurrency for these operations in v2?&lt;/p&gt;

&lt;p&gt;IMO it&apos;s required if we wanted to claim HBase as secure.&lt;br/&gt;
We don&apos;t have a use-case right now. It will be great if someone can provide, if any.&lt;/p&gt;</comment>
                            <comment id="13289453" author="apurtell" created="Tue, 5 Jun 2012 14:31:36 +0000"  >&lt;blockquote&gt;&lt;p&gt;Currently, concurrent access control operations (grant, revoke) may fail. Should we consider supporting concurrency for these operations in v2?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maybe you can provide more context?&lt;/p&gt;

&lt;p&gt;Note that the permissions caches on each RS will synchronize with updates to the ACL table only after their ZK watches fire, which will be soon thereafter but not immediate. &quot;Tightening&quot; this means an ACL table read for every cluster operation, an instant hot spot, hence the design motivation for the caching. So for some short period after a grant, access may be denied; and, conversely, for some short period after a revoke, access may be allowed. This does not mean we cannot claim HBase as secure, because after ACLs are set up and the application goes production, it is enforced.&lt;/p&gt;</comment>
                            <comment id="13290925" author="lakshman" created="Thu, 7 Jun 2012 10:53:36 +0000"  >&lt;blockquote&gt;&lt;p&gt;So for some short period after a grant, access may be denied; and, conversely, for some short period after a revoke, access may be allowed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree with you on this Andy. But this is not my concern. I could have provide context.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Maybe you can provide more context?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In TableAuthManager, we may need to maintain thread-safe data structures.&lt;/p&gt;

&lt;p&gt;What I meant by concurrency was, when we execute access control operations(grant, revoke) and other user operation (scan, get, put) some calls may fail. Reasons for failure&lt;/p&gt;

&lt;p&gt;1) access control operations updates USER_CACHE &amp;amp; GROUP_CACHE&lt;br/&gt;
2) user operation reads from USER_CACHE &amp;amp; GROUP_CACHE.&lt;/p&gt;

&lt;p&gt;And these data structures &lt;span class=&quot;error&quot;&gt;&amp;#91;ArrayListMultimap&amp;#93;&lt;/span&gt; are not thread-safe.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://google-collections.googlecode.com/svn/trunk/javadoc/com/google/common/collect/ArrayListMultimap.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://google-collections.googlecode.com/svn/trunk/javadoc/com/google/common/collect/ArrayListMultimap.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please correct me if I&apos;m missing something here.&lt;/p&gt;


</comment>
                            <comment id="13290929" author="lakshman" created="Thu, 7 Jun 2012 11:12:55 +0000"  >&lt;p&gt;Attached the ACL matrix based on my understanding. Request for review and comments.&lt;/p&gt;</comment>
                            <comment id="13290941" author="apurtell" created="Thu, 7 Jun 2012 11:41:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;In TableAuthManager, we may need to maintain thread-safe data structures.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So let&apos;s consider using a &lt;a href=&quot;http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/locks/ReadWriteLock.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;ReadWriteLock&lt;/a&gt; to protect for update. It is also possible to obtain a synchronized multimap with &lt;a href=&quot;http://google-collections.googlecode.com/svn/trunk/javadoc/com/google/common/collect/Multimaps.html#synchronizedListMultimap(com.google.common.collect.ListMultimap)&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Multimaps#synchronizedListMultimap&lt;/a&gt; but by far the most common access is read access, and concurrent read access is fine.&lt;/p&gt;

&lt;p&gt;Edit: See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6186&quot; title=&quot;Assure thread safety&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6186&quot;&gt;&lt;del&gt;HBASE-6186&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13290950" author="apurtell" created="Thu, 7 Jun 2012 11:56:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;Attached the ACL matrix based on my understanding. Request for review and comments.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for working this up Laxman.&lt;/p&gt;

&lt;p&gt;Elsewhere under this umbrella is discussion and some agreement on removing the concept of table owner. Instead during the process of creating a table the admin would grant as appropriate. What do you think?&lt;/p&gt;

&lt;p&gt;For splits, IMHO this does not need to change. Under what access control use case should we deny a region from splitting?&lt;/p&gt;

&lt;p&gt;For flushes, likewise, and this is an essential and time sensitive operation. Under what access control use case should we deny a region from flushing?&lt;/p&gt;

&lt;p&gt;For compaction, likewise.&lt;/p&gt;

&lt;p&gt;Everything else looks good to me. Perhaps others can comment?&lt;/p&gt;
</comment>
                            <comment id="13290971" author="lakshman" created="Thu, 7 Jun 2012 12:42:39 +0000"  >&lt;p&gt;Thanks for quick review and response Andy.&lt;/p&gt;

&lt;p&gt;+1 on removing the concept of table owner. Do we have any jira for this?&lt;/p&gt;

&lt;p&gt;split, flush, compact - these operations can be triggered internally or by user as well (via HBaseAdmin). Consider the following use-case.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;User &quot;A&quot; owns table &quot;T1&quot;&lt;/li&gt;
	&lt;li&gt;User &quot;B&quot; owns table &quot;T2&quot;&lt;/li&gt;
	&lt;li&gt;Should we allow &quot;B&quot; to split/flush/compact &quot;T2&quot;?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So, I feel these operations should be checked for &quot;TABLE ADMIN/GLOBAL ADMIN&quot;. What you say?&lt;/p&gt;</comment>
                            <comment id="13290975" author="apurtell" created="Thu, 7 Jun 2012 12:47:43 +0000"  >&lt;blockquote&gt;&lt;p&gt;I feel these operations should be checked for &quot;TABLE ADMIN/GLOBAL ADMIN&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As part of the processing of the administrative request, but therefore we need to hook it at the time of the RPC, not the split or compaction or flush itself. Pardon if we are talking about the same thing. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Then I agree.&lt;/p&gt;</comment>
                            <comment id="13290977" author="apurtell" created="Thu, 7 Jun 2012 12:50:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;+1 on removing the concept of table owner.  Do we have any jira for this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll open a subtask to be sure.&lt;/p&gt;</comment>
                            <comment id="13291213" author="mbertozzi" created="Thu, 7 Jun 2012 18:57:51 +0000"  >&lt;p&gt;ACL Matrix looks good to me, split &amp;amp; compact feels like just admin stuff.&lt;br/&gt;
+1 on removing the table owner (setOwner not present in shell but just in HTableDescriptor)&lt;/p&gt;

&lt;p&gt;I don&apos;t understand why we need synchronize on _CACHE maps, the only one that update those maps is ZKPermissionWatcher... and the zookeeper events should be dispatched in a single thread. Am I missing something?&lt;/p&gt;</comment>
                            <comment id="13291237" author="lakshman" created="Thu, 7 Jun 2012 19:25:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t understand why we need synchronize on _CACHE maps, the only one that update those maps is ZKPermissionWatcher... and the zookeeper events should be dispatched in a single thread. Am I missing something?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;@Matt, updates &amp;amp; reads from occurs in two multiple threads.&lt;/p&gt;

&lt;p&gt;1) access control operations(grant/revoke via ZKPermissionWatcher) updates USER_CACHE &amp;amp; GROUP_CACHE&lt;br/&gt;
2) user operations(Any operation in matrix) reads from USER_CACHE &amp;amp; GROUP_CACHE.&lt;/p&gt;

&lt;p&gt;And these data structures &lt;span class=&quot;error&quot;&gt;&amp;#91;ArrayListMultimap&amp;#93;&lt;/span&gt; are not thread-safe.&lt;br/&gt;
Hope this clarifies.&lt;/p&gt;</comment>
                            <comment id="13291252" author="mbertozzi" created="Thu, 7 Jun 2012 19:45:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;And these data structures &lt;span class=&quot;error&quot;&gt;&amp;#91;ArrayListMultimap&amp;#93;&lt;/span&gt; are not thread-safe.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep, looked at the code... &lt;/p&gt;

&lt;p&gt;So now we can have some problems on concurrent operations when you&apos;re granting user for a new table that is not in the map, and the map want to grow. (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6186&quot; title=&quot;Assure thread safety&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6186&quot;&gt;&lt;del&gt;HBASE-6186&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="13291713" author="lakshman" created="Fri, 8 Jun 2012 11:41:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;As part of the processing of the administrative request, but therefore we need to hook it at the time of the RPC, not the split or compaction or flush itself. Pardon if we are talking about the same thing. Then I agree.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;@Andy, do you mean we should not use available hooks &lt;span class=&quot;error&quot;&gt;&amp;#91;preSplit, preCompact, preFlush&amp;#93;&lt;/span&gt; and we should introduce new hooks.&lt;/p&gt;

&lt;p&gt;Can you please provide more details on this.&lt;/p&gt;

&lt;p&gt;I feel we should make use of the same coprocessor hooks.&lt;br/&gt;
Security specific hooks in Coprocessor doesn&apos;t sounds correct to me.&lt;/p&gt;

&lt;p&gt;Please correct me if I misunderstood you.&lt;/p&gt;</comment>
                            <comment id="13291985" author="apurtell" created="Fri, 8 Jun 2012 20:54:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;Andy, do you mean we should not use available hooks &lt;span class=&quot;error&quot;&gt;&amp;#91;preSplit, preCompact, preFlush&amp;#93;&lt;/span&gt; and we should introduce new hooks.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Lifecycle hooks (open, close, split, compact, flush) don&apos;t have the RPC context for determining &quot;current user&quot; so I don&apos;t see how we can differentiate between action initiated by the system or some user, or maybe you see some way to do that? Otherwise, we should insure the HBaseAdmin interface has full coverage and handle it there in the RPC context.&lt;/p&gt;</comment>
                            <comment id="13291987" author="mbertozzi" created="Fri, 8 Jun 2012 21:01:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t see how we can differentiate between action initiated by the system or some user&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Note that you&apos;ve the same problem when you&apos;re creating/deleting/modifying a table.&lt;br/&gt;
You cannot differentiate between a user action and a system action... In this case create/delete/modify need to write on .META. so how can you limit user access on .META. keeping the ability to create/edit/delete a table?&lt;/p&gt;</comment>
                            <comment id="13291993" author="apurtell" created="Fri, 8 Jun 2012 21:10:25 +0000"  >&lt;p&gt;@Matteo, I don&apos;t follow. Users must always be able to read from META and never be able to write.&lt;/p&gt;</comment>
                            <comment id="13291994" author="mbertozzi" created="Fri, 8 Jun 2012 21:15:50 +0000"  >&lt;p&gt;@Andrew when you a user create a table, a put is called on .META. to insert the table.&lt;br/&gt;
Who is that user? He also need to be able to write on .META.&lt;/p&gt;</comment>
                            <comment id="13291999" author="apurtell" created="Fri, 8 Jun 2012 21:22:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;@Andrew when you a user create a table, a put is called on .META. to insert the table.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Who is that user? He also need to be able to write on .META.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The system principal / superuser. Like with &lt;em&gt;system initiated&lt;/em&gt; compaction, split, region open, region close, etc.&lt;/p&gt;</comment>
                            <comment id="13292442" author="lakshman" created="Sat, 9 Jun 2012 23:06:08 +0000"  >&lt;p&gt;Thanks for your inputs Andy and Matt.&lt;br/&gt;
I considered these points. please check the approach &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6092&quot; title=&quot;Authorize flush, split, compact operations in AccessController&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6092&quot;&gt;&lt;del&gt;HBASE-6092&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13984792" author="apurtell" created="Tue, 29 Apr 2014 21:09:28 +0000"  >&lt;p&gt;This umbrella has seen it&apos;s day. Resolving and spinning out still relevant subtasks to top level issues.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12558033">HBASE-6092</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12556956">HBASE-6068</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12495156">HBASE-3435</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12541538">HBASE-5343</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12541733">HBASE-5352</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12556171">HBASE-6030</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12531530">HBASE-4791</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12544698">HBASE-5498</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12475312">HBASE-3045</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12556163">HBASE-6027</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12470574">HBASE-2893</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12555032">HBASE-5994</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12431322">HBASE-1697</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12595356">HBASE-6249</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12598640">HBASE-6386</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12531252" name="Security-ACL Matrix.pdf" size="69006" author="lakshman" created="Thu, 7 Jun 2012 11:12:55 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12558151">HBASE-6098</subtask>
                            <subtask id="12558153">HBASE-6099</subtask>
                            <subtask id="12559684">HBASE-6188</subtask>
                            <subtask id="12623435">HBASE-7331</subtask>
                            <subtask id="12558155">HBASE-6101</subtask>
                            <subtask id="12623469">HBASE-7333</subtask>
                            <subtask id="12559166">HBASE-6157</subtask>
                            <subtask id="12559673">HBASE-6186</subtask>
                            <subtask id="12558186">HBASE-6106</subtask>
                            <subtask id="12558156">HBASE-6102</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 May 2012 13:30:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>241947</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 33 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02h2v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12368</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>