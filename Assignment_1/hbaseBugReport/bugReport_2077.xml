<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:58:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2077/HBASE-2077.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2077] NullPointerException with an open scanner that expired causing an immediate region server shutdown</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2077</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;2009-12-29 18:05:55,432 INFO org.apache.hadoop.hbase.regionserver.HRegionServer: Scanner -4250070597157694417 lease expired&lt;br/&gt;
2009-12-29 18:05:55,443 ERROR org.apache.hadoop.hbase.regionserver.HRegionServer: &lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.hadoop.hbase.KeyValue$KVComparator.compare(KeyValue.java:1310)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.KeyValueHeap$KVScannerComparator.compare(KeyValueHeap.java:136)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.KeyValueHeap$KVScannerComparator.compare(KeyValueHeap.java:127)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.KeyValueHeap$KVScannerComparator.compare(KeyValueHeap.java:117)&lt;br/&gt;
	at java.util.PriorityQueue.siftDownUsingComparator(PriorityQueue.java:641)&lt;br/&gt;
	at java.util.PriorityQueue.siftDown(PriorityQueue.java:612)&lt;br/&gt;
	at java.util.PriorityQueue.poll(PriorityQueue.java:523)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.KeyValueHeap.next(KeyValueHeap.java:113)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.HRegion$RegionScanner.nextInternal(HRegion.java:1776)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.HRegion$RegionScanner.next(HRegion.java:1719)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.HRegionServer.next(HRegionServer.java:1944)&lt;br/&gt;
	at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at org.apache.hadoop.hbase.ipc.HBaseRPC$Server.call(HBaseRPC.java:648)&lt;br/&gt;
	at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:915)&lt;br/&gt;
2009-12-29 18:05:55,446 INFO org.apache.hadoop.ipc.HBaseServer: IPC Server handler 7 on 55260, call next(-4250070597157694417, 10000) from 192.168.1.90:54011: error: java.io.IOException: java.lang.NullPointerException&lt;br/&gt;
java.io.IOException: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.HRegionServer.convertThrowableToIOE(HRegionServer.java:869)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.HRegionServer.convertThrowableToIOE(HRegionServer.java:859)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.HRegionServer.next(HRegionServer.java:1965)&lt;br/&gt;
	at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at org.apache.hadoop.hbase.ipc.HBaseRPC$Server.call(HBaseRPC.java:648)&lt;br/&gt;
	at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:915)&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.hadoop.hbase.KeyValue$KVComparator.compare(KeyValue.java:1310)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.KeyValueHeap$KVScannerComparator.compare(KeyValueHeap.java:136)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.KeyValueHeap$KVScannerComparator.compare(KeyValueHeap.java:127)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.KeyValueHeap$KVScannerComparator.compare(KeyValueHeap.java:117)&lt;br/&gt;
	at java.util.PriorityQueue.siftDownUsingComparator(PriorityQueue.java:641)&lt;br/&gt;
	at java.util.PriorityQueue.siftDown(PriorityQueue.java:612)&lt;br/&gt;
	at java.util.PriorityQueue.poll(PriorityQueue.java:523)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.KeyValueHeap.next(KeyValueHeap.java:113)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.HRegion$RegionScanner.nextInternal(HRegion.java:1776)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.HRegion$RegionScanner.next(HRegion.java:1719)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.HRegionServer.next(HRegionServer.java:1944)&lt;br/&gt;
	... 5 more&lt;br/&gt;
2009-12-29 18:05:55,447 WARN org.apache.hadoop.ipc.HBaseServer: IPC Server Responder, call next(-4250070597157694417, 10000) from 192.168.1.90:54011: output error&lt;br/&gt;
2009-12-29 18:05:55,448 INFO org.apache.hadoop.ipc.HBaseServer: IPC Server handler 7 on 55260 caught: java.nio.channels.ClosedChannelException&lt;br/&gt;
	at sun.nio.ch.SocketChannelImpl.ensureWriteOpen(SocketChannelImpl.java:126)&lt;br/&gt;
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:324)&lt;br/&gt;
	at org.apache.hadoop.hbase.ipc.HBaseServer.channelWrite(HBaseServer.java:1125)&lt;br/&gt;
	at org.apache.hadoop.hbase.ipc.HBaseServer$Responder.processResponse(HBaseServer.java:615)&lt;br/&gt;
	at org.apache.hadoop.hbase.ipc.HBaseServer$Responder.doRespond(HBaseServer.java:679)&lt;br/&gt;
	at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:943)&lt;/p&gt;

&lt;p&gt;2009-12-29 18:05:56,322 INFO org.apache.hadoop.ipc.HBaseServer: Stopping server on 55260&lt;br/&gt;
2009-12-29 18:05:56,322 INFO org.apache.hadoop.ipc.HBaseServer: Stopping IPC Server listener on 55260&lt;/p&gt;</description>
                <environment>&lt;p&gt;Hadoop 0.20.0, Mac OS X, Java 6&lt;/p&gt;</environment>
        <key id="12444359">HBASE-2077</key>
            <summary>NullPointerException with an open scanner that expired causing an immediate region server shutdown</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="spullara">Sam Pullara</assignee>
                                    <reporter username="spullara">Sam Pullara</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Dec 2009 07:08:45 +0000</created>
                <updated>Fri, 30 Sep 2016 09:01:32 +0000</updated>
                            <resolved>Tue, 21 Jun 2011 20:58:12 +0000</resolved>
                                    <version>0.20.2</version>
                    <version>0.20.3</version>
                                    <fixVersion>0.90.4</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>11</watches>
                                    <timeoriginalestimate seconds="3600">1h</timeoriginalestimate>
                            <timeestimate seconds="3600">1h</timeestimate>
                                        <comments>
                            <comment id="12795248" author="spullara" created="Wed, 30 Dec 2009 07:11:19 +0000"  >&lt;p&gt;jdcryans helped narrow it down to an issue in Leases where the lease would polled from the queue at the same time it was being renewed.  since there is no sychronization protection there is a race condition.  I am attaching a patch that should fix the problem though it is very difficult to reproduce.&lt;/p&gt;</comment>
                            <comment id="12795249" author="spullara" created="Wed, 30 Dec 2009 07:17:05 +0000"  >&lt;p&gt;Patch to fix race condition&lt;/p&gt;</comment>
                            <comment id="12795251" author="jdcryans" created="Wed, 30 Dec 2009 07:40:13 +0000"  >&lt;p&gt;I ran the client test and it passes. Committed to branch and trunk. Made Sam a new contributor, thanks for the patch!&lt;/p&gt;</comment>
                            <comment id="12795363" author="stack" created="Wed, 30 Dec 2009 17:47:15 +0000"  >&lt;p&gt;Patch looks good to me.&lt;/p&gt;</comment>
                            <comment id="12837034" author="jdcryans" created="Tue, 23 Feb 2010 01:38:42 +0000"  >&lt;p&gt;This is not fixed in 0.20.3, even tho the patch got in we still get the error:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2010-02-22 19:18:06,638 INFO org.apache.hadoop.hbase.regionserver.HRegionServer: Scanner -4405675591371793964 lease expired
2010-02-22 19:18:06,639 ERROR org.apache.hadoop.hbase.regionserver.HRegionServer: 
java.lang.NullPointerException
	at org.apache.hadoop.hbase.KeyValue$KVComparator.compare(KeyValue.java:1310)
	at org.apache.hadoop.hbase.regionserver.KeyValueHeap$KVScannerComparator.compare(KeyValueHeap.java:136)
	at org.apache.hadoop.hbase.regionserver.KeyValueHeap$KVScannerComparator.compare(KeyValueHeap.java:127)
	at org.apache.hadoop.hbase.regionserver.KeyValueHeap$KVScannerComparator.compare(KeyValueHeap.java:117)
	at java.util.PriorityQueue.siftDownUsingComparator(PriorityQueue.java:641)
	at java.util.PriorityQueue.siftDown(PriorityQueue.java:612)
	at java.util.PriorityQueue.poll(PriorityQueue.java:523)
	at org.apache.hadoop.hbase.regionserver.KeyValueHeap.next(KeyValueHeap.java:113)
	at org.apache.hadoop.hbase.regionserver.HRegion$RegionScanner.nextInternal(HRegion.java:1807)
	at org.apache.hadoop.hbase.regionserver.HRegion$RegionScanner.next(HRegion.java:1771)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.next(HRegionServer.java:1894)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.hadoop.hbase.ipc.HBaseRPC$Server.call(HBaseRPC.java:657)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:915)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12837045" author="jdcryans" created="Tue, 23 Feb 2010 02:46:44 +0000"  >&lt;p&gt;The way we are using the DelayQueue looks broken. We wait for leaseCheckFrequency (or the delay time, whichever happens first) in Leases and then we just expire the scanner. I think there&apos;s times when we really expire scanners that aren&apos;t done yet. This patch adds a check in run() to verify the element is really expired.&lt;/p&gt;</comment>
                            <comment id="12837046" author="jdcryans" created="Tue, 23 Feb 2010 02:47:24 +0000"  >&lt;p&gt;Moving in 0.20.4 and marking critical.&lt;/p&gt;</comment>
                            <comment id="12837208" author="ykulbak" created="Tue, 23 Feb 2010 11:54:58 +0000"  >&lt;p&gt;Not sure whether this is related, but we&apos;ve seen similar behaviour:&lt;/p&gt;

&lt;p&gt;We&apos;ve seen several of these exact stack traces (on 0.20.4-dev) which were accompanied by an immediate region server shutdown. At start it seemed that this error causes the shutdown but in every case, after a thorough examination of the logs, we also found a zookeeper session timeout.  Eventually we discovered it was a faulty disk causing large delays at unpredictable times.&lt;/p&gt;

&lt;p&gt;In our cases we also had messages like:&lt;br/&gt;
2010-02-05 16:44:20,821 WARN org.apache.hadoop.hbase.util.Sleeper: We slept 63152ms, ten times longer than scheduled: 1000&lt;br/&gt;
and&lt;br/&gt;
2010-02-05 16:44:26,448 ERROR org.apache.hadoop.hbase.regionserver.HRegionServer: ZooKeeper session expired&lt;/p&gt;

&lt;p&gt;I can provide more details if this is relevant&lt;/p&gt;</comment>
                            <comment id="12837299" author="jdcryans" created="Tue, 23 Feb 2010 16:32:12 +0000"  >&lt;p&gt;@Yoram&lt;/p&gt;

&lt;p&gt;The NPEs are enough to kill a region servers, what you pasted is a GC pause that took more than 1 minute. But, I see how that could happen... If for some reason the user scans more than 1 row (scanner caching), and that during the scan the thread is paused for some reason, there&apos;s a good possibility that on the next iteration in HRS.next() the lease has already been expired. &lt;/p&gt;

&lt;p&gt;I would love to see a log of such an event.&lt;/p&gt;</comment>
                            <comment id="12837397" author="ipye" created="Tue, 23 Feb 2010 19:24:14 +0000"  >&lt;p&gt;I&apos;ve applied the patch to 0.20.3, and things look like they are working fine for me now. The same map/reduce job which crashed with the above stack trace now completes without error.&lt;br/&gt;
In my case, I have an expensive reduce phase, which is running on 1701037 rows input. It looks like this was taking so long to complete that the scanner timeout problem was happening.&lt;/p&gt;</comment>
                            <comment id="12837604" author="jdcryans" created="Wed, 24 Feb 2010 03:39:45 +0000"  >&lt;p&gt;@Ian, that&apos;s good news.&lt;/p&gt;

&lt;p&gt;Also I got Yoram&apos;s logs off-list, I&apos;ll take a look tomorrow and see if there&apos;s anything that&apos;s in the scope of this jira.&lt;/p&gt;</comment>
                            <comment id="12838115" author="jdcryans" created="Thu, 25 Feb 2010 00:37:46 +0000"  >&lt;p&gt;WRT Yoram&apos;s logs, it went like I thought it was eg a scan begins before the GC pause and when it ends the lease is expired and around the same time a scanner tries to finish. Does it make sense to handle such a case? From a client perspective, a pause of 1 minute probably already timed it out.&lt;/p&gt;

&lt;p&gt;I will go forward and commit this patch as it fixed Ian&apos;s problem.&lt;/p&gt;</comment>
                            <comment id="12838133" author="jdcryans" created="Thu, 25 Feb 2010 01:26:02 +0000"  >&lt;p&gt;Second patch committed to branch and trunk.&lt;/p&gt;</comment>
                            <comment id="12838644" author="jdcryans" created="Fri, 26 Feb 2010 00:56:45 +0000"  >&lt;p&gt;Further testing shows that my patch in fact introduced a bug that was keeping the leases opened for a long time. Reopening to see if we can dig deeper in Ian&apos;s issue.&lt;/p&gt;</comment>
                            <comment id="12852018" author="jdcryans" created="Wed, 31 Mar 2010 18:23:46 +0000"  >&lt;p&gt;So I&apos;m thinking about taking a new approach to this bug. Since the major problem here is that we need knowledge of any client using a scanner (or anything else lease-related), I think we should add a new AtomicInteger inside Leases.Lease and increment it every time a user renews that lease. When you are down with the lease-related action, you decrease the AtomicInteger. This protects us from any GC pause happening while, for example, a scanner is next&apos;ing 100 rows and gets a 60 secs pause right in the middle.&lt;/p&gt;</comment>
                            <comment id="12852088" author="jdcryans" created="Wed, 31 Mar 2010 20:43:40 +0000"  >&lt;p&gt;Patch that implements my latest idea. The user has the choice of keeping track of the lease usage or not. Passes the tests that currently pass.&lt;/p&gt;</comment>
                            <comment id="12852898" author="hbasebuild" created="Fri, 2 Apr 2010 18:18:29 +0000"  >&lt;p&gt;What if you renewed the lease on entry and on the way out as insurance&lt;br/&gt;
against long-running &apos;next&apos; invocation?  Would that be &apos;cleaner&apos;?&lt;/p&gt;


&lt;p&gt;On Wed, Mar 31, 2010 at 1:45 PM, Jean-Daniel Cryans (JIRA)&lt;/p&gt;</comment>
                            <comment id="12853523" author="jdcryans" created="Mon, 5 Apr 2010 20:08:58 +0000"  >&lt;p&gt;How would it be cleaner?&lt;/p&gt;</comment>
                            <comment id="12853535" author="stack" created="Mon, 5 Apr 2010 20:50:44 +0000"  >&lt;p&gt;No new long that you increment/decrement and keep an account of.&lt;/p&gt;

&lt;p&gt;The method name stays as renewLease rather than talk about increment/decrement (&quot;Why do I have to do increment/decrement on a lease when  all I&apos;m interested in is lease renewal&quot;). &lt;/p&gt;</comment>
                            <comment id="12853743" author="jdcryans" created="Tue, 6 Apr 2010 04:53:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;The method name stays as renewLease rather than talk about increment/decrement (&quot;Why do I have to do increment/decrement on a lease when all I&apos;m interested in is lease renewal&quot;).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The bulk of the issue is about not timing out a lease that someone currently uses, whether there&apos;s a GC or not. To be certain we have acquired the lease during the whole operation, unless we renew the lease after each line, I don&apos;t see how we can insure the same level of safety that my patch offers.&lt;/p&gt;

&lt;p&gt;This patch also allows multiple users to share the lease if it&apos;s needed (hence incrementing/decrementing).&lt;/p&gt;</comment>
                            <comment id="12853754" author="stack" created="Tue, 6 Apr 2010 05:22:58 +0000"  >&lt;p&gt;.bq This patch also allows multiple users to share the lease if it&apos;s needed (hence incrementing/decrementing).&lt;/p&gt;

&lt;p&gt;This seems perverse to me.  When would such a usecase make sense?&lt;/p&gt;

&lt;p&gt;.bq To be certain we have acquired the lease during the whole operation, unless we renew the lease after each line, I don&apos;t see how we can insure the same level of safety that my patch offers.&lt;/p&gt;

&lt;p&gt;Ok.  Makes sense that while the scanner is inside the server, then the lease moves to a different &apos;state&apos;.  My suggestion doesn&apos;t cover case of our timing out because of GC while scanner is a server-side resident. &lt;/p&gt;

&lt;p&gt;Why not remove the lease on entry and then renew it on the way out?  (IMO, the increment/decrement semantic is confusing).&lt;/p&gt;</comment>
                            <comment id="12855063" author="jdcryans" created="Thu, 8 Apr 2010 18:21:54 +0000"  >&lt;p&gt;Let&apos;s punt this to 0.20.5 then&lt;/p&gt;</comment>
                            <comment id="12866849" author="stack" created="Wed, 12 May 2010 23:52:25 +0000"  >&lt;p&gt;Marking these as fixed against 0.21.0 rather than against 0.20.5.&lt;/p&gt;</comment>
                            <comment id="12873226" author="tlipcon" created="Sat, 29 May 2010 02:53:31 +0000"  >&lt;p&gt;What&apos;s the status of this patch in 0.20 branch? It seems it was committed then reverted, but the revert didn&apos;t actually do a full revert (left a new getExpirationTime() method in there). We&apos;re seeing the issue on 0.20.4. Does anyone have thoughts on a good fix?&lt;/p&gt;</comment>
                            <comment id="12873307" author="jdcryans" created="Sat, 29 May 2010 17:03:27 +0000"  >&lt;p&gt;The first patch was committed, the second reverted (maybe I forgot something in there tho). &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2503&quot; title=&quot;PriorityQueue isn&amp;#39;t thread safe, KeyValueHeap uses it that way&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2503&quot;&gt;&lt;del&gt;HBASE-2503&lt;/del&gt;&lt;/a&gt; plays around the same part of the code, and I&apos;m pretty sure it fixes the NPE but I can&apos;t tell for sure since to trip on it you need a heavily GCing region server.&lt;/p&gt;

&lt;p&gt;So it should be fixed in 0.20.5, it would be awesome if you can confirm.&lt;/p&gt;</comment>
                            <comment id="12918218" author="ryanobjc" created="Tue, 5 Oct 2010 21:35:53 +0000"  >&lt;p&gt;core issue: no concurrency control between next() calls and lease timeouts.  While nice to have, this is a corner case and can&apos;t hold up 0.90&lt;/p&gt;</comment>
                            <comment id="13037085" author="stack" created="Fri, 20 May 2011 20:57:34 +0000"  >&lt;p&gt;Here is a suggestion where we remove lease from leases while we are processing a request then on the way out in a finally we renew lease.&lt;/p&gt;</comment>
                            <comment id="13037260" author="stack" created="Sat, 21 May 2011 04:27:41 +0000"  >&lt;p&gt;Ahemm.. this is a version that actually works (TestFromClientSide is a good test for this change).&lt;/p&gt;</comment>
                            <comment id="13052816" author="jdcryans" created="Tue, 21 Jun 2011 20:40:18 +0000"  >&lt;p&gt;+1 on latest patch, I like it.&lt;/p&gt;</comment>
                            <comment id="13052826" author="stack" created="Tue, 21 Jun 2011 20:58:12 +0000"  >&lt;p&gt;Applied 2077-v4.txt to branch and trunk as a &apos;part2&apos; on this issue.  I&apos;m now closing this since its gone all over the place.  We&apos;ve not seen Sam&apos;s original issue in a while and it&apos;ll look different in current codebase; lets open new issue then.&lt;/p&gt;</comment>
                            <comment id="13052831" author="jdcryans" created="Tue, 21 Jun 2011 21:02:32 +0000"  >&lt;p&gt;Yeah the NPEs are gone for me but I was still able to easily get myself into a situation that triggered expired leases by just scanning a table. This patch will solve that nicely.&lt;/p&gt;</comment>
                            <comment id="13056854" author="hudson" created="Tue, 28 Jun 2011 22:42:50 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1995 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/1995/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/1995/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="13081881" author="tlipcon" created="Tue, 9 Aug 2011 20:07:39 +0000"  >&lt;p&gt;This is long since committed, but just a request:&lt;/p&gt;

&lt;p&gt;In the future could we open separate JIRAs rather than doing a &quot;part 2&quot; when the commits are more than a day apart? It&apos;s very difficult to figure out what went on in the history of this JIRA, since it was committed for 0.20 in Dec &apos;09, briefly amended in Feb &apos;10, amendation partially reverted the next day, and then another change in Jun &apos;11 for 0.90.4 to solve an entirely different bug than the description indicates. This makes it very difficult to support past branches or maintain distributions, since it appears this was fixed long ago but in fact 0.90.3 lacks a major part of the JIRA.&lt;/p&gt;</comment>
                            <comment id="13081898" author="stack" created="Tue, 9 Aug 2011 20:35:16 +0000"  >&lt;p&gt;Sorry Todd.  Will be better going forward.&lt;/p&gt;</comment>
                            <comment id="15017881" author="lars_francke" created="Fri, 20 Nov 2015 13:01:44 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12463371">HBASE-2503</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="13008831">HBASE-16737</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12479956" name="2077-suggestion.txt" size="3712" author="stack" created="Fri, 20 May 2011 20:57:34 +0000"/>
                            <attachment id="12479982" name="2077-v4.txt" size="6396" author="stack" created="Sat, 21 May 2011 04:27:41 +0000"/>
                            <attachment id="12440402" name="HBASE-2077-3.patch" size="5131" author="jdcryans" created="Wed, 31 Mar 2010 20:43:40 +0000"/>
                            <attachment id="12436666" name="HBASE-2077-redux.patch" size="1645" author="jdcryans" created="Tue, 23 Feb 2010 02:46:44 +0000"/>
                            <attachment id="12429123" name="[Bug_HBASE-2077]_Fixes_a_very_rare_race_condition_between_lease_expiration_and_renewal.patch" size="1038" author="spullara" created="Wed, 30 Dec 2009 07:17:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 30 Dec 2009 07:40:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26134</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hgcn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99911</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Removes lease from lease monitor while operation is running inside the server.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>