<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:09:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9980/HBASE-9980.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9980] [0.94] Wire compatibility test for 0.94</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9980</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9834&quot; title=&quot;Minimize byte[] copies for &amp;#39;smart&amp;#39; clients&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9834&quot;&gt;&lt;del&gt;HBASE-9834&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We should have a test that:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;generates a file with all kinds of objects serialized into it. Save that file as part of the HBase tests&lt;/li&gt;
	&lt;li&gt;a test can then read the objects back from that file&lt;/li&gt;
	&lt;li&gt;a test can regenerate that file&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;If both tests pass we can be reasonably sure that neither readFields nor write was changed in an incompatible way.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12679538">HBASE-9980</key>
            <summary>[0.94] Wire compatibility test for 0.94</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Sat, 16 Nov 2013 01:16:22 +0000</created>
                <updated>Mon, 2 Jun 2014 22:42:34 +0000</updated>
                            <resolved>Mon, 2 Jun 2014 22:42:34 +0000</resolved>
                                    <version>0.94.13</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13824389" author="lhofhansl" created="Sat, 16 Nov 2013 04:25:23 +0000"  >&lt;p&gt;Could get a list of serializable objects from HBaseObjectWritable, take those that are assignable from Writable.&lt;br/&gt;
Then make instances of those (which is the tricky part) and write them to the gold file.&lt;/p&gt;</comment>
                            <comment id="13824651" author="apurtell" created="Sat, 16 Nov 2013 22:05:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;Then make instances of those (which is the tricky part)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When executed as a Junit test, the test would assert if there isn&apos;t coverage in the gold file and if something fails to operate correctly.&lt;/p&gt;

&lt;p&gt;Would also have a Main for creating a new gold file. There would be generators for the writable types, and the utility would abort and fail if there is no generator coverage from something discovered from HBaseObjectWritable.&lt;/p&gt;
</comment>
                            <comment id="13828494" author="aleksshulman" created="Thu, 21 Nov 2013 04:57:44 +0000"  >&lt;p&gt;Great this is getting attention &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt; those that are assignable from Writable.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you elaborate on what exactly you mean by this. Can you also give a couple examples of objects that are and are not?&lt;/p&gt;</comment>
                            <comment id="13828538" author="lhofhansl" created="Thu, 21 Nov 2013 06:38:42 +0000"  >&lt;p&gt;Hey Alex,&lt;/p&gt;

&lt;p&gt;we serialize a bunch of stuff over the network (Lists, arrays, etc). The only ones that we implement (in 0.94) are all the implementations of Writable we use. HBaseObjectWritable lists (most) of them, so we can get a good list of objects from there.&lt;br/&gt;
Put/Delete/Append/etc implement Writable for example. In order to save time here, we can only just hardcode the most important ones, that would also make their creation a bit easier (we do not need to write a generator for everything, yet).&lt;/p&gt;</comment>
                            <comment id="13829183" author="apurtell" created="Thu, 21 Nov 2013 18:21:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;we can only just hardcode the most important ones, that would also make their creation a bit easier&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, some of the initial set of generators will likely be stubs that use the null-ary constructor. I would like to automate the coverage test: We use for (Class&amp;lt;?&amp;gt;c : HObjectWritable.CODE_TO_CLASS.values()) { if (c.isAssignableFrom(Writable.class)) &lt;/p&gt;
{ ... }
&lt;p&gt; } to discover the list of interesting objects, and check that we have them covered in the gold file. If generating, we check that we have generators for all. Thinking to use an annotation on generators so the list of them can be collected at runtime. Then fill in the generators for the interesting types.&lt;/p&gt;</comment>
                            <comment id="13829353" author="aleksshulman" created="Thu, 21 Nov 2013 21:05:52 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=andrew.purtell%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;andrew.purtell@gmail.com&quot;&gt;Andrew Purtell&lt;/a&gt; for the explanation. Makes sense.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 16 Nov 2013 22:05:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>358898</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1pvaf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>359188</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>