<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:41:36 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13275/HBASE-13275.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13275] Setting hbase.security.authorization to false does not disable authorization</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13275</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;According to the docs provided by Cloudera (we&apos;re not running Cloudera, BTW), this is the list of configs to enable authorization in HBase:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;property&amp;gt;
     &amp;lt;name&amp;gt;hbase.security.authorization&amp;lt;/name&amp;gt;
     &amp;lt;value&amp;gt;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
     &amp;lt;name&amp;gt;hbase.coprocessor.master.classes&amp;lt;/name&amp;gt;
     &amp;lt;value&amp;gt;org.apache.hadoop.hbase.security.access.AccessController&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
     &amp;lt;name&amp;gt;hbase.coprocessor.region.classes&amp;lt;/name&amp;gt;
     &amp;lt;value&amp;gt;org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.AccessController&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We wanted to then disable authorization but simply setting hbase.security.authorization to false did not disable the authorization&lt;/p&gt;</description>
                <environment></environment>
        <key id="12782999">HBASE-13275</key>
            <summary>Setting hbase.security.authorization to false does not disable authorization</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="apurtell">Andrew Purtell</assignee>
                                    <reporter username="wattsinabox">William Watson</reporter>
                        <labels>
                    </labels>
                <created>Wed, 18 Mar 2015 19:36:46 +0000</created>
                <updated>Tue, 22 Dec 2015 06:34:31 +0000</updated>
                            <resolved>Fri, 10 Apr 2015 05:09:02 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.0.1</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                    <fixVersion>0.98.12</fixVersion>
                                    <component>security</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>16</watches>
                                                                                                            <comments>
                            <comment id="14367763" author="mbertozzi" created="Wed, 18 Mar 2015 19:48:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=misty&quot; class=&quot;user-hover&quot; rel=&quot;misty&quot;&gt;Misty Stanley-Jones&lt;/a&gt; looks like we have that &quot;hbase.security.authorization&quot; in the docs, but code side doesn&apos;t seems to be used anywhere. so for now, I&apos;d say just remove it from the doc until we implement that. (src/main/asciidoc/_chapters/security.adoc)&lt;/p&gt;</comment>
                            <comment id="14368232" author="apurtell" created="Thu, 19 Mar 2015 00:36:38 +0000"  >&lt;p&gt;How about a quick patch to the AccessController to respect that configuration setting? I can whip up something in a few minutes.&lt;/p&gt;</comment>
                            <comment id="14368238" author="apurtell" created="Thu, 19 Mar 2015 00:39:02 +0000"  >&lt;p&gt;We&apos;ll need a companion change in the VisibilityController too.&lt;/p&gt;

&lt;p&gt;The presence or absence of the coprocessors in the system or table coprocessor list has been serving as the authorization toggle.&lt;/p&gt;

&lt;p&gt;I suppose an argument against any fix beyond documentation is there is no utility of having the coprocessors installed but inactive. &lt;/p&gt;</comment>
                            <comment id="14368340" author="wattsinabox" created="Thu, 19 Mar 2015 01:55:33 +0000"  >&lt;p&gt;Thanks a bunch, in advance, for creating the patch. I was going to say that since Ambari already has this config in the UI, it might be best to actually make it do something rather than just removing it from the docs. &lt;/p&gt;</comment>
                            <comment id="14368474" author="misty" created="Thu, 19 Mar 2015 04:02:15 +0000"  >&lt;p&gt;So am I removing it or are you adding the functionality, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=andrew.purtell%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;andrew.purtell@gmail.com&quot;&gt;Andrew Purtell&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14368504" author="apurtell" created="Thu, 19 Mar 2015 04:44:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;are you adding the functionality&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ve left it up for discussion at the moment &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=misty&quot; class=&quot;user-hover&quot; rel=&quot;misty&quot;&gt;Misty Stanley-Jones&lt;/a&gt; . I&apos;m leaning toward having the coprocessors recognize when &quot;hbase.security.authorization&quot; is not present.&lt;/p&gt;</comment>
                            <comment id="14368508" author="apurtell" created="Thu, 19 Mar 2015 04:50:53 +0000"  >&lt;p&gt;Any thoughts on the compatibility ramifications. One can argue this is a bug, we should have been respecting this setting. Can also argue changing this is a functional change, if for some reason someone hasn&apos;t read the docs and whipped up a config that installs the coprocessors but doesn&apos;t toggle &apos;hbase.security.authorization&apos; on. Thoughts or concerns?&lt;/p&gt;

&lt;p&gt;/cc &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14368555" author="lhofhansl" created="Thu, 19 Mar 2015 05:54:44 +0000"  >&lt;p&gt;Hmm... If we want the minimum disruption we could honor the flag now, but default it do true. Would that work?&lt;/p&gt;</comment>
                            <comment id="14368587" author="stack" created="Thu, 19 Mar 2015 06:27:21 +0000"  >&lt;p&gt;Backfilling is elegant soln. Yeah, do you have to set it true by default as per Lars?&lt;/p&gt;</comment>
                            <comment id="14369289" author="wattsinabox" created="Thu, 19 Mar 2015 13:05:43 +0000"  >&lt;p&gt;I thought the docs said it defaults to false...&lt;/p&gt;</comment>
                            <comment id="14369290" author="wattsinabox" created="Thu, 19 Mar 2015 13:05:53 +0000"  >&lt;p&gt;or to not being set at all&lt;/p&gt;</comment>
                            <comment id="14369913" author="lhofhansl" created="Thu, 19 Mar 2015 19:01:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;I thought the docs said it defaults to false...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Then the doc is currently wrong. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14369919" author="wattsinabox" created="Thu, 19 Mar 2015 19:04:10 +0000"  >&lt;p&gt;Carry on. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14369938" author="apurtell" created="Thu, 19 Mar 2015 19:12:38 +0000"  >&lt;p&gt;Ok, I think we&apos;re set. I will add logic to the authorization coprocessors that respect this setting and default it to true there if the config is missing. &lt;/p&gt;</comment>
                            <comment id="14370846" author="enis" created="Fri, 20 Mar 2015 06:36:16 +0000"  >&lt;p&gt;If we can default this to true, I think it is fine for 1.0 and 0.98. If the user does not set this and was instead using only the coprocessor, doing a patch update should not suddenly cause a security gap.  &lt;/p&gt;</comment>
                            <comment id="14371284" author="wattsinabox" created="Fri, 20 Mar 2015 13:40:44 +0000"  >&lt;p&gt;Should we make a new ticket for Ambari or will they update their docs when the hbase docs are updated?&lt;/p&gt;</comment>
                            <comment id="14372085" author="enis" created="Fri, 20 Mar 2015 20:56:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should we make a new ticket for Ambari or will they update their docs when the hbase docs are updated?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think the plan is to fix the code to respect that config rather than remove documentation. &lt;/p&gt;</comment>
                            <comment id="14372449" author="apurtell" created="Sat, 21 Mar 2015 02:10:17 +0000"  >&lt;p&gt;Patch for master.&lt;/p&gt;

&lt;p&gt;Grep for &apos;authorizationEnabled&apos; to catch where all the changes have been made.&lt;/p&gt;

&lt;p&gt;The idea is if the coprocessors are loaded but authorization is disabled, then we enter a passive mode where we maintain state, allow administrative actions (without authorization checks), carry forward cell tags, etc. I figure although it&apos;s weird if the coprocessors are loaded but authorization is disabled, there can be a use case for this. For example, the AccessController can be installed in a passive mode, the admin can issue grants, the application can store with ACL operation attrs and these will get carried through into KeyValues, users/applications can test permissions with the check permissions API*, etc. and at some point the cluster admin can toggle the &quot;hbase.security.authorization&quot; switch to &apos;true&apos; and permissions will be enforced for real. &lt;/p&gt;

&lt;p&gt;Disabling authorization also has the side effect of disabling auditing, except where users invoke the service APIs, like AC grant or revoke, or VC label add or assignment. I could look at leaving audit enabled but this would touch a lot more lines of code. &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;- Checking permissions will only work on ACL grants above the cell level, because these changes bypass all filtering by cell ACLs or visibility labels. I&apos;m not sure how one would be passive and return all results yet also return indication where cells should have been filtered out. That&apos;s going too far with it, I think.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14372507" author="hadoopqa" created="Sat, 21 Mar 2015 04:30:44 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12706110/HBASE-13275.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12706110/HBASE-13275.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 8dfed5dc88f1c8008345b22e99224cb945fd0941.&lt;br/&gt;
  ATTACHMENT ID: 12706110&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1920 checkstyle errors (more than the master&apos;s current 1918 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +          throw new AccessDeniedException(&quot;Insufficient permissions &quot; + authResult.toContextString());&lt;br/&gt;
+          throw new AccessDeniedException(&quot;Insufficient permissions &quot; + authResult.toContextString());&lt;br/&gt;
+          throw new AccessDeniedException(&quot;Insufficient permissions &quot; + authResult.toContextString());&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13345//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14376793" author="apurtell" created="Mon, 23 Mar 2015 22:33:22 +0000"  >&lt;p&gt;I will fix the line lengths.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Disabling authorization also has the side effect of disabling auditing, except where users invoke the service APIs, like AC grant or revoke, or VC label add or assignment. I could look at leaving audit enabled but this would touch a lot more lines of code.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;While going back to fix line length issues I will also see about having audit messages print for all actions even when authorization is disabled. You&apos;ll be able to see the difference by comparing the two patches. Might be acceptable. &lt;/p&gt;</comment>
                            <comment id="14377030" author="jinghe" created="Tue, 24 Mar 2015 01:02:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;The idea is if the coprocessors are loaded but authorization is disabled, then we enter a passive mode where we maintain state, allow administrative actions (without authorization checks), carry forward cell tags, etc. I figure although it&apos;s weird if the coprocessors are loaded but authorization is disabled, there can be a use case for this. For example, the AccessController can be installed in a passive mode, the admin can issue grants, &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Trying to understand the above statement.  In this passive mode, anybody besides admin can grant permissions to themselves and others since there is no authorization checks, and permissions will remain after TURN ON?&lt;/p&gt;</comment>
                            <comment id="14378336" author="srikanth235" created="Tue, 24 Mar 2015 18:30:29 +0000"  >&lt;p&gt;Just a thought. In case, if we&apos;re planning to allow some operations to happen if flag is set to false, can we subclass the existing AccessController and move the flag checking code and these operations which will be allowed over there. The argument against this will be the developers now need to add methods to two new classes whenever they are creating new pre-hooks for access checks.&lt;/p&gt;</comment>
                            <comment id="14378437" author="srikanth235" created="Tue, 24 Mar 2015 19:38:58 +0000"  >&lt;p&gt;Also, curious how hard would it be to  make changes such that when &quot;hbase.security.authorization&quot; is set to true, the coprocessors for AC gets  loaded automatically, even if they aren&apos;t explicitly specified. IMHO, it would be great to have a single knob for enabling/disabling security.&lt;/p&gt;</comment>
                            <comment id="14381173" author="apurtell" created="Thu, 26 Mar 2015 01:18:32 +0000"  >&lt;p&gt;You&apos;ll probably like this patch a lot better. We do more work when installed, but maintain audit logging, we simply don&apos;t throw AccessDeniedExceptions. We also don&apos;t wrap scanners, although the audit log will still indicate access would be allowed with a filter. &lt;/p&gt;

&lt;p&gt;Ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; and/or &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ramkrishna.s.vasudevan%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;ramkrishna.s.vasudevan@gmail.com&quot;&gt;ramkrishna vasudevan&lt;/a&gt; for a check of the VC changes if you have a moment.&lt;/p&gt;

&lt;p&gt;When looking at the code I noticed the AccessController and VisibilityController do different things regarding protecting their meta tables. The rule, in my opinion, should be alterations to schema and disabling should be disallowed except by the superuser, but I&apos;ll file another issue to tackle that separately. Bad things will happen if these meta tables are damaged, disabled, or dropped. The AC allows it if the user has permission. The VC unconditionally disallows it.&lt;/p&gt;</comment>
                            <comment id="14381176" author="apurtell" created="Thu, 26 Mar 2015 01:20:27 +0000"  >&lt;p&gt;If you want to work up a patch for that, I&apos;ll review it, but adding a boolean and checking it produces low impact changes both in terms of code and perf I think, so I&apos;ll stick with that.&lt;/p&gt;</comment>
                            <comment id="14381194" author="apurtell" created="Thu, 26 Mar 2015 01:37:06 +0000"  >&lt;p&gt;Yes. I&apos;m thinking of a limited pilot where you can see the results of grants on access control in audit logging (of course, this needs that to be functional, see the latest patch). This allows dry runs where admins/apps can set up ACLs and see what happens without mistakes causing outages. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;permissions will remain after TURN ON?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Of course you&apos;ll want to drop the ACL table before starting over with active enforcement, issuing necessary grants again.&lt;/p&gt;

&lt;p&gt;Regarding cell ACLs, ACL tags can be submitted directly by the client via cells with tags unless the AC is installed. It&apos;s no different if the AC is passive. Either way when you set up for enforcement you&apos;ll want to wipe the data and start new. Or, if this is a case where an insecure application is being migrated to a secure environment (with or without a passive trial) then we&apos;d already need a migration tool that sanitizes pre-existing data. &lt;/p&gt;</comment>
                            <comment id="14383673" author="anoop.hbase" created="Fri, 27 Mar 2015 11:18:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;Of course you&apos;ll want to drop the ACL table before starting over with active enforcement, issuing necessary grants again.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;So what will be the real adv of we allow the admin ops in passive mode? Am I missing any thing?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Regarding cell ACLs, ACL tags can be submitted directly by the client via cells with tags unless the AC is installed. It&apos;s no different if the AC is passive. Either way when you set up for enforcement you&apos;ll want to wipe the data and start new. Or, if this is a case where an insecure application is being migrated to a secure environment (with or without a passive trial) then we&apos;d already need a migration tool that sanitizes pre-existing data.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;One correction Andy..  It is not possible for the client to pass the cell acl (and vis labels) directly within Cell. That should not be allowed in future also IMO. Right now any way we dont allow passing Tags from client to server (Unless user is a super user)&lt;/p&gt;</comment>
                            <comment id="14384229" author="apurtell" created="Fri, 27 Mar 2015 17:47:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;So what will be the real adv of we allow the admin ops in passive mode? Am I missing any thing?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I personally wouldn&apos;t install the security coprocessors if I didn&apos;t want them active, because of the performance hit, but stepped back and considered if there&apos;s any use for it. Certainly you can imagine &quot;try before you buy&quot; pilots, where ACLs are put in place and there are reviews of the audit logs to determine if policy is working as expected, yet never any unexpected application outage from incorrect policy.&lt;/p&gt;

&lt;p&gt;Turn this question around. What if we just disabled everything with &apos;hbase.security.authorization&apos;=false, even audit logging and the ability to set up test grants. Then the coprocessor is just dead weight. At least here there is the possibility of some usefulness. &lt;/p&gt;

&lt;p&gt;Either disabling &lt;em&gt;everything&lt;/em&gt; or the &quot;passive mode&quot; I suggest will meet the objective of this issue which is &apos;setting hbase.security.authorization to false does not disable authorization&apos;, we will fix that so setting hbase.security.authorization to false does disable authorization. Why not do the option which also may provide users some utility? &lt;/p&gt;

&lt;p&gt;If you are still not swayed by this argument, I don&apos;t care that much, we can just disable everything.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Right now any way we dont allow passing Tags from client to server (Unless user is a super user)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I pass cell TTLs through in KeyValues in some HRegion tests, but I see I&apos;m using the region object directly, so was confused about this. But all that prevents this is the codec implementation, right? &lt;/p&gt;</comment>
                            <comment id="14385090" author="jinghe" created="Sat, 28 Mar 2015 03:30:16 +0000"  >&lt;p&gt;The reasoning and arguments are good. &lt;/p&gt;

&lt;p&gt;Looked through the latest patch (not thorough review).&lt;br/&gt;
In the VisibilityController, should these be unconditional too?&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;   @Override
   public void preModifyTable(ObserverContext&amp;lt;MasterCoprocessorEnvironment&amp;gt; ctx,
       TableName tableName, HTableDescriptor htd) throws IOException {
+    if (!authorizationEnabled) {
+      return;
+    }
     if (LABELS_TABLE_NAME.equals(tableName)) {
       throw new ConstraintException(&quot;Cannot alter &quot; + LABELS_TABLE_NAME);
     }
@@ -208,6 +221,9 @@ public class VisibilityController extends BaseMasterAndRegionObserver implements
   @Override
   public void preAddColumn(ObserverContext&amp;lt;MasterCoprocessorEnvironment&amp;gt; ctx, TableName tableName,
       HColumnDescriptor column) throws IOException {
+    if (!authorizationEnabled) {
+      return;
+    }
     if (LABELS_TABLE_NAME.equals(tableName)) {
       throw new ConstraintException(&quot;Cannot alter &quot; + LABELS_TABLE_NAME);
     }
@@ -216,6 +232,9 @@ public class VisibilityController extends BaseMasterAndRegionObserver implements
   @Override
   public void preModifyColumn(ObserverContext&amp;lt;MasterCoprocessorEnvironment&amp;gt; ctx,
       TableName tableName, HColumnDescriptor descriptor) throws IOException {
+    if (!authorizationEnabled) {
+      return;
+    }
     if (LABELS_TABLE_NAME.equals(tableName)) {
       throw new ConstraintException(&quot;Cannot alter &quot; + LABELS_TABLE_NAME);
     }
@@ -224,6 +243,9 @@ public class VisibilityController extends BaseMasterAndRegionObserver implements
   @Override
   public void preDeleteColumn(ObserverContext&amp;lt;MasterCoprocessorEnvironment&amp;gt; ctx,
       TableName tableName, byte[] c) throws IOException {
+    if (!authorizationEnabled) {
+      return;
+    }
     if (LABELS_TABLE_NAME.equals(tableName)) {
       throw new ConstraintException(&quot;Cannot alter &quot; + LABELS_TABLE_NAME);
     }
@@ -232,6 +254,9 @@ public class VisibilityController extends BaseMasterAndRegionObserver implements
   @Override
   public void preDisableTable(ObserverContext&amp;lt;MasterCoprocessorEnvironment&amp;gt; ctx, TableName tableName)
       throws IOException {
+    if (!authorizationEnabled) {
+      return;
+    }
     if (LABELS_TABLE_NAME.equals(tableName)) {
       throw new ConstraintException(&quot;Cannot disable &quot; + LABELS_TABLE_NAME);
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14387672" author="apurtell" created="Tue, 31 Mar 2015 00:15:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;In the VisibilityController, should these be unconditional too?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When making up the previous patch I left it as &quot;YMMV if you mess with the label table without understanding what you are doing&quot;, and this seems right because refusing any operation is not being passive. Agreed the VC is unlikely to function if something unexpected happens to the labels table that otherwise would have been prevented. Any concerns leaving as is?&lt;/p&gt;</comment>
                            <comment id="14391100" author="apurtell" created="Wed, 1 Apr 2015 18:01:45 +0000"  >&lt;p&gt;I&apos;m going to commit this tonight assuming a trial of a &quot;passive&quot; deployment with the changes in place looks good. Let me know if you have any concerns or objections.&lt;/p&gt;</comment>
                            <comment id="14391856" author="srikanth235" created="Thu, 2 Apr 2015 00:28:48 +0000"  >&lt;p&gt;Liking the patch. I tried looking at the other products like cassandra, accumulo whether they have any passive mode, but couldn&apos;t find any. This provision is definitely sophisticated. It would be great if we can document the behavior of this param thoroughly. Also, it would be good if we can create a separate jira for adding a unit test (or may be we can add it here too, your call). &lt;/p&gt;</comment>
                            <comment id="14391883" author="apurtell" created="Thu, 2 Apr 2015 00:52:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;Also, it would be good if we can create a separate jira for adding a unit test (or may be we can add it here too, your call).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was planning to raise this in a new issue. We can discuss it here though. How comprehensive should those tests be? We could basically duplicate TestAccessController and TestAccessController2 but with all checks changed to confirm passive behavior. That&apos;s a lot more units and test execution time!&lt;/p&gt;

&lt;p&gt;Not planning to commit now, until more discussion.&lt;/p&gt;</comment>
                            <comment id="14392928" author="apurtell" created="Thu, 2 Apr 2015 16:43:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;We could basically duplicate TestAccessController and TestAccessController2 but with all checks changed to confirm passive behavior. That&apos;s a lot more units and test execution time!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How about we clone a new test from TestAccessController with a reduced collection of units? We&apos;d verify that grant, revoke, and check permission APIs work normally, but all users are allowed through various region operations. &lt;/p&gt;

&lt;p&gt;What&apos;s your preference on unit testing this change &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=srikanth235&quot; class=&quot;user-hover&quot; rel=&quot;srikanth235&quot;&gt;Srikanth Srungarapu&lt;/a&gt; ?&lt;/p&gt;</comment>
                            <comment id="14393325" author="srikanth235" created="Thu, 2 Apr 2015 20:30:18 +0000"  >&lt;p&gt;Yeah, min version of TestAccessController sounds the right way to go. &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;We just need to pick some representative operations from &lt;a href=&quot;http://hbase.apache.org/book.html#_permissions&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;ACL matrix&lt;/a&gt; like createTable, put, get etc and add coverage for them.&lt;/li&gt;
	&lt;li&gt;And then as already mentioned grant, revoke and check permissions to verify that acl table is getting updated.&lt;/li&gt;
	&lt;li&gt;Also, couple tests for acl tags too..&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Basically, what I would like for is whether all &lt;b&gt;distinct&lt;/b&gt; code paths are being covered.&lt;/p&gt;</comment>
                            <comment id="14393372" author="apurtell" created="Thu, 2 Apr 2015 20:53:34 +0000"  >&lt;p&gt;Alright, I&apos;ll work on the above.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also, couple tests for acl tags too..&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We don&apos;t install filters when &quot;passive&quot; so to be clear the tests can only check they are ignored.&lt;/p&gt;</comment>
                            <comment id="14393387" author="srikanth235" created="Thu, 2 Apr 2015 21:00:03 +0000"  >&lt;p&gt;Thanks.. Yeah, we just need to check that they are being ignored&lt;/p&gt;</comment>
                            <comment id="14395411" author="apurtell" created="Sat, 4 Apr 2015 00:41:46 +0000"  >&lt;p&gt;Parking a WIP patch with AccessController unit tests as discussed. Not tested. I&apos;ll get back to this soon. Needs VisibilityController tests, just enough to see that the label API still works even when passive. &lt;/p&gt;</comment>
                            <comment id="14395569" author="srikanth235" created="Sat, 4 Apr 2015 06:06:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=wattsinabox&quot; class=&quot;user-hover&quot; rel=&quot;wattsinabox&quot;&gt;William Watson&lt;/a&gt; We&apos;re assuming that you are okay with the passive model. Please let us know if you have any concerns.&lt;/p&gt;</comment>
                            <comment id="14480899" author="apurtell" created="Mon, 6 Apr 2015 03:32:15 +0000"  >&lt;p&gt;Patch with tests&lt;/p&gt;</comment>
                            <comment id="14480929" author="hadoopqa" created="Mon, 6 Apr 2015 04:40:38 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723286/HBASE-13275.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723286/HBASE-13275.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 057499474c346b28ad5ac3ab7da420814eba547d.&lt;br/&gt;
  ATTACHMENT ID: 12723286&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestCheckTestClasses&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13568//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13568//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13568//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13568//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13568//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13568//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13568//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13568//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14480932" author="hadoopqa" created="Mon, 6 Apr 2015 04:50:46 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723288/HBASE-13275.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723288/HBASE-13275.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 057499474c346b28ad5ac3ab7da420814eba547d.&lt;br/&gt;
  ATTACHMENT ID: 12723288&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestCheckTestClasses&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13569//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13569//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13569//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13569//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13569//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13569//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13569//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13569//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14480945" author="apurtell" created="Mon, 6 Apr 2015 05:28:03 +0000"  >&lt;p&gt;Patches that fix TestCheckTestClasses (at least my contribution to the problem)&lt;/p&gt;</comment>
                            <comment id="14480948" author="hadoopqa" created="Mon, 6 Apr 2015 05:34:50 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723292/HBASE-13275-branch-1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723292/HBASE-13275-branch-1.patch&lt;/a&gt;&lt;br/&gt;
  against branch-1 branch at commit 057499474c346b28ad5ac3ab7da420814eba547d.&lt;br/&gt;
  ATTACHMENT ID: 12723292&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 19 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestCheckTestClasses&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13570//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13570//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13570//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13570//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13570//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13570//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13570//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13570//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14480953" author="hadoopqa" created="Mon, 6 Apr 2015 05:38:31 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723297/HBASE-13275-0.98.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723297/HBASE-13275-0.98.patch&lt;/a&gt;&lt;br/&gt;
  against 0.98 branch at commit 057499474c346b28ad5ac3ab7da420814eba547d.&lt;br/&gt;
  ATTACHMENT ID: 12723297&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 20 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The patch appears to cause mvn compile goal to fail with Hadoop version 2.4.1.&lt;/p&gt;

&lt;p&gt;    Compilation errors resume:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; COMPILATION ERROR : &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/test/java/org/apache/hadoop/hbase/security/visibility/TestWithDisabledAuthorization.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;49,1&amp;#93;&lt;/span&gt; error: cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:testCompile (default-testCompile) on project hbase-server: Compilation failure&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/test/java/org/apache/hadoop/hbase/security/visibility/TestWithDisabledAuthorization.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;49,1&amp;#93;&lt;/span&gt; error: cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; To see the full stack trace of the errors, re-run Maven with the -e switch.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Re-run Maven using the -X switch to enable full debug logging.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; For more information about the errors and possible solutions, please read the following articles:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; After correcting the problems, you can resume the build with the command&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt;   mvn &amp;lt;goals&amp;gt; -rf :hbase-server&lt;/p&gt;


&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13571//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13571//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14481487" author="apurtell" created="Mon, 6 Apr 2015 17:45:02 +0000"  >&lt;p&gt;Here&apos;s a rebased 0.98 patch that will fix the compilation issue.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;org.apache.hadoop.hbase.TestCheckTestClasses&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Any further failures of this are not related to my patch, see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13409&quot; title=&quot;Add categories to uncategorized tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13409&quot;&gt;&lt;del&gt;HBASE-13409&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14481885" author="hadoopqa" created="Mon, 6 Apr 2015 20:35:37 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723399/HBASE-13275-0.98.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723399/HBASE-13275-0.98.patch&lt;/a&gt;&lt;br/&gt;
  against 0.98 branch at commit 057499474c346b28ad5ac3ab7da420814eba547d.&lt;br/&gt;
  ATTACHMENT ID: 12723399&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 20 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 26 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13585//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13585//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13585//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13585//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13585//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13585//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13585//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13585//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13585//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13585//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14482268" author="apurtell" created="Tue, 7 Apr 2015 00:18:25 +0000"  >&lt;p&gt;Ok, that&apos;s better.&lt;/p&gt;

&lt;p&gt;What say ye &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=srikanth235&quot; class=&quot;user-hover&quot; rel=&quot;srikanth235&quot;&gt;Srikanth Srungarapu&lt;/a&gt; ? &lt;br/&gt;
Any comments on the VC changes &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; or &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; ?&lt;/p&gt;</comment>
                            <comment id="14482700" author="anoop.hbase" created="Tue, 7 Apr 2015 06:52:14 +0000"  >&lt;p&gt;When &apos;hbase.security.authorization&apos; is true, do we have the auto loading of AC/VC  observers? I could not see any such code in trunk.&lt;/p&gt;</comment>
                            <comment id="14482769" author="srikanth235" created="Tue, 7 Apr 2015 07:55:06 +0000"  >&lt;p&gt;AC related changes looks great to me. Most of the the calls have test coverage now.&lt;br/&gt;
Minor nit: Use try-with-resources here?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        Table t = connection.getTable(TEST_TABLE.getTableName());
+        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+          ResultScanner scanner = t.getScanner(scan);
+          Result result = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
+          &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; {
+            result = scanner.next();
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (result != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+              scanResults.addAll(result.listCells());
+            }
+          } &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (result != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
+        } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
+          t.close();
+          connection.close();
+        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14483436" author="apurtell" created="Tue, 7 Apr 2015 16:21:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;When &apos;hbase.security.authorization&apos; is true, do we have the auto loading of AC/VC  observers? I could not see any such code in trunk.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No. That would be out of scope of this issue IMO. If we want to change how &quot;hbase.security.authorization&quot; works regarding auto-loading coprocessors, we need a new issue, and it&apos;s not a backwards compatible change so could only go in 1.1+. &lt;/p&gt;</comment>
                            <comment id="14483438" author="apurtell" created="Tue, 7 Apr 2015 16:22:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;AC related changes looks great to me. Most of the the calls have test coverage now.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for the review. If there are no additional comments I will commit tonight.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Minor nit: Use try-with-resources here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I will fix this on commit (except in the 0.98 patch, where we still need to support Java 6)&lt;/p&gt;</comment>
                            <comment id="14483442" author="anoop.hbase" created="Tue, 7 Apr 2015 16:29:32 +0000"  >&lt;p&gt;Agree. That will be out of scope for this Jira. I thought we already have this facility and for that reason this config is added. That is why confirmed.&lt;/p&gt;</comment>
                            <comment id="14488446" author="apurtell" created="Thu, 9 Apr 2015 22:57:04 +0000"  >&lt;p&gt;Pushed to 0.98 and up&lt;/p&gt;</comment>
                            <comment id="14488670" author="hudson" created="Fri, 10 Apr 2015 00:56:16 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.1 #384 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/384/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/384/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13275&quot; title=&quot;Setting hbase.security.authorization to false does not disable authorization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13275&quot;&gt;&lt;del&gt;HBASE-13275&lt;/del&gt;&lt;/a&gt; Setting hbase.security.authorization to false does not disable authorization (apurtell: rev 356422e1aea8c5fb9b3ba063658c27c682759835)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestWithDisabledAuthorization.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/visibility/TestWithDisabledAuthorization.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/HBaseKerberosUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/security/User.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14488687" author="hudson" created="Fri, 10 Apr 2015 01:04:42 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.0 #857 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/857/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/857/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13275&quot; title=&quot;Setting hbase.security.authorization to false does not disable authorization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13275&quot;&gt;&lt;del&gt;HBASE-13275&lt;/del&gt;&lt;/a&gt; Setting hbase.security.authorization to false does not disable authorization (apurtell: rev bbb5a28dc4a6b02af3257f2cf296aa8f6cee58c9)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/HBaseKerberosUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/security/User.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/visibility/TestWithDisabledAuthorization.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestWithDisabledAuthorization.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14488772" author="hudson" created="Fri, 10 Apr 2015 02:21:27 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #6364 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6364/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6364/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13275&quot; title=&quot;Setting hbase.security.authorization to false does not disable authorization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13275&quot;&gt;&lt;del&gt;HBASE-13275&lt;/del&gt;&lt;/a&gt; Setting hbase.security.authorization to false does not disable authorization (apurtell: rev ed703762aeebfce9855858834a3fa6a4f51a8977)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/HBaseKerberosUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestWithDisabledAuthorization.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/visibility/TestWithDisabledAuthorization.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/security/User.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14488820" author="hudson" created="Fri, 10 Apr 2015 03:15:23 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98 #944 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/944/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/944/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13275&quot; title=&quot;Setting hbase.security.authorization to false does not disable authorization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13275&quot;&gt;&lt;del&gt;HBASE-13275&lt;/del&gt;&lt;/a&gt; Setting hbase.security.authorization to false does not disable authorization (apurtell: rev 69bbf839b67646f6ba0b7a43b85d302e11700a3d)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestWithDisabledAuthorization.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/security/User.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/visibility/TestWithDisabledAuthorization.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/HBaseKerberosUtils.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14488821" author="hudson" created="Fri, 10 Apr 2015 03:15:24 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #897 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/897/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/897/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13275&quot; title=&quot;Setting hbase.security.authorization to false does not disable authorization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13275&quot;&gt;&lt;del&gt;HBASE-13275&lt;/del&gt;&lt;/a&gt; Setting hbase.security.authorization to false does not disable authorization (apurtell: rev 69bbf839b67646f6ba0b7a43b85d302e11700a3d)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityController.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/security/User.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestWithDisabledAuthorization.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/visibility/TestWithDisabledAuthorization.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/HBaseKerberosUtils.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14517716" author="enis" created="Tue, 28 Apr 2015 19:18:21 +0000"  >&lt;p&gt;Closing this issue after 1.0.1 release.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12723399" name="HBASE-13275-0.98.patch" size="116031" author="apurtell" created="Mon, 6 Apr 2015 17:45:02 +0000"/>
                            <attachment id="12723297" name="HBASE-13275-0.98.patch" size="116117" author="apurtell" created="Mon, 6 Apr 2015 05:28:03 +0000"/>
                            <attachment id="12723296" name="HBASE-13275-branch-1.patch" size="115281" author="apurtell" created="Mon, 6 Apr 2015 05:28:03 +0000"/>
                            <attachment id="12723292" name="HBASE-13275-branch-1.patch" size="115228" author="apurtell" created="Mon, 6 Apr 2015 04:25:33 +0000"/>
                            <attachment id="12723295" name="HBASE-13275.patch" size="117673" author="apurtell" created="Mon, 6 Apr 2015 05:28:03 +0000"/>
                            <attachment id="12723288" name="HBASE-13275.patch" size="117438" author="apurtell" created="Mon, 6 Apr 2015 03:48:34 +0000"/>
                            <attachment id="12707394" name="HBASE-13275.patch" size="46702" author="apurtell" created="Thu, 26 Mar 2015 01:18:32 +0000"/>
                            <attachment id="12706110" name="HBASE-13275.patch" size="58050" author="apurtell" created="Sat, 21 Mar 2015 02:10:17 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12787834">HBASE-13390</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 18 Mar 2015 19:48:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 33 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i26xu7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Prior to this change the configuration setting &amp;#39;hbase.security.authorization&amp;#39; had no effect if security coprocessor were installed. The act of installing the security coprocessors was assumed to indicate active authorizaton was desired and required. Now it is possible to install the security coprocessors yet have them operate in a passive state with active authorization disabled by setting &amp;#39;hbase.security.authorization&amp;#39; to false. This can be useful but is probably not what you want. For more information, consult the Security section of the HBase online manual. &lt;br/&gt;
&lt;br/&gt;
&amp;#39;hbase.security.authorization&amp;#39; defaults to true for backwards comptatible behavior.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>