<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:08:11 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3197/HBASE-3197.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3197] Using the same HBaseConfiguration for multiple puts makes some data not to be written</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3197</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I created a DAO object for loading and storing data into HBase. The DAO has a HBaseConfiguration field, created inside the DAO constructor. Each DAO&apos;s method creates a new HTable using the class&apos;s HBaseConfiguration. The problem shows up when subsequent writings (using a put) are invoked, since not all the data is written. Moreover this behaviour is not deterministic: invoking the same writings never writes all the data, but the missing ones change every time.&lt;br/&gt;
I solved this situation removing the class&apos;s HBaseConfiguration and creating a new HBaseConfiguration inside each method.&lt;/p&gt;</description>
                <environment>&lt;p&gt;HBase cluster running on 6 machines (Centos 5.5, Intel Dual Core/core i3, ram 4/8GB)&lt;/p&gt;</environment>
        <key id="12479081">HBASE-3197</key>
            <summary>Using the same HBaseConfiguration for multiple puts makes some data not to be written</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="5">Cannot Reproduce</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="fangi">Francesco Angi</reporter>
                        <labels>
                    </labels>
                <created>Thu, 4 Nov 2010 11:18:45 +0000</created>
                <updated>Wed, 16 Jul 2014 23:15:54 +0000</updated>
                            <resolved>Wed, 16 Jul 2014 23:15:54 +0000</resolved>
                                    <version>0.20.6</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12928292" author="jdcryans" created="Thu, 4 Nov 2010 18:13:39 +0000"  >&lt;p&gt;Thanks for reporting this Francesco, perhaps you could provide a small unit test that shows the issue?&lt;/p&gt;</comment>
                            <comment id="12930561" author="fangi" created="Wed, 10 Nov 2010 09:43:32 +0000"  >&lt;p&gt;Hello and sorry for the late reply. I did some tests trying to reproduce a &quot;small unit test&quot; but that wasn&apos;t that simple. I&apos;ll try to explain. The DAO I developed is part of a server accepting telnet connections and storing the data it computes to HBase. The server is built upon Mina. I wasn&apos;t able to produce a local program that shows the same erroneous behaviour as the server. I tried running a simple for loop, calling the DAO&apos;s saving method and every data were saved correctly. So I tried running multiple threads and everything went ok too.&lt;br/&gt;
Here&apos;s a snippet of the DAO involved:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HBaseDataStorageDAO &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; DataStorageDAO {
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; TSerializer serializer;
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; TDeserializer deserializer;
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; HBaseConfiguration config; 
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; zookeperQuorumList;

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HBaseDataStorageDAO(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; zookeperQuorumList) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; DataStorageException {
        serializer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TSerializer(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TBinaryProtocol.Factory());        
        deserializer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TDeserializer(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TBinaryProtocol.Factory());
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.zookeperQuorumList = zookeperQuorumList; 
        config = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HBaseConfiguration();
        config.set(&lt;span class=&quot;code-quote&quot;&gt;&quot;hbase.zookeeper.quorum&quot;&lt;/span&gt;, zookeeperQuorumList);
    }

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void saveDataInfo(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; dataId, DataInfoWrapper dataInfoWrapper) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; DataStorageException {
        HTable tableData = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            tableData = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HTable(config, &lt;span class=&quot;code-quote&quot;&gt;&quot;dataTable&quot;&lt;/span&gt;);
            Put p = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Put(Bytes.toBytes(dataId));
            p.add(Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;dataInfo&quot;&lt;/span&gt;),  &lt;span class=&quot;code-comment&quot;&gt;// column family 
&lt;/span&gt;                    Bytes.toBytes(&quot;&quot;),  &lt;span class=&quot;code-comment&quot;&gt;// no column id
&lt;/span&gt;                    serializer.serialize(dataInfoWrapper.getDataInfo()));  &lt;span class=&quot;code-comment&quot;&gt;// value
&lt;/span&gt;            tableDatas.put(p);
             
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
            handleException(e);
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (TException e) {
            handleException(e);
        } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (tableData != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
                &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
                    tableData.close();
                } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
                    handleException(e);
                }
        }
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When the server starts it instantiates a HBaseDataStorageDAO, so as you can see every saveDataInfo call shares the same config, serializer and deserializer objects. I suspected that the problem could be the single serializer and deserializer, so I tried instantiating a new TSerializer in every saveDataInfo invocation, not even this solved the problem. As I said in my first post the only solution I found was creating a new HBaseConfiguration for each saveDataInfo invocation, and this is a bit weird, at least in my opinion.&lt;br/&gt;
In conclusion I&apos;m not sure if I posted a &quot;false alarm&quot;, indeed the problem could be related to the underlying architecture of my server.&lt;br/&gt;
Sorry if I wasted your time,&lt;br/&gt;
best regards,&lt;br/&gt;
f.&lt;/p&gt;</comment>
                            <comment id="14064319" author="apurtell" created="Wed, 16 Jul 2014 23:15:54 +0000"  >&lt;p&gt;Reopen or file new issue is still relevant with modern HBase versions&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 4 Nov 2010 18:13:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26704</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 22 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02dov:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11819</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>