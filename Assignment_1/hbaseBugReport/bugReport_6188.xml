<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:34:33 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6188/HBASE-6188.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6188] Remove the concept of table owner</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6188</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The table owner concept was a design simplification in the initial drop.&lt;/p&gt;

&lt;p&gt;First, the design changes under review means only a user with GLOBAL CREATE permission can create a table, which will probably be an administrator.&lt;/p&gt;

&lt;p&gt;Then, granting implicit permissions may lead to oversights and it adds unnecessary conditionals to our code. So instead the administrator with GLOBAL CREATE permission should make the appropriate grants at table create time.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12559684">HBASE-6188</key>
            <summary>Remove the concept of table owner</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12558146">HBASE-6096</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lakshman">Laxman</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                            <label>security</label>
                    </labels>
                <created>Thu, 7 Jun 2012 12:52:55 +0000</created>
                <updated>Tue, 26 Feb 2013 08:15:49 +0000</updated>
                            <resolved>Tue, 19 Jun 2012 02:27:13 +0000</resolved>
                                    <version>0.94.0</version>
                    <version>0.94.1</version>
                    <version>0.95.2</version>
                                    <fixVersion>0.94.1</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                    <component>security</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13291292" author="lakshman" created="Thu, 7 Jun 2012 20:48:14 +0000"  >&lt;p&gt;I think we need to do the following.&lt;/p&gt;

&lt;p&gt;1) In PostCreate - We can grant CRWA permissions to the current user(i.e. owner).&lt;br/&gt;
2) Remove the usage of owner (&#236;n AccessController).&lt;br/&gt;
3) Deprecate (Or remove?) owner related apis in HTableDescriptor.&lt;br/&gt;
4) Modify admin.rb as per #3.&lt;/p&gt;

&lt;p&gt;Any other approach?&lt;/p&gt;</comment>
                            <comment id="13291982" author="apurtell" created="Fri, 8 Jun 2012 20:50:11 +0000"  >&lt;p&gt;The approach looks good to me.&lt;/p&gt;

&lt;p&gt;We must deprecate and maintain owner related concepts and methods in the API for one successive major release after the deprecation, but can replace their implementation and modify the internals of admin.rb at any time.&lt;/p&gt;</comment>
                            <comment id="13292056" author="lakshman" created="Fri, 8 Jun 2012 22:44:55 +0000"  >&lt;p&gt;ok Andy. I&apos;m proceeding with this approach.&lt;/p&gt;

&lt;p&gt;Earlier we considered owner + create = ADMIN for DDL operations (delete table, add column, disable table, etc.). Now without owner concept, should we allow users with &quot;C&quot; to perform DDL?&lt;/p&gt;

</comment>
                            <comment id="13292076" author="apurtell" created="Fri, 8 Jun 2012 23:07:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should we allow users with &quot;C&quot; to perform DDL?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That makes sense. CREATE permissions allow DDL but only ADMIN permission can do things like force flush, force split, etc. &lt;/p&gt;

&lt;p&gt;Edit: Another consideration is CREATE could do DDL if online schema update is possible, but won&apos;t have permission if the table must be offlined (which would require ADMIN). The objective is to maintain the legacy CREATE permission with sufficient and useful distinction from ADMIN. If the distinction is not useful, we can consider alternatives.&lt;/p&gt;</comment>
                            <comment id="13292091" author="lakshman" created="Fri, 8 Jun 2012 23:30:39 +0000"  >
&lt;p&gt;In contrast to regular RDBMS notations, I considered all the above operations as DDL. May be I coined a wrong word here. &lt;/p&gt;

&lt;p&gt;AddColumn, DeleteColumn, DeleteTable, DisableTable, EnableTable, ModifyColumn, ModifyTable&lt;/p&gt;

&lt;p&gt;We have the following options now.&lt;/p&gt;

&lt;p&gt;Approach #1: DDL operations requires &quot;C&quot;&lt;br/&gt;
Approach #2: DDL operations requires &quot;A&quot;&lt;br/&gt;
Approach #3: DDL operatoins requires either &quot;C&quot; or &quot;A&quot;&lt;/p&gt;

&lt;p&gt;Personally I prefer to go with #1 as it makes it clean.&lt;/p&gt;

&lt;p&gt;Note that above list of operations doesn&apos;t contain CreateTable which requires &quot;C&quot;.&lt;br/&gt;
So this another reason for my preference for #1.&lt;/p&gt;</comment>
                            <comment id="13292098" author="apurtell" created="Fri, 8 Jun 2012 23:42:34 +0000"  >&lt;p&gt;I wonder if enable/disable should be ADMIN actions because they can greatly perturb the cluster. &lt;/p&gt;</comment>
                            <comment id="13292420" author="lakshman" created="Sat, 9 Jun 2012 19:43:40 +0000"  >&lt;p&gt;I agree with you Andy. But if we keep DisableTable/EnableTable permission with ADMIN alone, to delete/modify a table a user should have both ADMIN and CREATE permissions. ADMIN access to disable a table and CREATE access to delete/modify the table. Or user with CREATE only access has to request the ADMIN user to disable/enable the table before/after DDL.&lt;/p&gt;

&lt;p&gt;So, I feel its better to keep DDL permissions with CREATE alone and clean separation between CREATE and ADMIN. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Current implementation&lt;/b&gt;&lt;br/&gt;
CREATE - CreateTable&lt;br/&gt;
OWNER+CREATE &lt;b&gt;or&lt;/b&gt; ADMIN - AddColumn, DeleteColumn, DeleteTable, ModifyColumn, ModifyTable, DisableTable, EnableTable&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Proposed implementation&lt;/b&gt;&lt;br/&gt;
CREATE - CreateTable, AddColumn, DeleteColumn, DeleteTable, ModifyColumn, ModifyTable, DisableTable, EnableTable&lt;/p&gt;</comment>
                            <comment id="13292878" author="ram_krish" created="Mon, 11 Jun 2012 16:54:59 +0000"  >&lt;p&gt;@Andy&lt;br/&gt;
Had a small discussion with Laxman regarding the role of CREATE.  I think the suggestion given by Laxman makes sense.  Even if online schema modification is introduced the role of CREATE with the above said functions will still apply.  Just wanted to add my thoughts in this.&lt;/p&gt;

&lt;p&gt;Thanks Andy and Laxman.&lt;/p&gt;</comment>
                            <comment id="13292922" author="apurtell" created="Mon, 11 Jun 2012 17:47:27 +0000"  >&lt;p&gt;The trouble here is CREATE loses most of its meaning when there won&apos;t be a concept of &quot;table owner&quot; (initialized to the creator) and it is a large subset of ADMIN permission. A user with CREATE permissions on a table can do everything except assign or move a region? Why does that make sense when disable/enable will move all of the regions around, much more disruptive? &lt;/p&gt;

&lt;p&gt;What I am after here is a justification for keeping around the legacy permission CREATE.&lt;/p&gt;</comment>
                            <comment id="13292939" author="lakshman" created="Mon, 11 Jun 2012 18:18:18 +0000"  >









&lt;p&gt;Thanks Ram for pitching in.&lt;/p&gt;

&lt;p&gt;Andy, we definitely agree to your point. Just reiterating my previous comments.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I agree with you Andy. But if we keep DisableTable/EnableTable permission with ADMIN alone, to delete/modify a table a user should have both ADMIN and CREATE permissions. ADMIN access to disable a table and CREATE access to delete/modify the table. Or user with CREATE only access has to request the ADMIN user to disable/enable the table before/after DDL.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So, to delete a table requires two different users or one user with both permissions. This is my only concern.&lt;/p&gt;

&lt;p&gt;Thanks for clarification. Please provide your opinion of this.&lt;/p&gt;

&lt;p&gt;CREATE -(DDL) CreateTable, AddColumn, DeleteColumn, DeleteTable, ModifyColumn, ModifyTable&lt;br/&gt;
ADMIN - DisableTable, EnableTable&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;it is a large subset of ADMIN permission.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Please note that above are two disjoint sets. That means, DDL operations can&apos;t be done by ADMIN. Hope that should make them clean. &lt;/p&gt;</comment>
                            <comment id="13293128" author="apurtell" created="Mon, 11 Jun 2012 22:06:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;DDL operations can&apos;t be done by ADMIN.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m not sure there is a situation where it would make sense to disallow an administrator from making a DDL operation.&lt;/p&gt;

&lt;p&gt;You&apos;ve convinced me of this:&lt;/p&gt;

&lt;p&gt;CREATE -(DDL) CreateTable, AddColumn, DeleteColumn, DeleteTable, ModifyColumn, ModifyTable, DisableTable, EnableTable&lt;/p&gt;

&lt;p&gt;ADMIN - All of the above plus Flush, Split, Compact&lt;/p&gt;

&lt;p&gt;It&apos;s not useful to give add/delete/modify schema privileges without enable/disable to have them take effect. So either we do the above or we get rid of CREATE. I think the above distinction is still useful.&lt;/p&gt;

&lt;p&gt;Edit: I don&apos;t like that non-ADMIN can do enable/disable table, because it can really affect the cluster if the table is large. However I think on balance it would be more confusing than useful to remove EnableTable and DisableTable from the set of operations CREATE permission allows until online schema update-in-place without disable is always possible.&lt;/p&gt;

&lt;p&gt;Thanks for having the discussion.&lt;/p&gt;</comment>
                            <comment id="13293324" author="ram_krish" created="Tue, 12 Jun 2012 04:15:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;You&apos;ve convinced me of this:&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;CREATE -(DDL) CreateTable, AddColumn, DeleteColumn, DeleteTable, ModifyColumn, ModifyTable, DisableTable, EnableTable&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;ADMIN - All of the above plus Flush, Split, Compact&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Andy.&lt;/p&gt;</comment>
                            <comment id="13293332" author="lakshman" created="Tue, 12 Jun 2012 04:29:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;CREATE -(DDL) CreateTable, AddColumn, DeleteColumn, DeleteTable, ModifyColumn, ModifyTable, DisableTable, EnableTable&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;ADMIN - All of the above plus Flush, Split, Compact&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks a lot Andy. I will consider this.&lt;br/&gt;
I didn&apos;t consider flush, split and compact as the context is DDL.&lt;/p&gt;</comment>
                            <comment id="13293625" author="lakshman" created="Tue, 12 Jun 2012 13:51:26 +0000"  >&lt;p&gt;Patch attached as per the approach discussed.&lt;br/&gt;
And this patch includes &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6092&quot; title=&quot;Authorize flush, split, compact operations in AccessController&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6092&quot;&gt;&lt;del&gt;HBASE-6092&lt;/del&gt;&lt;/a&gt; as that is not commited.&lt;/p&gt;

&lt;p&gt;Please review.&lt;/p&gt;</comment>
                            <comment id="13293667" author="hadoopqa" created="Tue, 12 Jun 2012 14:49:03 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12531829/HBASE-6188.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12531829/HBASE-6188.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestServerCustomProtocol&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2150//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2150//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2150//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2150//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13293803" author="lakshman" created="Tue, 12 Jun 2012 17:56:38 +0000"  >&lt;p&gt;Test failures and findbugs are not relevant to the current patch.&lt;br/&gt;
Please review the patch.&lt;/p&gt;</comment>
                            <comment id="13294014" author="apurtell" created="Wed, 13 Jun 2012 00:08:44 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6092&quot; title=&quot;Authorize flush, split, compact operations in AccessController&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6092&quot;&gt;&lt;del&gt;HBASE-6092&lt;/del&gt;&lt;/a&gt; has been committed.&lt;/p&gt;</comment>
                            <comment id="13294144" author="apurtell" created="Wed, 13 Jun 2012 04:51:12 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://review.cloudera.org/r/2152/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://review.cloudera.org/r/2152/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13294228" author="lakshman" created="Wed, 13 Jun 2012 07:27:02 +0000"  >&lt;p&gt;Andy, Thanks for through review.&lt;br/&gt;
Updated with my comments in review board.&lt;/p&gt;</comment>
                            <comment id="13294468" author="apurtell" created="Wed, 13 Jun 2012 14:13:09 +0000"  >&lt;p&gt;Posted a reply in review board.&lt;/p&gt;</comment>
                            <comment id="13294514" author="lakshman" created="Wed, 13 Jun 2012 15:13:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;1) In PostCreate - We can grant CRWA permissions to the current user(i.e. owner).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was thinking to ignoring the owner and PostCreate will make use of getActiveUser() to get the requested user. But, as per your comments, i understand that, we still need to consider owner to make it backward compatible. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Forgot to mention that also this needs to happen if the table owner is changed via setOwner().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this needs to be handled in postModifyTable. But I can see that raises some more questions.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Should we revoke permissions for old owner? If yes, how do we track old owner in postModify?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Please correct me if my understanding is incorrect.&lt;/p&gt;</comment>
                            <comment id="13294583" author="lakshman" created="Wed, 13 Jun 2012 17:44:48 +0000"  >&lt;p&gt;Attached the new patch after fixing the review comments.&lt;br/&gt;
This patch includes new testcases for owner and change of owner.&lt;/p&gt;

&lt;p&gt;Please review.&lt;/p&gt;</comment>
                            <comment id="13294943" author="lakshman" created="Thu, 14 Jun 2012 10:24:22 +0000"  >&lt;p&gt;All tests were passing in QA bot build.&lt;br/&gt;
&lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2164//testReport/org.apache.hadoop.hbase.security.access/TestAccessController/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2164//testReport/org.apache.hadoop.hbase.security.access/TestAccessController/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please review.&lt;/p&gt;</comment>
                            <comment id="13295948" author="apurtell" created="Fri, 15 Jun 2012 22:03:21 +0000"  >&lt;p&gt;TestAccessController doesn&apos;t pass for me.&lt;/p&gt;

&lt;p&gt;The new code in postCreateTable must make a special case for the ACL table. It&apos;s not possible to call AccessControlLists.addUserPermission before the ACL table is deployed, i.e. created.&lt;/p&gt;</comment>
                            <comment id="13393391" author="lakshman" created="Sat, 16 Jun 2012 21:16:43 +0000"  >&lt;p&gt;Thanks for pointing it out Andy. I couldn&apos;t notice these test failures as they are intermittent failures.&lt;br/&gt;
Even in QA bot build also passing. I will correct this.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The new code in postCreateTable must make a special case for the ACL table. It&apos;s not possible to call AccessControlLists.addUserPermission before the ACL table is deployed, i.e. created.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Introducing a check like below is fine?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void postCreateTable(ObserverContext&amp;lt;MasterCoprocessorEnvironment&amp;gt; c,
      HTableDescriptor desc, HRegionInfo[] regions) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!AccessControlLists.isAclTable(desc)) {
      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; owner = desc.getOwnerString();
      &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; the table owner to current user, &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; not specified.
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (owner == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) owner = getActiveUser().getShortName();
      UserPermission userperm = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; UserPermission(Bytes.toBytes(owner), desc.getName(), &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;,
          Action.values());
      AccessControlLists.addUserPermission(c.getEnvironment().getConfiguration(), userperm);
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Apologies for the noise due to multiple submissions for this issue.&lt;/p&gt;</comment>
                            <comment id="13393396" author="apurtell" created="Sat, 16 Jun 2012 21:55:30 +0000"  >&lt;p&gt;@Laxman seems reasonable. &lt;/p&gt;</comment>
                            <comment id="13393408" author="lakshman" created="Sat, 16 Jun 2012 23:40:55 +0000"  >&lt;p&gt;Attached the new patch&lt;/p&gt;</comment>
                            <comment id="13393614" author="apurtell" created="Sun, 17 Jun 2012 21:29:11 +0000"  >&lt;p&gt;Patch v4 still fails for me. See attached. Testing with &apos;mvn -PlocalTests -Dtest=TestAccessController clean test&apos;&lt;/p&gt;</comment>
                            <comment id="13393685" author="lakshman" created="Mon, 18 Jun 2012 06:33:09 +0000"  >&lt;p&gt;From the log attached.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;	at org.apache.hadoop.hbase.client.HBaseAdmin.createTable(HBaseAdmin.java:347)
	at org.apache.hadoop.hbase.security.access.TestAccessController.setupBeforeClass(TestAccessController.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From TestAccessController.setupBeforeClass()&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    HTableDescriptor htd = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HTableDescriptor(TEST_TABLE);
    htd.addFamily(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HColumnDescriptor(TEST_FAMILY));
    htd.setOwner(USER_OWNER);
    admin.createTable(htd);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This indicates acl is table is not yet online by the time of creation of test table.&lt;br/&gt;
A small delay (sleep for 1 sec) after starting the cluster may help to resolve this intermittent test failure.&lt;/p&gt;

&lt;p&gt;Andy, I couldn&apos;t verify this its running fine in my local and QA build. Any other suggestions apart from introducing a delay?&lt;/p&gt;</comment>
                            <comment id="13396458" author="apurtell" created="Tue, 19 Jun 2012 02:27:14 +0000"  >&lt;p&gt;Committed to trunk and 0.94 branch. TestAccessController fixed on commit:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+    // Wait for the ACL table to become available
+    TEST_UTIL.waitTableAvailable(AccessControlLists.ACL_TABLE_NAME, 5000);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and passes locally.&lt;/p&gt;</comment>
                            <comment id="13396481" author="hudson" created="Tue, 19 Jun 2012 03:43:36 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3042 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3042/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3042/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6188&quot; title=&quot;Remove the concept of table owner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6188&quot;&gt;&lt;del&gt;HBASE-6188&lt;/del&gt;&lt;/a&gt;. Remove the concept of table owner (Revision 1351556)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
apurtell : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13396487" author="hudson" created="Tue, 19 Jun 2012 03:54:15 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #262 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/262/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/262/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6188&quot; title=&quot;Remove the concept of table owner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6188&quot;&gt;&lt;del&gt;HBASE-6188&lt;/del&gt;&lt;/a&gt;. Remove the concept of table owner (Revision 1351557)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
apurtell : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13396568" author="lakshman" created="Tue, 19 Jun 2012 07:05:53 +0000"  >&lt;p&gt;Thanks Andy. I didn&apos;t notice TEST_UTIL.waitTableAvailable earlier.&lt;/p&gt;</comment>
                            <comment id="13396703" author="hudson" created="Tue, 19 Jun 2012 11:47:02 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #59 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/59/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/59/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6188&quot; title=&quot;Remove the concept of table owner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6188&quot;&gt;&lt;del&gt;HBASE-6188&lt;/del&gt;&lt;/a&gt;. Remove the concept of table owner (Revision 1351556)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
apurtell : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13400021" author="hudson" created="Sat, 23 Jun 2012 18:23:13 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #37 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/37/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/37/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6188&quot; title=&quot;Remove the concept of table owner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6188&quot;&gt;&lt;del&gt;HBASE-6188&lt;/del&gt;&lt;/a&gt;. Remove the concept of table owner (Revision 1351557)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
apurtell : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12531920" name="HBASE-6188.1.patch" size="27435" author="lakshman" created="Wed, 13 Jun 2012 04:41:13 +0000"/>
                            <attachment id="12532005" name="HBASE-6188.2.patch" size="55538" author="lakshman" created="Wed, 13 Jun 2012 17:42:39 +0000"/>
                            <attachment id="12532310" name="HBASE-6188.3.patch" size="56342" author="lakshman" created="Sat, 16 Jun 2012 23:40:55 +0000"/>
                            <attachment id="12532325" name="HBASE-6188.4.patch" size="56343" author="lakshman" created="Sun, 17 Jun 2012 06:23:14 +0000"/>
                            <attachment id="12531829" name="HBASE-6188.patch" size="39029" author="lakshman" created="Tue, 12 Jun 2012 13:48:24 +0000"/>
                            <attachment id="12532345" name="org.apache.hadoop.hbase.security.access.TestAccessController.txt" size="5760" author="apurtell" created="Sun, 17 Jun 2012 21:29:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 7 Jun 2012 20:48:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>247877</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 25 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08rvz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>49118</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Huawei</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>