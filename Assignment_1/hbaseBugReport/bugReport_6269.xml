<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:35:16 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6269/HBASE-6269.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6269] Lazyseek should use the maxSequenseId StoreFile&apos;s KeyValue as the latest KeyValue</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6269</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;When I fix the bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6195&quot; title=&quot;Increment data will be lost when the memstore is flushed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6195&quot;&gt;&lt;del&gt;HBASE-6195&lt;/del&gt;&lt;/a&gt;, there is happened to find sometimes the test case will fail, &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/259/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/259/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If there are two Put/Increment with same row, family, qualifier, timestamp and different memstoreTS, after each Put/Increment, we do a memstore flush. So there will be two StoreFile with same KeyValue(except memstoreTS and SequenceId).&lt;/p&gt;

&lt;p&gt;When I got the row, I always got the old records, the test case like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testPutWithMemStoreFlush() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
    Configuration conf = HBaseConfiguration.create();
    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; method = &lt;span class=&quot;code-quote&quot;&gt;&quot;testPutWithMemStoreFlush&quot;&lt;/span&gt;;
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] tableName = Bytes.toBytes(method);
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] family = Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;family&quot;&lt;/span&gt;);;
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] qualifier = Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;qualifier&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] row = Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;putRow&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] value = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.region = initHRegion(tableName, method, conf, family);
    Put put = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    Get get = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    List&amp;lt;KeyValue&amp;gt; kvs = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    Result res = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    
    put = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Put(row);
    value = Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;value0&quot;&lt;/span&gt;);
    put.add(family, qualifier, 1234567l, value);
    region.put(put);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.print(&lt;span class=&quot;code-quote&quot;&gt;&quot;get value before flush after put value0 : &quot;&lt;/span&gt;);
    get = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Get(row);
    get.addColumn(family, qualifier);
    get.setMaxVersions();
    res = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.region.get(get, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    kvs = res.getColumn(family, qualifier);
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; kvs.size(); i++) {
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(Bytes.toString(kvs.get(i).getValue()));
    }

    region.flushcache();
    
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.print(&lt;span class=&quot;code-quote&quot;&gt;&quot;get value after flush after put value0 : &quot;&lt;/span&gt;);
    get = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Get(row);
    get.addColumn(family, qualifier);
    get.setMaxVersions();
    res = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.region.get(get, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    kvs = res.getColumn(family, qualifier);
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; kvs.size(); i++) {
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(Bytes.toString(kvs.get(i).getValue()));
    }
    
    put = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Put(row);
    value = Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;value1&quot;&lt;/span&gt;);
    put.add(family, qualifier, 1234567l, value);
    region.put(put);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.print(&lt;span class=&quot;code-quote&quot;&gt;&quot;get value before flush after put value1 : &quot;&lt;/span&gt;);
    get = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Get(row);
    get.addColumn(family, qualifier);
    get.setMaxVersions();
    res = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.region.get(get, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    kvs = res.getColumn(family, qualifier);
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; kvs.size(); i++) {
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(Bytes.toString(kvs.get(i).getValue()));
    }
    region.flushcache();
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.print(&lt;span class=&quot;code-quote&quot;&gt;&quot;get value after flush after put value1 : &quot;&lt;/span&gt;);
    get = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Get(row);
    get.addColumn(family, qualifier);
    get.setMaxVersions();
    res = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.region.get(get, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    kvs = res.getColumn(family, qualifier);
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; kvs.size(); i++) {
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(Bytes.toString(kvs.get(i).getValue()));
    }
    
    put = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Put(row);
    value = Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;value2&quot;&lt;/span&gt;);
    put.add(family, qualifier, 1234567l, value);
    region.put(put);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.print(&lt;span class=&quot;code-quote&quot;&gt;&quot;get value before flush after put value2 : &quot;&lt;/span&gt;);
    get = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Get(row);
    get.addColumn(family, qualifier);
    get.setMaxVersions();
    res = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.region.get(get, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    kvs = res.getColumn(family, qualifier);
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; kvs.size(); i++) {
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(Bytes.toString(kvs.get(i).getValue()));
    }
    region.flushcache();
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.print(&lt;span class=&quot;code-quote&quot;&gt;&quot;get value after flush after put value2 : &quot;&lt;/span&gt;);
    get = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Get(row);
    get.addColumn(family, qualifier);
    get.setMaxVersions();
    res = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.region.get(get, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    kvs = res.getColumn(family, qualifier);
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; kvs.size(); i++) {
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(Bytes.toString(kvs.get(i).getValue()));
    } 
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and the result print as followed:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
get value before flush after put value0 : value0
get value after flush after put value0 : value0
get value before flush after put value1 : value1
get value after flush after put value1 : value0
get value before flush after put value2 : value2
get value after flush after put value2 : value0
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I analyze the code for StoreFileScanner with lazy seek, the StoreFileScanners are sorted by SequenceId, so the latest StoreFile is on the top KeyValueHeap, and the KeyValue for latest StoreFile will comapre to the second latest StoreFile, but the second latest StoreFile generated the fake row for same row, family, qualifier excepts the timestamp( maximum), memstoreTS(0). And the latest KeyValue recognized as not latest than the second latest.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12595882">HBASE-6269</key>
            <summary>Lazyseek should use the maxSequenseId StoreFile&apos;s KeyValue as the latest KeyValue</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="xingshi">ShiXing</assignee>
                                    <reporter username="xingshi">ShiXing</reporter>
                        <labels>
                    </labels>
                <created>Tue, 26 Jun 2012 09:21:48 +0000</created>
                <updated>Tue, 26 Feb 2013 08:16:10 +0000</updated>
                            <resolved>Tue, 3 Jul 2012 10:44:32 +0000</resolved>
                                    <version>0.94.0</version>
                                    <fixVersion>0.94.1</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13401294" author="yuzhihong@gmail.com" created="Tue, 26 Jun 2012 11:00:10 +0000"  >&lt;p&gt;Can you generate patch for trunk for Hadoop QA ?&lt;/p&gt;</comment>
                            <comment id="13401296" author="ram_krish" created="Tue, 26 Jun 2012 11:02:35 +0000"  >&lt;p&gt;@ShiXing&lt;br/&gt;
If the data is not flushed we are able to get value1 which is latest.  But when we flush we have this behavourial change like the StoreFileScanner(KeyValueHeap) gives us the older value?&lt;/p&gt;
</comment>
                            <comment id="13401311" author="anoopsamjohn" created="Tue, 26 Jun 2012 11:41:11 +0000"  >&lt;p&gt;@ShiXing&lt;br/&gt;
In KeyValueHeap we use KVScannerComparator for the heap.&lt;br/&gt;
You can see the comparator checks for the 1st entries coming out of the scanners and in case of a tie, it checks the seq ids of the scanners.&lt;br/&gt;
This seqId of the StoreFileScanner will be the meta data &quot;MAX_SEQ_ID_KEY&quot; stored in that file. This value will be greater for the newest file resulting in this scanner coming on top. In the real functional scenarios this MAX_SEQ_ID will be keep on changing. Only the memstoreTS associated with each KV will be reset to 0.&lt;br/&gt;
So in the real functional scenario there wont be such a problem I think.&lt;br/&gt;
The newest file&apos;s scanner comes on top of the older ones.&lt;/p&gt;</comment>
                            <comment id="13401325" author="ram_krish" created="Tue, 26 Jun 2012 12:03:17 +0000"  >&lt;p&gt;@ShiXing&lt;br/&gt;
Yes, I agree that instead of getting the highest store file&apos;s scanner we get the second highest. And since in this case comparing for &apos;&amp;lt;0&apos; should be fine i feel.&lt;br/&gt;
Its better we fix this tho it may be very rare to get this problem.&lt;/p&gt;
</comment>
                            <comment id="13401383" author="shixing" created="Tue, 26 Jun 2012 13:34:22 +0000"  >&lt;p&gt;@anoop&lt;/p&gt;

&lt;p&gt;There are 2 StoreFiles after flush two times, the sf2&apos;s sequenceId &amp;gt; sf1&apos;s sequenceId.&lt;/p&gt;

&lt;p&gt;When get:&lt;br/&gt;
step1. the sf2 is the highest StoreFileScanner, and it enforceSeek() in KeyValueHeap.pollRealKV(), so the KeyValue2 is read out from StoreFile by real seek. And it compares to the fake KeyValue(called FakeKeyValue) that generated by KeyValue.createFirstOnRow() in StoreScanner.next(), and the FakeKeyValue&apos;s row, family, qualifier, timestamp, memstoreTS(always 0 for StoreFileScanner) are the same as KeyValue2 excepts Key type is Maximum, and Key type in KeyValue2 is Put. And the &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;comparator.compare(curKV=KeyValue2, nextKV=FakeKeyValue) = 251 &amp;gt; 0&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;. It means that the highest StoreFileScanner&apos;s highest KeyValue is not higher than the second. Followed is the value for example&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
KeyValue2 : putRow/family:qualifier/1234567/Put/vlen=6/ts=0
FakeKeyValue : putRow/family:qualifier/1234567/Maximum/vlen=0/ts=0
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then the second highest StoreFileScanner becomes the highest, and the highest is added to the heap.&lt;/p&gt;

&lt;p&gt;Step2. The sf1&apos;s highest KeyValue is read out , we call it KeyValue1, the real value is the same as KeyValue2 fetched again by heap.peek():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
KeyValue1 : putRow/family:qualifier/1234567/Put/vlen=6/ts=0
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Step3. KeyValue1 compares KeyValue2, and the &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;comparator.compare(curKV=KeyValue1, nextKV=KeyValue2) = 0&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;, and return the sf1&apos;s scanner as the highest StoreFileScanner.&lt;/p&gt;

&lt;p&gt;My solution is that:&lt;/p&gt;

&lt;p&gt;If all the highest KeyValue read out from the StoreFileScanners are the same(compare return 0), then we should keep the Scanners orig order by sequenceId.&lt;/p&gt;</comment>
                            <comment id="13401930" author="anoopsamjohn" created="Wed, 27 Jun 2012 03:14:00 +0000"  >&lt;p&gt;@ShiXing&lt;br/&gt;
Thanks for ur detailed explanation. Yes I had gone through the code in more detail when the Lazy seeks happens.&lt;br/&gt;
Both the files are getting lazy seeked with same fake KV. And later in pollReadlKV() the 1st file&apos;s scanner is selected as scanner as both the KVs in the files are same.&lt;/p&gt;
</comment>
                            <comment id="13401958" author="zhihyu@ebaysf.com" created="Wed, 27 Jun 2012 04:31:17 +0000"  >&lt;p&gt;Hadoop QA hasn&apos;t run tests for the patch.&lt;br/&gt;
@Xing:&lt;br/&gt;
Can you run test suite and post back the result ?&lt;/p&gt;</comment>
                            <comment id="13402017" author="shixing" created="Wed, 27 Jun 2012 07:20:55 +0000"  >&lt;p&gt;I run&lt;br/&gt;
mvn test -P runAllTests&lt;/p&gt;

&lt;p&gt;and the output is in the runAllTests.out.txt&lt;/p&gt;</comment>
                            <comment id="13402023" author="hadoopqa" created="Wed, 27 Jun 2012 07:28:29 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12533611/runAllTests.out.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12533611/runAllTests.out.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 1 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2271//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2271//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13402523" author="zhihyu@ebaysf.com" created="Wed, 27 Jun 2012 20:11:39 +0000"  >&lt;p&gt;Integrated to trunk.&lt;/p&gt;

&lt;p&gt;Thanks for the patch, Xing.&lt;/p&gt;

&lt;p&gt;Thanks for the review, Ramkrishna and Annop.&lt;/p&gt;</comment>
                            <comment id="13402580" author="hudson" created="Wed, 27 Jun 2012 21:49:37 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3083 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3083/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3083/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6269&quot; title=&quot;Lazyseek should use the maxSequenseId StoreFile&amp;#39;s KeyValue as the latest KeyValue&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6269&quot;&gt;&lt;del&gt;HBASE-6269&lt;/del&gt;&lt;/a&gt; Lazyseek should use the maxSequenseId StoreFile&apos;s KeyValue as the latest KeyValue (Xing Shi) (Revision 1354703)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13402684" author="hudson" created="Wed, 27 Jun 2012 23:51:08 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #72 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/72/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/72/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6269&quot; title=&quot;Lazyseek should use the maxSequenseId StoreFile&amp;#39;s KeyValue as the latest KeyValue&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6269&quot;&gt;&lt;del&gt;HBASE-6269&lt;/del&gt;&lt;/a&gt; Lazyseek should use the maxSequenseId StoreFile&apos;s KeyValue as the latest KeyValue (Xing Shi) (Revision 1354703)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13402833" author="ram_krish" created="Thu, 28 Jun 2012 04:24:30 +0000"  >&lt;p&gt;@Ted&lt;br/&gt;
For 0.94? We need to apply this right?&lt;/p&gt;</comment>
                            <comment id="13402839" author="zhihyu@ebaysf.com" created="Thu, 28 Jun 2012 04:40:05 +0000"  >&lt;p&gt;Integrated to 0.94 as well.&lt;/p&gt;</comment>
                            <comment id="13402880" author="hudson" created="Thu, 28 Jun 2012 05:57:31 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #286 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/286/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/286/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6269&quot; title=&quot;Lazyseek should use the maxSequenseId StoreFile&amp;#39;s KeyValue as the latest KeyValue&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6269&quot;&gt;&lt;del&gt;HBASE-6269&lt;/del&gt;&lt;/a&gt; Lazyseek should use the maxSequenseId StoreFile&apos;s KeyValue as the latest KeyValue (Xing Shi) (Revision 1354815)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13403276" author="hudson" created="Thu, 28 Jun 2012 17:40:05 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #38 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/38/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/38/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6269&quot; title=&quot;Lazyseek should use the maxSequenseId StoreFile&amp;#39;s KeyValue as the latest KeyValue&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6269&quot;&gt;&lt;del&gt;HBASE-6269&lt;/del&gt;&lt;/a&gt; Lazyseek should use the maxSequenseId StoreFile&apos;s KeyValue as the latest KeyValue (Xing Shi) (Revision 1354815)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12560111">HBASE-6195</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12533777" name="6269.94" size="3440" author="zhihyu@ebaysf.com" created="Thu, 28 Jun 2012 04:38:26 +0000"/>
                            <attachment id="12533476" name="HBASE-6269-trunk-V1.patch" size="3518" author="shixing" created="Tue, 26 Jun 2012 13:39:41 +0000"/>
                            <attachment id="12533454" name="HBASE-6269-v1.patch" size="3487" author="xingshi" created="Tue, 26 Jun 2012 09:23:30 +0000"/>
                            <attachment id="12533611" name="runAllTests.out.txt" size="49445" author="shixing" created="Wed, 27 Jun 2012 07:20:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 26 Jun 2012 11:00:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>245359</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 25 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0681b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34233</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>