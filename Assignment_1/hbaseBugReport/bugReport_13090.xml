<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:39:35 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13090/HBASE-13090.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13090] Progress heartbeats for long running scanners</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13090</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;It can be necessary to set very long timeouts for clients that issue scans over large regions when all data in the region might be filtered out depending on scan criteria. This is a usability concern because it can be hard to identify what worst case timeout to use until scans are occasionally/intermittently failing in production, depending on variable scan criteria. It would be better if the client-server scan protocol can send back periodic progress heartbeats to clients as long as server scanners are alive and making progress.&lt;/p&gt;

&lt;p&gt;This is related but orthogonal to streaming scan (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071&quot; title=&quot;Hbase Streaming Scan Feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13071&quot;&gt;&lt;del&gt;HBASE-13071&lt;/del&gt;&lt;/a&gt;). &lt;/p&gt;</description>
                <environment></environment>
        <key id="12777230">HBASE-13090</key>
            <summary>Progress heartbeats for long running scanners</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jonathan.lawlor">Jonathan Lawlor</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Feb 2015 17:40:43 +0000</created>
                <updated>Tue, 5 Apr 2016 12:37:55 +0000</updated>
                            <resolved>Fri, 17 Apr 2015 22:45:39 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>28</watches>
                                                                                                            <comments>
                            <comment id="14335140" author="apurtell" created="Tue, 24 Feb 2015 17:42:50 +0000"  >&lt;p&gt;Perhaps as simple as checking from a timer if any Results have been sent over the preceding interval, forcing back an empty one if none have been sent and no new results are available yet.&lt;/p&gt;</comment>
                            <comment id="14335320" author="lhofhansl" created="Tue, 24 Feb 2015 19:49:10 +0000"  >&lt;p&gt;Related to discussion on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13082&quot; title=&quot;Coarsen StoreScanner locks to RegionScanner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13082&quot;&gt;&lt;del&gt;HBASE-13082&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
There we&apos;ve been discussing exiting the scan loop to be able to release the lock in order to give flushes/compactions a chance to finish.&lt;br/&gt;
Exiting the scan loop after some time react to slow scans seems a prerequisite for this.&lt;/p&gt;</comment>
                            <comment id="14343108" author="eshcar" created="Mon, 2 Mar 2015 12:22:43 +0000"  >&lt;p&gt;In addition to a timer, or as an alternative to it, one can consider capping prefetched data at the server side by counting the number of rows scanned at each prefetch step. A capping factor limits the max number of rows to be scanned before returning the result to the client. &lt;br/&gt;
This way when the limit is exceeded the server sends whatever data it gathered so far. If no data was found it only sends a heartbeat. When finished scanning the region signal that it is exhausted. &lt;/p&gt;

&lt;p&gt;At the client side, the scanner continuos to scan agains the current region until it is exhausted.&lt;/p&gt;</comment>
                            <comment id="14349215" author="jonathan.lawlor" created="Thu, 5 Mar 2015 18:32:58 +0000"  >&lt;p&gt;With &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11544&quot; title=&quot;[Ergonomics] hbase.client.scanner.caching is dogged and will try to return batch even if it means OOME&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11544&quot;&gt;&lt;del&gt;HBASE-11544&lt;/del&gt;&lt;/a&gt; now in, I was thinking of tackling this one next and was looking for some feedback on the thought process:&lt;/p&gt;

&lt;p&gt;Implementing the timeout server side would involve changes at three different levels: &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;RSRpcServers&lt;/li&gt;
	&lt;li&gt;RegionScannerImpl/ReversedRegionScannerImpl&lt;/li&gt;
	&lt;li&gt;StoreScanner&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The RSRpcServices could maintain a variable; something along the lines of remainingScanTime. This value could be initialized to be some fraction of the scanner timeout (maybe half would be good enough?). On each call to RegionScanner#nextRaw, RSRpcServices would communicate that the RegionScanner can take at most remainingScanTime to retrieve a Result &amp;#8211; if a Result cannot be formed in that time, a timeout occurs. The RegionScanner would communicate this same remainingScanTime to the StoreScanner so that calls to InternalScanner#next() may also timeout if they are taking too long. &lt;/p&gt;

&lt;p&gt;Note that if partial Results are NOT supported by the scan configuration (as is the case for small scans, and scans with a filter that requires whole rows to be read before a filtering decision can be made) then the timeout would not be enforceable within StoreScanner but only within RegionScannerImpl and RSRpcServices. This means that it would still be possible to timeout due to a single long running StoreScanner#next() call in the event that partial Results are not supported.&lt;/p&gt;

&lt;p&gt;If a timeout does occur on the server, we would have to decide how this should be communicated back to the Client. I was thinking it would be most appropriate to communicate this back to the client via fields in the ScanResponse rather than flags on the Results in the ScanResponse (there is already a lot of state information implied through the contents of the Results in the ScanResponse and adding more seems like it would complicate things). Something along the lines of a timeoutOccurred boolean flag may be sufficient. Then on the Client side we could decide if enough Results were accumulated prior to the timeout to service the application request or if we must make another RPC to enough Results.&lt;/p&gt;

&lt;p&gt;If anyone else has been thinking about how to approach the solution to this issue or has any other ideas please chime in. Any feedback would be much appreciated.&lt;/p&gt;</comment>
                            <comment id="14350766" author="stack" created="Fri, 6 Mar 2015 19:27:36 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jonathan.lawlor&quot; class=&quot;user-hover&quot; rel=&quot;jonathan.lawlor&quot;&gt;Jonathan Lawlor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why does RsRpcServices have to be involved? Could remaining scan time not be up in RegionScanner?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This means that it would still be possible to timeout due to a single long running StoreScanner#next() call in the event that partial Results are not supported.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Dang. Can we flag these timeouts as &quot;Its your own fault&quot; or, &quot;don&apos;t use filter&quot; or &quot;don&apos;t short scan&quot; ?&lt;/p&gt;

&lt;p&gt;If you can do the heartbeat usiing ScanResponse rather than pollute Result, that&apos;d be better.&lt;/p&gt;

&lt;p&gt;Looks good to me &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jonathan.lawlor&quot; class=&quot;user-hover&quot; rel=&quot;jonathan.lawlor&quot;&gt;Jonathan Lawlor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; Any input here honey?&lt;/p&gt;
</comment>
                            <comment id="14350768" author="stack" created="Fri, 6 Mar 2015 19:27:58 +0000"  >&lt;p&gt;Or mighty &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=andrew.purtell%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;andrew.purtell@gmail.com&quot;&gt;Andrew Purtell&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14350782" author="jonathan.lawlor" created="Fri, 6 Mar 2015 19:40:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;Why does RsRpcServices have to be involved? Could remaining scan time not be up in RegionScanner?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think RsRpcServices needs to be involved because it has the global view of when the scan started. A particular call to RegionScanner#nextRaw may not necessarily cause a timeout, but multiple calls to RegionScanner#nextRaw must be made in order to form the ScanResponse. In other words, a timeout may not be caused by a single call to RegionScanner#nextRaw but rather the accumulated time of all calls necessary to form the ScanResponse.&lt;/p&gt;</comment>
                            <comment id="14350796" author="stack" created="Fri, 6 Mar 2015 19:54:24 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jonathan.lawlor&quot; class=&quot;user-hover&quot; rel=&quot;jonathan.lawlor&quot;&gt;Jonathan Lawlor&lt;/a&gt; Doesn&apos;t RegionScanner get created when the scan starts? Can it not run the timer?&lt;/p&gt;</comment>
                            <comment id="14350874" author="jonathan.lawlor" created="Fri, 6 Mar 2015 20:51:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;Doesn&apos;t RegionScanner get created when the scan starts? Can it not run the timer?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s true, the RegionScanner is created when the scan starts. It also remains open Server-side as long as the Client does not close it (as is the case in non-small scans). To keep all accounting of the timer within the RegionScanner we could add a call to RegionScanner#updateTimeoutTimestamp (or something along those lines) into RsRpcServices each time we either create or retrieve the RegionScanner (would avoid accounting for timeouts within RsRpcServices). The timestamp would need to be updated on each RsRpcServices#scan call to make sure that we aren&apos;t using a previously defined timeout timestamp that would be too restrictive at this point. Then all timeout information would be communicated to RsRpcServices via the newly defined NextState from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11544&quot; title=&quot;[Ergonomics] hbase.client.scanner.caching is dogged and will try to return batch even if it means OOME&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11544&quot;&gt;&lt;del&gt;HBASE-11544&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14350965" author="stack" created="Fri, 6 Mar 2015 21:48:24 +0000"  >&lt;p&gt;That sounds good. A reset or a new session because there may be other stuff the RegionScanner wants to reset on session start other than just timers.&lt;/p&gt;</comment>
                            <comment id="14351027" author="apurtell" created="Fri, 6 Mar 2015 22:23:03 +0000"  >&lt;p&gt;Sounds ok to me too, will be interested to see the details in a patch. &lt;/p&gt;</comment>
                            <comment id="14357853" author="jonathan.lawlor" created="Thu, 12 Mar 2015 00:08:46 +0000"  >&lt;p&gt;Attached is a rough work in progress patch. The patch does provide a working implementation of heartbeats but I believe it could be refined so I am looking to get some feedback.&lt;/p&gt;

&lt;p&gt;The implementation points that I wanted to highlight for discussion are below:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;We wanted to move all time tracking into RegionScanner and StoreScanner and leave RSRpcServices unscathed. I started off with that intention but it was slowly revealed that it may be better to simply have a timeLimit field in the call to nextRaw from RSRpcServices. Logic outlined below:
	&lt;ul&gt;
		&lt;li&gt;While it is certainly possible to add a reset() or newSession() method to the RegionScanner interface that would allow us to reset time tracking, the issue becomes how do we communicate that size limit down from the RegionScanner into the StoreScanner (the scanner that is looping through the cells for a particular column family).&lt;/li&gt;
		&lt;li&gt;The StoreScanners are stored in a KeyValueHeap in the RegionScanner... So it would be possible to loop through them all and call a similar reset/newSession method on all of them but that seems dirty and wasteful. It seems more appropriate to communicate the timeLimit down to only the relevant storeScanner via a timeLimit field in the InternalScanner#next(List&amp;lt;Cell&amp;gt; results, ..., timeLimit) call.&lt;/li&gt;
		&lt;li&gt;Since the RegionScanner also implements the InternalScanner interface, that same next method would need to be implemented in RegionScannerImpl. Because of this, I think it makes the most sense to simply have a nextRaw(List&amp;lt;Cell&amp;gt;, ..., timeLimit) method to specify the timeLimit from RSRpcServices rather than an update/newSession call&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;To avoid polluting the returned Result array with state information about heartbeats, a new heartbeat flag has been added to the ScanResponse. Since only the ScannerCallable ever sees the ScanResponse returned from the server, I have exposed the method ScannerCallable#isHeartbeatMessage() to allow the ClientScanner to check if the most recent server response was a heartbeat/keep-alive message.&lt;/li&gt;
	&lt;li&gt;The method postHeapNext(List&amp;lt;Cells&amp;gt;) was added to RegionScannerImpl to allow me to insert delays in between fetches of column family cells for testing. It didn&apos;t feel clean, so I was wondering if anyone had any ideas about alternative approaches to emulate long running scans on the server side&lt;/li&gt;
	&lt;li&gt;Since heartbeat messages have the potential to create partial results (in the event that the timeout occurs in the middle of a row) we only allow heartbeat messages if the client has specified that heartbeats are supported AND partial results are also supported.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Ideas for improvement:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;As earlier discussion indicated, the tracking of limits in RSRpcServices is somewhat messy. When a new limit needs to be added, the RegionScanner and InternalScanner interfaces must both be changed. The limit logic may be simplified by defining something along the lines of a ScannerLimit object. The object would have a field per limit and would have an associated Builder that would allow us to specify only the limits we care about (if a limit is not set, then it doesn&apos;t get enforced). Then, in the future, if a new limit was needed it would only amount to adding a new field in ScannerLimit and adding the appropriate enforcement logic (no changes to interfaces necessary). What do you guys think? I thought this would clean things up a bit but wanted to see if any objections first&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Of course the finer implementation points can be seen in the patch itself and any feedback would be appreciated. Will post to reviewboard&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="14357854" author="jonathan.lawlor" created="Thu, 12 Mar 2015 00:09:08 +0000"  >&lt;p&gt;Submit patch to see if anything is broken by this&lt;/p&gt;</comment>
                            <comment id="14357867" author="stack" created="Thu, 12 Mar 2015 00:22:16 +0000"  >&lt;p&gt;Nice writeup &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jonathan.lawlor&quot; class=&quot;user-hover&quot; rel=&quot;jonathan.lawlor&quot;&gt;Jonathan Lawlor&lt;/a&gt; &lt;/p&gt;

&lt;p&gt; If only timeout, then maybe premature for ScanLimit unless anything in current Scan structure that might sit better in ScanLimit?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;....if the client has specified that heartbeats are supported AND partial results are also supported&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This might be ok for 1.1 but partials should be on all the time in 2.0.. This feature should be on all the time in 2.0.  What would be the downsides if default was to allow return of partials to clients?&lt;/p&gt;

&lt;p&gt;On postHeapNext, yeah, ugly, but since you can&apos;t specify your own Scanner implementation serverside (you can&apos;t right?), ugly injection is all you have ... so yeah, ugly but we need it (can you make the scan latched rather than slowed....)&lt;/p&gt;

&lt;p&gt;When do I call isHeartbeatMessage? At want point in the processing?&lt;/p&gt;

&lt;p&gt;Your reasoning that new session or reset doesn&apos;t work makes sense to me.&lt;/p&gt;

&lt;p&gt;Will give review on patch later.&lt;/p&gt;

&lt;p&gt;Good stuff &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jonathan.lawlor&quot; class=&quot;user-hover&quot; rel=&quot;jonathan.lawlor&quot;&gt;Jonathan Lawlor&lt;/a&gt;&lt;/p&gt;

</comment>
                            <comment id="14357903" author="jonathan.lawlor" created="Thu, 12 Mar 2015 01:02:06 +0000"  >&lt;p&gt;Thanks for the comments &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If only timeout, then maybe premature for ScanLimit unless anything in current Scan structure that might sit better in ScanLimit?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I was thinking that we could combine the batch limit, size limit, and now the time limit into ScannerLimit object. With this patch, the InternalScanner and RegionScanner interfaces now have a large cascading call structure that looks like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
NextState next(List&amp;lt;Cell&amp;gt; result) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
...
NextState next(List&amp;lt;Cell&amp;gt; result, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; batchLimit) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
...
NextState next(List&amp;lt;Cell&amp;gt; result, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; batchLimit, &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; sizeLimit) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
...
NextState next(List&amp;lt;Cell&amp;gt; result, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; batchLimit, &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; sizeLimit, &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; timeLimit) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As more limits are added, it gets uglier and uglier. The idea with ScannerLimit would be to change it to this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
NextState next(List&amp;lt;Cell&amp;gt; result) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
...
NextState next(List&amp;lt;Cell&amp;gt; result, ScannerLimit limit) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Where the ScannerLimit object can have as many limits specified as it wants (may only contain a time limit, or may contain a time limit, batch limit and size limit).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What would be the downsides if default was to allow return of partials to clients?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;So right now partial result support is on by default but in the case that the scan is specified to be a small scan we disable partial results server side. This means that in the case of small scans we wouldn&apos;t allow heartbeat messages either since they could potentially create partials. Outside of small scans heartbeats would be supported.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;since you can&apos;t specify your own Scanner implementation serverside (you can&apos;t right?)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;As far as I can tell there is no nice way to specify your own StoreScanner implementation but upon further investigation it looks like I can specify my own KeyValueHeap implementation inside the RegionScanners. This would allow me to take this method out. Going to investigate further and see if this ugly postHeapNext method can be taken out.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When do I call isHeartbeatMessage? At want point in the processing?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Currently it is used inside ClientScanner.java after the Result array comes back from the server. By checking it here, we can see if the most recent response from the server (the one that returned the Results array) was a heartbeat message.&lt;/p&gt;</comment>
                            <comment id="14357997" author="hadoopqa" created="Thu, 12 Mar 2015 02:15:17 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12704058/HBASE-13090-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12704058/HBASE-13090-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 9c83fa7b52188d6bdfebcba75272c5c11e8b8566.&lt;br/&gt;
  ATTACHMENT ID: 12704058&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 20 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1926 checkstyle errors (more than the master&apos;s current 1924 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      result = result &amp;amp;&amp;amp; (hasClientHandlesHeartbeatMessages() == other.hasClientHandlesHeartbeatMessages());&lt;br/&gt;
+              new java.lang.String[] &lt;/p&gt;
{ &quot;Region&quot;, &quot;Scan&quot;, &quot;ScannerId&quot;, &quot;NumberOfRows&quot;, &quot;CloseScanner&quot;, &quot;NextCallSeq&quot;, &quot;ClientHandlesPartials&quot;, &quot;ClientHandlesHeartbeatMessages&quot;, }
&lt;p&gt;);&lt;br/&gt;
+              new java.lang.String[] &lt;/p&gt;
{ &quot;CellsPerResult&quot;, &quot;ScannerId&quot;, &quot;MoreResults&quot;, &quot;Ttl&quot;, &quot;Results&quot;, &quot;Stale&quot;, &quot;PartialFlagPerResult&quot;, &quot;HeartbeatMessage&quot;, }
&lt;p&gt;);&lt;br/&gt;
+    public NextState next(List&amp;lt;Cell&amp;gt; outResults, int batchLimit, long sizeLimit) throws IOException {&lt;br/&gt;
+  NextState next(List&amp;lt;Cell&amp;gt; result, int batchLimit, long sizeLimit, long timeLimit) throws IOException;&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13206//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14361126" author="jonathan.lawlor" created="Fri, 13 Mar 2015 21:24:32 +0000"  >&lt;p&gt;Attaching a patch that includes the ScannerLimit idea. It does seem to make things a little nicer and presents a cleaner interface for dealing with RegionScanner#next() and InternalScanner#next when many limits need to be specified. What do you guys think? &lt;/p&gt;

&lt;p&gt;This patch has also managed to get rid of the ugly postHeapNext method that was included before. Now in tests we use a custom key value heap class to insert delays between column family fetches to simulate long running scans on the server side. I am still looking into how I could remove the sleeps and replace them with latches.&lt;/p&gt;

&lt;p&gt;Will update reviewboard with latest diff&lt;/p&gt;</comment>
                            <comment id="14361181" author="hadoopqa" created="Fri, 13 Mar 2015 22:10:11 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12704509/HBASE-13090-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12704509/HBASE-13090-v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e60cae0500daf3c146e10d808c5070c6cb24ecec.&lt;br/&gt;
  ATTACHMENT ID: 12704509&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1918 checkstyle errors (more than the master&apos;s current 1917 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      result = result &amp;amp;&amp;amp; (hasClientHandlesHeartbeatMessages() == other.hasClientHandlesHeartbeatMessages());&lt;br/&gt;
+              new java.lang.String[] &lt;/p&gt;
{ &quot;Region&quot;, &quot;Scan&quot;, &quot;ScannerId&quot;, &quot;NumberOfRows&quot;, &quot;CloseScanner&quot;, &quot;NextCallSeq&quot;, &quot;ClientHandlesPartials&quot;, &quot;ClientHandlesHeartbeatMessages&quot;, }
&lt;p&gt;);&lt;br/&gt;
+              new java.lang.String[] &lt;/p&gt;
{ &quot;CellsPerResult&quot;, &quot;ScannerId&quot;, &quot;MoreResults&quot;, &quot;Ttl&quot;, &quot;Results&quot;, &quot;Stale&quot;, &quot;PartialFlagPerResult&quot;, &quot;HeartbeatMessage&quot;, }
&lt;p&gt;);&lt;br/&gt;
+          || !Bytes.equals(row, offset, length, matcher.row, matcher.rowOffset, matcher.rowLength)) {&lt;br/&gt;
+    public ScanResponse scan(RpcController controller, ScanRequest request) throws ServiceException {&lt;br/&gt;
+    public HeartbeatReversedKVHeap(List&amp;lt;? extends KeyValueScanner&amp;gt; scanners, KVComparator comparator)&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13232//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14361196" author="jonathan.lawlor" created="Fri, 13 Mar 2015 22:21:18 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fix checkstyle, line lengths, and some whitespace&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14361216" author="jonathan.lawlor" created="Fri, 13 Mar 2015 22:34:21 +0000"  >&lt;p&gt;resubmit patch; pre-commit build didn&apos;t statrt&lt;/p&gt;</comment>
                            <comment id="14361439" author="hadoopqa" created="Sat, 14 Mar 2015 01:03:41 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12704530/HBASE-13090-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12704530/HBASE-13090-v3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e60cae0500daf3c146e10d808c5070c6cb24ecec.&lt;br/&gt;
  ATTACHMENT ID: 12704530&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      result = result &amp;amp;&amp;amp; (hasClientHandlesHeartbeatMessages() == other.hasClientHandlesHeartbeatMessages());&lt;br/&gt;
+              new java.lang.String[] &lt;/p&gt;
{ &quot;Region&quot;, &quot;Scan&quot;, &quot;ScannerId&quot;, &quot;NumberOfRows&quot;, &quot;CloseScanner&quot;, &quot;NextCallSeq&quot;, &quot;ClientHandlesPartials&quot;, &quot;ClientHandlesHeartbeatMessages&quot;, }
&lt;p&gt;);&lt;br/&gt;
+              new java.lang.String[] &lt;/p&gt;
{ &quot;CellsPerResult&quot;, &quot;ScannerId&quot;, &quot;MoreResults&quot;, &quot;Ttl&quot;, &quot;Results&quot;, &quot;Stale&quot;, &quot;PartialFlagPerResult&quot;, &quot;HeartbeatMessage&quot;, }
&lt;p&gt;);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13237//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14364513" author="heliangliang" created="Tue, 17 Mar 2015 04:02:06 +0000"  >&lt;p&gt;Similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13215&quot; title=&quot;A limit on the raw key values is needed for each next call of a scanner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13215&quot;&gt;&lt;del&gt;HBASE-13215&lt;/del&gt;&lt;/a&gt;. It&apos;s nice to piggyback the current scanner position in the heartbeat when the limit is reached.&lt;/p&gt;</comment>
                            <comment id="14365427" author="jonathan.lawlor" created="Tue, 17 Mar 2015 16:22:07 +0000"  >&lt;p&gt;A heartbeat message is very similar to the typical response from the server with the following two exceptions:&lt;br/&gt;
1. The heartbeat message will be tagged with the heartbeat flag in the ScanResponse&lt;br/&gt;
2. The heartbeat message may contain an empty Result array when the region on the server has not been exhausted (i.e. there are still elements to be scanned in the current region)&lt;/p&gt;

&lt;p&gt;Scanners currently track their position by saving lastResult, and this mechanism will continue to work as expected with heartbeats since heartbeats ensure that we receive a Result back from the server before we return anything to the application layer.&lt;/p&gt;</comment>
                            <comment id="14366036" author="lhofhansl" created="Tue, 17 Mar 2015 20:39:09 +0000"  >&lt;p&gt;Great. +1&lt;/p&gt;</comment>
                            <comment id="14367025" author="eshcar" created="Wed, 18 Mar 2015 11:44:30 +0000"  >&lt;p&gt;Could be useful to return a &lt;b&gt;non&lt;/b&gt; empty result array even when the region is not exhausted. For example, if the scanner is async (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071&quot; title=&quot;Hbase Streaming Scan Feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13071&quot;&gt;&lt;del&gt;HBASE-13071&lt;/del&gt;&lt;/a&gt;) the application can start iterating over the results instead of waiting for the server to collect the entire batch.&lt;/p&gt;</comment>
                            <comment id="14367026" author="eshcar" created="Wed, 18 Mar 2015 11:44:31 +0000"  >&lt;p&gt;Could be useful to return a &lt;b&gt;non&lt;/b&gt; empty result array even when the region is not exhausted. For example, if the scanner is async (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071&quot; title=&quot;Hbase Streaming Scan Feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13071&quot;&gt;&lt;del&gt;HBASE-13071&lt;/del&gt;&lt;/a&gt;) the application can start iterating over the results instead of waiting for the server to collect the entire batch.&lt;/p&gt;</comment>
                            <comment id="14367402" author="jonathan.lawlor" created="Wed, 18 Mar 2015 16:22:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt; Actually, that is how it works (sorry, I was explicitly clear). When the time limit is reached the server will return to the client whatever it has accumulated thus far in a heartbeat message. What I meant by #2 is that it is possible (in the case of aggressive filtering) that when the time limit is reached, the server hasn&apos;t had a chance to accumulate ANY Results. In such a case, the Result array returned to the client would be empty&lt;/p&gt;</comment>
                            <comment id="14367423" author="jonathan.lawlor" created="Wed, 18 Mar 2015 16:35:43 +0000"  >&lt;p&gt;edit: was not* clear&lt;/p&gt;</comment>
                            <comment id="14369826" author="jonathan.lawlor" created="Thu, 19 Mar 2015 18:05:31 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Updated patch to reflect RB feedback&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14370017" author="hadoopqa" created="Thu, 19 Mar 2015 20:07:53 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12705648/HBASE-13090-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12705648/HBASE-13090-v4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 27cf749af884edae55454c885c7fb066f0a33c79.&lt;br/&gt;
  ATTACHMENT ID: 12705648&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 32 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1919 checkstyle errors (more than the master&apos;s current 1917 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +              new java.lang.String[] &lt;/p&gt;
{ &quot;Region&quot;, &quot;Scan&quot;, &quot;ScannerId&quot;, &quot;NumberOfRows&quot;, &quot;CloseScanner&quot;, &quot;NextCallSeq&quot;, &quot;ClientHandlesPartials&quot;, &quot;ClientHandlesHeartbeats&quot;, }
&lt;p&gt;);&lt;br/&gt;
+              new java.lang.String[] &lt;/p&gt;
{ &quot;CellsPerResult&quot;, &quot;ScannerId&quot;, &quot;MoreResults&quot;, &quot;Ttl&quot;, &quot;Results&quot;, &quot;Stale&quot;, &quot;PartialFlagPerResult&quot;, &quot;HeartbeatMessage&quot;, }
&lt;p&gt;);&lt;br/&gt;
+    public NextState next(List&amp;lt;Cell&amp;gt; outResults, int batchLimit, long sizeLimit) throws IOException {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestHRegion&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13319//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14370223" author="jonathan.lawlor" created="Thu, 19 Mar 2015 22:08:18 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fix test run (incorrect setting of joinedHeap batch limit resolved)&lt;/li&gt;
	&lt;li&gt;Fix javadoc warnings&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14370484" author="hadoopqa" created="Fri, 20 Mar 2015 01:05:24 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12705727/HBASE-13090-v6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12705727/HBASE-13090-v6.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 0d766544166fc9630bb00ae14a4a34a69d93f127.&lt;br/&gt;
  ATTACHMENT ID: 12705727&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 32 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1918 checkstyle errors (more than the master&apos;s current 1917 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +              new java.lang.String[] &lt;/p&gt;
{ &quot;Region&quot;, &quot;Scan&quot;, &quot;ScannerId&quot;, &quot;NumberOfRows&quot;, &quot;CloseScanner&quot;, &quot;NextCallSeq&quot;, &quot;ClientHandlesPartials&quot;, &quot;ClientHandlesHeartbeats&quot;, }
&lt;p&gt;);&lt;br/&gt;
+              new java.lang.String[] &lt;/p&gt;
{ &quot;CellsPerResult&quot;, &quot;ScannerId&quot;, &quot;MoreResults&quot;, &quot;Ttl&quot;, &quot;Results&quot;, &quot;Stale&quot;, &quot;PartialFlagPerResult&quot;, &quot;HeartbeatMessage&quot;, }
&lt;p&gt;);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13322//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14498858" author="jonathan.lawlor" created="Thu, 16 Apr 2015 22:21:34 +0000"  >&lt;p&gt;Updated patch incorporating feedback from reviewboard&lt;/p&gt;</comment>
                            <comment id="14499079" author="hadoopqa" created="Fri, 17 Apr 2015 01:05:09 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12725996/HBASE-13090-v7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12725996/HBASE-13090-v7.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e08ef99e3042767eaf2d11adae783674acfdddeb.&lt;br/&gt;
  ATTACHMENT ID: 12725996&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1911 checkstyle errors (more than the master&apos;s current 1910 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +              new java.lang.String[] &lt;/p&gt;
{ &quot;Region&quot;, &quot;Scan&quot;, &quot;ScannerId&quot;, &quot;NumberOfRows&quot;, &quot;CloseScanner&quot;, &quot;NextCallSeq&quot;, &quot;ClientHandlesPartials&quot;, &quot;ClientHandlesHeartbeats&quot;, }
&lt;p&gt;);&lt;br/&gt;
+              new java.lang.String[] &lt;/p&gt;
{ &quot;CellsPerResult&quot;, &quot;ScannerId&quot;, &quot;MoreResults&quot;, &quot;Ttl&quot;, &quot;Results&quot;, &quot;Stale&quot;, &quot;PartialFlagPerResult&quot;, &quot;MoreResultsInRegion&quot;, &quot;HeartbeatMessage&quot;, }
&lt;p&gt;);&lt;br/&gt;
+    public synchronized boolean next(List&amp;lt;Cell&amp;gt; outResults, ScannerContext scannerContext) throws IOException {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13727//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13727//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13727//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13727//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13727//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13727//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13727//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13727//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14500078" author="stack" created="Fri, 17 Apr 2015 15:51:48 +0000"  >&lt;p&gt;+1 carried over from rb. This is a beautiful patch.  I will commit later today.  The long line is from generated code and is likely cause of the checkstyle complaint. I&apos;ll check it out on commit (and do any fixup if needed).&lt;/p&gt;</comment>
                            <comment id="14500082" author="stack" created="Fri, 17 Apr 2015 15:53:58 +0000"  >&lt;p&gt;Want to do a release note &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jonathan.lawlor&quot; class=&quot;user-hover&quot; rel=&quot;jonathan.lawlor&quot;&gt;Jonathan Lawlor&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;I wanted to put this in hbase 1.1 because it so sweet but &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jonathan.lawlor&quot; class=&quot;user-hover&quot; rel=&quot;jonathan.lawlor&quot;&gt;Jonathan Lawlor&lt;/a&gt; won&apos;t let me... says too much change too close to release.... it might be a bit &apos;risky&apos;.  Ahem.&lt;/p&gt;

&lt;p&gt;So, marking 1.2. and 2.0.&lt;/p&gt;</comment>
                            <comment id="14500331" author="ndimiduk" created="Fri, 17 Apr 2015 18:06:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;I wanted to put this in hbase 1.1 because it so sweet but &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jonathan.lawlor&quot; class=&quot;user-hover&quot; rel=&quot;jonathan.lawlor&quot;&gt;Jonathan Lawlor&lt;/a&gt; won&apos;t let me... says too much change too close to release.... it might be a bit &apos;risky&apos;. Ahem.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s a shame; this seems very important for Phoenix users who are pushing the line on OLAP-kinds of queries. What can we do to raise your confidence in the patch for branch-1.1? IT tests? CM?&lt;/p&gt;</comment>
                            <comment id="14500349" author="jonathan.lawlor" created="Fri, 17 Apr 2015 18:18:59 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; I believe the change is solid. Just figured with branch-1.1 release so close may be a bit &apos;risky&apos; to stick such a large change in right before release. While the unit tests added do stress the relevant code paths, it would be nice to run it against a workload that was having timeout problems before to prove its worth&lt;/p&gt;</comment>
                            <comment id="14500839" author="stack" created="Fri, 17 Apr 2015 22:45:39 +0000"  >&lt;p&gt;Pushed to branch-1, branch-1.1, and master.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; I pushed it since you seem to want it. Patch looks good to me and we&apos;ll be running tests over next week or so so if issue it&apos;ll turn up... Thanks.&lt;/p&gt;

&lt;p&gt;Thanks for the patch &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jonathan.lawlor&quot; class=&quot;user-hover&quot; rel=&quot;jonathan.lawlor&quot;&gt;Jonathan Lawlor&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14500899" author="yuzhihong@gmail.com" created="Fri, 17 Apr 2015 23:40:53 +0000"  >&lt;p&gt;I got the following compilation error on branch-1:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:testCompile (&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;-testCompile) on project hbase-server: Compilation failure
[ERROR] /Users/tyu/1-hbase/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScannerHeartbeatMessages.java:[349,11] error: unreported exception InterruptedException; must be caught or declared to be thrown
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Attached addendum fixes the compilation.&lt;/p&gt;</comment>
                            <comment id="14500911" author="hudson" created="Fri, 17 Apr 2015 23:51:17 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.1 #407 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/407/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/407/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13090&quot; title=&quot;Progress heartbeats for long running scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13090&quot;&gt;&lt;del&gt;HBASE-13090&lt;/del&gt;&lt;/a&gt; Progress heartbeats for long running scanners (stack: rev 43f24db82566818d02062466ac421d86ddb735d8)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestStripeCompactionPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScannerHeartbeatMessages.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/protobuf/Client.proto&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallable.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/NoLimitScannerContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/client/ClientSideRegionScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScannerContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestPartialResultsFromClientSide.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14500913" author="hudson" created="Fri, 17 Apr 2015 23:51:32 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.2 #2 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/2/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/2/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13090&quot; title=&quot;Progress heartbeats for long running scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13090&quot;&gt;&lt;del&gt;HBASE-13090&lt;/del&gt;&lt;/a&gt; Progress heartbeats for long running scanners (stack: rev a4f77d49a5ae347c78e3d5934c4fc005d3914cb1)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScannerHeartbeatMessages.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/NoLimitScannerContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestPartialResultsFromClientSide.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScannerContext.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/protobuf/Client.proto&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestStripeCompactionPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/client/ClientSideRegionScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallable.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14500924" author="jonathan.lawlor" created="Sat, 18 Apr 2015 00:01:03 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu&quot; class=&quot;user-hover&quot; rel=&quot;tedyu&quot;&gt;Ted Yu&lt;/a&gt; Thanks for catching that. Seems HRegionServer no longer throws InterruptedException in master. Addendum lgtm.&lt;/p&gt;</comment>
                            <comment id="14500936" author="yuzhihong@gmail.com" created="Sat, 18 Apr 2015 00:08:07 +0000"  >&lt;p&gt;Integrated addendum to branch-1 and branch-1.1&lt;/p&gt;

&lt;p&gt;Thanks for taking a look, Jonathan&lt;/p&gt;</comment>
                            <comment id="14501023" author="hudson" created="Sat, 18 Apr 2015 01:48:57 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #6387 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6387/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6387/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13090&quot; title=&quot;Progress heartbeats for long running scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13090&quot;&gt;&lt;del&gt;HBASE-13090&lt;/del&gt;&lt;/a&gt; Progress heartbeats for long running scanners (stack: rev abe3796a9907485c875932caa5f1c82071495c0f)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallable.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/protobuf/Client.proto&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestPartialResultsFromClientSide.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScannerContext.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestStripeCompactionPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/client/ClientSideRegionScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/NoLimitScannerContext.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScannerHeartbeatMessages.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14501030" author="hudson" created="Sat, 18 Apr 2015 02:09:56 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.1 #408 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/408/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/408/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13090&quot; title=&quot;Progress heartbeats for long running scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13090&quot;&gt;&lt;del&gt;HBASE-13090&lt;/del&gt;&lt;/a&gt; Addendum fixes compilation error in TestScannerHeartbeatMessages (tedyu: rev 7b84d7d7812cffb7da3ccfb40123dc43f18e594c)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScannerHeartbeatMessages.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14501034" author="hudson" created="Sat, 18 Apr 2015 02:21:54 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.2 #3 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/3/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/3/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13090&quot; title=&quot;Progress heartbeats for long running scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13090&quot;&gt;&lt;del&gt;HBASE-13090&lt;/del&gt;&lt;/a&gt; Addendum fixes compilation error in TestScannerHeartbeatMessages (tedyu: rev b655a9909e1f5ed2823d0adfd1f42d5af5017dd1)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScannerHeartbeatMessages.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14501415" author="yuzhihong@gmail.com" created="Sat, 18 Apr 2015 15:22:23 +0000"  >&lt;p&gt;TestScannerHeartbeatMessages fails in branch-1&lt;br/&gt;
e.g. &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/411/testReport/org.apache.hadoop.hbase.regionserver/TestScannerHeartbeatMessages/testScannerHeartbeatMessages/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/411/testReport/org.apache.hadoop.hbase.regionserver/TestScannerHeartbeatMessages/testScannerHeartbeatMessages/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In TestScannerHeartbeatMessages#testImportanceOfHeartbeats(), there was no exception raised when heartbeatsEnabled was set to false:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    HeartbeatRPCServices.heartbeatsEnabled = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      testCallable.call();
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Debugging to see what might be the cause.&lt;/p&gt;

&lt;p&gt;BTW test table should be deleted at the end of the test:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -173,6 +173,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class TestScannerHeartbeatMessages {

   @AfterClass
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void tearDownAfterClass() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
+    TEST_UTIL.deleteTable(TABLE_NAME);
     TEST_UTIL.shutdownMiniCluster();
   }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I sometimes got the following in subsequent test run:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	at org.apache.hadoop.hbase.regionserver.TestScannerHeartbeatMessages.createTestTable(TestScannerHeartbeatMessages.java:139)
	at org.apache.hadoop.hbase.regionserver.TestScannerHeartbeatMessages.setUpBeforeClass(TestScannerHeartbeatMessages.java:134)
Caused by: org.apache.hadoop.ipc.RemoteException: testScannerHeartbeatMessagesTable
	at org.apache.hadoop.hbase.master.procedure.CreateTableProcedure.prepareCreate(CreateTableProcedure.java:283)
	at org.apache.hadoop.hbase.master.procedure.CreateTableProcedure.executeFromState(CreateTableProcedure.java:106)
	at org.apache.hadoop.hbase.master.procedure.CreateTableProcedure.executeFromState(CreateTableProcedure.java:1)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14503512" author="jonathan.lawlor" created="Mon, 20 Apr 2015 19:59:40 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu&quot; class=&quot;user-hover&quot; rel=&quot;tedyu&quot;&gt;Ted Yu&lt;/a&gt; thanks for digging in here. I have done some investigation into the root cause of this issue and it seems to be coming from the field &lt;tt&gt;MIN_RPC_TIMEOUT&lt;/tt&gt; inside &lt;tt&gt;RpcRetryingCaller&lt;/tt&gt; in branch-1. This &lt;tt&gt;MIN_RPC_TIMEOUT&lt;/tt&gt; field in branch-1 prevents setting the RPC timeout value to anything less than 2 seconds. In master this field no longer exists and the timeout value can be specified to be as small as we wish. In the case of TestScannerHeartbeatMessages, the RPC timeout was specified to be 0.5 seconds which is why it fails when it is 2 seconds instead. I will attach a patch shortly to address this issue, thanks!&lt;/p&gt;</comment>
                            <comment id="14503574" author="jonathan.lawlor" created="Mon, 20 Apr 2015 20:45:52 +0000"  >&lt;p&gt;Filed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13514&quot; title=&quot;Fix test failures in TestScannerHeartbeatMessages caused by incorrect setting of hbase.rpc.timeout&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13514&quot;&gt;&lt;del&gt;HBASE-13514&lt;/del&gt;&lt;/a&gt; to address the test failures in branch-1 and branch-1.1&lt;/p&gt;</comment>
                            <comment id="14571024" author="ndimiduk" created="Wed, 3 Jun 2015 15:28:23 +0000"  >&lt;p&gt;Closing issues released in 1.1.0.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12748238">HBASE-12266</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12785375">HBASE-13333</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12776140">HBASE-13071</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12946049">HBASE-15378</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12776620">HBASE-13082</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12945376">HBASE-15358</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12956140">HBASE-15593</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12748238">HBASE-12266</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12728285">HBASE-11544</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12726297" name="13090-branch-1.addendum" size="722" author="yuzhihong@gmail.com" created="Fri, 17 Apr 2015 23:41:07 +0000"/>
                            <attachment id="12704058" name="HBASE-13090-v1.patch" size="100266" author="jonathan.lawlor" created="Thu, 12 Mar 2015 00:08:46 +0000"/>
                            <attachment id="12704509" name="HBASE-13090-v2.patch" size="132081" author="jonathan.lawlor" created="Fri, 13 Mar 2015 21:24:32 +0000"/>
                            <attachment id="12704530" name="HBASE-13090-v3.patch" size="131911" author="jonathan.lawlor" created="Fri, 13 Mar 2015 22:52:07 +0000"/>
                            <attachment id="12704519" name="HBASE-13090-v3.patch" size="131911" author="jonathan.lawlor" created="Fri, 13 Mar 2015 22:21:18 +0000"/>
                            <attachment id="12705648" name="HBASE-13090-v4.patch" size="128628" author="jonathan.lawlor" created="Thu, 19 Mar 2015 18:05:31 +0000"/>
                            <attachment id="12705727" name="HBASE-13090-v6.patch" size="128959" author="jonathan.lawlor" created="Thu, 19 Mar 2015 22:08:18 +0000"/>
                            <attachment id="12725996" name="HBASE-13090-v7.patch" size="99443" author="jonathan.lawlor" created="Thu, 16 Apr 2015 22:21:34 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12822445">HBASE-13514</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 24 Feb 2015 19:49:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 28 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i25zen:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Previously, there was no way to enforce a time limit on scan RPC requests. The server would receive a scan RPC request and take as much time as it needed to accumulate enough results to reach a limit or exhaust the region. The problem with this approach was that, in the case of a very selective scan, the processing of the scan could take too long and cause timeouts client side.&lt;br/&gt;
&lt;br/&gt;
With this fix, the server will now enforce a time limit on the execution of scan RPC requests. When a scan RPC request arrives to the server, a time limit is calculated to be half of whichever timeout value is more restictive between the configurations (&amp;quot;hbase.client.scanner.timeout.period&amp;quot; and &amp;quot;hbase.rpc.timeout&amp;quot;). When the time limit is reached, the server will return whatever results it has accumulated up to that point. The results may be empty.&lt;br/&gt;
&lt;br/&gt;
To ensure that timeout checks do not occur too often (which would hurt the performance of scans), the configuration &amp;quot;hbase.cells.scanned.per.heartbeat.check&amp;quot; has been introduced. This configuration controls how often System.currentTimeMillis() is called to update the progress towards the time limit. Currently, the default value of this configuration value is 10000. Specifying a smaller value will provide a tighter bound on the time limit, but may hurt scan performance due to the higher frequency of calls to System.currentTimeMillis().&lt;br/&gt;
&lt;br/&gt;
Protobuf models for ScanRequest and ScanResponse have been updated so that heartbeat support can be communicated. Support for heartbeat messages is specified in the request sent to the server via ScanRequest.Builder#setClientHandlesHeartbeats. Only when the server sees that ScanRequest#getClientHandlesHeartbeats() is true will it send heartbeat messages back to the client. A response is marked as a heartbeat message via the boolean flag ScanResponse#getHeartbeatMessage</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>