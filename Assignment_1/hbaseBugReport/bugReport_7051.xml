<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:42:13 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7051/HBASE-7051.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7051] CheckAndPut should properly read MVCC</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7051</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;See, for example:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// TODO: Use MVCC to make &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; set of increments atomic to reads&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here&apos;s an example of what I can happen (would probably be good to write up a test case for each read/update):&lt;br/&gt;
Concurrent update via increment and put.&lt;/p&gt;

&lt;p&gt;The put grabs the row lock first and updates the memstore, but releases the row lock before the MVCC is advanced.  Then, the increment grabs the row lock and reads right away, reading the old value and incrementing based on that.&lt;/p&gt;

&lt;p&gt;There are a few options here:&lt;br/&gt;
1) Waiting for the MVCC to advance for read/updates: the downside is that you have to wait for updates on other rows.&lt;/p&gt;

&lt;p&gt;2) Have an MVCC per-row (table configuration): this avoids the unnecessary contention of 1)&lt;/p&gt;

&lt;p&gt;3) Transform the read/updates to write-only with rollup on read..  E.g. an increment  would just have the number of values to increment.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12613427">HBASE-7051</key>
            <summary>CheckAndPut should properly read MVCC</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="gchanan">Gregory Chanan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 25 Oct 2012 03:27:45 +0000</created>
                <updated>Tue, 26 Feb 2013 08:20:57 +0000</updated>
                            <resolved>Wed, 31 Oct 2012 22:05:28 +0000</resolved>
                                    <version>0.95.2</version>
                                    <fixVersion>0.94.3</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                            <comments>
                            <comment id="13483859" author="yuzhihong@gmail.com" created="Thu, 25 Oct 2012 03:31:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;be good to write up a test case for each read/update&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Looks like option #3 is better.&lt;/p&gt;</comment>
                            <comment id="13483921" author="lhofhansl" created="Thu, 25 Oct 2012 06:15:20 +0000"  >&lt;p&gt;Note that this is not as simple as it looks. Increments are not idempotent. They skirt the issue by making changes visible immediately so that other increments see the result of all previous increments.&lt;br/&gt;
If that was not the case two increments of 1 with a base value of 0 could still just lead to 1, even when they are both applied atomically.&lt;br/&gt;
That is why the memstoreTS is set to 0 for increments (making it visible immediately).&lt;/p&gt;

&lt;p&gt;Edit: Forgot an important &quot;not&quot; and spelling &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13483933" author="gchanan" created="Thu, 25 Oct 2012 06:49:43 +0000"  >&lt;p&gt;Hmm...interesting &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;The example in the description doesn&apos;t use two increments, though.  Admittedly a weird case.  But the same example should work with increment replaced with checkAndPut, which isn&apos;t as strange.&lt;/p&gt;</comment>
                            <comment id="13483936" author="ram_krish" created="Thu, 25 Oct 2012 07:02:16 +0000"  >&lt;p&gt;append() and incrment() also does not honour retries also.  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6390&quot; title=&quot;append() and increment() may result in inconsistent result on retries.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6390&quot;&gt;&lt;del&gt;HBASE-6390&lt;/del&gt;&lt;/a&gt; was raised for that but we did not proceed on that ?&lt;/p&gt;</comment>
                            <comment id="13484212" author="lhofhansl" created="Thu, 25 Oct 2012 15:55:58 +0000"  >&lt;p&gt;Actually checkAndPut is correct, no? I see no special logic that mucks with the memstoreTS or similar.&lt;/p&gt;

&lt;p&gt;The only really special operations are Increment and Append.&lt;/p&gt;

&lt;p&gt;@Ram: Since Increment and Append are not idempotent we cannot simply retry them (see discussion on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6390&quot; title=&quot;append() and increment() may result in inconsistent result on retries.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6390&quot;&gt;&lt;del&gt;HBASE-6390&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13484600" author="gchanan" created="Fri, 26 Oct 2012 00:21:59 +0000"  >&lt;p&gt;I think the special memstoreTS logic in Increment/Append is a separate issue than what I&apos;m bringing up here.  I could be wrong (I&apos;ve just really started looking into this code).  Could you explain what is wrong about the following:&lt;/p&gt;

&lt;p&gt;The current value of some cell is 10.&lt;br/&gt;
I issue two concurrent requests:&lt;br/&gt;
A) a check and put where check value = 10, put value = 11&lt;br/&gt;
B) a put where put value = 50&lt;/p&gt;

&lt;p&gt;The only result at the end of these operations that seems reasonable to me is the value of the cell being 50.  If A occurred first (ACID wise), then our values go 10-&amp;gt;11-&amp;gt;50.  If B occurred first, then our values go 10-&amp;gt;50 (and the checkAndPut fails).  Or do we just not consider checkAndPuts to be transactions?&lt;/p&gt;

&lt;p&gt;My reading of the code is that we could get 11.  B goes first but releases the rowLock before completing his MVCC memstore insert.  Then A goes, reads 10 and puts 50.&lt;/p&gt;</comment>
                            <comment id="13484602" author="gchanan" created="Fri, 26 Oct 2012 00:25:17 +0000"  >&lt;p&gt;Sorry last sentence should be:&lt;br/&gt;
&quot;Then A goes, reads 10 and puts 11&quot;&lt;/p&gt;</comment>
                            <comment id="13484610" author="lhofhansl" created="Fri, 26 Oct 2012 00:45:44 +0000"  >&lt;p&gt;Yes. There is nothing special about checkAndPut.&lt;br/&gt;
Maybe I am confused... What specifically do you want to fix w.r.t. checkAndPut?&lt;br/&gt;
(I think the only weird things we have that do not honor MVCC are Increment and Append)&lt;/p&gt;</comment>
                            <comment id="13484618" author="gchanan" created="Fri, 26 Oct 2012 00:54:31 +0000"  >&lt;p&gt;What does &quot;Yes&quot; refer to?&lt;/p&gt;

&lt;p&gt;I&apos;m suggesting that the result of the above two operations should always be 50.  Having the checkAndPut begin and complete a memstore insert before doing the read (option 1 above), is one example of how to get those semantics.&lt;/p&gt;</comment>
                            <comment id="13484632" author="lhofhansl" created="Fri, 26 Oct 2012 01:08:02 +0000"  >&lt;p&gt;&quot;Yes&quot; was agreeing that 50 should always be the outcome. Is that ever not the case?&lt;/p&gt;</comment>
                            <comment id="13484634" author="gchanan" created="Fri, 26 Oct 2012 01:10:06 +0000"  >&lt;p&gt;Great.  My surface-level reading of the code was that it could be 11, but I&apos;ll work on an actual test case &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                            <comment id="13484678" author="lhofhansl" created="Fri, 26 Oct 2012 03:58:21 +0000"  >&lt;p&gt;I don&apos;t see how that can happen. checkAndMutate takes a row lock, reads the row (following MVCC), and updates the row (which will also follow the MVCC protocol).&lt;/p&gt;</comment>
                            <comment id="13484803" author="ram_krish" created="Fri, 26 Oct 2012 08:56:24 +0000"  >&lt;p&gt;Yes.. what Gregory says is possible.. i tried to reproduce this scenario that he mentioned. It happens..&lt;br/&gt;
So if thread B is just before waiting for MVCC to complete and by the time of thread A does the check operation it is going to succeed.&lt;br/&gt;
Now the MVCC completes and the put as part of checkAndPut gets completed thus overwriting what the thread B has written.&lt;/p&gt;</comment>
                            <comment id="13484806" author="ram_krish" created="Fri, 26 Oct 2012 09:17:14 +0000"  >&lt;p&gt;Also this applies to other versions also right? Not only trunk?&lt;/p&gt;</comment>
                            <comment id="13485055" author="lhofhansl" created="Fri, 26 Oct 2012 17:14:08 +0000"  >&lt;p&gt;I see. In HRegion.doMiniBatchPut we release the rowlock(s) before we roll the readPoint (completeMemstoreInsert). So for checkAndPut is not enough to hold the rowlock, since an earlier Put could have released the lock but not yet rolled readPoint... Is that what you guys are saying?&lt;/p&gt;

&lt;p&gt;I agree that is a problem and a side-effect of releasing the rowlock early to avoid holding it, while the WAL is sync&apos;ed.&lt;/p&gt;</comment>
                            <comment id="13485104" author="gchanan" created="Fri, 26 Oct 2012 18:38:08 +0000"  >&lt;p&gt;Yes, that&apos;s what I&apos;m saying Lars.&lt;/p&gt;

&lt;p&gt;What do you think about the options I give in the description?  You mentioned holding the rowlock longer, which would also work, but (presumably) slow down all operations, not just checkAndPuts/increments/appends.&lt;/p&gt;</comment>
                            <comment id="13485126" author="lhofhansl" created="Fri, 26 Oct 2012 19:11:26 +0000"  >&lt;p&gt;Holding the rowlock longer would require us to hold the lock while we sync the WAL (because MVCC visibility must come after we sync the lock).&lt;br/&gt;
The nuclear option would be to wait for all MVCC transactions to finish:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
MultiVersionConsistencyControl.WriteEntry w = mvcc.beginMemstoreInsert();
mvcc.advanceMemstore(w);
mvcc.waitForRead(w);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This will wait for all prior transactions to finish. Even then there might be a race still.&lt;/p&gt;</comment>
                            <comment id="13485128" author="gchanan" created="Fri, 26 Oct 2012 19:16:17 +0000"  >&lt;p&gt;Lars: that&apos;s option 1.  The downside is you have to wait for writes to complete on other rows, which is unnecessary.  I don&apos;t think there is a race in there, but could be wrong.&lt;/p&gt;

&lt;p&gt;Option #2 is use an MVCC per row.  Is that just infeasible?  We could make it an option like &quot;faster read/updates&quot;&lt;/p&gt;

&lt;p&gt;Option #3 is make the read/updates write-only.  That&apos;s probably more difficult.&lt;/p&gt;</comment>
                            <comment id="13485316" author="lhofhansl" created="Sat, 27 Oct 2012 01:03:09 +0000"  >&lt;p&gt;Can you explain #3 more.&lt;/p&gt;

&lt;p&gt;In the end this was really broken by the work to release the lock before the WAL is sync&apos;ed (and since for that be correct MVCC need to be rolled forward after the WAL sync&apos;ed, which means after the lock was released).&lt;/p&gt;</comment>
                            <comment id="13485358" author="ram_krish" created="Sat, 27 Oct 2012 05:01:37 +0000"  >&lt;p&gt;@Gregory&lt;br/&gt;
Option #3 can you pls explain more.&lt;br/&gt;
Option #2-&amp;gt; what is the infeasibility you see? I have not thought on the soln for this anyway.  If it is feasible i prefer #2.&lt;/p&gt;</comment>
                            <comment id="13485497" author="lhofhansl" created="Sat, 27 Oct 2012 20:54:15 +0000"  >&lt;p&gt;Thinking about this a bit more. Maybe the &quot;nuclear&quot; option isn&apos;t that nuclear after all.&lt;br/&gt;
The internalPut or internalDelete of checkAndMutate will wait for all prior transactions to finish anyway. Now we just wait in the beginning, so we get only slightly less concurrency but correctness.&lt;/p&gt;

&lt;p&gt;I think the same will actually work for Increment and Append and we can get rid of the setting-the-memstoreTS-to-0 nonsense.&lt;/p&gt;</comment>
                            <comment id="13485498" author="lhofhansl" created="Sat, 27 Oct 2012 20:55:25 +0000"  >&lt;p&gt;Hit &quot;Add&quot; too early. Of course if the check condition is false, we get worse performance because now we waited for all previous transaction where in old code we wouldn&apos;t have.&lt;/p&gt;</comment>
                            <comment id="13485504" author="lhofhansl" created="Sat, 27 Oct 2012 21:10:03 +0000"  >&lt;p&gt;Also revived &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4583&quot; title=&quot;Integrate RWCC with Append and Increment operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4583&quot;&gt;&lt;del&gt;HBASE-4583&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13485530" author="lhofhansl" created="Sun, 28 Oct 2012 00:07:59 +0000"  >&lt;p&gt;Just posted a patch to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4583&quot; title=&quot;Integrate RWCC with Append and Increment operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4583&quot;&gt;&lt;del&gt;HBASE-4583&lt;/del&gt;&lt;/a&gt;. We can do something similar here.&lt;br/&gt;
Gregory, were you going to work on this? Otherwise I&apos;ll assign it to me.&lt;/p&gt;</comment>
                            <comment id="13485551" author="gchanan" created="Sun, 28 Oct 2012 02:26:32 +0000"  >&lt;p&gt;@Ram:&lt;br/&gt;
regarding option 3: for an increment imagine you can just insert something into the memstore that says &quot;increment by x&quot;.  Since you don&apos;t have to read, you can just do what all the other writes do (i.e. don&apos;t wait for MVCC, just hold the row lock up to the sync point).  Reads become more complicated, of course.&lt;/p&gt;

&lt;p&gt;Option 2:&lt;br/&gt;
I was just thinking you would need to spend some memory per-row to hold the MVCC.  Probably okay (similar to the row lock already?), but would need some investigation.&lt;/p&gt;

&lt;p&gt;@Lars:&lt;br/&gt;
If you were to assign this to yourself, what approach would you take?  Holding the row lock until the WAL is synced during writes?  Waiting for all transactions to complete in read/updates?&lt;/p&gt;

&lt;p&gt;I&apos;m down for trying out the #2 idea.  We could benchmark it against the other approaches.  Perhaps I should file a new JIRA for that?&lt;/p&gt;</comment>
                            <comment id="13485565" author="lhofhansl" created="Sun, 28 Oct 2012 04:15:35 +0000"  >&lt;p&gt;I&apos;d probably go with #1 honestly (as I said above it&apos;s not as nuclear as I had thought). I do not think #2 or #3 are worth the effort/risk.&lt;/p&gt;

&lt;p&gt;We always wait for all other transactions - in this region - to finish (that is true even for normal puts), this is a nice and simple design in HBase. Changing that to MVCC/row would also break the multi row transaction stuff I added (but that is only exposed through a coprocessor endpoint so breaking that would potentially be OK).&lt;/p&gt;

&lt;p&gt;MVCC is already per region, I do not think we should add a finer granularity here.&lt;/p&gt;</comment>
                            <comment id="13485704" author="lhofhansl" created="Sun, 28 Oct 2012 20:04:41 +0000"  >&lt;p&gt;BTW, the approach I took in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4583&quot; title=&quot;Integrate RWCC with Append and Increment operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4583&quot;&gt;&lt;del&gt;HBASE-4583&lt;/del&gt;&lt;/a&gt; is akin to #1.&lt;/p&gt;</comment>
                            <comment id="13487545" author="lhofhansl" created="Wed, 31 Oct 2012 05:30:06 +0000"  >&lt;p&gt;I would say this (checkAndXXX) is somewhat more critical than &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4583&quot; title=&quot;Integrate RWCC with Append and Increment operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4583&quot;&gt;&lt;del&gt;HBASE-4583&lt;/del&gt;&lt;/a&gt; as it can actually lead to incorrect, &lt;b&gt;permanent&lt;/b&gt; results.&lt;/p&gt;</comment>
                            <comment id="13487553" author="lhofhansl" created="Wed, 31 Oct 2012 05:36:54 +0000"  >&lt;p&gt;Super simple patch. Just wait for prior MVCC transactions to finish, before we execute the Get.&lt;/p&gt;</comment>
                            <comment id="13487581" author="hadoopqa" created="Wed, 31 Oct 2012 06:29:13 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12551489/7051.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12551489/7051.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 85 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.wal.TestHLogSplit&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3197//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13488143" author="gchanan" created="Wed, 31 Oct 2012 19:35:00 +0000"  >&lt;p&gt;Patch looks good.  Mind testing with Ram&apos;s test patch over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7071&quot; title=&quot;Allow for user defined Data in HBase Table &amp;amp; ColumnFamily definitions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7071&quot;&gt;HBASE-7071&lt;/a&gt;?  (I.e. that it fails w/o your patch, passes with).&lt;/p&gt;</comment>
                            <comment id="13488160" author="lhofhansl" created="Wed, 31 Oct 2012 19:51:35 +0000"  >&lt;p&gt;You mean &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7077&quot; title=&quot;Test for: CheckAndPut should properly read MVCC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7077&quot;&gt;&lt;del&gt;HBASE-7077&lt;/del&gt;&lt;/a&gt; I assume &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Yeah, will have a look.&lt;/p&gt;</comment>
                            <comment id="13488163" author="lhofhansl" created="Wed, 31 Oct 2012 19:56:36 +0000"  >&lt;p&gt;Yep... Fails without this patch, but passes with it.&lt;br/&gt;
This should go into 0.94 and 0.96.&lt;/p&gt;</comment>
                            <comment id="13488174" author="lhofhansl" created="Wed, 31 Oct 2012 19:59:51 +0000"  >&lt;p&gt;OK... Lemme commit this, followed by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7071&quot; title=&quot;Allow for user defined Data in HBase Table &amp;amp; ColumnFamily definitions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7071&quot;&gt;HBASE-7071&lt;/a&gt;. Any objections?&lt;/p&gt;</comment>
                            <comment id="13488176" author="gchanan" created="Wed, 31 Oct 2012 20:02:04 +0000"  >&lt;p&gt;I&apos;m +1 on this.  I haven&apos;t looked at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7071&quot; title=&quot;Allow for user defined Data in HBase Table &amp;amp; ColumnFamily definitions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7071&quot;&gt;HBASE-7071&lt;/a&gt; enough to +1 it.  Want me to?&lt;/p&gt;</comment>
                            <comment id="13488268" author="lhofhansl" created="Wed, 31 Oct 2012 21:52:20 +0000"  >&lt;p&gt;Sigh... I also meant &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7077&quot; title=&quot;Test for: CheckAndPut should properly read MVCC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7077&quot;&gt;&lt;del&gt;HBASE-7077&lt;/del&gt;&lt;/a&gt;. So this one + &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7077&quot; title=&quot;Test for: CheckAndPut should properly read MVCC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7077&quot;&gt;&lt;del&gt;HBASE-7077&lt;/del&gt;&lt;/a&gt;. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13488287" author="lhofhansl" created="Wed, 31 Oct 2012 22:05:28 +0000"  >&lt;p&gt;Committed to 0.94 and 0.96.&lt;br/&gt;
Thanks for bringing up the issue and Gregory and the review.&lt;/p&gt;</comment>
                            <comment id="13488513" author="hudson" created="Thu, 1 Nov 2012 06:53:24 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #562 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/562/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/562/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7051&quot; title=&quot;CheckAndPut should properly read MVCC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7051&quot;&gt;&lt;del&gt;HBASE-7051&lt;/del&gt;&lt;/a&gt; CheckAndPut should properly read MVCC (Revision 1404379)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13488579" author="hudson" created="Thu, 1 Nov 2012 09:47:16 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3503 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3503/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3503/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7051&quot; title=&quot;CheckAndPut should properly read MVCC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7051&quot;&gt;&lt;del&gt;HBASE-7051&lt;/del&gt;&lt;/a&gt; CheckAndPut should properly read MVCC (Revision 1404377)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13490359" author="hudson" created="Mon, 5 Nov 2012 01:35:34 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #9 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/9/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/9/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7051&quot; title=&quot;CheckAndPut should properly read MVCC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7051&quot;&gt;&lt;del&gt;HBASE-7051&lt;/del&gt;&lt;/a&gt; CheckAndPut should properly read MVCC (Revision 1404379)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12614113">HBASE-7077</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12526942">HBASE-4583</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12551489" name="7051.txt" size="672" author="lhofhansl" created="Wed, 31 Oct 2012 05:36:54 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12614112">HBASE-7076</subtask>
                            <subtask id="12614113">HBASE-7077</subtask>
                            <subtask id="12614114">HBASE-7078</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 25 Oct 2012 03:31:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>250932</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 6 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0b2jz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>62526</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>