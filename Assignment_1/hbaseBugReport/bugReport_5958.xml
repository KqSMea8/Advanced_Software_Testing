<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:32:30 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5958/HBASE-5958.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5958] Replace ByteString.copyFrom with new ByteString()</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5958</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;ByteString.copyFrom makes a copy of a byte array in case it is changed in other thread.&lt;br/&gt;
In most case, we don&apos;t need to worry about that.  We should avoid copying the bytes&lt;br/&gt;
for performance issue.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12554347">HBASE-5958</key>
            <summary>Replace ByteString.copyFrom with new ByteString()</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="6">Invalid</resolution>
                                        <assignee username="jxiang">Jimmy Xiang</assignee>
                                    <reporter username="jxiang">Jimmy Xiang</reporter>
                        <labels>
                    </labels>
                <created>Tue, 8 May 2012 17:34:38 +0000</created>
                <updated>Mon, 23 Sep 2013 18:23:54 +0000</updated>
                            <resolved>Fri, 8 Jun 2012 16:28:02 +0000</resolved>
                                    <version>0.95.2</version>
                                                    <component>Performance</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13270654" author="tlipcon" created="Tue, 8 May 2012 17:58:25 +0000"  >&lt;p&gt;Hi Jimmy. The constructor you referenced above is private... are you suggesting using reflection to access it or something?&lt;/p&gt;</comment>
                            <comment id="13270661" author="jxiang" created="Tue, 8 May 2012 18:04:05 +0000"  >&lt;p&gt;Too bad.  I didn&apos;t realize it is private.  Why is that?  It is immutable any way, right?&lt;/p&gt;</comment>
                            <comment id="13270668" author="tlipcon" created="Tue, 8 May 2012 18:11:58 +0000"  >&lt;p&gt;The protobuf people have a strong reticence to allowing ByteString construction without a copy.&lt;/p&gt;

&lt;p&gt;One solution would be to switch to protostuff, which does allow this kind of thing, but would be a bigger change. (though it&apos;s still wire-compatible)&lt;/p&gt;</comment>
                            <comment id="13270672" author="gchanan" created="Tue, 8 May 2012 18:16:55 +0000"  >&lt;p&gt;Did you look at this Jimmy?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://comments.gmane.org/gmane.comp.lib.protocol-buffers.general/6406&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://comments.gmane.org/gmane.comp.lib.protocol-buffers.general/6406&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&quot;But yes, if you start with a byte[], and you want a ByteString with the same content, you are going to need to make a copy, because ByteString has to guarantee immutability.&quot;&lt;/p&gt;</comment>
                            <comment id="13270675" author="stack" created="Tue, 8 May 2012 18:20:07 +0000"  >&lt;p&gt;Boo to buffer copies!&lt;/p&gt;</comment>
                            <comment id="13270685" author="tlipcon" created="Tue, 8 May 2012 18:28:13 +0000"  >&lt;p&gt;In my mind the two possible solutions are :&lt;br/&gt;
1) use protostuff&lt;br/&gt;
2) use my earlier idea of a &quot;data dictionary&quot; at the front of our RPC requests. Essentially, we&apos;d change the RPC request/response mechanism so that before each message (or perhaps after), we send a list of KeyValues (or byte strings). Then in the actual Put/Result/whatever protos, we just use vint32s to refer back to the dictionary. That would allow us to manually send out the KeyValues using a CodedOutputStream rather than having to build a full protobuf which includes them, if that makes sense.&lt;/p&gt;</comment>
                            <comment id="13270694" author="stack" created="Tue, 8 May 2012 18:37:35 +0000"  >&lt;p&gt;Looks like adding protostuff could help elsewhere; it looks like we can generate classes as part of the build w/o having to rely on external pb compiler being on the build path.&lt;/p&gt;

&lt;p&gt;Shouldn&apos;t we do data dictionary whether protostuff or not?  Seems like a generally good idea (tm)&lt;/p&gt;</comment>
                            <comment id="13270738" author="eclark" created="Tue, 8 May 2012 19:20:56 +0000"  >&lt;p&gt;Protostuff is usually a little bit faster as well.  &lt;a href=&quot;https://github.com/eishay/jvm-serializers/wiki/Home/25fd014e66738268670adaf44ff5408ba2244d37&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/eishay/jvm-serializers/wiki/Home/25fd014e66738268670adaf44ff5408ba2244d37&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I haven&apos;t personally run those benchmarks in a while and it looks like the most recent are not up yet.  But still something to consider.&lt;/p&gt;</comment>
                            <comment id="13275001" author="jxiang" created="Mon, 14 May 2012 22:07:07 +0000"  >&lt;p&gt;KeyValue is kind of immutable.  Can we make KeyValue based on ByteString, instead of byte[]?  If so, we can avoid copying around too.&lt;/p&gt;</comment>
                            <comment id="13276001" author="jxiang" created="Tue, 15 May 2012 17:17:03 +0000"  >&lt;p&gt;By the way, is it an option to use reflection to access the private constructor? If so, I can have a wrap method to use the private constructor, or the original copyFrom if the private constructor is not accessible. Reflection has overhead of course.&lt;/p&gt;</comment>
                            <comment id="13276021" author="tlipcon" created="Tue, 15 May 2012 17:29:35 +0000"  >&lt;p&gt;Makes me nervous to reach in and use the private constructor... do you have some benchmarks that show that there&apos;s a noticeable speedup by doing so?&lt;/p&gt;</comment>
                            <comment id="13276032" author="jxiang" created="Tue, 15 May 2012 17:35:09 +0000"  >&lt;p&gt;I don&apos;t have a benchmark yet.  Based on profiling, copyFrom and toByteArray are some hotspots.&lt;/p&gt;</comment>
                            <comment id="13291847" author="jxiang" created="Fri, 8 Jun 2012 16:28:02 +0000"  >&lt;p&gt;Close it as Invalid.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12547649">HBASE-5620</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12553167">HBASE-5889</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 8 May 2012 17:58:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>238577</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 28 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hucn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>102179</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>