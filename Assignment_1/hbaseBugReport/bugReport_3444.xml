<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:10:15 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3444/HBASE-3444.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3444] Test to prove Bytes.toBytesBinary and Bytes.toStringBinary()  is reversible</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3444</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Bytes.toStringBinary() doesn&apos;t escape \.&lt;/p&gt;

&lt;p&gt;Otherwise the transformation isn&apos;t reversible&lt;/p&gt;

&lt;p&gt;byte[] a = &lt;/p&gt;
{&apos;\&apos;, &apos;x&apos; , &apos;0&apos;, &apos;0&apos;}

&lt;p&gt;Bytes.toBytesBinary(Bytes.toStringBinary(a)) won&apos;t be equal to a&lt;/p&gt;</description>
                <environment></environment>
        <key id="12495604">HBASE-3444</key>
            <summary>Test to prove Bytes.toBytesBinary and Bytes.toStringBinary()  is reversible</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dallmkp">Ken Dallmeyer</assignee>
                                    <reporter username="khemani">Prakash Khemani</reporter>
                        <labels>
                    </labels>
                <created>Fri, 14 Jan 2011 17:14:53 +0000</created>
                <updated>Mon, 23 Sep 2013 18:31:12 +0000</updated>
                            <resolved>Fri, 12 Oct 2012 19:50:38 +0000</resolved>
                                                    <fixVersion>0.95.0</fixVersion>
                                        <due></due>
                            <votes>1</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13245089" author="simongdkelly" created="Tue, 3 Apr 2012 09:30:01 +0000"  >&lt;p&gt;Also results in java.lang.StringIndexOutOfBoundsException in Bytes.toBytesBinary if the byte[] ends in a &apos;\&apos;&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] bytes = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]{&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;\&apos;};
Bytes.toBytesBinary(Bytes.toStringBinary(bytes));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13245384" author="stack" created="Tue, 3 Apr 2012 15:06:07 +0000"  >&lt;p&gt;Do you have a patch for us Simon?  Thanks.&lt;/p&gt;</comment>
                            <comment id="13473344" author="dallmkp" created="Wed, 10 Oct 2012 16:29:04 +0000"  >&lt;p&gt;I was looking into a way to fix this so that I can make it reversible.  The main problem as I see is that the &apos;\&apos; character is both a printable character in Bytes.toStringBinary and an indicator for hex characters in Bytes.toBytesBinary.  Either Bytes.toStringBinary should not consider &apos;\&apos; as printable OR Bytes.toBytesBinary should handle lone &apos;\&apos; cases where it doesn&apos;t prefix a hex number.&lt;/p&gt;

&lt;p&gt;Below are modifications to two methods that handle either case.  Whichever one you choose, you don&apos;t have to choose the other.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;&lt;b&gt;Modify Bytes.toStringBinary to not consider &apos;\&apos; as a printable character&lt;/b&gt;&lt;br/&gt;
Removes &lt;br class=&quot;atl-forced-newline&quot; /&gt; from the if statement
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; toStringBinary(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] b, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; off, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; len) {
    StringBuilder result = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StringBuilder();
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; first = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;(b, off, len, &lt;span class=&quot;code-quote&quot;&gt;&quot;ISO-8859-1&quot;&lt;/span&gt;);
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; first.length() ; ++i ) {
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; ch = first.charAt(i) &amp;amp; 0xFF;
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ( (ch &amp;gt;= &apos;0&apos; &amp;amp;&amp;amp; ch &amp;lt;= &apos;9&apos;)
            || (ch &amp;gt;= &apos;A&apos; &amp;amp;&amp;amp; ch &amp;lt;= &apos;Z&apos;)
            || (ch &amp;gt;= &apos;a&apos; &amp;amp;&amp;amp; ch &amp;lt;= &apos;z&apos;)
            || &lt;span class=&quot;code-quote&quot;&gt;&quot; `~!@#$%^&amp;amp;*()-_=+[]{}|;:&apos;\&quot;&lt;/span&gt;,.&amp;lt;&amp;gt;/?&quot;.indexOf(ch) &amp;gt;= 0 ) { &lt;span class=&quot;code-comment&quot;&gt;// Change made here to remove &apos;\\&apos;
&lt;/span&gt;          result.append(first.charAt(i));
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
          result.append(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.format(&lt;span class=&quot;code-quote&quot;&gt;&quot;\\x%02X&quot;&lt;/span&gt;, ch));
        }
      }
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (UnsupportedEncodingException e) {
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.err.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;ISO-8859-1 not supported?&quot;&lt;/span&gt;);
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; result.toString();
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;ol&gt;
	&lt;li&gt;&lt;b&gt;Modify Bytes.toBytesBinary to consider standalone &apos;\&apos;&lt;/b&gt;&lt;br/&gt;
The problem is that the last &apos;\&apos; is causing out of bounds issues.  Just check to see if there is more to the array.
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] toBytesBinary(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; in) {
      &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; may be bigger than we need, but lets be safe.
&lt;/span&gt;      &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] b = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[in.length()];
      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; size = 0;
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; in.length(); ++i) {
        &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt; ch = in.charAt(i);
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (ch == &apos;\\&apos;) {
          &lt;span class=&quot;code-comment&quot;&gt;// begin hex escape:
&lt;/span&gt;          &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt; next = i+1 &amp;lt; in.length() ? in.charAt(i+1) : ch; &lt;span class=&quot;code-comment&quot;&gt;// Change made here to check &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; array out of bounds
&lt;/span&gt;          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (next != &apos;x&apos;) {
            &lt;span class=&quot;code-comment&quot;&gt;// invalid escape sequence, ignore &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; one.
&lt;/span&gt;            b[size++] = (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)ch;
            &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
          }
          &lt;span class=&quot;code-comment&quot;&gt;// ok, take next 2 hex digits.
&lt;/span&gt;          &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt; hd1 = in.charAt(i+2);
          &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt; hd2 = in.charAt(i+3);

          &lt;span class=&quot;code-comment&quot;&gt;// they need to be A-F0-9:
&lt;/span&gt;          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!isHexDigit(hd1) ||
              !isHexDigit(hd2)) {
            &lt;span class=&quot;code-comment&quot;&gt;// bogus escape code, ignore:
&lt;/span&gt;            &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
          }
          &lt;span class=&quot;code-comment&quot;&gt;// turn hex ASCII digit -&amp;gt; number
&lt;/span&gt;          &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; d = (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;) ((toBinaryFromHex((&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)hd1) &amp;lt;&amp;lt; 4) + toBinaryFromHex((&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)hd2));

          b[size++] = d;
          i += 3; &lt;span class=&quot;code-comment&quot;&gt;// skip 3
&lt;/span&gt;        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
          b[size++] = (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;) ch;
        }
      }
      &lt;span class=&quot;code-comment&quot;&gt;// resize:
&lt;/span&gt;      &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] b2 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[size];
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.arraycopy(b, 0, b2, 0, size);
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; b2;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;ol&gt;
	&lt;li&gt;&lt;b&gt;Test case for both&lt;/b&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testToStringBinary_toBytesBinary_Reversable() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; bytes = Bytes.toStringBinary(Bytes.toBytes(2.17));
        assertEquals(2.17, Bytes.toDouble(Bytes.toBytesBinary(bytes)), 0);        
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13473355" author="hoffman60613" created="Wed, 10 Oct 2012 16:49:00 +0000"  >&lt;p&gt;Nice work Ken.  Hopefully this will get picked up soon.&lt;/p&gt;</comment>
                            <comment id="13473375" author="yuzhihong@gmail.com" created="Wed, 10 Oct 2012 17:12:45 +0000"  >&lt;p&gt;I would choose &quot;Modify Bytes.toBytesBinary to consider standalone &apos;\&apos;&quot;&lt;/p&gt;</comment>
                            <comment id="13473837" author="stack" created="Thu, 11 Oct 2012 04:49:13 +0000"  >&lt;p&gt;I agree that we should change toBytesBinary.  Mind making a patch &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dallmkp&quot; class=&quot;user-hover&quot; rel=&quot;dallmkp&quot;&gt;Ken Dallmeyer&lt;/a&gt;?  Thanks for looking at this.&lt;/p&gt;</comment>
                            <comment id="13474379" author="yuzhihong@gmail.com" created="Thu, 11 Oct 2012 18:07:52 +0000"  >&lt;p&gt;Patch based on the code Ken posted.&lt;/p&gt;</comment>
                            <comment id="13474441" author="hadoopqa" created="Thu, 11 Oct 2012 19:07:33 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12548782/3444.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12548782/3444.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 81 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestSplitLogManager&lt;br/&gt;
                  org.apache.hadoop.hbase.catalog.TestMetaReaderEditor&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3034//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13475196" author="jxiang" created="Fri, 12 Oct 2012 17:50:49 +0000"  >&lt;p&gt;This patch looks the same as what we have in trunk:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; if (ch == &apos;\\&apos; &amp;amp;&amp;amp; in.length() &amp;gt; i+1 &amp;amp;&amp;amp; in.charAt(i+1) == &apos;x&apos;) 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Did I miss anything?&lt;/p&gt;</comment>
                            <comment id="13475197" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 17:53:39 +0000"  >&lt;p&gt;@Jimmy:&lt;br/&gt;
The patch modifies the above line of code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (ch == &apos;\\&apos; &amp;amp;&amp;amp; in.length() &amp;gt; i+1 &amp;amp;&amp;amp; in.charAt(i+1) == &apos;x&apos;) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can you take a second look ?&lt;/p&gt;</comment>
                            <comment id="13475246" author="jxiang" created="Fri, 12 Oct 2012 19:01:21 +0000"  >&lt;p&gt;To me, the patch moved the second part of the condition inside the block, so essentially, it is the same, right?&lt;/p&gt;</comment>
                            <comment id="13475253" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 19:07:12 +0000"  >&lt;p&gt;No the patch is not the same as current code. See this boundary check:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt; next = i+1 &amp;lt; in.length() ? in.charAt(i+1) : ch; &lt;span class=&quot;code-comment&quot;&gt;// check &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; array out of bounds&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Without the above, in.charAt(i+1) would produce ArrayIndexOutOfBoundsException&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13475254" author="stack" created="Fri, 12 Oct 2012 19:07:13 +0000"  >&lt;p&gt;What is the trunk issue &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt;?  Is this a dup then?&lt;/p&gt;</comment>
                            <comment id="13475263" author="jxiang" created="Fri, 12 Oct 2012 19:19:30 +0000"  >&lt;p&gt;@Stack, A duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6518&quot; title=&quot;Bytes.toBytesBinary() incorrect trailing backslash escape&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6518&quot;&gt;&lt;del&gt;HBASE-6518&lt;/del&gt;&lt;/a&gt;, or the other way around?&lt;/p&gt;

&lt;p&gt;@Ted, jvm will check in.length() &amp;gt; i+1, at first, only if it is true, then it will check in.charAt(i+1)&lt;br/&gt;
so there is no ArrayIndexOutOfBoundsException issue actually. Without the patch, the new unit test should be ok.&lt;/p&gt;</comment>
                            <comment id="13475271" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 19:29:03 +0000"  >&lt;p&gt;Looks like &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6518&quot; title=&quot;Bytes.toBytesBinary() incorrect trailing backslash escape&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6518&quot;&gt;&lt;del&gt;HBASE-6518&lt;/del&gt;&lt;/a&gt; has fixed this issue in trunk.&lt;/p&gt;

&lt;p&gt;Thanks Jimmy.&lt;/p&gt;</comment>
                            <comment id="13475289" author="stack" created="Fri, 12 Oct 2012 19:47:41 +0000"  >&lt;p&gt;Here is test only from the patch.  When I run it on trunk it passes.  Let me commit the test as part of this issue.&lt;/p&gt;</comment>
                            <comment id="13475291" author="stack" created="Fri, 12 Oct 2012 19:50:38 +0000"  >&lt;p&gt;Committed the test only.   It proves that &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6518&quot; title=&quot;Bytes.toBytesBinary() incorrect trailing backslash escape&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6518&quot;&gt;&lt;del&gt;HBASE-6518&lt;/del&gt;&lt;/a&gt; works.  Thanks for the patch Ken.&lt;/p&gt;</comment>
                            <comment id="13475357" author="hudson" created="Fri, 12 Oct 2012 21:13:43 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3446 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3446/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3446/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3444&quot; title=&quot;Test to prove Bytes.toBytesBinary and Bytes.toStringBinary()  is reversible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3444&quot;&gt;&lt;del&gt;HBASE-3444&lt;/del&gt;&lt;/a&gt; Bytes.toBytesBinary and Bytes.toStringBinary() should be reversible (Revision 1397703)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestBytes.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13475442" author="hudson" created="Fri, 12 Oct 2012 23:38:55 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #220 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/220/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/220/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3444&quot; title=&quot;Test to prove Bytes.toBytesBinary and Bytes.toStringBinary()  is reversible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3444&quot;&gt;&lt;del&gt;HBASE-3444&lt;/del&gt;&lt;/a&gt; Bytes.toBytesBinary and Bytes.toStringBinary() should be reversible (Revision 1397703)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestBytes.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13775302" author="stack" created="Mon, 23 Sep 2013 18:31:12 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12548946" name="3444-testonly.txt" size="656" author="stack" created="Fri, 12 Oct 2012 19:47:41 +0000"/>
                            <attachment id="12548782" name="3444.txt" size="1572" author="yuzhihong@gmail.com" created="Thu, 11 Oct 2012 18:07:52 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 3 Apr 2012 09:30:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26865</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02ebr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11922</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>noob</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>