<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:56:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1829/HBASE-1829.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1829] Make use of start/stop row in TableInputFormat</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1829</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Since we can now specify a start and stop row with the Scan that is handed to the TIF we can reduce the splits to the regions that contain these rows. That allows to test large MR jobs on a single region for example.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12435446">HBASE-1829</key>
            <summary>Make use of start/stop row in TableInputFormat</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="larsgeorge">Lars George</assignee>
                                    <reporter username="larsgeorge">Lars George</reporter>
                        <labels>
                    </labels>
                <created>Fri, 11 Sep 2009 16:26:53 +0000</created>
                <updated>Fri, 12 Oct 2012 06:13:23 +0000</updated>
                            <resolved>Mon, 9 Nov 2009 19:36:37 +0000</resolved>
                                    <version>0.20.0</version>
                                    <fixVersion>0.20.2</fixVersion>
                    <fixVersion>0.90.0</fixVersion>
                                        <due></due>
                            <votes>2</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12754201" author="larsgeorge" created="Fri, 11 Sep 2009 16:28:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1829&quot; title=&quot;Make use of start/stop row in TableInputFormat&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1829&quot;&gt;&lt;del&gt;HBASE-1829&lt;/del&gt;&lt;/a&gt;.patch implements the split filtering by start and stop row. Not sure yet about the stopRow being empty in a compare. I will test this later and fix accordingly.&lt;/p&gt;</comment>
                            <comment id="12756271" author="stack" created="Wed, 16 Sep 2009 22:55:27 +0000"  >&lt;p&gt;Lars, tell us more about this patch... what it does.  It looks like a nice change in that if you pass a start/stop row to a Scan, only the regions that contain those start/stop rows will have splits made for them.&lt;/p&gt;

&lt;p&gt;It looks too like you are cleaning up some weird crap; i.e.:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; realNumSplits = startKeys.length;
-    InputSplit[] splits = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InputSplit[realNumSplits];
-    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; middle = startKeys.length / realNumSplits;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;Is this right?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (kvc.compare(startRow, keys.getSecond()[i]) &amp;lt;= 0 &amp;amp;&amp;amp;
+          kvc.compare(stopRow, keys.getFirst()[i]) &amp;gt;= 0) { 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Regions do not include their end-key (exclusive).&lt;/p&gt;

&lt;p&gt;Its hard to test this but I gave it a go.  Seems like it hasn&apos;t broken anything (smile).&lt;/p&gt;</comment>
                            <comment id="12756273" author="stack" created="Wed, 16 Sep 2009 22:57:18 +0000"  >&lt;p&gt;Or, rather, I got this when I tried the patch (RowCounter on a table loaded up with PE):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
09/09/16 15:56:23 INFO zookeeper.ClientCnxn: Server connection successful
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; java.lang.ArrayIndexOutOfBoundsException: -1
	at org.apache.hadoop.hbase.KeyValue$KeyComparator.compare(KeyValue.java:1722)
	at org.apache.hadoop.hbase.KeyValue$KeyComparator.compare(KeyValue.java:1758)
	at org.apache.hadoop.hbase.mapreduce.TableInputFormatBase.getSplits(TableInputFormatBase.java:296)
	at org.apache.hadoop.mapred.JobClient.writeNewSplits(JobClient.java:885)
	at org.apache.hadoop.mapred.JobClient.submitJobInternal(JobClient.java:779)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:432)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:447)
	at org.apache.hadoop.hbase.mapreduce.RowCounter.main(RowCounter.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:68)
	at org.apache.hadoop.util.ProgramDriver.driver(ProgramDriver.java:139)
	at org.apache.hadoop.hbase.mapreduce.Driver.main(Driver.java:41)

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12756385" author="larsgeorge" created="Thu, 17 Sep 2009 06:42:12 +0000"  >&lt;p&gt;You are right Michael, it cleans up some remnants from when we could have different numbers of splits. It also attempts to reduce the split count to the number of regions that include start and stop row. The idea with the comparison is to find the start key of the region just below the start row and the end key of the region just after the stop row. &lt;/p&gt;

&lt;p&gt;I am not sure about the default empty end row and also the comparison in terms of equal or equal and greater etc. I just thought I get the patch up as an idea I had but it is not yet tested. I will test it early next week an sort out the issues.&lt;/p&gt;

&lt;p&gt;Question is there a testbed that allows to have say 3-4 regions so that I can construct various test cases (like start/stop row both in first/last region, spanning all regions, crossing only two regions etc.)? I am not too familiar with the test classes and I know you guys changing things around. What would be a good sample to start with?&lt;/p&gt;

&lt;p&gt;Otherwise I will test it on my live cluster that has more than enough to test with. But a unit test seems like a good idea.&lt;/p&gt;</comment>
                            <comment id="12756599" author="streamy" created="Thu, 17 Sep 2009 15:53:47 +0000"  >&lt;p&gt;There is some interesting stuff in TestTableMapReduce which extends MultiRegionTable.&lt;/p&gt;

&lt;p&gt;Rather simply you can just insert a bunch of sequential rows and run manual splits to create multiple regions.  There&apos;s a unit test out there that does that nicely I forget which one.  But by knowing what the split points will be, will be pretty easy to at least test the algorithm.&lt;/p&gt;</comment>
                            <comment id="12756651" author="stack" created="Thu, 17 Sep 2009 17:41:40 +0000"  >&lt;p&gt;Lars: I&apos;d judge this a nice-to-have rather than a required for 0.20.1.  Should we move it out?&lt;/p&gt;</comment>
                            <comment id="12757855" author="larsgeorge" created="Mon, 21 Sep 2009 09:22:03 +0000"  >&lt;p&gt;Michael, yes, that can be pushed out, just thought I dump it here so I can work on it and get comments early.&lt;/p&gt;

&lt;p&gt;Jon, thanks for the pointer, I will add a unit test for it this week and test accordingly. &lt;/p&gt;</comment>
                            <comment id="12757929" author="stack" created="Mon, 21 Sep 2009 15:39:29 +0000"  >&lt;p&gt;@Lars good stuff.. moving it out&lt;/p&gt;</comment>
                            <comment id="12760548" author="larsgeorge" created="Tue, 29 Sep 2009 10:29:42 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1829&quot; title=&quot;Make use of start/stop row in TableInputFormat&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1829&quot;&gt;&lt;del&gt;HBASE-1829&lt;/del&gt;&lt;/a&gt;-v2.patch fixes error Stack got above. Comparing cannot be done with KeyValue comparators but Bytes.compareTo() directly. Also fixed issues with start and stop row. Scan by default has a value assigned to them and does not return &quot;null&quot;. Comparing to HConstants.EMPTY_START_ROW for example did not work, so I chose checking the length instead.&lt;/p&gt;

&lt;p&gt;Tested with a real data set and it works for subrange and full scan. Will still add unit test. Just thought I up the patch here for progress tracking.&lt;/p&gt;</comment>
                            <comment id="12764260" author="kweiner" created="Fri, 9 Oct 2009 23:59:00 +0000"  >&lt;p&gt;Does this patch guarantee that the only rows passed to the mapper are the ones that fall between the start and stop rows specified in the Scan?  Or will I get rows that fall before the start row within the first split and some rows that fall after the end row within the last split?&lt;/p&gt;</comment>
                            <comment id="12764317" author="larsgeorge" created="Sat, 10 Oct 2009 08:50:01 +0000"  >&lt;p&gt;Hey Ken,&lt;/p&gt;

&lt;p&gt;I assumed that it will only really send in the rows between start row (inclusive) and stop row (exclusive) because the TIF uses the Scan instance to scan the actual table and setting these two values should enforce the boundaries.&lt;/p&gt;

&lt;p&gt;I was travelling the last few days and did not get much done. I was in the process of adding a unit test for the change that should show that it selects the right regions as well as enforce the start/stop row boundaries. I will see that I get that done asap. If it passes it is all ready to go. &lt;/p&gt;</comment>
                            <comment id="12764318" author="larsgeorge" created="Sat, 10 Oct 2009 08:58:21 +0000"  >&lt;p&gt;No, you are right Ken, in createRecordReader() it does:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Scan sc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Scan(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.scan);
sc.setStartRow(tSplit.getStartRow());
sc.setStopRow(tSplit.getEndRow());
trr.setScan(sc);
trr.setHTable(table);
trr.init();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which sets the boundaries to the current split, while not honoring the set start/stop row. I will have to add another row key comparison to set it to the appropriate keys. I think it should be enough to check like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (scan.getStartRow().length == 0) sc.setStartRow(tSplit.getStartRow());
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (scan.getStopRow().length == 0) sc.setStopRow(tSplit.getEndRow());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Right? I&apos;ll will check this when doing the unit tests.&lt;/p&gt;</comment>
                            <comment id="12772362" author="stack" created="Sun, 1 Nov 2009 20:59:57 +0000"  >&lt;p&gt;Upped priority.  This is a nice feature.  Would be good to get it into 0.20.2 even (Marked it for there for now).&lt;/p&gt;</comment>
                            <comment id="12773046" author="larsgeorge" created="Tue, 3 Nov 2009 12:56:47 +0000"  >&lt;p&gt;I have updated the test to JUnit4 and added a few helpful functions to the test utility class, like starting a MapReduce cluster. What I have trouble with now is adding the multi region code. I have added a createMultiRegion(...) method but that previously used some intrinsic knowledge of how to set up the regions and fill with rows in between. Since I am not sure if I have to copy that all I stopped short and added a few &quot;FIXME&quot; comments in the utility class where I am not sure what to do without creating a possibly a mess.&lt;/p&gt;

&lt;p&gt;Could someone take my two classes and let me know what I have to do? After that I will add the appropriate test cases covering all region combinations. I have two already and they complete successfully - but since the table has only one region it makes no sense yet.&lt;/p&gt;

&lt;p&gt;Check the @BeforeClass to see how I intended to use them. Maybe that also needs slight adjustments?&lt;/p&gt;</comment>
                            <comment id="12774416" author="larsgeorge" created="Fri, 6 Nov 2009 21:30:36 +0000"  >&lt;p&gt;OK, after pretty much two days of getting up to speed with how the regions mechanism works I had to add a hook to flush the region cache in HConnection. WIth that I was able to recreate the old MultiRegion functionality in the new HBaseTestingUtility. &lt;/p&gt;

&lt;p&gt;I have added 11 subtests that cover all combinations of empty or not empty start and stop rows as well as single region to spanning many regions scans. All succeed, but please someone review the big &quot;if&quot; statement in TableInputFormatBase.getSplits(). I want to make sure I have that right. The tests say yes, but a second pair of eyes is appreciated.&lt;/p&gt;</comment>
                            <comment id="12774417" author="larsgeorge" created="Fri, 6 Nov 2009 21:32:03 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1829&quot; title=&quot;Make use of start/stop row in TableInputFormat&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1829&quot;&gt;&lt;del&gt;HBASE-1829&lt;/del&gt;&lt;/a&gt;-v3 adds code and tests.&lt;/p&gt;</comment>
                            <comment id="12774700" author="stack" created="Sun, 8 Nov 2009 01:08:21 +0000"  >&lt;p&gt;Patch looks great Lars.  It looks like you forgot to add TestTableInputFormatScan.java to v3 of your patch.  Is that right?  If so, I can just apply v3 and add TestTableInputFormatScan.java?&lt;/p&gt;

&lt;p&gt;What you think we should do for 0.20?  Just not add it to the branch?  Tests depend on the new stuff?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12774758" author="larsgeorge" created="Sun, 8 Nov 2009 11:31:39 +0000"  >&lt;p&gt;Sorry Michael, forgot to do a &quot;svn add&quot; for the new class &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1829&quot; title=&quot;Make use of start/stop row in TableInputFormat&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1829&quot;&gt;&lt;del&gt;HBASE-1829&lt;/del&gt;&lt;/a&gt;-v4 patch has new class included in addition to v3 patch content. Sorry for the confusion.&lt;/p&gt;</comment>
                            <comment id="12774841" author="stack" created="Mon, 9 Nov 2009 00:38:39 +0000"  >&lt;p&gt;I applied TRUNK.  Shall I apply all but the tests to 0.20 (The tests won&apos;t work in 0.20 branch).  I think it should be fine.  The default behavior is unchanged.  Its only if you provide start/stop rows that behavior changes.&lt;/p&gt;</comment>
                            <comment id="12774971" author="larsgeorge" created="Mon, 9 Nov 2009 13:46:34 +0000"  >&lt;p&gt;Oh, 0.20 branch has old JUnit lib. Hrmm, then we can use it as is as test in trunk is testing it and since these versions are quite close to each other I trust it works as expected. So +1 from me for branch.&lt;/p&gt;</comment>
                            <comment id="12775089" author="stack" created="Mon, 9 Nov 2009 19:36:37 +0000"  >&lt;p&gt;Applied to trunk and branch.  Thanks for the patch Lars.&lt;/p&gt;</comment>
                            <comment id="12775090" author="stack" created="Mon, 9 Nov 2009 19:36:51 +0000"  >&lt;p&gt;Applied to branch too... w/o tests.&lt;/p&gt;</comment>
                            <comment id="12775981" author="larsgeorge" created="Tue, 10 Nov 2009 18:20:43 +0000"  >&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1829&quot; title=&quot;Make use of start/stop row in TableInputFormat&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1829&quot;&gt;&lt;del&gt;HBASE-1829&lt;/del&gt;&lt;/a&gt;-v5 only slightly changes the Test class to test for proper last rows seen. Same outcome (test succeeds) but more correct.&lt;/p&gt;</comment>
                            <comment id="12775987" author="larsgeorge" created="Tue, 10 Nov 2009 18:27:17 +0000"  >&lt;p&gt;v5 patch is on top of v4 patch, in other words v5 only has the diff after v4 is applied. Does that make sense?&lt;/p&gt;</comment>
                            <comment id="12776078" author="stack" created="Tue, 10 Nov 2009 21:02:01 +0000"  >&lt;p&gt;Applied v5.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12420776" name="HBASE-1829-v2.patch" size="3465" author="larsgeorge" created="Tue, 29 Sep 2009 10:29:42 +0000"/>
                            <attachment id="12424227" name="HBASE-1829-v3.patch" size="16219" author="larsgeorge" created="Fri, 6 Nov 2009 21:30:36 +0000"/>
                            <attachment id="12424300" name="HBASE-1829-v4.patch" size="28323" author="larsgeorge" created="Sun, 8 Nov 2009 11:31:39 +0000"/>
                            <attachment id="12424484" name="HBASE-1829-v5.patch" size="1213" author="larsgeorge" created="Tue, 10 Nov 2009 18:20:43 +0000"/>
                            <attachment id="12419317" name="HBASE-1829.patch" size="3429" author="larsgeorge" created="Fri, 11 Sep 2009 16:28:58 +0000"/>
                            <attachment id="12423916" name="HBaseTestingUtility.java" size="17172" author="larsgeorge" created="Tue, 3 Nov 2009 12:56:47 +0000"/>
                            <attachment id="12423917" name="TestTableInputFormatScan.java" size="8016" author="larsgeorge" created="Tue, 3 Nov 2009 12:56:47 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 16 Sep 2009 22:55:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32280</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 6 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08s7b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>49169</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Splits keep within the confines of star and end rows if provided.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>