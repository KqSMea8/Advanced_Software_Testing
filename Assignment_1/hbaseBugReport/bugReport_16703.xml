<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:16:57 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-16703/HBASE-16703.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-16703] Explore object pooling of SeekerState</title>
                <link>https://issues.apache.org/jira/browse/HBASE-16703</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In read workloads 35% of the allocation pressure produced by servicing RPC requests, when block encoding is enabled, comes from BufferedDataBlockEncoder$SeekerState.&amp;lt;init&amp;gt;, where we allocate two byte arrays of INITIAL_KEY_BUFFER_SIZE in length. There&apos;s an opportunity for object pooling of SeekerState here. Subsequent code checks if those byte arrays are sized sufficiently to handle incoming data to copy. The arrays will be resized if needed. &lt;/p&gt;</description>
                <environment></environment>
        <key id="13007397">HBASE-16703</key>
            <summary>Explore object pooling of SeekerState</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Sat, 24 Sep 2016 22:49:09 +0000</created>
                <updated>Wed, 12 Oct 2016 23:58:19 +0000</updated>
                                                                            <component>Performance</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="15519758" author="apurtell" created="Sat, 24 Sep 2016 22:49:18 +0000"  >&lt;p&gt;There&apos;s no reason we can&apos;t hold on to earlier allocated SeekerState objects, and their existing byte arrays, since they&apos;ll reallocate if needed.  A wrinkle is SeekerState is shallow cloned with a wrapper class ClonedSeekerState for use by upper layers. Is that cloning sufficient to protect against reuse of the base SeekerState? I think that is the intent. If insufficient we can still do reference counting of SeekerState objects for deciding when to return them to a shared pool. Also, we can have the pools be thread locals to avoid cross thread synchronization overheads and still get a win on reducing allocations substantially.&lt;/p&gt;</comment>
                            <comment id="15521992" author="stack" created="Mon, 26 Sep 2016 04:15:30 +0000"  >&lt;p&gt;Any pictures to show us &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; w/ the hot allocations? Or, dumb question, where is SeekerState? Thanks.&lt;/p&gt;</comment>
                            <comment id="15522005" author="aoxiang" created="Mon, 26 Sep 2016 04:24:42 +0000"  >&lt;p&gt;SeekerState is org.apache.hadoop.hbase.io.encoding.BufferedDataBlockEncoder.SeekerState.&lt;/p&gt;</comment>
                            <comment id="15522083" author="apurtell" created="Mon, 26 Sep 2016 05:16:59 +0000"  >&lt;p&gt;Ah, I updated the description on the issue.&lt;br/&gt;
Next time I&apos;m working with JFR I&apos;ll capture that info.&lt;/p&gt;</comment>
                            <comment id="15522125" author="ram_krish" created="Mon, 26 Sep 2016 05:38:25 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;&lt;br/&gt;
I was working on this area long time back regarding the byte[] that was getting recreated if the size grows above INITIAL_BUFFER_SIZE. But that was to see if we can avoid the recreation. But I think we can atleast avoid the allocation pressure of the buffer because per SeekerState we are going to keep filling this fixed byte array as per the cell that is retrieved.&lt;br/&gt;
Let me know if I can take this up as this is unassigned. If you are planning to work on it, pls feel free to do so.&lt;/p&gt;</comment>
                            <comment id="15522149" author="apurtell" created="Mon, 26 Sep 2016 05:54:10 +0000"  >&lt;p&gt;Go for it Ram, thank you &lt;/p&gt;</comment>
                            <comment id="15522176" author="anoop.hbase" created="Mon, 26 Sep 2016 06:08:35 +0000"  >&lt;p&gt;Ya as long as we are within the same read op, we will reuse this byte[] to create key. When the cell is created, we will copy into a newly created byte[], of size equal to size of this cell&apos;s key.  So it is not like for every cell we will create byte[] of size INITIAL_BUFFER_SIZE.  But am not sure how is this in 0.98 &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;.  I believe it is not this way.  Might be good to improve there as well.&lt;/p&gt;</comment>
                            <comment id="15522244" author="aoxiang" created="Mon, 26 Sep 2016 06:45:48 +0000"  >&lt;p&gt;0.98 is the same as master and branch 1.  I think the INITIAL_KEY_BUFFER_SIZE(512) is too big, because i think not too much keys will be that long.&lt;/p&gt;</comment>
                            <comment id="15522257" author="ram_krish" created="Mon, 26 Sep 2016 06:53:14 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="15523359" author="apurtell" created="Mon, 26 Sep 2016 15:21:52 +0000"  >&lt;p&gt;Bear in mind what I am seeing is in the JFR trace 35% of the time when the JVM goes to allocate a TLAB it&apos;s because we are asking for a SeekerState object and this is the top line of the allocation profile of RPC workers. Seen in 0.98 up to 1.2. Hence I&apos;m wondering if there is opportunity for object reuse, both of the SeekerState and its twin byte arrays. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 26 Sep 2016 04:15:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            11 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i341rj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>