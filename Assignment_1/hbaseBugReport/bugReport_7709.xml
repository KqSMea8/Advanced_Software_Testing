<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:48:20 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7709/HBASE-7709.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7709] Infinite loop possible in Master/Master replication</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7709</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt; We just discovered the following scenario:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Cluster A and B are setup in master/master replication&lt;/li&gt;
	&lt;li&gt;By accident we had Cluster C replicate to Cluster A.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Now all edit originating from C will be bouncing between A and B. Forever!&lt;br/&gt;
The reason is that when the edit come in from C the cluster ID is already set and won&apos;t be reset.&lt;/p&gt;

&lt;p&gt;We have a couple of options here:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Optionally only support master/master (not cycles of more than two clusters). In that case we can always reset the cluster ID in the ReplicationSource. That means that now cycles &amp;gt; 2 will have the data cycle forever. This is the only option that requires no changes in the HLog format.&lt;/li&gt;
	&lt;li&gt;Instead of a single cluster id per edit maintain a (unordered) set of cluster id that have seen this edit. Then in ReplicationSource we drop any edit that the sink has seen already. The is the cleanest approach, but it might need a lot of data stored per edit if there are many clusters involved.&lt;/li&gt;
	&lt;li&gt;Maintain a configurable counter of the maximum cycle side we want to support. Could default to 10 (even maybe even just). Store a hop-count in the WAL and the ReplicationSource increases that hop-count on each hop. If we&apos;re over the max, just drop the edit.&lt;/li&gt;
&lt;/ol&gt;

</description>
                <environment></environment>
        <key id="12629761">HBASE-7709</key>
            <summary>Infinite loop possible in Master/Master replication</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vmariyala">Vasu Mariyala</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Jan 2013 19:37:05 +0000</created>
                <updated>Tue, 24 Sep 2013 20:32:54 +0000</updated>
                            <resolved>Wed, 28 Aug 2013 22:59:21 +0000</resolved>
                                    <version>0.94.6</version>
                    <version>0.95.1</version>
                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.94.12</fixVersion>
                    <fixVersion>0.96.0</fixVersion>
                                    <component>Replication</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>24</watches>
                                                                <comments>
                            <comment id="13565699" author="lhofhansl" created="Tue, 29 Jan 2013 19:38:04 +0000"  >&lt;p&gt;Thanks to &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cody.marcel%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;cody.marcel@gmail.com&quot;&gt;Cody Marcel&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ivarley&quot; class=&quot;user-hover&quot; rel=&quot;ivarley&quot;&gt;Ian Varley&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jesse_yates&quot; class=&quot;user-hover&quot; rel=&quot;jesse_yates&quot;&gt;Jesse Yates&lt;/a&gt; for finding the issue.&lt;/p&gt;</comment>
                            <comment id="13565706" author="yuzhihong@gmail.com" created="Tue, 29 Jan 2013 19:42:00 +0000"  >&lt;p&gt;Option #2 seems the best.&lt;br/&gt;
I think number of clusters exceeding 10 in master/master replication would be rare.&lt;/p&gt;</comment>
                            <comment id="13565714" author="lhofhansl" created="Tue, 29 Jan 2013 19:47:32 +0000"  >&lt;p&gt;I&apos;d agree. Need to check if this is possible in 0.94 while keeping the HLog backwards compatible. If that is tricky for 0.94 we might need option #1.&lt;br/&gt;
Also, I cannot promise that I will get to this any time soon.&lt;/p&gt;</comment>
                            <comment id="13565752" author="ivarley" created="Tue, 29 Jan 2013 20:18:14 +0000"  >&lt;p&gt;Would another option be to do some kind of checking at add_peer time, to make sure no pernicious cycles are detected? I.e. when I add a peer, first walk the graph of current master/peer relationships and refuse to add if I detect a cycle I&apos;m not part of? Would require an API to ask that question, but that&apos;s probably a good thing anyway.&lt;/p&gt;</comment>
                            <comment id="13565760" author="ivarley" created="Tue, 29 Jan 2013 20:24:06 +0000"  >&lt;p&gt;(Because cycles &amp;gt; 2 are still fine, they just have to include all nodes. It can go A -&amp;gt; B -&amp;gt; C -&amp;gt; A; when an edit from A gets to C, it won&apos;t re-send to A, and the cycle will stop. The problem is just when it&apos;s a cycle from A -&amp;gt; (B -&amp;gt; C -&amp;gt; B).)&lt;/p&gt;</comment>
                            <comment id="13565794" author="yuzhihong@gmail.com" created="Tue, 29 Jan 2013 20:52:53 +0000"  >&lt;p&gt;The new API would allow specification of more than one cluster, right ?&lt;br/&gt;
What about (B -&amp;gt; C -&amp;gt; B) -&amp;gt; A where B replicates to A unidirectionally ?&lt;/p&gt;

&lt;p&gt;I think option #2 is the general solution.&lt;/p&gt;</comment>
                            <comment id="13565835" author="yuzhihong@gmail.com" created="Tue, 29 Jan 2013 21:33:56 +0000"  >&lt;p&gt;For HLog.Entry:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void write(DataOutput dataOutput) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.key.write(dataOutput);
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.edit.write(dataOutput);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;where the first integer for WALEdit is versionOrLength. If it is &amp;gt; 0, it is length. Otherwise it should be -1.&lt;br/&gt;
We can introduce a marker (a.k.a WALEdit.VERSION_3 == -2) after which additional cluster Ids can be serialized.&lt;/p&gt;

&lt;p&gt;This is an incompatible change which should be acceptable to singularity release.&lt;/p&gt;</comment>
                            <comment id="13565847" author="ivarley" created="Tue, 29 Jan 2013 21:44:30 +0000"  >&lt;p&gt;Re: (B -&amp;gt; C -&amp;gt; B) -&amp;gt; A, that&apos;s fine; no participants are detecting a cycle they&apos;re not part of (A isn&apos;t adding any peers, it&apos;s the slave). B detects a cycle it&apos;s part of (B -&amp;gt; C -&amp;gt; B) and C does as well.&lt;/p&gt;

&lt;p&gt;The API would be simple, and would let the caller walk the graph of clusters: ask the peer you&apos;re trying to add for all of its peers, then ask each of them in turn, and build up a graph structure that you can interrogate. Only call is &quot;Tell me your current peers&quot;.&lt;/p&gt;

&lt;p&gt;I suppose this could cause problems if not all clusters can communicate; say, if B is visible to A, and C is visible to B, but C is not visible to A. And I guess there might be race conditions if you try to add peers on multiple clusters simultaneously, there&apos;s not really a way to avoid that.&lt;/p&gt;</comment>
                            <comment id="13565851" author="yuzhihong@gmail.com" created="Tue, 29 Jan 2013 21:53:19 +0000"  >&lt;p&gt;What if C -&amp;gt; B -&amp;gt; A is established, and after some time, a potential cycle is formed with B -&amp;gt; C ?&lt;/p&gt;

&lt;p&gt;Along my comment above, we can PB the metadata in WALEdit and HLogKey where cluster Id is declared as repeated in .proto. A tool is provided to convert pre-0.96 WAL files into the new format.&lt;/p&gt;</comment>
                            <comment id="13565869" author="ivarley" created="Tue, 29 Jan 2013 22:07:47 +0000"  >&lt;p&gt;Ah, touche. That particular arrangement is still fine (the resulting graph, (B -&amp;gt; C -&amp;gt; B) -&amp;gt; A, doesn&apos;t have any bad cycles. However, you raise a good point; if you start with:&lt;/p&gt;

&lt;p&gt;A -&amp;gt; B -&amp;gt; C&lt;/p&gt;

&lt;p&gt;and then later add &quot;C -&amp;gt; B&quot;, you&apos;d get:&lt;/p&gt;

&lt;p&gt;A -&amp;gt; (B -&amp;gt; C -&amp;gt; B)&lt;/p&gt;

&lt;p&gt;which is a bad cycle. And C has no way of knowing about A -&amp;gt; B; as a peer, you only know who you replicate to, not who replicates to you. &lt;/p&gt;

&lt;p&gt;A cluster could keep track of who is replicating TO it; in ReplicationSink, we could track all the cluster IDs that have ever sent data in, and report that through the &quot;who do you replicate with&quot; API. So then it would let you build a full graph, because you get the backwards edges.&lt;/p&gt;

&lt;p&gt;Of course, there&apos;s still plenty of catches: the race conditions, plus the possibility that someone is set up to replicate to you, but they just haven&apos;t sent any edits yet.&lt;/p&gt;

&lt;p&gt;Meh. With this level of complication, a solution in the direction you&apos;re talking about (adding info to the WAL) might be safer.&lt;/p&gt;</comment>
                            <comment id="13565874" author="yuzhihong@gmail.com" created="Tue, 29 Jan 2013 22:12:46 +0000"  >&lt;p&gt;Thanks Ian for correcting my example given @ 29/Jan/13 21:53&lt;/p&gt;

&lt;p&gt;My point was that replication topology can grow quite complex. If we cannot enumerate all the intricacies, we&apos;d better design something that suits future development.&lt;/p&gt;</comment>
                            <comment id="13565876" author="ivarley" created="Tue, 29 Jan 2013 22:14:26 +0000"  >&lt;p&gt;Yes, I agree. While it&apos;s possible (in theory) to interrogate the actual topology at runtime, a solution that makes such problems impossible is much better.&lt;/p&gt;</comment>
                            <comment id="13569466" author="lhofhansl" created="Sat, 2 Feb 2013 07:56:12 +0000"  >&lt;p&gt;Any good ideas for 0.94? We cannot change the HLog forward in a non-backwards compatible way there.&lt;br/&gt;
Maybe in 0.94 we can do something simple along Ian&apos;s line of thinking. I don&apos;t care if it blows up in this case, even the RSs just aborting is better than a infinite back and forth of replication data (will fill up the memstore is useless versions, forever).&lt;/p&gt;</comment>
                            <comment id="13569611" author="ivarley" created="Sat, 2 Feb 2013 18:27:08 +0000"  >&lt;p&gt;At a minimum, this should be called out in the reference guide &amp;amp; replication page. Replication is still a pretty advanced feature, and replication for &amp;gt; 2 clusters even more so; if a patch doesn&apos;t go into 0.94.5, it&apos;s not end of the world.&lt;/p&gt;</comment>
                            <comment id="13569623" author="yuzhihong@gmail.com" created="Sat, 2 Feb 2013 19:01:53 +0000"  >&lt;p&gt;Looking at HLogKey#readFields():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (version.atLeast(Version.INITIAL)) {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (in.readBoolean()) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;From the javadoc of readBoolean():&lt;/p&gt;

&lt;p&gt;Reads one input byte and returns true if that byte is nonzero, false if that byte is zero.&lt;/p&gt;

&lt;p&gt;I think there is room to implement option #3 in the description. We can introduce new version (two, considering compression) where write, instead of true, the number of hops that HLog.Entry has gone through - starting with 1. A byte should suffice for this purpose.&lt;/p&gt;

&lt;p&gt;+1 on documenting this intricacy for 0.94.x in the refguide.&lt;/p&gt;

&lt;p&gt;I think we should create several subtasks for this JIRA.&lt;/p&gt;</comment>
                            <comment id="13574115" author="yuzhihong@gmail.com" created="Fri, 8 Feb 2013 00:50:07 +0000"  >&lt;p&gt;TestRowProcessorEndpoint shows another potential implementation for option #3:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-comment&quot;&gt;// We can also inject some meta data to the walEdit
&lt;/span&gt;        KeyValue metaKv = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValue(
            row, HLog.METAFAMILY,
            Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;num of hops&quot;&lt;/span&gt;),
            Bytes.toBytes(hops));
        walEdit.add(metaKv);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13586746" author="lhofhansl" created="Tue, 26 Feb 2013 04:43:54 +0000"  >&lt;p&gt;Any bright ideas? I can&apos;t think of a forward and backward compatible way to make this happen in 0.94. Forward &lt;b&gt;and&lt;/b&gt; backwards compatibility is needed, because during an upgrade via rolling restarts we might have logs of both formats in a single cluster.&lt;br/&gt;
In 0.96 we do not have this restriction.&lt;br/&gt;
Moving out to 0.94.7.&lt;/p&gt;</comment>
                            <comment id="13597418" author="jeffreyz" created="Fri, 8 Mar 2013 19:14:47 +0000"  >&lt;p&gt;I have another idea which IMHO is better. The basic idea is following:&lt;/p&gt;

&lt;p&gt;1) We maintain a counter value called RD(&quot;replication distance&quot;) which represents how far a WAL edit from a source cluster to current cluster like the hop-counter mentioned in option 3.&lt;br/&gt;
2) Each replaying &amp;amp; receiving region server maintains an internal memory ClusterDistanceMap &amp;lt;clusterId, MIN(RD)&amp;gt;. Every time, if it sees a WAL with RD less than it currently has seen then just update the internal map with the smaller RD value.&lt;br/&gt;
3) drop all WAL edits from a cluster with RD &amp;gt; the the one current region server has in the ClusterDistanceMap&lt;/p&gt;

&lt;p&gt;Initially we could duplicate data for first several WAL edits but it will be corrected soon so we don&apos;t need to persistent any data for fail over scenario. &lt;/p&gt;

&lt;p&gt;The above idea is similar to option 3 but without always double replicating data on some clusters and maintaining the max-hop is human error-prone if we forget to bump up the max hop-count value when more clusters join in replication cycle.&lt;/p&gt;

&lt;p&gt;Why it works? Loop detection: quick walker will catch up slow walker but travel more.&lt;br/&gt;
When we have infinite loop replication as mentioned in the JIRA, the data from a source must come from multiple ways to the destination with different RDs. Because it&apos;s evolving some loops, the RD won&apos;t be same otherwise there is no loop. Since the RD is different, we just need keep the data from the source with min distance.  &lt;/p&gt;

&lt;p&gt;You may ask the diamond situation like following.&lt;/p&gt;

&lt;p&gt;a-&amp;gt;b-&amp;gt;d&lt;br/&gt;
a-&amp;gt;c-&amp;gt;d&lt;/p&gt;

&lt;p&gt;where the data from a will be replicated to d twice. This is we configure to let d receive a&apos;s data twice. If there is loop involved and the loop-backed data will be dropped by the above way.&lt;/p&gt;


&lt;p&gt;This is general loop detection strategy so we can implement it in 0.96 or above. For 0.94, &lt;/p&gt;

&lt;p&gt;1) we can introduce a new version(3) in HLogKey&lt;br/&gt;
2) use top two bytes of UUID to store the RD value and the remaining 14 bytes as a hash value of the 16 bytes length of origin UUID value without compromising uniqueness because in most cases we have 10s clusters involved in replication and the collision probability is less than 10(-18)&lt;br/&gt;
OR&lt;br/&gt;
using Ted&apos;s suggestion to overload the boolean byte.&lt;br/&gt;
3) we can introduce a configuration setting with default to true. When we want to revert the new behavior, we can turn it off. &lt;/p&gt;

&lt;p&gt;please let me how do you think? Assign the ticket to me firstly in case we agree the implement the way I&apos;m proposing.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Jeffrey&lt;/p&gt;



</comment>
                            <comment id="13597532" author="lhofhansl" created="Fri, 8 Mar 2013 20:40:27 +0000"  >&lt;p&gt;Hey Jeffrey, that is my option #3 in the description, right? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13597611" author="jeffreyz" created="Fri, 8 Mar 2013 21:59:46 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; My proposal is similar to option 3 because we both use hop-counter(replication distance in my proposal). While as I mentioned in the proposal &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The above idea is similar to option 3 but without always double replicating data on some clusters and maintaining the max-hop is human error-prone if we forget to bump up the max hop-count value when more clusters join in replication cycle.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In the new proposal, region servers dynamically discover &amp;amp; maintain the MIN(RD) from a cluster and drop all edits which higher RDs from the same cluster.&lt;/p&gt;</comment>
                            <comment id="13597636" author="lhofhansl" created="Fri, 8 Mar 2013 22:32:15 +0000"  >&lt;p&gt;Ah yes. Cool. I should read the entire text before replying. Yes, that should work. I like it. The distance data does not have to be persisted as you say, upon restart an RS would just relearn.&lt;/p&gt;

&lt;p&gt;Generally, do you like this better than option #2? #2 would store too much data?&lt;/p&gt;

&lt;p&gt;As for 0.94. I like the config option, but it needs to be default off, so that we can do rolling restarts by default.&lt;/p&gt;</comment>
                            <comment id="13597711" author="enis" created="Sat, 9 Mar 2013 00:01:58 +0000"  >&lt;p&gt;I like option #2 better than this. It is more simpler. Jeff&apos;s idea is good, but has the problem of dealing with the topology changes. If the topology changes in a way to make the normal route to a cluster longer, than all the updates afterwards will be dropped unless we somehow clear the cached mappings. This brings in an operational burden of cleaning the caches of downstream clusters, once the admin changes the topology upstream. &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A -&amp;gt; B &amp;lt;-&amp;gt; C is changed to A -&amp;gt; B -&amp;gt; D -&amp;gt; C -&amp;gt; B 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Orthogonal to this, we also should be dropping the edits at the replication source, not the sink. We are doubling the network cost in cyclic cases. #2 also helps with this condition, because we can detect the sink cluster&apos;s id, and filter out. &lt;/p&gt;

&lt;p&gt;We can do a similar dynamic dictionary encoding for storing set of cluster ids. We can do it as a follow up optimization.&lt;/p&gt;
</comment>
                            <comment id="13597734" author="jeffreyz" created="Sat, 9 Mar 2013 00:29:45 +0000"  >&lt;p&gt;I agree #2 is simpler but it is at cost of replaying more data and storing more data.&lt;/p&gt;

&lt;p&gt;As Enis mentioned, my proposal will need special handling when a new cluster joins. Either dynamically encoding a special token to let downstream RSs to reset its internal cache or ask operators to reset replication. It maks my proposal less appealing. &lt;/p&gt;


</comment>
                            <comment id="13598579" author="jeffreyz" created="Mon, 11 Mar 2013 06:53:06 +0000"  >&lt;p&gt;Continue with more proposals...&lt;/p&gt;

&lt;p&gt;The disadvantages of option#2 is obvious as its advantages. Even in cases(maybe majority replication usage cases), there is no loop at all and just a long replication queue. The downstream RSs still need to replay and store a long list of clusterIds for each WALEdit. Encoding may help compress the clusterId list in sending part but not in storing.&lt;/p&gt;

&lt;p&gt;Let me firstly try to show you if we can do better than option#2 and then an alternative way which is good in most cases without more storage need. Both options are good IMHO.&lt;/p&gt;

&lt;p&gt;As we know loop is caused by back-edge in graph. We can roughly identify them by the fact if a region server sees there are more than one path from same source. If that&apos;s the case, loop situation is likely. Only by then, we need to append current cluster Id to the source cluster Id of a WAL edit for later loop detection. Therefore, in most cases, we don&apos;t need store long clusterId list if there is no loop or a simple master-master-master&#8230; cycle setup.&lt;/p&gt;

&lt;p&gt;I called the above updated option#2 as adaptive option#2 where it only need more storage when there is a need. We can implement it as following:&lt;/p&gt;

&lt;p&gt;1) Maintain a hash string PathCheckum(= Hash(receivedPathChecksum + current clusterId)) of a WAL edit &lt;br/&gt;
2) Each replaying &amp;amp; receiving region server maintains an internal memory ClusterDistanceMap &amp;lt;clusterId, Set&amp;lt;PathChecksums seen so far&amp;gt;&amp;gt;. &lt;br/&gt;
  2.a Every time if it sees a new PathChecksum(which isn&apos;t in Set&amp;lt;PathChecksums&amp;gt; ), it add the new PathChecksum into Set&amp;lt;PathChecksums&amp;gt; or drop a stale one from  Set&amp;lt;PathChecksums&amp;gt; when it&apos;s expired, i.e. after a configurable time period, a region server doesn&apos;t see any data coming in from the path.&lt;br/&gt;
3) When Set&amp;lt;PathChecksums&amp;gt;&apos;s size &amp;gt; 1, append current cluster id into the WAL edit for later replication loop detection.&lt;/p&gt;

&lt;p&gt;We can use top 8 bytes of clusterId to store PathChecksum and the rest 8 bytes as the hash of the original cluserId value. After the update, we only need to pay cost when there is a need. &lt;/p&gt;


&lt;p&gt;While you can image in real life replication setup normally doesn&apos;t involve any complicated graph, the option#2 is using extra storage need to deal with situations most likely won&apos;t happen. Therefore, in the following, I want to propose a solution without changing current WAL format and is good for most cases including the situation triggering the JIRA. In extreme cases, it reports errors for infinite loop. &lt;/p&gt;

&lt;p&gt;The new proposal(option #6) is as following:&lt;br/&gt;
1) Maintain a hash string PathCheckum(= Hash(receivedPathChecksum + current clusterId)) of a WAL edit &lt;br/&gt;
2) Each replaying &amp;amp; receiving region server maintains an internal memory ClusterDistanceMap &amp;lt;clusterId, Set&amp;lt;PathChecksums seen so far&amp;gt;&amp;gt;. &lt;br/&gt;
  2.a Every time if it sees a new PathChecksum(which isn&apos;t in Set&amp;lt;PathChecksums&amp;gt; ), it add the new PathChecksum into Set&amp;lt;PathChecksums&amp;gt; or drop a stale one from  Set&amp;lt;PathChecksums&amp;gt; when it&apos;s expired, i.e. after a configurable time period, a region server doesn&apos;t any data coming in from the path.&lt;br/&gt;
3) When Set&amp;lt;PathChecksums&amp;gt;&apos;s size &amp;gt; 1, reset a WAL edit&apos;s clusterId to current clusterId and increment a counter(ResetCounter) to mark how many times current WAL edit&apos;s clusterId has been reset.&lt;br/&gt;
4) When ResetCounter &amp;gt; 64, reports error( we could drop WAL edits as well because when ResetCounter &amp;gt; 64, it means we have at least 64 back-edges or duplicated sources. I think it&apos;s way complicated to have such cases.)&lt;/p&gt;

&lt;p&gt;The advantage of the above option is possibly using existing HLog format to prevent possible loop situation in real life cases&lt;/p&gt;

&lt;p&gt;To implement,&lt;br/&gt;
1) we can introduce a new version(3) in HLogKey&lt;br/&gt;
2) use top 7 bytes of UUID to store PathChecksum, use the following 1 byte to store RD and the remaining 8 bytes as a hash value of the 16 bytes length of origin UUID value without compromising uniqueness because in most cases we have 10s clusters involved in replication and the collision probability is less than 10(-18)&lt;br/&gt;
3) we can introduce a configuration setting with default to false(suggested by Lars). After we rollout the feature, we can turn it on and turn if off in revert scenario.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Jeffrey&lt;/p&gt;</comment>
                            <comment id="13623119" author="lhofhansl" created="Fri, 5 Apr 2013 00:28:19 +0000"  >&lt;p&gt;Sorry, I missed this. I need to read through and digest it. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
In any event, moving to 0.94.8.&lt;/p&gt;</comment>
                            <comment id="13646400" author="lhofhansl" created="Wed, 1 May 2013 05:54:16 +0000"  >&lt;p&gt;The proposal sounds good. Are you still planning to work on this &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13646413" author="jeffreyz" created="Wed, 1 May 2013 06:25:39 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; Sure. Is that all right to implement option #6 for 0.94 and adaptive option#2 for trunk? &lt;/p&gt;</comment>
                            <comment id="13660368" author="lhofhansl" created="Fri, 17 May 2013 06:01:09 +0000"  >&lt;p&gt;Would #6 still allow rolling upgrades from a prio version of HBase. It looks like it would not since we have to increase the HLogKey version.&lt;/p&gt;

&lt;p&gt;Moving to 0.94.9.&lt;/p&gt;</comment>
                            <comment id="13690751" author="lhofhansl" created="Fri, 21 Jun 2013 21:36:22 +0000"  >&lt;p&gt;Nobody working on this. Moving out.&lt;/p&gt;</comment>
                            <comment id="13704388" author="lhofhansl" created="Wed, 10 Jul 2013 10:04:57 +0000"  >&lt;p&gt;It seems for 0.94 we can either do option #1 or nothing at all.&lt;/p&gt;

&lt;p&gt;So I&apos;d like to introduce a config option: hbase.enable.cyclic.replication. The default is &quot;true&quot; to maintain the current functionality.&lt;br/&gt;
If set to false we&apos;d reset the cluster id at each source and hence would only support master-master replication (cycles involving more that 2 nodes would lead to infinite loops).&lt;/p&gt;</comment>
                            <comment id="13710575" author="lhofhansl" created="Wed, 17 Jul 2013 01:07:04 +0000"  >&lt;p&gt;Any opinions?&lt;/p&gt;</comment>
                            <comment id="13710629" author="jeffreyz" created="Wed, 17 Jul 2013 02:31:47 +0000"  >&lt;p&gt;For 0.94, I think it&apos;d be better that we introduce a configuration setting &quot;hbase.replication.reset.clusterid=&amp;lt;clusterId which a user specifies&amp;gt;&quot;. Only cluster specified here reset clusterId to itself so that we still can support master-master replication involving more than 2 nodes without bumping up logkey version.&lt;/p&gt;

&lt;p&gt;We could possibly bump up HLogKey version with one upgrade configuration setting like &quot;upgrade.logkey&quot; plus two rounds of rolling restart. Originally we set the config setting to false. First round rolling start to upgrade RS bits(new RS still write hlogkey in old version) and after all RS upgraded, we set the configuration to true and then second rolling start.&lt;/p&gt;

&lt;p&gt;The above complicates the upgrade scenario a little bit and requires all involved clusters in the replication are upgraded. &lt;/p&gt;</comment>
                            <comment id="13711868" author="lhofhansl" created="Thu, 18 Jul 2013 00:45:57 +0000"  >&lt;p&gt;That would be more flexible, but at the same time more tedious to manage.&lt;/p&gt;</comment>
                            <comment id="13728275" author="jdcryans" created="Fri, 2 Aug 2013 23:46:14 +0000"  >&lt;blockquote&gt;
&lt;p&gt;So I&apos;d like to introduce a config option: hbase.enable.cyclic.replication. The default is &quot;true&quot; to maintain the current functionality.&lt;br/&gt;
If set to false we&apos;d reset the cluster id at each source and hence would only support master-master replication (cycles involving more that 2 nodes would lead to infinite loops).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This seems like a lose-lose. The current functionality has the problem that 7709 is about and setting the config to false would just make it worse?&lt;/p&gt;</comment>
                            <comment id="13728280" author="lhofhansl" created="Fri, 2 Aug 2013 23:50:55 +0000"  >&lt;p&gt;It would allow a A &amp;#45;&amp;gt; B &amp;lt;-&amp;gt; C scenario, which is currently not possible.&lt;br/&gt;
At the same time it would break setups like A -&amp;gt; B -&amp;gt; C -&amp;gt; A&lt;/p&gt;</comment>
                            <comment id="13728432" author="lhofhansl" created="Sat, 3 Aug 2013 04:09:51 +0000"  >&lt;p&gt;In fact we will have the following setup:&lt;/p&gt;

&lt;p&gt;A &amp;lt;&amp;#45;&amp;gt; B, C &amp;lt;&amp;#45;&amp;gt; D, E &amp;lt;-&amp;gt; F, ... (where these are all pairs of DR clusters. We keep them both as master so that a failover for other reasons, even just as exercise does not need further configuration).&lt;br/&gt;
We sometime migrate an entire cluster, say A. In that case we&apos;d also replicate A -&amp;gt; C. Currently we can&apos;t do that, because the data from A would bounce between C and D forever.&lt;/p&gt;</comment>
                            <comment id="13729707" author="jdcryans" created="Mon, 5 Aug 2013 17:46:42 +0000"  >&lt;p&gt;Ah ok that&apos;s a fancy setup you got there. Sounds ok to me.&lt;/p&gt;</comment>
                            <comment id="13730116" author="stack" created="Mon, 5 Aug 2013 23:20:09 +0000"  >&lt;p&gt;What is to be done on this for 0.95.2?&lt;/p&gt;</comment>
                            <comment id="13732124" author="jdcryans" created="Wed, 7 Aug 2013 16:15:54 +0000"  >&lt;p&gt;I&apos;m +1 on &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&apos;s proposition, let&apos;s do it in a different jira?&lt;/p&gt;</comment>
                            <comment id="13732750" author="jeffreyz" created="Wed, 7 Aug 2013 21:14:36 +0000"  >&lt;p&gt;I think for 0.95 and onwards, we should store relay cluster ids along replication path in HLogKey to solve the issue . Since the list of replay cluster ids is added into each WALEdit, the storage &amp;amp; network traffic overhead isn&apos;t trivial when we have a long replication path. &lt;/p&gt;

&lt;p&gt;We can use an optimization(mentioned above as adaptive #2). We introduce a 4 byte path checksum field into HLogKey, a cluster only adds its cluster id into the relay cluster id list when it finds there exist multiple paths from a single cluster id. In most cases such as a simple replication loop or a acyclic replication path, the relay cluster id list is empty. The overhead is just the 4 bytes path check sum.   &lt;/p&gt;

&lt;p&gt;For 0.94, we can either use Lars approach(configuration option &quot;hbase.enable.cyclic.replication&quot;) or introduce a new configuration option &quot;hbase.replication.reset.clusterid=&amp;lt;clusterId which a user specifies | &lt;b&gt;&amp;gt;&quot;. Only cluster specified here reset clusterId to itself. When hbase.replication.reset.clusterid=&lt;/b&gt;, it is equivalent to Lars approach.&lt;br/&gt;
In addition, we can leverage existing field HLogKey.writeTime to detect loop in 0.94 if a WALEdit is stale too long for replication(like configurable 30mins). We can pass the writeTime as an attribute like the way cluster Id is passed during replication so that we can check the original writeTime to see if we have a possible infinite loop situation.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="13732869" author="lhofhansl" created="Wed, 7 Aug 2013 22:44:12 +0000"  >&lt;p&gt;Reading back through the comments here. How about we follow Ted&apos;s approach.&lt;br/&gt;
Instead of writing a boolean we write the number of hops into the HLogKey. 0 will still be interpreted as false in the old code, &amp;gt;0 as true. Thus we can store the number hops and still not break the existing code (although the code would not be able to stop the bouncing).&lt;br/&gt;
In our Salesforce scenario we would limit the hop count to 3 and would be able to support our setup that way.&lt;/p&gt;

&lt;p&gt;Yet another option is to make this configurable. At this point we&apos;re still able to fully bounce our clusters. So we can do the hop count and optionally (per a config option) store the full path, this might even be applicable to trunk as the user now has the choice between limiting loops to some limit with little extra storage or be precise at the expense of more storage.&lt;/p&gt;</comment>
                            <comment id="13732880" author="jdcryans" created="Wed, 7 Aug 2013 22:54:02 +0000"  >&lt;p&gt;My impression regarding configuring path or hops count is that if you start changing the clusters the upkeep becomes very expensive and it&apos;s not clear what happens while it&apos;s being changed (or if a cluster just goes down).&lt;/p&gt;</comment>
                            <comment id="13732914" author="jeffreyz" created="Wed, 7 Aug 2013 23:23:25 +0000"  >&lt;p&gt;Due to the 0.94 upgrade complications, the configuration approach is a practical one. Basically we shifts the duty to users to break infinite loop situation with the newly introduced configuration. &lt;/p&gt;

&lt;p&gt;Meantime we have to provide a way to detect possible infinite loop situation in 0.94 so that a user can act upon it. Using max hop counter is better only used for detection not the way to break infinite loop because it&apos;s error prone as JD pointed above when replication path changes.&lt;/p&gt;</comment>
                            <comment id="13732928" author="lhofhansl" created="Wed, 7 Aug 2013 23:32:39 +0000"  >&lt;p&gt;Are you referring to switching via config option from storing just the hop count to storing the path?&lt;br/&gt;
Yep, an admin would need to make the call and bounce the cluster (no rolling restart when that option is enabled the first time). Not ideal.&lt;br/&gt;
I&apos;m just looking for ways to avoid local Salesforce-only patches, but maybe backporting a trunk patch that stores the path would not be so bad (it sets a bad precedence here, though &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;/p&gt;

&lt;p&gt;The hop count we can always do safely (I think). In our case we&apos;d enable the path option and bounce the cluster(s).&lt;/p&gt;</comment>
                            <comment id="13732933" author="vasu.mariyala@gmail.com" created="Wed, 7 Aug 2013 23:36:24 +0000"  >&lt;p&gt;Can we add the information of the clusterids which already contain the change to the scopes variable of the WALEdit? Scopes being a navigable map of byte array to integer can contain the byte array of the cluster ids to 1 (indicating the cluster has received the change already)?&lt;/p&gt;</comment>
                            <comment id="13732934" author="lhofhansl" created="Wed, 7 Aug 2013 23:36:25 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; The hop count is always safe to do, no? We&apos;d default it to a reasonably large value (say 1000). This should be immune to topology changes. Without it edits would bounce within the replication ring &lt;b&gt;forever&lt;/b&gt;, with no way to stop it (other than disabling replication or deleting the WAL files), that is almost worse than downtime.&lt;/p&gt;</comment>
                            <comment id="13732947" author="lhofhansl" created="Wed, 7 Aug 2013 23:45:34 +0000"  >&lt;p&gt;The scope idea might just work. It&apos;s only read and match against column families so as long as we prefix it with something that cannot be contained in a column family name.&lt;/p&gt;</comment>
                            <comment id="13732984" author="jeffreyz" created="Thu, 8 Aug 2013 00:15:30 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; The hop count is only safe when using a big value. Let&apos;s say you use 1000. For 3 cluster situation, it means the same data will be re-written 300+ times before we stop. This affects a cluster&apos;s performance and slow down regular replication as well.&lt;/p&gt;

&lt;p&gt;Yeah, I think the scope idea can fly as column family only allows printable characters so it&apos;s possible to come up a special prefix character to store cluster id&lt;/p&gt;</comment>
                            <comment id="13732996" author="lhofhansl" created="Thu, 8 Aug 2013 00:29:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vasu.mariyala%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;vasu.mariyala@gmail.com&quot;&gt;Vasu Mariyala&lt;/a&gt;, wanna work out a patch? We can work on that together if you like.&lt;/p&gt;</comment>
                            <comment id="13733131" author="vasu.mariyala@gmail.com" created="Thu, 8 Aug 2013 04:25:50 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, working on it. Sure, will take your help.&lt;/p&gt;</comment>
                            <comment id="13733611" author="lhofhansl" created="Thu, 8 Aug 2013 15:41:17 +0000"  >&lt;p&gt;We also need to keep &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9158&quot; title=&quot;Serious bug in cyclic replication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9158&quot;&gt;&lt;del&gt;HBASE-9158&lt;/del&gt;&lt;/a&gt; (a bug I just discovered). Here we need to group the edits by path and apply them strictly in these groups.&lt;/p&gt;</comment>
                            <comment id="13735626" author="vasu.mariyala@gmail.com" created="Sat, 10 Aug 2013 00:53:57 +0000"  >&lt;p&gt;Please review the patch on the top of 0.94.11.&lt;/p&gt;</comment>
                            <comment id="13735635" author="hadoopqa" created="Sat, 10 Aug 2013 01:03:29 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12597230/HBASE-7709.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12597230/HBASE-7709.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6689//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6689//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13735742" author="lhofhansl" created="Sat, 10 Aug 2013 04:35:53 +0000"  >&lt;p&gt;HadoopQA only works against trunk. But since the trunk patch would presumably be quite a bit different it wouldn&apos;t help with 0.94.&lt;br/&gt;
Will have a look at the patch over the weekend.&lt;/p&gt;</comment>
                            <comment id="13735748" author="lhofhansl" created="Sat, 10 Aug 2013 04:48:01 +0000"  >&lt;p&gt;Patch looks good. Smaller than expected &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Two comments:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Maybe change the new methods to addClusterId and getAllClusterIds?&lt;/li&gt;
	&lt;li&gt;In ReplicationSink we need to group by unique path, I think, (just like I do now by ClusterId) so that the path is maintained during intermediary replication.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13736200" author="lhofhansl" created="Sun, 11 Aug 2013 05:25:51 +0000"  >&lt;p&gt;In any event. We should probably have separate issues for the &quot;real&quot; 0.95+ fix and the backwards compatible 0.94 patch. Maybe we can try to keep the API the same, or at least similar.&lt;/p&gt;</comment>
                            <comment id="13736398" author="jeffreyz" created="Sun, 11 Aug 2013 20:00:37 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vasu.mariyala%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;vasu.mariyala@gmail.com&quot;&gt;Vasu Mariyala&lt;/a&gt; I reviewed your patch. The following lines:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!logKey.getClusterId().equals(peerClusterId)) {
+      &lt;span class=&quot;code-comment&quot;&gt;// don&apos;t replicate &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the log entries has already been consumed by the peer cluster
&lt;/span&gt;+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!edit.hasClusterConsumed(peerClusterId)) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think we still need keep the old check around. The above change may cause issues during upgrade. For example, we have ( A &lt;del&gt;&amp;gt; B, B&lt;/del&gt;&amp;gt; A) replication setup. If we just upgrade cluster A, the above change may cause infinite loop before we upgrade cluster B.&lt;/p&gt;

&lt;p&gt;Rest code looks good to me.&lt;/p&gt;</comment>
                            <comment id="13736423" author="vmariyala" created="Sun, 11 Aug 2013 21:45:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The cluster ids in the WALEdit contains all the cluster ids including the cluster id on which the entry was created first.When ReplicationSource runs on A, it marks the cluster itself as consumed in the WALEdit. This entry would then be sent on to B. ReplicationSource running on B checks that the cluster A has already consumed and therefore does not send the entry back to A. If there are any possible scenarios where this would not work, please do let me know.&lt;/p&gt;</comment>
                            <comment id="13736472" author="jeffreyz" created="Sun, 11 Aug 2013 23:52:20 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vasu.mariyala%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;vasu.mariyala@gmail.com&quot;&gt;Vasu Mariyala&lt;/a&gt; The above you mentioned will work if both A and B cluster are upgraded to the latest bits. Let&apos;s say cluster B is NOT upgraded yet while A is upgraded. When B send edits to A, the scope of a WALEdit won&apos;t have cluster Ids so A&apos;s WALEdits won&apos;t have cluster ID B in its scope. Then later the check edit.hasClusterConsumed(peerClusterId) in cluster A will evaluate as false and the edits of B will be sent back to cluster B.&lt;/p&gt;</comment>
                            <comment id="13737363" author="hadoopqa" created="Mon, 12 Aug 2013 21:13:17 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12597557/HBASE-7709-rev1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12597557/HBASE-7709-rev1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6706//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6706//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13737365" author="vasu.mariyala@gmail.com" created="Mon, 12 Aug 2013 21:13:49 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; for the review comments. I have attached the patch &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7709&quot; title=&quot;Infinite loop possible in Master/Master replication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7709&quot;&gt;&lt;del&gt;HBASE-7709&lt;/del&gt;&lt;/a&gt;-rev1.patch with the fixes based on your comments. &lt;br/&gt;
Also added a test cases for A -&amp;gt; B -&amp;gt; C -&amp;gt; A replication. Please do review this patch.&lt;/p&gt;

&lt;p&gt;For the 0.95+ and the trunk fixes, I would like to either remove/deprecate the setClusterId and getClusterId methods of Mutation and also HLogKey as these are primary maintained to avoid cyclic replication. Please do let me know your opinion on this so that I can work on providing the patches for the same.&lt;/p&gt;</comment>
                            <comment id="13737390" author="hadoopqa" created="Mon, 12 Aug 2013 21:43:11 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12597567/HBASE-7709-rev1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12597567/HBASE-7709-rev1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6707//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6707//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13738867" author="jdcryans" created="Tue, 13 Aug 2013 21:39:18 +0000"  >&lt;p&gt;The logic here is getting big enough that it should be encapsulated, but I can&apos;t think right now if a nice way to do it.&lt;/p&gt;

&lt;p&gt;WALEdit will need more javadoc.&lt;/p&gt;

&lt;p&gt;The reason WALEdit.scopes wasn&apos;t instantiated is that you wouldn&apos;t need to keep an extra TreeMap around if replication wasn&apos;t enabled. It seems this patch changes that assumption. If it makes more sense to always instantiate it then it should be final, there are a bunch of &quot;if (scopes == null)&quot; that aren&apos;t needed anymore, and &quot;if (scopes != null)&quot; would always be true.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;A -&amp;gt; B -&amp;gt; C -&amp;gt; A replication&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think you meant the last cluster to be B? It seems we should refactor TestMasterReplication a bit because with this patch it would just look like the same code is running 3 times (to the untrained eye).&lt;/p&gt;</comment>
                            <comment id="13738999" author="davelatham" created="Tue, 13 Aug 2013 23:18:37 +0000"  >&lt;p&gt;Thanks all for the great work on this.&lt;/p&gt;

&lt;p&gt;We currently have a pair of clusters in two datacenters in a master/master setup and want to migrate one of them to a new datacenter.  I&apos;m trying to determine if this patch will be required for us and would love if someone would be willing to double check my thinking.&lt;/p&gt;

&lt;p&gt;Currently we have&lt;br/&gt;
A -&amp;gt; B, B -&amp;gt; A&lt;/p&gt;

&lt;p&gt;1. Setup C, create presplit tables with replication_scope enabled on them.&lt;br/&gt;
2. Add peer B &amp;#45;&amp;gt; C  (New state A &amp;#45;&amp;gt; B, B &amp;#45;&amp;gt; A, B-&amp;gt; C)&lt;br/&gt;
3. Copy table on each table from B -&amp;gt; C&lt;br/&gt;
4. Stop applications in A&lt;br/&gt;
5. Wait for queues from A &amp;#45;&amp;gt; B to clear&lt;br/&gt;
6. Remove peer A &amp;#45;&amp;gt; B (New state B &amp;#45;&amp;gt; A, B-&amp;gt; C&lt;br/&gt;
7. Remove peer B &amp;#45;&amp;gt; A (New state B -&amp;gt; C)&lt;br/&gt;
8. Add peer C &amp;#45;&amp;gt; B (New state B -&amp;gt; C, C -&amp;gt; B)&lt;br/&gt;
9. Start applications in C&lt;/p&gt;

&lt;p&gt;Given that we can live with applications only running in a single datacenter for a period of time we don&apos;t ever need to have writes from one cluster replicate to a downstream loop.  Therefore I don&apos;t think this patch is required for this migration.  Does that sound correct?  So does the state of (A &amp;lt;-&amp;gt; B) -&amp;gt; C still trigger the problem?&lt;/p&gt;

&lt;p&gt;Edit by LarsH fix formatting.&lt;/p&gt;</comment>
                            <comment id="13739015" author="lhofhansl" created="Tue, 13 Aug 2013 23:26:41 +0000"  >&lt;p&gt;You are correct, you do not need this patch as along as you do step #6 before step #8. (A &amp;lt;&amp;#45;&amp;gt; B) &amp;#45;&amp;gt; C is fine. C &amp;#45;&amp;gt; (A &amp;lt;-&amp;gt; B) is not.&lt;/p&gt;

&lt;p&gt;Edit: Formatting again.&lt;/p&gt;</comment>
                            <comment id="13741832" author="vmariyala" created="Fri, 16 Aug 2013 02:45:45 +0000"  >&lt;p&gt;Sorry for the confusion in the earlier emails. Yes, the test case was for A -&amp;gt; B -&amp;gt; C -&amp;gt; B. &lt;/p&gt;

&lt;p&gt;Attaching the patch for 0.94 (revision 2)&lt;/p&gt;</comment>
                            <comment id="13741880" author="hadoopqa" created="Fri, 16 Aug 2013 03:55:25 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12598350/HBASE-7709-rev2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12598350/HBASE-7709-rev2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6775//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6775//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13741891" author="vmariyala" created="Fri, 16 Aug 2013 04:11:49 +0000"  >&lt;p&gt;Attaching the patch for 0.95 release&lt;/p&gt;</comment>
                            <comment id="13741909" author="vmariyala" created="Fri, 16 Aug 2013 04:48:02 +0000"  >&lt;p&gt;0.95 patch works for trunk as well.&lt;/p&gt;</comment>
                            <comment id="13741951" author="hadoopqa" created="Fri, 16 Aug 2013 05:47:34 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12598360/HBASE-7709-095.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12598360/HBASE-7709-095.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.wal.TestHLog&lt;br/&gt;
                  org.apache.hadoop.hbase.migration.TestNamespaceUpgrade&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6777//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13742367" author="vmariyala" created="Fri, 16 Aug 2013 16:32:54 +0000"  >&lt;p&gt;I ran all the test cases on my local machine with the trunk patch and they are successful. But everytime it is run on jenkins, it throws &lt;/p&gt;

&lt;p&gt;FATAL: Unable to delete script file /tmp/hudson5964600500647866956.sh&lt;br/&gt;
hudson.util.IOException2: remote file operation failed: /tmp/hudson5964600500647866956.sh at hudson.remoting.Channel@5ce45886:hadoop1&lt;br/&gt;
	at hudson.FilePath.act(FilePath.java:902)&lt;br/&gt;
	at hudson.FilePath.act(FilePath.java:879)&lt;br/&gt;
	at hudson.FilePath.delete(FilePath.java:1288)&lt;br/&gt;
	at hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:101)&lt;br/&gt;
	at hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:60)&lt;br/&gt;
	at hudson.tasks.BuildStepMonitor$1.perform(BuildStepMonitor.java:19)&lt;br/&gt;
	at hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:804)&lt;br/&gt;
	at hudson.model.Build$BuildExecution.build(Build.java:199)&lt;br/&gt;
	at hudson.model.Build$BuildExecution.doRun(Build.java:160)&lt;br/&gt;
	at hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:586)&lt;br/&gt;
	at hudson.model.Run.execute(Run.java:1597)&lt;br/&gt;
	at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:46)&lt;br/&gt;
	at hudson.model.ResourceController.execute(ResourceController.java:88)&lt;br/&gt;
	at hudson.model.Executor.run(Executor.java:247)&lt;br/&gt;
Caused by: hudson.remoting.ChannelClosedException: channel is already closed&lt;br/&gt;
	at hudson.remoting.Channel.send(Channel.java:516)&lt;br/&gt;
	at hudson.remoting.Request.call(Request.java:129)&lt;br/&gt;
	at hudson.remoting.Channel.call(Channel.java:714)&lt;br/&gt;
	at hudson.FilePath.act(FilePath.java:895)&lt;br/&gt;
	... 13 more&lt;br/&gt;
Caused by: java.io.IOException: Unexpected termination of the channel&lt;br/&gt;
	at hudson.remoting.SynchronousCommandTransport$ReaderThread.run(SynchronousCommandTransport.java:50)&lt;br/&gt;
Caused by: java.io.EOFException&lt;br/&gt;
	at java.io.ObjectInputStream$BlockDataInputStream.peekByte(ObjectInputStream.java:2596)&lt;br/&gt;
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1316)&lt;br/&gt;
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)&lt;br/&gt;
	at hudson.remoting.Command.readFrom(Command.java:92)&lt;br/&gt;
	at hudson.remoting.ClassicCommandTransport.read(ClassicCommandTransport.java:72)&lt;br/&gt;
	at hudson.remoting.SynchronousCommandTransport$ReaderThread.run(SynchronousCommandTransport.java:48)&lt;br/&gt;
FATAL: hudson.remoting.RequestAbortedException: java.io.IOException: Unexpected termination of the channel&lt;br/&gt;
hudson.remoting.RequestAbortedException: hudson.remoting.RequestAbortedException: java.io.IOException: Unexpected termination of the channel&lt;br/&gt;
	at hudson.remoting.RequestAbortedException.wrapForRethrow(RequestAbortedException.java:41)&lt;br/&gt;
	at hudson.remoting.RequestAbortedException.wrapForRethrow(RequestAbortedException.java:34)&lt;br/&gt;
	at hudson.remoting.Request.call(Request.java:174)&lt;br/&gt;
	at hudson.remoting.Channel.call(Channel.java:714)&lt;br/&gt;
	at hudson.remoting.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:167)&lt;br/&gt;
	at com.sun.proxy.$Proxy40.join(Unknown Source)&lt;br/&gt;
	at hudson.Launcher$RemoteLauncher$ProcImpl.join(Launcher.java:925)&lt;br/&gt;
	at hudson.Launcher$ProcStarter.join(Launcher.java:360)&lt;br/&gt;
	at hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:91)&lt;br/&gt;
	at hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:60)&lt;br/&gt;
	at hudson.tasks.BuildStepMonitor$1.perform(BuildStepMonitor.java:19)&lt;br/&gt;
	at hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:804)&lt;br/&gt;
	at hudson.model.Build$BuildExecution.build(Build.java:199)&lt;br/&gt;
	at hudson.model.Build$BuildExecution.doRun(Build.java:160)&lt;br/&gt;
	at hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:586)&lt;br/&gt;
	at hudson.model.Run.execute(Run.java:1597)&lt;br/&gt;
	at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:46)&lt;br/&gt;
	at hudson.model.ResourceController.execute(ResourceController.java:88)&lt;br/&gt;
	at hudson.model.Executor.run(Executor.java:247)&lt;br/&gt;
Caused by: hudson.remoting.RequestAbortedException: java.io.IOException: Unexpected termination of the channel&lt;br/&gt;
	at hudson.remoting.Request.abort(Request.java:299)&lt;br/&gt;
	at hudson.remoting.Channel.terminate(Channel.java:774)&lt;br/&gt;
	at hudson.remoting.SynchronousCommandTransport$ReaderThread.run(SynchronousCommandTransport.java:69)&lt;br/&gt;
Caused by: java.io.IOException: Unexpected termination of the channel&lt;br/&gt;
	at hudson.remoting.SynchronousCommandTransport$ReaderThread.run(SynchronousCommandTransport.java:50)&lt;br/&gt;
Caused by: java.io.EOFException&lt;br/&gt;
	at java.io.ObjectInputStream$BlockDataInputStream.peekByte(ObjectInputStream.java:2596)&lt;br/&gt;
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1316)&lt;br/&gt;
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)&lt;br/&gt;
	at hudson.remoting.Command.readFrom(Command.java:92)&lt;br/&gt;
	at hudson.remoting.ClassicCommandTransport.read(ClassicCommandTransport.java:72)&lt;br/&gt;
	at hudson.remoting.SynchronousCommandTransport$ReaderThread.run(SynchronousCommandTransport.java:48)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6784/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6784/console&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6781/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6781/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Can any one please let me how I can resolve this issue?&lt;/p&gt;</comment>
                            <comment id="13742560" author="hadoopqa" created="Fri, 16 Aug 2013 19:54:11 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12598500/095-trunk.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12598500/095-trunk.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestAdmin&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6788//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13742640" author="hadoopqa" created="Fri, 16 Aug 2013 21:55:04 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12598525/0.95-trunk-rev1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12598525/0.95-trunk-rev1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6792//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13745573" author="vasu.mariyala@gmail.com" created="Tue, 20 Aug 2013 22:45:21 +0000"  >&lt;p&gt;0.95-trunk-rev1.patch contains the javadoc fix and is the latest patch for the trunk and 0.95 branches. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7709&quot; title=&quot;Infinite loop possible in Master/Master replication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7709&quot;&gt;&lt;del&gt;HBASE-7709&lt;/del&gt;&lt;/a&gt;-rev2.patch is the updated patch on the top of 0.94 which addresses the comments made by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13746586" author="lhofhansl" created="Wed, 21 Aug 2013 17:15:53 +0000"  >&lt;p&gt;The 0.94 patch looks good. Bit large, but then again this is a bad bug to have (when it hits you you&apos;ll useless load on your cluster forever, throwing your versions off, etc).&lt;br/&gt;
Nice refactoring of the replication test.&lt;/p&gt;

&lt;p&gt;Few nits:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;PREFIX_CLUSTER_KEY in WALEdit could just be &apos;_&apos;, right? No need to store that longer prefix everywhere.&lt;/li&gt;
	&lt;li&gt;Similarly maybe make PREFIX_CONSUMED_CLUSTER_IDS in Mutation just &quot;_cs.id&quot;&lt;/li&gt;
	&lt;li&gt;The comment for scopes in WALEdit could be a bit more explicit that we&apos;re overloading scopes with the cluster id for backwards compatibility.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+1 otherwise (assuming the full 0.94 test suite passes)&lt;/p&gt;

&lt;p&gt;Looking at trunk patch now.&lt;/p&gt;</comment>
                            <comment id="13746611" author="lhofhansl" created="Wed, 21 Aug 2013 17:33:08 +0000"  >&lt;p&gt;In trunk:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;should repeated UUID clusters = 8 be optional in WAL.proto? Otherwise we can&apos;t read old log entries. But maybe that&apos;s not a problem...?&lt;/li&gt;
	&lt;li&gt;in Import:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        clusters = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;UUID&amp;gt;();
+        clusters.add(ZKClusterId.getUUIDForCluster(zkw));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can be written as &lt;tt&gt;cluster = Collections.Collections.singleton(ZKClusterId.getUUIDForCluster(zkw))&lt;/tt&gt;&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Is this right?
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(UUID clusterId : key.getClusters()) {
         uuidBuilder.setLeastSigBits(clusterId.getLeastSignificantBits());
         uuidBuilder.setMostSigBits(clusterId.getMostSignificantBits());
+        keyBuilder.addClusters(uuidBuilder.build());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;addClusters expects a Set.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Where is HlogKey.PREFIX_CLUSTER_KEY used? Just to read old versions of WALEdits? Need to discuss if that is necessary. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;? This has to do with upgrading WALEdits from pre 0.95.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Otherwise looks great.&lt;/p&gt;</comment>
                            <comment id="13746781" author="vasu.mariyala@gmail.com" created="Wed, 21 Aug 2013 20:01:01 +0000"  >&lt;p&gt;Attached the patches for 0.94 (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7709&quot; title=&quot;Infinite loop possible in Master/Master replication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7709&quot;&gt;&lt;del&gt;HBASE-7709&lt;/del&gt;&lt;/a&gt;-rev3.patch) and 0.95, trunk(0.95-trunk-rev2.patch) which addresses the nits mentioned by Lars&lt;/p&gt;

&lt;p&gt;0.94&lt;/p&gt;

&lt;p&gt;   a) Changed PREFIX_CLUSTER_KEY to &apos;.&apos; (period as the column family names can&apos;t start with it)&lt;/p&gt;

&lt;p&gt;   b) PREFIX_CONSUMED_CLUSTER_IDS changed to &quot;_cs.id&quot;&lt;/p&gt;

&lt;p&gt;   c) A comment has been added in WALEdit mentioning that it is done for backwards compatibility and has been removed in 0.95.2+ releases&lt;/p&gt;

&lt;p&gt;trunk/0.95&lt;/p&gt;

&lt;p&gt;  a) From protobuf documentation &lt;/p&gt;

&lt;p&gt;     &quot;repeated: this field can be repeated any number of times (including zero) in a well-formed message. The order of the repeated values will be preserved.&quot;.&lt;br/&gt;
     &quot;optional: a well-formed message can have zero or one of this field (but not more than one).&quot;&lt;/p&gt;

&lt;p&gt;      So does repeated imply it is optional? Also, from the WALProtos.java the clusters list is initialized to empty list in the initFields() method so we would not get any   NullPointerException. May be, I would do more research on this.&lt;/p&gt;

&lt;p&gt;  b) clusters in Import has been changed to use singleton&lt;/p&gt;

&lt;p&gt;  c) addClusters has a method public Builder addClusters(org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.UUID value) which takes the UUID as the parameter.&lt;/p&gt;

&lt;p&gt;  d) Yes, this is used only to read the older log entries when migrating from 0.94 to 0.95.2.&lt;/p&gt;</comment>
                            <comment id="13746818" author="v.himanshu" created="Wed, 21 Aug 2013 20:39:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;+  repeated UUID clusters = 8;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt; /*&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;optional CustomEntryType custom_entry_type = 8;&lt;br/&gt;
-&lt;br/&gt;
+  optional CustomEntryType custom_entry_type = 9;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This re-ordering good because 0.96.0 is not released yet?&lt;/p&gt;

&lt;p&gt;I think we should have the flexibility to read older edits as a clean shutdown is a stringent requirement (especially for larger clusters). Also when replication is enabled, there may be some old logs left to replicate.&lt;/p&gt;</comment>
                            <comment id="13746838" author="vasu.mariyala@gmail.com" created="Wed, 21 Aug 2013 20:58:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=v.himanshu&quot; class=&quot;user-hover&quot; rel=&quot;v.himanshu&quot;&gt;Himanshu Vashishtha&lt;/a&gt; There is no re-ordering done with the patch. The entry &quot;custom_entry_type&quot; is and was a commented one. I changed the number to 9 just incase if some one un-comments it in the future. Please let me know if I miss anything&lt;/p&gt;</comment>
                            <comment id="13748263" author="hadoopqa" created="Fri, 23 Aug 2013 03:57:25 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12599256/0.95-trunk-rev2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12599256/0.95-trunk-rev2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6850//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13748685" author="yuzhihong@gmail.com" created="Fri, 23 Aug 2013 16:34:31 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setClusters(Set&amp;lt;UUID&amp;gt; clusterIds) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Would setClusterIds() be better name for the above method ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the set of clusters that have consumed the mutation
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;set of clusters&apos; -&amp;gt; &apos;set of cluster Ids&apos;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Set&amp;lt;UUID&amp;gt; getClusters() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;getClusters -&amp;gt; getClusterIds&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; UUID clusterId;
+    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Set&amp;lt;UUID&amp;gt; clusters;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;clusters -&amp;gt; clusterIds&lt;/p&gt;

&lt;p&gt;If you agree with the above comments, please modify names in other places as well.&lt;/p&gt;</comment>
                            <comment id="13748876" author="vasu.mariyala@gmail.com" created="Fri, 23 Aug 2013 19:03:10 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; for the review. Yes, I feel clusterIds may be better than just clusters. Attached the patches &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7709&quot; title=&quot;Infinite loop possible in Master/Master replication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7709&quot;&gt;&lt;del&gt;HBASE-7709&lt;/del&gt;&lt;/a&gt;-rev4.patch (0.94) and 0.95-trunk-rev3.patch (0.95 &amp;amp; trunk) which contain the method name changes.&lt;/p&gt;</comment>
                            <comment id="13748982" author="jeffreyz" created="Fri, 23 Aug 2013 20:59:38 +0000"  >&lt;p&gt;I reviewed the trunk patch. One thing I noticed that the trunk patch deprecats clusterId and related code. I think we should still keep it around. The reason is that one of the semantics of clusterId is the &quot;Original ClusterId&quot; where the changes are generated. This information will be very useful when we build monitoring dashboard to show how many edits from each source cluster. Similarly we could combine the original cluster Id and write time to know replication latency from source to current cluster. &lt;br/&gt;
The rest looks good. Thanks.&lt;/p&gt;</comment>
                            <comment id="13749081" author="vasu.mariyala@gmail.com" created="Fri, 23 Aug 2013 22:22:45 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; This cluster information is only stored as part of the HLog and it gets rolled. So do you think it is the place from where we read the information about the originating cluster to build such metrics?&lt;/p&gt;</comment>
                            <comment id="13749166" author="lhofhansl" created="Fri, 23 Aug 2013 23:44:39 +0000"  >&lt;p&gt;This does raise a good point. Maybe we should store the cluster ids in order of traversal. That would later allow us to reconstruct the replication path between clusters and display it in the shell.&lt;/p&gt;</comment>
                            <comment id="13749171" author="yuzhihong@gmail.com" created="Fri, 23 Aug 2013 23:47:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;we should store the cluster ids in order of traversal&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13749193" author="vasu.mariyala@gmail.com" created="Sat, 24 Aug 2013 00:19:24 +0000"  >&lt;p&gt;Attaching the patches 0.95-trunk-rev4.patch (0.95 and trunk) which stores the clusters as a list rather than set. The first cluster id in the list is the originating cluster and the subsequent entries indicate replication path.&lt;/p&gt;

&lt;p&gt;The patch &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7709&quot; title=&quot;Infinite loop possible in Master/Master replication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7709&quot;&gt;&lt;del&gt;HBASE-7709&lt;/del&gt;&lt;/a&gt;-rev5.patch (0.94) has the changes to ensure the api of 0.94 is the same as the api of 0.95 and trunk.&lt;/p&gt;

&lt;p&gt;These patches primarily address the monitoring issues mentioned by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13749520" author="hadoopqa" created="Sun, 25 Aug 2013 03:39:45 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12599751/HBASE-7709-rev5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12599751/HBASE-7709-rev5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6865//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6865//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13749550" author="hadoopqa" created="Sun, 25 Aug 2013 07:12:36 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12599751/HBASE-7709-rev5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12599751/HBASE-7709-rev5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6866//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6866//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13749778" author="vmariyala" created="Mon, 26 Aug 2013 01:16:33 +0000"  >&lt;p&gt;Re-attaching the patch version 4 so that hadoop qa can run&lt;/p&gt;</comment>
                            <comment id="13750192" author="hadoopqa" created="Mon, 26 Aug 2013 16:14:03 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12599751/HBASE-7709-rev5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12599751/HBASE-7709-rev5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6896//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6896//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13750289" author="vasu.mariyala@gmail.com" created="Mon, 26 Aug 2013 17:40:06 +0000"  >&lt;p&gt;The patch &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7709&quot; title=&quot;Infinite loop possible in Master/Master replication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7709&quot;&gt;&lt;del&gt;HBASE-7709&lt;/del&gt;&lt;/a&gt;-rev5.patch is on the top of 0.94 and hence the hadoop qa would always fail while applying this patch on trunk. Can any one please run the hadoop qa build for the patch &quot;0.95-trunk-rev4.patch&quot; (which is the trunk and 0.95 patch)?&lt;/p&gt;</comment>
                            <comment id="13750297" author="yuzhihong@gmail.com" created="Mon, 26 Aug 2013 17:44:21 +0000"  >&lt;p&gt;Please attach 0.95-trunk-rev4.patch one more time - Hadoop QA picks up the latest attachment&lt;/p&gt;</comment>
                            <comment id="13750333" author="vasu.mariyala@gmail.com" created="Mon, 26 Aug 2013 18:04:12 +0000"  >&lt;p&gt;Attaching the patch again&lt;/p&gt;</comment>
                            <comment id="13750559" author="hadoopqa" created="Mon, 26 Aug 2013 21:16:25 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12599990/0.95-trunk-rev4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12599990/0.95-trunk-rev4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 2 release audit warnings (more than the trunk&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6902//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13750617" author="vasu.mariyala@gmail.com" created="Mon, 26 Aug 2013 22:02:46 +0000"  >&lt;p&gt;The release audit warnings are not related to the patch. This has to do with the missing licenses in the below files. After correcting the license info in these files, the release audit is successful&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
*******************************

Unapproved licenses:

  /home/vmariyala/bigdata-dev/testhbase/hbase-server/src/main/resources/hbase-webapps/&lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt;/css/bootstrap-theme.min.css
  /home/vmariyala/bigdata-dev/testhbase/hbase-server/src/main/resources/hbase-webapps/&lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt;/css/bootstrap-theme.css

*******************************
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13750727" author="jeffreyz" created="Mon, 26 Aug 2013 23:24:01 +0000"  >&lt;p&gt;I reviewed 0.94 and trunk patch. They both looks good to me! +1 from me. Thanks. &lt;br/&gt;
In the trunk, we currently carry all clusterIds in the replication path and we could optimize this later when there is a need.&lt;/p&gt;</comment>
                            <comment id="13751447" author="yuzhihong@gmail.com" created="Tue, 27 Aug 2013 17:04:01 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13752757" author="jdcryans" created="Wed, 28 Aug 2013 19:22:19 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13752762" author="stack" created="Wed, 28 Aug 2013 19:32:49 +0000"  >&lt;p&gt;Applied to 0.95 and to trunk.  Want this in 0.94 &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;?  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vasu.mariyala%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;vasu.mariyala@gmail.com&quot;&gt;Vasu Mariyala&lt;/a&gt; Thanks boss.  Any chance of a release note on this issue?&lt;/p&gt;</comment>
                            <comment id="13752818" author="lhofhansl" created="Wed, 28 Aug 2013 20:33:57 +0000"  >&lt;p&gt;Yeah, will sync up with Vasu off line and probably commit to 0.94 soon.&lt;/p&gt;</comment>
                            <comment id="13752839" author="lhofhansl" created="Wed, 28 Aug 2013 20:58:51 +0000"  >&lt;p&gt;Discussed offline with Vasu.&lt;br/&gt;
Proposing one small change: Don&apos;t store the first cluster in an edit twice. So the clusterID as used now holds the first cluster id and the new clusterIds in Mutation and Scopes on the WALEdit hold the 2nd and 3rd cluster ID if any.&lt;br/&gt;
As master &amp;lt;-&amp;gt; master replication will be the most common scenario this seems an important optimization.&lt;/p&gt;</comment>
                            <comment id="13752841" author="lhofhansl" created="Wed, 28 Aug 2013 20:59:18 +0000"  >&lt;p&gt;Will commit to 0.94 later today if there are no objections.&lt;/p&gt;</comment>
                            <comment id="13752858" author="hadoopqa" created="Wed, 28 Aug 2013 21:17:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12600457/7709-0.94-rev6.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12600457/7709-0.94-rev6.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6953//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6953//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13752911" author="hudson" created="Wed, 28 Aug 2013 21:57:59 +0000"  >&lt;p&gt;SUCCESS: Integrated in hbase-0.95 #500 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/500/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/500/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7709&quot; title=&quot;Infinite loop possible in Master/Master replication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7709&quot;&gt;&lt;del&gt;HBASE-7709&lt;/del&gt;&lt;/a&gt; Infinite loop possible in Master/Master replication (stack: rev 1518334)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/WALProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/protobuf/WAL.proto&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/Import.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogKey.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSink.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotLogSplitter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/HLogPerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestMasterReplication.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13752920" author="hudson" created="Wed, 28 Aug 2013 21:59:58 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #4441 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4441/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4441/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7709&quot; title=&quot;Infinite loop possible in Master/Master replication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7709&quot;&gt;&lt;del&gt;HBASE-7709&lt;/del&gt;&lt;/a&gt; Infinite loop possible in Master/Master replication (stack: rev 1518335)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/WALProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/WAL.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/Import.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogKey.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSink.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotLogSplitter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/HLogPerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestMasterReplication.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13752987" author="lhofhansl" created="Wed, 28 Aug 2013 22:59:21 +0000"  >&lt;p&gt;Committed to 0.94 as well. Many thanks for the great patch, Vasu!&lt;/p&gt;</comment>
                            <comment id="13753119" author="hudson" created="Thu, 29 Aug 2013 00:49:39 +0000"  >&lt;p&gt;SUCCESS: Integrated in hbase-0.95-on-hadoop2 #276 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/276/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/276/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7709&quot; title=&quot;Infinite loop possible in Master/Master replication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7709&quot;&gt;&lt;del&gt;HBASE-7709&lt;/del&gt;&lt;/a&gt; Infinite loop possible in Master/Master replication (stack: rev 1518334)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/WALProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/protobuf/WAL.proto&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/Import.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogKey.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSink.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotLogSplitter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/HLogPerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestMasterReplication.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13753140" author="hudson" created="Thu, 29 Aug 2013 01:01:42 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.94-security #274 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/274/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/274/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7709&quot; title=&quot;Infinite loop possible in Master/Master replication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7709&quot;&gt;&lt;del&gt;HBASE-7709&lt;/del&gt;&lt;/a&gt; Infinite loop possible in Master/Master replication (Vasu Mariyala) (larsh: rev 1518410)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSink.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestMasterReplication.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13753164" author="hudson" created="Thu, 29 Aug 2013 01:29:26 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.94 #1128 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/1128/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/1128/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7709&quot; title=&quot;Infinite loop possible in Master/Master replication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7709&quot;&gt;&lt;del&gt;HBASE-7709&lt;/del&gt;&lt;/a&gt; Infinite loop possible in Master/Master replication (Vasu Mariyala) (larsh: rev 1518410)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSink.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestMasterReplication.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13753204" author="hudson" created="Thu, 29 Aug 2013 02:21:26 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #700 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/700/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/700/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7709&quot; title=&quot;Infinite loop possible in Master/Master replication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7709&quot;&gt;&lt;del&gt;HBASE-7709&lt;/del&gt;&lt;/a&gt; Infinite loop possible in Master/Master replication (stack: rev 1518335)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/WALProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/WAL.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/Import.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogKey.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSink.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotLogSplitter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/HLogPerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestMasterReplication.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12598525" name="0.95-trunk-rev1.patch" size="88159" author="vmariyala" created="Fri, 16 Aug 2013 20:35:34 +0000"/>
                            <attachment id="12599256" name="0.95-trunk-rev2.patch" size="105233" author="vasu.mariyala@gmail.com" created="Wed, 21 Aug 2013 19:41:46 +0000"/>
                            <attachment id="12599691" name="0.95-trunk-rev3.patch" size="104091" author="vasu.mariyala@gmail.com" created="Fri, 23 Aug 2013 19:03:10 +0000"/>
                            <attachment id="12599990" name="0.95-trunk-rev4.patch" size="106356" author="vasu.mariyala@gmail.com" created="Mon, 26 Aug 2013 18:04:12 +0000"/>
                            <attachment id="12598500" name="095-trunk.patch" size="87738" author="vmariyala" created="Fri, 16 Aug 2013 17:45:35 +0000"/>
                            <attachment id="12600457" name="7709-0.94-rev6.txt" size="36293" author="lhofhansl" created="Wed, 28 Aug 2013 20:58:51 +0000"/>
                            <attachment id="12597567" name="HBASE-7709-rev1.patch" size="16855" author="vasu.mariyala@gmail.com" created="Mon, 12 Aug 2013 21:35:24 +0000"/>
                            <attachment id="12598350" name="HBASE-7709-rev2.patch" size="36753" author="vmariyala" created="Fri, 16 Aug 2013 02:45:45 +0000"/>
                            <attachment id="12599237" name="HBASE-7709-rev3.patch" size="37302" author="vasu.mariyala@gmail.com" created="Wed, 21 Aug 2013 18:13:19 +0000"/>
                            <attachment id="12599690" name="HBASE-7709-rev4.patch" size="37374" author="vasu.mariyala@gmail.com" created="Fri, 23 Aug 2013 19:03:10 +0000"/>
                            <attachment id="12599751" name="HBASE-7709-rev5.patch" size="37435" author="vasu.mariyala@gmail.com" created="Sat, 24 Aug 2013 00:19:24 +0000"/>
                            <attachment id="12597230" name="HBASE-7709.patch" size="12093" author="vasu.mariyala@gmail.com" created="Sat, 10 Aug 2013 00:53:21 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Jan 2013 19:42:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>310257</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 16 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1hjlz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>310602</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>