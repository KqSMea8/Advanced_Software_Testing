<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:11:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10227/HBASE-10227.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10227] When a region is opened, its mvcc isn&apos;t correctly recovered when there are split hlogs to replay</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10227</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;When opening a region, all stores are examined to get the max MemstoreTS and it&apos;s used as the initial mvcc for the region, and then split hlogs are replayed. In fact the edits in split hlogs have kvs with greater mvcc than all MemstoreTS in all store files, but replaying them don&apos;t increment the mvcc according at all. From an overall perspective this mvcc recovering is &apos;logically&apos; incorrect/incomplete.&lt;/p&gt;

&lt;p&gt;Why currently it doesn&apos;t incur problem is because no active scanners exists and no new scanners can be created before the region opening completes, so the mvcc of all kvs in the resulted hfiles from hlog replaying can be safely set to zero. They are just treated as kvs put &apos;earlier&apos; than the ones in HFiles with mvcc greater than zero(say &apos;earlier&apos; since they have mvcc less than the ones with non-zero mvcc, but in fact they are put &apos;later&apos;), and without any incorrect impact just because during region opening there are no active scanners existing / created.&lt;/p&gt;

&lt;p&gt;This bug is just in &apos;logic&apos; sense for the time being, but if later on we need to survive mvcc in the region&apos;s whole logic lifecycle(across regionservers) and never set them to zero, this bug needs to be fixed first.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12686132">HBASE-10227</key>
            <summary>When a region is opened, its mvcc isn&apos;t correctly recovered when there are split hlogs to replay</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="fenghh">Honghua Feng</assignee>
                                    <reporter username="fenghh">Honghua Feng</reporter>
                        <labels>
                    </labels>
                <created>Mon, 23 Dec 2013 10:21:00 +0000</created>
                <updated>Tue, 14 Jan 2014 21:28:19 +0000</updated>
                                                                            <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="13857475" author="gustavoanatoly" created="Fri, 27 Dec 2013 12:57:58 +0000"  >&lt;p&gt;Hi, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fenghh&quot; class=&quot;user-hover&quot; rel=&quot;fenghh&quot;&gt;Honghua Feng&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I would like to work in this issue, but at this moment I&apos;m working in another bug. So could I assign to me and putting in my queue, to be the next task? Is it possible?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="13857550" author="stack" created="Fri, 27 Dec 2013 16:39:18 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gustavoanatoly&quot; class=&quot;user-hover&quot; rel=&quot;gustavoanatoly&quot;&gt;Gustavo Anatoly&lt;/a&gt; You are an &apos;contributor&apos; up in JIRA so you should be able to assign yourself.  I assigned this to you for now (&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fenghh&quot; class=&quot;user-hover&quot; rel=&quot;fenghh&quot;&gt;Honghua Feng&lt;/a&gt; can steal it back if he is working on it himself).&lt;/p&gt;</comment>
                            <comment id="13857595" author="gustavoanatoly" created="Fri, 27 Dec 2013 17:52:24 +0000"  >&lt;p&gt;Hi, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I understood, was just a careful to avoid problems with assignments.&lt;/p&gt;

&lt;p&gt;Thanks, for your advice.&lt;/p&gt;</comment>
                            <comment id="13858037" author="fenghh" created="Sat, 28 Dec 2013 15:04:43 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gustavoanatoly&quot; class=&quot;user-hover&quot; rel=&quot;gustavoanatoly&quot;&gt;Gustavo Anatoly&lt;/a&gt; : glad to know you&apos;re also aware of this bug and show interest for fixing it. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Actually this issue had already been fixed in my patch for JIRA-8721 (where the mvcc can&apos;t be set zero and need to keep across region move / regionserver failover / balance etc, I noticed and fixed this &apos;logic&apos; bug as a part of that patch), since JIRA-8721 experienced several times close/reopen/close, I think it&apos;s not a good timing to reopen it again. but the exposing of this bug and providing its fix can be opened as a separate JIRA.&lt;/p&gt;

&lt;p&gt;If you can&apos;t schedule time for this fix, maybe I can re-assign to myself and extract the fix for this bug from JIRA-8721&apos;s patch to here for discussion/review, what do you think? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gustavoanatoly&quot; class=&quot;user-hover&quot; rel=&quot;gustavoanatoly&quot;&gt;Gustavo Anatoly&lt;/a&gt; / &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13858107" author="yuzhihong@gmail.com" created="Sat, 28 Dec 2013 20:45:43 +0000"  >&lt;p&gt;There is considerable overlap between this JIRA and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10241&quot; title=&quot;implement mvcc-consistent scanners (across recovery)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10241&quot;&gt;HBASE-10241&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13858159" author="gustavoanatoly" created="Sat, 28 Dec 2013 23:01:50 +0000"  >&lt;p&gt;Thanks for reply, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fenghh&quot; class=&quot;user-hover&quot; rel=&quot;fenghh&quot;&gt;Honghua Feng&lt;/a&gt;. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I can schedule to start on 08/Jan/14, would be possible? This date is good? But if I can&apos;t start this task on 08/Jan. Please, re-assign for you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fenghh&quot; class=&quot;user-hover&quot; rel=&quot;fenghh&quot;&gt;Honghua Feng&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13858222" author="fenghh" created="Sun, 29 Dec 2013 03:03:56 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gustavoanatoly&quot; class=&quot;user-hover&quot; rel=&quot;gustavoanatoly&quot;&gt;Gustavo Anatoly&lt;/a&gt; : sounds good. I will also try to find time to extract the original fix for it from jira-8721 these days to attach here for your reference.&lt;/p&gt;</comment>
                            <comment id="13858224" author="fenghh" created="Sun, 29 Dec 2013 03:09:22 +0000"  >&lt;p&gt;thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; for directing. I just took a look at 10241, seems it together with 8763 is a bit general, while this one is pretty specific , its fix can be a part of those general jiras, so I think it&apos;s ok to fix this one separately, opinion? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13858232" author="fenghh" created="Sun, 29 Dec 2013 03:22:12 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; : actually I changed the (un)serialization of WALEdit to persist mvcc, and use it to correctly recover region&apos;s mvcc during reopening, that change is part of jira-8721&apos;s patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13858236" author="yuzhihong@gmail.com" created="Sun, 29 Dec 2013 03:34:30 +0000"  >&lt;p&gt;MVCC persistence in WAL is a subtask of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10241&quot; title=&quot;implement mvcc-consistent scanners (across recovery)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10241&quot;&gt;HBASE-10241&lt;/a&gt; too.&lt;/p&gt;</comment>
                            <comment id="13858238" author="fenghh" created="Sun, 29 Dec 2013 03:40:10 +0000"  >&lt;p&gt;yes, you mean &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10243&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;HBASE-10243&lt;/a&gt;? ...actually I&apos;ve already implemented it as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8721&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;HBASE-8721&lt;/a&gt;, and MVCC persistence is only the prerequisite of the fix for this issue. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13860515" author="sershe" created="Thu, 2 Jan 2014 18:23:26 +0000"  >&lt;p&gt;resolved that as dup of this as an earlier issue. Would be nice to see patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13868961" author="fenghh" created="Sun, 12 Jan 2014 07:14:46 +0000"  >&lt;p&gt;ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gustavoanatoly&quot; class=&quot;user-hover&quot; rel=&quot;gustavoanatoly&quot;&gt;Gustavo Anatoly&lt;/a&gt; : any update? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13868986" author="gustavoanatoly" created="Sun, 12 Jan 2014 09:57:38 +0000"  >&lt;p&gt;Hi, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fenghh&quot; class=&quot;user-hover&quot; rel=&quot;fenghh&quot;&gt;Honghua Feng&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Unfortunately I don&apos;t have, sorry. I&apos;m busy with other Jira and not be able complete this task. Please steal back this issue.&lt;br/&gt;
Thanks for you patient wait&lt;/p&gt;
</comment>
                            <comment id="13868994" author="fenghh" created="Sun, 12 Jan 2014 10:23:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gustavoanatoly&quot; class=&quot;user-hover&quot; rel=&quot;gustavoanatoly&quot;&gt;Gustavo Anatoly&lt;/a&gt; : nothing at all, please don&apos;t feel sorry, I&apos;ll take care of it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13869407" author="fenghh" created="Mon, 13 Jan 2014 10:26:58 +0000"  >&lt;p&gt;the fix is as below:&lt;br/&gt;
1. persist mvcc in HLog (in WALEdit)&lt;br/&gt;
2. never set KeyValue&apos;s mvcc to 0&lt;br/&gt;
3. always(not conditionally) include mvcc in HFile&lt;br/&gt;
4. reinitialize region mvcc after replaying split HLog files to include the greater ones in the new stores resulted from replaying/flushing split HLog files &amp;#8211; to correctly recover the region&apos;s mvcc&lt;/p&gt;

&lt;p&gt;Note to step 4: since replaying split HLog files need access mvcc, so we can&apos;t intialize mvcc after replaying split HLog files, reinitializing it to the final correct one is ok after replaying is done. An alternative fix is to add and use a new internalFlushcache method for replaying split HLog files which doesn&apos;t access mvcc(it&apos;s ok since when replaying split HLog files, it&apos;s impossible there is in-progress transaction/write not committed to HLog--no write to HLog during replaying split HLog files)&lt;/p&gt;</comment>
                            <comment id="13869573" author="hadoopqa" created="Mon, 13 Jan 2014 14:21:39 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12622605/HBASE-10227-trunk_v0.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12622605/HBASE-10227-trunk_v0.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12622605&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8403//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13869784" author="sershe" created="Mon, 13 Jan 2014 18:15:25 +0000"  >
&lt;p&gt;RB would be nice.&lt;br/&gt;
Storing mvcc in store file always is an interesting option.&lt;br/&gt;
However, it becomes unnecessary for most KVs after some time under current HBase assumptions (that storefiles can be compared, all KVs in one SF are older than all KVs in the other per seqId/mvcc).&lt;br/&gt;
The only uses for mvcc in KV at that point is exact same key in the file, and scanners, but the latter need disappears after some time, see some later comments in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10244&quot; title=&quot;store mvcc in store files per KV for longer time, discard during compactions based on scanner timeout&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10244&quot;&gt;HBASE-10244&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some minor comments on the patch:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;mvcc.reinitialize(maxMemstoreTS + 1); &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;is now called twice in the same place.&lt;/p&gt;

&lt;p&gt;With removal of usage performCompaction no longer needs smallestReadPoint.&lt;br/&gt;
Also parameter might not be necessary in createWriterInTmp&lt;/p&gt;

&lt;p&gt;Ok this is major comment.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;if (versionOrLength == VERSION_3) {&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Is it possible to add MVCCs from corresponding KVs to protobuf part, rather than expand WALEdit format?&lt;br/&gt;
I think the proper way is actually to make mvcc serialization a &quot;first class&quot; part of KV, there&apos;s JIRA for that; but that might be too much for this patch, as it would require new HFile version.&lt;br/&gt;
For now we can at least avoid more hard-to-maintain-compat stuff down the line.&lt;br/&gt;
Already, it appears that old reader will not read V_3 correctly.&lt;/p&gt;
</comment>
                            <comment id="13870650" author="fenghh" created="Tue, 14 Jan 2014 11:48:25 +0000"  >&lt;p&gt;thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt; for the review&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Storing mvcc in store file always is an interesting option...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I agree, to recover correct mvcc for region opening, only the max mvcc in fileinfo of hfile is sufficient. Storing every KV&apos;s mvcc in hfile is only required to correct the delete semantic which relies on KV&apos;s mvcc to determine whether a delete occurs before/after a put, it is for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8721&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;HBASE-8721&lt;/a&gt;, I can revert this change if strong objection, your opinion?&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;mvcc.reinitialize(maxMemstoreTS + 1); is now called twice in the same place.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;not exactly. first call is mvcc.initialize(maxMemstoreTS + 1) to &lt;b&gt;initialize&lt;/b&gt; region mvcc using maxMemstoreTS from hfiles without regard to KVs in split hlog files; second call is mvcc.reinitialize(maxMemstoreTS + 1) to &lt;b&gt;re-initialize&lt;/b&gt; region mvcc with regard to KVs in newly flushed hfiles resulted from split hlog files replay. and I explained the reason in above comment &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;With removal of usage performCompaction no longer needs smallestReadPoint. Also parameter might not be necessary in createWriterInTmp&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;yes, you&apos;re right, it&apos;s a bit more aggressive clean-up without impact to correctness, I can do it if you insist&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Is it possible to add MVCCs from corresponding KVs to protobuf part, rather than expand WALEdit format? I think the proper way is actually to make mvcc serialization a &quot;first class&quot; part of KV, there&apos;s JIRA for that; but that might be too much for this patch, as it would require new HFile version.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I agree, KV is the better place to serialize mvcc but require new HFile version. serializing it in WALEdit is more lightweight and can serve the need to persist mvcc in HLog files. what about keeping current change?&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Already, it appears that old reader will not read V_3 correctly.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;sure,only back-compatibility is provided(new reader can read old HLog version, but not vice versa)&lt;/p&gt;</comment>
                            <comment id="13871169" author="sershe" created="Tue, 14 Jan 2014 20:57:51 +0000"  >&lt;p&gt;I think its ok to store all mvccs in files, but it might require discussion e.g. on dev list. &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; iirc you added the optimization to drop mvcc from files, what do you think?&lt;/p&gt;

&lt;p&gt;It&apos;s better to remove unused parameters if the change goes thru, as part of the same patch.&lt;/p&gt;

&lt;p&gt;Rolling upgrade may break if old versions cannot read new WALs. Why not put mvcc-s corresponding to KVs into PB part of WAL? It should be rather simple and backward/forward compatible. Easy to remove too if we move mvcc as part of KV itself eventually.&lt;/p&gt;</comment>
                            <comment id="13871201" author="lhofhansl" created="Tue, 14 Jan 2014 21:21:45 +0000"  >&lt;p&gt;I have not followed all the discussion here. The key points seem to be:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;we&apos;ll always keep the read point (never set it 0)&lt;/li&gt;
	&lt;li&gt;that in turns means we always have to store and decode it upon read&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;So for each KV we&apos;ll store an extra vlong. Since we don&apos;t set it to null we&apos;ll likely need at least 4 bytes. In that case we should probably not store as a vlong, but just an 8 byte long.&lt;br/&gt;
For small KeyValue that would probably make a noticeable performance impact, but probably acceptable if needed for correctness.&lt;/p&gt;

&lt;p&gt;What I do not understand what we&apos;re trying to solve. As described in the description we do not allow a scanner before splitting is finished, so this is not currently a problem. How would we allow opening a scanner before we open the region?&lt;/p&gt;</comment>
                            <comment id="13871212" author="sershe" created="Tue, 14 Jan 2014 21:28:19 +0000"  >&lt;p&gt;This JIRA tries to solve it for some other issue (see Feng&apos;s comment above).&lt;br/&gt;
Scanners before opening the region would be possible (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10241&quot; title=&quot;implement mvcc-consistent scanners (across recovery)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10241&quot;&gt;HBASE-10241&lt;/a&gt;) but they don&apos;t require storing MVCC for all time, just for more time. You could also do stuff like arbitrary file combinations for compactions with mvcc/seqId always stored (so you don&apos;t need the files to be in order to compare KVs).&lt;/p&gt;

&lt;p&gt;As for storing one way to optimize would be vlong with delta, base value in header. One would expect most KVs in most files to have mvccs in narrow range. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310060">
                    <name>Container</name>
                                            <outwardlinks description="contains">
                                        <issuelink>
            <issuekey id="12686450">HBASE-10243</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12686450">HBASE-10243</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12686447">HBASE-10241</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12622605" name="HBASE-10227-trunk_v0.patch" size="10350" author="fenghh" created="Mon, 13 Jan 2014 10:26:58 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 27 Dec 2013 12:57:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>365096</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 48 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1qxi7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>365402</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>