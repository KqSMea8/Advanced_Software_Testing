<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:20:06 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-17009/HBASE-17009.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-17009] Revisiting the removement of managed connection and connection caching</title>
                <link>https://issues.apache.org/jira/browse/HBASE-17009</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13197&quot; title=&quot;Connection API cleanup&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13197&quot;&gt;HBASE-13197&lt;/a&gt; we have done lots of good cleanups for Connection API, but among which &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13252&quot; title=&quot;Get rid of managed connections and connection caching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13252&quot;&gt;&lt;del&gt;HBASE-13252&lt;/del&gt;&lt;/a&gt; dropped the feature of managed connection and connection caching, and this JIRA propose to have a revisit on this decision for below reasons.&lt;/p&gt;

&lt;p&gt;Assume we have a long running process with multiple threads accessing HBase (a common case for streaming application), let&apos;s see what happens previously and now.&lt;/p&gt;

&lt;p&gt;Previously:&lt;br/&gt;
User could create an HTable instance whenever they want w/o worrying about the underlying connections because HBase client will mange it automatically, say no matter how many threads there will be only one Connection instance&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  @Deprecated
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HTable(Configuration conf, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; TableName tableName)
  &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    ...
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.connection = ConnectionManager.getConnectionInternal(conf);
    ...
  }

  &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; ClusterConnection getConnectionInternal(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Configuration conf)
    &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    HConnectionKey connectionKey = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HConnectionKey(conf);
    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (CONNECTION_INSTANCES) {
      HConnectionImplementation connection = CONNECTION_INSTANCES.get(connectionKey);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (connection == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        connection = (HConnectionImplementation)createConnection(conf, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        CONNECTION_INSTANCES.put(connectionKey, connection);
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (connection.isClosed()) {
        ConnectionManager.deleteConnection(connectionKey, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        connection = (HConnectionImplementation)createConnection(conf, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        CONNECTION_INSTANCES.put(connectionKey, connection);
      }
      connection.incCount();
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; connection;
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now:&lt;br/&gt;
User has to create the connection by themselves, using below codes like indicated in our recommendations&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    Connection connection = ConnectionFactory.createConnection(conf);
    Table table = connection.getTable(tableName);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And they must make sure &lt;b&gt;only one&lt;/b&gt; single connection created in one &lt;b&gt;process&lt;/b&gt; instead of creating HTable instance freely, or else there might be many connections setup to zookeeper/RS with multiple threads. Also user might ask &quot;when I should close the connection I close?&quot; and the answer is &quot;make sure don&apos;t close it until the &lt;b&gt;process&lt;/b&gt; shutdown&quot;&lt;/p&gt;

&lt;p&gt;So now we have much more things for user to &quot;Make sure&quot;, but custom is something hard to change. User used to create table instance in each thread (according to which table to access per requested) so probably they will still create connections everywhere, and then operators will have to crazily resolve all kinds of problems...&lt;/p&gt;

&lt;p&gt;So I&apos;m proposing to add back the managed connection and connection caching support. IMHO it&apos;s something good and ever existed in our implementation, so let&apos;s bring it back and save the workload for operators when they decided to upgrade from 1.x to 2.x&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</description>
                <environment></environment>
        <key id="13017539">HBASE-17009</key>
            <summary>Revisiting the removement of managed connection and connection caching</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="carp84">Yu Li</assignee>
                                    <reporter username="carp84">Yu Li</reporter>
                        <labels>
                    </labels>
                <created>Thu, 3 Nov 2016 07:29:46 +0000</created>
                <updated>Fri, 4 Nov 2016 08:34:02 +0000</updated>
                                                                            <component>Operability</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="15633686" author="enis" created="Thu, 3 Nov 2016 18:09:33 +0000"  >&lt;p&gt;Did you see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16713&quot; title=&quot;Bring back connection caching as a client API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16713&quot;&gt;HBASE-16713&lt;/a&gt;? &lt;/p&gt;

&lt;p&gt;I think the removal of HTable was the correct thing. Yes, it makes the life of the user a little bit harder, but the lifecycle should be managed explicitly. Otherwise, it is super hard to manage the resources and ensure that connections are closed, etc. &lt;/p&gt;

&lt;p&gt;I have a prototype patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16713&quot; title=&quot;Bring back connection caching as a client API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16713&quot;&gt;HBASE-16713&lt;/a&gt;. It does not bring HTable(Configuration) back, but it introduces a new &lt;tt&gt;CachingConnectionFactory&lt;/tt&gt; which does the caching for you if you do not want to deal with managing the lifecycle yourself. The difference is that the new Factory has its own lifecycle as well which is still managed explicitly. I&apos;ll attach it over there, and let me know whether this is the approach you want to take. &lt;/p&gt;</comment>
                            <comment id="15633929" author="carp84" created="Thu, 3 Nov 2016 19:23:52 +0000"  >&lt;p&gt;Thank you for the reference to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16713&quot; title=&quot;Bring back connection caching as a client API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16713&quot;&gt;HBASE-16713&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, let me check it carefully and will be back later today.&lt;/p&gt;</comment>
                            <comment id="15635667" author="carp84" created="Fri, 4 Nov 2016 08:34:02 +0000"  >&lt;p&gt;Back on this (sorry for the lag &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;)...&lt;/p&gt;

&lt;p&gt;Checking &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16713&quot; title=&quot;Bring back connection caching as a client API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16713&quot;&gt;HBASE-16713&lt;/a&gt; and got below questions:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Connection.getConnection() is removed in master for good reasons. The connection lifecycle should always be explicit&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Mind further explain these &quot;good reasons&quot;? As mentioned in description, I see some bad aspect for connection lifecycle exposed to end user. Or maybe I&apos;m misunderstanding the meaning of being &lt;b&gt;explicit&lt;/b&gt;?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Looking at the old code that we have in branch-1 for ConnectionManager, managed connections and the code in ConnectionCache, I think we should do a first-class client level API called ConnectionCache which will be a hybrid between ConnectionCache and old ConnectionManager.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Mind talking about more details about this &quot;hybrid&quot;?&lt;/p&gt;

&lt;p&gt;Basically I think we should supply two kinds of API for getting connection:&lt;br/&gt;
1. &lt;tt&gt;createConnection&lt;/tt&gt; just like the existing one, through which user could manage the connection lifecycle by themselves, and this mainly is for advanced users.&lt;br/&gt;
2. &lt;tt&gt;getConnection&lt;/tt&gt; like we ever had before, through which connection lifecycle is auto-managed and users don&apos;t need to worry about that. This is compatible with the old ways of HTable and could make the migration from old version more smoothly. And this is more kind for junior users.&lt;/p&gt;

&lt;p&gt;And we need to explicitly point this out in our refguid/doc so user could choose the way they prefer. Thoughts?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="13007763">HBASE-16713</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 3 Nov 2016 18:09:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35s67:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>