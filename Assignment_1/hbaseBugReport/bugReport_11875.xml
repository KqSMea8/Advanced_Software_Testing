<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:27:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11875/HBASE-11875.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11875] Referencing external package com/google/protobuf/ inside hbase-protcol module won&apos;t work in OSGI environment</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11875</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Hi&lt;/p&gt;

&lt;p&gt;HbaseZeroCopyByteString class isn&apos;t accessible in OSGI based environment. The reason is that it ends up in a separate route package within an OSGI bundle. As such the class isn&apos;t viewable by the classLoader.&lt;/p&gt;

&lt;p&gt;I understand that the hbase-module isn&apos;t an osgi bundle, but there is another project which makes use of this module to generate an osgi bundle for the OSGI container: &lt;a href=&quot;https://github.com/apache/servicemix4-bundles/tree/trunk/hbase-0.98.0-hadoop2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/servicemix4-bundles/tree/trunk/hbase-0.98.0-hadoop2&lt;/a&gt;. If you get hold of the binary or source artefact from maven, unzip the jar and you will see the structure of the project:&lt;br/&gt;
com/google/ (classes defined in this package are not visible by the classLoader).&lt;br/&gt;
org/apache/hbase&lt;/p&gt;

&lt;p&gt;I understand the reason of having a foreign package, because  LiteralByteString is package protected. It would be nice to work out another way of extending google protobuf classes. I would recommend going for composition as opposed to inheritance that will solve the problem.&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;

&lt;p&gt;Ayache&lt;/p&gt;

&lt;p&gt;Caused by: java.lang.NoClassDefFoundError: com/google/protobuf/HBaseZeroCopyByteString&lt;br/&gt;
	at org.apache.hadoop.hbase.protobuf.RequestConverter.buildRegionSpecifier(RequestConverter.java:908)&lt;span class=&quot;error&quot;&gt;&amp;#91;252:org.apache.servicemix.bundles.hbase:0.98.0.hadoop2-inps&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.protobuf.RequestConverter.buildGetRowOrBeforeRequest(RequestConverter.java:132)&lt;span class=&quot;error&quot;&gt;&amp;#91;252:org.apache.servicemix.bundles.hbase:0.98.0.hadoop2-inps&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.protobuf.ProtobufUtil.getRowOrBefore(ProtobufUtil.java:1466)&lt;span class=&quot;error&quot;&gt;&amp;#91;252:org.apache.servicemix.bundles.hbase:0.98.0.hadoop2-inps&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HTable$2.call(HTable.java:701)&lt;span class=&quot;error&quot;&gt;&amp;#91;252:org.apache.servicemix.bundles.hbase:0.98.0.hadoop2-inps&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HTable$2.call(HTable.java:699)&lt;span class=&quot;error&quot;&gt;&amp;#91;252:org.apache.servicemix.bundles.hbase:0.98.0.hadoop2-inps&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithRetries(RpcRetryingCaller.java:121)&lt;span class=&quot;error&quot;&gt;&amp;#91;252:org.apache.servicemix.bundles.hbase:0.98.0.hadoop2-inps&amp;#93;&lt;/span&gt;&lt;br/&gt;
	... 56 more&lt;/p&gt;</description>
                <environment>&lt;p&gt;OSGI container&lt;/p&gt;</environment>
        <key id="12738301">HBASE-11875</key>
            <summary>Referencing external package com/google/protobuf/ inside hbase-protcol module won&apos;t work in OSGI environment</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="akhettar">ayache khettar</reporter>
                        <labels>
                    </labels>
                <created>Mon, 1 Sep 2014 16:49:06 +0000</created>
                <updated>Tue, 2 Sep 2014 21:03:14 +0000</updated>
                                            <version>0.98.6</version>
                                                    <component>Protobufs</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="14117593" author="stack" created="Mon, 1 Sep 2014 17:49:21 +0000"  >&lt;p&gt;Does it still offend that we try loading our class and if it fails we just proceed without it?  Please illustrate how we could address this issue with composition. Thanks&lt;/p&gt;
</comment>
                            <comment id="14117925" author="akhettar" created="Tue, 2 Sep 2014 06:12:14 +0000"  >&lt;p&gt;It doesn&apos;t offend, and that&apos;s what I have implemented as workaround see below . Sorry for quickly jumping into suggestion that composition would solve the problem, still LiteralByteString is package protected you can&apos;t use composition either. How about a new module in Hbase project: google-protobuf-util which exposes only package: com.google.protobuf? And you will have it as dependency for any modules which needs to use the ByteStringer class.&lt;/p&gt;

&lt;p&gt; static {&lt;br/&gt;
    try &lt;/p&gt;
{
      HBaseZeroCopyByteString.wrap(new byte [0]);
    }
&lt;p&gt; catch (Throwable iae) &lt;/p&gt;
{
      USE_ZEROCOPYBYTESTRING = false;
      LOG.debug(&quot;Failed to classload HBaseZeroCopyByteString: &quot; + iae.toString());
    }
&lt;p&gt;  }&lt;/p&gt;</comment>
                            <comment id="14118564" author="stack" created="Tue, 2 Sep 2014 19:14:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;It doesn&apos;t offend, and that&apos;s what I have implemented as workaround see below .&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You are copying what is in the ByteStringer.java hbase class?&lt;/p&gt;

&lt;p&gt;We could add a google-protobuf-util module.  How you think that would help?&lt;/p&gt;

&lt;p&gt;We added ByteStringer because we ran into classloader issues.&lt;/p&gt;

&lt;p&gt;We had HBaseZeroCopyByteString in com.google.protobuf package in hbase-protocol module.  It worked except for some mapreduce corner cases where the hadoop cluster had already loaded the pb jar with its classloader and then a fat mapreduce jar that included hbase tried load HBaseZeroCopyByteString from the &quot;com.google.protobuf&quot; package and classloader would scream violation. See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11118&quot; title=&quot;non environment variable solution for &amp;quot;IllegalAccessError: class com.google.protobuf.ZeroCopyLiteralByteString cannot access its superclass com.google.protobuf.LiteralByteString&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11118&quot;&gt;&lt;del&gt;HBASE-11118&lt;/del&gt;&lt;/a&gt;  How would we avoid this scenario doing a google.protobuf.util module?&lt;/p&gt;

&lt;p&gt;Thanks for jumping in here.  The help is appreciated.&lt;/p&gt;
</comment>
                            <comment id="14118740" author="apurtell" created="Tue, 2 Sep 2014 21:03:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11118&quot; title=&quot;non environment variable solution for &amp;quot;IllegalAccessError: class com.google.protobuf.ZeroCopyLiteralByteString cannot access its superclass com.google.protobuf.LiteralByteString&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11118&quot;&gt;&lt;del&gt;HBASE-11118&lt;/del&gt;&lt;/a&gt; How would we avoid this scenario doing a google.protobuf.util module?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1, definitely check out the gory details of that issue. ByteStringer ended up being the least bad option among it, forking protobuf into an HBase maven module (along the lines as you suggest above), and adopting protostuff.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 1 Sep 2014 17:49:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 15 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1zk3b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>