<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:59:05 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-8849/HBASE-8849.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-8849] CellCodec should write and read the memstoreTS/mvccVersion</title>
                <link>https://issues.apache.org/jira/browse/HBASE-8849</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This JIRA is wrt discussion over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8496&quot; title=&quot;Implement tags and the internals of how a tag should look like&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8496&quot;&gt;&lt;del&gt;HBASE-8496&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Cell interface and the corresponding CellCodec provides a new way of serializing the Keyvalues.  &lt;br/&gt;
Cell interface supports getMvccVersion() and the javadoc says it could be &amp;gt; 0 if it exists or 0 otherwise.&lt;br/&gt;
But we don&apos;t tend to write/read the memstoreTS/mvccVersion in the Cell codec.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12655729">HBASE-8849</key>
            <summary>CellCodec should write and read the memstoreTS/mvccVersion</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="ram_krish">ramkrishna.s.vasudevan</reporter>
                        <labels>
                            <label>keyvalue</label>
                    </labels>
                <created>Tue, 2 Jul 2013 08:42:46 +0000</created>
                <updated>Fri, 20 Nov 2015 11:55:51 +0000</updated>
                            <resolved>Tue, 6 Aug 2013 17:19:57 +0000</resolved>
                                                    <fixVersion>0.98.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13697651" author="ram_krish" created="Tue, 2 Jul 2013 09:59:05 +0000"  >&lt;p&gt;Should memstoreTS be part of the Cell implementation?  Or it should continue the current way where we would write the memstoreTS after the each cell?&lt;br/&gt;
In that case when we try to read the Cell we should have a provision to set the memStoreTS to the cell?  Till the underlying format of cell remains KeyValue this may not be needed as KeyValue will have the setter for the memstoreTS.&lt;br/&gt;
Pls provide your suggestion on this.&lt;/p&gt;</comment>
                            <comment id="13698607" author="stack" created="Wed, 3 Jul 2013 05:07:20 +0000"  >&lt;p&gt;How each codec serializes is up to the code i&apos;d say Ram.  If present, codec could serialize the mvcc or not (probably should).  Ditto on deserialize.  If you want to change the cell codec to include mvcc, go ahead; cellcodec was just a hackup for testing purposes.&lt;/p&gt;</comment>
                            <comment id="13698632" author="ram_krish" created="Wed, 3 Jul 2013 05:42:37 +0000"  >&lt;p&gt;Patch that allows persisting the memstoreTS as Vlong.  Added the encodememstoreTS and decodememstoreTS flags.&lt;br/&gt;
If the codec used is CellCodec for HFileWriterV3 then we may or may not write/read the memstoreTS based on the HFile fileinfo metadata.&lt;/p&gt;</comment>
                            <comment id="13698670" author="stack" created="Wed, 3 Jul 2013 06:29:03 +0000"  >&lt;p&gt;Just say not to Writables... even WritableUtils.&lt;/p&gt;

&lt;p&gt;The vint done in WritableUtils is bad.  See Benoit on this: &lt;a href=&quot;https://github.com/OpenTSDB/asynchbase/blob/master/src/HBaseRpc.java#L849&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/OpenTSDB/asynchbase/blob/master/src/HBaseRpc.java#L849&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just do a long for now I&apos;d say &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;  We can come back later and make a fancier encoding.... should probably do some prefix encoding in here anyways &amp;#8211; why not... Can d later. &lt;/p&gt;</comment>
                            <comment id="13698671" author="ram_krish" created="Wed, 3 Jul 2013 06:33:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;Just say not to Writables... even WritableUtils.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok will change and update the patch.  Will keep it simple for now.&lt;/p&gt;</comment>
                            <comment id="13698834" author="ram_krish" created="Wed, 3 Jul 2013 11:07:28 +0000"  >&lt;p&gt;Updated patch.  &lt;/p&gt;</comment>
                            <comment id="13699384" author="stack" created="Wed, 3 Jul 2013 20:05:23 +0000"  >&lt;p&gt;You are going to get yourself in to trouble here Ram if you do this:&lt;/p&gt;

&lt;p&gt;+    CellEncoder(final OutputStream out, boolean encodeMemstoreTS) {&lt;/p&gt;

&lt;p&gt;...giving folks option of encoding mvcc (should be called mvcc not memstorets).&lt;/p&gt;

&lt;p&gt;What happens if the flag was set encoding but not on decoding?  It&apos;ll blow up?&lt;/p&gt;

&lt;p&gt;The style should be more MvccCellCodec for the codec that includes mvcc and another NoMvccCellCodec for the codec that does not.  For now I&apos;d say just under the wraps have CellCodec encode the mvcc.&lt;/p&gt;</comment>
                            <comment id="13699730" author="ram_krish" created="Thu, 4 Jul 2013 02:58:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;The style should be more MvccCellCodec for the codec that includes mvcc and another NoMvccCellCodec for the codec that does not. For now I&apos;d say just under the wraps have CellCodec encode the mvcc.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I agree with you on this.  Infact individual codecs should take care of handling mvcc.  But how should the read path be in my HFileReader?  Should i have 2 paths where if a codec that does not handle mvcc with in itself should be handled specifically and the codec that handles mvcc within itself should be handled specifically? This will make things complex.&lt;br/&gt;
With this codec based approach we should stick to a strategy wrt mvcc otherwise the Read path (infact even write path) will have to handle them.  If  we are ok on this then i can make a base class saying MvccCellCodec and NoMvccCellCodec  - so any new CellCodec would be inheriting either one of them and in the read/write path we need to switch based on what codec is used?&lt;br/&gt;
Does this make sense?  &lt;/p&gt;</comment>
                            <comment id="13699731" author="ram_krish" created="Thu, 4 Jul 2013 03:05:02 +0000"  >&lt;p&gt;Ideally when we start using the codec in the HFiles, the code for reading the KeyValue should be something like below&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; void readKeyValueLen() {
      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        &lt;span class=&quot;code-comment&quot;&gt;// TODO : Can we specify the max value here
&lt;/span&gt;        decoder.mark();
        decoder.advance();
        currKV = decoder.current();
        decoder.reset();
      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Error &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; reading the keyvalue len&quot;&lt;/span&gt;, e);
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above code reads the current cell and resets the position in the byte buffer.  Now if i need to handle mvcc, after this we have to read the mvcc explicitly.  Pls provide your opinion on this.&lt;/p&gt;</comment>
                            <comment id="13702941" author="stack" created="Tue, 9 Jul 2013 05:30:30 +0000"  >&lt;p&gt;Here is a suggestion.  I&apos;d think that an hfile would have blocks all of the same codec?  The codec used writing would be metadata on the hfile.  You&apos;d read what codec to use before you started pulling in blocks.  The file would be wrriten w/ a codec that included mvcc or it could be written with a codec that did not include mvcc?&lt;/p&gt;</comment>
                            <comment id="13702956" author="ram_krish" created="Tue, 9 Jul 2013 05:56:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;The codec used writing would be metadata on the hfile. You&apos;d read what codec to use before you started pulling in blocks&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes true.  We will be able to do this, should not be a problem.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The file would be wrriten w/ a codec that included mvcc or it could be written with a codec that did not include mvcc?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hmmm.. Yes.. We can have this.  But the read and write flow should be able to know about this and the framework that will be using the codec should take the decision of how to handle the mvcc.  Am i making it clear?  &lt;br/&gt;
So the framework should be intelligent enough to know this and work based on that.  Which i thought would make the read/write path to have additional code incase mvcc is not handled inside the codec.  &lt;/p&gt;</comment>
                            <comment id="13703017" author="anoop.hbase" created="Tue, 9 Jul 2013 07:36:49 +0000"  >&lt;p&gt;Handling the mvcc, I would say we need handle that fully in the Codec Encoder/Decoder. Let the encoder decide what to do with the mvcc. Might not be good to pass it as a boolean arg or so.&lt;/p&gt;</comment>
                            <comment id="13712576" author="ram_krish" created="Thu, 18 Jul 2013 18:04:00 +0000"  >&lt;p&gt;Simple patch.  Also writes mvcc.  Its better we write mvcc.  &lt;br/&gt;
@Stack&lt;br/&gt;
Pls provide your comments.&lt;/p&gt;</comment>
                            <comment id="13712681" author="hadoopqa" created="Thu, 18 Jul 2013 19:19:51 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12593016/HBASE-8849_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12593016/HBASE-8849_3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6401//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13721848" author="stack" created="Sun, 28 Jul 2013 04:27:57 +0000"  >&lt;p&gt;Should CellUtil let you add tags too?  That can be in new patch.  +1 on this one.&lt;/p&gt;</comment>
                            <comment id="13730977" author="ram_krish" created="Tue, 6 Aug 2013 17:19:57 +0000"  >&lt;p&gt;Committed to trunk i.e. 0.98.&lt;/p&gt;</comment>
                            <comment id="13730981" author="ram_krish" created="Tue, 6 Aug 2013 17:23:07 +0000"  >&lt;p&gt;Thanks for the review Stack.&lt;/p&gt;</comment>
                            <comment id="13731172" author="hudson" created="Tue, 6 Aug 2013 19:49:53 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #4348 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4348/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4348/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8849&quot; title=&quot;CellCodec should write and read the memstoreTS/mvccVersion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8849&quot;&gt;&lt;del&gt;HBASE-8849&lt;/del&gt;&lt;/a&gt; - CellCodec should write and read the memstoreTS/mvccVersion (Ram) (ramkrishna: rev 1511043)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/codec/CellCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/test/java/org/apache/hadoop/hbase/codec/TestCellCodec.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13731557" author="hudson" created="Wed, 7 Aug 2013 01:40:57 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #655 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/655/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/655/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8849&quot; title=&quot;CellCodec should write and read the memstoreTS/mvccVersion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8849&quot;&gt;&lt;del&gt;HBASE-8849&lt;/del&gt;&lt;/a&gt; - CellCodec should write and read the memstoreTS/mvccVersion (Ram) (ramkrishna: rev 1511043)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/codec/CellCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/test/java/org/apache/hadoop/hbase/codec/TestCellCodec.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15016594" author="lars_francke" created="Fri, 20 Nov 2015 11:55:51 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12590585" name="HBASE-8849_1.patch" size="22189" author="ram_krish" created="Wed, 3 Jul 2013 05:42:37 +0000"/>
                            <attachment id="12590623" name="HBASE-8849_2.patch" size="20646" author="ram_krish" created="Wed, 3 Jul 2013 11:07:28 +0000"/>
                            <attachment id="12593016" name="HBASE-8849_3.patch" size="3242" author="ram_krish" created="Thu, 18 Jul 2013 18:04:00 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 3 Jul 2013 05:07:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>336004</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1lyi7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>336328</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>