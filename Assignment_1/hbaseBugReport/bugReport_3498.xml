<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:10:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3498/HBASE-3498.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3498] Memstore scanner needs new semantics, which may require new data structure</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3498</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We may need a new memstore datastructure. Much has been written about the concurrency and speed and cpu usage, but there are new things that were brought to light with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Specifically we need a memstore scanner that serves up to the moment reads, with a row-level completeness. Specifically after a memstore scanner goes past the end of a row, it should return some kind of &apos;end of row&apos; token which the StoreScanner should trigger on to know it&apos;s at the end of the row. The next call to memstore scanner.next() should return the &lt;em&gt;very next available row from the start of that row&lt;/em&gt; at &lt;em&gt;the time it&apos;s requested&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It should specifically NOT:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return everything but the first column&lt;/li&gt;
	&lt;li&gt;skip a row that was inserted &lt;em&gt;after&lt;/em&gt; the previous next() was completed&lt;/li&gt;
&lt;/ul&gt;


</description>
                <environment></environment>
        <key id="12497404">HBASE-3498</key>
            <summary>Memstore scanner needs new semantics, which may require new data structure</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12469746">HBASE-2856</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="ryanobjc">ryan rawson</assignee>
                                    <reporter username="ryanobjc">ryan rawson</reporter>
                        <labels>
                    </labels>
                <created>Wed, 2 Feb 2011 00:41:33 +0000</created>
                <updated>Thu, 17 Nov 2011 23:38:41 +0000</updated>
                            <resolved>Thu, 17 Nov 2011 23:38:41 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12989475" author="ryanobjc" created="Wed, 2 Feb 2011 00:46:50 +0000"  >&lt;p&gt;The current memstore does not exhibit the require behavior because it is just a flat sequence of KVs, with no understanding of &apos;row&apos; or &apos;between a row&apos;. This means as you are iterating through, the StoreScanner will find the &apos;next&apos; row and will halt scanning for that row, leaving the memstore scanner pointing to the next row. Now other writing threads have a chance to insert KVs between the current KV and the &apos;previous&apos; KV which was just scanned out. This has 2 major problems:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;we could miss a row, and not be as live as we want. This seems kind of academic, but can have real consequences in the META scanner in the master.&lt;/li&gt;
	&lt;li&gt;we might miss new columns, or version of columns, on the current row. Thus when we read the next row we MISS data returning a partial read to the StoreScanner that can only be fixed by pruning back how &apos;current&apos; we are in terms of which KV.memstoreTS to include. This has different problems for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12989478" author="ryanobjc" created="Wed, 2 Feb 2011 00:51:04 +0000"  >&lt;p&gt;I came up with 2 solutions to this problem:&lt;/p&gt;

&lt;p&gt;Create Sentential KV.firstOnRow and KV.lastOnRow values that the memstore scanner can &apos;hang out&apos; at between rows. They will ensure that edits will end up before the scanner iterator point. It might seem only the lastOnRow is required, but the firstOnRow is also required because without it after a reseek we will end up pointing to the &apos;first&apos; real KV of a row, thus causing a problem when someone else inserts more KVs before us.&lt;/p&gt;

&lt;p&gt;Another solution is to change our data structure to be more like:&lt;br/&gt;
CSLM&amp;lt;byte[],SortedSet&amp;lt;KeyValue&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;The memstore scanner would know when it got to the &apos;end&apos; of a row, and return a sentinel value to the StoreScanner, then it would allow the next next() call to push us into the next row, and only iterate there WHEN we need to, thus never &apos;missing&apos; a row. Also we could control the iteration to ensure we dont actually start &quot;in&quot; to the next row until we really need to.  We might be able to use a different kind of data structure for the SortedSet, giving us benefits there.&lt;/p&gt;</comment>
                            <comment id="12989491" author="stack" created="Wed, 2 Feb 2011 01:35:00 +0000"  >&lt;p&gt;We could pull in the Apache Harmony CSLS that Todd suggested and mod it so that rather being Object agnostic, it knows about KVs.  We might make its Iterator row boundary cognizant (backing up iterator when new row comes in, in between next invocations... that kinda thing).&lt;/p&gt;</comment>
                            <comment id="12989847" author="ryanobjc" created="Wed, 2 Feb 2011 22:53:17 +0000"  >&lt;p&gt;one of the problems with the memstore scanner is peeking is &lt;em&gt;destructive&lt;/em&gt;. Meaning when you &apos;peek&apos; you are returning what the internal iterator is pointing to and when you call next() you return THAT and then move the iterator forward. Meaning the iterator pointer is always pointing to the peek()able value, rather than the &apos;current&apos; value. &lt;/p&gt;

&lt;p&gt;If the memstore scanner was not destructive, we&apos;d have a situation when the scanner stack called peek() we&apos;d be looking at the NEXT row, but the iterator would be pointing to whatever is &apos;now&apos;.&lt;/p&gt;

&lt;p&gt;There is one problem with this, and that is the KeyValueHeap doesn&apos;t like it when peek() changes.  Since the value of MemStoreScanner.peek() would change depending on if someone else inserted rows, this causes major problems in KVH, in now we get stuff out of order.&lt;/p&gt;</comment>
                            <comment id="12989859" author="ryanobjc" created="Wed, 2 Feb 2011 23:14:55 +0000"  >&lt;p&gt;After talking to stack about the unstable peek(), this might be ok.  &lt;/p&gt;

&lt;p&gt;Consider, we have a scanner at the &apos;current&apos; position that has a peek()ed value of &apos;C&apos;.  Now later on when we peek() again we get &apos;B&apos; or some other value &amp;lt; &apos;C&apos; (but larger than the previously &quot;gotten&quot; values). This is still the &apos;current&apos; heap in the KeyValueHeap, and only during the &apos;next&apos; would we recheck the priority queue. At this point a different scanner might become the &apos;current&apos; (aka top) scanner, but it could NOT have previously been the current scanner, because it would have had to have a value &amp;lt; &apos;C&apos;, which it did not.&lt;/p&gt;

&lt;p&gt;This only works if only 1 KeyValueScanner has an unstable &apos;peek&apos; and only if it is unstable in 1 direction (gets smaller than) only.&lt;/p&gt;</comment>
                            <comment id="13047609" author="stack" created="Fri, 10 Jun 2011 22:46:03 +0000"  >&lt;p&gt;Moving out of 0.92.0. Pull it back in if you think different.&lt;/p&gt;</comment>
                            <comment id="13152462" author="amitanand" created="Thu, 17 Nov 2011 23:38:41 +0000"  >&lt;p&gt;We decided to go with the approach of writing down the memstoreTS to disk.&lt;/p&gt;

&lt;p&gt;that has been fixed in the remaining sub-tasks of 2856.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12469746">HBASE-2856</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12526531">HBASE-4570</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 2 Feb 2011 01:35:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33052</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 5 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hmif:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100909</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>