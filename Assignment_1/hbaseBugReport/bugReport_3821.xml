<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:13:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3821/HBASE-3821.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3821]  &quot;NOT flushing memstore for region&quot; keep on printing for half an hour</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3821</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;&quot;NOT flushing memstore for region&quot; keep on printing for half an hour in the regionserver. Then I restart hbase. I think there may be deadlock or cycling.&lt;br/&gt;
I know that when splitting region, it will doclose of region, and set writestate.writesEnabled = false  and may run close preflush. This will make flush fail and print &quot;NOT flushing memstore for region&quot;. But It should be finished after a while.&lt;/p&gt;

&lt;p&gt;logs:&lt;br/&gt;
2011-04-18 16:28:27,960 DEBUG org.apache.hadoop.hbase.regionserver.CompactSplitThread: Compaction requested for ufdr,,1303124043153.031f37c9c23fcab17797b06b90205610. because regionserver60020.cacheFlusher; priority=-1, compaction queue size=1&lt;br/&gt;
2011-04-18 16:28:30,171 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: Flush requested on ufdr,,1303124043153.031f37c9c23fcab17797b06b90205610.&lt;br/&gt;
2011-04-18 16:28:30,171 WARN org.apache.hadoop.hbase.regionserver.MemStoreFlusher: Region ufdr,,1303124043153.031f37c9c23fcab17797b06b90205610. has too many store files; delaying flush up to 90000ms&lt;br/&gt;
2011-04-18 16:28:32,119 INFO org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogWriter: Using syncFs &amp;#8211; &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-200&quot; title=&quot;In HDFS, sync() not yet guarantees data available to the new readers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-200&quot;&gt;&lt;del&gt;HDFS-200&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
2011-04-18 16:28:32,285 INFO org.apache.hadoop.hbase.regionserver.wal.HLog: Roll /hbase/.logs/linux253,60020,1303123943360/linux253%3A60020.1303124206693, entries=5226, filesize=255913736. New hlog /hbase/.logs/linux253,60020,1303123943360/linux253%3A60020.1303124311822&lt;br/&gt;
2011-04-18 16:28:32,287 DEBUG org.apache.hadoop.hbase.regionserver.wal.HLog: Found 1 hlogs to remove out of total 2; oldest outstanding sequenceid is 11037 from region 031f37c9c23fcab17797b06b90205610&lt;br/&gt;
2011-04-18 16:28:32,288 INFO org.apache.hadoop.hbase.regionserver.wal.HLog: moving old hlog file /hbase/.logs/linux253,60020,1303123943360/linux253%3A60020.1303123945481 whose highest sequenceid is 6052 to /hbase/.oldlogs/linux253%3A60020.1303123945481&lt;br/&gt;
2011-04-18 16:28:42,701 INFO org.apache.hadoop.hbase.regionserver.Store: Completed major compaction of 4 file(s), new file=hdfs://10.18.52.108:9000/hbase/ufdr/031f37c9c23fcab17797b06b90205610/value/4398465741579485290, size=281.4m; total size for store is 468.8m&lt;br/&gt;
2011-04-18 16:28:42,712 INFO org.apache.hadoop.hbase.regionserver.HRegion: completed compaction on region ufdr,,1303124043153.031f37c9c23fcab17797b06b90205610. after 1mins, 40sec&lt;br/&gt;
2011-04-18 16:28:42,741 INFO org.apache.hadoop.hbase.regionserver.SplitTransaction: Starting split of region ufdr,,1303124043153.031f37c9c23fcab17797b06b90205610.&lt;br/&gt;
2011-04-18 16:28:42,770 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: Closing ufdr,,1303124043153.031f37c9c23fcab17797b06b90205610.: disabling compactions &amp;amp; flushes&lt;br/&gt;
2011-04-18 16:28:42,770 INFO org.apache.hadoop.hbase.regionserver.HRegion: Running close preflush of ufdr,,1303124043153.031f37c9c23fcab17797b06b90205610.&lt;br/&gt;
2011-04-18 16:28:42,771 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: Started memstore flush for ufdr,,1303124043153.031f37c9c23fcab17797b06b90205610., current region memstore size 105.6m&lt;br/&gt;
2011-04-18 16:28:42,818 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: Finished snapshotting, commencing flushing stores&lt;br/&gt;
2011-04-18 16:28:42,846 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: NOT flushing memstore for region ufdr,,1303124043153.031f37c9c23fcab17797b06b90205610., flushing=false, writesEnabled=false&lt;br/&gt;
2011-04-18 16:28:42,849 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: Flush requested on ufdr,,1303124043153.031f37c9c23fcab17797b06b90205610.&lt;br/&gt;
2011-04-18 16:28:42,849 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: NOT flushing memstore for region ufdr,,1303124043153.031f37c9c23fcab17797b06b90205610., flushing=false, writesEnabled=false ......&lt;br/&gt;
2011-04-18 17:04:08,803 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: NOT flushing memstore for region ufdr,,1303124043153.031f37c9c23fcab17797b06b90205610., flushing=false, writesEnabled=false&lt;br/&gt;
2011-04-18 17:04:08,803 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: Flush requested on ufdr,,1303124043153.031f37c9c23fcab17797b06b90205610.&lt;br/&gt;
Mon Apr 18 17:04:24 IST 2011 Starting regionserver on linux253 ulimit -n 1024&lt;/p&gt;</description>
                <environment></environment>
        <key id="12505159">HBASE-3821</key>
            <summary> &quot;NOT flushing memstore for region&quot; keep on printing for half an hour</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="zhoushuaifeng">zhoushuaifeng</assignee>
                                    <reporter username="zhoushuaifeng">zhoushuaifeng</reporter>
                        <labels>
                    </labels>
                <created>Tue, 26 Apr 2011 07:10:28 +0000</created>
                <updated>Fri, 20 Nov 2015 12:41:25 +0000</updated>
                            <resolved>Wed, 4 May 2011 03:53:18 +0000</resolved>
                                    <version>0.90.1</version>
                                    <fixVersion>0.90.3</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13025103" author="zhoushuaifeng" created="Tue, 26 Apr 2011 07:13:26 +0000"  >&lt;p&gt;I think the problem is like this:&lt;/p&gt;

&lt;p&gt;1, When split region, it will close parent region, and set writestate.writesEnabled = false:&lt;/p&gt;

&lt;p&gt;  private List&amp;lt;StoreFile&amp;gt; doClose(final boolean abort)&lt;br/&gt;
  throws IOException {&lt;br/&gt;
    synchronized (writestate) {&lt;br/&gt;
      // Disable compacting and flushing by background threads for this&lt;br/&gt;
      // region.&lt;br/&gt;
      writestate.writesEnabled = false;&lt;/p&gt;

&lt;p&gt;2, If the memstore is large enouth, preflush will happen:&lt;/p&gt;

&lt;p&gt;    if (!abort &amp;amp;&amp;amp; !wasFlushing &amp;amp;&amp;amp; worthPreFlushing()) &lt;/p&gt;
{
      LOG.info(&quot;Running close preflush of &quot; + this.getRegionNameAsString());
      internalFlushcache();
    }
&lt;p&gt;    this.closing.set(true);&lt;br/&gt;
    lock.writeLock().lock();&lt;/p&gt;

&lt;p&gt;3, IOException happened, and preflushing failed, and closing parent failed:&lt;br/&gt;
    createSplitDir(this.parent.getFilesystem(), this.splitdir);&lt;br/&gt;
    this.journal.add(JournalEntry.CREATE_SPLIT_DIR);&lt;/p&gt;

&lt;p&gt;    List&amp;lt;StoreFile&amp;gt; hstoreFilesToSplit = this.parent.close(false); if (hstoreFilesToSplit == null) {&lt;/p&gt;


&lt;p&gt;4, roll back split is calling, but split state stay in &quot;CREATE_SPLIT_DIR&quot;, so , only clenupSplitDir will happen.&lt;br/&gt;
    while (iterator.hasPrevious()) {&lt;br/&gt;
      JournalEntry je = iterator.previous();&lt;br/&gt;
      switch(je) {&lt;br/&gt;
      case CREATE_SPLIT_DIR:&lt;br/&gt;
        cleanupSplitDir(fs, this.splitdir);&lt;br/&gt;
        break;&lt;/p&gt;

&lt;p&gt;      case CLOSED_PARENT_REGION:&lt;/p&gt;

&lt;p&gt;5, what about writestate.writesEnabled? it stayed in false, no one handle it. So, even split is roll back, but no flush can success in parent region.&lt;/p&gt;</comment>
                            <comment id="13025363" author="stack" created="Tue, 26 Apr 2011 18:24:48 +0000"  >&lt;p&gt;Excellent digging Zhou!  Yes.... if the preflush fails, we need to reset the work done by &apos;writestate.writesEnabled = false;&apos;  If you have a patch, that&apos;d be great.&lt;/p&gt;

&lt;p&gt;Was the fail to split a transitory error?  Were you able to flush memory successfully later?&lt;/p&gt;</comment>
                            <comment id="13025553" author="zhoushuaifeng" created="Wed, 27 Apr 2011 01:50:02 +0000"  >&lt;p&gt;I think there are several ways to fix it:&lt;br/&gt;
1, in the roll back handling , like this:&lt;br/&gt;
      case CREATE_SPLIT_DIR:&lt;br/&gt;
        +this.parent.writestate.writesEnabled = true;&lt;br/&gt;
        cleanupSplitDir(fs, this.splitdir);&lt;br/&gt;
        break;&lt;br/&gt;
2, catch ioException after doclose or preflush.&lt;br/&gt;
I think the first one is better. Do you think? And if there is anything else should be done?&lt;br/&gt;
The patch is the first way.&lt;/p&gt;</comment>
                            <comment id="13025557" author="zhoushuaifeng" created="Wed, 27 Apr 2011 01:53:41 +0000"  >&lt;p&gt;Yes, the fail to split is a transitory error. It&apos;s able to flush memory successfully later.&lt;/p&gt;</comment>
                            <comment id="13025594" author="ram_krish" created="Wed, 27 Apr 2011 04:05:35 +0000"  >&lt;p&gt;I would like to add up to zhoushuaifeng analysis&lt;br/&gt;
Suppose the api cleanUpSplitDir()  is throwing IOExceptin due to some DFS error&lt;br/&gt;
We try to roll back.&lt;br/&gt;
As part of rollback if we still get an DFS error then the exception is not handled.&lt;br/&gt;
We try to handle only RunTimeException and hence the exceptin gets propogated till the run method of the CompactSplitThread.&lt;br/&gt;
Here again the exception is not handled.&lt;br/&gt;
I think its better to handle this so that atleast the user comes to know about the exception.&lt;/p&gt;</comment>
                            <comment id="13025633" author="zhoushuaifeng" created="Wed, 27 Apr 2011 06:26:39 +0000"  >&lt;p&gt;here:&lt;br/&gt;
      try &lt;/p&gt;
{
        LOG.info(&quot;Running rollback of failed split of &quot; +
          parent.getRegionNameAsString() + &quot;; &quot; + ioe.getMessage());
        st.rollback(this.server);
        LOG.info(&quot;Successful rollback of failed split of &quot; +
          parent.getRegionNameAsString());
      }
&lt;p&gt; catch (RuntimeException e) &lt;/p&gt;
{
        // If failed rollback, kill this server to avoid having a hole in table.
        LOG.info(&quot;Failed rollback of failed split of &quot; +
          parent.getRegionNameAsString() + &quot; -- aborting server&quot;, e);
        this.server.abort(&quot;Failed split&quot;);
      }

&lt;p&gt;May be we should cach IOException to abort server too?&lt;/p&gt;</comment>
                            <comment id="13028533" author="jdcryans" created="Wed, 4 May 2011 00:46:04 +0000"  >&lt;p&gt;I agree, not handling the IOE is kinda weird because you end up with a CompactSplitThread that may have stopped while the rest of the RS could still be running.&lt;/p&gt;

&lt;p&gt;@zhoushuaifeng, to paste code there&apos;s a special tag you can use, that last message is quite unreadable. Please refer to the wiki markup help (the yellow question mark button). Thanks!&lt;/p&gt;</comment>
                            <comment id="13028544" author="zhoushuaifeng" created="Wed, 4 May 2011 01:19:33 +0000"  >&lt;p&gt;thanks J-D, below are the code may be changed to handle the problem.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;CompactSplitThread.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      st.execute(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.server, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.server);
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Running rollback of failed split of &quot;&lt;/span&gt; +
          parent.getRegionNameAsString() + &lt;span class=&quot;code-quote&quot;&gt;&quot;; &quot;&lt;/span&gt; + e.getMessage());
        st.rollback(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.server, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.server);
        LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Successful rollback of failed split of &quot;&lt;/span&gt; +
          parent.getRegionNameAsString());
      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (-&lt;span class=&quot;code-object&quot;&gt;Runtime&lt;/span&gt;-Exception ee) {
        &lt;span class=&quot;code-comment&quot;&gt;// If failed rollback, kill &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; server to avoid having a hole in table.
&lt;/span&gt;        LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Failed rollback of failed split of &quot;&lt;/span&gt; +
          parent.getRegionNameAsString() + &lt;span class=&quot;code-quote&quot;&gt;&quot; -- aborting server&quot;&lt;/span&gt;, ee);
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.server.abort(&lt;span class=&quot;code-quote&quot;&gt;&quot;Failed split&quot;&lt;/span&gt;);
      }
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;Patch v2 include this change.&lt;/p&gt;</comment>
                            <comment id="13028577" author="stack" created="Wed, 4 May 2011 03:53:18 +0000"  >&lt;p&gt;Committed branch and trunk.  Small important fix (I see that in the compaction code above, it was using &apos;Exception&apos; rather than &apos;RuntimeException&apos; so this patch made the two catches match).  Thanks for the patch Zhou.  I added you as a contributor.&lt;/p&gt;</comment>
                            <comment id="13030226" author="hudson" created="Sat, 7 May 2011 00:08:31 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1909 (See &lt;a href=&quot;https://builds.apache.org/hudson/job/HBase-TRUNK/1909/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/hudson/job/HBase-TRUNK/1909/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="15016973" author="lars_francke" created="Fri, 20 Nov 2015 12:41:25 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12477467" name="HBase-3821 v1.txt" size="481" author="zhoushuaifeng" created="Wed, 27 Apr 2011 01:50:02 +0000"/>
                            <attachment id="12478115" name="HBase-3821 v2.txt" size="1243" author="zhoushuaifeng" created="Wed, 4 May 2011 01:19:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 26 Apr 2011 18:24:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27042</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ho1z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101159</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>