<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:27:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5402/HBASE-5402.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5402] PerformanceEvaluation creates the wrong number of rows in randomWrite</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5402</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The command line &apos;hbase org.apache.hadoop.hbase.PerformanceEvaluation randomWrite 10&apos; should result in a table with 10 * (1024 * 1024) rows (so 10485760).  Instead what happens is that the randomWrite job reports writing that many rows (exactly) but running rowcounter against the table reveals only e.g 6549899 rows.  A second attempt to build the table produced slightly different results (e.g. 6627689).  I see a similar discrepancy when using 50 instead of 10 clients (~35% smaller than expected).&lt;/p&gt;

&lt;p&gt;Further experimentation reveals that the problem is key collision - by removing the % totalRows in getRandomRow I saw a reduction in collisions (table was ~8M rows instead of 6.6M).  Replacing the random row key with UUIDs instead of Integers solved the problem and produced exactly 10485760 rows.  But that makes the key size 16 bytes instead of the current 10, so I&apos;m not sure that&apos;s an acceptable solution.&lt;/p&gt;

&lt;p&gt;Here&apos;s the UUID code I used:&lt;/p&gt;

&lt;p&gt;  public static byte[] format(final UUID uuid) {&lt;br/&gt;
    long msb = uuid.getMostSignificantBits();&lt;br/&gt;
    long lsb = uuid.getLeastSignificantBits();&lt;br/&gt;
    byte[] buffer = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;16&amp;#93;&lt;/span&gt;;&lt;/p&gt;

&lt;p&gt;    for (int i = 0; i &amp;lt; 8; i++) &lt;/p&gt;
{
      buffer[i] = (byte) (msb &amp;gt;&amp;gt;&amp;gt; 8 * (7 - i));
    }
&lt;p&gt;    for (int i = 8; i &amp;lt; 16; i++) &lt;/p&gt;
{
      buffer[i] = (byte) (lsb &amp;gt;&amp;gt;&amp;gt; 8 * (7 - i));
    }

&lt;p&gt;    return buffer;&lt;br/&gt;
  }&lt;/p&gt;

&lt;p&gt;which is invoked within getRandomRow with &lt;/p&gt;

&lt;p&gt;return format(UUID.randomUUID());&lt;/p&gt;</description>
                <environment></environment>
        <key id="12542688">HBASE-5402</key>
            <summary>PerformanceEvaluation creates the wrong number of rows in randomWrite</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="7">Later</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="oliver@mineallmeyn.com">Oliver Meyn</reporter>
                        <labels>
                            <label>beginner</label>
                    </labels>
                <created>Wed, 15 Feb 2012 14:35:48 +0000</created>
                <updated>Wed, 7 Jan 2015 14:38:22 +0000</updated>
                            <resolved>Wed, 7 Jan 2015 14:38:22 +0000</resolved>
                                                                    <component>test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13208618" author="jdcryans" created="Wed, 15 Feb 2012 17:49:05 +0000"  >&lt;p&gt;I don&apos;t see this is an issue, it does create the right amount of rows if you consider counting versions.&lt;/p&gt;</comment>
                            <comment id="13209227" author="oliver@mineallmeyn.com" created="Thu, 16 Feb 2012 08:44:59 +0000"  >&lt;p&gt;I agree that the test itself is accurate in as much as it writes the number of rows it says it will (given multiple versions).  The problem is that the resulting table is what is used in any subsequent scan tests using PE, which are then double reading some rows, rather than reading every row once.  This is counter intuitive, and also introduces the possibility of cache hits, which I think is not what is expected by users doing a scan test.&lt;/p&gt;</comment>
                            <comment id="13209531" author="jdcryans" created="Thu, 16 Feb 2012 17:44:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;The problem is that the resulting table is what is used in any subsequent scan tests using PE, which are then double reading some rows, rather than reading every row once&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Following this logic, how would a random read test work with keys that are UUIDs? You&apos;ll have to be lucky to get a couple of hits &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is counter intuitive, and also introduces the possibility of cache hits, which I think is not what is expected by users doing a scan test.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Considering that blocks are 64KB and rows are ~1.5KB (keys+value), cache hits is going to happen no matter what.&lt;/p&gt;</comment>
                            <comment id="13209550" author="tlipcon" created="Thu, 16 Feb 2012 17:58:05 +0000"  >&lt;p&gt;Why don&apos;t we change it so that, instead of random, it just counts from 1 to 1M but puts the bits through some kind of blender? Easiest is to reverse the bit order, but could also do more creative swapping. Each mapper could also take its ascribed range of keys, break it into 100 subranges, and randomize each of the subranges.&lt;/p&gt;</comment>
                            <comment id="13210131" author="oliver@mineallmeyn.com" created="Fri, 17 Feb 2012 08:16:27 +0000"  >&lt;p&gt;JD has succinctly dismantled my UUID argument, so those are out &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  And I hadn&apos;t thought through the caching issue, so obviously need to learn some more.  I like Todd&apos;s idea of each mapper randomizing some fixed range of keys - that buys a predictable number of rows and also a defined key space for doing random reads.&lt;/p&gt;</comment>
                            <comment id="14267603" author="clehene" created="Wed, 7 Jan 2015 13:06:29 +0000"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;~oliver_meyn`&amp;#93;&lt;/span&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; this seems a nice to have. Here&apos;s the current code that generates the key&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] getRandomRow(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Random random, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; totalRows) {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; format(random.nextInt(&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MAX_VALUE) % totalRows);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14267609" author="oliver_meyn" created="Wed, 7 Jan 2015 13:15:48 +0000"  >&lt;p&gt;As nobody else has commented on this issue I don&apos;t think it&apos;s worth debating further - I&apos;m fine with Close as Invalid.&lt;/p&gt;</comment>
                            <comment id="14267687" author="clehene" created="Wed, 7 Jan 2015 14:38:22 +0000"  >&lt;p&gt;Closing it with resolution later.  It may make sense to a have a deterministic, invertible hash, in case someone wants to play with it.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 15 Feb 2012 17:49:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>227974</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 49 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02ckv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11639</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>