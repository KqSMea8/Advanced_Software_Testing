<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:37:00 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6466/HBASE-6466.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6466] Enable multi-thread for memstore flush</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6466</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;If the KV is large or Hlog is closed with high-pressure putting, we found memstore is often above the high water mark and block the putting.&lt;/p&gt;

&lt;p&gt;So should we enable multi-thread for Memstore Flush?&lt;/p&gt;

&lt;p&gt;Some performance test data for reference,&lt;/p&gt;

&lt;p&gt;1.test environment &#65306; &lt;br/&gt;
random writting&#65307;upper memstore limit 5.6GB;lower memstore limit 4.8GB;400 regions per regionserver&#65307;row len=50 bytes, value len=1024 bytes;5 regionserver, 300 ipc handler per regionserver;5 client, 50 thread handler per client for writing&lt;/p&gt;

&lt;p&gt;2.test results:&lt;/p&gt;

&lt;p&gt;one cacheFlush handler, tps: 7.8k/s per regionserver, Flush:10.1MB/s per regionserver, appears many aboveGlobalMemstoreLimit blocking&lt;/p&gt;

&lt;p&gt;two cacheFlush handlers, tps: 10.7k/s per regionserver, Flush:12.46MB/s per regionserver,&lt;/p&gt;

&lt;p&gt;200 thread handler per client &amp;amp; two cacheFlush handlers, tps:16.1k/s per regionserver, Flush:18.6MB/s per regionserver&lt;/p&gt;</description>
                <environment></environment>
        <key id="12600418">HBASE-6466</key>
            <summary>Enable multi-thread for memstore flush</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="zjushch">chunhui shen</assignee>
                                    <reporter username="zjushch">chunhui shen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 27 Jul 2012 03:13:16 +0000</created>
                <updated>Thu, 17 Apr 2014 10:15:32 +0000</updated>
                            <resolved>Sat, 9 Feb 2013 03:53:49 +0000</resolved>
                                    <version>0.95.2</version>
                                    <fixVersion>0.95.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>25</watches>
                                                                <comments>
                            <comment id="13423668" author="zhihyu@ebaysf.com" created="Fri, 27 Jul 2012 04:41:22 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.handlerCount = conf.getInt(&lt;span class=&quot;code-quote&quot;&gt;&quot;hbase.regionserver.thread.flush&quot;&lt;/span&gt;, 1);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;How about naming the new config param hbase.hstore.flusher.count ?&lt;br/&gt;
I would expect a default value greater than 1.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; threadName = &lt;span class=&quot;code-quote&quot;&gt;&quot;Cache Flush Handler &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.instanceNumber;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Name the thread &apos;MemStore Flush Handler &apos; ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+                &lt;span class=&quot;code-comment&quot;&gt;// Wasn&apos;t able to flush any region, but we&apos;re above low water
&lt;/span&gt;+                &lt;span class=&quot;code-comment&quot;&gt;// mark&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There is no need to reformat comment.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.cacheFlusher.setUncaughtExceptionHandler(handler);
+    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.cacheFlusher.start();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;flushHandlers array is populated in start() method. Would the call to setUncaughtExceptionHandler() be effective ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
+        LOG.warn(flushHander.getName(), e);
+      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please restore interrupt status above.&lt;/p&gt;

&lt;p&gt;If you can publish percentage of performance improvement, that would be great.&lt;/p&gt;</comment>
                            <comment id="13423678" author="zjushch" created="Fri, 27 Jul 2012 05:08:34 +0000"  >&lt;p&gt;Updating patch as Ted&apos;s comment.&lt;br/&gt;
Thanks for review again...&lt;/p&gt;</comment>
                            <comment id="13423680" author="zjushch" created="Fri, 27 Jul 2012 05:16:08 +0000"  >&lt;p&gt;@Ted&lt;br/&gt;
In most cases, one flusher is enough, so I think we could keep One Flusher same with before.&lt;/p&gt;

&lt;p&gt;In our random write testing, KeyLen=50/ValueLen=1k,under the version 0.94&lt;br/&gt;
Without the patch, tps is about 7.5k/s where found many following logs we added:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2012-07-18 00:31:04,133 WARN org.apache.hadoop.hbase.regionserver.MemStoreFlusher: Memstore is above high water mark and wait 1549ms&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;After the patch, tps is about 10k/s&lt;/p&gt;</comment>
                            <comment id="13423784" author="hadoopqa" created="Fri, 27 Jul 2012 10:40:57 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12538126/HBASE-6466v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12538126/HBASE-6466v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 14 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.backup.example.TestZooKeeperTableArchiveClient&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2446//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13423922" author="zhihyu@ebaysf.com" created="Fri, 27 Jul 2012 15:20:17 +0000"  >&lt;p&gt;Minor comment:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Memstore is above high water mark and block &quot;&lt;/span&gt; + took + &lt;span class=&quot;code-quote&quot;&gt;&quot;ms&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;is above&apos; -&amp;gt; &apos;was above&apos;&lt;br/&gt;
&apos; block &apos; -&amp;gt; &apos; reclaimMemStoreMemory took &apos;&lt;/p&gt;</comment>
                            <comment id="13424037" author="jdcryans" created="Fri, 27 Jul 2012 18:24:58 +0000"  >&lt;p&gt;How does this relate to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2832&quot; title=&quot;Priorities and multi-threading for MemStore flushing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2832&quot;&gt;&lt;del&gt;HBASE-2832&lt;/del&gt;&lt;/a&gt;? It&apos;s a shame the patch of there was lost tho. Jon Gray might still have it somewhere.&lt;/p&gt;

&lt;p&gt;Also if this patch doesn&apos;t modify the behavior of &lt;tt&gt;HLog.startCacheFlush&lt;/tt&gt; and &lt;tt&gt;HLog.completeCacheFlush&lt;/tt&gt; WRT the &lt;tt&gt;cacheFlushLock&lt;/tt&gt; I can&apos;t see how it could make things any faster. In fact, it&apos;s even worse since the other flushing thread acquire a write lock just before getting the flush lock (meaning that while one thread flushes, the others are blocking the inserts and not flushing).&lt;/p&gt;</comment>
                            <comment id="13424121" author="zhihyu@ebaysf.com" created="Fri, 27 Jul 2012 20:30:04 +0000"  >&lt;p&gt;&lt;tt&gt;cacheFlushLock&lt;/tt&gt; is locked by HLog.startCacheFlush() which is called by HRegion.internalFlushcache()&lt;br/&gt;
In common scenario, this is in the path of region initialization.&lt;/p&gt;

&lt;p&gt;MemStoreFlusher, on the other hand, operates on &lt;tt&gt;MemStoreFlusher.flushQueue&lt;/tt&gt; which is a BlockingQueue.&lt;/p&gt;

&lt;p&gt;So I think the patch is valid.&lt;/p&gt;</comment>
                            <comment id="13424127" author="jdcryans" created="Fri, 27 Jul 2012 20:36:29 +0000"  >&lt;p&gt;internalFlushcache is called by HRegion.flushcache which is called by MemStoreFlusher.flushRegion so it is called for every flush.&lt;/p&gt;</comment>
                            <comment id="13424146" author="zhihyu@ebaysf.com" created="Fri, 27 Jul 2012 21:02:59 +0000"  >&lt;p&gt;MemStoreFlusher.flushRegion does the following after region.flushcache() returns:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; shouldSplit = region.checkSplit() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (shouldSplit) {
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.server.compactSplitThread.requestSplit(region);
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (shouldCompact) {
        server.compactSplitThread.requestCompaction(region, &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().getName());
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above operation is region-wise. The performance boost in tps might have come from this.&lt;/p&gt;</comment>
                            <comment id="13424210" author="jdcryans" created="Fri, 27 Jul 2012 23:07:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;The above operation is region-wise. The performance boost in tps might have come from this.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Those are just queueing requests to the compact split thread, I don&apos;t think I follow you.&lt;/p&gt;</comment>
                            <comment id="13424213" author="zhihyu@ebaysf.com" created="Fri, 27 Jul 2012 23:20:09 +0000"  >&lt;p&gt;CompactSplitThread.requestCompaction(final HRegion r, final Store s,&lt;br/&gt;
      final String why, int priority) has this call (line 225): &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      pool.execute(cr);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;which leads to CompactionRequest line 252:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; completed = r.compact(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This doesn&apos;t explain the performance gain &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13424233" author="zjushch" created="Sat, 28 Jul 2012 00:26:33 +0000"  >&lt;p&gt;Sorry, I forgot removing lock race in HLog when making patch for trunk,&lt;br/&gt;
I&apos;ll update the patch later, outting now...&lt;/p&gt;

&lt;p&gt;Sorry, it&apos;s my mistake...&lt;/p&gt;</comment>
                            <comment id="13424389" author="jdcryans" created="Sat, 28 Jul 2012 17:41:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;This doesn&apos;t explain the performance gain&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So please explain to me where you&apos;re trying to get to with this pasted code... the flushes are still serialized, the compactions are done elsewhere, nothing changes as far as I can tell.&lt;/p&gt;</comment>
                            <comment id="13424412" author="zhihyu@ebaysf.com" created="Sat, 28 Jul 2012 20:06:22 +0000"  >&lt;p&gt;@J-D:&lt;br/&gt;
I was in a meeting yesterday.&lt;br/&gt;
Pardon me for not looking deep enough.&lt;br/&gt;
I came to the same conclusion as you did.&lt;/p&gt;</comment>
                            <comment id="13424694" author="zjushch" created="Mon, 30 Jul 2012 04:50:35 +0000"  >&lt;p&gt;In patch v3, removing lock race in HLog and skipping region who is flushing when flushOneForGlobalPressure &lt;/p&gt;</comment>
                            <comment id="13424699" author="zjushch" created="Mon, 30 Jul 2012 05:06:26 +0000"  >&lt;p&gt;Some performance test data for reference,&lt;/p&gt;

&lt;p&gt;1.test environment &#65306; random writting&#65307;400 regions per regionserver&#65307;row len=50 bytes, value len=1024 bytes;5 regionserver, 300 ipc handler per regionserver;5 client, 50 handler per client for writing&lt;/p&gt;

&lt;p&gt;2.test results:&lt;br/&gt;
before, tps: 7.8k/s per regionserver, Flush:10.1MB/s per regionserver&lt;br/&gt;
after(2 cache flush handler), tps: 10.7k/s per regionserver, Flush:12.46MB/s per regionserver&lt;/p&gt;

&lt;p&gt;BTW, under above test, we could increase the tps if increase the client handlers.&lt;/p&gt;</comment>
                            <comment id="13424706" author="hadoopqa" created="Mon, 30 Jul 2012 05:42:26 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12538303/HBASE-6466v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12538303/HBASE-6466v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2454//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13424713" author="ram_krish" created="Mon, 30 Jul 2012 06:07:36 +0000"  >&lt;p&gt;@Chunhui&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;(meaning that while one thread flushes, the others are blocking the inserts and not flushing)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The above is one of JD&apos;s comments.  Currently the patch tries to make more flushes concurrently.  So in startCacheFlush we will now be blocking the incoming writes more right?&lt;br/&gt;
As more flush threads will try getting the updatesLock.writeLock. I may be wrong here.  Pls correct me..Thanks..&lt;/p&gt;</comment>
                            <comment id="13424716" author="zjushch" created="Mon, 30 Jul 2012 06:21:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;So in startCacheFlush we will now be blocking the incoming writes more right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;As more flush threads will try getting the updatesLock.writeLock&lt;/p&gt;

&lt;p&gt;We will blocking the incoming writes when doing HLog#startCacheFlush now, it is the same as before.&lt;/p&gt;

&lt;p&gt;Flush threads will try getting the updatesLock.writeLock, it is also same as the before, but it&apos;s quite fast, so do you think it&apos;s a problem?&lt;/p&gt;
</comment>
                            <comment id="13424750" author="ram_krish" created="Mon, 30 Jul 2012 08:28:43 +0000"  >&lt;p&gt;I think i can comment only after seeing a profiled snapshots.. Because now more threads will acquire updateLock.writeLock where as previously only one was acqiuiring it.&lt;br/&gt;
Lets see what others have to say here.&lt;/p&gt;</comment>
                            <comment id="13424756" author="zjushch" created="Mon, 30 Jul 2012 08:42:02 +0000"  >&lt;p&gt;updateLock is in the HRegion, and if isAboveHighWaterMark, it will block the whole regionserver&lt;/p&gt;

&lt;p&gt;Other the way, set the flush handler as 1, so it is the same as the before&lt;/p&gt;

&lt;p&gt;Another way, updateLock.writeLock&apos;s lock time quite rapid&lt;/p&gt;

&lt;p&gt;On the whole, IMO, taking a easy testing is more than analysing a lot&lt;/p&gt;</comment>
                            <comment id="13426327" author="zhihyu@ebaysf.com" created="Wed, 1 Aug 2012 04:51:38 +0000"  >&lt;p&gt;@Ram, @J-D:&lt;br/&gt;
Please share your comments.&lt;/p&gt;</comment>
                            <comment id="13427716" author="eclark" created="Thu, 2 Aug 2012 23:13:56 +0000"  >&lt;p&gt;I tried the patch out on a smallish cluster(0.94 + 1.0.3) and things seemed a little weird.  Every once in a while a flush would take 60s.  Jstacks weren&apos;t very obvious about what was going on and I needed to use the cluster for other things, so I don&apos;t have too many more details.  I hope to put the patch back up on a cluster later next week. &lt;/p&gt;</comment>
                            <comment id="13428821" author="ram_krish" created="Sun, 5 Aug 2012 07:23:32 +0000"  >&lt;p&gt;@Ted&lt;br/&gt;
I will also try to check it out.  We are not able to test this as some other things are going on.&lt;/p&gt;</comment>
                            <comment id="13430582" author="zhihyu@ebaysf.com" created="Tue, 7 Aug 2012 20:00:44 +0000"  >&lt;p&gt;@Elliot:&lt;br/&gt;
The flush taking 60s normally would take how many seconds to complete ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13438360" author="jxiang" created="Tue, 21 Aug 2012 00:30:57 +0000"  >&lt;p&gt;Instead of having multiple flush threads, can we flush multiple regions each time when under memory pressure?&lt;br/&gt;
For flush thread, one is enough in most case. Multiple threads complicate things. If under global memory pressure,&lt;br/&gt;
we can figure out how many regions to flush based on a configurable ratio of memory to release.&lt;/p&gt;</comment>
                            <comment id="13438468" author="zjushch" created="Tue, 21 Aug 2012 05:35:16 +0000"  >&lt;p&gt;@Jimmy&lt;br/&gt;
Flushing multiple regions each time could only help a little, about increase 5% flush ability because we select a region to flush is very fast.&lt;/p&gt;

&lt;p&gt;I agree with one flush thread is enough in most case, however we have encountered the case that memstore always at the global limit in the online application, the small affect is writing will be blocked sometimes and the serious affect is jvm would always do CMS if your configuration is not very appropriate&lt;/p&gt;</comment>
                            <comment id="13476596" author="kannanm" created="Tue, 16 Oct 2012 00:10:06 +0000"  >&lt;p&gt;+1 on the JIRA. I created &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6980&quot; title=&quot;Parallel Flushing Of Memstores [89-fb]&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6980&quot;&gt;&lt;del&gt;HBASE-6980&lt;/del&gt;&lt;/a&gt; only to later find out that this was already being worked on &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                            <comment id="13476597" author="kannanm" created="Tue, 16 Oct 2012 00:11:43 +0000"  >&lt;p&gt;Chunhui wrote: &amp;lt;&amp;lt;&amp;lt;I agree with one flush thread is enough in most case, however we have encountered the case that memstore always at the global limit in the online application, the small affect is writing will be blocked sometimes and the serious affect is jvm would always do CMS if your configuration is not very appropriate&amp;gt;&amp;gt;&amp;gt;. See description in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6980&quot; title=&quot;Parallel Flushing Of Memstores [89-fb]&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6980&quot;&gt;&lt;del&gt;HBASE-6980&lt;/del&gt;&lt;/a&gt;. I think for some use cases, the wins will be substantial. Also, if we do multiple commit logs per server, then too, this feature will be important to maximize throughput.&lt;/p&gt;</comment>
                            <comment id="13485263" author="sershe" created="Fri, 26 Oct 2012 23:12:51 +0000"  >&lt;p&gt;Hi. Is there consensus on the approach?&lt;br/&gt;
I think multiple threads make sense; as far as I see there&apos;s no bottleneck (e.g. several parallel writers to the same spindle or such). &lt;br/&gt;
It&apos;s as if we are starting the requisite number of flushes in async manner one after another...&lt;/p&gt;</comment>
                            <comment id="13492065" author="sershe" created="Wed, 7 Nov 2012 02:13:13 +0000"  >&lt;p&gt;Ping?&lt;/p&gt;</comment>
                            <comment id="13492463" author="apurtell" created="Wed, 7 Nov 2012 16:15:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is there consensus on the approach?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt; Ack your ping. My read of this JIRA is that multithreading memstore flushing is seen as potentially useful, but experimental verification of improvement in trunk is lacking. See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6980&quot; title=&quot;Parallel Flushing Of Memstores [89-fb]&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6980&quot;&gt;&lt;del&gt;HBASE-6980&lt;/del&gt;&lt;/a&gt; and especially the testing described in the commit message for &lt;a href=&quot;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=1403627&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=1403627&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13492469" author="hadoopqa" created="Wed, 7 Nov 2012 16:22:33 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12538303/HBASE-6466v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12538303/HBASE-6466v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3250//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3250//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13492482" author="hadoopqa" created="Wed, 7 Nov 2012 16:32:30 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12538303/HBASE-6466v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12538303/HBASE-6466v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3251//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3251//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13493572" author="sershe" created="Thu, 8 Nov 2012 22:35:49 +0000"  >&lt;p&gt;Updating trunk patch. I will run some tests...&lt;/p&gt;</comment>
                            <comment id="13493641" author="hadoopqa" created="Fri, 9 Nov 2012 00:38:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12552728/HBASE-6466v3.1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12552728/HBASE-6466v3.1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 87 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 16 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3277//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13526106" author="sershe" created="Fri, 7 Dec 2012 03:13:45 +0000"  >&lt;p&gt;Hmm, sorry for long absence on this issue.&lt;br/&gt;
I ran some tests on EC2, with 1 RS and 5 DataNode-s with one mount point each.&lt;br/&gt;
EC2 was probably not the best choice for testing disk, so I was only able to see perf improvement under artificial conditions.&lt;br/&gt;
I am guessing that would also happen if I used enough real disks...&lt;br/&gt;
20 regions for LoadTestTool on the RS, no compactions during the test, WAL enabled, large number of IPC handlers.&lt;br/&gt;
I set the flush limit to 1Mb to trigger a lot of flushes and used LoadTestTool to write ~200k values, most flushes were on the order of a few Mb.&lt;br/&gt;
LTT is getting about 100 writes/sec with 1 flush handler, and I can see from iostat disks on some of the datanodes are idling (different at different time obviously).&lt;br/&gt;
With 3 or 5 handlers disks are all busy and I get about 150 writes/sec.&lt;/p&gt;</comment>
                            <comment id="13526121" author="yuzhihong@gmail.com" created="Fri, 7 Dec 2012 03:41:41 +0000"  >&lt;p&gt;Thanks for the verification, Sergey.&lt;/p&gt;

&lt;p&gt;Appreciate it.&lt;/p&gt;</comment>
                            <comment id="13526822" author="sershe" created="Fri, 7 Dec 2012 22:11:56 +0000"  >&lt;p&gt;The question is, can the patch now go into trunk? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13526829" author="stack" created="Fri, 7 Dec 2012 22:27:25 +0000"  >&lt;p&gt;So w/ 5 flush handlers, why you think rate only went from 100 to 150 per second?  If one disk busy is 100 writes a second, I&apos;d think all disks busy would up throughput more than just 50%?&lt;/p&gt;</comment>
                            <comment id="13526853" author="sershe" created="Fri, 7 Dec 2012 23:05:38 +0000"  >&lt;p&gt;5 data nodes == 5 &quot;disks&quot;; one flusher can already load 3 (3-way replication), so there are only 2 remaining.&lt;br/&gt;
There was no increase in perf from 3 to 5 flushers; probably 2 would have been enough in this setup.&lt;br/&gt;
In addition, there are other bottlenecks, e.g. maybe WAL.&lt;/p&gt;</comment>
                            <comment id="13527287" author="stack" created="Sat, 8 Dec 2012 23:25:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;The question is, can the patch now go into trunk?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.  Default is single flusher only so default behavior should be as it was.&lt;/p&gt;

&lt;p&gt;Looking at the patch, please look elsewhere in code base for how we set threads running.  See how the threads are named... there is some convention in that threads have the name of their host as a prefix which helps when many regionservers in the one jvm.  Could these new flusher be set up using a thread pool instead?  See Threads.java for some facility.&lt;/p&gt;

&lt;p&gt;Can this class be static?&lt;/p&gt;

&lt;p&gt;+  private class FlushHandler extends HasThread {&lt;/p&gt;

&lt;p&gt;Pass in the Service Interface so you can query if host has been stopped?&lt;/p&gt;

&lt;p&gt;If we failed a flush in the past, we&apos;d check the filesystem and if we couldn&apos;t write, we&apos;d abort the server.  Does that happen still?  Or does the flusher thread just exit?&lt;/p&gt;

&lt;p&gt;What is going on w/ blockSignal?&lt;/p&gt;

&lt;p&gt;Why in FSHLog change lock to be a ReentrantReadWriteLock?&lt;/p&gt;

&lt;p&gt;How are J-Ds concerns above being addressed in this patch?  Or Elliott&apos;s seeing 60 second pauses?  Does this do what Jimmy suggests above, flush multiple regions concurrently when there is memory pressure?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;
</comment>
                            <comment id="13528449" author="sershe" created="Mon, 10 Dec 2012 23:45:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;Yes. Default is single flusher only so default behavior should be as it was.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That is the case:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.handlerCount = conf.getInt(&lt;span class=&quot;code-quote&quot;&gt;&quot;hbase.hstore.flusher.count&quot;&lt;/span&gt;, 1);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;&lt;p&gt;Looking at the patch, please look elsewhere in code base for how we set threads running. See how the threads are named... there is some convention in that threads have the name of their host as a prefix which helps when many regionservers in the one jvm. Could these new flusher be set up using a thread pool instead? See Threads.java for some facility.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Fixed. Threadpool is to schedule one-off tasks, these threads are intended to run continuously. I guess one could achieve the same goal with threadpool and counter to limit the concurrency (except that these threads will be easier to starve) but it seems like a roundabout way to do is.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can this class be static?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;+ private class FlushHandler extends HasThread {&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;At the cost of few pointers (it currently refers to parent fields); is there reason to do so?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Pass in the Service Interface so you can query if host has been stopped?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Queries parent &quot;server&quot; field:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void run() {
      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!server.isStopped()) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;blockquote&gt;&lt;p&gt;If we failed a flush in the past, we&apos;d check the filesystem and if we couldn&apos;t write, we&apos;d abort the server. Does that happen still? Or does the flusher thread just exit?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The behavior should be the same - the uncaught exception handler is set on new runnable-s the same way as on the old one.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What is going on w/ blockSignal?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you please elaborate the question? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why in FSHLog change lock to be a ReentrantReadWriteLock?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;flushcache is now called from multiple threads; WAL has entries for cache flush (which according to discussion in the linked FB JIRA might be unnecessary), with lock held between start and complete entries. If this lock is kept exclusive, it will cause flush threads to serialize on it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;How are J-Ds concerns above being addressed in this patch? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Do you mean the concerns about the lock (discussed above, addressed by original patch), or about prior lost patch?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Or Elliott&apos;s seeing 60 second pauses? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I haven&apos;t seen such conditions on trunk during perf tests.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; can you still repro this?&lt;br/&gt;
I will probably try to port to 0.94 next, so I can run some lengthy test with normal settings to see how it goes on 0.94.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Does this do what Jimmy suggests above, flush multiple regions concurrently when there is memory pressure?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No; there is a response that it doesn&apos;t produce substantial wins...&lt;br/&gt;
Should it be a separate JIRA?&lt;/p&gt;</comment>
                            <comment id="13528450" author="sershe" created="Mon, 10 Dec 2012 23:47:26 +0000"  >&lt;p&gt;patch - thread label/creation changes&lt;/p&gt;</comment>
                            <comment id="13528548" author="hadoopqa" created="Tue, 11 Dec 2012 01:05:01 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12560308/HBASE-6466-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12560308/HBASE-6466-v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 102 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 23 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestDrainingServer&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3480//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13528627" author="sershe" created="Tue, 11 Dec 2012 02:42:33 +0000"  >&lt;p&gt;org.apache.hadoop.hbase.TestDrainingServer passes locally&lt;/p&gt;</comment>
                            <comment id="13528726" author="stack" created="Tue, 11 Dec 2012 06:39:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;I guess one could achieve the same goal with threadpool and counter to limit the concurrency (except that these threads will be easier to starve) but it seems like a roundabout way to do is.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for taking a look.  The diff between thread pool and what is running here makes sense.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;At the cost of few pointers (it currently refers to parent fields&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thats ok.  Was just asking.  Its fine the way it is especially later where you point out that you are making use of Server from the parent class.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The behavior should be the same - the uncaught exception handler is set on new runnable-s the same way as on the old one.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok.  Was worried the exception would be dropped on the floor.  Sounds good.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;....WAL has entries for cache flush (which according to discussion in the linked FB JIRA might be unnecessary)...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, we don&apos;t make use of these flush markers.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;What is going on w/ blockSignal?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I ask because I&apos;m wary when new locks added.  This is an addition in a little exercised piece of the code.  Was looking for justification on why the addition.  On the face of it, it seems plain enough.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;... with lock held between start and complete entries. If this lock is kept exclusive, it will cause flush threads to serialize on it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok.  Were you able to make this happen Sergey?&lt;/p&gt;

&lt;p&gt;On jds&apos; concern, its this one: &apos;Also if this patch doesn&apos;t modify the behavior of HLog.startCacheFlush and HLog.completeCacheFlush WRT the cacheFlushLock I can&apos;t see how it could make things any faster.&apos;&lt;/p&gt;

&lt;p&gt;So, your reentrant lock is how you address his concern?&lt;/p&gt;

&lt;p&gt;Any guards against us flushing same memstore concurrently: i.e. we are already flushing it and we start in flushing it again in a concurrent thread?&lt;/p&gt;


</comment>
                            <comment id="13529218" author="sershe" created="Tue, 11 Dec 2012 18:55:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;Yeah, we don&apos;t make use of these flush markers.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7329&quot; title=&quot;remove flush-related records from WAL and make locking more granular&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7329&quot;&gt;&lt;del&gt;HBASE-7329&lt;/del&gt;&lt;/a&gt; to remove.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;... with lock held between start and complete entries. If this lock is kept exclusive, it will cause flush threads to serialize on it.&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ok. Were you able to make this happen Sergey?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I took the patch with locks already fixed. I can try but it seems there&apos;s already consensus on this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;On jds&apos; concern, its this one: &apos;Also if this patch doesn&apos;t modify the behavior of HLog.startCacheFlush and HLog.completeCacheFlush WRT the cacheFlushLock I can&apos;t see how it could make things any faster.&apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;So, your reentrant lock is how you address his concern?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah, I think this locking was meant by the comment.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Any guards against us flushing same memstore concurrently: i.e. we are already flushing it and we start in flushing it again in a concurrent thread?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;There&apos;s code in flushcache that prevents this via writestate:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (writestate) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!writestate.flushing &amp;amp;&amp;amp; writestate.writesEnabled) {
          &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writestate.flushing = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;close calls internal flush directly but it also sets writesEnabled to false.&lt;/p&gt;</comment>
                            <comment id="13530777" author="hadoopqa" created="Thu, 13 Dec 2012 08:08:16 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12560308/HBASE-6466-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12560308/HBASE-6466-v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 105 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 23 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3522//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13531051" author="yuzhihong@gmail.com" created="Thu, 13 Dec 2012 14:50:53 +0000"  >&lt;p&gt;+1 on patch v4.&lt;/p&gt;</comment>
                            <comment id="13531292" author="stack" created="Thu, 13 Dec 2012 18:32:37 +0000"  >&lt;p&gt;Lets get some more review on this patch before it goes in.  Its no fun debugging intermittent hung flushing or closing on a distributed cluster.&lt;/p&gt;</comment>
                            <comment id="13531295" author="stack" created="Thu, 13 Dec 2012 18:33:41 +0000"  >&lt;p&gt;Marking critical so it does not slip through the cracks.  It is patch available and just in need of additional review.&lt;/p&gt;</comment>
                            <comment id="13546481" author="sershe" created="Tue, 8 Jan 2013 01:18:08 +0000"  >&lt;p&gt;Rebasing the patch&lt;/p&gt;</comment>
                            <comment id="13546561" author="hadoopqa" created="Tue, 8 Jan 2013 03:17:56 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12563661/HBASE-6466-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12563661/HBASE-6466-v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestLocalHBaseCluster&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hdfs.server.balancer.TestBalancerWithNodeGroup.testBalancerWithRackLocality(TestBalancerWithNodeGroup.java:220)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3923//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13548760" author="sershe" created="Wed, 9 Jan 2013 18:14:36 +0000"  >&lt;p&gt;Sorry, reassigned to myself by accident when submitting latest patch.&lt;/p&gt;</comment>
                            <comment id="13549304" author="zjushch" created="Thu, 10 Jan 2013 02:34:47 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt;&lt;br/&gt;
Thanks for doing on this issue, I almost forgot it.&lt;/p&gt;

&lt;p&gt;What&apos;s the problem now?&lt;/p&gt;

&lt;p&gt;PatchV4 is ok for me.&lt;/p&gt;</comment>
                            <comment id="13549322" author="yuzhihong@gmail.com" created="Thu, 10 Jan 2013 02:54:23 +0000"  >&lt;p&gt;@Chunhui:&lt;br/&gt;
We&apos;re waiting for more reviews.&lt;/p&gt;

&lt;p&gt;Can you take a look at Elliott&apos;s comment @ 03/Aug/12 00:13&lt;/p&gt;</comment>
                            <comment id="13549324" author="zjushch" created="Thu, 10 Jan 2013 03:05:38 +0000"  >&lt;p&gt;The scenario seems weird descripted in Elliott&apos;s comment, &lt;br/&gt;
if there are more details, I think I can do a analysis.&lt;/p&gt;

&lt;p&gt;By the way, has any one taken a try?&lt;/p&gt;

&lt;p&gt;We have used this feature in production system for long time since I created this issue.&lt;br/&gt;
It runs well all the same.&lt;/p&gt;</comment>
                            <comment id="13549954" author="sershe" created="Thu, 10 Jan 2013 19:18:06 +0000"  >&lt;p&gt;I didn&apos;t see this on EC2 when I was doing perf testing, or just in exploratory test w/LTT.&lt;/p&gt;</comment>
                            <comment id="13550362" author="eclark" created="Thu, 10 Jan 2013 20:13:18 +0000"  >&lt;p&gt;I&apos;ll circle back around and give this patch another run on a cluster next week.  I&apos;ll try and get more details for you.&lt;/p&gt;</comment>
                            <comment id="13551436" author="sershe" created="Fri, 11 Jan 2013 19:26:52 +0000"  >&lt;p&gt;By the way, do we want this in 0.94? I can backport&lt;/p&gt;</comment>
                            <comment id="13551603" author="lhofhansl" created="Fri, 11 Jan 2013 22:38:37 +0000"  >&lt;p&gt;I&apos;d say we should let this stir in trunk for a bit.&lt;/p&gt;</comment>
                            <comment id="13556472" author="sershe" created="Thu, 17 Jan 2013 19:01:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; Do you have any update? Thanks&lt;/p&gt;</comment>
                            <comment id="13559036" author="sershe" created="Mon, 21 Jan 2013 19:57:18 +0000"  >&lt;p&gt;ping?&lt;/p&gt;</comment>
                            <comment id="13559038" author="eclark" created="Mon, 21 Jan 2013 20:00:19 +0000"  >&lt;p&gt;Tested this on a small cluster and everything seemed to work pretty well.  Nothing strange happened and there were no pauses.&lt;/p&gt;

&lt;p&gt;Code in trunk has changed quite a lot since this patch started, so I can&apos;t really pinpoint what was happening. &lt;/p&gt;</comment>
                            <comment id="13559920" author="sershe" created="Tue, 22 Jan 2013 19:38:04 +0000"  >&lt;p&gt;Rebasing the patch. Should be ready to commit based on the above; medium tests pass for me, but I&apos;d wait for Hadoop QA.&lt;/p&gt;</comment>
                            <comment id="13559989" author="hadoopqa" created="Tue, 22 Jan 2013 20:41:33 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12565995/HBASE-6466-v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12565995/HBASE-6466-v5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.wal.TestHLog&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4131//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13560171" author="yuzhihong@gmail.com" created="Tue, 22 Jan 2013 23:32:41 +0000"  >&lt;p&gt;Patch v6 is rebased on trunk.&lt;/p&gt;

&lt;p&gt;TestHLog passes.&lt;/p&gt;</comment>
                            <comment id="13560179" author="sershe" created="Tue, 22 Jan 2013 23:37:30 +0000"  >&lt;p&gt;Unfortunately the test logs were not archived... TestHLog passes repeatedly on local.&lt;br/&gt;
The error is: &quot;testEditAdd(org.apache.hadoop.hbase.regionserver.wal.TestHLog): org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException: Lease mismatch on /user/jenkins/hbase/TestHLog/hlog.1358885523246 owned by NN_Recovery but is accessed by DFSClient_NONMAPREDUCE_-1997763165_8(..)&quot;, appears to have nothing to do with what this test does.&lt;/p&gt;
</comment>
                            <comment id="13560238" author="hadoopqa" created="Wed, 23 Jan 2013 00:37:22 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12566046/6466-v6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12566046/6466-v6.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestLocalHBaseCluster&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4135//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13560256" author="yuzhihong@gmail.com" created="Wed, 23 Jan 2013 00:51:12 +0000"  >&lt;p&gt;Test suite result looks good.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjushch&quot; class=&quot;user-hover&quot; rel=&quot;zjushch&quot;&gt;chunhui shen&lt;/a&gt;:&lt;br/&gt;
Do you want to commit ?&lt;/p&gt;</comment>
                            <comment id="13560311" author="zjushch" created="Wed, 23 Jan 2013 02:11:46 +0000"  >&lt;p&gt;+1 on Patch v6&lt;/p&gt;</comment>
                            <comment id="13560325" author="yuzhihong@gmail.com" created="Wed, 23 Jan 2013 02:29:21 +0000"  >&lt;p&gt;Integrated to trunk.&lt;/p&gt;

&lt;p&gt;Thanks for the patch, Chunhui.&lt;/p&gt;

&lt;p&gt;Thanks for your work, Sergey.&lt;/p&gt;</comment>
                            <comment id="13560386" author="hudson" created="Wed, 23 Jan 2013 04:34:43 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3779 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3779/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3779/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6466&quot; title=&quot;Enable multi-thread for memstore flush&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6466&quot;&gt;&lt;del&gt;HBASE-6466&lt;/del&gt;&lt;/a&gt; Enable multi-thread for memstore flush (Chunhui) (Revision 1437252)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13560403" author="yuzhihong@gmail.com" created="Wed, 23 Jan 2013 05:30:21 +0000"  >&lt;p&gt;TestLogRolling failed twice in trunk builds #3779 and #3780.&lt;/p&gt;

&lt;p&gt;Reverted from trunk for now.&lt;/p&gt;</comment>
                            <comment id="13560451" author="hudson" created="Wed, 23 Jan 2013 07:34:37 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3781 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3781/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3781/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6466&quot; title=&quot;Enable multi-thread for memstore flush&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6466&quot;&gt;&lt;del&gt;HBASE-6466&lt;/del&gt;&lt;/a&gt; Revert, TestLogRolling failed twice on trunk build (Revision 1437274)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13560639" author="hudson" created="Wed, 23 Jan 2013 12:33:33 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #368 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/368/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/368/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6466&quot; title=&quot;Enable multi-thread for memstore flush&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6466&quot;&gt;&lt;del&gt;HBASE-6466&lt;/del&gt;&lt;/a&gt; Revert, TestLogRolling failed twice on trunk build (Revision 1437274)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6466&quot; title=&quot;Enable multi-thread for memstore flush&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6466&quot;&gt;&lt;del&gt;HBASE-6466&lt;/del&gt;&lt;/a&gt; Enable multi-thread for memstore flush (Chunhui) (Revision 1437252)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13560710" author="zjushch" created="Wed, 23 Jan 2013 14:09:26 +0000"  >&lt;p&gt;TestLogRolling#testLogRollOnDatanodeDeath() is failed in trunk build 3779 and 3780 by&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;assertTrue(&lt;span class=&quot;code-quote&quot;&gt;&quot;LowReplication Roller should&apos;ve been disabled&quot;&lt;/span&gt;,!log.isLowReplicationRollEnabled());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;lowReplicationRollEnabled will only be set false in FSHlog#checkLowReplication();&lt;br/&gt;
FSHlog#checkLowReplication() will only called by FSHlog#syncer, however it is skipped when rolling log&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.logRollRunning) {
        checkLowReplication();
...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Therefore, I could only think one reason for this failed test. Log is rolling when calling syncer().&lt;/p&gt;

&lt;p&gt;From the logs, I could only find &quot;HDFS pipeline error detected. Found 1 replicas but expecting no less than 2 replicas&quot;(logged by the FSHlog#checkLowReplication()) 3 times,  but need at least 4 times to pass the test.&lt;/p&gt;

&lt;p&gt;It&apos;s easy to reproduce the failed test with the following change in FSHlog&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
--- hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java	(revision 1437274)
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java	(working copy)
@@ -501,6 +501,10 @@
       &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [][] regionsToFlush = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
       &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
         &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.logRollRunning = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
+        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+          &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(1500);
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
+        }
         &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isClosed = closed;
         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (isClosed || !closeBarrier.beginOp()) {
           LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;HLog &quot;&lt;/span&gt; + (isClosed ? &lt;span class=&quot;code-quote&quot;&gt;&quot;closed&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;closing&quot;&lt;/span&gt;) + &lt;span class=&quot;code-quote&quot;&gt;&quot;. Skipping rolling of writer&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In addition, with patch v6, pass the test TestLogRolling 50 times on my local PC.&lt;/p&gt;

&lt;p&gt;Attaching patchV7, change a little in the TestLogRolling &lt;/p&gt;
</comment>
                            <comment id="13560745" author="hadoopqa" created="Wed, 23 Jan 2013 15:26:10 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12566127/6466-v7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12566127/6466-v7.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestLocalHBaseCluster&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4147//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13560848" author="yuzhihong@gmail.com" created="Wed, 23 Jan 2013 17:29:16 +0000"  >&lt;p&gt;I ran TestLogRolling using patch v7 locally and it passed:&lt;/p&gt;

&lt;p&gt;Running org.apache.hadoop.hbase.regionserver.wal.TestLogRolling&lt;br/&gt;
2013-01-23 09:22:46.693 java&lt;span class=&quot;error&quot;&gt;&amp;#91;8875:1703&amp;#93;&lt;/span&gt; Unable to load realm info from SCDynamicStore&lt;br/&gt;
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 141.023 sec&lt;/p&gt;

&lt;p&gt;Integrated to trunk again.&lt;/p&gt;

&lt;p&gt;Let&apos;s see what Jenkins tells us.&lt;/p&gt;</comment>
                            <comment id="13561029" author="hudson" created="Wed, 23 Jan 2013 19:59:15 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3784 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3784/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3784/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6466&quot; title=&quot;Enable multi-thread for memstore flush&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6466&quot;&gt;&lt;del&gt;HBASE-6466&lt;/del&gt;&lt;/a&gt; Enable multi-thread for memstore flush (Chunhui) (Revision 1437591)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13561245" author="hudson" created="Wed, 23 Jan 2013 23:52:32 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #369 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/369/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/369/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6466&quot; title=&quot;Enable multi-thread for memstore flush&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6466&quot;&gt;&lt;del&gt;HBASE-6466&lt;/del&gt;&lt;/a&gt; Enable multi-thread for memstore flush (Chunhui) (Revision 1437591)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13561913" author="sershe" created="Thu, 24 Jan 2013 19:54:15 +0000"  >&lt;p&gt;Sorry, missed the discussion above. Was there consensus on whether the patch is the culprit?&lt;br/&gt;
This failure looks eerily familiar to me, but I don&apos;t remember where I saw it and how I fixed it, if at all (e.g. may have been one time failure on different patch).&lt;br/&gt;
There was another patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7329&quot; title=&quot;remove flush-related records from WAL and make locking more granular&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7329&quot;&gt;&lt;del&gt;HBASE-7329&lt;/del&gt;&lt;/a&gt;) that makes locking around rolling more granular, too.&lt;/p&gt;</comment>
                            <comment id="13575071" author="yuzhihong@gmail.com" created="Sat, 9 Feb 2013 03:53:49 +0000"  >&lt;p&gt;TestLogRolling hasn&apos;t failed for some time in trunk.&lt;/p&gt;</comment>
                            <comment id="13774709" author="stack" created="Mon, 23 Sep 2013 16:46:48 +0000"  >&lt;p&gt;Adds being able to run with multiple memstore flusher threads.  Set hbase.hstore.flusher.count (Default: 1).&lt;/p&gt;</comment>
                            <comment id="13774861" author="stack" created="Mon, 23 Sep 2013 18:30:14 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                            <comment id="13972817" author="liushaohui" created="Thu, 17 Apr 2014 10:15:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjushch&quot; class=&quot;user-hover&quot; rel=&quot;zjushch&quot;&gt;chunhui shen&lt;/a&gt;&lt;br/&gt;
Very curious about this patch. &lt;/p&gt;

&lt;p&gt;In current codebase,  the write of hlog is many small pieces write and sync, and the flush of memstore are batch write. So i think the throughput of one -thread flush  is larger than the throughput of write of hlog. That means one flush thread is enough for most cases. &lt;/p&gt;

&lt;p&gt;What&apos;s scenario for multi-thread memstore flush? High-throughput write without wal? &lt;/p&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12653108">HBASE-8752</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12566046" name="6466-v6.patch" size="22378" author="yuzhihong@gmail.com" created="Tue, 22 Jan 2013 23:32:41 +0000"/>
                            <attachment id="12566127" name="6466-v7.patch" size="16354" author="zjushch" created="Wed, 23 Jan 2013 14:24:20 +0000"/>
                            <attachment id="12563661" name="HBASE-6466-v4.patch" size="28571" author="sershe" created="Tue, 8 Jan 2013 01:18:08 +0000"/>
                            <attachment id="12560308" name="HBASE-6466-v4.patch" size="28519" author="sershe" created="Mon, 10 Dec 2012 23:47:26 +0000"/>
                            <attachment id="12565995" name="HBASE-6466-v5.patch" size="24842" author="sershe" created="Tue, 22 Jan 2013 19:38:04 +0000"/>
                            <attachment id="12538119" name="HBASE-6466.patch" size="12242" author="zjushch" created="Fri, 27 Jul 2012 03:13:52 +0000"/>
                            <attachment id="12538126" name="HBASE-6466v2.patch" size="12412" author="zjushch" created="Fri, 27 Jul 2012 05:08:34 +0000"/>
                            <attachment id="12552728" name="HBASE-6466v3.1.patch" size="27104" author="sershe" created="Thu, 8 Nov 2012 22:38:26 +0000"/>
                            <attachment id="12538303" name="HBASE-6466v3.patch" size="15642" author="zjushch" created="Mon, 30 Jul 2012 04:50:34 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 27 Jul 2012 04:41:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>239682</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 35 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00sfj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2538</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>