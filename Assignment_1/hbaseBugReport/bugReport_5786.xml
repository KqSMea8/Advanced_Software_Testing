<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:30:57 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5786/HBASE-5786.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5786] Implement histogram metrics for flush and compaction latencies and sizes.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5786</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Average time for region operations doesn&apos;t really tell a useful story when that help diagnose anomalous conditions.&lt;/p&gt;

&lt;p&gt;It would be extremely useful to add histogramming metrics similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5533&quot; title=&quot;Add more metrics to HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5533&quot;&gt;&lt;del&gt;HBASE-5533&lt;/del&gt;&lt;/a&gt; for region operations like flush, compaction and splitting.  The probably should be forward biased at a much coarser granularity however (maybe decay every day?) &lt;/p&gt;</description>
                <environment></environment>
        <key id="12550889">HBASE-5786</key>
            <summary>Implement histogram metrics for flush and compaction latencies and sizes.</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jmhsieh">Jonathan Hsieh</reporter>
                        <labels>
                    </labels>
                <created>Fri, 13 Apr 2012 22:14:22 +0000</created>
                <updated>Thu, 4 Apr 2013 00:45:22 +0000</updated>
                                            <version>0.92.2</version>
                    <version>0.94.0</version>
                    <version>0.95.2</version>
                                                    <component>metrics</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13253831" author="tlipcon" created="Fri, 13 Apr 2012 22:44:03 +0000"  >&lt;p&gt;Or even keep a round robin buffer of the last 1000 such operations? It would be a miniscule amount of RAM to track this, right?&lt;/p&gt;</comment>
                            <comment id="13253861" author="jmhsieh" created="Fri, 13 Apr 2012 23:26:18 +0000"  >&lt;p&gt;At least for the constant write load testing I&apos;m doing currently, 1000 entries would are exhausted in about 8 hours.  &lt;/p&gt;

&lt;p&gt;The histogramming currently uses reservoir sampling (with 1000 slots) to keep metrics over all time.  Forward biasing makes more recent entries favored.&lt;/p&gt;

&lt;p&gt;With the sampling method we could keep reasonable metrics for longer periods of time (weeks).&lt;/p&gt;</comment>
                            <comment id="13396880" author="eclark" created="Tue, 19 Jun 2012 16:03:41 +0000"  >&lt;p&gt;I actually think that most metrics should go toward histograms rather than TimeVaryingRate .  Others have mentioned that an average is not really useful when hbase is the primary data store of a live website/app.  That use case is much more interested in the 75/95/99th percentile.  Once &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6211&quot; title=&quot;Put latencies in jmx&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6211&quot;&gt;&lt;del&gt;HBASE-6211&lt;/del&gt;&lt;/a&gt; is in I can take this up.  Maybe with some of the metrics refactor that Lars is talking about.&lt;/p&gt;</comment>
                            <comment id="13399053" author="andrew.wang" created="Fri, 22 Jun 2012 01:13:21 +0000"  >&lt;p&gt;A real stats expert can weigh in, but I don&apos;t think the current sampling methods are well-suited for computing high-percentile latencies. Reservoir sampling is fine for computing gross statistics like the mean and stddev, but you really want to be biasing your sampling toward the top end for accurate 95th and 99th percentile estimates.&lt;/p&gt;

&lt;p&gt;I unfortunately don&apos;t have any solutions yet, but I&apos;m looking into it.&lt;/p&gt;</comment>
                            <comment id="13399454" author="eclark" created="Fri, 22 Jun 2012 17:25:02 +0000"  >&lt;p&gt;The library we use takes time decaying samples in buckets.  So yes we lose some accuracy in the higher percentiles if that extreme data was a long time ago.  However for newer data we are more accurate; if the spread of times stay constant then we&apos;ll be very accurate.  If our data was normally distributed we would have less than 5% error (at least from my understanding of  &lt;a href=&quot;http://www.research.att.com/people/Cormode_Graham/library/publications/CormodeShkapenyukSrivastavaXu09.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.research.att.com/people/Cormode_Graham/library/publications/CormodeShkapenyukSrivastavaXu09.pdf&lt;/a&gt;) on the all of the measures.  For me 5% error upper bound on a metric seems good enough.  All of the other methods that I looked at take a lot longer to compute, and so I don&apos;t think they are worth it.&lt;/p&gt;</comment>
                            <comment id="13399486" author="andrew.wang" created="Fri, 22 Jun 2012 18:00:21 +0000"  >&lt;p&gt;I don&apos;t think you can assume a normal distribution for latency. I think it looks more Zipfian in practice, or maybe bi-modal because of cache misses. Also, a 5% error on a 95th percentile is kind of huge; IIUC, that means it&apos;s actually reporting between the 90th and 100th percentile. &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; by the same authors as your link discusses sampling for high-percentiles.&lt;/p&gt;

&lt;p&gt;I found &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; which I think is well-suited for our use case, since it can do approximate quantiles on a sliding time window. Space and time bounds seems to be O(reasonable log factors). Somehow mashing up &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; to use &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; would be most optimal, but doing just &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; is probably okay too.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://www.cs.rutgers.edu/~muthu/bquant.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.cs.rutgers.edu/~muthu/bquant.pdf&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://infolab.stanford.edu/~manku/papers/04pods-sliding.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://infolab.stanford.edu/~manku/papers/04pods-sliding.pdf&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13399488" author="eclark" created="Fri, 22 Jun 2012 18:10:37 +0000"  >&lt;p&gt;You&apos;re absolutely right about it being Zipfan, I was just trying to discuss the upper bound on error without having to do the math for confidence with different distributions.  Seems like another issue should be filed to implement different sampling so that we don&apos;t de-rail this one too much.&lt;/p&gt;</comment>
                            <comment id="13399576" author="andrew.wang" created="Fri, 22 Jun 2012 20:33:55 +0000"  >&lt;p&gt;Opened &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6261&quot; title=&quot;Better approximate high-percentile percentile latency metrics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6261&quot;&gt;&lt;del&gt;HBASE-6261&lt;/del&gt;&lt;/a&gt; for high-percentile latency estimation, lets take it there.&lt;/p&gt;</comment>
                            <comment id="13409725" author="jcreasy" created="Mon, 9 Jul 2012 18:54:24 +0000"  >&lt;p&gt;I&apos;m interested in working on a patch for this, it seems like a pretty good starter task for getting involved in HBASE development.&lt;/p&gt;</comment>
                            <comment id="13409791" author="eclark" created="Mon, 9 Jul 2012 19:57:20 +0000"  >&lt;p&gt;@jonathan&lt;br/&gt;
This would be a good project to get you started.  I would ignore the discussions about the accuracy of our histograms and just use the MetricsHistogram for now.&lt;/p&gt;</comment>
                            <comment id="13409801" author="zhihyu@ebaysf.com" created="Mon, 9 Jul 2012 20:08:59 +0000"  >&lt;p&gt;MetricsHistogram depends on the following:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.metrics.MetricsRecord;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.metrics.util.MetricsBase;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.metrics.util.MetricsRegistry;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;which are deprecated in hadoop.&lt;/p&gt;

&lt;p&gt;See discussion &apos;deprecating (old) metrics in favor of metrics2 framework&apos; on dev@ list.&lt;/p&gt;</comment>
                            <comment id="13409812" author="eclark" created="Mon, 9 Jul 2012 20:24:19 +0000"  >&lt;p&gt;Yes Ted it is deprecated.  However right now it&apos;s the best that we have. I have other jira&apos;s that have metrics2 implementations.  However I don&apos;t think that it&apos;s appropriate to expect a first time contributor to make all of those changes before adding a smaller fix.  When we move all of our implementation over to metrics2 MetricsHistogram will have to be addressed there too.&lt;/p&gt;</comment>
                            <comment id="13415856" author="jcreasy" created="Tue, 17 Jul 2012 03:01:16 +0000"  >&lt;p&gt;Working on this tonight. I&apos;ll just use the MetricsHistogram for now.&lt;/p&gt;</comment>
                            <comment id="13621593" author="stack" created="Thu, 4 Apr 2013 00:45:22 +0000"  >&lt;p&gt;Moving out new feature w/o assignee&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 13 Apr 2012 22:44:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>235753</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 37 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hu2n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>102134</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>