<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:53:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1385/HBASE-1385.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1385] Revamp TableInputFormat, needs updating to match hadoop 0.20.x AND remove bit where we can make &lt; maps than regions</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1385</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Update TIF to match new MR.&lt;/p&gt;

&lt;p&gt;Remove the bit of logic where we will use number of configured maps as splits count rather than regions.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12424781">HBASE-1385</key>
            <summary>Revamp TableInputFormat, needs updating to match hadoop 0.20.x AND remove bit where we can make &lt; maps than regions</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="larsgeorge">Lars George</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Thu, 7 May 2009 05:36:45 +0000</created>
                <updated>Thu, 2 May 2013 02:29:24 +0000</updated>
                            <resolved>Tue, 30 Jun 2009 17:43:07 +0000</resolved>
                                                    <fixVersion>0.20.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12706727" author="stack" created="Thu, 7 May 2009 05:53:42 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
05:35 &amp;lt; dj_ryan&amp;gt; well
05:35 &amp;lt; dj_ryan&amp;gt; make a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; one
05:36 &amp;lt; dj_ryan&amp;gt; we dont want to force people to port
05:36 &amp;lt; dj_ryan&amp;gt; to an entirely &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; API
05:36 &amp;lt; dj_ryan&amp;gt; just becasue of 0.20
05:36 &amp;lt; dj_ryan&amp;gt; the old ones work but they are deprecated
05:36 &amp;lt; dj_ryan&amp;gt; but also we should fix old TIF
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12711831" author="stack" created="Thu, 21 May 2009 21:53:21 +0000"  >&lt;p&gt;This patch makes number of splits equal the number of regions in the table.&lt;/p&gt;

&lt;p&gt;I was going to update to new MR API too but I then started thinking that we can live w/ the deprecated through 0.20.0.&lt;/p&gt;

&lt;p&gt;And then I thought that all this stuff is going to have to change to suit the new API &amp;#8211; e.g. Result instead of RowResult and Put or Delete instead of BatchUpdate &amp;#8211; etc.&lt;/p&gt;

&lt;p&gt;So, going to wait on this one.  I think we need to discuss what we want to do for 0.20.0.  We could leave this stuff as is and make a new package named mapreduce that has in it the new versions of these classes to match what is happening up in hadoop (new classes are in the mapreduce package rather than in mapred).&lt;/p&gt;</comment>
                            <comment id="12711836" author="stack" created="Thu, 21 May 2009 21:56:12 +0000"  >&lt;p&gt;Need to do &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1172&quot; title=&quot;Modify TableInputFormat splitting algorithm to allow any number of mappers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1172&quot;&gt;&lt;del&gt;HBASE-1172&lt;/del&gt;&lt;/a&gt; along with this issue.&lt;/p&gt;</comment>
                            <comment id="12711858" author="stack" created="Thu, 21 May 2009 23:23:09 +0000"  >&lt;p&gt;Other things:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Can&apos;t do the MR new stuff till all has settled.  Maybe 0.21?&lt;/li&gt;
	&lt;li&gt;TableMap and TableReduce can no longer be Interfaces if we go to new MR stuff.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12713107" author="streamy" created="Tue, 26 May 2009 16:55:22 +0000"  >&lt;p&gt;New TableInputFormat/TableOutputFormat will be compatible with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-880&quot; title=&quot;Improve the current client API by creating new container classes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-880&quot;&gt;&lt;del&gt;HBASE-880&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1304&quot; title=&quot;New client server implementation of how gets and puts are handled. &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1304&quot;&gt;&lt;del&gt;HBASE-1304&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All parameter setting should be replaced by configuring and setting a Scan object.&lt;/p&gt;

&lt;p&gt;TIF will return &amp;lt;IBW,Result&amp;gt; and TOF will take &amp;lt;IBW,Put&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12719898" author="apurtell" created="Tue, 16 Jun 2009 02:15:11 +0000"  >&lt;p&gt;I just checked in a new package &lt;tt&gt;org.apache.hadoop.hbase.mapreduce&lt;/tt&gt; that we can use to build the new mapreduce API for 0.21 without affecting the old package &lt;tt&gt;org.apache.hadoop.hbase.mapred&lt;/tt&gt;. &lt;/p&gt;</comment>
                            <comment id="12719899" author="apurtell" created="Tue, 16 Jun 2009 02:15:27 +0000"  >&lt;p&gt;Move to 0.21. &lt;/p&gt;</comment>
                            <comment id="12722717" author="stack" created="Mon, 22 Jun 2009 17:56:11 +0000"  >&lt;p&gt; 	 jaehong choi suggests passing Scan to TIF in 1548&lt;/p&gt;</comment>
                            <comment id="12722976" author="stack" created="Tue, 23 Jun 2009 05:52:55 +0000"  >&lt;p&gt;Merge 1548 in here after chatting with Jaehong Choi.  Add start/end time and versions configuration.&lt;/p&gt;</comment>
                            <comment id="12722977" author="stack" created="Tue, 23 Jun 2009 05:53:58 +0000"  >&lt;p&gt;resolve hbase-1548 when this is done (make sure this one incorporates hbase-1548)&lt;/p&gt;</comment>
                            <comment id="12724875" author="larsgeorge" created="Sat, 27 Jun 2009 18:05:28 +0000"  >&lt;p&gt;So it begins. I started porting the mapreduce package to the proper Hadoop 0.20 API. I will upload a patch here soon, but I noticed an issue where Partitioner is not a JobConfigurable anymore (as those where removed). Now there is no way of creating a table in the HRegionPartitioner anymore. I checked and they had a TotalOrderPartitioner that also relied on the configure() call - but that class is missing from the Hadoop mapreduce package. So not sure how this is supposed to work.&lt;/p&gt;

&lt;p&gt;Further there are no interfaces anymore and everything is simply &quot;extended&quot;. For example&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class TableReduce&amp;lt;KEYIN &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; WritableComparable&amp;lt;KEYIN&amp;gt;, VALUEIN &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Writable&amp;gt;
&lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Reducer&amp;lt;KEYIN, VALUEIN, ImmutableBytesWritable, Put&amp;gt; {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I added &quot;abstract&quot; because Reducer is too - but does not have any abstract function calls, so I could leave it out. But I assume that we also want to force people to extend this class (or use IndentyTableReduce). Right?&lt;/p&gt;

&lt;p&gt;You can also see I am using the KEYIN, VALUEIN parameter names as Hadoop as changed to the same, away from K1, V1, K2, V2 which is/was confusing.&lt;/p&gt;

&lt;p&gt;Lastly, why do we add the specific types into the TableReduce parameters, i.e. instead of&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class TableReduce&amp;lt;KEYIN, VALUEIN&amp;gt; ...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which is what is in the base class&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class Reducer&amp;lt;KEYIN,VALUEIN,KEYOUT,VALUEOUT&amp;gt; ...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I also changed the class fields/members in TableSplit to have no &quot;m_&quot; prefix to be the same as in all the other classes.&lt;/p&gt;

&lt;p&gt;Finally, what do you think of renaming the classes to TableReducer and TableMapper? I do not think it matter that much, but asking for opinions here.&lt;/p&gt;

&lt;p&gt;Oh, and I am cleaning up the JavaDocs for the whole package as that is all over the place, so the patch is rather a lot of lines in end. &lt;/p&gt;

&lt;p&gt;Comments?&lt;/p&gt;</comment>
                            <comment id="12724879" author="larsgeorge" created="Sat, 27 Jun 2009 19:42:00 +0000"  >&lt;p&gt;OK, found that &quot;Configurable&quot; is the new &quot;JobConfigurable&quot; and it is done in the reflection utility class of Hadoop. So the Partitioner issue is solved. The rest is still pending,&lt;/p&gt;</comment>
                            <comment id="12724891" author="larsgeorge" created="Sat, 27 Jun 2009 21:36:45 +0000"  >&lt;p&gt;First patch that compiles and reports no JavaDoc issues. Please have a brief view if this is going into the right direction or if you are missing something. I had to do some refactoring due to the fact that now context&apos;s are handed in, not the actual details like file system and a unique name. Especially with the latter I will still have to check if the index build code still works. &lt;/p&gt;

&lt;p&gt;I have applied Stack&apos;s patch and also &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1548&quot; title=&quot;give a time range in MapReduce&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1548&quot;&gt;&lt;del&gt;HBASE-1548&lt;/del&gt;&lt;/a&gt;, but still have to add the test it supplies and run it as well as all other tests. &lt;/p&gt;</comment>
                            <comment id="12724892" author="larsgeorge" created="Sat, 27 Jun 2009 21:41:32 +0000"  >&lt;p&gt;Jon, where you say a Scan should be used to configure a job, where do you want to see this? TIF internally already uses a Scan. Is that what you meant?&lt;/p&gt;</comment>
                            <comment id="12724904" author="larsgeorge" created="Sat, 27 Jun 2009 22:52:48 +0000"  >&lt;p&gt;Added new test and ported existing tests over. Still have to run those, just wanted to get them in and upload patch. Not done yet!&lt;/p&gt;</comment>
                            <comment id="12724905" author="larsgeorge" created="Sat, 27 Jun 2009 23:12:30 +0000"  >&lt;p&gt;Another comment, I think &lt;a href=&quot;https://issues.apache.org/jira/browse/MAPREDUCE-287&quot; title=&quot;Replace the JobConf.setNumOfMapTasks with FileInputFormat.setMapInputSize(long)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAPREDUCE-287&quot;&gt;MAPREDUCE-287&lt;/a&gt; is already halfway implemented as the new Job class is lacking the option to set the number of Mappers. The described option in FileInputFormat is also missing, so I removed the option too where ever it applied.&lt;/p&gt;</comment>
                            <comment id="12724908" author="stack" created="Sat, 27 Jun 2009 23:54:12 +0000"  >&lt;p&gt;.bq I added &quot;abstract&quot; because Reducer is too - but does not have any abstract function calls, so I could leave it out. But I assume that we also want to force people to extend this class (or use IndentyTableReduce). Right?&lt;/p&gt;

&lt;p&gt;I agree w/ above &amp;#8211; that folks now need to extend TableReducer (not IdentityTableReducer &amp;#8211; let that stand as an example/default).  Yeah, its unfortunate we can&apos;t get away with TM and TR being Interfaces but the underlying MR API changed so no way around it.&lt;/p&gt;

&lt;p&gt;I like the new KEYIN, VALUEIN namings.&lt;/p&gt;

&lt;p&gt;We don&apos;t need to add specific types as inputs as you suggest.  I like your improvement leaving them generic.&lt;/p&gt;

&lt;p&gt;+1 on removing weirdo &apos;m_&apos;.&lt;/p&gt;

&lt;p&gt;+1 on renaming classes from TableMap to TableMapper and TableReduce to TableReducer; Mapper and Reducer are parent names so makes more sense.&lt;/p&gt;

&lt;p&gt;Looking at patch now.&lt;/p&gt;
</comment>
                            <comment id="12724910" author="stack" created="Sun, 28 Jun 2009 00:20:30 +0000"  >&lt;p&gt;If we change TMap to TMapper, should we change name of utility methods from initTableMapJob to initTableMapperJob?&lt;/p&gt;

&lt;p&gt;The \n in below is probably in wrong place now that numMapTasks have been removed:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
r &amp;lt;numReduceTasks&amp;gt;\n  -indexConf &amp;lt;iconfFile&amp;gt; &quot; +
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;IRW is all ^Ms as are other classes.  Not important.  Probably not you.&lt;/p&gt;

&lt;p&gt;Is the split algorithm the same as old days?  I suppose it is since not in this patch.    &lt;/p&gt;

&lt;p&gt;Only objection I had to 1548 was this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        scan.setMaxVersions();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Some lines are &amp;gt; 80 characters.  Convention is to try and keep them &amp;lt; 80 if makes sense.&lt;/p&gt;

&lt;p&gt;If a start/stop time is set, then max versions is set which I&apos;d think most would find odd.  I&apos;d remove this line for now.  Someone can come along later and make an issue to set versions via the Job object.&lt;/p&gt;

&lt;p&gt;Otherwise patch is high-quality.  Thanks for working on this Lars (new hadoop API seems to clean up loads of stuff).&lt;/p&gt;
</comment>
                            <comment id="12724944" author="larsgeorge" created="Sun, 28 Jun 2009 11:21:41 +0000"  >&lt;p&gt;Stack,&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We don&apos;t need to add specific types as inputs as you suggest. I like your improvement leaving them generic.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That is the question I had though, they seem to always have been generic and the previous person who worked on the Table classes thought it being important and added it. I am fine with leaving them - or making them - generic, just don&apos;t want to step on someone&apos;s toes.&lt;/p&gt;

&lt;p&gt;OK, will rename classes/methods and add to next patch.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The \n in below is probably in wrong place now that numMapTasks have been removed:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Changed the \n in that line to wrap after each second argument, I think that is what was intended in the first place.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;IRW is all ^Ms as are other classes. Not important. Probably not you.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I trust that is my Eclipse saving with stupid Windows line endings. Switched it to use Unix line endings and will save them again.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Only objection I had to 1548 was this: scan.setMaxVersions();&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, I was not sure why that was in there and will remove as you say to leave it up to the caller to set if needed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Some lines are &amp;gt; 80 characters. Convention is to try and keep them &amp;lt; 80 if makes sense.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Wrapped all lines where I could. I had an issue with JavaDoc @see lines that when wrapped would cause a JavaDoc compile error. So I unwrapped them. Let me know if that is an issue.&lt;/p&gt;
</comment>
                            <comment id="12724947" author="larsgeorge" created="Sun, 28 Jun 2009 11:33:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is the split algorithm the same as old days? I suppose it is since not in this patch. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, apart from the change you did, i.e. setting the number of splits to the number of regions. Is there anything else that is not right with it?&lt;/p&gt;

&lt;p&gt;One things I have to note is the odd Configurable approach apparently the Hadoop&apos;s #1 choice to assign the generic Configuration to a class. It requires to implement a getConf() as well as setConf(). The latter is then used to &quot;configure&quot; the instance as it is called like the old configure() method. It seems to be less intuitive and also the getConf() seems obsolete in most cases. But maybe this is just not fully polished in the Hadoop classes? &lt;/p&gt;
</comment>
                            <comment id="12724949" author="larsgeorge" created="Sun, 28 Jun 2009 11:46:34 +0000"  >&lt;p&gt;Third patch fixing the above issues.&lt;/p&gt;</comment>
                            <comment id="12724975" author="larsgeorge" created="Sun, 28 Jun 2009 17:43:20 +0000"  >&lt;p&gt;v4 patch fixes a renamed class issue.&lt;/p&gt;</comment>
                            <comment id="12724977" author="larsgeorge" created="Sun, 28 Jun 2009 18:03:19 +0000"  >&lt;p&gt;So current status is this:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I have not yet removed the specializations from TableMapper/Reducer since I would like to see if we can find out its original motivation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;package-info.java - I only fixed the new naming. Once we settle on the classes and the changes I will go through it and fix it up properly.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Tests - they fail, but I cannot figure out why. In Eclipse I get a NPE in SerializationFactory on a Hadoop class level. Ant fails silently. Could someone tell me how to set this up without me wasting ours trying to get this convoluted mess running (no offense - I have no better alternative).&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12724984" author="larsgeorge" created="Sun, 28 Jun 2009 19:15:05 +0000"  >&lt;p&gt;Re: the error I get for the test, here is what I see:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.NullPointerException
	at org.apache.hadoop.io.serializer.SerializationFactory.getSerializer(SerializationFactory.java:73)
	at org.apache.hadoop.mapred.JobClient.writeNewSplits(JobClient.java:899)
	at org.apache.hadoop.mapred.JobClient.submitJobInternal(JobClient.java:779)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:432)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:447)
	at org.apache.hadoop.hbase.mapreduce.TestTableMapReduce.runTestOnTable(TestTableMapReduce.java:142)
	at org.apache.hadoop.hbase.mapreduce.TestTableMapReduce.testMultiRegionTable(TestTableMapReduce.java:121)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I traced this down and found this in getSerializer():&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (serialization.accept(c)) {
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (Serialization&amp;lt;T&amp;gt;) serialization;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which does this in the default WritableSerialization class:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; accept(&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; c) {
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; Writable.class.isAssignableFrom(c);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So, this means that the class handed in must be serializable. Which makes sense given the class name. Now looking into where it is called, I see this in JobClient:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  T[] array = (T[]) splits.toArray(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; org.apache.hadoop.mapreduce.InputSplit[splits.size()]);
  ...
  SerializationFactory factory = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SerializationFactory(conf);
  Serializer&amp;lt;T&amp;gt; serializer = factory.getSerializer((&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;T&amp;gt;) array[0].getClass());
  ...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So InputSplit &lt;b&gt;must&lt;/b&gt; be implementing Writable! Looking at the old (mind you!) InputSplit:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Deprecated
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; InputSplit &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Writable {
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which is fine, but the new one in mapreduce does this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class InputSplit {
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and that&apos;s that. Broken! So I can either add it myself on a higher level and hope for the best, or... ? Suggestions?&lt;/p&gt;</comment>
                            <comment id="12724985" author="larsgeorge" created="Sun, 28 Jun 2009 19:27:26 +0000"  >&lt;p&gt;Patch v5 fixes the test issue by adding Writable to TableSplit as per the previous comment - that makes it run as expected. TestTableMapReduce now passes as expected. Working on the remaining tests now.&lt;/p&gt;</comment>
                            <comment id="12724992" author="larsgeorge" created="Sun, 28 Jun 2009 20:05:40 +0000"  >&lt;p&gt;Stack, for the TestTimeRangeMapRed to pass the line&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
scan.setMaxVersions();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;has to be set! Otherwise it fails because the test has one row with one column that has many versions. The scan will not &lt;b&gt;see&lt;/b&gt; the 5 versions the unit test changes. For reference&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (KeyValue kv : result.sorted()) {
  tsList.add(kv.getTimestamp());
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So add it again? I mean we have to do something about it. &lt;/p&gt;</comment>
                            <comment id="12724997" author="stack" created="Sun, 28 Jun 2009 21:08:20 +0000"  >&lt;p&gt;.bq ..for the TestTimeRangeMapRed to pass...&lt;/p&gt;

&lt;p&gt;Can you change the test to only expect one version?&lt;/p&gt;

&lt;p&gt;.bq So I can either add it myself on a higher level and hope for the best...&lt;/p&gt;

&lt;p&gt;Odd that InputSplit is itself not Writable, but yeah, it should be.&lt;/p&gt;

&lt;p&gt;.bq I have not yet removed the specializations from TableMapper/Reducer since I would like to see if we can find out its original motivation&lt;/p&gt;

&lt;p&gt;I did it when I moved our MR to be &apos;generic&apos;:&lt;/p&gt;

&lt;p&gt;r611488 | stack | 2008-01-12 13:32:46 -0800 (Sat, 12 Jan 2008) | 2 lines&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-313&quot; title=&quot;[hbase] Make TableMap and TableReduce generic&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-313&quot;&gt;&lt;del&gt;HADOOP-2548&lt;/del&gt;&lt;/a&gt; Make TableMap and TableReduce generic&lt;/p&gt;

&lt;p&gt;So, the specialization of IBW is not needed &amp;#8211; an overreaction on my part.  Please go ahead with your suggestion and make it better.&lt;/p&gt;
</comment>
                            <comment id="12725334" author="larsgeorge" created="Mon, 29 Jun 2009 20:34:35 +0000"  >&lt;p&gt;Patch v6 changes everything to use Scan instances as opposed to old style text based notations. Also adds a new constructor to the Scan class to be able to create a deep clone. This is used in the TableInputFormat for example.&lt;/p&gt;</comment>
                            <comment id="12725340" author="larsgeorge" created="Mon, 29 Jun 2009 20:45:29 +0000"  >&lt;p&gt;Stack,&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can you change the test to only expect one version?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes and no. I changed the lot to use Scan&apos;s, which now convey the values over to the TIF. But one caveat for the time being, Configuration is missing a setWritable()/getWritable() combination that would allow to hand in any Writable into a Job. Maybe we should suggest that to the core team?&lt;/p&gt;

&lt;p&gt;For the time being I have to extract the values from the given Scan and set them as strings into the config just to recreate them on the other end in the TableInputFormat. The problem with that is that the filter is missing right now. The filter is in transition anyways and mostly commented out in the TIF code - I was able to remove it as the Scan use should take care of it - but that needs a proper test! &lt;/p&gt;

&lt;p&gt;I also removed the specialization from TableMapper and TableReducer as discussed. &lt;/p&gt;

&lt;p&gt;Every new test passes but the TextTableIndex one. I am looking into it right now. But otherwise this should be a complete patch and needs proper reviewing. While a lot is quite straight forward and should work, the most extensive one is TableInputFormat and TableInputFormatBase which now use the Scan class as mentioned above. &lt;/p&gt;</comment>
                            <comment id="12725402" author="stack" created="Tue, 30 Jun 2009 00:13:10 +0000"  >&lt;p&gt;Should GroupingTableMap become GroupingTableMapper to match?&lt;/p&gt;

&lt;p&gt;The configuration keys should be mapreduce rather than mapred as in &quot;hbase.mapred.inputtable&quot; should be &quot;hbase.mapreduce.inputtable&quot;&lt;/p&gt;

&lt;p&gt;I&apos;m not sure how to pass filters via Configuration other than to name the filter and then pass String arguments as in:&lt;/p&gt;

&lt;p&gt;hbase.mapreduce.filter.name&lt;br/&gt;
hbase.mapreduce.filter.arg0&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;In TIF, you&apos;d do get on Configuration till no more args and then use reflection to make an instance.&lt;/p&gt;

&lt;p&gt;We can do that in a different issue I&apos;d say.&lt;/p&gt;

&lt;p&gt;I like doing TIF spec. using Scan.  Its definetly way to go.&lt;/p&gt;

&lt;p&gt;Should this be a convenience method on Scan?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][] famQual = KeyValue.parseColumn(col);
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (famQual[1].length &amp;gt; 0) {
+        scan.addColumn(famQual[0], famQual[1]);
+      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+        scan.addFamily(famQual[0]);
+      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It happens a few times in this patch and I&apos;ve needed it myself elsewhere.&lt;/p&gt;

&lt;p&gt;Patch looks great.&lt;/p&gt;</comment>
                            <comment id="12725496" author="larsgeorge" created="Tue, 30 Jun 2009 06:48:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should GroupingTableMap become GroupingTableMapper to match? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, an oversight, have renamed it now.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The configuration keys should be mapreduce rather than mapred as in &quot;hbase.mapred.inputtable&quot; should be &quot;hbase.mapreduce.inputtable&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, although this is only used internally, I will make it match. Makes sense.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should this be a convenience method on Scan?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I strongly agree. I added three methods to Scan:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;addColumn(byte[])&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This one assumes the old style format notation. I have also replaced the separate parsing in addColumns(byte[][]) to use this new method instead.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Important!&lt;/b&gt; I have removed the silent try/catch in addColumns(byte[][]) as a) silent catches are evil and in this case where malformed input can be expected at a reasonable rate not wanted and b) it bit me changing the TestTableIndex to the new API. &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;addColumns(String)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This one parses a space separate list.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;getInputColumns()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This the reverse to the above. It is needed to create a &quot;human readable&quot; version of the families and qualifiers.&lt;/p&gt;

&lt;p&gt;Does that make sense?&lt;/p&gt;</comment>
                            <comment id="12725519" author="larsgeorge" created="Tue, 30 Jun 2009 08:06:14 +0000"  >&lt;p&gt;Patch v7 fixes the naming issue discussed above and adds the new methods to Scan. Also redone the whole Scan in Configuration issue by simply write the Scan into a Base64 encoded string that travels with the Configuration. That takes care of everything, including filters. Sweet! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="12725571" author="larsgeorge" created="Tue, 30 Jun 2009 10:38:41 +0000"  >&lt;p&gt;Wow, that was nasty. The TestTableIndex failed with the error that no index directory was found during the verify step. But that was collateral damage. The real error was buried in the logs&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
009-06-30 12:06:43,935 WARN  [&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-1100] mapred.LocalJobRunner$Job(255): job_local_0001
java.lang.ClassCastException: org.apache.hadoop.hbase.client.Result cannot be &lt;span class=&quot;code-keyword&quot;&gt;cast&lt;/span&gt; to org.apache.hadoop.hbase.mapreduce.LuceneDocumentWrapper
	at org.apache.hadoop.hbase.mapreduce.IndexRecordWriter.write(IndexRecordWriter.java:1)
	at org.apache.hadoop.mapreduce.TaskInputOutputContext.write(TaskInputOutputContext.java:80)
	at org.apache.hadoop.mapreduce.Reducer.reduce(Reducer.java:154)
	at org.apache.hadoop.mapreduce.Reducer.run(Reducer.java:174)
	at org.apache.hadoop.mapred.ReduceTask.runNewReducer(ReduceTask.java:543)
	at org.apache.hadoop.mapred.ReduceTask.run(ReduceTask.java:410)
	at org.apache.hadoop.mapred.LocalJobRunner$Job.run(LocalJobRunner.java:215)
2009-06-30 12:06:44,826 DEBUG [main-EventThread] client.HConnectionManager$TableServers(213): Got ZooKeeper event, state: SyncConnected, type: None, path: &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now upon checking I found this in IndexTableReducer&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void reduce(ImmutableBytesWritable key, Iterator&amp;lt;Result&amp;gt; values, Context context)
  &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but when checking the stack trace above you note that Reducer.reduce() is called! That is because while being abstract, the Reducer can run as-is and now implements a default identity mapping. That means Result to Result. It is imperative nearly to add &quot;@Override&quot; annotation because once I did I saw the error, the method should have been&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  @Override
 &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void reduce(ImmutableBytesWritable key, Iterable&amp;lt;Result&amp;gt; values, Context context)
  &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The only difference is the use of Iterable! With the old one it simply created a new reduce() method that was never called but the inherited default reduce(). Once I changed it to the proper signature it passed the test.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;gt; ant -Dtestcase=mapreduce/Test* compile-test test
...
test:
    [junit] Running org.apache.hadoop.hbase.mapreduce.TestTableIndex
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 75.281 sec
    [junit] Running org.apache.hadoop.hbase.mapreduce.TestTableMapReduce
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 70.172 sec
    [junit] Running org.apache.hadoop.hbase.mapreduce.TestTimeRangeMapRed
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 28.782 sec
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All good now, patch below will have that included.&lt;/p&gt;</comment>
                            <comment id="12725603" author="larsgeorge" created="Tue, 30 Jun 2009 12:46:16 +0000"  >&lt;p&gt;Patch v8 passes all old and new tests. &lt;/p&gt;</comment>
                            <comment id="12725614" author="larsgeorge" created="Tue, 30 Jun 2009 12:57:54 +0000"  >&lt;p&gt;Now, the last issue is &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1172&quot; title=&quot;Modify TableInputFormat splitting algorithm to allow any number of mappers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1172&quot;&gt;&lt;del&gt;HBASE-1172&lt;/del&gt;&lt;/a&gt;, which was merged in here. The new framework basically does away with setNumMapTasks() altogether as it was always just a hint to the framework as to how many mappers should run. The actual number is driven by the number of splits, in our case what TableInputFormat.getSplits() returns. So we are now always setting it to the number of regions as per previous discussions. Are you still wanting to be able to override it? &lt;/p&gt;

&lt;p&gt;We could by getting context.getConfiguration.getInt(&quot;mapred.map.tasks&quot;) - but we would also have to manually set that before starting the process because of the setter now missing as per the above. Or set it with a constant defined in TIF, like the table name etc. &lt;/p&gt;

&lt;p&gt;But what is the advantage?&lt;/p&gt;

&lt;p&gt;Apart from this, the patch should be complete after your review.&lt;/p&gt;</comment>
                            <comment id="12725720" author="stack" created="Tue, 30 Jun 2009 17:43:07 +0000"  >&lt;p&gt;Thanks for the high-quality patch Lars.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12428343">HBASE-1548</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12413701">HBASE-1172</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12413698">HBASE-1170</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12412024" name="1385-v5.patch" size="128564" author="larsgeorge" created="Sun, 28 Jun 2009 19:27:26 +0000"/>
                            <attachment id="12412099" name="1385-v6.patch" size="133761" author="larsgeorge" created="Mon, 29 Jun 2009 20:34:35 +0000"/>
                            <attachment id="12412144" name="1385-v7.patch" size="140430" author="larsgeorge" created="Tue, 30 Jun 2009 08:06:14 +0000"/>
                            <attachment id="12412162" name="1385-v8.patch" size="140429" author="larsgeorge" created="Tue, 30 Jun 2009 12:46:16 +0000"/>
                            <attachment id="12408744" name="mr.patch" size="1780" author="stack" created="Thu, 21 May 2009 21:53:21 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 26 May 2009 16:55:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25728</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 25 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hcxj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99357</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>