<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:04:49 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-15555/HBASE-15555.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-15555] Memory Management</title>
                <link>https://issues.apache.org/jira/browse/HBASE-15555</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Umbrella issue on memory management. One-stop shop to learn how we&apos;re doing it, tenets, and work to be done. Collect it all in one place so we are aligned rather than each trying to do it for themselves.&lt;/p&gt;

&lt;p&gt;Subtasks include:&lt;/p&gt;

&lt;p&gt;+ Map of memory allocation and recycling landscape&lt;br/&gt;
+ Where are we allocating when we could be recycling&lt;br/&gt;
+ MSLAB and G1GC don&apos;t go together?&lt;br/&gt;
+ Enable MSLAB pool always?&lt;br/&gt;
+ With offheap allocations, less GC but it runs for longer?&lt;br/&gt;
+ Better heuristics recycling: e.g. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15525&quot; title=&quot;OutOfMemory could occur when using BoundedByteBufferPool during RPC bursts&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15525&quot;&gt;&lt;del&gt;HBASE-15525&lt;/del&gt;&lt;/a&gt; OutOfMemory could occur when using BoundedByteBufferPool during RPC bursts&lt;br/&gt;
+ See if can do DFSClient buffer reuse: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15506&quot; title=&quot;FSDataOutputStream.write() allocates new byte buffer on each operation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15506&quot;&gt;HBASE-15506&lt;/a&gt; FSDataOutputStream.write() allocates new byte buffer on each operation&lt;/p&gt;

&lt;p&gt;What else?&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12954202">HBASE-15555</key>
            <summary>Memory Management</summary>
                <type id="14" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/genericissue.png">Umbrella</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Mar 2016 05:39:07 +0000</created>
                <updated>Wed, 18 May 2016 14:46:36 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                                                            <comments>
                            <comment id="15215475" author="stack" created="Tue, 29 Mar 2016 05:41:38 +0000"  >&lt;p&gt;Start of a diagram identifying current bigbuffer allocations.&lt;/p&gt;</comment>
                            <comment id="15215490" author="anoop.hbase" created="Tue, 29 Mar 2016 05:52:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;+ With offheap allocations, less GC but it runs for longer?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is not like when offheap we do have longer GC pause.   It is when we pool the buffer.    We tried it.&lt;br/&gt;
Right now, when write request comes, we allocate new buffer and read data into it.  We read cells from it and add to memstore. We have MSLAB copy just before doing the memstore write.&lt;br/&gt;
We change the RPC layer to avoid allocate of new buffer every time.  Instead , we use BBs from the pool (BoundedByteBufferPool) and read  req into it.  After this change the #GCs (young GC) become half but the avg pause is increased..  So there is not much diff with net GC pause time  (Observed for some 5 mns)..   Every GC pause time bit more than the trunk case&lt;/p&gt;</comment>
                            <comment id="15215494" author="vrodionov" created="Tue, 29 Mar 2016 05:58:05 +0000"  >&lt;blockquote&gt;
&lt;p&gt;What else?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15542&quot; title=&quot;Minimize garbage memory allocations during compaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15542&quot;&gt;HBASE-15542&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="15216003" author="stack" created="Tue, 29 Mar 2016 13:35:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;we use BBs from the pool (BoundedByteBufferPool) and read req into it. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Like 14490 &lt;span class=&quot;error&quot;&gt;&amp;#91;RpcServer&amp;#93;&lt;/span&gt; reuse request read buffer. Lives lifetime of request does? Why do you think this is? We are only using the pool? We are reading direct BB &amp;#8211; the socket &amp;#8211; to DBB from the pool? Would be interesting to find what is going on here.&lt;/p&gt;</comment>
                            <comment id="15216004" author="stack" created="Tue, 29 Mar 2016 13:36:13 +0000"  >&lt;p&gt;Linking &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15542&quot; title=&quot;Minimize garbage memory allocations during compaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15542&quot;&gt;HBASE-15542&lt;/a&gt; (Can&apos;t make it a subtask because it has subtasks itself).&lt;/p&gt;</comment>
                            <comment id="15216119" author="anoop.hbase" created="Tue, 29 Mar 2016 14:48:32 +0000"  >&lt;p&gt;Ya it is like 14490 change. The BBBPool gives us DBBs and we read into it directly. Then the Codec decoder makes cells directly out of these DBBs.  Later on at memstore level the cells will be copied to MSLAB area (we do have an offheap MSLAB implementation also).    This reduces the #GCs but the avg pause time is increased.  Need to investigate more here specially wrt GC setting and tuning.  Will post back our findings soon.&lt;/p&gt;</comment>
                            <comment id="15216213" author="stack" created="Tue, 29 Mar 2016 15:54:24 +0000"  >&lt;p&gt;Is there an issue for this? Seems kinda important. Good one &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15216296" author="ram_krish" created="Tue, 29 Mar 2016 16:34:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;MSLAB and G1GC don&apos;t go together?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Am also interested in this. My tests still suggests (with Yangping&apos;s suggestion) the above stmt is true. But need to see more on this.&lt;br/&gt;
I will discuss with her and then fine tune my tests.  &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Is there an issue for this? Seems kinda important&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Do you want to raise a JIRA for this?  I think the subtasks here would cover it.&lt;/p&gt;</comment>
                            <comment id="15216539" author="stack" created="Tue, 29 Mar 2016 18:16:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;Do you want to raise a JIRA for this? I think the subtasks here would cover it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The phenomeon is disturbing, that though we are creating less garbage, it makes no difference time-wise when GC&apos;ing. Worth monitoring as an independent concern I&apos;d say... as subtask?&lt;/p&gt;

&lt;p&gt;And similar the issue of SLABs vs G1GC... Need to get over that hurdle too... definitively... Get to the bottom of it.&lt;/p&gt;</comment>
                            <comment id="15222161" author="anoop.hbase" created="Fri, 1 Apr 2016 18:51:02 +0000"  >&lt;p&gt;Some update here.&lt;br/&gt;
After some tuning with SurvivorRatio, we are able to get almost same avg GC pause time and reduced #GC pauses, when the reqs read into BBs that we get from BBBpool..    So these are off heap BBs.   We have extended PB to support offheap BB.   Also we have done an impl of Offheap MSLAB.  Will give more test results soon.&lt;/p&gt;</comment>
                            <comment id="15289085" author="stack" created="Wed, 18 May 2016 14:46:36 +0000"  >&lt;p&gt;Minor update on our memory management diagram&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12953787">HBASE-15542</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12952195">HBASE-15506</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12804673" name="MemoryManagementDiagram.svg" size="40791" author="stack" created="Wed, 18 May 2016 14:46:36 +0000"/>
                            <attachment id="12795782" name="download.svg" size="55985" author="stack" created="Tue, 29 Mar 2016 05:41:38 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12952284">HBASE-15513</subtask>
                            <subtask id="12905100">HBASE-14613</subtask>
                            <subtask id="12953093">HBASE-15525</subtask>
                            <subtask id="12945633">HBASE-15362</subtask>
                            <subtask id="12952263">HBASE-15509</subtask>
                            <subtask id="12954539">HBASE-15561</subtask>
                            <subtask id="12954540">HBASE-15562</subtask>
                            <subtask id="12955392">HBASE-15581</subtask>
                            <subtask id="12997968">HBASE-16440</subtask>
                            <subtask id="13020038">HBASE-17073</subtask>
                            <subtask id="13020701">HBASE-17097</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Mar 2016 05:52:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            30 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2vbtr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>