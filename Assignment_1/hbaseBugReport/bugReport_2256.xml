<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:00:21 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2256/HBASE-2256.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2256] Delete row, followed quickly to put of the same row will sometimes fail.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2256</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Doing a Delete of a whole row, followed immediately by a put to that row will sometimes miss a cell. Attached is a test to provoke the issue.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12457251">HBASE-2256</key>
            <summary>Delete row, followed quickly to put of the same row will sometimes fail.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="clint.morgan">Clint Morgan</reporter>
                        <labels>
                    </labels>
                <created>Wed, 24 Feb 2010 03:00:41 +0000</created>
                <updated>Fri, 11 Nov 2016 17:34:00 +0000</updated>
                                            <version>0.20.3</version>
                                                        <due></due>
                            <votes>1</votes>
                                    <watches>16</watches>
                                                                <comments>
                            <comment id="12837590" author="ryanobjc" created="Wed, 24 Feb 2010 03:05:29 +0000"  >&lt;p&gt;isnt this due to the millisecond timestamp nature of our puts and delete markers? If the next put has the same millisecond TS as an existing delete record you will be masked by the previous delete.&lt;/p&gt;</comment>
                            <comment id="12837918" author="clint.morgan" created="Wed, 24 Feb 2010 18:09:16 +0000"  >&lt;p&gt;Yes, I&apos;m sure that the millisecond nature of timestamps comes in to play here. However, I&apos;m not setting any timestamps, and was under the impression that hbase would always reflect the state of the last operation done. Is this not a valid assumption?&lt;/p&gt;

&lt;p&gt;A related question. If I do two puts (w/latest timestamp), am I guaranteed to see the last one? I&apos;m sure many users operate under this assumption.&lt;/p&gt;

&lt;p&gt;So, for a given row, I&apos;m doing a delete of an entire row, then a put of two cells in different families. Then I do a get.&lt;/p&gt;

&lt;p&gt;Most times I&apos;ll see all of the latest put. Sometimes I see nothing for that row. Sometimes I see just one family/cell from the previous put. It seems with 0.20.2 I would either get all the row, or none. However with 0.20.3 I will see all or just one family. Returning just one family seems even more wrong.&lt;/p&gt;

&lt;p&gt;So suppose I wish to wipe existing cells of a row, then write some new cells. Is the only way to reliably do this to put a 1 ms pause between the delete and the put? This would hurt my throughput...&lt;/p&gt;
</comment>
                            <comment id="12837923" author="jdcryans" created="Wed, 24 Feb 2010 18:15:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;Yes, I&apos;m sure that the millisecond nature of timestamps comes in to play here. However, I&apos;m not setting any timestamps, and was under the impression that hbase would always reflect the state of the last operation done. Is this not a valid assumption?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Do you see this delete problem even on a fully distributed setup? In my experience, they only happen in unit tests where all components are in the same JVM whereas when network is involved some milliseconds will separate two consecutive operations. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;A related question. If I do two puts (w/latest timestamp), am I guaranteed to see the last one? I&apos;m sure many users operate under this assumption.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If they have the same timestamp, there&apos;s no guarantee.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So, for a given row, I&apos;m doing a delete of an entire row, then a put of two cells in different families. Then I do a get.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;See my first comment, it&apos;s ok when not done in unit tests. Like the bigtable paper says, if you need a finer granularity than millisecond you may need to redefine the timestamps (using something like microseconds).&lt;/p&gt;</comment>
                            <comment id="12837947" author="clint.morgan" created="Wed, 24 Feb 2010 18:49:26 +0000"  >&lt;p&gt;I have only noticed this in unit tests and a non-distributed setup. However, this Delete,Put happens in ITHbase&apos;s IndexRegion which means that even in a distributed setup the client for the put/delete and the regionserver handling them could be in the same JVM.&lt;/p&gt;

&lt;p&gt;For the put, put case, it seems to me this could be a real issue. Even in distributed setup sequential puts could happen in the same ms no? However, I did a similar test for Put after Put and it seems to always work. If it did not, I&apos;m sure users would have complained loudly by now.&lt;/p&gt;

&lt;p&gt;From my point of view, it would be nice to have this behavior for Put after Delete as well. &lt;/p&gt;

&lt;p&gt;I&apos;m not saying I need finer granularity tham ms. Just that when I&apos;m never explicitly messing with timestamps, I always see a &quot;correct&quot; view that reflects my last operation. I just skimmed over the bigtable paper, and could not find an explication about what they do in this case..&lt;/p&gt;

</comment>
                            <comment id="12838746" author="ryanobjc" created="Fri, 26 Feb 2010 08:17:19 +0000"  >&lt;p&gt;there is a millisecond resolution, and it might be difficult to get better without changing the storage format so we can get nanos in there.&lt;/p&gt;

&lt;p&gt;but still, for most people, doing a put - delete - put all within 1 millisecond is a not common.  maybe it might be possible to change something so we dont have to run up against this issue?&lt;/p&gt;</comment>
                            <comment id="12859929" author="kevinpet" created="Thu, 22 Apr 2010 18:07:52 +0000"  >&lt;p&gt;What if I could do something like this:&lt;/p&gt;

&lt;p&gt;Put put1 = ...&lt;br/&gt;
HTable.put(put1);&lt;br/&gt;
Delete delete = new Delete(...).guaranteeAfter(put1);&lt;br/&gt;
HTable.delete(delete);&lt;br/&gt;
Put put2 = new Put(...).guaranteeAfter(delete);&lt;br/&gt;
HTable.put(put2)&lt;/p&gt;

&lt;p&gt;It seems like the distributed case isn&apos;t a problem since it&apos;s so unlikely, but the delete then put seems more plausible. We could set the timestamp to 1ms after the delete if needed. The occasional write will get a timestamp a few ms in the future, which doesn&apos;t seem that bad. I think this solves Clint&apos;s requirement of seeing a correct view without explicitly messing with timestamps.&lt;/p&gt;</comment>
                            <comment id="13009894" author="nvcook42" created="Tue, 22 Mar 2011 23:00:00 +0000"  >&lt;p&gt;We ran into this problem recently in our production code. A single hbase client needed to first clean up of several columns by deleting them and then put a subset those columns back in with new values. Frequently the delete and put call would happen in the same millisecond thus masking the put. For now we have implemented a fix on our side but would be nice to see a real fix for this, where the region servers handle this more gracefully.&lt;/p&gt;

&lt;p&gt;Maybe we could log some warnings when this occurs for possible easier debugging? This was an extremely difficult problem to find.&lt;/p&gt;

&lt;p&gt;Or maybe someone has a clever solution? &lt;/p&gt;
</comment>
                            <comment id="13010993" author="stack" created="Thu, 24 Mar 2011 23:09:22 +0000"  >&lt;p&gt;@Nathaniel This should be fixed as by-product of hbase-2856.&lt;/p&gt;</comment>
                            <comment id="13017126" author="yuzhihong@gmail.com" created="Thu, 7 Apr 2011 20:24:26 +0000"  >&lt;p&gt;Currently timestamp for Put and Delete is in milliseconds.&lt;br/&gt;
If we can use System.nanoTime(), the chance of this issue happening would be very low.&lt;/p&gt;</comment>
                            <comment id="13017131" author="ryanobjc" created="Thu, 7 Apr 2011 20:30:07 +0000"  >&lt;p&gt;Probably can&apos;t use nano time, it wraps around too frequently.&lt;/p&gt;</comment>
                            <comment id="13017140" author="yuzhihong@gmail.com" created="Thu, 7 Apr 2011 20:41:43 +0000"  >&lt;p&gt;From &lt;a href=&quot;http://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html#nanoTime%28%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html#nanoTime%28%29&lt;/a&gt; :&lt;br/&gt;
Differences in successive calls that span greater than approximately 292 years (263  nanoseconds) will not accurately compute elapsed time due to numerical overflow. &lt;/p&gt;</comment>
                            <comment id="13017141" author="tlipcon" created="Thu, 7 Apr 2011 20:44:46 +0000"  >&lt;p&gt;more importantly, nanotime is elapsed time since some arbitrary system-local reference point, and has no meaning on an absolute scale.&lt;/p&gt;</comment>
                            <comment id="13017145" author="yuzhihong@gmail.com" created="Thu, 7 Apr 2011 21:02:08 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	  &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; l = &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.nanoTime();
	  &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; l2 = &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Looking at the values of l (1302209826865074000) and l2 (1302209826865), nanoTime is aligned with time in millis.&lt;br/&gt;
Assuming nano and milli timestamps correlate, we can devise (correction) mechanism in master and region servers such that (corrected) nano timestamp reflects the actual millisecond timestamp.&lt;/p&gt;</comment>
                            <comment id="13017148" author="streamy" created="Thu, 7 Apr 2011 21:09:15 +0000"  >&lt;p&gt;I think this would be a hacky non-solution, regardless of whether it&apos;s epoch nanos or not.&lt;/p&gt;</comment>
                            <comment id="13667737" author="xieliang007" created="Mon, 27 May 2013 12:54:20 +0000"  >&lt;p&gt;We(XiaoMi) fixed this issue with introducing a ScanDeleteTrackerWithMVCC.&lt;br/&gt;
My workmate &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fenghh&quot; class=&quot;user-hover&quot; rel=&quot;fenghh&quot;&gt;Honghua Feng&lt;/a&gt; will upload a patch soon.&lt;/p&gt;</comment>
                            <comment id="13678992" author="xieliang007" created="Sun, 9 Jun 2013 10:08:55 +0000"  >&lt;p&gt;Please refer to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8721&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-8721&lt;/a&gt; for our fix&lt;/p&gt;</comment>
                            <comment id="13825164" author="heliangliang" created="Mon, 18 Nov 2013 08:08:44 +0000"  >&lt;p&gt;Also encountered similar problem. What about this solution?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class IncrementingWallTimeEnvironmentEdge &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; EnvironmentEdge {
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; clock = -1;

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; IncrementingWallTimeEnvironmentEdge() {
  }

  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; currentTimeMillis() {
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; wallTime = &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis() &amp;lt;&amp;lt; 10; &lt;span class=&quot;code-comment&quot;&gt;// ~us, or any arbitrary scaling factor
&lt;/span&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (clock &amp;lt; wallTime) {
          clock = wallTime;
        }
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; clock++;
    }
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This would solve this problem and guarantee the timestamp aligned with the wall time clock in milliseconds as long as we set the scaling factor to a larger enough number (i.e. make sure the speed of logical clock is slower than System.currentTimeMillis()). Shift factor from 10 ~20 (1M-1G qps) is proper value for current server configuration which also will not introduce wrapping around concern (584M ~ 0.57M year).&lt;/p&gt;</comment>
                            <comment id="13829776" author="stack" created="Fri, 22 Nov 2013 08:02:28 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=heliangliang&quot; class=&quot;user-hover&quot; rel=&quot;heliangliang&quot;&gt;He Liangliang&lt;/a&gt; I like this notion (It is related a bit to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8927&quot; title=&quot;Use nano time instead of mili time everywhere&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8927&quot;&gt;HBASE-8927&lt;/a&gt;).  The call to currentTimeMillis is done frequently.  I think we&apos;d combine this change with an attempt at removing as many calls to currentTimeMillis as possible.  We might replace the currentTimeMillis calls that are for tiiming with nanotime calls instead and use this new class for Cell version).&lt;/p&gt;</comment>
                            <comment id="15656659" author="gfeng" created="Fri, 11 Nov 2016 09:56:25 +0000"  >&lt;p&gt;It happened in HBase 1.2.3. My code is &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Delete del = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete(row.getBytes());
table.delete(del);

List&amp;lt;Put&amp;gt; puts = myPuts();
table.put(puts);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Most of time worked fine. But sometimes the data in HBase went crazy. So I don&apos;t trust the data  stored.&lt;/p&gt;</comment>
                            <comment id="15657608" author="stack" created="Fri, 11 Nov 2016 17:34:00 +0000"  >&lt;p&gt;Please open a new issue &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gfeng&quot; class=&quot;user-hover&quot; rel=&quot;gfeng&quot;&gt;gfeng&lt;/a&gt; This one is a long time closed. World has changed a bunch since this issue too so probably different cause. Thanks.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12657206">HBASE-8927</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12976049">HBASE-15968</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12461075">HBASE-2406</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12436808" name="hbase-2256.patch" size="3796" author="clint.morgan" created="Wed, 24 Feb 2010 03:02:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 24 Feb 2010 03:05:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26227</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02e07:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11870</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>