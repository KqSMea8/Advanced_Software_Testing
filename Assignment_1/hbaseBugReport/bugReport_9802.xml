<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:07:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9802/HBASE-9802.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9802] A new failover test framework for HBase</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9802</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently HBase uses ChaosMonkey for IT test and fault injection. It will restart regionserver, force balancer and perform other actions randomly and periodically. However, we need a more extensible and full-featured framework for our failover test and we find ChaosMonkey cant&apos; suit our needs since it has the following drawbacks.&lt;/p&gt;

&lt;p&gt;1) Only process-level actions can be simulated, not support machine-level/hardware-level/network-level actions.&lt;br/&gt;
2) No data validation before and after the test, the fatal bugs such as that can cause data inconsistent may be overlook.&lt;br/&gt;
3) When failure occurs, we can&apos;t repro the problem and hard to figure out the reason.&lt;/p&gt;

&lt;p&gt;Therefore, we have developed a new framework to satisfy the need of failover test. We extended ChaosMonkey and implement the function to validate data and to replay failed actions. Here are the features we add.&lt;/p&gt;

&lt;p&gt;1) Policy/Task/Action abstraction, seperating Task from Policy and Action makes it easier to manage and replay a set of actions.&lt;br/&gt;
2) Make action configurable. We have implemented some actions to cause machine failure and defined the same interface as original actions.&lt;br/&gt;
3) We should validate the date consistent before and after failover test to ensure the availability and data correctness.&lt;br/&gt;
4) After performing a set of actions, we also check the consistency of table as well.&lt;br/&gt;
5) The set of actions that caused test failure can be replayed, and the reproducibility of actions can help fixing the exposed bugs.&lt;/p&gt;

&lt;p&gt;Our team has developed this framework and run for a while. Some bugs were exposed and fixed by running this test framework. Moreover, we have a monitor program which shows the progress of failover test and make sure our cluster is as stable as we want. Now we are trying to make it more general and will opensource it later.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12674479">HBASE-9802</key>
            <summary>A new failover test framework for HBase</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="tobe">chendihao</assignee>
                                    <reporter username="tobe">chendihao</reporter>
                        <labels>
                    </labels>
                <created>Fri, 18 Oct 2013 10:39:54 +0000</created>
                <updated>Wed, 16 Nov 2016 22:30:55 +0000</updated>
                                            <version>0.94.3</version>
                                                    <component>test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>15</watches>
                                                                <comments>
                            <comment id="13799098" author="stevel@apache.org" created="Fri, 18 Oct 2013 13:41:05 +0000"  >&lt;p&gt;This sounds interesting and potentially very useful beyond just HBase. Hadoop YARN applications are the obvious target, as they need to be written to expect failure, and if they don&apos;t get tested, well, they won&apos;t work. I ended up doing some basics of this with ssh and reboot operations, but I really wanted something that could talk to an open WRT base station and actually generate real network partitions, rather than just simulations. &lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Accumulo has something similar, though I&apos;ve not seen it&lt;/li&gt;
	&lt;li&gt;would it be possible to make this more generic? Even if starts off in HBase, it could be good to have the option of branching off into its own project -and to allow people downstream to use it even earlier.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I&apos;d propose making the core test framework a module that could be picked up and used downstream, precisely to get that cross-application testing&lt;/p&gt;</comment>
                            <comment id="13799108" author="elserj" created="Fri, 18 Oct 2013 13:55:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;Accumulo has something similar, though I&apos;ve not seen it&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Accumulo&apos;s &quot;continuous ingest&quot; test harness does satisfy the data validation requirement (IIRC, the data ingest is a giant linked list and validation occurs over the traversal of that list, making sure that we aren&apos;t missing any pointers). However, figuring out what happened in the case of failure can still be rather onerous, coalescing all the logs by hand (after figuring out which logs to look at) to get a picture of what happened.&lt;/p&gt;

&lt;p&gt;Failure happens at the process level as well (pkill of processes at some interval). Being able to do heinous things like drop an entire rack (switch failure) would definitely be something worthwhile for Accumulo to also pick up (when running said tests over enough nodes). I&apos;m excited to see what you all have made.&lt;/p&gt;</comment>
                            <comment id="13799133" author="tobe" created="Fri, 18 Oct 2013 14:26:26 +0000"  >&lt;p&gt;Thanks for paying attention on our work. Now we&apos;re trying to seperate HBase things from this framework and reuse for HDFS, zookeeper and other HA services. Just like what &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stevel%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;stevel@apache.org&quot;&gt;Steve Loughran&lt;/a&gt; has said, we want to make it more generic and just provide an extensible framework, then everyone can implement their actions to inject failures in their system. &lt;/p&gt;

&lt;p&gt;Thank &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=elserj&quot; class=&quot;user-hover&quot; rel=&quot;elserj&quot;&gt;Josh Elser&lt;/a&gt; and we will learn more about Accumulo. Currently we use tc(traffic control) to simulate network delay,  dd to make disk full and other tools to simulate network/disk/cpu/memory failure. It would be helpful if our test servers provide these interfaces to use. I think we can do it generally and share with community.&lt;/p&gt;</comment>
                            <comment id="13799297" author="apurtell" created="Fri, 18 Oct 2013 17:00:25 +0000"  >&lt;p&gt;Sounds great&lt;/p&gt;</comment>
                            <comment id="13799379" author="eclark" created="Fri, 18 Oct 2013 18:28:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;2) No data validation before and after the test, the fatal bugs such as that can cause data inconsistent may be overlook.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you talk a little more about this? Pretty much all of the IT tests verify that the data written is present and consistent.  For example Big Linked List Writes a circular linked list of 25 million links.  It then check to verify that all of the links are there before starting another iteration.  The bulk load test does about the same; Test Load and Verify as well.&lt;/p&gt;</comment>
                            <comment id="13800324" author="xieliang007" created="Mon, 21 Oct 2013 03:03:59 +0000"  >&lt;p&gt;Dihao, you can assign this jira to yourself&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13800475" author="tobe" created="Mon, 21 Oct 2013 08:50:08 +0000"  >&lt;p&gt;We don&apos;t use IT test a lot and think it&apos;s less aggressive. As &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; said, the class IntegrationTestBigLinkedListWithChaosMonkey may have verified data, but we treat this framework as a external tool. We impl a DataValidateTool to randomly read/put/delete data(simulate a real client), then read the value from HBase and compared with the expected value which is stored in memory and reliable. It&apos;s an easy way for us to validate data whenever we want(before/during/after failover test), and ensure the availability and data correctness.&lt;/p&gt;</comment>
                            <comment id="13801353" author="enis" created="Tue, 22 Oct 2013 00:28:10 +0000"  >&lt;p&gt;Sounds interesting, but some of the listed items are already design points in current CM.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;1) Only process-level actions can be simulated, not support machine-level/hardware-level/network-level actions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Action class is not specific to process. HW actions can easily be implemented as subclasses. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;2) No data validation before and after the test, the fatal bugs such as that can cause data inconsistent may be overlook.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think it is not the duty of the CM to verify the data, since verification of the data is test specific. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;3) When failure occurs, we can&apos;t repro the problem and hard to figure out the reason.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed. There has been some discussions for choosing a seed for random actions, so that the actions can be replayed. Also we can do a replay log. &lt;/p&gt;

&lt;p&gt;Would love to see a patch. &lt;/p&gt;</comment>
                            <comment id="13810009" author="tobe" created="Thu, 31 Oct 2013 07:50:37 +0000"  >&lt;p&gt;From now on, We have found some tools to simulate the HW actions. The servers we want to test should provide an interface for us to call them(maybe ssh or http server to accept our requests). I just put out the list and welcome to any suggestions.&lt;/p&gt;

&lt;p&gt;Network Delay: Use tc like `tc qdisc add dev eth0 root netem delay 1000ms` to set network delay or recover.&lt;br/&gt;
Network Unavailable: Use iptable to block the specific port, like `iptables -A OUTPUT -p tcp --dport 3306 -j DROP `.&lt;br/&gt;
Network Bandwidth Limit: Use tc like `tc qdisc add dev eth0 root tbf rate 5800kbit latency 50ms burst 1540` to limit the bandwidth.&lt;br/&gt;
Disk Full: Use dd to create a really large file to fill up the disk, like `dd if=/dev/zero of=/$path/tst.img bs=1M count=20K `.&lt;br/&gt;
Disk Failure: Maybe use fiu-ctrl or `echo offline &amp;gt; /sys/block/sda/device/state`(not test yet).&lt;br/&gt;
Disk Slow: Use fio to write or read a lot making the disk under stress.&lt;br/&gt;
Memory Limit: Impl a program from &lt;a href=&quot;http://minuteware.net/simulating-high-memory-usage-in-linux/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://minuteware.net/simulating-high-memory-usage-in-linux/&lt;/a&gt;.&lt;br/&gt;
CPU Limit: Use cpulimit from &lt;a href=&quot;https://github.com/opsengine/cpulimit&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/opsengine/cpulimit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Although these tools can run individually, we have a plan to integrate them as a failure-injection system for Linux. If it&apos;s done, the failover test framework can call the failure periodically. But in our situation, the client running failover framework can&apos;t ssh to the server directly(because of anything about security). We are thinking to impl a http server which accepts the requests and call the failures in the test machine.&lt;/p&gt;</comment>
                            <comment id="13810871" author="tlipcon" created="Thu, 31 Oct 2013 23:59:45 +0000"  >&lt;p&gt;Sounds similar to the &quot;gremlins&quot; project I hacked together a few years ago: &lt;a href=&quot;http://github.com/toddlipcon/gremlins&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/toddlipcon/gremlins&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m sure yours will be more extensive (gremlins was a quick hack), but worth checking out the above for some ideas.&lt;/p&gt;</comment>
                            <comment id="13810948" author="tobe" created="Fri, 1 Nov 2013 01:54:42 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tlipcon&quot; class=&quot;user-hover&quot; rel=&quot;tlipcon&quot;&gt;Todd Lipcon&lt;/a&gt; That&apos;s really really helpful! Nice to see your project and we will look deep at it. Thanks again &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  &lt;/p&gt;</comment>
                            <comment id="15671879" author="esteban" created="Wed, 16 Nov 2016 22:30:55 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tobe&quot; class=&quot;user-hover&quot; rel=&quot;tobe&quot;&gt;chendihao&lt;/a&gt; do you still have plans to contribute this back?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 18 Oct 2013 13:41:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>354101</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1p1rr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>354393</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>test failover ChaosMonkey </customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                </customfields>
    </item>
</channel>
</rss>