<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:45:55 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-615/HBASE-615.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-615] Region balancer oscillates during cluster startup</title>
                <link>https://issues.apache.org/jira/browse/HBASE-615</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;When starting a cluster with four region servers and a large table (49 regions) (+root +meta) = 51 total regions, the region balancer oscillates for a very long time and does not seem to reach a steady state.&lt;/p&gt;

&lt;p&gt;Additionally, for whatever reason, it seems reluctant to assign regions to the first of four region servers, which may be the root cause. In my test, the first server had 10 regions assigned, the second and fourth had 13 regions assigned, and the master would continually assign and deassign 2 regions to the third server, which oscillated between 13 and 15 regions.  If it assigned the two fluctuating regions to the first server, it would achieve the best balance possible: 12, 13, 13, 13.&lt;/p&gt;

&lt;p&gt;After 20 minutes, it had not stopped oscillating. An application trying to work against this cluster would run very slowly as it would be continually re-finding the two regions in flux.&lt;/p&gt;

&lt;p&gt;When the table was being created, regions were nicely balanced. On restart, however, it just would not settle down.&lt;/p&gt;

&lt;p&gt;Perhaps the balancer should set a target number of regions for each server which when the server achieved +/- 1 regions, the rebalancer would not try to change unless the number of regions changed.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12395373">HBASE-615</key>
            <summary>Region balancer oscillates during cluster startup</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanduxbury">Bryan Duxbury</assignee>
                                    <reporter username="jimk">Jim Kellerman</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 May 2008 01:33:13 +0000</created>
                <updated>Fri, 22 Aug 2008 21:13:15 +0000</updated>
                            <resolved>Thu, 19 Jun 2008 16:30:41 +0000</resolved>
                                    <version>0.2.0</version>
                                    <fixVersion>0.2.0</fixVersion>
                                    <component>master</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12599021" author="bryanduxbury" created="Thu, 22 May 2008 14:11:19 +0000"  >&lt;p&gt;There&apos;s two ways this could go. Either we can fix it by widening the margin by which you have to be &quot;over&quot; the load average before we start rebalancing region assignments, or we have to redo this code to be more sensitive to the load as it is being computed on the assignment side of things. &lt;/p&gt;

&lt;p&gt;I&apos;ll do the first no matter what as a test because it will be very simple. However, if the problem is that the definitions of &quot;overloaded&quot; from the perspective of load reported by the regionserver (this is some combo of regions and requests right now, yes?) and the math done by the rebalancing code are inherently different, then we&apos;ll need to either make the existing load balancing on assignment dumber or the rebalancing smarter. In the long run, we&apos;re definitely going to want to do the latter, but it requires us to start tracking requests and anything else that goes into the balancing computation at the region level, as well as actually reporting that information when the workers check in with their short list of reassignable regions. That way, when we&apos;re deciding how many regions to unassign, we can make informed decisions, rather than just trying to equalize averages.&lt;/p&gt;
</comment>
                            <comment id="12599022" author="bryanduxbury" created="Thu, 22 May 2008 14:12:52 +0000"  >&lt;p&gt;Here&apos;s a patch for the easiest of the ideas. Jim, can you apply this and try it out with your 51-region table?&lt;/p&gt;</comment>
                            <comment id="12599225" author="jimk" created="Thu, 22 May 2008 22:35:50 +0000"  >&lt;p&gt;Well now it oscillates moving three regions around. There are 40 regions including root and meta, 4 region servers, but the master refuses to give more regions to the region server hosting the meta region. It has 4 regions and the rest have 11, 12 or 13&lt;/p&gt;</comment>
                            <comment id="12604268" author="rafan" created="Wed, 11 Jun 2008 16:43:37 +0000"  >&lt;p&gt;Please correct me if I am wrong or overlook something.&lt;/p&gt;

&lt;p&gt;During startup, META will be requested more than other regions. Therefore,&lt;br/&gt;
the RegionServer that serves META will be considered more &quot;loaded&quot; than&lt;br/&gt;
others. So, we tends not to assign more regions to that one. However,&lt;br/&gt;
our rebalance algo currently considers only # of loaded regions as the &quot;load&quot;&lt;br/&gt;
for region servers. That&apos;s the cause of oscillation at startup.&lt;/p&gt;

&lt;p&gt;I&apos;m thinking of the possibility that during startup, we just use assign&lt;br/&gt;
evenly to all region servers. Once this is stabilized, we start to consider&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;of requests as part of the server load. Moreover, the &quot;# of requests&quot; here&lt;br/&gt;
should be calculated from a period of time, otherwise, we may moving regions&lt;br/&gt;
just because some spikes.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;just my 2 cents.&lt;/p&gt;</comment>
                            <comment id="12606077" author="jimk" created="Wed, 18 Jun 2008 20:26:08 +0000"  >&lt;p&gt;&amp;gt; Rong-En Fan - 11/Jun/08 09:43 AM&lt;br/&gt;
&amp;gt; Please correct me if I am wrong or overlook something.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; During startup, META will be requested more than other regions. Therefore,&lt;br/&gt;
&amp;gt; the RegionServer that serves META will be considered more &quot;loaded&quot; than&lt;br/&gt;
&amp;gt; others. So, we tends not to assign more regions to that one. However,&lt;br/&gt;
&amp;gt; our rebalance algo currently considers only # of loaded regions as the &quot;load&quot;&lt;br/&gt;
&amp;gt; for region servers. That&apos;s the cause of oscillation at startup.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; I&apos;m thinking of the possibility that during startup, we just use assign&lt;br/&gt;
&amp;gt; evenly to all region servers. Once this is stabilized, we start to consider&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;   1. of requests as part of the server load. Moreover, the &quot;# of requests&quot; here&lt;br/&gt;
&amp;gt;       should be calculated from a period of time, otherwise, we may moving regions&lt;br/&gt;
&amp;gt;       just because some spikes.&lt;/p&gt;

&lt;p&gt;You are absolutely correct. During startup, the server hosting the meta region gets all the requests,&lt;br/&gt;
so its one region gets multiplied by the number of requests giving a &quot;load&quot; that is far greater than all&lt;br/&gt;
the other servers which are getting no requests and consequently their &quot;load&quot; == number of regions&lt;br/&gt;
they are serving.&lt;/p&gt;

&lt;p&gt;Should be a fairly easy fix to ignore requests during startup.&lt;/p&gt;

&lt;p&gt;BTW, I verified this by changing HServerLoad.getLoad() to just return the number of regions. The&lt;br/&gt;
cluster had all regions on-line within a couple of minutes and they were balanced. When the&lt;br/&gt;
number of requests was factored in during startup, the cluster did not achieve a steady state&lt;br/&gt;
for 1/2 hour (after which I gave up).&lt;/p&gt;

&lt;p&gt;just my 2 cents.&lt;/p&gt;</comment>
                            <comment id="12606110" author="bryanduxbury" created="Wed, 18 Jun 2008 22:02:54 +0000"  >&lt;p&gt;Should we just disable factoring in requests in a region server&apos;s load for the moment? It might lead to a worse distribution of regions, but it might also make no difference, if on average all regions are equally busy, which would be the case if you&apos;re running big time map/reduce jobs. If you have hot rows/regions, then this could hurt you, but it&apos;s hard to say by how much.&lt;/p&gt;</comment>
                            <comment id="12606120" author="stack" created="Wed, 18 Jun 2008 22:29:48 +0000"  >&lt;p&gt;Would that mean no balancing?  Or just that balancing would be every server has ~ same number of regions?  If latter, lets do that for now.  It would still be massive improvement over what we have in 0.1 branch.   We can make a new issue for making balancing code consider loading.&lt;/p&gt;</comment>
                            <comment id="12606227" author="rafan" created="Thu, 19 Jun 2008 02:51:59 +0000"  >&lt;p&gt;I believe Bryan is saying the latter way.&lt;/p&gt;</comment>
                            <comment id="12606410" author="bryanduxbury" created="Thu, 19 Jun 2008 15:07:04 +0000"  >&lt;p&gt;Here&apos;s a patch that removes the number of requests from the load considerations. It passes unit tests (except TestMetaUtils, which times out, but appears unrelated). &lt;/p&gt;

&lt;p&gt;Jim, can you test this on your cluster and see if it reduces oscillation?&lt;/p&gt;</comment>
                            <comment id="12606414" author="rafan" created="Thu, 19 Jun 2008 15:17:52 +0000"  >&lt;p&gt;I actually have the same patch applied locally, the cluster will start in a balance state&lt;br/&gt;
within few minutes.&lt;/p&gt;</comment>
                            <comment id="12606438" author="jimk" created="Thu, 19 Jun 2008 16:24:09 +0000"  >&lt;p&gt;I had applied a similar change to my cluster and and it worked just fine. Reviewed patch. +1&lt;/p&gt;</comment>
                            <comment id="12606442" author="bryanduxbury" created="Thu, 19 Jun 2008 16:30:41 +0000"  >&lt;p&gt;I just committed this.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12396088">HBASE-627</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12385607">HBASE-63</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12382565" name="615-lite.patch" size="1022" author="bryanduxbury" created="Thu, 22 May 2008 14:12:52 +0000"/>
                            <attachment id="12384299" name="615-v2.patch" size="1122" author="bryanduxbury" created="Thu, 19 Jun 2008 15:07:04 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 22 May 2008 14:11:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25293</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 27 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h8e7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98622</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>