<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:51:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1183/HBASE-1183.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1183] New MR splitting algorithm and other new features need a way to split a key range in N chunks</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1183</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;For &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1172&quot; title=&quot;Modify TableInputFormat splitting algorithm to allow any number of mappers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1172&quot;&gt;&lt;del&gt;HBASE-1172&lt;/del&gt;&lt;/a&gt; and other functionality coming soon, we need to be able to take a [start,stop) range and divide it into chunks.&lt;/p&gt;

&lt;p&gt;For example, we have 10 regions but want to run 30 maps.  We need to divide each region into three key ranges for the start/stop of each scanner.&lt;/p&gt;

&lt;p&gt;Implementing using java.math.BigInteger&lt;/p&gt;

&lt;p&gt;Will also include a couple additional helpers in Bytes to make life easy.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12413949">HBASE-1183</key>
            <summary>New MR splitting algorithm and other new features need a way to split a key range in N chunks</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="streamy">Jonathan Gray</assignee>
                                    <reporter username="streamy">Jonathan Gray</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Feb 2009 22:07:33 +0000</created>
                <updated>Thu, 2 May 2013 02:29:20 +0000</updated>
                            <resolved>Mon, 27 Apr 2009 18:06:16 +0000</resolved>
                                                    <fixVersion>0.20.0</fixVersion>
                                    <component>util</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12670157" author="streamy" created="Tue, 3 Feb 2009 22:52:08 +0000"  >&lt;p&gt;Introduces 5 new functions to Bytes util class:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public static byte [][] split(final byte [] a, final byte [] b, final int num)&lt;/li&gt;
	&lt;li&gt;public static byte [] head(final byte [] a, final int length)&lt;/li&gt;
	&lt;li&gt;public static byte [] tail(final byte [] a, final int length)&lt;/li&gt;
	&lt;li&gt;public static byte [] padHead(final byte [] a, final int length)&lt;/li&gt;
	&lt;li&gt;public static byte [] padTail(final byte [] a, final int length)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;head/tail are certainly useful and generic.  Not sure we have a need for the padHead/padTail functions but it&apos;s used for splitting (start/stop need to be same length for BigInteger and am also prepending a 0 to both to ensure they are not intepreted as negative numbers).&lt;/p&gt;</comment>
                            <comment id="12670158" author="streamy" created="Tue, 3 Feb 2009 22:56:22 +0000"  >&lt;p&gt;Missing one line of javadoc.  Patch applies against 0.19 branch and 0.20 trunk.&lt;/p&gt;</comment>
                            <comment id="12670167" author="streamy" created="Tue, 3 Feb 2009 23:15:10 +0000"  >&lt;p&gt;Fixed bug related to the prepending and then stripping of a 0 byte from the beginning of keys.  We do this because BigInteger is signed and this ensures all values are positive when turned into BIs.  Just need to check whether there is still an extra 0 in front of the midkeys.&lt;/p&gt;</comment>
                            <comment id="12670261" author="streamy" created="Wed, 4 Feb 2009 06:52:06 +0000"  >&lt;p&gt;Another fix for case when you have leading 0s in the original start or stop rows.  Rather than preprending a 0, we prepend byte[]&lt;/p&gt;
{1,0}
&lt;p&gt; and then remove at least the 1 at the end.  If second byte is a zero, we drop it, otherwise keep it.&lt;/p&gt;

&lt;p&gt;This definitely needs a solid unit test.  Will post a unit test tomorrow.&lt;/p&gt;</comment>
                            <comment id="12676772" author="streamy" created="Wed, 25 Feb 2009 20:47:21 +0000"  >&lt;p&gt;Fix for 0.20.0&lt;/p&gt;</comment>
                            <comment id="12702592" author="stack" created="Fri, 24 Apr 2009 22:41:28 +0000"  >&lt;p&gt;Marking patch available so attached patch gets some attention.&lt;/p&gt;</comment>
                            <comment id="12702650" author="stack" created="Sat, 25 Apr 2009 05:04:57 +0000"  >&lt;p&gt;Jon&apos;ey, patch looks good, but how about a unit test if only to demo how useful your fancy new BigInteger doohickey is?  I can help... or, since we now have a TestBytes class, it should be super easy: testSplit....&lt;/p&gt;</comment>
                            <comment id="12703249" author="stack" created="Mon, 27 Apr 2009 18:06:16 +0000"  >&lt;p&gt;Committed (after adding unit tests).  Added link in javadoc from the util.Keying class since fellas interested in Keying will be happy to learn of split.  Thanks for the patch Jon.&lt;/p&gt;</comment>
                            <comment id="13131250" author="nspiegelberg" created="Thu, 20 Oct 2011 01:20:15 +0000"  >&lt;p&gt;@jgray : just wondering what the &lt;/p&gt;
{1,0}
&lt;p&gt; prepend in split() algorithm fixed?  Looks like any integer conversion problems would be solved by issuing padTail()&lt;/p&gt;</comment>
                            <comment id="13131261" author="streamy" created="Thu, 20 Oct 2011 01:47:17 +0000"  >&lt;p&gt;Wow, really got me thinking back.  I honestly don&apos;t remember exactly why.&lt;/p&gt;

&lt;p&gt;We convert them to BigInteger so we can do:  (stop - start) / numsplits = interval&lt;/p&gt;

&lt;p&gt;Something related to signed/unsigned?  Reading the code it does seem okay.  Good thing I didn&apos;t write a unit test.&lt;/p&gt;

&lt;p&gt;Are you seeing that it&apos;s broken in some way?  I can spend a little more time looking at it if necessary.&lt;/p&gt;</comment>
                            <comment id="13131264" author="streamy" created="Thu, 20 Oct 2011 01:51:40 +0000"  >&lt;p&gt;To clarify, I meant that the code seems like you don&apos;t need to prepend the &lt;/p&gt;
{1,0}
&lt;p&gt; but I have some vague memory of needing it.&lt;/p&gt;</comment>
                            <comment id="13131947" author="nspiegelberg" created="Thu, 20 Oct 2011 19:45:59 +0000"  >&lt;p&gt;@jgray: I saw your comment on the prepend on this JIRA @ 03/Feb/09.  I was looking at the split code to analyze binary split versus hex-string split for the RegionSplitter code.  I thought the &lt;/p&gt;
{1,0}
&lt;p&gt; looked unnecessary since you prepend it to A &amp;amp; B then issue C=A-B.  I just wanted to get clarification in case this is ever refactored, low priority.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12423759">HBASE-1349</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12383340">HBASE-32</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12396591">HBASE-635</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12413701">HBASE-1172</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12399395" name="hbase-1183-v1.patch" size="3410" author="streamy" created="Tue, 3 Feb 2009 22:52:08 +0000"/>
                            <attachment id="12399396" name="hbase-1183-v2.patch" size="3448" author="streamy" created="Tue, 3 Feb 2009 22:56:22 +0000"/>
                            <attachment id="12399400" name="hbase-1183-v3.patch" size="3550" author="streamy" created="Tue, 3 Feb 2009 23:15:10 +0000"/>
                            <attachment id="12399428" name="hbase-1183-v4.patch" size="3622" author="streamy" created="Wed, 4 Feb 2009 06:52:06 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 24 Apr 2009 22:41:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32026</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 9 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hbtj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99177</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>