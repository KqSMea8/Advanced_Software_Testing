<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:13:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10403/HBASE-10403.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10403] Simplify offheap cache configuration</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10403</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The BucketCache (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7404&quot; title=&quot;Bucket Cache:A solution about CMS,Heap Fragment and Big Cache on HBASE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7404&quot;&gt;&lt;del&gt;HBASE-7404&lt;/del&gt;&lt;/a&gt;) is a very nice piece of functionality which is hidden behind complex configuration. Enabling it currently requires manual calculation of L1 cache. It&apos;d be nice to make this easier to use and conform better with the existing heap management tools we already have.&lt;/p&gt;

&lt;p&gt;Turning it on currently requires explicitly setting LruBlockCache (L1) instance size and IOEngine (L2) size, making sure that L1 size isn&apos;t too big vs global memstore and total heap. This is further confused by hbase.bucketcache.size accepting a percentage of total heap OR explicit size in MB. Enabling SlabCache is slightly easier in that it just accepts whatever LruBlockCache is provided.&lt;/p&gt;

&lt;p&gt;Turning on BucketCache using off-heap mode could look like:&lt;/p&gt;

&lt;p&gt;hbase-env.sh:&lt;br/&gt;
 Set HBASE_REGIONSERVER_OPTS:&lt;br/&gt;
  -Xmx5000m&lt;br/&gt;
  -XX:MaxDirectMemorySize=15000m&lt;/p&gt;

&lt;p&gt;hbase-site.xml:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;hbase.regionserver.global.memstore.size = 0.7&lt;/li&gt;
	&lt;li&gt;hbase.regionserver.onheap.blockcache.size = 0.1&lt;/li&gt;
	&lt;li&gt;hbase.regionserver.blockcache.impl = BucketCache&lt;/li&gt;
	&lt;li&gt;hbase.bucketcache.ioengine = offheap&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The result being a CombinedCache instance with 500m LruBlockCache + 15000m ByteBufferIOEngine running in direct mode.&lt;/p&gt;

&lt;p&gt;This example does a couple things (mostly for the admin):&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;knows NOT to enable SlabCache&lt;/li&gt;
	&lt;li&gt;s/hfile.block.cache.size/hbase.regionserver.onheap.blockcache.size/&lt;/li&gt;
	&lt;li&gt;maintains the validity of HBaseConfiguration&apos;s existing check that global MemStore + LruBlockCache == 0.8&lt;/li&gt;
	&lt;li&gt;maps &quot;BucketCache&quot; into meaning &quot;a CombinedCache instance with these implementations for L1 and L2.&quot;&lt;/li&gt;
	&lt;li&gt;Figures out appropriate values for hbase.bucketcache.size and hbase.bucketcache.percentage.in.combinedcache&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12690435">HBASE-10403</key>
            <summary>Simplify offheap cache configuration</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="ndimiduk">Nick Dimiduk</assignee>
                                    <reporter username="ndimiduk">Nick Dimiduk</reporter>
                        <labels>
                    </labels>
                <created>Wed, 22 Jan 2014 23:33:30 +0000</created>
                <updated>Wed, 13 Jan 2016 22:10:49 +0000</updated>
                                                            <fixVersion>2.0.0</fixVersion>
                                    <component>io</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                                                            <comments>
                            <comment id="13879460" author="zjushch" created="Thu, 23 Jan 2014 05:41:10 +0000"  >&lt;p&gt;Current configuration is complex indeed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; Could you upload a patch?&lt;br/&gt;
Thus,  I could understand better about the new configuration&lt;/p&gt;</comment>
                            <comment id="13880098" author="ndimiduk" created="Thu, 23 Jan 2014 17:17:04 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjushch&quot; class=&quot;user-hover&quot; rel=&quot;zjushch&quot;&gt;chunhui shen&lt;/a&gt; you noticed &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Here&apos;s a sketch of the direction I&apos;m moving. A couple observation:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the logic in CacheConfig#instantiateBlockCache is pretty convoluted, with the different implementations all configured (or partially so) by the same if block&lt;/li&gt;
	&lt;li&gt;CombinedBlockCache and DoubleBlockCache are actually strategies for implementing a 2-level cache. It would be nice, for instance, for a SlabCache user to take advantage of the CombinedBlockCache strategy.&lt;/li&gt;
	&lt;li&gt;A little cleanup here will let us experiment with other caching strategies. IE, I&apos;d like to try a 3-level cache with different implementations for index blocks (L0), decompressed hot blocks (L1), and compressed cold/speculatively read blocks (L2).&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13880686" author="zjushch" created="Fri, 24 Jan 2014 03:01:23 +0000"  >&lt;p&gt;Patch seems great. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Comments:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;-      lruCache.setVictimCache(bucketCache);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This code is missed when creating LruBlockCache.&lt;br/&gt;
In the method LruBlockCache#create, we should get BucketCache and set it as VictimCache&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (isDirect &amp;amp;&amp;amp; (capacity + 64) &amp;gt; directSize) {&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here we should  use 64*1024*1024 instead of 64?  Using StringUtils#humanReadableInt to print the size would be better.&lt;/p&gt;</comment>
                            <comment id="13880693" author="zjushch" created="Fri, 24 Jan 2014 03:14:21 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;+    conf.setLong(BucketCache.BUCKET_CACHE_SIZE_KEY, bucketCacheSize);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;   
&lt;p&gt; Here should be &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;conf.setFloat(BucketCache.BUCKET_CACHE_SIZE_KEY, combinedPercentage*conf.getFloat(BucketCache.BUCKET_CACHE_SIZE_KEY));&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13881251" author="ndimiduk" created="Fri, 24 Jan 2014 18:24:49 +0000"  >&lt;p&gt;Thanks for the comments &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjushch&quot; class=&quot;user-hover&quot; rel=&quot;zjushch&quot;&gt;chunhui shen&lt;/a&gt;! I&apos;ll include them in the next patch. This was just a WIP I wanted to share to see if you liked the direct. So you like disentangling BlockCache instantiation into the static factory methods? Any complaint about the reflection business? Is there need for a more &quot;concrete&quot; factory type class, etc?&lt;/p&gt;

&lt;p&gt;Especially now in light of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6048&quot; title=&quot;Table Scan is failing if offheap cache enabled&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6048&quot;&gt;&lt;del&gt;HBASE-6048&lt;/del&gt;&lt;/a&gt; resurfacing, I think it&apos;s a good idea to decouple the multilevel cache strategies from the implementations they wrap. This will be more invasive, but it would allow a user to use CombinedBlockCache with SlabCache via configuration.&lt;/p&gt;

&lt;p&gt;What do you think about the idea of &quot;named&quot; configurations? IE, including some preset configuration by the name &quot;BucketCache offheap&quot;. Is that too much?&lt;/p&gt;</comment>
                            <comment id="13882146" author="zjushch" created="Sun, 26 Jan 2014 02:24:40 +0000"  >&lt;p&gt;As my personal thought,  I&apos;d like to fix the usage of BlockCache, Two much combination  would confuse the general users.&lt;/p&gt;

&lt;p&gt;In current configuration implementation with patch,  user should config the class name of &quot;hbase.block.cache.impl&quot;. For me, class name is hard to remember. Also setting it as &apos;CombinedBlockCache&apos; or &apos;DoubleBlockCache&apos; seems unfamiliar.&lt;br/&gt;
So, should we use the &apos;type&apos; instead of &apos;class name&apos;, just like Compression algorithm and DataBlockEncoding algorithm.&lt;br/&gt;
For example,&lt;br/&gt;
hbase.block.cache.type=&apos;LruCache&apos;, default value, use LruBlockCache.&lt;br/&gt;
hbase.block.cache.type=&apos;BucketCache&apos;, according to the value of &apos;hbase.bucketcache.ioengine&apos;,  construct the BlockCache.(&apos;heap&apos; or &apos;offheap&apos; use CombinedBlockCache, &apos;file&apos; use BucketCache directly as the L2 cache)&lt;br/&gt;
hbase.block.cache.type=&apos;SlabCache&apos;, use DoubleBlockCache.&lt;/p&gt;


&lt;p&gt;Finally,  I think the patch is quite well now. If we could set an familiar type value for BlockCache instead of detail class name, it will be better if I&apos;m a general user.&lt;/p&gt;

</comment>
                            <comment id="13985218" author="stack" created="Wed, 30 Apr 2014 06:27:08 +0000"  >&lt;p&gt;+1 on notion; especially stuff like a percentage being applied to the XX:MaxDirectMemorySize for BC use.&lt;/p&gt;

&lt;p&gt;We&apos;ll need to make sure the old configs continue to work after instituting these new ones.&lt;/p&gt;

&lt;p&gt;On there being less options, I was going to suggest just drop slab cache? That&apos;d be one less option.  i&apos;ve not looked closely at it but going by Nick blog post numbers, it does more work to get to same place at least when using DoubleBlockCache...and for CombinedBlockCache, BucketCache has more options so lets just concentrate on making it work and easy to use and just let go of SlabCache?  On the other hand, it is looking like there&apos;ll be some more BC&apos; implementations to play with before there will be less (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8894&quot; title=&quot;Forward port compressed l2 cache from 0.89fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8894&quot;&gt;&lt;del&gt;HBASE-8894&lt;/del&gt;&lt;/a&gt; and if we get around to acting on &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt; suggestions regards cache) so we should just deal but let us let go of options that have been superseded.&lt;/p&gt;

&lt;p&gt;Agree w/ &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjushch&quot; class=&quot;user-hover&quot; rel=&quot;zjushch&quot;&gt;chunhui shen&lt;/a&gt; comments that exposing CBC and DBC will only confuse (Strike DBC since you can set up BucketCache to do L1/L2 as DBC does?).&lt;/p&gt;

&lt;p&gt;Maybe have configs:&lt;/p&gt;

&lt;p&gt;hbase.block.cache.l1=LruBlockCache&lt;br/&gt;
hbase.block.cache.l2=BucketCache&lt;br/&gt;
hbase.block.cache.policy=CBC&lt;/p&gt;

&lt;p&gt;... or something like that.&lt;/p&gt;

&lt;p&gt;Thinking on it, even simpler is just have hbase.block.cache.impl and pass LRUBC, or BucketCache, or CBC (they all implement BlockCache interface?)  Add a new class if you want to do a new combination.  Keeps it simple.&lt;/p&gt;

&lt;p&gt;On the patch:&lt;/p&gt;

&lt;p&gt;Looks good. I like the refactorings.  We should refactor that setVictim thing... its awkward.  Hack.&lt;/p&gt;

&lt;p&gt;+1 moving bucket cache configs into bucket cache class.&lt;/p&gt;

&lt;p&gt;Restore the old param below:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param direct true if allocate direct buffer&lt;br/&gt;
+   * @param isDirect true if allocate isDirect buffer&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;(isDirect is a method name, not a param name)&lt;/p&gt;

&lt;p&gt;+1 on moving all the sizing into the class the size applies to.&lt;/p&gt;

&lt;p&gt;Patch is great.  Only thing to decide is what for configs?  We have to support the old.&lt;/p&gt;</comment>
                            <comment id="14061642" author="stack" created="Tue, 15 Jul 2014 04:27:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;Turning it on currently requires explicitly setting LruBlockCache (L1) instance size and IOEngine (L2) size, making sure that L1 size isn&apos;t too big vs global memstore and total heap. This is further confused by hbase.bucketcache.size accepting a percentage of total heap OR explicit size in MB. Enabling SlabCache is slightly easier in that it just accepts whatever LruBlockCache is provided.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;SlabCache is gone as is DoubleBlockCache.  That helps this simplification project.&lt;/p&gt;

&lt;p&gt;If we removed &quot;hbase.bucketcache.combinedcache.enabled&quot;  that would simplify L1+L2 setup a good bit.  LruBlockCache is configured the same whether an L2 or not.  An ioengine and a non-zero bucketcache size enables the bucket cache.  This could serve as a simpler first cut at this JIRA?  Three-tiers of cache and more work separating caching policy classes from block cache implementations can also come in later issues?&lt;/p&gt;
</comment>
                            <comment id="14061648" author="stack" created="Tue, 15 Jul 2014 04:36:29 +0000"  >&lt;p&gt;I think that this is a 2.0.0 rather than a 1.0 effort at this stage.  Marking the issue so.  Even a less audacious change in configs could break existing cache setups unless done right.&lt;/p&gt;

&lt;p&gt;That said, block cache has had a bunch of doc added since, the options have been narrowed so less options to get lost in, and there is more visibility into what is deployed &amp;#8211; sizes, whether L1 and L2 and how they relate &amp;#8211; so this project less critical now.&lt;/p&gt;

&lt;p&gt;Moving out of 0.99.&lt;/p&gt;</comment>
                            <comment id="14119023" author="enis" created="Wed, 3 Sep 2014 00:16:26 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; anything left to do here? &lt;/p&gt;</comment>
                            <comment id="14119025" author="enis" created="Wed, 3 Sep 2014 00:16:49 +0000"  >&lt;p&gt;All subtasks seems closed. &lt;/p&gt;</comment>
                            <comment id="14122279" author="ndimiduk" created="Fri, 5 Sep 2014 02:01:48 +0000"  >&lt;p&gt;Agreed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;: anything left you&apos;d like to see done?&lt;/p&gt;</comment>
                            <comment id="14122319" author="stack" created="Fri, 5 Sep 2014 02:53:10 +0000"  >&lt;p&gt;I think this issue should stay open for 2.0.  We&apos;ve done enough for 1.0.&lt;/p&gt;</comment>
                            <comment id="15097114" author="cartershanklin" created="Wed, 13 Jan 2016 22:10:49 +0000"  >&lt;p&gt;Sorry about the spam, hotkeys going wrong&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12740632">HBASE-11938</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12624830" name="HBASE-10403.0.patch" size="35755" author="ndimiduk" created="Thu, 23 Jan 2014 17:17:04 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12711341">HBASE-11098</subtask>
                            <subtask id="12714268">HBASE-11171</subtask>
                            <subtask id="12720480">HBASE-11323</subtask>
                            <subtask id="12727466">HBASE-11520</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 23 Jan 2014 05:41:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>369387</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            48 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1rnzz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>369690</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>