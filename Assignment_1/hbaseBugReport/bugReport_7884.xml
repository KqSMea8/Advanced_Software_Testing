<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:49:57 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7884/HBASE-7884.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7884] ByteBloomFilter&apos;s performance can be improved by avoiding multiplication when generating hash </title>
                <link>https://issues.apache.org/jira/browse/HBASE-7884</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;ByteBloomFilter&apos;s performance can be optimized by avoiding multiplication operation when generating hash &lt;/p&gt;</description>
                <environment></environment>
        <key id="12633120">HBASE-7884</key>
            <summary>ByteBloomFilter&apos;s performance can be improved by avoiding multiplication when generating hash </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="clockfly">Sean Zhong</assignee>
                                    <reporter username="clockfly">Sean Zhong</reporter>
                        <labels>
                    </labels>
                <created>Wed, 20 Feb 2013 01:54:33 +0000</created>
                <updated>Sat, 23 Mar 2013 04:53:25 +0000</updated>
                            <resolved>Tue, 26 Feb 2013 01:56:59 +0000</resolved>
                                    <version>0.94.6</version>
                    <version>0.95.0</version>
                                    <fixVersion>0.94.6</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                    <component>Performance</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13582258" author="jmspaggi" created="Wed, 20 Feb 2013 15:47:23 +0000"  >&lt;p&gt;Nice one.&lt;/p&gt;

&lt;p&gt;+1.&lt;/p&gt;

&lt;p&gt;This patch seems to be for 0.94. Can you do the same for trunk?&lt;/p&gt;</comment>
                            <comment id="13582722" author="yuzhihong@gmail.com" created="Thu, 21 Feb 2013 00:31:55 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; hashLoc = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.abs((hash1 + i * hash2) % bloomBitSize);
-        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!get(hashLoc, bloomArray, bloomOffset))
+        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; hashLoc = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.abs(compositeHash % bloomBitSize);
+        compositeHash += hash2;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Looks like the original operation was slightly changed: the addition of hash2 should be followed by modulo.&lt;/p&gt;</comment>
                            <comment id="13582767" author="jmspaggi" created="Thu, 21 Feb 2013 01:24:32 +0000"  >&lt;p&gt;No.&lt;/p&gt;

&lt;p&gt;compositeHash is initiated at hash1.&lt;br/&gt;
And At each iteration, composteHash receive hash2. So at each loop, compositeHash = hash1 + i * hash2.&lt;/p&gt;

&lt;p&gt;Initial loop, compositeHash = hash1 = (hash1 + 0 * hash2)&lt;br/&gt;
Loop 2: compositeHash = hash1 + hash2 = (hash1 + 1 * hash2)&lt;br/&gt;
Loop 3: compositeHash = hash1 + hash2 + hash2 = (hash1 + 3 * hash2)&lt;/p&gt;

&lt;p&gt;So composite is exactly the same as what you have in the original operation. No need to apply modulo on the last line.&lt;/p&gt;</comment>
                            <comment id="13582768" author="yuzhihong@gmail.com" created="Thu, 21 Feb 2013 01:29:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;hash1 + hash2 + hash2 = (hash1 + 3 * hash2)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I guess you meant &apos;hash1 + hash2 + hash2 = (hash1 + 2 * hash2)&apos;&lt;/p&gt;</comment>
                            <comment id="13582779" author="jmspaggi" created="Thu, 21 Feb 2013 01:38:37 +0000"  >&lt;p&gt;Yep, it should have been:&lt;/p&gt;

&lt;p&gt;Initial loop, compositeHash = hash1 = (hash1 + 0 * hash2)&lt;br/&gt;
Loop 2: compositeHash = hash1 + hash2 = (hash1 + 1 * hash2)&lt;br/&gt;
Loop 3: compositeHash = hash1 + hash2 + hash2 = (hash1 + 2 * hash2)&lt;/p&gt;</comment>
                            <comment id="13582792" author="clockfly" created="Thu, 21 Feb 2013 01:50:16 +0000"  >&lt;p&gt;Hi Ted,&lt;/p&gt;

&lt;p&gt;The hash logic is equilvalent.&lt;/p&gt;

&lt;p&gt; for (int i = 0; i &amp;lt; hashCount; i++) &lt;/p&gt;
{
        long hashLoc = Math.abs((hash1 + i * hash2) % bloomBitSize);
 }

&lt;p&gt;is equilvalent as&lt;/p&gt;

&lt;p&gt;      int compositeHash = hash1;&lt;br/&gt;
       for (int i = 0; i &amp;lt; hashCount; i++) &lt;/p&gt;
{
         int hashLoc = Math.abs(compositeHash % bloomBitSize);
         compositeHash += hash2;
       }</comment>
                            <comment id="13582793" author="clockfly" created="Thu, 21 Feb 2013 01:50:57 +0000"  >&lt;p&gt;add patch for trunk&lt;/p&gt;</comment>
                            <comment id="13582878" author="hadoopqa" created="Thu, 21 Feb 2013 03:40:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12570247/bloom_optimization_trunk_patch.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12570247/bloom_optimization_trunk_patch.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 7 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4478//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13583729" author="yuzhihong@gmail.com" created="Fri, 22 Feb 2013 00:20:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nspiegelberg&quot; class=&quot;user-hover&quot; rel=&quot;nspiegelberg&quot;&gt;Nicolas Spiegelberg&lt;/a&gt;:&lt;br/&gt;
Can you take a look at the patch ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13583763" author="nspiegelberg" created="Fri, 22 Feb 2013 00:53:34 +0000"  >&lt;p&gt;clockfly: have you done perf comparisons?  When I looked into combinatorial hashing, I found that the Hash function strongly dominated perf and clarity was necessary everywhere else.  On a related note: &lt;a href=&quot;http://stackoverflow.com/questions/1168451/is-shifting-bits-faster-than-multiplying-and-dividing-in-java-net&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/1168451/is-shifting-bits-faster-than-multiplying-and-dividing-in-java-net&lt;/a&gt; .  I&apos;m all for bit-math; but I have an embedded background, so x |= ~y; isn&apos;t complicated for me but may be for people looking through code @ 2am to fix a bug.&lt;/p&gt;</comment>
                            <comment id="13584972" author="clockfly" created="Sat, 23 Feb 2013 02:54:42 +0000"  >&lt;p&gt;Hi Nicolas,&lt;/p&gt;

&lt;p&gt;Please check the attached performacne report.&lt;/p&gt;</comment>
                            <comment id="13584975" author="hadoopqa" created="Sat, 23 Feb 2013 03:01:57 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12570595/hbase-7884-performance-report.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12570595/hbase-7884-performance-report.pdf&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4510//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4510//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13584978" author="jmspaggi" created="Sat, 23 Feb 2013 03:08:19 +0000"  >&lt;p&gt;So 20% of 50% is still a 10% performance increase at the end. I will say it&apos;s significant enought to consider it.&lt;/p&gt;</comment>
                            <comment id="13585169" author="yuzhihong@gmail.com" created="Sat, 23 Feb 2013 17:13:52 +0000"  >&lt;p&gt;I think the improvement is significant.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=clockfly&quot; class=&quot;user-hover&quot; rel=&quot;clockfly&quot;&gt;Sean Zhong&lt;/a&gt;:&lt;br/&gt;
Mind attaching patch for 0.94 ?&lt;/p&gt;</comment>
                            <comment id="13585193" author="nspiegelberg" created="Sat, 23 Feb 2013 18:57:52 +0000"  >&lt;p&gt;clockfly: thanks for posting the perf numbers!  Those numbers look promising and should definitely be used if correct.  I &quot;think&quot; I added that perf test as a rough estimate.  Mostly to check out the gains from adding combinatorial hashing.  Point being, I&apos;m not sure how useful it will be as a microbenchmark for a number of reasons:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/504103/how-do-i-write-a-correct-micro-benchmark-in-java/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/504103/how-do-i-write-a-correct-micro-benchmark-in-java/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m a little out of date on trunk functionality (my company&apos;s on an older branch), but I know the older branch doesn&apos;t have proper microbenchmarking utilities.  I&apos;m sure it would be involved to add a proper microbenchmark suite.  &lt;/p&gt;

&lt;p&gt;An easier solution to test that JVM hotspot warmup and other factors aren&apos;t influencing this microbenchmark is to just major compact a large file (&amp;gt;1GB) and compare.  This is how I did the original benchmarking.  You can either use LoadTestTool or CreateRandomStoreFile to create a large load and just issue a MAJOR_COMPACT on a region.  You should be able to forcibly major compact a single file over and over again for control.  @Ted any idea on an easier solution.&lt;/p&gt;</comment>
                            <comment id="13585275" author="jmspaggi" created="Sun, 24 Feb 2013 03:39:04 +0000"  >&lt;p&gt;If we know exactly how we want to test it, I have a dedicated machine that I&apos;m using for PerformanceTest where I can try that.&lt;/p&gt;

&lt;p&gt;Like we can created a 1GB table with randomWriteTest, activate BloomFilters on it, backup it then run the major compaction 10 times without this patch, and 10 times with this patch, and compare the results?&lt;/p&gt;

&lt;p&gt;How should we do to mesure when the major_compaction is ending? major_compact returns immediatly. We can look at the table status in the UI every 30 seconds but that will use some cpu resources...&lt;/p&gt;</comment>
                            <comment id="13585589" author="clockfly" created="Mon, 25 Feb 2013 03:20:03 +0000"  >&lt;p&gt;Hi Nicolas,&lt;/p&gt;


&lt;p&gt;======Test Result=======&lt;br/&gt;
Here is the result of testing using microbenchmark framework &lt;a href=&quot;http://www.ellipticgroup.com/html/benchmarkingArticle.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.ellipticgroup.com/html/benchmarkingArticle.html&lt;/a&gt; (introduction in &lt;a href=&quot;http://www.ibm.com/developerworks/library/j-benchmark2/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.ibm.com/developerworks/library/j-benchmark2/index.html&lt;/a&gt;). This framework will do warnup and exclude the impact of hotspot compilation.&lt;/p&gt;

&lt;p&gt;Before tunning:&lt;br/&gt;
==&lt;br/&gt;
ByteBloomFilter contains() test: first = 1.187 s, mean = 1.156 s (CI deltas: -370.103 us, +547.583 us), sd(standard deviation) = 1.754 ms (CI deltas: -490.688 us, +737.411 us) WARNING: EXECUTION TIMES HAVE EXTREME OUTLIERS, execution times may have serial correlation, SD VALUES MAY BE INACCURATE&lt;/p&gt;

&lt;p&gt;After tunning:&lt;br/&gt;
==&lt;br/&gt;
ByteBloomFilter contains() test: first = 1.006 s, mean = 973.650 ms (CI deltas: -229.513 us, +248.122 us), sd(standard deviation) = 1.333 ms (CI deltas: -205.051 us, +337.328 us) WARNING: execution times have mild outliers, execution times may have serial correlation, SD VALUES MAY BE INACCURATE&lt;/p&gt;

&lt;p&gt;Performance boost: 19%.&lt;/p&gt;

&lt;p&gt;Test code is attached.&lt;/p&gt;</comment>
                            <comment id="13585590" author="clockfly" created="Mon, 25 Feb 2013 03:22:01 +0000"  >&lt;p&gt;Test code for the bloom filter performance.&lt;/p&gt;</comment>
                            <comment id="13585591" author="clockfly" created="Mon, 25 Feb 2013 03:23:54 +0000"  >&lt;p&gt;Test config:&lt;br/&gt;
=============&lt;br/&gt;
test platform: Intel(R) Core(TM)2 CPU 6300  @ 1.86GHz&lt;br/&gt;
JVM: java version &quot;1.6.0_38&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.6.0_38-b05)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (build 20.13-b02, mixed mode)&lt;/p&gt;
</comment>
                            <comment id="13585603" author="clockfly" created="Mon, 25 Feb 2013 03:48:48 +0000"  >&lt;p&gt;I didn&apos;t adopt the method to use major_compact to compare the performance. &lt;/p&gt;

&lt;p&gt;Major compact will call bloom filter &lt;b&gt;builing&lt;/b&gt; when doing merging. This patch doesn&apos;t change the &lt;b&gt;building&lt;/b&gt; process, This patch only impact the bloom filter &lt;b&gt;lookup&lt;/b&gt; performance,  so there will be no performance difference observed for the major compaction.&lt;/p&gt;

&lt;p&gt;Since byteBloomFilter is a standalone utility, so I adopt the method to test its performance standalone, outside of HBase.&lt;/p&gt;</comment>
                            <comment id="13585606" author="clockfly" created="Mon, 25 Feb 2013 03:53:11 +0000"  >&lt;p&gt;Hi Ted, &lt;/p&gt;

&lt;p&gt;the patch for 0.94 is already attached.&lt;/p&gt;

&lt;p&gt;patch for 0.94.6: &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12570054/bloom_performance_tunning.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12570054/bloom_performance_tunning.patch&lt;/a&gt;&lt;br/&gt;
patch for trunk: &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12570247/bloom_optimization_trunk_patch.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12570247/bloom_optimization_trunk_patch.patch&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13586438" author="yuzhihong@gmail.com" created="Mon, 25 Feb 2013 23:13:14 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nspiegelberg&quot; class=&quot;user-hover&quot; rel=&quot;nspiegelberg&quot;&gt;Nicolas Spiegelberg&lt;/a&gt;:&lt;br/&gt;
What do you think of response from clockfly ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13586453" author="nspiegelberg" created="Mon, 25 Feb 2013 23:22:40 +0000"  >&lt;p&gt;clockfly: thanks for doing the second test to confirm hotspot warmup would not fix this issue.  I&apos;m disappointed in hotspot optimization since this is an obvious GCC optimization, but that doesn&apos;t fix this issue.  Sounds like we should commit.&lt;/p&gt;</comment>
                            <comment id="13586465" author="yuzhihong@gmail.com" created="Mon, 25 Feb 2013 23:37:02 +0000"  >&lt;p&gt;Integrated to trunk.&lt;/p&gt;

&lt;p&gt;Thanks for the patch, clockfly.&lt;/p&gt;

&lt;p&gt;Thanks for the reviews, Nicolas and Jean-Marc.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;:&lt;br/&gt;
Is it Okay to put this in 0.94 ?&lt;/p&gt;</comment>
                            <comment id="13586541" author="hudson" created="Tue, 26 Feb 2013 00:48:22 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3897 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3897/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3897/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7884&quot; title=&quot;ByteBloomFilter&amp;#39;s performance can be improved by avoiding multiplication when generating hash &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7884&quot;&gt;&lt;del&gt;HBASE-7884&lt;/del&gt;&lt;/a&gt; ByteBloomFilter&apos;s performance can be improved by avoiding multiplication when generating hash (clockfly) (Revision 1449962)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/ByteBloomFilter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13586561" author="lhofhansl" created="Tue, 26 Feb 2013 01:07:11 +0000"  >&lt;p&gt;I doubt this will show any real-life improvement (beyond micro benchmarks). But it can&apos;t hurt. +1 for 0.94.&lt;/p&gt;</comment>
                            <comment id="13586617" author="yuzhihong@gmail.com" created="Tue, 26 Feb 2013 01:56:59 +0000"  >&lt;p&gt;Integrated to 0.94 as well.&lt;/p&gt;</comment>
                            <comment id="13586685" author="hudson" created="Tue, 26 Feb 2013 03:16:24 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #859 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/859/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/859/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7884&quot; title=&quot;ByteBloomFilter&amp;#39;s performance can be improved by avoiding multiplication when generating hash &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7884&quot;&gt;&lt;del&gt;HBASE-7884&lt;/del&gt;&lt;/a&gt; ByteBloomFilter&apos;s performance can be improved by avoiding multiplication when generating hash (clockfly) (Revision 1449996)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/ByteBloomFilter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13586735" author="hudson" created="Tue, 26 Feb 2013 04:29:36 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #420 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/420/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/420/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7884&quot; title=&quot;ByteBloomFilter&amp;#39;s performance can be improved by avoiding multiplication when generating hash &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7884&quot;&gt;&lt;del&gt;HBASE-7884&lt;/del&gt;&lt;/a&gt; ByteBloomFilter&apos;s performance can be improved by avoiding multiplication when generating hash (clockfly) (Revision 1449962)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/ByteBloomFilter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13586898" author="hudson" created="Tue, 26 Feb 2013 07:27:00 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #112 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/112/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/112/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7884&quot; title=&quot;ByteBloomFilter&amp;#39;s performance can be improved by avoiding multiplication when generating hash &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7884&quot;&gt;&lt;del&gt;HBASE-7884&lt;/del&gt;&lt;/a&gt; ByteBloomFilter&apos;s performance can be improved by avoiding multiplication when generating hash (clockfly) (Revision 1449996)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/ByteBloomFilter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13593160" author="hudson" created="Tue, 5 Mar 2013 07:52:08 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #12 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/12/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/12/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7884&quot; title=&quot;ByteBloomFilter&amp;#39;s performance can be improved by avoiding multiplication when generating hash &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7884&quot;&gt;&lt;del&gt;HBASE-7884&lt;/del&gt;&lt;/a&gt; ByteBloomFilter&apos;s performance can be improved by avoiding multiplication when generating hash (clockfly) (Revision 1449996)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/util/ByteBloomFilter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12570714" name="TestByteBloom.java" size="1694" author="clockfly" created="Mon, 25 Feb 2013 03:22:01 +0000"/>
                            <attachment id="12570247" name="bloom_optimization_trunk_patch.patch" size="2028" author="clockfly" created="Thu, 21 Feb 2013 01:50:57 +0000"/>
                            <attachment id="12570054" name="bloom_performance_tunning.patch" size="1989" author="clockfly" created="Wed, 20 Feb 2013 01:55:15 +0000"/>
                            <attachment id="12570595" name="hbase-7884-performance-report.pdf" size="29167" author="clockfly" created="Sat, 23 Feb 2013 02:54:42 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 20 Feb 2013 15:47:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>313616</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 41 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1i4bz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>313961</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>