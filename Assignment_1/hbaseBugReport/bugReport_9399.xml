<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:04:06 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9399/HBASE-9399.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9399] Up the memstore flush size</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9399</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;As heap sizes get bigger we are still recommending that users keep their number of regions to a minimum.  This leads to lots of un-used memstore memory.&lt;/p&gt;

&lt;p&gt;For example I have a region server with 48 gigs of ram.  30 gigs are there for the region server.  This with current defaults the global memstore size reserved is 8 gigs.&lt;/p&gt;

&lt;p&gt;The per region memstore size is 128mb right now.  That means that I need 80 regions actively taking writes to reach the global memstore size.  That number is way out of line with what our split policies currently give users.  They are given much fewer regions by default.&lt;/p&gt;

&lt;p&gt;We should up the hbase.hregion.memstore.flush.size size.  Ideally we should auto tune everything.  But until then I think something like 512mb would help a lot with our write throughput on clusters that don&apos;t have several hundred regions per RS.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12666404">HBASE-9399</key>
            <summary>Up the memstore flush size</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="eclark">Elliott Clark</assignee>
                                    <reporter username="eclark">Elliott Clark</reporter>
                        <labels>
                    </labels>
                <created>Fri, 30 Aug 2013 21:36:27 +0000</created>
                <updated>Wed, 1 Oct 2014 20:47:43 +0000</updated>
                            <resolved>Wed, 1 Oct 2014 20:47:43 +0000</resolved>
                                    <version>0.98.0</version>
                    <version>0.96.0</version>
                                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13755221" author="eclark" created="Fri, 30 Aug 2013 22:47:57 +0000"  >&lt;p&gt;My test cluster is pretty slammed right now with testing 0.96.  I&apos;ll try and get some perf numbers sometime next week.&lt;/p&gt;</comment>
                            <comment id="13765867" author="eclark" created="Thu, 12 Sep 2013 20:28:55 +0000"  >&lt;p&gt;We changed the client apis again so I have to change my ycsb.  It will be a second.&lt;/p&gt;</comment>
                            <comment id="13771556" author="anilgupta84" created="Thu, 19 Sep 2013 03:25:03 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; I am also thinking of upping the flush size from 128 mb since i have ~30gb heap. If you have got the update on perf numbers. It would be great if you can share them.&lt;/p&gt;</comment>
                            <comment id="13836346" author="apurtell" created="Mon, 2 Dec 2013 08:14:15 +0000"  >&lt;p&gt;Can try this for 0.98&lt;/p&gt;</comment>
                            <comment id="13849603" author="eclark" created="Mon, 16 Dec 2013 19:10:16 +0000"  >&lt;p&gt;I finally got to try this and upping the memstore flush size to 512mb gave us about a 1% perf gain when running our IT tests.  Nothing huge so we can take it or leave it.&lt;/p&gt;</comment>
                            <comment id="13849635" author="lhofhansl" created="Mon, 16 Dec 2013 19:34:31 +0000"  >&lt;p&gt;I am starting to benchmark the memstore. What I found so far is that (not too surprisingly) a lot of CPU time during an insert is spent in managing the CSLS. Making that larger should have minimal impact (if any). Might get better IO, since we&apos;re flushing larger initial files, even that should be negligible unless we&apos;re IO bound on write.&lt;/p&gt;

&lt;p&gt;For reads I almost want to flush sooner so that the data gets into the more scan friendly block format.&lt;/p&gt;</comment>
                            <comment id="13850125" author="mcorgan" created="Tue, 17 Dec 2013 05:33:31 +0000"  >&lt;p&gt;It could be cool to flush the memstore into the block cache periodically.  The block cache would hold in-memory copies of hfiles, where the blocks are labeled as transient so they don&apos;t get evicted.  Several in-memory hfiles could build up in the block cache before a flush that merges them together while writing to disk (or while writing back to the block cache).  This would reduce the memory footprint of the data by eliminating significant CSLM overhead, and it could be further reduced with block encoding.  It would also let us give a greater % of the memory to the block cache where the eviction algorithm can do better prioritization of what should be evicted.  Maybe some regions can grow to 2GB of transient memstore blocks while other regions are persisted at 64MB.&lt;/p&gt;

&lt;p&gt;(sorry this is out of place on this jira)&lt;/p&gt;</comment>
                            <comment id="13850138" author="stack" created="Tue, 17 Dec 2013 05:52:40 +0000"  >&lt;p&gt;Thanks a nice idea &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mcorgan&quot; class=&quot;user-hover&quot; rel=&quot;mcorgan&quot;&gt;Matt Corgan&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13850147" author="lhofhansl" created="Tue, 17 Dec 2013 06:03:47 +0000"  >&lt;p&gt;More discussion here: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5311&quot; title=&quot;Allow inmemory Memstore compactions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5311&quot;&gt;HBASE-5311&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13850194" author="mcorgan" created="Tue, 17 Dec 2013 07:05:50 +0000"  >&lt;p&gt;oops - yep, i&apos;ve chatted with Todd about this before.  I guess what made me think of it in this context is that we could be flushing the memstore into the block cache rather than into its own fenced off area of memory.  Mixing the memory pools together into a single big pool would provide more fluid auto-tuning, reducing everything down to a unified eviction algorithm.  Perhaps the memstoreLAB blocks could go in as well, and it could be renamed from block cache to block pool.&lt;/p&gt;</comment>
                            <comment id="13856485" author="apurtell" created="Tue, 24 Dec 2013 23:13:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;I finally got to try this and upping the memstore flush size to 512mb gave us about a 1% perf gain when running our IT tests. Nothing huge so we can take it or leave it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, moving out of 0.98&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12685275">HBASE-10191</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 19 Sep 2013 03:25:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>346343</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 51 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1nq2f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>346644</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>