<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:23:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11520/HBASE-11520.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11520] Simplify offheap cache config by removing the confusing &quot;hbase.bucketcache.percentage.in.combinedcache&quot;</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11520</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Remove &quot;hbase.bucketcache.percentage.in.combinedcache&quot;.  It is unnecessary complication of block cache config.  Let L1 config setup be as it is whether a L2 present or not, just set hfile.block.cache.size (not hbase.bucketcache.size * (1.0 - hbase.bucketcache.percentage.in.combinedcache)).  For L2, let hbase.bucketcache.size be the actual size of the bucket cache, not hbase.bucketcache.size * hbase.bucketcache.percentage.in.combinedcache.&lt;/p&gt;

&lt;p&gt;Attached patch removes the config. and updates docs.  Adds tests to confirm configs are as expected whether a CombinedBlockCache deploy or a strict L1+L2 deploy.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12727466">HBASE-11520</key>
            <summary>Simplify offheap cache config by removing the confusing &quot;hbase.bucketcache.percentage.in.combinedcache&quot;</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12690435">HBASE-10403</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Tue, 15 Jul 2014 20:42:57 +0000</created>
                <updated>Thu, 4 Jun 2015 02:23:13 +0000</updated>
                            <resolved>Wed, 16 Jul 2014 06:15:57 +0000</resolved>
                                    <version>0.99.0</version>
                                    <fixVersion>0.99.0</fixVersion>
                    <fixVersion>2.0.0</fixVersion>
                                    <component>io</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="14062627" author="stack" created="Tue, 15 Jul 2014 20:46:49 +0000"  >&lt;p&gt;Patch is big mostly because of doc changes and test code.&lt;/p&gt;</comment>
                            <comment id="14062630" author="stack" created="Tue, 15 Jul 2014 20:47:49 +0000"  >&lt;p&gt;This patch relates to the parent in that it is a less ambitious simplification, something we could get into 1.0 (IMO).  See release note for repercussions.&lt;/p&gt;</comment>
                            <comment id="14062700" author="ndimiduk" created="Tue, 15 Jul 2014 21:47:50 +0000"  >&lt;p&gt;Sorry for the lag boss. This sounds like the right approach, with one caveat that configs just got harder for anyone using onheap BucketCache. I would have thought this a minority, but I think you were saying this is more common that I thought. Will give the patch a proper look this afternoon.&lt;/p&gt;</comment>
                            <comment id="14062722" author="apurtell" created="Tue, 15 Jul 2014 21:54:41 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="14062725" author="enis" created="Tue, 15 Jul 2014 21:57:02 +0000"  >&lt;p&gt;Skimmed the patch. Looks good for branch-1. &lt;/p&gt;</comment>
                            <comment id="14062745" author="stack" created="Tue, 15 Jul 2014 22:08:25 +0000"  >&lt;p&gt;Thanks for taking a look &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;.  v2 has tests for &apos;heap&apos; and &apos;file&apos; added.  Or were you thinking of something else?  If &apos;heap&apos;, yeah, could OOME if we assign too much to onheap bucketcache but that should happen on startup and be pretty plain as to what is going on.&lt;/p&gt;

&lt;p&gt;Chunhui Shen uses BucketCache onheap.  Its way slower but heap won&apos;t fragment because of BC operations.&lt;/p&gt;</comment>
                            <comment id="14062757" author="hadoopqa" created="Tue, 15 Jul 2014 22:14:00 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12655861/11520.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12655861/11520.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12655861&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestReplicaWithCluster&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10070//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14062836" author="ndimiduk" created="Tue, 15 Jul 2014 23:12:33 +0000"  >&lt;p&gt;v2 looks good to me. I&apos;m still confused by CacheConfig though. There&apos;s two places where &lt;tt&gt;GLOBAL_BLOCK_CACHE_INSTANCE = new CombinedBlockCache(lruCache, bucketCache);&lt;/tt&gt; This should not be the case. Can we rework the logic such that if &lt;tt&gt;conf.get(BUCKET_CACHE_IOENGINE_KEY, null) == null&lt;/tt&gt; we just create the LruBlockCache instance and return?&lt;/p&gt;

&lt;p&gt;Additional confusion comes from the updated test where you have &lt;tt&gt;conf.set(CacheConfig.BUCKET_CACHE_IOENGINE_KEY, &quot;offheap&quot;)&lt;/tt&gt; and &lt;tt&gt;conf.setBoolean(CacheConfig.BUCKET_CACHE_COMBINED_KEY, false)&lt;/tt&gt;. That should be an invalid configuration, right? &quot;I want two caches, but I want them to be independent of each other&quot;? That does make sense. From my read, this should result in just an Lru instance, right? Isn&apos;t &lt;tt&gt;BUCKET_CACHE_COMBINED_KEY=true&lt;/tt&gt; implied by specifying &lt;tt&gt;BUCKET_CACHE_IOENGINE_KEY&lt;/tt&gt;?&lt;/p&gt;

&lt;p&gt;Maybe this is all for yet another follow-on patch? Anyway, +1 for v2.&lt;/p&gt;</comment>
                            <comment id="14062840" author="ndimiduk" created="Tue, 15 Jul 2014 23:14:01 +0000"  >&lt;p&gt;Oh, and in package-info, you say &quot;we look in both places&quot;, but that&apos;s quite right, in the way that it was meant for DoubleBlockCache. CombinedBlockCache first looks in lru, then looks in BucketCache.&lt;/p&gt;</comment>
                            <comment id="14062863" author="hadoopqa" created="Tue, 15 Jul 2014 23:35:26 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12655892/11520v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12655892/11520v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12655892&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestMasterFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegion&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionBusyWait&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestReplicaWithCluster&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10072//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14062926" author="stack" created="Wed, 16 Jul 2014 00:26:59 +0000"  >&lt;p&gt;Nice review.&lt;/p&gt;

&lt;p&gt;Thank you for prompting the refactor.  It was hard to grok as it was.  It is a bit cleaner now (could be refactored more but will leave as is else will start to ripple afar).&lt;/p&gt;

&lt;p&gt;On the test, offheap plus BUCKET_CACHE_COMBINED_KEY == false is a legit set up.  This is how you ask for an L1+L2 that is not &apos;combined&apos;.  The L2 gets registered as the victimHandler for L1.  When eviction thread runs, blocks moved to L2.  When we search for blocks, we&apos;ll look in both places (first in LruBC then in its victim if not present...).  Given this latter, the package-info as it is in the patch is right by my reckoning.  From LruBlockCache:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Cacheable getBlock(BlockCacheKey cacheKey, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; caching, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; repeat,
      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; updateCacheMetrics) {
    LruCachedBlock cb = map.get(cacheKey);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (cb == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!repeat &amp;amp;&amp;amp; updateCacheMetrics) stats.miss(caching);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (victimHandler != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; victimHandler.getBlock(cacheKey, caching, repeat, updateCacheMetrics);
      }
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    }
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (updateCacheMetrics) stats.hit(caching);
    cb.access(count.incrementAndGet());
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; cb.getBuffer();
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="14062927" author="stack" created="Wed, 16 Jul 2014 00:28:53 +0000"  >&lt;p&gt;Patch that addresses Nicks&apos; feedback.  Should be good because we had the unit tests in place to verify a couple of the deploys.&lt;/p&gt;</comment>
                            <comment id="14062989" author="hadoopqa" created="Wed, 16 Jul 2014 01:56:06 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12655938/11520v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12655938/11520v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12655938&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestHRegionBusyWait&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegion&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestReplicaWithCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestPerTableCFReplication&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10076//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14063110" author="stack" created="Wed, 16 Jul 2014 04:15:18 +0000"  >&lt;p&gt;Retry.&lt;/p&gt;</comment>
                            <comment id="14063161" author="anoop.hbase" created="Wed, 16 Jul 2014 05:19:38 +0000"  >&lt;p&gt;+1. Looks great!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The L1 LruBlockCache will be whatever hfile.block.cache.size is set to and the L2 BucketCache will be whatever hbase.bucketcache.size is set to. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Great!  I was also thinking of changing this area and making things simple. &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; bucketCachePercentage = c.getFloat(BUCKET_CACHE_SIZE_KEY, 0F);
+    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; bucketCacheSize = (&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;) (bucketCachePercentage &amp;lt; 1? mu.getMax() * bucketCachePercentage:
+      bucketCachePercentage * 1024 * 1024);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When bucketCacheIOEngineName is &quot;heap&quot; it is correct to calculate the memory size by mu.getMax() * bucketCachePercentage&lt;br/&gt;
But when it is offheap, size calculation based on max heap memory looks strange no? &lt;/p&gt;

&lt;p&gt;Also some more work I will do later to make CombinedBlockCache as resizable.  On resize the L1 can be resized. After this goes in will do.&lt;/p&gt;</comment>
                            <comment id="14063185" author="hadoopqa" created="Wed, 16 Jul 2014 05:44:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12655980/11520v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12655980/11520v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12655980&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestReplicaWithCluster&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10081//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14063204" author="stack" created="Wed, 16 Jul 2014 06:12:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;When bucketCacheIOEngineName is &quot;heap&quot; it is correct to calculate the memory size by mu.getMax() * bucketCachePercentage  But when it is offheap, size calculation based on max heap memory looks strange no?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah.  It is fallout from the way in which BUCKET_CACHE_SIZE_KEY can be either MB or a float between 0 and 1.  I am reluctant to change this for 1.0.  Someone may be depending on this &apos;behavior&apos;.  I intend to add more on BC to refguide describing options.  Will include doc on this little vagary.&lt;/p&gt;

&lt;p&gt;Resizeable CBC would be great though I&apos;d say resizing an offheap BC is probably low priority; the important resizing is in the heap and you have the LruBC doing that already.&lt;/p&gt;

&lt;p&gt;Thanks for the +1.  Let me commit.  The TestReplicaWithCluster is unrelated.&lt;/p&gt;</comment>
                            <comment id="14063205" author="stack" created="Wed, 16 Jul 2014 06:15:57 +0000"  >&lt;p&gt;Applied to master and branch-1  Thanks for reviews lads.&lt;/p&gt;</comment>
                            <comment id="14063215" author="anoop.hbase" created="Wed, 16 Jul 2014 06:37:36 +0000"  >&lt;blockquote&gt;&lt;p&gt;Resizeable CBC would be great though I&apos;d say resizing an offheap BC is probably low priority;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;My plan is for onheap part only.  The L1 any way can be resized.  (In case of combine cache, it wont resize as of today)&lt;br/&gt;
One more is in CombinedCache when both L1 and L2 are onheap, the resize will be applied for the L1 only.&lt;/p&gt;

&lt;p&gt;Just one more thing came to mind now.&lt;br/&gt;
We do have checks on cluster start that the sum of memstore size and block cache size can be max 80%.  When BucketCache with onheap is used, it can take more than 80% memory!!..  We must change this checking logic also.&lt;/p&gt;
</comment>
                            <comment id="14063231" author="hudson" created="Wed, 16 Jul 2014 07:13:13 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5311 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5311/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5311/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11520&quot; title=&quot;Simplify offheap cache config by removing the confusing &amp;quot;hbase.bucketcache.percentage.in.combinedcache&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11520&quot;&gt;&lt;del&gt;HBASE-11520&lt;/del&gt;&lt;/a&gt; Simplify offheap cache config by removing the confusing &quot;hbase.bucketcache.percentage.in.combinedcache&quot; (stack: rev 8a481b87b57035aca9f6ff2833104eb073e2e889)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;src/main/docbkx/book.xml&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheConfig.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/package-info.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;br/&gt;
Add a upgrading to 1.0 section to the upgrade part of the book; talk about &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11520&quot; title=&quot;Simplify offheap cache config by removing the confusing &amp;quot;hbase.bucketcache.percentage.in.combinedcache&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11520&quot;&gt;&lt;del&gt;HBASE-11520&lt;/del&gt;&lt;/a&gt; removing hbase.bucketcache.percentage.in.combinedcache (stack: rev a99b71da5774500af5d72b47dcfd7a7cf2a9eb00)&lt;/li&gt;
	&lt;li&gt;src/main/docbkx/upgrading.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14063290" author="hudson" created="Wed, 16 Jul 2014 08:44:19 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.0 #47 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/47/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/47/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11520&quot; title=&quot;Simplify offheap cache config by removing the confusing &amp;quot;hbase.bucketcache.percentage.in.combinedcache&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11520&quot;&gt;&lt;del&gt;HBASE-11520&lt;/del&gt;&lt;/a&gt; Simplify offheap cache config by removing the confusing &quot;hbase.bucketcache.percentage.in.combinedcache&quot; (stack: rev 14b331ccab8ef18b00ff7b4cf9127e22c74c4bca)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;src/main/docbkx/book.xml&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/package-info.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheConfig.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14064094" author="stack" created="Wed, 16 Jul 2014 21:06:20 +0000"  >&lt;p&gt;Here is what happens if you set a bucketcache size &amp;gt; allocated direct memory:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2014-07-16 14:03:02,081 INFO  [main] zookeeper.ZooKeeper: Initiating client connection, connectString=c2020.halxg.cloudera.com:2181 sessionTimeout=90000 watcher=master:16020, quorum=c2020.halxg.cloudera.com:2181, baseZNode=/hbase
2014-07-16 14:03:02,309 ERROR [main] master.HMasterCommandLine: Master exiting
java.lang.RuntimeException: Failed construction of Master: class org.apache.hadoop.hbase.master.HMaster
        at org.apache.hadoop.hbase.master.HMaster.constructMaster(HMaster.java:1796)
        at org.apache.hadoop.hbase.master.HMasterCommandLine.startMaster(HMasterCommandLine.java:194)
        at org.apache.hadoop.hbase.master.HMasterCommandLine.run(HMasterCommandLine.java:139)
        at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:70)
        at org.apache.hadoop.hbase.util.ServerCommandLine.doMain(ServerCommandLine.java:126)
        at org.apache.hadoop.hbase.master.HMaster.main(HMaster.java:1810)
Caused by: java.lang.OutOfMemoryError: Direct buffer memory
        at java.nio.Bits.reserveMemory(Bits.java:658)
        at java.nio.DirectByteBuffer.&amp;lt;init&amp;gt;(DirectByteBuffer.java:123)
        at java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:306)
        at org.apache.zookeeper.ClientCnxnSocket.&amp;lt;init&amp;gt;(ClientCnxnSocket.java:51)
        at org.apache.zookeeper.ClientCnxnSocketNIO.&amp;lt;init&amp;gt;(ClientCnxnSocketNIO.java:48)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.newInstance(&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.java:374)
        at org.apache.zookeeper.ZooKeeper.getClientCnxnSocket(ZooKeeper.java:1779)
        at org.apache.zookeeper.ZooKeeper.&amp;lt;init&amp;gt;(ZooKeeper.java:447)
        at org.apache.zookeeper.ZooKeeper.&amp;lt;init&amp;gt;(ZooKeeper.java:380)
        at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.&amp;lt;init&amp;gt;(RecoverableZooKeeper.java:112)
        at org.apache.hadoop.hbase.zookeeper.ZKUtil.connect(ZKUtil.java:132)
        at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.&amp;lt;init&amp;gt;(ZooKeeperWatcher.java:164)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.&amp;lt;init&amp;gt;(HRegionServer.java:502)
        at org.apache.hadoop.hbase.master.HMaster.&amp;lt;init&amp;gt;(HMaster.java:267)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
        at org.apache.hadoop.hbase.master.HMaster.constructMaster(HMaster.java:1791)
        ... 5 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14064099" author="stack" created="Wed, 16 Jul 2014 21:08:10 +0000"  >&lt;p&gt;We should probably drop config&apos;ing direct max memory in hbase-env.sh since in jdk7 there is no limit (to be confirmed).&lt;/p&gt;</comment>
                            <comment id="14064144" author="apurtell" created="Wed, 16 Jul 2014 21:35:26 +0000"  >&lt;p&gt;We can catch that OOME out of HMaster.constructMaster and print a message providing guidance and reference somewhere in the online manual. &lt;/p&gt;</comment>
                            <comment id="14065038" author="ndimiduk" created="Thu, 17 Jul 2014 15:41:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;On the test, offheap plus BUCKET_CACHE_COMBINED_KEY == false is a legit set up. This is how you ask for an L1+L2 that is not &apos;combined&apos;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Reading through the logic again.&lt;/p&gt;

&lt;p&gt;&lt;tt&gt;lruCache.setVictimCache&lt;/tt&gt; is called only when &lt;tt&gt;bucketCacheIOEngineName != null &amp;amp;&amp;amp; bucketCacheSize &amp;gt; 0&lt;/tt&gt;. &lt;tt&gt;combinedWithLru&lt;/tt&gt; is used to size the lrucache based on the value of &lt;tt&gt;bucketCacheSize&lt;/tt&gt;, calculated from &lt;tt&gt;hbase.bucketcache.size&lt;/tt&gt;. So setting &lt;tt&gt;hbase.bucketcache.combinedcache.enabled=false&lt;/tt&gt;, &lt;tt&gt;hbase.bucketcache.ioengine&lt;/tt&gt; not null, and &lt;tt&gt;hbase.bucketcache.size&lt;/tt&gt; not 0 results in &lt;tt&gt;GLOBAL_BLOCK_CACHE_INSTANCE=LruBlockCache&lt;/tt&gt; with a &lt;tt&gt;victimCache&lt;/tt&gt; set but no way to access the blocks from the bucketcache.&lt;/p&gt;

&lt;p&gt;Another observation: the &lt;b&gt;only&lt;/b&gt; way to have a &lt;tt&gt;BucketCache&lt;/tt&gt; instance accessible via &lt;tt&gt;GLOBAL_BLOCK_CACHE_INSTANCE&lt;/tt&gt; is via a &lt;tt&gt;CombinedCache&lt;/tt&gt;. Setting &lt;tt&gt;bucketCacheIOEngineName != null &amp;amp;&amp;amp; bucketCacheSize &amp;gt; 0&lt;/tt&gt; but &lt;tt&gt;hbase.bucketcache.combinedcache.enabled=false&lt;/tt&gt; results in &lt;tt&gt;GLOBAL_BLOCK_CACHE_INSTANCE=LruBlockCache&lt;/tt&gt; and a surprising amount of wasted memory.&lt;/p&gt;

&lt;p&gt;I think the only valid use of the bucketcache is when combinedcache.enabled=true.&lt;/p&gt;

&lt;p&gt;Am I missing something?&lt;/p&gt;</comment>
                            <comment id="14065050" author="ndimiduk" created="Thu, 17 Jul 2014 15:56:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;Given this latter, the package-info as it is in the patch is right by my reckoning. From LruBlockCache&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oh. I thought the only place BucketCache was entering the picture was via CombinedBlockCache:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  public Cacheable getBlock(BlockCacheKey cacheKey, boolean caching,
      boolean repeat, boolean updateCacheMetrics) {
    // TODO: is there a hole here, or just awkwardness since in the lruCache getBlock
    // we end up calling bucketCache.getBlock.
    if (lruCache.containsBlock(cacheKey)) {
      return lruCache.getBlock(cacheKey, caching, repeat, updateCacheMetrics);
    }
    return bucketCache.getBlock(cacheKey, caching, repeat, updateCacheMetrics);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I didn&apos;t grock your meaning of LruBlockCache reaching into it&apos;s victimHandler at read time. So really, setting hbase.bucketcache.combinedcache.enabled=false means &quot;cache data blocks in Lru first&quot; while =true means &quot;data blocks never go to lru, only bucket&quot;.&lt;/p&gt;</comment>
                            <comment id="14065419" author="stack" created="Thu, 17 Jul 2014 19:30:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;lruCache.setVictimCache is called only when bucketCacheIOEngineName != null &amp;amp;&amp;amp; bucketCacheSize &amp;gt; 0.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;... and combinedWithLru is not set, yeah.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;combinedWithLru is used to size the lrucache based on the value of bucketCacheSize, calculated from hbase.bucketcache.size. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No.  Not in the last version of this patch.  LruBC size is detached from bucketCacheSizing.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So setting hbase.bucketcache.combinedcache.enabled=false, hbase.bucketcache.ioengine not null .... with a victimCache set but no way to access the blocks from the bucketcache.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No (as per your later comment).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Setting bucketCacheIOEngineName != null &amp;amp;&amp;amp; bucketCacheSize &amp;gt; 0 but hbase.bucketcache.combinedcache.enabled=false results in GLOBAL_BLOCK_CACHE_INSTANCE=LruBlockCache and a surprising amount of wasted memory.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The bucket cache will be set into LruBC as victimHandler.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So really, setting hbase.bucketcache.combinedcache.enabled=false means &quot;cache data blocks in Lru first&quot; while =true means &quot;data blocks never go to lru, only bucket&quot;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah.  Seems like a simple story to tell.  You ok w/ it?  Let me write up the L1+L2 deploy type in case folks interested and put in manual.  Let me see if I can test too.  Probably would be better with a policy in place that loaded data blocks to L2 first and only up into L1 if accessed a few times rather than as it is, loading to L1 always and then to L2.&lt;/p&gt;

&lt;p&gt;The unit tests added to TestCacheConfig try to confirm that these deploy options are layed-out as we expect.&lt;/p&gt;

&lt;p&gt;Thanks for looking.&lt;/p&gt;


</comment>
                            <comment id="14065522" author="ndimiduk" created="Thu, 17 Jul 2014 20:51:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;You ok w/ it?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, I&apos;m okay with this. You leave things better than when you found them.&lt;/p&gt;</comment>
                            <comment id="14330757" author="enis" created="Sat, 21 Feb 2015 23:30:56 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                            <comment id="14571988" author="hudson" created="Thu, 4 Jun 2015 02:23:13 +0000"  >&lt;p&gt;SUCCESS: Integrated in Ambari-trunk-Commit #2804 (See &lt;a href=&quot;https://builds.apache.org/job/Ambari-trunk-Commit/2804/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Ambari-trunk-Commit/2804/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AMBARI-11552&quot; title=&quot;2.3 stack advisor doesn&amp;#39;t take into account HBASE-11520&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AMBARI-11552&quot;&gt;&lt;del&gt;AMBARI-11552&lt;/del&gt;&lt;/a&gt;. 2.3 stack advisor doesn&apos;t take into account &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11520&quot; title=&quot;Simplify offheap cache config by removing the confusing &amp;quot;hbase.bucketcache.percentage.in.combinedcache&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11520&quot;&gt;&lt;del&gt;HBASE-11520&lt;/del&gt;&lt;/a&gt; (Nick Dimiduk via srimanth) (sgunturi: &lt;a href=&quot;http://git-wip-us.apache.org/repos/asf?p=ambari.git&amp;amp;a=commit&amp;amp;h=aeccbc7fe458509241e16c47f653f65a6ed8c2e4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://git-wip-us.apache.org/repos/asf?p=ambari.git&amp;amp;a=commit&amp;amp;h=aeccbc7fe458509241e16c47f653f65a6ed8c2e4&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;ambari-server/src/test/python/stacks/2.3/common/test_stack_advisor.py&lt;/li&gt;
	&lt;li&gt;ambari-server/src/main/resources/stacks/HDP/2.2/services/stack_advisor.py&lt;/li&gt;
	&lt;li&gt;ambari-server/src/main/resources/stacks/HDP/2.3/services/stack_advisor.py&lt;/li&gt;
	&lt;li&gt;ambari-server/src/test/python/stacks/2.2/common/test_stack_advisor.py&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12655861" name="11520.txt" size="17615" author="stack" created="Tue, 15 Jul 2014 20:46:49 +0000"/>
                            <attachment id="12655892" name="11520v2.txt" size="18477" author="stack" created="Tue, 15 Jul 2014 22:08:25 +0000"/>
                            <attachment id="12655980" name="11520v3.txt" size="24952" author="stack" created="Wed, 16 Jul 2014 04:15:18 +0000"/>
                            <attachment id="12655938" name="11520v3.txt" size="24952" author="stack" created="Wed, 16 Jul 2014 00:28:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Jul 2014 21:47:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>405572</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 28 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1xsn3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>405598</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Remove &amp;quot;hbase.bucketcache.percentage.in.combinedcache&amp;quot;.  Simplifies config of block cache.  If you are using this config., after this patch goes in, it will be ignored.  The L1 LruBlockCache will be whatever hfile.block.cache.size is set to and the L2 BucketCache will be whatever hbase.bucketcache.size is set to.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>