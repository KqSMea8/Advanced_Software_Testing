<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:15:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10602/HBASE-10602.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10602] Cleanup HTable public interface</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10602</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6580&quot; title=&quot;Deprecate HTablePool in favor of HConnection.getTable(...)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6580&quot;&gt;&lt;del&gt;HBASE-6580&lt;/del&gt;&lt;/a&gt; replaced the preferred means of HTableInterface acquisition to the HConnection#getTable factory methods. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9117&quot; title=&quot;Remove HTablePool and all HConnection pooling related APIs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9117&quot;&gt;&lt;del&gt;HBASE-9117&lt;/del&gt;&lt;/a&gt; removes the HConnection cache, placing the burden of responsible connection cleanup on whomever acquires it.&lt;/p&gt;

&lt;p&gt;The remaining HTable constructors use a Connection instance and manage their own HConnection on the callers behalf. This is convenient but also a surprising source of poor performance for anyone accustomed to the previous connection caching behavior. I propose deprecating those remaining constructors for 0.98/0.96 and removing them for 1.0.&lt;/p&gt;

&lt;p&gt;While I&apos;m at it, I suggest we pursue some API hygiene in general and convert HTable into an interface. I&apos;m sure there are method overloads for accepting String/byte[]/TableName where just TableName is sufficient. Can that be done for 1.0 as well?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12697038">HBASE-10602</key>
            <summary>Cleanup HTable public interface</summary>
                <type id="14" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/genericissue.png">Umbrella</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="enis">Enis Soztutar</assignee>
                                    <reporter username="ndimiduk">Nick Dimiduk</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Feb 2014 00:52:20 +0000</created>
                <updated>Sat, 21 Feb 2015 23:45:19 +0000</updated>
                            <resolved>Wed, 26 Nov 2014 19:23:50 +0000</resolved>
                                                    <fixVersion>0.99.2</fixVersion>
                                    <component>Client</component>
                    <component>Usability</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                                                            <comments>
                            <comment id="13911079" author="enis" created="Tue, 25 Feb 2014 01:09:21 +0000"  >&lt;p&gt;Let me repeat my comments from dev@ for further discussion here.I propose we do smt like this: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; Table {
  &lt;span class=&quot;code-comment&quot;&gt;// get, put related stuff
&lt;/span&gt;}

@Deprecated
&lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; HTableInterface &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Table {
  &lt;span class=&quot;code-comment&quot;&gt;// users are encouraged to use the &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Table &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt;
&lt;/span&gt;}

class HTable &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Table {
  &lt;span class=&quot;code-comment&quot;&gt;// all HTable constructors are deprecated
&lt;/span&gt;  &lt;span class=&quot;code-comment&quot;&gt;// Users are not encouraged to see &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; class
&lt;/span&gt;}

&lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; Connection &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Closeable{
  getTable(), and &lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt; of HConnection methods 
  getAdmin()
  &lt;span class=&quot;code-comment&quot;&gt;// no deprecated methods (cache related etc)
&lt;/span&gt;}

@Deprecated
&lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; HConnection &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Connection {
  &lt;span class=&quot;code-comment&quot;&gt;// users are encouraged to use Connection
&lt;/span&gt;}

class ConnectionManager {
  createConnection(Configuration) &lt;span class=&quot;code-comment&quot;&gt;// not sure whether we want a &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; factory method to create connections or a ctor
&lt;/span&gt;}

@Deprecated
class HCM &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; ConnectionManager {
  &lt;span class=&quot;code-comment&quot;&gt;// users are encouraged to use ConnectionManager
&lt;/span&gt;}

&lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; Admin {
  createTable()
  deleteTable()
  &lt;span class=&quot;code-comment&quot;&gt;// only truly client-facing &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; methods here
&lt;/span&gt;}

class HBaseAdmin &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Admin {
  &lt;span class=&quot;code-comment&quot;&gt;// all constructors are deprecated
&lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can introduce this as the default new API, and announce some stability support for these in the 1.x line&lt;/p&gt;</comment>
                            <comment id="13911841" author="apurtell" created="Tue, 25 Feb 2014 18:24:47 +0000"  >&lt;blockquote&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;interface Table {
  // get, put related stuff
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;

&lt;p&gt;+1, we get a clean slate to redo the interface and a better name for a client facing interface.&lt;/p&gt;

&lt;p&gt;Edit: Fix formatting&lt;/p&gt;</comment>
                            <comment id="13980011" author="enis" created="Thu, 24 Apr 2014 17:45:39 +0000"  >&lt;p&gt;Here is a v1 patch. Still some TODO&apos;s to discuss in the review (because I did not find a good way), but I think this is a good base for a cleaner API. &lt;/p&gt;

&lt;p&gt;Note that this deprecates A LOT of stuff, so, please review carefully. If we commit this, we should be sure that this is a good API base for 1.x line. &lt;/p&gt;

&lt;p&gt;I&apos;ll create an RB. &lt;/p&gt;</comment>
                            <comment id="13980014" author="enis" created="Thu, 24 Apr 2014 17:48:50 +0000"  >&lt;p&gt;RB here: &lt;a href=&quot;https://reviews.apache.org/r/20675/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/20675/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13981790" author="sershe" created="Sat, 26 Apr 2014 00:18:19 +0000"  >&lt;p&gt;some feedback on R&lt;/p&gt;</comment>
                            <comment id="13988092" author="enis" created="Fri, 2 May 2014 18:55:24 +0000"  >&lt;p&gt;I was thinking about how to do a good API for the admin operations like flush, compact, createTable, etc. We already know that we should provide a default async API (or half-async), but with the possibility of the client waiting for the operation results, and query the status later. It has been a discussed (in the master redesign issue, and by Stack in RB for this issue) that at the RPC layer, we would want to fire up a request like createTable to master, and get a token back so that we can query the results later with it. But the client level API does not need to be exposed to tokens etc. &lt;/p&gt;

&lt;p&gt;I am thinking of using Future&apos;s for this. What do you guys think? &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Future&amp;lt;CompactRegionResult&amp;gt; compactRegion(); 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For Table APIs like Put, and Get, we might want the same thing. For puts, we won&apos;t have setAutoFlush(). We will have either putSync() or put()&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; putSync(Put); 
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Future&amp;lt;PutResult&amp;gt; put(Put); 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; was talking about being able to inject a callback between retries so that the user has greater control. For that though, a callback based API seems more appropriate. &lt;/p&gt;</comment>
                            <comment id="13988882" author="apurtell" created="Sun, 4 May 2014 01:01:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;It has been a discussed (in the master redesign issue, and by Stack in RB for this issue) that at the RPC layer, we would want to fire up a request like createTable to master, and get a token back so that we can query the results later with it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Server task management with a client API for querying task status was proposed also on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10170&quot; title=&quot;Coprocessor task monitor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10170&quot;&gt;HBASE-10170&lt;/a&gt; for long running coprocessor endpoint invocations.&lt;/p&gt;</comment>
                            <comment id="13993556" author="nkeywal" created="Fri, 9 May 2014 12:29:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;We will have either putSync() or put()&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Seem ok to me, as having a putSync that returns a boolean and not a future (this will save hundred of thousands of object creation compared to a version that return a Future, so I like it).&lt;/p&gt;</comment>
                            <comment id="14105437" author="carterpage" created="Thu, 21 Aug 2014 15:02:13 +0000"  >&lt;p&gt;Wouldn&apos;t you want the async call to be the new signature, so it doesn&apos;t break backwards compatibility?  I guess it doesn&apos;t matter with &quot;put&quot;, but for instance checkAndPut and other non-void methods:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; checkAndPut(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], Put); 
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Future&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;&amp;gt; asyncCheckAndPut(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], Put); 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This also means that you can grow/evolve the Table interface rather than figuring out the future/async version in the first iteration.&lt;/p&gt;

&lt;p&gt;Last point, following on Nick&apos;s assertion about object creation (where does the ~100k objects # come from btw?), you may not want to default the user to an async call creates more garbage collection in the client, rather let them decide if they need it.&lt;/p&gt;</comment>
                            <comment id="14108950" author="nkeywal" created="Mon, 25 Aug 2014 09:38:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;where does the ~100k objects # come from btw?),&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Just that you can do 100k of puts per second with HBase &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Wouldn&apos;t you want the async call to be the new signature, so it doesn&apos;t break backwards compatibility?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, agreed.&lt;/p&gt;

&lt;p&gt;One of the questions not clear to me is batch async and batch streaming. I&apos;m not sure I don&apos;t prefer a callback mechanism for them (if you batch multiple operations, they can come back in any order, so the most efficient solution client side is to get the result as it&apos;s executed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This also means that you can grow/evolve the Table interface rather than figuring out the future/async version in the first iteration.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed it&apos;s the right approach.&lt;/p&gt;
</comment>
                            <comment id="14126515" author="enis" created="Tue, 9 Sep 2014 03:14:28 +0000"  >&lt;p&gt;Converting this to be an umbrella jira. A lot of linked stuff has already been done, some more to do as linked jiras. &lt;/p&gt;</comment>
                            <comment id="14140800" author="sduskis" created="Fri, 19 Sep 2014 16:06:37 +0000"  >&lt;p&gt;HTable.getRegionLocations() is an internal deprecated API that&apos;s very useful internally.  Switch the implementation to use Table and RegionLocator.&lt;/p&gt;</comment>
                            <comment id="14226681" author="stack" created="Wed, 26 Nov 2014 19:23:50 +0000"  >&lt;p&gt;Resolving. All subtasks done.  The cleanup asked for has been done (we got something better than what was asked for!).  Reopen if I have it wrong.&lt;/p&gt;</comment>
                            <comment id="14331616" author="enis" created="Sat, 21 Feb 2015 23:45:19 +0000"  >&lt;p&gt;Closing this issue after 0.99.2 release.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12661440">HBASE-9117</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12668413">HBASE-9527</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12701621">HBASE-10757</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12735857">HBASE-11797</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12736810">HBASE-11825</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12736812">HBASE-11826</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12738486">HBASE-11879</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12743818">HBASE-12083</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12742754">HBASE-12029</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12707216">HBASE-10934</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12710329">HBASE-11068</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12704125">HBASE-10856</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12641764" name="hbase-10602_v1.patch" size="146025" author="enis" created="Thu, 24 Apr 2014 17:45:39 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12740040">HBASE-11917</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 25 Feb 2014 01:09:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>375513</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1spjr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>375809</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>