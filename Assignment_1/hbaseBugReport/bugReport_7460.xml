<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:45:57 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7460/HBASE-7460.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7460] Cleanup client connection layers</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7460</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This issue originated from a discussion over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7442&quot; title=&quot;HBase remote CopyTable not working when security enabled&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7442&quot;&gt;&lt;del&gt;HBASE-7442&lt;/del&gt;&lt;/a&gt;.  We currently have a broken abstraction with &lt;tt&gt;HBaseClient&lt;/tt&gt;, where it is bound to a single &lt;tt&gt;Configuration&lt;/tt&gt; instance at time of construction, but then reused for all connections to all clusters.  This is combined with multiple, overlapping layers of connection caching.&lt;/p&gt;

&lt;p&gt;Going through this code, it seems like we have a lot of mismatch between the higher layers and the lower layers, with too much abstraction in between. At the lower layers, most of the &lt;tt&gt;ClientCache&lt;/tt&gt; stuff seems completely unused. We currently effectively have an &lt;tt&gt;HBaseClient&lt;/tt&gt; singleton (for &lt;tt&gt;SecureClient&lt;/tt&gt; as well in 0.92/0.94) in the client code, as I don&apos;t see anything that calls the constructor or &lt;tt&gt;RpcEngine.getProxy()&lt;/tt&gt; versions with a non-default socket factory. So a lot of the code around this seems like built up waste.&lt;/p&gt;

&lt;p&gt;The fact that a single Configuration is fixed in the &lt;tt&gt;HBaseClient&lt;/tt&gt; seems like a broken abstraction as it currently stands. In addition to cluster ID, other configuration parameters (max retries, retry sleep) are fixed at time of construction. The more I look at the code, the more it looks like the &lt;tt&gt;ClientCache&lt;/tt&gt; and sharing the &lt;tt&gt;HBaseClient&lt;/tt&gt; instance is an unnecessary complication. Why cache the &lt;tt&gt;HBaseClient&lt;/tt&gt; instances at all? In &lt;tt&gt;HConnectionManager&lt;/tt&gt;, we already have a mapping from &lt;tt&gt;Configuration&lt;/tt&gt; to &lt;tt&gt;HConnection&lt;/tt&gt;. It seems to me like each &lt;tt&gt;HConnection(Implementation)&lt;/tt&gt; instance should have it&apos;s own &lt;tt&gt;HBaseClient&lt;/tt&gt; instance, doing away with the &lt;tt&gt;ClientCache&lt;/tt&gt; mapping. This would keep each &lt;tt&gt;HBaseClient&lt;/tt&gt; associated with a single cluster/configuration and fix the current breakage from reusing the same &lt;tt&gt;HBaseClient&lt;/tt&gt; against different clusters.&lt;/p&gt;

&lt;p&gt;We need a refactoring of some of the interactions of &lt;tt&gt;HConnection(Implementation)&lt;/tt&gt;, &lt;tt&gt;HBaseRPC/RpcEngine&lt;/tt&gt;, and &lt;tt&gt;HBaseClient&lt;/tt&gt;. Off hand, we might want to expose a separate &lt;tt&gt;RpcEngine.getClient()&lt;/tt&gt; method that returns a new &lt;tt&gt;RpcClient&lt;/tt&gt; interface (implemented by &lt;tt&gt;HBaseClient&lt;/tt&gt;) and move the &lt;tt&gt;RpcEngine.getProxy()&lt;/tt&gt;/&lt;tt&gt;stopProxy()&lt;/tt&gt; implementations into the client. So all proxy invocations can go through the same client, without requiring the static client cache. I haven&apos;t fully thought this through, so I could be missing other important aspects. But that approach at least seems like a step in the right direction for fixing the client abstractions.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12625491">HBASE-7460</key>
            <summary>Cleanup client connection layers</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ghelmling">Gary Helmling</assignee>
                                    <reporter username="ghelmling">Gary Helmling</reporter>
                        <labels>
                    </labels>
                <created>Sat, 29 Dec 2012 17:36:24 +0000</created>
                <updated>Mon, 23 Sep 2013 18:30:39 +0000</updated>
                            <resolved>Fri, 18 Jan 2013 23:54:04 +0000</resolved>
                                                    <fixVersion>0.95.0</fixVersion>
                                    <component>Client</component>
                    <component>IPC/RPC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                                                            <comments>
                            <comment id="13541010" author="stack" created="Sat, 29 Dec 2012 22:51:30 +0000"  >&lt;p&gt;I am in this area at the moment, at a level just above HBaseClient trying to make use of it.  I&apos;m playing with trying to use protobuf Service and hooking it up on either end to use our RPC.  There are pros but a bunch of cons with the main one being mostly the amount of refactoring that would have to do in this area if we were to go this route.&lt;/p&gt;

&lt;p&gt;My first impression submerging below the level of HBaseClientRPC is that there is a bunch of cruft in here, stuff that has been accumulating over time and that we&apos;ve probably been afraid to apply the compressed air can too.&lt;/p&gt;

&lt;p&gt;I want to make use of clients.  Was going to copy what is going on in Invoker not knowing any better.  I want to use something else than &quot;protocol&quot; as the key getting the client.&lt;/p&gt;

&lt;p&gt;In my investigations, the first thing to jettison would be the proxy stuff.  In my case it is in the way (I&apos;d use the protobuf Service.Stub instead).  Getting a proxy has a bunch of overrides.  A bunch look unused, as you say.  Also, protocol &apos;versioning&apos; and protocol &apos;fingerprinting&apos; &amp;#8211; VersionedProtocol and ProtocolSignature &amp;#8211; are in the former case not hooked up, and in the latter, a facility that is incomplete and unused so all this code needs finishing or we need to just throw it out.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It seems to me like each HConnection(Implementation) instance should have it&apos;s own HBaseClient instance, doing away with the ClientCache mapping&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds imminently sensible.&lt;/p&gt;

&lt;p&gt;I&apos;d be up for sketching something out if you had a few minutes to hang G.&lt;/p&gt;

&lt;p&gt;Still to do, though not directly related here but it is in this realm only at a lower level, is the back and forth over RPC, what we put on the wire.  As is where we create a pb from an already made request pb &amp;#8211; with the former making a copy of the latter &amp;#8211; needs fixing and we should take the opportunity to address some of the criticisms&apos; Beno&#238;t/Tsuna raised in Unofficial Hadoop / HBase RPC protocol documentation (&lt;a href=&quot;http://www.google.com/url?q=https%3A%2F%2Fgithub.com%2FOpenTSDB%2Fasynchbase%2Fblob%2Fmaster%2Fsrc%2FHBaseRpc.java%23L164&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNEy00ZQVclIR7BaBJYBdRV-i7QGTg&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.google.com/url?q=https%3A%2F%2Fgithub.com%2FOpenTSDB%2Fasynchbase%2Fblob%2Fmaster%2Fsrc%2FHBaseRpc.java%23L164&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNEy00ZQVclIR7BaBJYBdRV-i7QGTg&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="13541037" author="ghelmling" created="Sun, 30 Dec 2012 04:39:43 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; Yes, it would be good to sync up in this area and align our plans.  If going through with exposing the protobuf Service implementations proves out, dropping the dynamic proxying would definitely simplify some things, and I also got the impression that there was a lot of accumulated cruft to weed out, ClientCache being a prime example.&lt;/p&gt;

&lt;p&gt;Let&apos;s streamline the intermediate code first, then look at cutting out the wire transfer overhead.  Benoit&apos;s docs make good reading.  There are a lot of gains to be made there as well.&lt;/p&gt;</comment>
                            <comment id="13555815" author="ghelmling" created="Thu, 17 Jan 2013 03:51:46 +0000"  >&lt;p&gt;Initial patch posted for review: &lt;a href=&quot;https://reviews.apache.org/r/8979/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/8979/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13557563" author="ghelmling" created="Fri, 18 Jan 2013 20:18:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; Do you have any thoughts on this refactoring since I think it ties in to resource management you&apos;ve looked at from the HConnection / HTable side?&lt;/p&gt;</comment>
                            <comment id="13557600" author="lhofhansl" created="Fri, 18 Jan 2013 21:04:49 +0000"  >&lt;p&gt;Somehow I can&apos;t comment on RB. Looks great. I have two questions:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Do we still want the RPC engine to be configurable?&lt;/li&gt;
	&lt;li&gt;the stopProxy logic can go away, because we&apos;re calling close on the RPC engine?&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13557613" author="hadoopqa" created="Fri, 18 Jan 2013 21:15:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12565546/HBASE-7460_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12565546/HBASE-7460_2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 42 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4092//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13557645" author="eclark" created="Fri, 18 Jan 2013 21:48:32 +0000"  >&lt;p&gt;Removing the plug-ability of the engine would be really nice; we&apos;ve pretty much given up on not having protobuf everywhere.&lt;/p&gt;</comment>
                            <comment id="13557655" author="ghelmling" created="Fri, 18 Jan 2013 21:54:25 +0000"  >&lt;p&gt;Thanks for taking a look Lars.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do we still want the RPC engine to be configurable?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I originally added the loadable RPC engines as a way of introducing security (via SecureRpcEngine) as a completely optional component, so that the existing WritableRpcEngine could be unchanged.  Since we&apos;ve moved back to a single RPC engine in trunk, I didn&apos;t see any value in keeping the additional complexity of having it configurable.  That capability is only minimally used in tests, which I was easily able to replace.  It&apos;s possible there are end user implementations of RpcEngine, though I kind of doubt it.  If there are, maybe it&apos;s worth keeping a configuration based factory.  I could do a poll on the user list to check.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;the stopProxy logic can go away, because we&apos;re calling close on the RPC engine?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, that was only doing reference counting on our HBaseClient singleton, so that we could control when HBaseClient.stop() was called.  With an HBaseClient instance now directly tied to a HConnection instance, we can rely on HCM.HConnectionImplementation#close() -&amp;gt; ProtobufRpcClientEngine#close() -&amp;gt; HBaseClient#stop() instead.&lt;/p&gt;</comment>
                            <comment id="13557666" author="lhofhansl" created="Fri, 18 Jan 2013 22:05:26 +0000"  >&lt;p&gt;+1 on commit. Also curious, can I currently create two Connections and connect them to different clusters in a single JVM?&lt;/p&gt;</comment>
                            <comment id="13557670" author="eclark" created="Fri, 18 Jan 2013 22:09:39 +0000"  >&lt;p&gt;+1 as well.  Looks really nice.&lt;/p&gt;</comment>
                            <comment id="13557702" author="ghelmling" created="Fri, 18 Jan 2013 22:41:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;can I currently create two Connections and connect them to different clusters in a single JVM?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Prior to this patch, you&apos;ll have problems with that, due to the issue detailed in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7442&quot; title=&quot;HBase remote CopyTable not working when security enabled&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7442&quot;&gt;&lt;del&gt;HBASE-7442&lt;/del&gt;&lt;/a&gt; &amp;#8211; we essentially have an HBaseClient singleton, whose Configuration (including cluster ID) is fixed the first time it&apos;s used, so it can&apos;t properly account for different IDs per cluster.  This is important for token based authentication at least, ie. security + map reduce.  Outside of token auth, the current code may work for multiple cluster connections, though the client may pick up some wrong configs for things like retries, tcpnodelay, etc.  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7442&quot; title=&quot;HBase remote CopyTable not working when security enabled&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7442&quot;&gt;&lt;del&gt;HBASE-7442&lt;/del&gt;&lt;/a&gt; works around this by caching a separate HBaseClient per cluster ID, which makes token auth work.&lt;/p&gt;

&lt;p&gt;With this change, since HBaseClient is fixed to a given HConnection, which is cached based on cluster-specific config, so it should be no problem connecting to multiple clusters within the same JVM.  There is a change in behavior here &amp;#8211; if you&apos;re manually creating multiple HConnections as the same user to the same cluster (using HCM#createConnection(Configuration)), you&apos;re now getting a separate HBaseClient per HConnection, each with it&apos;s own set of RPC connections.  Previously, due to the separate HBaseClient caching, these would share the same HBaseClient with the same RPC connections.  The new behavior seems simpler and more predictable to me.  Are there any cases where we anticipate problems from this?&lt;/p&gt;</comment>
                            <comment id="13557709" author="lhofhansl" created="Fri, 18 Jan 2013 22:49:04 +0000"  >&lt;p&gt;That&apos;s what I thought. Cr*p. I did not think of that. We&apos;ll need that here at Salesforce.&lt;br/&gt;
Any way to backport part of this to 0.94? I assume we&apos;d still need the configurable RPC engine (secure/nonsecure).&lt;br/&gt;
I suppose removing the client cache is simple enough in 0.94 (i.e. here too we&apos;d have a single HBaseClient per RPC engine).&lt;/p&gt;</comment>
                            <comment id="13557712" author="yuzhihong@gmail.com" created="Fri, 18 Jan 2013 22:50:26 +0000"  >&lt;p&gt;@Gary:&lt;br/&gt;
The new behavior would be documented in release notes, right ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13557724" author="stack" created="Fri, 18 Jan 2013 23:03:00 +0000"  >&lt;p&gt;Hurry up and commit!  It will make my current project in rpc easier with this in place.  Nice work Gary.&lt;/p&gt;</comment>
                            <comment id="13557735" author="ghelmling" created="Fri, 18 Jan 2013 23:16:59 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; With &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7442&quot; title=&quot;HBase remote CopyTable not working when security enabled&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7442&quot;&gt;&lt;del&gt;HBASE-7442&lt;/del&gt;&lt;/a&gt; (in 0.94.4), token auth with multiple clusters in the same JVM &lt;em&gt;should&lt;/em&gt; work, and regular client between multiple clusters should work as well, subject to maybe misconfiguration of config params used in HBaseClient:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase.ipc.client.connection.maxidletime&lt;/li&gt;
	&lt;li&gt;hbase.ipc.client.connect.max.retries&lt;/li&gt;
	&lt;li&gt;hbase.client.pause&lt;/li&gt;
	&lt;li&gt;hbase.ipc.client.tcpnodelay&lt;/li&gt;
	&lt;li&gt;hbase.ipc.client.tcpkeepalive&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So I think it would only be an issue if you use different values for these talking to the same cluster?&lt;/p&gt;

&lt;p&gt;We could potentially backport a version of this if you really wanted the new behavior (separate HBaseClient per HConnection, with separate set of RPC connections).  But this seemed like a pretty invasive change to me so I hadn&apos;t planned on it.&lt;/p&gt;

&lt;p&gt;If you really want a backport, I can work one up.&lt;/p&gt;</comment>
                            <comment id="13557737" author="ghelmling" created="Fri, 18 Jan 2013 23:18:16 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; Yes, absolutely.  I&apos;ll be adding a release note describing the behavior change, and the removal of configurable RPC engines (client at least).&lt;/p&gt;</comment>
                            <comment id="13557751" author="lhofhansl" created="Fri, 18 Jan 2013 23:34:10 +0000"  >&lt;p&gt;&quot;separate HBaseClient per HConnection, with separate set of RPC connections&quot; just seems cleaner, easier to understand, and easier to debug.&lt;br/&gt;
If only HTable is used with a single cluster (a single configuration) the behavior is unchanged, right? (there would be a single HConnection for the configuration, which happens to have a single HBaseClient in the client cache, unless I misunderstand).&lt;/p&gt;</comment>
                            <comment id="13557756" author="ghelmling" created="Fri, 18 Jan 2013 23:35:39 +0000"  >&lt;p&gt;Committed to trunk.  Thanks for review Stack, Lars, and Elliot!&lt;/p&gt;</comment>
                            <comment id="13557763" author="stack" created="Fri, 18 Jan 2013 23:41:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;... the behavior is unchanged, right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That is my understanding (flagging the man Gary &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt; for confirmation).&lt;/p&gt;</comment>
                            <comment id="13557764" author="ghelmling" created="Fri, 18 Jan 2013 23:44:13 +0000"  >&lt;p&gt;Yes, the default behavior, using HTable with a single cluster, single configuration, would be unchanged.  All HTable instances would be using a single HConnection, holding a single HBaseClient.&lt;/p&gt;</comment>
                            <comment id="13557769" author="lhofhansl" created="Fri, 18 Jan 2013 23:48:30 +0000"  >&lt;p&gt;I&apos;d say we backport that portion. If you&apos;re busy I can do that, Gary.&lt;/p&gt;</comment>
                            <comment id="13557777" author="ghelmling" created="Fri, 18 Jan 2013 23:54:04 +0000"  >&lt;p&gt;Resolving this issue.  If we choose to do a 0.94 backport, that seems significantly different enough to merit it&apos;s own issue.&lt;/p&gt;</comment>
                            <comment id="13557784" author="ghelmling" created="Sat, 19 Jan 2013 00:04:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;&quot;separate HBaseClient per HConnection, with separate set of RPC connections&quot; just seems cleaner, easier to understand, and easier to debug.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I definitely agree.  I certainly like having a simpler model without the redundant layers of caching.  And I think simplifying the resource management should make it easier to get right.  That said, it is an invasive change with possible change to behavior for some users (maybe even a desirable change, but a change none the less).&lt;/p&gt;

&lt;p&gt;I&apos;ll work up a backported version.  I think the main difference will just be preserving the configurable factory for RpcEngine so we can support both writable and secure versions.&lt;/p&gt;</comment>
                            <comment id="13557802" author="hudson" created="Sat, 19 Jan 2013 00:33:30 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #360 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/360/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/360/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7460&quot; title=&quot;Cleanup client connection layers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7460&quot;&gt;&lt;del&gt;HBASE-7460&lt;/del&gt;&lt;/a&gt;  Cleanup RPC client connection layers (Revision 1435414)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
garyh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/ClientCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/HBaseClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/HBaseClientRPC.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/ProtobufRpcClientEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcClientEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/resources/hbase-webapps/master/table.jsp&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/MiniHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/catalog/TestCatalogTracker.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/catalog/TestMetaReaderEditorNoCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestClientTimeouts.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHCM.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/RandomTimeoutRpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestDelayedRpc.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestProtoBufRpc.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestHMasterRPCException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/security/token/TestTokenAuthentication.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/hbck/OfflineMetaRebuildTestCore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/hbck/TestOfflineMetaRebuildBase.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13557826" author="hudson" created="Sat, 19 Jan 2013 01:08:11 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3768 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3768/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3768/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7460&quot; title=&quot;Cleanup client connection layers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7460&quot;&gt;&lt;del&gt;HBASE-7460&lt;/del&gt;&lt;/a&gt;  Cleanup RPC client connection layers (Revision 1435414)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
garyh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/ClientCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/HBaseClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/HBaseClientRPC.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/ProtobufRpcClientEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcClientEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/resources/hbase-webapps/master/table.jsp&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/MiniHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/catalog/TestCatalogTracker.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/catalog/TestMetaReaderEditorNoCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestClientTimeouts.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHCM.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/RandomTimeoutRpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestDelayedRpc.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestProtoBufRpc.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestHMasterRPCException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/security/token/TestTokenAuthentication.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/hbck/OfflineMetaRebuildTestCore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/hbck/TestOfflineMetaRebuildBase.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13562041" author="lhofhansl" created="Thu, 24 Jan 2013 22:07:04 +0000"  >&lt;p&gt;Hey &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt;, are you still planning on making a 0.94 port?&lt;/p&gt;</comment>
                            <comment id="13562059" author="ghelmling" created="Thu, 24 Jan 2013 22:24:08 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; I&apos;ll take a stab at it today.  If I can&apos;t work something up by tomorrow, you&apos;re welcome to grab it.&lt;/p&gt;</comment>
                            <comment id="13562071" author="lhofhansl" created="Thu, 24 Jan 2013 22:36:09 +0000"  >&lt;p&gt;Thanks Gary.&lt;/p&gt;

&lt;p&gt;I started, and then realized it&apos;s a bit more time consuming than I thought (not knowing that part of the code that well, especially not the secure part).&lt;/p&gt;

&lt;p&gt;One thing I found I had to do was to have WritableRpcEngine and SecureRpcEngine implement Configurable and then initialize the HBaseClient in the setConf(...) method.&lt;/p&gt;

&lt;p&gt;The next problem I encountered was that HBaseRPC.waitForProxy(...) now needs to know the ticket, because it might be called with the secureRpcEngine, but not all callers have that.&lt;/p&gt;

&lt;p&gt;I can figure this all out, but it would probably be way more expedient if you&apos;d make a patch. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13562126" author="devaraj" created="Thu, 24 Jan 2013 23:25:52 +0000"  >&lt;p&gt;I can also do this for 0.94. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt;, will wait to hear from you before I take it on though.&lt;/p&gt;</comment>
                            <comment id="13562276" author="ghelmling" created="Fri, 25 Jan 2013 02:06:37 +0000"  >&lt;blockquote&gt;&lt;p&gt;One thing I found I had to do was to have WritableRpcEngine and SecureRpcEngine implement Configurable and then initialize the HBaseClient in the setConf(...) method.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for the reminder.  I had started down a similar path in the trunk version, but abandoned that when I saw I could do direct instantiation instead.  For 0.94 where we need to preserve the RpcEngine factory aspect, we&apos;ll definitely need this.&lt;/p&gt;

&lt;p&gt;One issue I&apos;m running in to is to what extent do we want to do incompatible changes within RpcEngine.  There we have:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  VersionedProtocol getProxy(&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;? &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; VersionedProtocol&amp;gt; protocol,
                  &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; clientVersion, InetSocketAddress addr,
                  User ticket, Configuration conf,
                  SocketFactory factory, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; rpcTimeout) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The approach I&apos;m planning would change this like trunk to eliminate some unused parameters.  This would impact anyone who had implemented their own RpcEngine, but this seems like a semi-internal internal, so modifying it seemed reasonable to me.&lt;/p&gt;

&lt;p&gt;The trunk patch also has some changes to HConnectionManager method signatures (dropping the unneeded stopProxy param from deleteConnection&amp;#42;).  Should the HConnectionManager interface changes be avoided in 0.94?  We could keep the existing signatures, but just ignore the stopProxy parameter.  Breaking this interface for clients seems like it would cause a lot more problems.&lt;/p&gt;</comment>
                            <comment id="13562356" author="lhofhansl" created="Fri, 25 Jan 2013 04:15:25 +0000"  >&lt;p&gt;I do not think we have to keep compatibility in internal classes. We even change the coprocessor interfaces around. Nobody should call deleteConnection directly. (Changing the HConnection interface would be a different issue and should be avoided, but we&apos;re not doing that).&lt;/p&gt;

&lt;p&gt;On the other hand, maybe for the sake of simplicity and easier review we can leave the HConnectionManager interface unchanged.&lt;/p&gt;

&lt;p&gt;We can definitely change RpcEngine.&lt;br/&gt;
(And Re: my comment above about the ticket not being available to waitForProxy, I now also realize that all the paths that lead to getProxy call User.getCurrent(), so it&apos;s not a problem, we&apos;d just do the same).&lt;/p&gt;</comment>
                            <comment id="13564998" author="hudson" created="Tue, 29 Jan 2013 02:21:03 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #798 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/798/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/798/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7626&quot; title=&quot;Backport portions of HBASE-7460 to 0.94&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7626&quot;&gt;&lt;del&gt;HBASE-7626&lt;/del&gt;&lt;/a&gt; Backport client connection cleanup from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7460&quot; title=&quot;Cleanup client connection layers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7460&quot;&gt;&lt;del&gt;HBASE-7460&lt;/del&gt;&lt;/a&gt; (Revision 1439723)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
garyh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/security/src/main/java/org/apache/hadoop/hbase/ipc/SecureRpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/HBaseClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPC.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/RpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/resources/hbase-webapps/master/table.jsp&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/MiniHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/catalog/TestCatalogTracker.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/catalog/TestMetaReaderEditorNoCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestHCM.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/ipc/TestDelayedRpc.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/ipc/TestPBOnWritableRpc.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/ipc/TestProtocolExtension.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/TestHMasterRPCException.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/hbck/OfflineMetaRebuildTestCore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/hbck/TestOfflineMetaRebuildBase.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13566303" author="hudson" created="Wed, 30 Jan 2013 08:41:29 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #102 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/102/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/102/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7626&quot; title=&quot;Backport portions of HBASE-7460 to 0.94&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7626&quot;&gt;&lt;del&gt;HBASE-7626&lt;/del&gt;&lt;/a&gt; Backport client connection cleanup from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7460&quot; title=&quot;Cleanup client connection layers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7460&quot;&gt;&lt;del&gt;HBASE-7460&lt;/del&gt;&lt;/a&gt; (Revision 1439723)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
garyh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/security/src/main/java/org/apache/hadoop/hbase/ipc/SecureRpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/HBaseClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPC.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/RpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/resources/hbase-webapps/master/table.jsp&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/MiniHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/catalog/TestCatalogTracker.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/catalog/TestMetaReaderEditorNoCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestHCM.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/ipc/TestDelayedRpc.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/ipc/TestPBOnWritableRpc.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/ipc/TestProtocolExtension.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/TestHMasterRPCException.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/hbck/OfflineMetaRebuildTestCore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/hbck/TestOfflineMetaRebuildBase.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13570980" author="hudson" created="Tue, 5 Feb 2013 03:58:26 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #11 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/11/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/11/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7626&quot; title=&quot;Backport portions of HBASE-7460 to 0.94&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7626&quot;&gt;&lt;del&gt;HBASE-7626&lt;/del&gt;&lt;/a&gt; Backport client connection cleanup from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7460&quot; title=&quot;Cleanup client connection layers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7460&quot;&gt;&lt;del&gt;HBASE-7460&lt;/del&gt;&lt;/a&gt; (Revision 1439723)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
garyh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/security/src/main/java/org/apache/hadoop/hbase/ipc/SecureRpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/HBaseClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPC.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/RpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/resources/hbase-webapps/master/table.jsp&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/MiniHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/catalog/TestCatalogTracker.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/catalog/TestMetaReaderEditorNoCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestHCM.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/ipc/TestDelayedRpc.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/ipc/TestPBOnWritableRpc.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/ipc/TestProtocolExtension.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/TestHMasterRPCException.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/hbck/OfflineMetaRebuildTestCore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/hbck/TestOfflineMetaRebuildBase.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13775063" author="stack" created="Mon, 23 Sep 2013 18:30:39 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12625341">HBASE-7442</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12625750">HBASE-7482</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12565546" name="HBASE-7460_2.patch" size="63641" author="ghelmling" created="Fri, 18 Jan 2013 20:14:10 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12628351">HBASE-7626</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 29 Dec 2012 22:51:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>302033</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i16y5r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>248668</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Overriding of the client RPC engine (hbase.rpc.client.engine configuration property) is no longer supported.  Instead the built-in RpcClientEngine is always used.&lt;br/&gt;
&lt;br/&gt;
In some cases, where clients explicitly manage HConnection instance creation, the number of client RPC connections created may change.  This issue changes the HConnection implementation to use it&amp;#39;s own managed HBaseClient instance, with its own set of client RPC connections.  So explicitly creating multiple HConnection instances (using HConnectionManager.createConnection()) will result in multiple HBaseClient instances.  However, for the default behavior, using HTable with a single Configuration, there is no change.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>