<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:14:23 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10499/HBASE-10499.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10499] In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10499</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I got this while testing 0.98RC.  But am not sure if it is specific to this version.  Doesn&apos;t seem so to me.  &lt;br/&gt;
Also it is something similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5312&quot; title=&quot;Closed parent region present in Hlog.lastSeqWritten&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5312&quot;&gt;&lt;del&gt;HBASE-5312&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5568&quot; title=&quot;Multi concurrent flushcache() for one region could cause data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5568&quot;&gt;&lt;del&gt;HBASE-5568&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Using 10 threads i do writes to 4 RS using YCSB. The table created has 200 regions.  In one of the run with 0.98 server and 0.98 client I faced this problem like the hlogs became more and the system requested flushes for those many regions.&lt;br/&gt;
One by one everything was flushed except one and that one thing remained unflushed.  The ripple effect of this on the client side&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
com.yahoo.ycsb.DBException: org.apache.hadoop.hbase.client.RetriesExhaustedWithDetailsException: Failed 54 actions: RegionTooBusyException: 54 times,
        at com.yahoo.ycsb.db.HBaseClient.cleanup(HBaseClient.java:245)
        at com.yahoo.ycsb.DBWrapper.cleanup(DBWrapper.java:73)
        at com.yahoo.ycsb.ClientThread.run(Client.java:307)
Caused by: org.apache.hadoop.hbase.client.RetriesExhaustedWithDetailsException: Failed 54 actions: RegionTooBusyException: 54 times,
        at org.apache.hadoop.hbase.client.AsyncProcess$BatchErrors.makeException(AsyncProcess.java:187)
        at org.apache.hadoop.hbase.client.AsyncProcess$BatchErrors.access$500(AsyncProcess.java:171)
        at org.apache.hadoop.hbase.client.AsyncProcess.getErrors(AsyncProcess.java:897)
        at org.apache.hadoop.hbase.client.HTable.backgroundFlushCommits(HTable.java:961)
        at org.apache.hadoop.hbase.client.HTable.flushCommits(HTable.java:1225)
        at com.yahoo.ycsb.db.HBaseClient.cleanup(HBaseClient.java:232)
        ... 2 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;On one of the RS&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2014-02-11 08:45:58,714 INFO  [regionserver60020.logRoller] wal.FSHLog: Too many hlogs: logs=38, maxlogs=32; forcing flush of 23 regions(s): 97d8ae2f78910cc5ded5fbb1ddad8492, d396b8a1da05c871edcb68a15608fdf2, 01a68742a1be3a9705d574ad68fec1d7, 1250381046301e7465b6cf398759378e, 127c133f47d0419bd5ab66675aff76d4, 9f01c5d25ddc6675f750968873721253, 29c055b5690839c2fa357cd8e871741e, ca4e33e3eb0d5f8314ff9a870fc43463, acfc6ae756e193b58d956cb71ccf0aa3, 187ea304069bc2a3c825bc10a59c7e84, 0ea411edc32d5c924d04bf126fa52d1e, e2f9331fc7208b1b230a24045f3c869e, d9309ca864055eddf766a330352efc7a, 1a71bdf457288d449050141b5ff00c69, 0ba9089db28e977f86a27f90bbab9717, fdbb3242d3b673bbe4790a47bc30576f, bbadaa1f0e62d8a8650080b824187850, b1a5de30d8603bd5d9022e09c574501b, cc6a9fabe44347ed65e7c325faa72030, 313b17dbff2497f5041b57fe13fa651e, 6b788c498503ddd3e1433a4cd3fb4e39, 3d71274fe4f815882e9626e1cfa050d1, acc43e4b42c1a041078774f4f20a3ff5
......................................................
2014-02-11 08:47:49,580 INFO  [regionserver60020.logRoller] wal.FSHLog: Too many hlogs: logs=53, maxlogs=32; forcing flush of 2 regions(s): fdbb3242d3b673bbe4790a47bc30576f, 6b788c498503ddd3e1433a4cd3fb4e39
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2014-02-11 09:42:44,237 INFO  [regionserver60020.periodicFlusher] regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region usertable,user3654,1392107806977.fdbb3242d3b673bbe4790a47bc30576f. after a delay of 16689
2014-02-11 09:42:44,237 INFO  [regionserver60020.periodicFlusher] regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region usertable,user6264,1392107806983.6b788c498503ddd3e1433a4cd3fb4e39. after a delay of 15868
2014-02-11 09:42:54,238 INFO  [regionserver60020.periodicFlusher] regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region usertable,user3654,1392107806977.fdbb3242d3b673bbe4790a47bc30576f. after a delay of 20847
2014-02-11 09:42:54,238 INFO  [regionserver60020.periodicFlusher] regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region usertable,user6264,1392107806983.6b788c498503ddd3e1433a4cd3fb4e39. after a delay of 20099
2014-02-11 09:43:04,238 INFO  [regionserver60020.periodicFlusher] regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region usertable,user3654,1392107806977.fdbb3242d3b673bbe4790a47bc30576f. after a delay of 8677
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2014-02-11 10:31:21,020 INFO  [regionserver60020.logRoller] wal.FSHLog: Too many hlogs: logs=54, maxlogs=32; forcing flush of 1 regions(s): fdbb3242d3b673bbe4790a47bc30576f
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I restarted another RS and there were region movements with other regions but this region stays with the RS that has this issue.  One important observation is that in HRegion.internalflushCache() we need to add a debug log here&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// If nothing to flush, &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; and avoid logging start/stop flush.
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.memstoreSize.get() &amp;lt;= 0) {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Because we can see that the region is requsted for a flush but it does not happen and no logs related to flush are printed in the logs. so due to some reason this memstore.size() has become 0( I assume this).  The earlier bugs were also due to similar reason.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12694476">HBASE-10499</key>
            <summary>In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="yuzhihong@gmail.com">Ted Yu</assignee>
                                    <reporter username="ram_krish">ramkrishna.s.vasudevan</reporter>
                        <labels>
                    </labels>
                <created>Tue, 11 Feb 2014 12:00:45 +0000</created>
                <updated>Sat, 21 Feb 2015 23:48:57 +0000</updated>
                            <resolved>Fri, 23 Jan 2015 21:58:24 +0000</resolved>
                                    <version>0.98.0</version>
                                    <fixVersion>1.0.0</fixVersion>
                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>0.98.10</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>24</watches>
                                                                <comments>
                            <comment id="13897779" author="ram_krish" created="Tue, 11 Feb 2014 12:02:15 +0000"  >&lt;p&gt;Am not sure if this could come in 0.96 and trunk also.  I feel 0.96 it is possible but with trunk (recent HLog disruptor) changes am not sure.  Also may be possible in 0.94.&lt;br/&gt;
I don&apos;t have any soln in hand except for adding log msgs in such a case where memstoreSize could be zero. Will check more on this.&lt;/p&gt;</comment>
                            <comment id="13897780" author="ram_krish" created="Tue, 11 Feb 2014 12:03:27 +0000"  >&lt;p&gt;I have logs and thread dumps taken during this time.  If needed can attach them here.&lt;/p&gt;</comment>
                            <comment id="13897787" author="ram_krish" created="Tue, 11 Feb 2014 12:09:56 +0000"  >&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5568&quot; title=&quot;Multi concurrent flushcache() for one region could cause data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5568&quot;&gt;&lt;del&gt;HBASE-5568&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5312&quot; title=&quot;Closed parent region present in Hlog.lastSeqWritten&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5312&quot;&gt;&lt;del&gt;HBASE-5312&lt;/del&gt;&lt;/a&gt; there were multiple flushes on the same region and splitting of regions were happening.  Here no such things happen.  The region in discussion has not been flushed even once and there are no splits or compactions that has happened on it.&lt;/p&gt;</comment>
                            <comment id="13898030" author="yuzhihong@gmail.com" created="Tue, 11 Feb 2014 17:07:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;I have logs and thread dumps taken during this time&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Please attach them.&lt;/p&gt;</comment>
                            <comment id="13898838" author="ram_krish" created="Wed, 12 Feb 2014 06:18:38 +0000"  >&lt;p&gt;Not able to reproduce this further again.  &lt;/p&gt;</comment>
                            <comment id="13898894" author="ram_krish" created="Wed, 12 Feb 2014 07:30:46 +0000"  >&lt;p&gt;Adding a patch that adds a log in case of memstore size is 0.&lt;/p&gt;</comment>
                            <comment id="13899579" author="apurtell" created="Wed, 12 Feb 2014 21:07:14 +0000"  >&lt;p&gt;+1 for adding logging for this case. Let&apos;s get it in, rerun the test, and see if we can reproduce this issue.&lt;/p&gt;</comment>
                            <comment id="13900253" author="ram_krish" created="Thu, 13 Feb 2014 11:50:25 +0000"  >&lt;p&gt;committed to 0.98 alone.  Will try reproducing this.  &lt;/p&gt;</comment>
                            <comment id="13900428" author="hudson" created="Thu, 13 Feb 2014 15:30:01 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98 #155 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/155/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/155/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10499&quot; title=&quot;In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10499&quot;&gt;&lt;del&gt;HBASE-10499&lt;/del&gt;&lt;/a&gt;&lt;del&gt;In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException&lt;/del&gt; Adding a log alone (ramkrishna: rev 1567894)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13900447" author="hudson" created="Thu, 13 Feb 2014 15:56:55 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #143 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/143/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/143/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10499&quot; title=&quot;In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10499&quot;&gt;&lt;del&gt;HBASE-10499&lt;/del&gt;&lt;/a&gt;&lt;del&gt;In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException&lt;/del&gt; Adding a log alone (ramkrishna: rev 1567894)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13901181" author="fenghh" created="Fri, 14 Feb 2014 07:35:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;Because we can see that the region is requsted for a flush but it does not happen and no logs related to flush are printed in the logs. so due to some reason this memstore.size() has become 0( I assume this)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Reasonable guess, but it can only justify why no flush happens, but not for RegionTooBusyException is thrown by this same region(it should be the same region, right?), actually &apos; memstoreSize.get() &amp;lt;= 0&apos; contradicts the condition for RegionTooBusyException to be thrown. This exception is thrown here(another place is when failed to lock the region for write). It&apos;s impossible for both &quot;memstoreSize.get() &amp;lt;= 0&quot; and &quot;this.memstoreSize.get() &amp;gt; this.blockingMemStoreSize&quot; hold at the same time...&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.memstoreSize.get() &amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.blockingMemStoreSize) {
      requestFlush();
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RegionTooBusyException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Above memstore limit, &quot;&lt;/span&gt; + ...memstoreSize=&quot; + memstoreSize.get()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It would help if you can attach the detailed client side log for RegionTooBusyException stack/info? would be great if with region Info and memstoreSize &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13901243" author="ram_krish" created="Fri, 14 Feb 2014 08:53:56 +0000"  >&lt;p&gt;Check this .. I don&apos;t have the client logs. I have only the exception that i got on the client side.&lt;br/&gt;
If you see the logs attached on the server you could see that the no of hlog was greater than 32.&lt;/p&gt;</comment>
                            <comment id="13901256" author="fenghh" created="Fri, 14 Feb 2014 09:10:09 +0000"  >&lt;p&gt;Thanks for check. Yes I noticed regions are selected and forced to flush due to too many hlog files. But that can only confirm the write is really heavy. The problematic region was also triggered to flush by periodicFlusher since it contains old-enough edits, which double confirms this region had not been flushed for quite a long time.&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
The question is why a flush is triggered but doesn&apos;t complete all along...&lt;/p&gt;</comment>
                            <comment id="13901260" author="ram_krish" created="Fri, 14 Feb 2014 09:14:41 +0000"  >&lt;p&gt;That is where i doubt that the memstoreSize is getting calculated wrong.  Because once a flush is requested the flusher thread would try to handle it and if it is not able to flush then it would just ignore and there are no logs in that flow if you see.  Again it is a guess.  &lt;br/&gt;
Or is there any reason why the region is not flushed from the queue, may be not possible.&lt;/p&gt;</comment>
                            <comment id="13901269" author="anoop.hbase" created="Fri, 14 Feb 2014 09:37:40 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2014-02-11 08:44:32,881 DEBUG [RpcServer.handler=1,port=60020] regionserver.HRegion: Flush requested on usertable,user3654,1392107806977.fdbb3242d3b673bbe4790a47bc30576f.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Almost sure that this is because of flush request from batchMutate() as we reached flush size after doing the puts.  This request for flush itself was not continued. No trace of this region getting started to flush even.    So possibility is memstoreSize got miscalculated some how ? !!&lt;/p&gt;</comment>
                            <comment id="13901279" author="fenghh" created="Fri, 14 Feb 2014 09:56:30 +0000"  >&lt;p&gt;Some additional thought triggered by this jira:&lt;/p&gt;

&lt;p&gt;A single problematic region which fails to flush all along can result in too many hlog files since its edits scatter in almost all hlog files, so even though other regions are successfully flushed and their edits are stale in hlog files, those hlog files still can&apos;t be archived because they are &apos;polluted&apos; by the edits of that single problematic region. &apos;Polluted&apos; means most of the edits, say maybe 99%, have been flushed to hfiles and are stale, but still non-archiveable due to the remained 1% edits from the problematic region are not flushed to hfile and still &apos;effective&apos;.&lt;/p&gt;

&lt;p&gt;For this case, the periodicFlusher can&apos;t help though by design it aims to eliminate &apos;polluated&apos; hlog files resulted from region with sparse but steady write(its writes scatter in almost all hlog files but flush can&apos;t be triggered for this region due to its total size doesn&apos;t exceed the flush threshold) by checking if it&apos;s not flushed for a long time. The reason is the region not flushed can be a problematic region, hence can&apos;t be flushed by periodicFlusher as this jira shows, so it can&apos;t eliminate &apos;polluated&apos; hlog files as desired. Too many hlog files can further have bad effect such as more frequent unnecessary flush-check(always)...&lt;/p&gt;

&lt;p&gt;Once the number of hlog files exceeds the threshold to trigger forceful flush, that number will remain without any chance to be lower than that threshold, no matter how frequently other regions are flushed, or whether periodicFlusher triggers flush for other regions or this problematic regions, even though eventually this problematic region refuses/blocks writes to it... This is all because the older hlog files(once exceeds the threshold number) all contain some edits from this problematic region.&lt;/p&gt;

&lt;p&gt;But the idea of background hlog compaction thread introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9873&quot; title=&quot;Some improvements in hlog and hlog split&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9873&quot;&gt;HBASE-9873&lt;/a&gt; can help to reduce number of hlog files even there are problematic un-flushable regions: it reads original hlog files, only keeps the edits of these problematic regions(and of regions not flushed yet) and write them to the new hlog files, then archive the original hlog files, which reduces the number of hlog files. Since the problematic regions will refuse writes after some time(as this jira shows), so the eventual data size of this region left in hlog files won&apos;t increase infinitely. And such problematic regions won&apos;t have that bad ripple effect for the total system.&lt;/p&gt;</comment>
                            <comment id="13901286" author="fenghh" created="Fri, 14 Feb 2014 10:07:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;I restarted another RS and there were region movements with other regions but this region stays with the RS that has this issue&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The problematic region can&apos;t be moved to other RS is because region need to be flushed before moving out, but the problematic region can&apos;t be successfully flushed...&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13901287" author="ram_krish" created="Fri, 14 Feb 2014 10:10:15 +0000"  >&lt;blockquote&gt;&lt;p&gt;The problematic region can&apos;t be moved to other RS is because region need to be flushed before moving out, but the problematic region can&apos;t be successfully flushed&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes that is the reason.  &lt;br/&gt;
I like your idea in your previous comment using &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9873&quot; title=&quot;Some improvements in hlog and hlog split&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9873&quot;&gt;HBASE-9873&lt;/a&gt;.  May be worth pursuing that.   Should be useful.&lt;/p&gt;</comment>
                            <comment id="13902670" author="fenghh" created="Sun, 16 Feb 2014 09:37:57 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;, would you help provide below information? Thanks.&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;The (active) master log file with log from &apos;2014-02-11 08:40:00&apos; to &apos;2014-02-11 10:00:00&apos;&lt;/li&gt;
	&lt;li&gt;The start time(from client side log) when client received &apos;RegionTooBusyException&apos;&lt;/li&gt;
	&lt;li&gt;&apos;hbase.hstore.flusher.count&apos;, if you did configure it&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13902679" author="fenghh" created="Sun, 16 Feb 2014 11:22:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;&apos;hbase.hstore.flusher.count&apos;, if you did configure it&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It can be deduced from the log that this configuration is 1 (default, not configured)&lt;/p&gt;</comment>
                            <comment id="13902724" author="fenghh" created="Sun, 16 Feb 2014 14:37:43 +0000"  >&lt;p&gt;Some progress and conclusion till now for the problematic region*fdbb3242d3b673bbe4790a47bc30576f*(lack some log/info, can deduce only by code and log at hand):&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;internalFlushcache() is never called, so root cause won&apos;t be its memstoreSize is mis-calculated (&apos;memstoreSize &amp;lt;= 0&apos; check is within internalFlushcache)&lt;/li&gt;
	&lt;li&gt;On contrary memstoreSize should be &amp;gt; 0, and there is flushEntry in regionsInQueue, but never pop up to be executed&lt;/li&gt;
	&lt;li&gt;Why it wasn&apos;t moved to other RS is not because it can&apos;t be flushed, but because HMaster didn&apos;t choose it to move out during balance... (this needs master log to confirm)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Below are the deduction process, a bit long...&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;HRegion&apos;s private field &apos;updatesLock&apos;: its writeLock().lock() is only called in internalFlushcache(), and &lt;b&gt;after&lt;/b&gt; below log.
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Started memstore flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;code-quote&quot;&gt;&quot;, current region memstore size &quot;&lt;/span&gt; +...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For the problematic region, above log never be printed, so writeLock().lock() is never called =&amp;gt; the call of lock(updatesLock.readLock(), xxx) in write operations won&apos;t fail, this means RegionTooBusyException &lt;b&gt;can&apos;t&lt;/b&gt; be thrown in below method&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void lock(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Lock lock, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; multiplier)
      &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; RegionTooBusyException, InterruptedIOException {
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; waitTime = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.min(maxBusyWaitDuration,
          busyWaitDuration * &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.min(multiplier, maxBusyWaitMultiplier));
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!lock.tryLock(waitTime, TimeUnit.MILLISECONDS)) {
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RegionTooBusyException(
            &lt;span class=&quot;code-quote&quot;&gt;&quot;failed to get a lock in &quot;&lt;/span&gt; + waitTime + &lt;span class=&quot;code-quote&quot;&gt;&quot; ms. &quot;&lt;/span&gt; +
                &lt;span class=&quot;code-quote&quot;&gt;&quot;regionName=&quot;&lt;/span&gt; + (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.getRegionInfo() == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;code-quote&quot;&gt;&quot;unknown&quot;&lt;/span&gt; :
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
	&lt;li&gt;RegionTooBusyException occurs in two places, so it &lt;b&gt;must&lt;/b&gt; be thrown here:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void checkResources()
    &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; RegionTooBusyException {
    &lt;span class=&quot;code-comment&quot;&gt;// If catalog region, &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; not impose resource constraints or block updates.
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.getRegionInfo().isMetaRegion()) &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;

    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.memstoreSize.get() &amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.blockingMemStoreSize) {
      requestFlush();
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RegionTooBusyException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Above memstore limit, &quot;&lt;/span&gt; +
          &lt;span class=&quot;code-quote&quot;&gt;&quot;regionName=&quot;&lt;/span&gt; + (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.getRegionInfo() == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;code-quote&quot;&gt;&quot;unknown&quot;&lt;/span&gt; :
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;b&gt;this means memstoreSize &amp;gt; 0(also means it shouldn&apos;t &amp;lt;= 0 in internalFlushcache())&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;In above code, requestFlush() is called each time before RegionTooBusyException is thrown, the requestFlush()&apos;s implementation:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void requestFlush() {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.rsServices == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
    }
    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (writestate) {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writestate.isFlushRequested()) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
      }
      writestate.flushRequested = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
    }
    &lt;span class=&quot;code-comment&quot;&gt;// Make request outside of synchronize block; HBASE-818.
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.rsServices.getFlushRequester().requestFlush(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
      LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Flush requested on &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;);
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;requestFlush is called the same times as RegionTooBusyException is thrown, but &quot;Flush requested on&quot; log for this region is printed only once...so in this method, it must return &lt;b&gt;before&lt;/b&gt; the LOG.debug(), since rsServices is not null, so it must by &lt;b&gt;this.writestate.isFlushRequested() is true&lt;/b&gt; =&amp;gt; &lt;b&gt;writestate.flushRequested should always be true&lt;/b&gt; each time RegionTooBusyException is thrown&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;&quot;Flush requested on&quot; log does be printed once for the problematic region, means &apos;flushRequested&apos; ever be set to true. And HRegion.writestate.flushRequested is set back to false only in below code besides region initialization
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; flushcache() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
  ...
  &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; result = internalFlushcache(status);

        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (coprocessorHost != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
          status.setStatus(&lt;span class=&quot;code-quote&quot;&gt;&quot;Running post-flush coprocessor hooks&quot;&lt;/span&gt;);
          coprocessorHost.postFlush();
        }

        status.markComplete(&lt;span class=&quot;code-quote&quot;&gt;&quot;Flush successful&quot;&lt;/span&gt;);
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; result;
      } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
        &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (writestate) {
          writestate.flushing = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
          &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writestate.flushRequested = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
          writestate.notifyAll();
        }
      }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This means above &apos;try&apos; block never be called, otherwise the flushRequested in finally block should be set to false, above HRegion.flushcache method is the critical path for flush task coming out of flushQueue(another places calling internalFlushcache are replay split log and when closing region) ==&amp;gt; &lt;b&gt;internalFlushcache() is never called for flush task of this problematic region from flushQueue&lt;/b&gt;, this also means the root cause is not  &apos;memstoreSize &amp;lt;=0&apos; (which is checked within internalFlushcache), so adding log before this statement won&apos;t help for diagnose even it reproduces next time&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;&apos;forcing flush of&apos; / &apos;periodicFlusher requesting flush for&apos; means requestFlush/requestDelayedFlush are called, they all do nothing since &quot;if (!regionsInQueue.containsKey(r))&quot; fail, which means regionsInQueue still contains this region&lt;/li&gt;
	&lt;li&gt;another problematic region is &lt;b&gt;6b788c498503ddd3e1433a4cd3fb4e39&lt;/b&gt;, its sympotom is &lt;b&gt;exactly the same&lt;/b&gt; as &lt;b&gt;fdbb3242d3b673bbe4790a47bc30576f&lt;/b&gt;, except it&apos;s flushed at &apos;2014-02-11 09:51:11&apos; due to closing (should be part of the region move due to balance, also need master side log to confirm), when flushing its memstoreSize is normal(256.2M). And &lt;b&gt;why the flush due to closing can succeed is because it&apos;s triggered directly without polling from flushQueue&lt;/b&gt;. This can be another side evidence why &lt;b&gt;fdbb3242d3b673bbe4790a47bc30576f&lt;/b&gt; is not flushed not because its memstoreSize &amp;lt;=0&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;So the root cause (very likely) should be for some reason the flushEntry can&apos;t be polled out from flushQueue(or entry added to regionsInQueue but failed to be added to flushQueue, or flushEntry is consumed without triggering flush task but failed to remove according entry in regionsInQueue), and the regionsInQueue still thinks it contains entry for this region(hence reject all later flush requests from &apos;too many logs&apos; and periodicFlusher).  But a manual designated move for this problematic region can succeed since preflush/flush of closing trigger flush directly without polling from flushQueue.&lt;/p&gt;</comment>
                            <comment id="13902732" author="fenghh" created="Sun, 16 Feb 2014 15:36:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;But a manual designated move for this problematic region can succeed since preflush/flush of closing trigger flush directly without polling from flushQueue&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;A manual flush (from client/shell) is also OK here(without polling from flushQueue) and more lightweight since without closing and re-opening&lt;/p&gt;</comment>
                            <comment id="13902830" author="yuzhihong@gmail.com" created="Sun, 16 Feb 2014 20:42:57 +0000"  >&lt;p&gt;@Ram:&lt;br/&gt;
Can you enable &quot;hbase.regionserver.servlet.show.queuedump&quot; so that you can get dump of flushQueue ?&lt;/p&gt;</comment>
                            <comment id="13902948" author="ram_krish" created="Mon, 17 Feb 2014 04:40:10 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can you enable &quot;hbase.regionserver.servlet.show.queuedump&quot; so that you can get dump of flushQueue ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This cluster is stopped now.  So next time when i run i can enable this.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fenghh&quot; class=&quot;user-hover&quot; rel=&quot;fenghh&quot;&gt;Honghua Feng&lt;/a&gt;&lt;br/&gt;
Thanks for the analysis.  I was actually analysing another part of the code to see if there is any chance where the flushQueue is not able to pick up the region as you said and mainly due to the equals and compareTo method in FlushRegionEntry.  But could not find any proper evidence.  What I was thiniking was from time 2014-02-11 08:44:32,433 to 2014-02-11 08:44:34,033 there were lot of flush requests, so may be some problem with the way the region was picked up based on the time based comparsion in the queue.  But later felt that because every time there was a flush request.&lt;br/&gt;
The HRegion.shouldFlush() does not check for the size instead only checks for the time of the oldest edit. Also the HLog rollWriter() also checks if there was an oldest edit.  So this is what made me think may be the flush size is calculated wrong.  &lt;br/&gt;
I will try to get the master logs.  The cluster is stopped now but i think the logs should be available.&lt;/p&gt;</comment>
                            <comment id="13902971" author="fenghh" created="Mon, 17 Feb 2014 05:25:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;mainly due to the equals and compareTo method in FlushRegionEntry&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I agree with you on this: equals/compareTo should use things such as region.hashCode() to make entries unique when getDelay of two entries is equal(make equals/compareTo not to return 0/true), since flushQueue(DelayQueue) uses priority queue internally hosting flush entry.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I will try to get the master logs. The cluster is stopped now but i think the logs should be available.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Thanks. I just want master logs to confirm another problematic region &lt;b&gt;6b788c498503ddd3e1433a4cd3fb4e39&lt;/b&gt; was closed due to master selected it to move out when do balance.&lt;/p&gt;

&lt;p&gt;Below are facts for region fdbb3242d3b673bbe4790a47bc30576f I can be sure after digging yesterday:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Its memstoreSize &amp;gt; 0  (RegionTooBusyException is thrown due to this fact)&lt;/li&gt;
	&lt;li&gt;internalFlushcache never be called&lt;/li&gt;
	&lt;li&gt;writestate.flushRequested is true (prevent printing &apos;Flush requested on&apos; log for each write operation before throwing RegionTooBusyException)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Below are high possible but not confirmed yet:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;regionsInQueue contains map entry for this region (reject flush entries generated by rollWriter/periodicFlusher)&lt;/li&gt;
	&lt;li&gt;no flush entry ever polled out for this region from flushQueue, or polled out once but failed to trigger internalFlushcache and remove corresponding map entry from regionsInQueue (the former is more likely)&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13902978" author="fenghh" created="Mon, 17 Feb 2014 05:43:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;The HRegion.shouldFlush() does not check for the size instead only checks for the time of the oldest edit. Also the HLog rollWriter() also checks if there was an oldest edit&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If my understanding is correct, these are by design. These two are both to flush regions with old enough edits even their memstoreSize is below flush threshold(to reduce the number of log files at the cost of hfiles with small sizes), so it&apos;s natural they don&apos;t check whether memstoreSize &amp;gt; someValue(they assume and tolerate memstoreSize with small size). And a region will be selected to flush by rollWriter/periodicalFlusher only when they (do) have some &apos;old&apos; edits, so the region&apos;s memstoreSize &lt;b&gt;must not&lt;/b&gt; &amp;lt;= 0(this is an implicit invariant and can be asserted, but not be check-and-exit)&lt;/p&gt;</comment>
                            <comment id="13903023" author="ram_krish" created="Mon, 17 Feb 2014 07:51:49 +0000"  >&lt;p&gt;Master logs that you asked for &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fenghh&quot; class=&quot;user-hover&quot; rel=&quot;fenghh&quot;&gt;Honghua Feng&lt;/a&gt;.  For the problematic region i could not find anything specific there.&lt;/p&gt;</comment>
                            <comment id="13903067" author="fenghh" created="Mon, 17 Feb 2014 08:45:25 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are &lt;b&gt;two&lt;/b&gt; problematic regions : fdbb3242d3b673bbe4790a47bc30576f and 6b788c498503ddd3e1433a4cd3fb4e39 &amp;#8212; both are requested to flush  from time to time but no flush ever happened within &lt;b&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;2014-02-11 08:44,  2014-02-11 09:51&amp;#93;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;But at 2014-02-11 09:51:11, 6b788c498503ddd3e1433a4cd3fb4e39 is flushed due to a close operation, and I confirm in the master log you provided just now that the close is part of a move operation triggered by master when it does balance &amp;#8212; 6b788c498503ddd3e1433a4cd3fb4e39 is flushed because it is chosen as a move target for balance and flushed during closing.&lt;/p&gt;

&lt;p&gt;While fdbb3242d3b673bbe4790a47bc30576f is not chosen as a move target for balance by master(also can be confirmed in the master log), that&apos;s why it doesn&apos;t be flushed all along.&lt;/p&gt;

&lt;p&gt;If we suppose these two regions have the same problem regarding non-flush-able internally by regionserver, and 6b788c498503ddd3e1433a4cd3fb4e39 is successfully flushed by a sub-phase of close operation because flush as part of close doesn&apos;t bother flushQueue, and the flush log shows that the memstore of 6b788c498503ddd3e1433a4cd3fb4e39 is 256.2M when flushing it. That&apos;s a side evidence that fdbb3242d3b673bbe4790a47bc30576f&apos;s memstore is also &amp;gt; 0, it&apos;s not flushed just because its flush entry can&apos;t be polled out of flushQueue...&lt;/p&gt;</comment>
                            <comment id="13903073" author="fenghh" created="Mon, 17 Feb 2014 08:51:03 +0000"  >&lt;p&gt;log for 6b788c498503ddd3e1433a4cd3fb4e39 in regionserver and master, log for fdbb3242d3b673bbe4790a47bc30576f in regionserver and master are attached for reference.&lt;/p&gt;

&lt;p&gt;You can find the similarity(before master balance) and difference(after master balance) between these two regions.&lt;/p&gt;

&lt;p&gt;6b788c498503ddd3e1433a4cd3fb4e39 would be the problematic region if it wasn&apos;t chosen as a move target when master did balance...&lt;/p&gt;</comment>
                            <comment id="13903168" author="ram_krish" created="Mon, 17 Feb 2014 12:11:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;If we suppose these two regions have the same problem regarding non-flush-able internally by regionserver, and 6b788c498503ddd3e1433a4cd3fb4e39 is successfully flushed by a sub-phase of close operation because flush as part of close doesn&apos;t bother flushQueue&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is one thing I have not noticed that while flush happens via close then flushQueue is not used.  By design that makes sense.  &lt;br/&gt;
One thing I wanted to raise a JIRA is that should flushregionentry use EnvirnonmentEdge.currentMillis instead of System.currentMilllis.  I don&apos;t know how far it benefits but I think that can be done.&lt;br/&gt;
So there is some reason why flushQueue is not picking up that region? &lt;/p&gt;</comment>
                            <comment id="13903181" author="fenghh" created="Mon, 17 Feb 2014 12:31:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;So there is some reason why flushQueue is not picking up that region?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think &lt;b&gt;yes&lt;/b&gt;. It&apos;s sure RegionTooBusyException is thrown due to &apos;memstoreSize &amp;gt; blockingMemStoreSize&apos; (see my above deduction process), that means it can&apos;t be the case that &apos;memstoreSize &amp;lt;= 0&apos; (and the previously problematic region 6b788c498503ddd3e1433a4cd3fb4e39 has memstore &amp;gt; 0 (256.2M) when flushing)&lt;/p&gt;

&lt;p&gt;Another two things for sure are:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;internalFlushcache was never called;&lt;/li&gt;
	&lt;li&gt;writestate.flushRequested was never reset to false after it&apos;s set to true&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;And one thing is highly likely (but can&apos;t prove directly by code and log at hand&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;) is regionsInQueue holds entry for region fdbb3242d3b673bbe4790a47bc30576f, since all later flush requests generated by rollWriter and periodicFlusher are rejected by (!regionsInQueue.containsKey(r))&lt;/p&gt;</comment>
                            <comment id="13903197" author="fenghh" created="Mon, 17 Feb 2014 12:41:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;One thing I wanted to raise a JIRA is that should flushregionentry use EnvirnonmentEdge.currentMillis instead of System.currentMilllis. I don&apos;t know how far it benefits but I think that can be done.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Wonder if this JIRA is related to this. But if you want to raise a JIRA to replace System.currentMilllis with EnvirnonmentEdge.currentMillis, it&apos;s better to do such replace for all occurrences in HBase in a systematic way, since such replace can be done unconditionally without difference, right? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13903245" author="v.himanshu" created="Mon, 17 Feb 2014 13:53:23 +0000"  >&lt;p&gt;Yeah, doesn&apos;t look like a memstore size being 0 issue. &lt;/p&gt;

&lt;p&gt;How many FlushHandlers were there ?&lt;/p&gt;</comment>
                            <comment id="13903273" author="fenghh" created="Mon, 17 Feb 2014 14:32:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;How many FlushHandlers were there ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Should be 1, from the log we can see next flush was started only after the previous one finished, and considering this occurred under heavy write scenario, sounds impossible for multiple concurrent FlushHandlers to run strictly serially by chance all the time. Certainly &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; can confirm this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13910245" author="ram_krish" created="Mon, 24 Feb 2014 12:25:52 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fenghh&quot; class=&quot;user-hover&quot; rel=&quot;fenghh&quot;&gt;Honghua Feng&lt;/a&gt;&lt;br/&gt;
The number of flushers should be the default value.  I did not change that.  Sorry for the late reply.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;But if you want to raise a JIRA to replace System.currentMilllis with EnvirnonmentEdge.currentMillis&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes better to change.  I am not saying this JIRA is because of this, but just wanted to ensure we change it.  Will raise one.&lt;/p&gt;</comment>
                            <comment id="14004827" author="apurtell" created="Wed, 21 May 2014 16:00:41 +0000"  >&lt;p&gt;Where are we with this issue?&lt;/p&gt;</comment>
                            <comment id="14076303" author="matvey14" created="Mon, 28 Jul 2014 15:29:19 +0000"  >&lt;p&gt;We&apos;re also hitting this issue. The RegionServer is unable to flush one of the regions. I am seeing this in the logs:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2014-07-24 14:58:42,970 INFO org.apache.hadoop.hbase.regionserver.CompactSplitThread: Completed compaction: Request = regionName=users,53400000000000000000000000000000000000,1404907131059.6eae263f1f0fd698cca73964118e16b0., storeName=ids, fileCount=3, fileSize=185.0 M, priority=6, time=2961355376528391; duration=7sec
2014-07-24 14:58:44,778 INFO org.apache.hadoop.hbase.regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region users,87080000000000000000000000000000000000,1404907131062.2a8dd55c1011e92f4e32d705196f1e15. after a delay of 9557
2014-07-24 14:58:54,778 INFO org.apache.hadoop.hbase.regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region users,87080000000000000000000000000000000000,1404907131062.2a8dd55c1011e92f4e32d705196f1e15. after a delay of 9316
2014-07-24 14:59:04,778 INFO org.apache.hadoop.hbase.regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region users,87080000000000000000000000000000000000,1404907131062.2a8dd55c1011e92f4e32d705196f1e15. after a delay of 7454
2014-07-24 14:59:14,778 INFO org.apache.hadoop.hbase.regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region users,87080000000000000000000000000000000000,1404907131062.2a8dd55c1011e92f4e32d705196f1e15. after a delay of 11197
2014-07-24 14:59:24,778 INFO org.apache.hadoop.hbase.regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region users,87080000000000000000000000000000000000,1404907131062.2a8dd55c1011e92f4e32d705196f1e15. after a delay of 19777
2014-07-24 14:59:34,778 INFO org.apache.hadoop.hbase.regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region users,87080000000000000000000000000000000000,1404907131062.2a8dd55c1011e92f4e32d705196f1e15. after a delay of 20814
2014-07-24 14:59:44,779 INFO org.apache.hadoop.hbase.regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region users,87080000000000000000000000000000000000,1404907131062.2a8dd55c1011e92f4e32d705196f1e15. after a delay of 22542
2014-07-24 14:59:54,779 INFO org.apache.hadoop.hbase.regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region users,87080000000000000000000000000000000000,1404907131062.2a8dd55c1011e92f4e32d705196f1e15. after a delay of 16096
2014-07-24 15:00:04,779 INFO org.apache.hadoop.hbase.regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region users,87080000000000000000000000000000000000,1404907131062.2a8dd55c1011e92f4e32d705196f1e15. after a delay of 21794
2014-07-24 15:00:14,779 INFO org.apache.hadoop.hbase.regionserver.HRegionServer: regionserver60020.periodicFlusher requesting flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region users,87080000000000000000000000000000000000,1404907131062.2a8dd55c1011e92f4e32d705196f1e15. after a delay of 20873
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The unfortunate thing here is that the RegionServer never recovers, even after we stop doing Puts.&lt;/p&gt;

&lt;p&gt;We&apos;re on 0.96.1.1-cdh5.0.2&lt;/p&gt;

&lt;p&gt;Are there any workarounds for this? Would setting hbase.hstore.flusher.count to 2 help? (I&apos;m running with default 1).&lt;/p&gt;</comment>
                            <comment id="14076315" author="matvey14" created="Mon, 28 Jul 2014 15:39:59 +0000"  >&lt;p&gt;I&apos;ve attached &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12658147/compaction-queue.png&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12658147/compaction-queue.png&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;It shows that once the RS hits the condition, the compactions just begin to queue up.&lt;/p&gt;</comment>
                            <comment id="14081442" author="apurtell" created="Thu, 31 Jul 2014 20:47:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;Would setting hbase.hstore.flusher.count to 2 help? (I&apos;m running with default 1).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That seems a reasonable stab in the dark &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=matvey14&quot; class=&quot;user-hover&quot; rel=&quot;matvey14&quot;&gt;Matt Kapilevich&lt;/a&gt;. It won&apos;t address the underlying issue I suspect but may move it out for you.&lt;/p&gt;</comment>
                            <comment id="14280038" author="johnking0099" created="Fri, 16 Jan 2015 09:52:56 +0000"  >&lt;p&gt;Hi, All&lt;/p&gt;

&lt;p&gt;I also hit the issue yesterday. I think Honghua Feng&apos;s analysis is totally right.&lt;br/&gt;
The fqe entry in flushQueue may have been removed before being polled out by the MemStoreFlusher.&lt;/p&gt;

&lt;p&gt;Here are some code from MemStoreFlusher:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;CODE-BEGIN&amp;#93;&lt;/span&gt;&lt;br/&gt;
class MemStoreFlusher implements FlushRequester {&lt;/p&gt;

&lt;p&gt;  ...&lt;/p&gt;

&lt;p&gt;  private boolean flushRegion(final HRegion region, final boolean emergencyFlush) {&lt;br/&gt;
    synchronized (this.regionsInQueue) {&lt;br/&gt;
      FlushRegionEntry fqe = this.regionsInQueue.remove(region);&lt;br/&gt;
      if (fqe != null &amp;amp;&amp;amp; emergencyFlush) &lt;/p&gt;
{
        // Need to remove from region from delay queue.  When NOT an
        // emergencyFlush, then item was removed via a flushQueue.poll.
        flushQueue.remove(fqe);
     }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    ...&lt;/p&gt;

&lt;p&gt;  }&lt;/p&gt;

&lt;p&gt;  ...&lt;/p&gt;

&lt;p&gt;  static class FlushRegionEntry implements FlushQueueEntry {&lt;/p&gt;

&lt;p&gt;    ...&lt;/p&gt;

&lt;p&gt;    @Override&lt;br/&gt;
    public int compareTo(Delayed other) &lt;/p&gt;
{
      return Long.valueOf(getDelay(TimeUnit.MILLISECONDS) -
        other.getDelay(TimeUnit.MILLISECONDS)).intValue();
    }

&lt;p&gt;    @Override&lt;br/&gt;
    public boolean equals(Object obj) {&lt;br/&gt;
      if (this == obj) &lt;/p&gt;
{
        return true;
      }
&lt;p&gt;      if (obj == null || getClass() != obj.getClass()) &lt;/p&gt;
{
        return false;
      }
&lt;p&gt;      Delayed other = (Delayed) obj;&lt;br/&gt;
      return compareTo(other) == 0;&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    ...&lt;br/&gt;
  }&lt;br/&gt;
}&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;CODE-END&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;From the code, we can tell:&lt;/p&gt;

&lt;p&gt;1. Two FlushRegionEntry instances were thought be equal only when they have the same delay time.&lt;br/&gt;
2. When emergencyFlush was true, an entry may be removed from the flushQueue.&lt;/p&gt;

&lt;p&gt;Then, if two different fqe (say &quot;A&quot; and &quot;B&quot;) have exactly the same delay time, and &quot;B&quot; was flushed as an emergencyFlush,&lt;br/&gt;
&quot;A&quot; may be removed from the fulshQueue instead of &quot;B&quot;.&lt;/p&gt;

&lt;p&gt;Because RegionA.writestate.isFlushRequested() always return true and RegionA was still in (MemStoreFlusher).regionsInQueue,&lt;br/&gt;
both (MemStoreFlusher).requestFlush (HRegion r) and (MemStoreFlusher).requestDelayedFlush(HRegion r, long randomDelay) cannot submit RegionA&lt;br/&gt;
into flushQueue. That&apos;s why PeriodicMemstoreFlusher and (HRegion).requestFlush () cannot work.&lt;/p&gt;

&lt;p&gt;The problematic region can only be flushed when&lt;/p&gt;

&lt;p&gt;1. Region server&apos;s low water mark reached;&lt;br/&gt;
2. Client side RPC (Flush/Split/Merge);&lt;br/&gt;
3. Buckload completting;&lt;br/&gt;
4. Snapshot taking;&lt;br/&gt;
5. Region closing.&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;which may cause the online region refused to serve writting request for a long time.&lt;/p&gt;

&lt;p&gt;PS: Sorry, it&apos;s my first time use confluence, my comment may seems a little mess.&lt;/p&gt;</comment>
                            <comment id="14280050" author="johnking0099" created="Fri, 16 Jan 2015 10:10:27 +0000"  >&lt;p&gt;And for the problematic region, only when Region server&apos;s low water mark reached, can cause region in  (MemStoreFlusher).regionsInQueue dequeue.&lt;br/&gt;
i.e. type &quot;flush&quot; in HBase shell cannot resolve this issue.&lt;/p&gt;</comment>
                            <comment id="14281194" author="yuzhihong@gmail.com" created="Sat, 17 Jan 2015 03:32:32 +0000"  >&lt;p&gt;Tentative patch which uses region&apos;s hashcode as tie-breaker.&lt;/p&gt;</comment>
                            <comment id="14281204" author="hadoopqa" created="Sat, 17 Jan 2015 04:29:32 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12692895/10499-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12692895/10499-v2.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 092c91eb0fc2a6b4044183e9ece71dd03711045d.&lt;br/&gt;
  ATTACHMENT ID: 12692895&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestFlushRegionEntry&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12498//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14281208" author="johnking0099" created="Sat, 17 Jan 2015 04:50:42 +0000"  >&lt;p&gt;Hi,Ted&lt;br/&gt;
In your v3 patch, you used a strong type conversion, which converted from Delay to FRE, I think it should be FQE.&lt;/p&gt;</comment>
                            <comment id="14281209" author="johnking0099" created="Sat, 17 Jan 2015 04:51:13 +0000"  >&lt;p&gt;Hi,Ted&lt;br/&gt;
In your v3 patch, you used a strong type conversion, which converted from Delay to FRE, I think it should be FQE.&lt;/p&gt;</comment>
                            <comment id="14281210" author="johnking0099" created="Sat, 17 Jan 2015 04:51:27 +0000"  >&lt;p&gt;Hi,Ted&lt;br/&gt;
In your v3 patch, you used a strong type conversion, which converted from Delay to FRE, I think it should be FQE.&lt;/p&gt;</comment>
                            <comment id="14281211" author="johnking0099" created="Sat, 17 Jan 2015 04:51:31 +0000"  >&lt;p&gt;Hi,Ted&lt;br/&gt;
In your v3 patch, you used a strong type conversion, which converted from Delay to FRE, I think it should be FQE.&lt;/p&gt;</comment>
                            <comment id="14281212" author="johnking0099" created="Sat, 17 Jan 2015 04:51:32 +0000"  >&lt;p&gt;Hi,Ted&lt;br/&gt;
In your v3 patch, you used a strong type conversion, which converted from Delay to FRE, I think it should be FQE.&lt;/p&gt;</comment>
                            <comment id="14281214" author="yuzhihong@gmail.com" created="Sat, 17 Jan 2015 05:03:20 +0000"  >&lt;p&gt;@John:&lt;br/&gt;
I get your point &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14281241" author="hadoopqa" created="Sat, 17 Jan 2015 07:08:01 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12692899/10499-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12692899/10499-v4.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 092c91eb0fc2a6b4044183e9ece71dd03711045d.&lt;br/&gt;
  ATTACHMENT ID: 12692899&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12500//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14282212" author="ram_krish" created="Mon, 19 Jan 2015 07:05:21 +0000"  >&lt;p&gt;Going thro the comments again and the excellent analysis by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fenghh&quot; class=&quot;user-hover&quot; rel=&quot;fenghh&quot;&gt;Honghua Feng&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=johnking0099&quot; class=&quot;user-hover&quot; rel=&quot;johnking0099&quot;&gt;John King&lt;/a&gt; I can see that the log that comes out of global heap pressure&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2014-02-11 08:44:30,580 INFO  [&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-18] regionserver.MemStoreFlusher: Flush of region usertable,user1854,1392107806972.e001ae4de867efc4c4c092e7e5a204e1. due to global heap pressure
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Does not appear for the problematic regions.  So this would ensure that we have not entered the removal from FQE for these regions.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (fqe != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; emergencyFlush) {
        &lt;span class=&quot;code-comment&quot;&gt;// Need to remove from region from delay queue.  When NOT an
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// emergencyFlush, then item was removed via a flushQueue.poll.
&lt;/span&gt;        flushQueue.remove(fqe);
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;which means they had been removed from FQE but not from regionQueue in such a way that FQE was wrongly mapped to an element which was not removed from the regionQueue.  So if region B had to be flushed and it was removed from regionQueue, but from FQE region A got removed.&lt;br/&gt;
So the delay is calculated &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getDelay(TimeUnit unit) {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; unit.convert(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.whenToExpire - EnvironmentEdgeManager.currentTime(),
          TimeUnit.MILLISECONDS);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;where whenToExpire is updated in two places, creation of the FRE which is actually synchronized with the regionQueue.  So Ideally we would not have two regions with the same whenToExpire (considering there is no precision issue)  and in requeue().   The requeue() could update the whenToExpire to the same ts. But here it has not happened.  &lt;br/&gt;
If we are going to change the implementation of the equals() in FQE I would suggest compare if the region is the same and then go for the getDelay check in the compareTo()&lt;/p&gt;</comment>
                            <comment id="14282236" author="hadoopqa" created="Mon, 19 Jan 2015 07:59:53 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12693025/HBASE-10499_v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12693025/HBASE-10499_v5.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 03e17168c3feab765fec26693318f4b8ae6a9468.&lt;br/&gt;
  ATTACHMENT ID: 12693025&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestFlushRegionEntry&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12508//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14282240" author="ram_krish" created="Mon, 19 Jan 2015 08:06:45 +0000"  >&lt;p&gt;For the test case failure- we may need to add the change as in Ted&apos;s patch.&lt;/p&gt;</comment>
                            <comment id="14282301" author="yuzhihong@gmail.com" created="Mon, 19 Jan 2015 09:34:39 +0000"  >&lt;p&gt;Thanks for the comment Ram.&lt;/p&gt;

&lt;p&gt;FlushQueueEntry#equals() calls FlushQueueEntry#compareTo().&lt;br/&gt;
So I think patch v4 should achieve the goal of making sure the correct region is removed from the queue.&lt;/p&gt;</comment>
                            <comment id="14282319" author="ram_krish" created="Mon, 19 Jan 2015 09:54:48 +0000"  >&lt;p&gt;Ya, but I don&apos;t think we need to calculate the hashCode after finding the delay.  We should be sure that we are calculating the equals/compareTo for the same region and then find the delay.  Also finding hashCode() would involve more operations also. This is my thought. &lt;/p&gt;</comment>
                            <comment id="14282362" author="johnking0099" created="Mon, 19 Jan 2015 10:33:30 +0000"  >&lt;p&gt;I think Ram&apos;s patch is simpler. And simple is always good.&lt;br/&gt;
The regression failed because one test case in /hbase/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestFlushRegionEntry.java need to be modified.&lt;br/&gt;
The test case was designed for the old equals implementation.&lt;/p&gt;</comment>
                            <comment id="14282574" author="yuzhihong@gmail.com" created="Mon, 19 Jan 2015 14:56:24 +0000"  >&lt;p&gt;The contract of the Comparable interface recommends that natural orderings be consistent with equals.&lt;/p&gt;
</comment>
                            <comment id="14282590" author="yuzhihong@gmail.com" created="Mon, 19 Jan 2015 15:10:35 +0000"  >&lt;p&gt;Please also take a look at &lt;a href=&quot;http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/concurrent/DelayQueue.java#116&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/concurrent/DelayQueue.java#116&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14283277" author="johnking0099" created="Tue, 20 Jan 2015 01:29:44 +0000"  >&lt;p&gt;Hi Ted, your point is very reasonable.&lt;/p&gt;</comment>
                            <comment id="14287092" author="johnking0099" created="Thu, 22 Jan 2015 08:07:33 +0000"  >&lt;p&gt;+1 for patch &quot;10499-v4.txt&quot;&lt;/p&gt;</comment>
                            <comment id="14287402" author="anoop.hbase" created="Thu, 22 Jan 2015 13:18:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;int getHashcode();&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ted, need to add such a new method to interface? Or just call hasCode() from compareTo() and make sure to implement hashCode() in FlushRegionEntry?  Just asking.&lt;/p&gt;

&lt;p&gt;Patch looks good.&lt;/p&gt;</comment>
                            <comment id="14287418" author="yuzhihong@gmail.com" created="Thu, 22 Jan 2015 13:35:37 +0000"  >&lt;p&gt;Thanks for taking a look, Anoop.&lt;br/&gt;
Comparable, Delayed and FlushQueueEntry are all interfaces. So hashcode method has to be added - it is just a matter of the method name.&lt;/p&gt;

&lt;p&gt;Aligning with Java&apos;s convention would be nice. Patch v6 does that.&lt;/p&gt;</comment>
                            <comment id="14287856" author="hadoopqa" created="Thu, 22 Jan 2015 17:50:46 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12693910/10499-v6.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12693910/10499-v6.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 833feefbf977a8208f8f71f5f3bd9b027d54961f.&lt;br/&gt;
  ATTACHMENT ID: 12693910&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): 	at org.apache.hadoop.hbase.io.encoding.TestDataBlockEncoders.testSeekingOnSample(TestDataBlockEncoders.java:205)&lt;br/&gt;
	at org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite.testNotCachingDataBlocksDuringCompactionInternals(TestCacheOnWrite.java:458)&lt;br/&gt;
	at org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite.testNotCachingDataBlocksDuringCompaction(TestCacheOnWrite.java:410)&lt;br/&gt;
	at org.apache.hadoop.hbase.io.hfile.TestScannerSelectionUsingTTL.testScannerSelection(TestScannerSelectionUsingTTL.java:118)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestAcidGuarantees.testScanAtomicity(TestAcidGuarantees.java:354)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12548//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14287872" author="yuzhihong@gmail.com" created="Thu, 22 Jan 2015 18:04:58 +0000"  >&lt;p&gt;The tests reported hanging actually passed:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 82.363 sec - in org.apache.hadoop.hbase.TestAcidGuarantees
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;See also the summary:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+1 core tests. The patch passed unit tests in .
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Local run of TestDataBlockEncoders, TestCacheOnWrite, TestScannerSelectionUsingTTL and TestAcidGuarantees passed too.&lt;/p&gt;

&lt;p&gt;Let me attach patch v6 again.&lt;/p&gt;</comment>
                            <comment id="14288136" author="hadoopqa" created="Thu, 22 Jan 2015 20:06:30 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12693941/10499-v6.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12693941/10499-v6.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 319f9bb7918af8cfe7e65f97b654f37f0d5983f3.&lt;br/&gt;
  ATTACHMENT ID: 12693941&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.coprocessor.TestMasterObserver.testRegionTransitionOperations(TestMasterObserver.java:1604)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestJoinedScanners.testJoinedScanners(TestJoinedScanners.java:92)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12551//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14288155" author="yuzhihong@gmail.com" created="Thu, 22 Jan 2015 20:18:41 +0000"  >&lt;p&gt;From QA run #12551 :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 /x1/jenkins/jenkins-home/jobs/PreCommit-HBASE-Build/builds/2015-01-22_18-10-22/archive/hbase-server/target/surefire-reports/org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat-output.txt may be corrupted
	at jsync.protocol.FileSequenceReader.read(FileSequenceReader.java:45)
	at com.cloudbees.jenkins.plugins.jsync.archiver.JSyncArtifactManager.remoteSync(JSyncArtifactManager.java:145)
	at com.cloudbees.jenkins.plugins.jsync.archiver.JSyncArtifactManager.archive(JSyncArtifactManager.java:68)
	at hudson.tasks.ArtifactArchiver.perform(ArtifactArchiver.java:140)
	at hudson.tasks.BuildStepMonitor$1.perform(BuildStepMonitor.java:20)
	at hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:756)
	at hudson.model.AbstractBuild$AbstractBuildExecution.performAllBuildSteps(AbstractBuild.java:720)
	at hudson.model.Build$BuildExecution.post2(Build.java:182)
	at hudson.model.AbstractBuild$AbstractBuildExecution.post(AbstractBuild.java:669)
	at hudson.model.Run.execute(Run.java:1731)
	at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)
	at hudson.model.ResourceController.execute(ResourceController.java:88)
	at hudson.model.Executor.run(Executor.java:232)
Recording test results
[description-setter] Could not determine description.
Finished: FAILURE
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above indicated problem with build infrastructure.&lt;/p&gt;</comment>
                            <comment id="14288336" author="hadoopqa" created="Thu, 22 Jan 2015 22:23:37 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12693983/10499-v7.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12693983/10499-v7.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 319f9bb7918af8cfe7e65f97b654f37f0d5983f3.&lt;br/&gt;
  ATTACHMENT ID: 12693983&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12559//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14288818" author="anoop.hbase" created="Fri, 23 Jan 2015 06:00:27 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="14288938" author="hadoopqa" created="Fri, 23 Jan 2015 07:49:53 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12694093/10499-v8.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12694093/10499-v8.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 5fbf80ee5ecb288804d2d2d042199dcd834ae848.&lt;br/&gt;
  ATTACHMENT ID: 12694093&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12567//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14289396" author="yuzhihong@gmail.com" created="Fri, 23 Jan 2015 15:36:12 +0000"  >&lt;p&gt;Thanks for the reviews - they&apos;re really helpful.&lt;/p&gt;

&lt;p&gt;Will commit later today.&lt;/p&gt;</comment>
                            <comment id="14289775" author="hudson" created="Fri, 23 Jan 2015 19:21:25 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6049 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6049/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6049/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10499&quot; title=&quot;In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10499&quot;&gt;&lt;del&gt;HBASE-10499&lt;/del&gt;&lt;/a&gt; In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException (Ram and Ted) (tedyu: rev 74adb11f4c504abbb6a52de72b53883ad7b952b4)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestFlushRegionEntry.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14289859" author="hudson" created="Fri, 23 Jan 2015 20:01:33 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.1 #102 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/102/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/102/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10499&quot; title=&quot;In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10499&quot;&gt;&lt;del&gt;HBASE-10499&lt;/del&gt;&lt;/a&gt; In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException (Ram and Ted) (tedyu: rev 3a529c04cebb4f3debdfd42fb00d3736dc2ea2fd)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestFlushRegionEntry.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14289919" author="apurtell" created="Fri, 23 Jan 2015 20:33:46 +0000"  >&lt;p&gt;This was reported against 0.98, shouldn&apos;t this be fixed in/for 0.98?&lt;/p&gt;</comment>
                            <comment id="14289923" author="apurtell" created="Fri, 23 Jan 2015 20:35:05 +0000"  >&lt;p&gt;Let me see about 0.98.&lt;/p&gt;</comment>
                            <comment id="14290060" author="yuzhihong@gmail.com" created="Fri, 23 Jan 2015 21:56:14 +0000"  >&lt;p&gt;Patch for 0.98 adds the TestFlushRegionEntry which was absent in 0.98&lt;/p&gt;</comment>
                            <comment id="14290066" author="apurtell" created="Fri, 23 Jan 2015 21:59:57 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt;, I applied the 0.98 patch and checked the new test and other flush tests, looks good, +1&lt;/p&gt;</comment>
                            <comment id="14290226" author="hudson" created="Fri, 23 Jan 2015 23:48:35 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.0 #679 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/679/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/679/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10499&quot; title=&quot;In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10499&quot;&gt;&lt;del&gt;HBASE-10499&lt;/del&gt;&lt;/a&gt; In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException (Ram and Ted) (tedyu: rev 973961b23fc6f3e4748ae7a213c9a89ff89dbb33)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestFlushRegionEntry.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14290308" author="ramkrishna.s.vasudevan@gmail.com" created="Sat, 24 Jan 2015 01:05:40 +0000"  >&lt;p&gt;+1 on patch&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10499?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-10499?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&lt;/a&gt;&lt;br/&gt;
]&lt;br/&gt;
RegionTooBusyException&lt;br/&gt;
----------------------------------------------------------------------------------------------&lt;br/&gt;
10499-v6.txt, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10499&quot; title=&quot;In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10499&quot;&gt;&lt;del&gt;HBASE-10499&lt;/del&gt;&lt;/a&gt;.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10499&quot; title=&quot;In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10499&quot;&gt;&lt;del&gt;HBASE-10499&lt;/del&gt;&lt;/a&gt;_v5.patch,&lt;br/&gt;
compaction-queue.png, hbase-root-master-ip-10-157-0-229.zip,&lt;br/&gt;
hbase-root-regionserver-ip-10-93-128-92.zip, master_4e39.log,&lt;br/&gt;
master_576f.log, rs_4e39.log, rs_576f.log, t1.dump, t2.dump,&lt;br/&gt;
workloada_0.98.dat&lt;br/&gt;
this version.  Doesn&apos;t seem so to me.&lt;br/&gt;
200 regions.  In one of the run with 0.98 server and 0.98 client I faced&lt;br/&gt;
this problem like the hlogs became more and the system requested flushes&lt;br/&gt;
for those many regions.&lt;br/&gt;
remained unflushed.  The ripple effect of this on the client side&lt;br/&gt;
org.apache.hadoop.hbase.client.RetriesExhaustedWithDetailsException: Failed&lt;br/&gt;
54 actions: RegionTooBusyException: 54 times,&lt;br/&gt;
org.apache.hadoop.hbase.client.RetriesExhaustedWithDetailsException: Failed&lt;br/&gt;
54 actions: RegionTooBusyException: 54 times,&lt;br/&gt;
org.apache.hadoop.hbase.client.AsyncProcess$BatchErrors.makeException(AsyncProcess.java:187)&lt;br/&gt;
org.apache.hadoop.hbase.client.AsyncProcess$BatchErrors.access$500(AsyncProcess.java:171)&lt;br/&gt;
org.apache.hadoop.hbase.client.AsyncProcess.getErrors(AsyncProcess.java:897)&lt;br/&gt;
org.apache.hadoop.hbase.client.HTable.backgroundFlushCommits(HTable.java:961)&lt;br/&gt;
org.apache.hadoop.hbase.client.HTable.flushCommits(HTable.java:1225)&lt;br/&gt;
Too many hlogs: logs=38, maxlogs=32; forcing flush of 23 regions(s):&lt;br/&gt;
97d8ae2f78910cc5ded5fbb1ddad8492, d396b8a1da05c871edcb68a15608fdf2,&lt;br/&gt;
01a68742a1be3a9705d574ad68fec1d7, 1250381046301e7465b6cf398759378e,&lt;br/&gt;
127c133f47d0419bd5ab66675aff76d4, 9f01c5d25ddc6675f750968873721253,&lt;br/&gt;
29c055b5690839c2fa357cd8e871741e, ca4e33e3eb0d5f8314ff9a870fc43463,&lt;br/&gt;
acfc6ae756e193b58d956cb71ccf0aa3, 187ea304069bc2a3c825bc10a59c7e84,&lt;br/&gt;
0ea411edc32d5c924d04bf126fa52d1e, e2f9331fc7208b1b230a24045f3c869e,&lt;br/&gt;
d9309ca864055eddf766a330352efc7a, 1a71bdf457288d449050141b5ff00c69,&lt;br/&gt;
0ba9089db28e977f86a27f90bbab9717, fdbb3242d3b673bbe4790a47bc30576f,&lt;br/&gt;
bbadaa1f0e62d8a8650080b824187850, b1a5de30d8603bd5d9022e09c574501b,&lt;br/&gt;
cc6a9fabe44347ed65e7c325faa72030, 313b17dbff2497f5041b57fe13fa651e,&lt;br/&gt;
6b788c498503ddd3e1433a4cd3fb4e39, 3d71274fe4f815882e9626e1cfa050d1,&lt;br/&gt;
acc43e4b42c1a041078774f4f20a3ff5&lt;br/&gt;
Too many hlogs: logs=53, maxlogs=32; forcing flush of 2 regions(s):&lt;br/&gt;
fdbb3242d3b673bbe4790a47bc30576f, 6b788c498503ddd3e1433a4cd3fb4e39&lt;br/&gt;
regionserver.HRegionServer: regionserver60020.periodicFlusher requesting&lt;br/&gt;
flush for region&lt;br/&gt;
usertable,user3654,1392107806977.fdbb3242d3b673bbe4790a47bc30576f. after a&lt;br/&gt;
delay of 16689&lt;br/&gt;
regionserver.HRegionServer: regionserver60020.periodicFlusher requesting&lt;br/&gt;
flush for region&lt;br/&gt;
usertable,user6264,1392107806983.6b788c498503ddd3e1433a4cd3fb4e39. after a&lt;br/&gt;
delay of 15868&lt;br/&gt;
regionserver.HRegionServer: regionserver60020.periodicFlusher requesting&lt;br/&gt;
flush for region&lt;br/&gt;
usertable,user3654,1392107806977.fdbb3242d3b673bbe4790a47bc30576f. after a&lt;br/&gt;
delay of 20847&lt;br/&gt;
regionserver.HRegionServer: regionserver60020.periodicFlusher requesting&lt;br/&gt;
flush for region&lt;br/&gt;
usertable,user6264,1392107806983.6b788c498503ddd3e1433a4cd3fb4e39. after a&lt;br/&gt;
delay of 20099&lt;br/&gt;
regionserver.HRegionServer: regionserver60020.periodicFlusher requesting&lt;br/&gt;
flush for region&lt;br/&gt;
usertable,user3654,1392107806977.fdbb3242d3b673bbe4790a47bc30576f. after a&lt;br/&gt;
delay of 8677&lt;br/&gt;
Too many hlogs: logs=54, maxlogs=32; forcing flush of 1 regions(s):&lt;br/&gt;
fdbb3242d3b673bbe4790a47bc30576f&lt;br/&gt;
regions but this region stays with the RS that has this issue.  One&lt;br/&gt;
important observation is that in HRegion.internalflushCache() we need to&lt;br/&gt;
add a debug log here&lt;br/&gt;
not happen and no logs related to flush are printed in the logs. so due to&lt;br/&gt;
some reason this memstore.size() has become 0( I assume this).  The earlier&lt;br/&gt;
bugs were also due to similar reason.&lt;/p&gt;</comment>
                            <comment id="14290311" author="ramkrishna.s.vasudevan@gmail.com" created="Sat, 24 Jan 2015 01:06:41 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10499?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-10499?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&lt;/a&gt;&lt;br/&gt;
]&lt;br/&gt;
causing RegionTooBusyException&lt;br/&gt;
----------------------------------------------------------------------------------------------&lt;br/&gt;
10499-v6.txt, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10499&quot; title=&quot;In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10499&quot;&gt;&lt;del&gt;HBASE-10499&lt;/del&gt;&lt;/a&gt;.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10499&quot; title=&quot;In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10499&quot;&gt;&lt;del&gt;HBASE-10499&lt;/del&gt;&lt;/a&gt;_v5.patch,&lt;br/&gt;
compaction-queue.png, hbase-root-master-ip-10-157-0-229.zip,&lt;br/&gt;
hbase-root-regionserver-ip-10-93-128-92.zip, master_4e39.log,&lt;br/&gt;
master_576f.log, rs_4e39.log, rs_576f.log, t1.dump, t2.dump,&lt;br/&gt;
workloada_0.98.dat&lt;br/&gt;
to this version.  Doesn&apos;t seem so to me.&lt;br/&gt;
has 200 regions.  In one of the run with 0.98 server and 0.98 client I&lt;br/&gt;
faced this problem like the hlogs became more and the system requested&lt;br/&gt;
flushes for those many regions.&lt;br/&gt;
remained unflushed.  The ripple effect of this on the client side&lt;br/&gt;
org.apache.hadoop.hbase.client.RetriesExhaustedWithDetailsException: Failed&lt;br/&gt;
54 actions: RegionTooBusyException: 54 times,&lt;br/&gt;
org.apache.hadoop.hbase.client.RetriesExhaustedWithDetailsException: Failed&lt;br/&gt;
54 actions: RegionTooBusyException: 54 times,&lt;br/&gt;
org.apache.hadoop.hbase.client.AsyncProcess$BatchErrors.makeException(AsyncProcess.java:187)&lt;br/&gt;
org.apache.hadoop.hbase.client.AsyncProcess$BatchErrors.access$500(AsyncProcess.java:171)&lt;br/&gt;
org.apache.hadoop.hbase.client.AsyncProcess.getErrors(AsyncProcess.java:897)&lt;br/&gt;
org.apache.hadoop.hbase.client.HTable.backgroundFlushCommits(HTable.java:961)&lt;br/&gt;
org.apache.hadoop.hbase.client.HTable.flushCommits(HTable.java:1225)&lt;br/&gt;
wal.FSHLog: Too many hlogs: logs=38, maxlogs=32; forcing flush of 23&lt;br/&gt;
regions(s): 97d8ae2f78910cc5ded5fbb1ddad8492,&lt;br/&gt;
d396b8a1da05c871edcb68a15608fdf2, 01a68742a1be3a9705d574ad68fec1d7,&lt;br/&gt;
1250381046301e7465b6cf398759378e, 127c133f47d0419bd5ab66675aff76d4,&lt;br/&gt;
9f01c5d25ddc6675f750968873721253, 29c055b5690839c2fa357cd8e871741e,&lt;br/&gt;
ca4e33e3eb0d5f8314ff9a870fc43463, acfc6ae756e193b58d956cb71ccf0aa3,&lt;br/&gt;
187ea304069bc2a3c825bc10a59c7e84, 0ea411edc32d5c924d04bf126fa52d1e,&lt;br/&gt;
e2f9331fc7208b1b230a24045f3c869e, d9309ca864055eddf766a330352efc7a,&lt;br/&gt;
1a71bdf457288d449050141b5ff00c69, 0ba9089db28e977f86a27f90bbab9717,&lt;br/&gt;
fdbb3242d3b673bbe4790a47bc30576f, bbadaa1f0e62d8a8650080b824187850,&lt;br/&gt;
b1a5de30d8603bd5d9022e09c574501b, cc6a9fabe44347ed65e7c325faa72030,&lt;br/&gt;
313b17dbff2497f5041b57fe13fa651e, 6b788c498503ddd3e1433a4cd3fb4e39,&lt;br/&gt;
3d71274fe4f815882e9626e1cfa050d1, acc43e4b42c1a041078774f4f20a3ff5&lt;br/&gt;
wal.FSHLog: Too many hlogs: logs=53, maxlogs=32; forcing flush of 2&lt;br/&gt;
regions(s): fdbb3242d3b673bbe4790a47bc30576f,&lt;br/&gt;
6b788c498503ddd3e1433a4cd3fb4e39&lt;br/&gt;
regionserver.HRegionServer: regionserver60020.periodicFlusher requesting&lt;br/&gt;
flush for region&lt;br/&gt;
usertable,user3654,1392107806977.fdbb3242d3b673bbe4790a47bc30576f. after a&lt;br/&gt;
delay of 16689&lt;br/&gt;
regionserver.HRegionServer: regionserver60020.periodicFlusher requesting&lt;br/&gt;
flush for region&lt;br/&gt;
usertable,user6264,1392107806983.6b788c498503ddd3e1433a4cd3fb4e39. after a&lt;br/&gt;
delay of 15868&lt;br/&gt;
regionserver.HRegionServer: regionserver60020.periodicFlusher requesting&lt;br/&gt;
flush for region&lt;br/&gt;
usertable,user3654,1392107806977.fdbb3242d3b673bbe4790a47bc30576f. after a&lt;br/&gt;
delay of 20847&lt;br/&gt;
regionserver.HRegionServer: regionserver60020.periodicFlusher requesting&lt;br/&gt;
flush for region&lt;br/&gt;
usertable,user6264,1392107806983.6b788c498503ddd3e1433a4cd3fb4e39. after a&lt;br/&gt;
delay of 20099&lt;br/&gt;
regionserver.HRegionServer: regionserver60020.periodicFlusher requesting&lt;br/&gt;
flush for region&lt;br/&gt;
usertable,user3654,1392107806977.fdbb3242d3b673bbe4790a47bc30576f. after a&lt;br/&gt;
delay of 8677&lt;br/&gt;
wal.FSHLog: Too many hlogs: logs=54, maxlogs=32; forcing flush of 1&lt;br/&gt;
regions(s): fdbb3242d3b673bbe4790a47bc30576f&lt;br/&gt;
regions but this region stays with the RS that has this issue.  One&lt;br/&gt;
important observation is that in HRegion.internalflushCache() we need to&lt;br/&gt;
add a debug log here&lt;br/&gt;
does not happen and no logs related to flush are printed in the logs. so&lt;br/&gt;
due to some reason this memstore.size() has become 0( I assume this).  The&lt;br/&gt;
earlier bugs were also due to similar reason.&lt;/p&gt;</comment>
                            <comment id="14290410" author="hudson" created="Sat, 24 Jan 2015 03:27:23 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98 #815 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/815/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/815/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10499&quot; title=&quot;In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10499&quot;&gt;&lt;del&gt;HBASE-10499&lt;/del&gt;&lt;/a&gt; In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException (Ram and Ted) (tedyu: rev 5484f7958f8ce929c619c377f07917f05cab0db6)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestFlushRegionEntry.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14290426" author="ram_krish" created="Sat, 24 Jan 2015 04:23:57 +0000"  >&lt;p&gt;Ted, was not able to +1 it on time. I tried +1 from my mobile while on travel from the mail that I received for this JIRA and found that the same got updated only today morning.  Thanks for your work and time Ted.&lt;/p&gt;</comment>
                            <comment id="14290429" author="yuzhihong@gmail.com" created="Sat, 24 Jan 2015 04:28:29 +0000"  >&lt;p&gt;Enjoy your trip, Ram.&lt;/p&gt;</comment>
                            <comment id="14290452" author="hudson" created="Sat, 24 Jan 2015 05:50:46 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #776 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/776/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/776/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10499&quot; title=&quot;In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10499&quot;&gt;&lt;del&gt;HBASE-10499&lt;/del&gt;&lt;/a&gt; In write heavy scenario one of the regions does not get flushed causing RegionTooBusyException (Ram and Ted) (tedyu: rev 5484f7958f8ce929c619c377f07917f05cab0db6)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestFlushRegionEntry.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14331766" author="enis" created="Sat, 21 Feb 2015 23:48:57 +0000"  >&lt;p&gt;Closing this issue after 1.0.0 release.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12694256" name="10499-0.98.txt" size="4080" author="yuzhihong@gmail.com" created="Fri, 23 Jan 2015 21:56:14 +0000"/>
                            <attachment id="12694252" name="10499-1.0.txt" size="2818" author="yuzhihong@gmail.com" created="Fri, 23 Jan 2015 21:42:37 +0000"/>
                            <attachment id="12692895" name="10499-v2.txt" size="1765" author="yuzhihong@gmail.com" created="Sat, 17 Jan 2015 03:32:32 +0000"/>
                            <attachment id="12692897" name="10499-v3.txt" size="2703" author="yuzhihong@gmail.com" created="Sat, 17 Jan 2015 04:35:07 +0000"/>
                            <attachment id="12692899" name="10499-v4.txt" size="2701" author="yuzhihong@gmail.com" created="Sat, 17 Jan 2015 05:03:20 +0000"/>
                            <attachment id="12693941" name="10499-v6.txt" size="2718" author="yuzhihong@gmail.com" created="Thu, 22 Jan 2015 18:05:36 +0000"/>
                            <attachment id="12693910" name="10499-v6.txt" size="2718" author="yuzhihong@gmail.com" created="Thu, 22 Jan 2015 15:42:28 +0000"/>
                            <attachment id="12693983" name="10499-v7.txt" size="2733" author="yuzhihong@gmail.com" created="Thu, 22 Jan 2015 20:26:58 +0000"/>
                            <attachment id="12694093" name="10499-v8.txt" size="2684" author="yuzhihong@gmail.com" created="Fri, 23 Jan 2015 05:53:02 +0000"/>
                            <attachment id="12628449" name="HBASE-10499.patch" size="752" author="ram_krish" created="Wed, 12 Feb 2014 07:30:46 +0000"/>
                            <attachment id="12693025" name="HBASE-10499_v5.patch" size="1158" author="ram_krish" created="Mon, 19 Jan 2015 07:05:21 +0000"/>
                            <attachment id="12658147" name="compaction-queue.png" size="29310" author="matvey14" created="Mon, 28 Jul 2014 15:36:52 +0000"/>
                            <attachment id="12629328" name="hbase-root-master-ip-10-157-0-229.zip" size="1029466" author="ram_krish" created="Mon, 17 Feb 2014 07:51:49 +0000"/>
                            <attachment id="12628259" name="hbase-root-regionserver-ip-10-93-128-92.zip" size="2209245" author="ram_krish" created="Tue, 11 Feb 2014 17:16:28 +0000"/>
                            <attachment id="12629339" name="master_4e39.log" size="11395" author="fenghh" created="Mon, 17 Feb 2014 08:51:03 +0000"/>
                            <attachment id="12629340" name="master_576f.log" size="4193" author="fenghh" created="Mon, 17 Feb 2014 08:51:03 +0000"/>
                            <attachment id="12629341" name="rs_4e39.log" size="36685" author="fenghh" created="Mon, 17 Feb 2014 08:51:03 +0000"/>
                            <attachment id="12629342" name="rs_576f.log" size="100469" author="fenghh" created="Mon, 17 Feb 2014 08:51:03 +0000"/>
                            <attachment id="12628257" name="t1.dump" size="162873" author="ram_krish" created="Tue, 11 Feb 2014 17:16:28 +0000"/>
                            <attachment id="12628258" name="t2.dump" size="168386" author="ram_krish" created="Tue, 11 Feb 2014 17:16:28 +0000"/>
                            <attachment id="12628970" name="workloada_0.98.dat" size="35792" author="ram_krish" created="Fri, 14 Feb 2014 08:53:56 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Feb 2014 17:07:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>372984</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1sa07:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>373286</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>