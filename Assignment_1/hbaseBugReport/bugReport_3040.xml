<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:06:51 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3040/HBASE-3040.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3040] BlockIndex readIndex too slowly in heavy write scenario</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3040</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;region size is configured with 128M,  block size is 64K, the table has 5 column families&lt;br/&gt;
at the beginning, when region split, master assigns daughters to new region servers, new region server open region, readIndex of this region&apos;s storefile(about 1000 blocks) spent 30~50ms, with the data import region server spent more and more time (sometimes up to several seconds) to load 1000 block indices&lt;/p&gt;

&lt;p&gt;at right now, we resolve this issue by getting all indices of one hfile within one DFS read instead of 1000 reads.&lt;br/&gt;
is there any other better resolution?&lt;/p&gt;</description>
                <environment>&lt;p&gt;1master, 7 region servers, 4 * 7 clients(all clients run on region server host),  sequential put&lt;/p&gt;</environment>
        <key id="12475121">HBASE-3040</key>
            <summary>BlockIndex readIndex too slowly in heavy write scenario</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="andychen">andychen</reporter>
                        <labels>
                    </labels>
                <created>Sun, 26 Sep 2010 03:29:59 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:02 +0000</updated>
                            <resolved>Mon, 27 Sep 2010 22:53:47 +0000</resolved>
                                    <version>0.20.6</version>
                                    <fixVersion>0.90.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="12914907" author="ryanobjc" created="Sun, 26 Sep 2010 03:41:32 +0000"  >&lt;p&gt;Could you be more specific? Do you have some example code? Right now each&lt;br/&gt;
hfile&apos;s block index.is loaded (or attempted) using one load.&lt;br/&gt;
region server host), sequential put&lt;br/&gt;
column families&lt;br/&gt;
region servers, new region server open region, readIndex of this region&apos;s&lt;br/&gt;
storefile(about 1000 blocks) spent 30~50ms, with the data import region&lt;br/&gt;
server spent more and more time (sometimes up to several seconds) to load&lt;br/&gt;
1000 block indices&lt;br/&gt;
within one DFS read instead of 1000 reads.&lt;/p&gt;</comment>
                            <comment id="12914914" author="baggioss" created="Sun, 26 Sep 2010 04:19:49 +0000"  >&lt;p&gt;We can reproduce this issue in our environment.&lt;br/&gt;
   Our environment is HBase 0.20.6 + Hadoop (CDH3b2).  5 region server and 5 datanode with 2193  region and  48.95 TB data in HDFS. And our client is put 5 column family and 5 qualifier in one row, and commit  to HBase every 500 rows. We start 8 clients in one machine (have 6 machines, totally we have 48 clients, ). block size is 64K, region size is 256 M, one cell has 100B random string. each machine has  8 core CPU, 48G memory,  12 1T disks.&lt;br/&gt;
   In region split , HMaster cosider the region has been load. But region server has not been completed for loading.&lt;br/&gt;
    From client, it can not see the daughter region . After several retrys, exception will be raised. exception like below&lt;br/&gt;
    org.apache.hadoop.hbase.client.NoServerForRegionException: No server address listed in .META. for region &lt;/p&gt;</comment>
                            <comment id="12914918" author="andychen" created="Sun, 26 Sep 2010 04:29:15 +0000"  >&lt;p&gt;In HFile.loadFileInfo, we can calculate all indices&apos; size (including data block and meta block) using trailer&apos;s information&lt;br/&gt;
int allIndexSize = (int)(this.fileSize - this.trailer.dataIndexOffset - FixedFileTrailer.trailerSize());&lt;/p&gt;

&lt;p&gt;then, we add an new function--readAllIndex, in readAllIndex, we load all data and meta block using one DFS read&lt;br/&gt;
byte[] dataAndMetaIndex = readAllIndex(this.istream, this.trailer.dataIndexOffset, allIndexSize);&lt;/p&gt;

&lt;p&gt;Now, we can extract all indices data from local memory instead of remote datanode&lt;br/&gt;
Region server used to use readIndex to load indices data from datanode, in this function, there may be 10000 network round trips in case of one storefile has 10000 blocks.&lt;br/&gt;
So, we add an other function readIndexEx to get data from local memory which returned by readAllIndex above.&lt;br/&gt;
Under our test case, region server load about 1000 block indices spent several microseconds stably&lt;/p&gt;</comment>
                            <comment id="12914928" author="ryanobjc" created="Sun, 26 Sep 2010 06:24:56 +0000"  >&lt;p&gt;This looks similar to a different perf bug, perhaps you could try a&lt;br/&gt;
fix by using a BufferedInputStream to wrap the other stream and see&lt;br/&gt;
what happens?  This fixed the issue the other time &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


</comment>
                            <comment id="12914938" author="andychen" created="Sun, 26 Sep 2010 08:21:04 +0000"  >&lt;p&gt;ok&#65292;thanks a lot&lt;/p&gt;</comment>
                            <comment id="12914941" author="baggioss" created="Sun, 26 Sep 2010 08:52:20 +0000"  >&lt;p&gt;Hi andy, how about provide your patch ? &lt;/p&gt;</comment>
                            <comment id="12914943" author="andychen" created="Sun, 26 Sep 2010 09:16:10 +0000"  >&lt;p&gt;add patch&lt;/p&gt;</comment>
                            <comment id="12915071" author="stack" created="Sun, 26 Sep 2010 23:20:53 +0000"  >&lt;p&gt;Patch looks good Andy Chen.  In your  experience, does the index come in in the one read?  (If not, you might want to consider Ryans&apos; suggestion).  What size indices are you running into out of interest?&lt;/p&gt;</comment>
                            <comment id="12915094" author="baggioss" created="Mon, 27 Sep 2010 02:26:20 +0000"  >&lt;p&gt;It sounds great.  If index size very huge, BufferedInputStream will be more helpful to control number of each read.&lt;br/&gt;
But currently,  loadStoreFile in HBase read the whole indexs and keep all the index in memory.(size of index currently is about 200K.) We can not suppose which index is not interested by user. &lt;br/&gt;
So, as andy&apos;s patch, batch read index may be more helpful in performance. (keep read index in one HDFS read operation)&lt;/p&gt;</comment>
                            <comment id="12915521" author="ryanobjc" created="Mon, 27 Sep 2010 22:32:30 +0000"  >&lt;p&gt;ok lets commit this as it then&lt;/p&gt;</comment>
                            <comment id="12915531" author="stack" created="Mon, 27 Sep 2010 22:53:47 +0000"  >&lt;p&gt;Thank you for the patch Andy.  Committed to TRUNK.&lt;/p&gt;</comment>
                            <comment id="12915859" author="kannanm" created="Tue, 28 Sep 2010 18:10:40 +0000"  >&lt;p&gt;Good catch Andy.&lt;/p&gt;

&lt;p&gt;Andy/Stack: Minor comments on the patch. The new readIndexEx() is a near duplicate of looks readIndex(); the latter now appears to be dead-code. Would be good to remove readIndex() altogether. Also, the comment for the function needs to be updated, as &quot;indexOffset&quot; argument is no longer applicable.&lt;/p&gt;</comment>
                            <comment id="12915868" author="stack" created="Tue, 28 Sep 2010 18:30:26 +0000"  >&lt;p&gt;My bad.  Thanks for the review Kannan.  I committed this patch which addresses your criticisms.  Thanks.&lt;/p&gt;</comment>
                            <comment id="12915872" author="kannanm" created="Tue, 28 Sep 2010 18:44:03 +0000"  >&lt;p&gt;Thanks Stack! Looks good.&lt;/p&gt;</comment>
                            <comment id="15017416" author="lars_francke" created="Fri, 20 Nov 2015 12:43:02 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12455859" name="kannan_review.patch" size="3120" author="stack" created="Tue, 28 Sep 2010 18:30:26 +0000"/>
                            <attachment id="12455601" name="load-all-index-in-one-dfs-read.patch" size="3483" author="andychen" created="Sun, 26 Sep 2010 09:16:09 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 26 Sep 2010 03:41:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32881</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hkgn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100577</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>