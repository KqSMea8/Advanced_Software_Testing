<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:17:17 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10800/HBASE-10800.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10800] Use CellComparator instead of KVComparator</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10800</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description></description>
                <environment></environment>
        <key id="12702556">HBASE-10800</key>
            <summary>Use CellComparator instead of KVComparator</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12822298">HBASE-13500</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="ram_krish">ramkrishna.s.vasudevan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Mar 2014 05:34:39 +0000</created>
                <updated>Wed, 7 Dec 2016 10:57:31 +0000</updated>
                            <resolved>Tue, 5 May 2015 15:59:13 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="14049148" author="ram_krish" created="Tue, 1 Jul 2014 18:21:13 +0000"  >&lt;p&gt;Changes KVComparator to implement CellComparator. All core methods are in CellComparator.  MetaComparator is still in KV because it is handling special cases.  All changes done in the read path mostly. &lt;br/&gt;
Removed some of the methods from KeyValue and moved to KeyValueUtil. So KeyValue class is cleaned up.&lt;br/&gt;
SamePrefixCompartor is removed as it was not getting used except in testcase.  Still running testcases, most of them are passing.  &lt;br/&gt;
This would help in adding comparator methods in the CellComparator that could even compare offheap bytes.  Will it be better to make CellComparator an interface? Thoughts?&lt;/p&gt;</comment>
                            <comment id="14049203" author="hadoopqa" created="Tue, 1 Jul 2014 19:07:33 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12653437/HBASE-10800_1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12653437/HBASE-10800_1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12653437&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 69 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 14 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      comparisonResult = CellComparator.CELL_COMPARATOR.compareRows(left, loffset + KeyValue.ROW_LENGTH_SIZE,&lt;br/&gt;
+          comp = samePrefixComparator.compareCommonRowPrefix(seekCell, currentCell, rowCommonPrefix);&lt;br/&gt;
+  public EncodedSeeker createSeeker(CellComparator comparator, HFileBlockDecodingContext decodingCtx) {&lt;br/&gt;
+          conf, cacheConf, (KVComparator)comparator, bloomType, maxKeyCount, favoredNodes, fileContext);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestKeyValue&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hdfs.server.namenode.TestBackupNode.testCheckpoint(TestBackupNode.java:360)&lt;br/&gt;
	at org.apache.hadoop.hdfs.server.namenode.TestBackupNode.testCheckpointNode(TestBackupNode.java:134)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9924//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14049220" author="stack" created="Tue, 1 Jul 2014 19:19:15 +0000"  >&lt;p&gt;It is not you but what is compareStatic? (when the method is not static)&lt;/p&gt;

&lt;p&gt;Why not compareKey rather than compareOnlyKeyPortion?&lt;/p&gt;

&lt;p&gt;Why we have to take a flag on compareStatic when Key only?  Should there be a compareKey only method that is called when you are comparing the whole Cell?  (Do we ever compare Value? If not, why we have to say compare Key at all?)&lt;/p&gt;

&lt;p&gt;Should this be a method on its own?&lt;/p&gt;

&lt;p&gt;+    int c = Bytes.compareTo(a.getRowArray(), a.getRowOffset(), a.getRowLength(),&lt;br/&gt;
+        b.getRowArray(), b.getRowOffset(), b.getRowLength());&lt;/p&gt;

&lt;p&gt;My sense is that it is done lots of times throughout the codebase.  Hmm... doesn&apos;t compareRows do the above?  Call lit?&lt;/p&gt;

&lt;p&gt;Why you have non-static methods?  You ask if should be an Interface.  You thinking different CellComparators?  I&apos;d think that it&apos;d be the Cell that would change implementation.  Would be trouble if the CellComparator itself changed... If we come up w/ faster CellComparator lets just use it in place of the old?  Or what you thinking Ram?&lt;/p&gt;

&lt;p&gt;I&apos;ve asked before but forgot, what is a flat key?  compareFlatKey&lt;/p&gt;

&lt;p&gt;Should CellComparator only have compareTo in it?  And then CellUtil has the rest?  Maybe KVComparator didn&apos;t do this so you have CellComparator not doing it.  MatchingRow was in KVComparator? Should it be in CellUtil?  Hmm... seems like you have put a bunch of the compares into CellUtil.  Good.  Make the separation cleaner?&lt;/p&gt;

&lt;p&gt;Feels like these methods should be static again Ram.&lt;/p&gt;

&lt;p&gt;If you can get away with purging that much from KeyValue, more power to you!&lt;/p&gt;

&lt;p&gt;Thanks for digging in on this Ram.&lt;/p&gt;

</comment>
                            <comment id="14056062" author="ram_krish" created="Wed, 9 Jul 2014 10:14:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;It is not you but what is compareStatic? (when the method is not static)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Okie.  Can change this to just compare.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Why not compareKey rather than compareOnlyKeyPortion?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The reason for saying compareOnlyKeyPortion is because after the introduction of replay tags in certain cases we need to compare that and also the mvcc part of the key. (before flushing and compaction).&lt;br/&gt;
Hence this compareOnlyKeyPortion.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Why we have to take a flag on compareStatic when Key only?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;They flag is to denote the types of  compare that we may have to do as per the above comment. (Ignore or include replay tags and mvcc).&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Hmm... doesn&apos;t compareRows do the above? Call lit?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Changed such that compareRows is used.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Would be trouble if the CellComparator itself changed&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In many places we have an API called getKVComparator.  Now if we have different types of Cells and each cell has its own cellcomparator still when we say getComparator() we should be returning the Cell&apos;s comparator which is of type CellComparator?  Or we should totally remove those comparators getting passed as method params or these getKVComparator and just use CellComparator.compare in static mode.  That would also involve lot of places to change.  In the current patch that part of the code is not changed.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;ve asked before but forgot, what is a flat key? compareFlatKey&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Comparing only the keyportion. This could be replaced with compare(Cell a, Cell b).Updated the patch.  But left the compareFlatKey that accepts the byte[] as params.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Should CellComparator only have compareTo in it? And then CellUtil has the rest?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Same reasoning as above comment.  Wanted to have as instance methods and whereever could be accessed in static way move them to the CellUtil.&lt;/p&gt;

&lt;p&gt;Take the case of MetaKeyComparator.  There we are creating MetaKeyComparator as a subclass of KVComparator.  &lt;br/&gt;
Suppose the reader v2 and v3 tries to do a comparison on two cells which are offheap then the cell comparator used by that class would be the one which operates on offheap and should be specific to that and the related areas.  There I thought subclassing CellComparator would be helpful.  &lt;/p&gt;



</comment>
                            <comment id="14060302" author="stack" created="Mon, 14 Jul 2014 04:06:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;Hence this compareOnlyKeyPortion.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;But tags and mvcc are part of key? No?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;They flag is to denote the types of compare that we may have to do as per the above comment.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;To be clear, the flag is a little ugly.  A method that spells out what the compare does would be better than a single method differentiated by a boolean flag IMO.&lt;/p&gt;

&lt;p&gt;Thanks for working on this &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;  This is an important one to get behind us.&lt;/p&gt;
</comment>
                            <comment id="14060459" author="ram_krish" created="Mon, 14 Jul 2014 09:00:00 +0000"  >&lt;p&gt;&amp;gt;&amp;gt;But tags and mvcc are part of key? No?&lt;br/&gt;
Tags are not part of key. mvcc it is not considered always.  When we compare kvs that are already flushed/compacted then mvcc is not considered.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;To be clear, the flag is a little ugly. A method that spells out what the compare does would be better than a single method differentiated by a boolean flag IMO.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sure. Will make it cleaner.&lt;/p&gt;</comment>
                            <comment id="14119395" author="ram_krish" created="Wed, 3 Sep 2014 05:44:52 +0000"  >&lt;p&gt;I will update this patch and make things work with Cell comparator.&lt;/p&gt;</comment>
                            <comment id="14125231" author="ram_krish" created="Mon, 8 Sep 2014 05:33:03 +0000"  >&lt;p&gt;Latest patch.  There are few places in the actual code where a comparator of type KV is passed.  It is better to remove them. Also in BDE there is a cell comparator and a sameprefix comparator.  Ideally both are same.  But I would remove it in the patch &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11895&quot; title=&quot;Change Writer/Readers factory to create CellComparators rather than KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11895&quot;&gt;&lt;del&gt;HBASE-11895&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Moved most of the methods in the Cellcomparator to CellUtil. The only thing that we need to decide now is incase we want to compare cells offheap should we add those compare methods also in the CellUtil? Think that would be enough. Will proceed with the next patch after this goes in.&lt;/p&gt;</comment>
                            <comment id="14125232" author="ram_krish" created="Mon, 8 Sep 2014 05:36:55 +0000"  >&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/25423/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/25423/&lt;/a&gt; -RB link.&lt;/p&gt;</comment>
                            <comment id="14125233" author="ram_krish" created="Mon, 8 Sep 2014 05:38:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;To be clear, the flag is a little ugly. A method that spells out what the compare does would be better than a single method differentiated by a boolean flag IMO.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is also removed now.  There are no boolean flags.&lt;br/&gt;
compareFlatKey() name is not changed as it as references in the code.  If we all agree we can rename that method.  Here flat key is the part of the key that includes row, famly, qualifier and ts.  It does not include the mvcc and tags.&lt;/p&gt;</comment>
                            <comment id="14125234" author="hadoopqa" created="Mon, 8 Sep 2014 05:43:43 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12667129/HBASE-10800_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12667129/HBASE-10800_2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12667129&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 95 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10738//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10738//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14292935" author="apache9" created="Tue, 27 Jan 2015 03:55:30 +0000"  >&lt;p&gt;Do we still work on this?&lt;br/&gt;
I skimmed off-heap related issues, seems this issue could be a start point since it does not depend on any other issues...&lt;/p&gt;</comment>
                            <comment id="14293003" author="stack" created="Tue, 27 Jan 2015 05:40:42 +0000"  >&lt;p&gt;Question for you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14294520" author="Apache9" created="Wed, 28 Jan 2015 00:58:38 +0000"  >&lt;p&gt;So is &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10191&quot; title=&quot;Move large arena storage off heap&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10191&quot;&gt;HBASE-10191&lt;/a&gt; still active or we are waiting for a new GC to solve the problem?&lt;br/&gt;
Thanks~&lt;/p&gt;</comment>
                            <comment id="14311736" author="ram_krish" created="Mon, 9 Feb 2015 02:55:57 +0000"  >&lt;p&gt;Thanks for the interest over this JIRA and sorry for the delayed update on this. Missed  the ping over here.&lt;br/&gt;
The idea of this JIRA was to make Cells usage everywhere including the comparators.  I have now deferred this activity because if you see in KVcomparator and its usage through out the code it is using Cells to compare. So now changing KVComparator to CellComparator is only a name change in most of the places.  But still there are this Bloom filter and index usages that uses RawComparators which is not based on Cell. &lt;/p&gt;

&lt;p&gt;For the current work for offheap &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11425&quot; title=&quot;Cell/DBB end-to-end on the read-path&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11425&quot;&gt;&lt;del&gt;HBASE-11425&lt;/del&gt;&lt;/a&gt; we have introduced new APIS that work on ByteBuffers and some new comparator APIs that work on BBs.  Once that is in place we could move all the Comparators to Cell based and then work on this JIRA actively.&lt;br/&gt;
Any comments/suggestions are welcome.&lt;/p&gt;</comment>
                            <comment id="14311741" author="apache9" created="Mon, 9 Feb 2015 03:14:39 +0000"  >{quote
For the current work for offheap HBASE-11425 we have introduced new APIS that work on ByteBuffers and some new comparator APIs that work on BBs. Once that is in place we could move all the Comparators to Cell based and then work on this JIRA actively.}
&lt;blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;ByteBuffer or ByteRange?  I see some issues such as &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10772&quot; title=&quot;Use ByteRanges instead of ByteBuffers in BlockCache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10772&quot;&gt;&lt;del&gt;HBASE-10772&lt;/del&gt;&lt;/a&gt; aim to use BR instead of BB, but some issues still use BB?&lt;/p&gt;</comment>
                            <comment id="14311745" author="ram_krish" created="Mon, 9 Feb 2015 03:22:21 +0000"  >&lt;p&gt;Actually we have not yet published our findings on this.  But we hope to do so this week.&lt;br/&gt;
If you see the SocketChannel&apos;s in the RPC layer it is BB that SocketChannel&apos;s work with. So having BR is nothing but going to be an  indirection over the BB.  So considering that a BR wrapping BB is less preferred to directly using a BB.&lt;/p&gt;</comment>
                            <comment id="14311754" author="apache9" created="Mon, 9 Feb 2015 03:35:13 +0000"  >&lt;p&gt;So we decide to get rid of ByteRange?&lt;/p&gt;</comment>
                            <comment id="14394241" author="ram_krish" created="Fri, 3 Apr 2015 09:30:33 +0000"  >&lt;p&gt;Attaching a rebased patch with some additional changes (addresses some of the review comments posted in RB and on the JIRA).&lt;br/&gt;
Why we need this patch is because over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11425&quot; title=&quot;Cell/DBB end-to-end on the read-path&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11425&quot;&gt;&lt;del&gt;HBASE-11425&lt;/del&gt;&lt;/a&gt;, Stack had concerns on having BB based compare APIs in the KeyValue.KVComparator. &lt;br/&gt;
In case of BB backed cells we will definitely have cases to handle BB components of the Cell.  &lt;br/&gt;
So it is better to move all the comparator things to CellComparator and let them be non static methods.  The reason being KVComparator and MetaComparator sort of comparison needs.  This patch removes all the comparator code from KV and moves over to CellComparator.&lt;br/&gt;
CellComparator and MetaCellComparator are the new Comparators.&lt;br/&gt;
The patch also contains certain TODOs to show how the BB backed cell related compare methods would be added in the CellComparator methods.&lt;br/&gt;
Also pls note that few compare APIS like compareRows() has been added that takes Cell along with rowOffset and rowLength so that if BB backed Cells are coming we could use the same API and handle them with hasArray condition.&lt;br/&gt;
The patch with BB backed Cell can do further refactoring in certain places where the Cells could be directly passed to the CellComparator so that comparisons could be done on Cells using hasArray() check.  &lt;br/&gt;
The getLegacyClassName() is bit of a hack. I think the intention is to remove them but using the String we try to instantiate the respective Comparator Classes.  I think that should work even now except that the String that is used for the name would have an odd package name (Interestingly the KeyComparator and MetaKeyComparator was no longer in the code base).&lt;/p&gt;</comment>
                            <comment id="14394245" author="ram_krish" created="Fri, 3 Apr 2015 09:33:30 +0000"  >&lt;p&gt;Pls note that this patch removes some of the APIs in KeyValue.java&lt;/p&gt;</comment>
                            <comment id="14394348" author="hadoopqa" created="Fri, 3 Apr 2015 12:07:03 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12709202/HBASE-10800_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12709202/HBASE-10800_3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit d8b10656d00779e194c3caca118995136babce99.&lt;br/&gt;
  ATTACHMENT ID: 12709202&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 146 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 16 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1945 checkstyle errors (more than the master&apos;s current 1924 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +  public int compareRows(Cell left, int loffset, int llength, Cell right, int roffset, int rlength) {&lt;br/&gt;
+  public int compareRows(Cell left, int loffset, int llength, byte[] right, int roffset, int rlength) {&lt;br/&gt;
+      Bytes.putLong(newKey, rightKey.length - KeyValue.TIMESTAMP_TYPE_SIZE, HConstants.LATEST_TIMESTAMP);&lt;br/&gt;
+        &amp;amp;&amp;amp; leftKey&lt;span class=&quot;error&quot;&gt;&amp;#91;KeyValue.ROW_LENGTH_SIZE + diffIdx&amp;#93;&lt;/span&gt; == rightKey&lt;span class=&quot;error&quot;&gt;&amp;#91;KeyValue.ROW_LENGTH_SIZE + diffIdx&amp;#93;&lt;/span&gt;) {&lt;br/&gt;
+    public int compareRows(Cell left, int loffset, int llength, Cell right, int roffset, int rlength) {&lt;br/&gt;
+  public static int findCommonPrefixInQualifierPart(Cell left, Cell right, int qualifierCommonPrefix) {&lt;br/&gt;
+  public static int getDelimiter(final byte[] b, int offset, final int length, final int delimiter) {&lt;br/&gt;
+          comp = samePrefixComparator.compareCommonRowPrefix(seekCell, currentCell, rowCommonPrefix);&lt;br/&gt;
+  public EncodedSeeker createSeeker(CellComparator comparator, HFileBlockDecodingContext decodingCtx) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestScannerTimeout&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestBoundedRegionGroupingProvider&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestCompoundBloomFilter&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestDefaultWALProviderWithHLogKey&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestDefaultWALProvider&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillMasterRS&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionReplayEvents&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestLogRolling&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationDisableInactivePeer&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestWALRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestReplicationSink&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillSlaveRS&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationSource&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.TestZooKeeper&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHLogRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestWALFactory&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelReplicationWithExpAsString&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestDurability&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestWALPlayer&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestWALSplit&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationSyncUpTool&lt;br/&gt;
                  org.apache.hadoop.hbase.TestFullLogReconstruction&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestPerTableCFReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationWithTags&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegion&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestMultiSlaveReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillMasterRSCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationSmallTests&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationChangingPeerRegionservers&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDistributedLogReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestProtobufLog&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestMasterReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 6 zombie test(s): 	at org.apache.hadoop.hbase.master.TestRegionPlacement.testRegionPlacement(TestRegionPlacement.java:109)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestFromClientSide3.testHTableExistsMethodMultipleRegionsMultipleGets(TestFromClientSide3.java:380)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestAdmin1.testTruncateTable(TestAdmin1.java:392)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestAdmin1.testTruncateTable(TestAdmin1.java:374)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestExportSnapshot.testExportFileSystemState(TestExportSnapshot.java:287)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestExportSnapshot.testConsecutiveExports(TestExportSnapshot.java:211)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestExportSnapshot.testExportFileSystemState(TestExportSnapshot.java:287)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestExportSnapshot.testExportFileSystemState(TestExportSnapshot.java:261)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestExportSnapshot.testSnapshotWithRefsExportFileSystemState(TestExportSnapshot.java:255)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestExportSnapshot.testSnapshotWithRefsExportFileSystemState(TestExportSnapshot.java:239)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13551//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13551//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13551//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13551//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13551//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13551//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13551//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13551//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13551//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13551//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14394398" author="ramkrishna.s.vasudevan@gmail.com" created="Fri, 3 Apr 2015 13:13:41 +0000"  >&lt;p&gt;Oops. Wil checkout the test failures&lt;/p&gt;
</comment>
                            <comment id="14480982" author="ram_krish" created="Mon, 6 Apr 2015 06:27:08 +0000"  >&lt;p&gt;Patch that addresses the test case issues.  Wraps the long line and has some checkStyle comment fixes also.&lt;/p&gt;</comment>
                            <comment id="14480992" author="hadoopqa" created="Mon, 6 Apr 2015 06:39:05 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723306/HBASE-10800_4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723306/HBASE-10800_4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 057499474c346b28ad5ac3ab7da420814eba547d.&lt;br/&gt;
  ATTACHMENT ID: 12723306&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 150 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13573//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13573//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14480993" author="ram_krish" created="Mon, 6 Apr 2015 06:40:44 +0000"  >&lt;p&gt;Latest patch that solves a compilation issue.&lt;/p&gt;</comment>
                            <comment id="14481009" author="hadoopqa" created="Mon, 6 Apr 2015 06:59:04 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723308/HBASE-10800_4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723308/HBASE-10800_4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 057499474c346b28ad5ac3ab7da420814eba547d.&lt;br/&gt;
  ATTACHMENT ID: 12723308&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 150 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13575//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13575//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14481033" author="ram_krish" created="Mon, 6 Apr 2015 07:55:45 +0000"  >&lt;p&gt;Updated patch against trunk. The patch was not applying because of the recent purge of Writers/Readers.&lt;/p&gt;</comment>
                            <comment id="14481111" author="hadoopqa" created="Mon, 6 Apr 2015 10:21:00 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723314/HBASE-10800_5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723314/HBASE-10800_5.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 057499474c346b28ad5ac3ab7da420814eba547d.&lt;br/&gt;
  ATTACHMENT ID: 12723314&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 150 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 4 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1933 checkstyle errors (more than the master&apos;s current 1921 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestCompoundBloomFilter&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 4 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction.testFromClientSideWhileSplitting(TestEndToEndSplitTransaction.java:202)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestFromClientSide3.testHTableExistsMethodMultipleRegionsMultipleGets(TestFromClientSide3.java:380)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestRegionPlacement.testRegionPlacement(TestRegionPlacement.java:109)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13576//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13576//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13576//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13576//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13576//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13576//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13576//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13576//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13576//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13576//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14481419" author="ram_krish" created="Mon, 6 Apr 2015 16:53:07 +0000"  >&lt;p&gt;New patch. Addresses the failed test case TestCompoundBloomFilter.&lt;/p&gt;</comment>
                            <comment id="14481654" author="hadoopqa" created="Mon, 6 Apr 2015 19:15:41 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723386/HBASE-10800_6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723386/HBASE-10800_6.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 057499474c346b28ad5ac3ab7da420814eba547d.&lt;br/&gt;
  ATTACHMENT ID: 12723386&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 150 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 3 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13582//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13582//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13582//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13582//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13582//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13582//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13582//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13582//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13582//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13582//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14482600" author="ram_krish" created="Tue, 7 Apr 2015 05:05:32 +0000"  >&lt;p&gt;Any chance of reviews here? Would be useful for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11425&quot; title=&quot;Cell/DBB end-to-end on the read-path&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11425&quot;&gt;&lt;del&gt;HBASE-11425&lt;/del&gt;&lt;/a&gt; review comments also.&lt;/p&gt;</comment>
                            <comment id="14484793" author="ram_krish" created="Wed, 8 Apr 2015 06:14:30 +0000"  >&lt;p&gt;Updated patch. This patch addresses the review comments in RB and this patch is much bigger than the previous ones because of the movement of the public static COMPARATOR variables in KV to CellComparator.&lt;/p&gt;</comment>
                            <comment id="14484933" author="hadoopqa" created="Wed, 8 Apr 2015 08:28:05 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723845/HBASE-10800_7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723845/HBASE-10800_7.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit b6756b39c2ff5675f96a6e82dc4d68ec437f01c4.&lt;br/&gt;
  ATTACHMENT ID: 12723845&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 243 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 4 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1935 checkstyle errors (more than the master&apos;s current 1921 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +  public static Cell getMidpoint(final CellComparator comparator, final Cell left, final Cell right) {&lt;br/&gt;
+  public static int getDelimiter(final byte[] b, int offset, final int length, final int delimiter) &lt;/p&gt;
{
+      }
&lt;p&gt; else if (comparatorClassName.equals(CellComparator.RAW_COMPARATOR.getLegacyKeyComparatorName())) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13616//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13616//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13616//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13616//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13616//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13616//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13616//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13616//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13616//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13616//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14485746" author="ram_krish" created="Wed, 8 Apr 2015 18:30:41 +0000"  >&lt;p&gt;I have another updated patch here which tries to remove all API that accept two byte[].  Running test suite. If all passes that can be taken as the final one.  But we have some additional objects created in certain cases but I think that would be needed. Will upload shortly.&lt;/p&gt;</comment>
                            <comment id="14486828" author="ram_krish" created="Thu, 9 Apr 2015 06:36:00 +0000"  >&lt;p&gt;This  patch is much bigger patch but tries to avoid two byte[] compare methods in CellComparator.  Only one API is left out compareRows. This needs some changes in the HRegion and the filter APIs.  I think we can take that up later as another subtask because it involves filter API changes. ( or could even do with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11425&quot; title=&quot;Cell/DBB end-to-end on the read-path&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11425&quot;&gt;&lt;del&gt;HBASE-11425&lt;/del&gt;&lt;/a&gt;).&lt;br/&gt;
Pls take note of the StoreFile.java and Bytes.java changes.  Those are some critical places where we handle the compare APIs for bloom APIs. &lt;/p&gt;</comment>
                            <comment id="14486990" author="hadoopqa" created="Thu, 9 Apr 2015 08:53:14 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12724162/HBASE-10800_11.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12724162/HBASE-10800_11.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 80dbf06651e527ec0421ce51e4712ffb2f1d078b.&lt;br/&gt;
  ATTACHMENT ID: 12724162&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 251 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 10 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1932 checkstyle errors (more than the master&apos;s current 1921 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      final int rfamilyOffset, final int rfamilylength, final int rqualOffset, final int rqualLength) {&lt;br/&gt;
+  // CLEANUP : in order to do this we may have to modify some code HRegion.next() and will involve a &lt;br/&gt;
+    Bytes.equals(newKey.getRowArray(), newKey.getRowOffset(), newKey.getRowLength(), expectedArray, 0,&lt;br/&gt;
+    Bytes.equals(newKey.getRowArray(), newKey.getRowOffset(), newKey.getRowLength(), expectedArray, 0,&lt;br/&gt;
+              res = (-(generalBloomFilterWriter.getComparator().compare(lastBloomKeyOnlyKV, bloomKey,&lt;br/&gt;
+        + &quot;]: &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot; + Bytes.toString(cell.getRowArray(), cell.getRowOffset(), cell.getRowLength()) + &amp;quot;&amp;#93;&lt;/span&gt;&quot;;&lt;br/&gt;
+          + Bytes.toString(right) + &quot;]: &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot; + Bytes.toString(cell.getRowArray(), cell.getRowOffset(), cell.getRowLength()) + &amp;quot;&amp;#93;&lt;/span&gt;&quot;;&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13640//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13640//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13640//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13640//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13640//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13640//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13640//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13640//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13640//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13640//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14487020" author="ram_krish" created="Thu, 9 Apr 2015 09:12:11 +0000"  >&lt;p&gt;Patch that wraps the long lines.&lt;/p&gt;</comment>
                            <comment id="14487174" author="hadoopqa" created="Thu, 9 Apr 2015 11:31:00 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12724186/HBASE-10800_12.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12724186/HBASE-10800_12.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 80dbf06651e527ec0421ce51e4712ffb2f1d078b.&lt;br/&gt;
  ATTACHMENT ID: 12724186&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 251 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 10 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1926 checkstyle errors (more than the master&apos;s current 1921 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13645//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13645//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13645//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13645//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13645//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13645//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13645//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13645//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13645//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13645//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14489405" author="ram_krish" created="Fri, 10 Apr 2015 11:26:48 +0000"  >&lt;p&gt;Updated patch.&lt;/p&gt;</comment>
                            <comment id="14490892" author="ram_krish" created="Sat, 11 Apr 2015 09:49:40 +0000"  >&lt;p&gt;Updated patch based on review comments.&lt;/p&gt;</comment>
                            <comment id="14490985" author="hadoopqa" created="Sat, 11 Apr 2015 12:06:37 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12724751/HBASE-10800_14.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12724751/HBASE-10800_14.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e75c6201c69e57416525135a397a971ad4d1b902.&lt;br/&gt;
  ATTACHMENT ID: 12724751&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 251 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 16 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1934 checkstyle errors (more than the master&apos;s current 1912 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +    final int index = Bytes.searchDelimiterIndex(comparator, 0, comparator.length, ParseConstants.COLON);&lt;br/&gt;
+      final int rfamilyOffset, final int rfamilylength, final int rqualOffset, final int rqualLength) {&lt;br/&gt;
+  // TODO : CLEANUP : in order to do this we may have to modify some code HRegion.next() and will involve a&lt;br/&gt;
+   * @param coff the offset of the column hint if provided, if not offset of the currentCell&apos;s qualifier&lt;br/&gt;
+   * @param clen the length of the column hint if provided, if not length of the currentCell&apos;s qualifier&lt;br/&gt;
+    return Bytes.findCommonPrefix(left.getFamilyArray(), right.getFamilyArray(), left.getFamilyLength()&lt;br/&gt;
+    return matchingRow(a, b) &amp;amp;&amp;amp; matchingFamily(a, b) &amp;amp;&amp;amp; matchingQualifier(a, b) &amp;amp;&amp;amp; matchingTimestamp(a, b)&lt;br/&gt;
+  public static int searchDelimiterIndexInReverse(final byte[] b, final int offset, final int length,&lt;br/&gt;
+    Bytes.equals(newKey.getRowArray(), newKey.getRowOffset(), newKey.getRowLength(), expectedArray, 0,&lt;br/&gt;
+    Bytes.equals(newKey.getRowArray(), newKey.getRowOffset(), newKey.getRowLength(), expectedArray, 0,&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestBlocksRead&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13670//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13670//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13670//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13670//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13670//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13670//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13670//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13670//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13670//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13670//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14491110" author="ram_krish" created="Sat, 11 Apr 2015 17:07:00 +0000"  >&lt;p&gt;Test case correction.&lt;/p&gt;</comment>
                            <comment id="14491168" author="hadoopqa" created="Sat, 11 Apr 2015 19:39:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12724768/HBASE-10800_15.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12724768/HBASE-10800_15.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e75c6201c69e57416525135a397a971ad4d1b902.&lt;br/&gt;
  ATTACHMENT ID: 12724768&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 251 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 14 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1927 checkstyle errors (more than the master&apos;s current 1912 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +  public static int findCommonPrefixInQualifierPart(Cell left, Cell right, int qualifierCommonPrefix) {&lt;br/&gt;
+    Bytes.equals(newKey.getRowArray(), newKey.getRowOffset(), newKey.getRowLength(), expectedArray, 0,&lt;br/&gt;
+          if (-(getComparator().compare(splitCell, bb.array(), bb.arrayOffset(), bb.limit())) &amp;gt;= 0) {&lt;br/&gt;
+        + &quot;]: &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot; + Bytes.toString(cell.getRowArray(), cell.getRowOffset(), cell.getRowLength()) + &amp;quot;&amp;#93;&lt;/span&gt;&quot;;&lt;br/&gt;
+          + Bytes.toString(right) + &quot;]: &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot; + Bytes.toString(cell.getRowArray(), cell.getRowOffset(), cell.getRowLength()) + &amp;quot;&amp;#93;&lt;/span&gt;&quot;;&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13673//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13673//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13673//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13673//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13673//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13673//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13673//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13673//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13673//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13673//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14491904" author="ram_krish" created="Mon, 13 Apr 2015 04:29:36 +0000"  >&lt;p&gt;Wraps long lines. Fixes checkstyle comments related to Unused Imports.&lt;br/&gt;
Fixes javadoc warnings.  &lt;br/&gt;
CellComparator.compareKeyBasedOnColHint() I have added back the familyOffset and familyLength here because for cases where we get the compareKeyForNextRow the family offset and length should be 0 which we cannot get from the cell. Hence it is better we explicitly pass them there.&lt;/p&gt;</comment>
                            <comment id="14492092" author="hadoopqa" created="Mon, 13 Apr 2015 09:00:16 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12724868/HBASE-10800_16.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12724868/HBASE-10800_16.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e75c6201c69e57416525135a397a971ad4d1b902.&lt;br/&gt;
  ATTACHMENT ID: 12724868&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 251 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 4 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1914 checkstyle errors (more than the master&apos;s current 1912 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13678//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13678//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13678//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13678//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13678//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13678//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13678//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13678//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13678//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13678//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14493582" author="ram_krish" created="Tue, 14 Apr 2015 05:14:30 +0000"  >&lt;p&gt;Is it fine to commit this?  I need to add a fat release note on this.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;?  Can continue some follow on work based on this. Anoop&apos;s ServerCell patch once integrated would help us to proceed with other sub tasks for HBASe-11425. With that majority of review comments in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11425&quot; title=&quot;Cell/DBB end-to-end on the read-path&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11425&quot;&gt;&lt;del&gt;HBASE-11425&lt;/del&gt;&lt;/a&gt;&apos;s RB would be addressed.&lt;/p&gt;</comment>
                            <comment id="14497586" author="ram_krish" created="Thu, 16 Apr 2015 05:32:56 +0000"  >&lt;p&gt;Except for the comment related to &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; compare(Cell left, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] key, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; length)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;all other changes are done.  As said in the RB this API is extensively used in blooms, index and 2 places in HalfStoreFileReader.  The other alternative is to change every where to KeyOnlyKVs but that would create more short living objects particularly in the bloom area.&lt;/p&gt;</comment>
                            <comment id="14497595" author="anoop.hbase" created="Thu, 16 Apr 2015 05:51:48 +0000"  >&lt;p&gt;+1&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;compare(Cell left, byte[] key, int offset, int length)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ya we can do this in a follow up jira.&lt;/p&gt;</comment>
                            <comment id="14497705" author="hadoopqa" created="Thu, 16 Apr 2015 08:09:29 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12725781/HBASE-10800_18.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12725781/HBASE-10800_18.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 682a29a57f73b836859b3d3e1048fc82d64e8fe3.&lt;br/&gt;
  ATTACHMENT ID: 12725781&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 251 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13721//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13721//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13721//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13721//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13721//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13721//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13721//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13721//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14498196" author="stack" created="Thu, 16 Apr 2015 15:50:45 +0000"  >&lt;p&gt;Sorry. Slow on review. I have one running now. Let me finish first &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14500738" author="stack" created="Fri, 17 Apr 2015 21:38:35 +0000"  >&lt;p&gt;I finally got through the seven pages of patch. There are some concerns posted on RB. Patch is too big. Comments are too many up on rb. Will be hard to ensure all addressed in subsequent versions of the patch.&lt;/p&gt;

&lt;p&gt;Here is a overarching comment from rb:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is a fundamental change... Previous, the comparator knew about the serialization and exploited this fact avoiding re-parse of KV part lengths and offsets. In this patch we are moving the comparator to go via the Cell Interface only it does not expose speedup methods, those methods that allow you pass in a length or offset already calculated. While this patch preserves these &apos;carry-over&apos; methods, they&apos;ll have to be removed eventually... the carry-over methods just won&apos;t work when we have a different Cell type.  So, we will see slowdown comparing.... unless the Cell internally does what these carry-over methods are doing and keeps them cached internally (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13448&quot; title=&quot;New Cell implementation with cached component offsets/lengths&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13448&quot;&gt;&lt;del&gt;HBASE-13448&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="14513563" author="ram_krish" created="Mon, 27 Apr 2015 05:50:30 +0000"  >&lt;p&gt;Trying for QA run. &lt;/p&gt;</comment>
                            <comment id="14513693" author="ram_krish" created="Mon, 27 Apr 2015 08:16:15 +0000"  >&lt;p&gt;Retrying&lt;/p&gt;</comment>
                            <comment id="14513699" author="hadoopqa" created="Mon, 27 Apr 2015 08:20:31 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12728316/HBASE-10800_23.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12728316/HBASE-10800_23.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 4182fc1a9bc261f50efd7efd27c61a702bc1bfbf.&lt;br/&gt;
  ATTACHMENT ID: 12728316&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 258 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 15 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1904 checkstyle errors (more than the master&apos;s current 1898 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestHBaseFsck&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13828//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13828//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13828//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13828//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13828//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13828//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13828//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13828//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13828//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13828//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14513861" author="ram_krish" created="Mon, 27 Apr 2015 10:19:01 +0000"  >&lt;p&gt;Updated the javadoc and checkstyle comments.&lt;/p&gt;</comment>
                            <comment id="14513900" author="hadoopqa" created="Mon, 27 Apr 2015 10:46:59 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12728338/HBASE-10800_23.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12728338/HBASE-10800_23.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f2e1238f9812ebe0257ad4b3af1200230231529a.&lt;br/&gt;
  ATTACHMENT ID: 12728338&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 258 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 15 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1904 checkstyle errors (more than the master&apos;s current 1898 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestHBaseFsck&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestTimeRangeMapRed.testTimeRangeMapRed(TestTimeRangeMapRed.java:163)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestCellCounter.testCellCounteEndTimeRange(TestCellCounter.java:176)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestImportTsv.testMROnTable(TestImportTsv.java:116)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13830//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13830//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13830//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13830//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13830//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13830//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13830//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13830//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13830//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13830//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14514133" author="hadoopqa" created="Mon, 27 Apr 2015 13:38:51 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12728368/HBASE-10800_24.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12728368/HBASE-10800_24.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f2e1238f9812ebe0257ad4b3af1200230231529a.&lt;br/&gt;
  ATTACHMENT ID: 12728368&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 258 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestHBaseFsck&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13834//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13834//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13834//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13834//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13834//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13834//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13834//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13834//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14514405" author="ram_krish" created="Mon, 27 Apr 2015 16:33:45 +0000"  >&lt;p&gt;The test failure seems to be occuring always with and without patch. So seems like it is  unrelated.&lt;/p&gt;</comment>
                            <comment id="14521062" author="ram_krish" created="Thu, 30 Apr 2015 07:31:03 +0000"  >&lt;p&gt;Updated patch addressing latest RB comments.  Trying QA .&lt;/p&gt;</comment>
                            <comment id="14521326" author="hadoopqa" created="Thu, 30 Apr 2015 11:01:47 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12729429/HBASE-10800_25.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12729429/HBASE-10800_25.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 558cac91d05aef811a61b9bcd86078a0cb13c879.&lt;br/&gt;
  ATTACHMENT ID: 12729429&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 262 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 3 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13896//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13896//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13896//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13896//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13896//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13896//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13896//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13896//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13896//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13896//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14521342" author="ram_krish" created="Thu, 30 Apr 2015 11:21:42 +0000"  >&lt;p&gt;Upated the javadoc comment that was coming from CellComparator.&lt;/p&gt;</comment>
                            <comment id="14521363" author="hadoopqa" created="Thu, 30 Apr 2015 11:48:32 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12729469/HBASE-10800_26.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12729469/HBASE-10800_26.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 3a9c2b0c5510c499371e9f387fa85c5fdeb76628.&lt;br/&gt;
  ATTACHMENT ID: 12729469&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 262 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13898//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13898//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14525128" author="anoop.hbase" created="Sat, 2 May 2015 08:39:56 +0000"  >&lt;p&gt;FFT.java&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;? &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; CellComparator&amp;gt; getComparatorClass(
      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; comparatorClassName) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-comment&quot;&gt;// HFile V2 legacy comparator class names.
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (comparatorClassName.equals(CellComparator.COMPARATOR.getLegacyKeyComparatorName())) {
        comparatorClassName = CellComparator.COMPARATOR.getClass().getName();
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (comparatorClassName.equals(CellComparator.META_COMPARATOR
          .getLegacyKeyComparatorName())) {
        comparatorClassName = CellComparator.META_COMPARATOR.getClass().getName();
      }

      &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the name wasn&apos;t one of the legacy names, maybe its a legit &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; kind of comparator.
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// TODO : This is deprecated. While removing &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; code introduce
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// Bytes.getV2LegacyKeyComparatorName()
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (comparatorClassName.equals(KeyValue.RAW_COMPARATOR.getClass().getName())) {
        &lt;span class=&quot;code-comment&quot;&gt;// Return &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; Bytes.BYTES_RAWCOMPARATOR
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (comparatorClassName.equals(KeyValue.RAW_COMPARATOR.getLegacyKeyComparatorName())) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;? &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; CellComparator&amp;gt;) &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.forName(comparatorClassName);
      }
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (ClassNotFoundException ex) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(ex);
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;CellComparator.getLegacyKeyComparatorName() return same value as KVComparator.getLegacyKeyComparatorName().     When the className in FFT for a file is, KVComparator, then also we need to return CellComparator instance.&lt;br/&gt;
This check also required for completeness.&lt;/p&gt;

&lt;p&gt;Functionally it wont create any BC issue as we still were writing the legacy class name only to new files also.&lt;/p&gt;</comment>
                            <comment id="14525145" author="anoop.hbase" created="Sat, 2 May 2015 09:25:30 +0000"  >&lt;p&gt;Stack&apos;s comment from RB&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Only real concern is some exposure of byte arrays but we can fix that in subsequent patches. There is also a question of how often we will be creating those key only KVs...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The APIs exposing byte[] (still)  will go away with other subtasks.&lt;br/&gt;
I am checking the creation of KeyOnlyKeyValues for the compare.   Some places we can avoid object creation every time (In read hot path)..   Just adding TODOs and once this is in can do as sub tasks..&lt;/p&gt;</comment>
                            <comment id="14525520" author="stack" created="Sat, 2 May 2015 22:17:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;TODOs and once this is in can do as sub tasks..&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure. Just file as blockers before this is committed.&lt;/p&gt;

&lt;p&gt;Is there a new patch to look at? Just page #1 is the important one I think.&lt;/p&gt;</comment>
                            <comment id="14525929" author="ram_krish" created="Sun, 3 May 2015 18:12:57 +0000"  >&lt;p&gt;Hi all,&lt;br/&gt;
I was on vacation over the weekend.  I will look check and come back with a latest patch for review so that we can commit this early next week.&lt;/p&gt;</comment>
                            <comment id="14526256" author="anoop.hbase" created="Mon, 4 May 2015 05:12:00 +0000"  >&lt;p&gt;HalfStoreFileReader&lt;br/&gt;
         ByteBuffer k = this.delegate.getKey();&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return this.delegate.getReader().getComparator().&lt;/li&gt;
	&lt;li&gt;compareFlatKey(k.array(), k.arrayOffset(), k.limit(),&lt;/li&gt;
	&lt;li&gt;splitkey, 0, splitkey.length) &amp;lt; 0;&lt;br/&gt;
+        return (this.delegate.getReader().getComparator().&lt;br/&gt;
+          compare(splitCell, k.array(), k.arrayOffset(), k.limit()&lt;br/&gt;
+            )) &amp;gt; 0;&lt;br/&gt;
Now the order of params changed, so the condition to be &amp;gt;=0&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14526450" author="anoop.hbase" created="Mon, 4 May 2015 09:21:05 +0000"  >&lt;p&gt;My bad..  Just leave the above comment...  Got confused at first.. After more careful check and discuss with Ram, seems change is just fine&lt;/p&gt;</comment>
                            <comment id="14526503" author="ram_krish" created="Mon, 4 May 2015 10:22:04 +0000"  >&lt;p&gt;Updated patch. Thanks to Anoop for fixing a couple of RB comments in ths patch.&lt;/p&gt;</comment>
                            <comment id="14526649" author="hadoopqa" created="Mon, 4 May 2015 13:56:56 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12730150/HBASE-10800_27.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12730150/HBASE-10800_27.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 1f02fffd044245fe777c2194517234950d530b35.&lt;br/&gt;
  ATTACHMENT ID: 12730150&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 262 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13934//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13934//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13934//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13934//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13934//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13934//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13934//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13934//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13934//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13934//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14526857" author="ram_krish" created="Mon, 4 May 2015 17:04:35 +0000"  >&lt;p&gt;Removes the 2 javadoc warnings.&lt;/p&gt;</comment>
                            <comment id="14527844" author="ram_krish" created="Tue, 5 May 2015 03:30:01 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;br/&gt;
Any chance of a final review here and a +1?&lt;/p&gt;</comment>
                            <comment id="14527944" author="stack" created="Tue, 5 May 2015 05:25:18 +0000"  >&lt;p&gt;+1 on last patch.  Up on RB I put some notes on TODOs you should add on commit.  There is a question too but I think I see the answer on page #6 so it should not block commit. If the answer is a problem, lets do in a follow-on issue.&lt;/p&gt;</comment>
                            <comment id="14527948" author="stack" created="Tue, 5 May 2015 05:25:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; See +1 in comment above.&lt;/p&gt;</comment>
                            <comment id="14527974" author="ram_krish" created="Tue, 5 May 2015 05:51:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;There is a question too but I think I see the answer on page #6 so it should not block commit. If the answer is a problem, lets do in a follow-on issue.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;you are right.  We have already moved this to HfileWriterImpl and hence the tests also have been moved. Because it would look ugly if we call Writer from the TestKeyValue or TestCellComparator.&lt;/p&gt;

&lt;p&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; thanks for the reviews and comments.  It should have been a tough task.&lt;/p&gt;</comment>
                            <comment id="14527999" author="ram_krish" created="Tue, 5 May 2015 06:09:25 +0000"  >&lt;p&gt;Pushed to master.  Will work on follow on JIRAs to fill up the TODOs.&lt;/p&gt;</comment>
                            <comment id="14528001" author="ram_krish" created="Tue, 5 May 2015 06:10:39 +0000"  >&lt;p&gt;Patch that was pushed.  Should we add a release note now or when we deprecate the KVComparator? I will file a blocker against 2.0 to remove KVComparator.&lt;/p&gt;
{Edit}
&lt;p&gt;Should I file a blocker against 3.0 to remove KvComparator? or is it too early to do so?&lt;/p&gt;</comment>
                            <comment id="14528200" author="hudson" created="Tue, 5 May 2015 09:51:06 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #6456 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6456/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6456/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt; - Use CellComparator instead of KVComparator (Ram) (ramkrishna: rev 977f867439e960c668ee6311e47c904efc40f219)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueTestUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/PutSortReducer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/HFileOutputFormat2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StripeStoreFileManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestStripeCompactionPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilterBase.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/DefaultStoreEngine.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestReversibleScanners.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/codec/KeyValueCodecWithTags.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestReseekTo.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScannerHeartbeatMessages.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/decode/PrefixTreeArrayScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/TestCellComparator.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/CollectionBackedScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/codec/TestKeyValueCodecWithTags.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StripeStoreEngine.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/MockStoreFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFilterList.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Region.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/KeyValueSerialization.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRecoveredEdits.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StripeMultiFileWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/KeyValueScanFixture.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ReversedStoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/FixedFileTrailer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestPrefetch.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestKeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreEngine.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/PrefixTreeCodec.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestOperation.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/decode/PrefixTreeCell.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestDefaultStoreEngine.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestDependentColumnFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/encoding/TestPrefixTreeEncoding.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestBytes.java&lt;/li&gt;
	&lt;li&gt;hbase-it/src/test/java/org/apache/hadoop/hbase/mapreduce/IntegrationTestImportTsv.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWALEntryFilters.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/DefaultStoreFileManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ReversedKeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/encoding/TestSeekToBlockWithEncoders.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/codec/TestCellCodec.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TextSortReducer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/KeyValueSortReducer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestSingleColumnValueExcludeFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/MetaMockingUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestStripeStoreFileManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/filter/ParseFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestKeyValueScanFixture.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/SimpleTotalOrderPartitioner.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FilterList.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/BloomFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanInfo.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/codec/TestCellMessageCodec.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/Result.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/BloomFilterFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestStripeStoreEngine.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/test/java/org/apache/hadoop/hbase/codec/prefixtree/row/TestPrefixTreeSearcher.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestClientNoCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/codec/KeyValueCodec.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionFileSystem.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/CellComparator.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/test/java/org/apache/hadoop/hbase/codec/prefixtree/row/data/TestRowDataNumberStrings.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/codec/TestCellCodecWithTags.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCellSkipListSet.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/PrefixTreeSeeker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCellCodec.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestFixedFileTrailer.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/MetaCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilterWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/test/java/org/apache/hadoop/hbase/codec/prefixtree/row/data/TestRowDataSearcherRowMiss.java&lt;/li&gt;
	&lt;li&gt;hbase-examples/src/test/java/org/apache/hadoop/hbase/types/TestPBCell.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/ByteBloomFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/test/java/org/apache/hadoop/hbase/codec/prefixtree/row/BaseTestRowData.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/test/java/org/apache/hadoop/hbase/codec/prefixtree/row/data/TestRowDataSimple.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV3.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestSeekTo.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestStripeCompactor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/test/RedundantKVGenerator.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestSerialization.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/DefaultMemStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CellSkipListSet.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestResult.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestDefaultMemStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/CompressionTest.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14528647" author="stack" created="Tue, 5 May 2015 15:30:52 +0000"  >&lt;p&gt;No harm in a release note on a big patch that has had a bunch of work expended on it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should I file a blocker against 3.0 to remove KvComparator? or is it too early to do so?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds good to me&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14529659" author="apache9" created="Wed, 6 May 2015 00:44:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6456/findbugsResult/new/HIGH/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6456/findbugsResult/new/HIGH/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Should be a bug?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;BufferedDataBlockEncoder.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (comparator != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
  ...
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
  Cell r = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValue.KeyOnlyKeyValue(current.keyBuffer, 0, current.keyLength);
  comp = comparator.compareKeyIgnoresMvcc(seekCell, r);  &lt;span class=&quot;code-comment&quot;&gt;// &amp;lt;==== NPE?
&lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14529900" author="stack" created="Wed, 6 May 2015 04:41:12 +0000"  >&lt;p&gt;Smile. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;... see above from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14529919" author="ram_krish" created="Wed, 6 May 2015 04:54:48 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;&lt;br/&gt;
Thanks for pointing out.  Even before this the else should have been a dead code.  We can just remove that piece of code.&lt;br/&gt;
Before patch&lt;br/&gt;
See the constructor of BDE&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; BufferedEncodedSeeker(KVComparator comparator,
        HFileBlockDecodingContext decodingCtx) {
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.comparator = comparator;
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.samePrefixComparator = comparator;
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.decodingCtx = decodingCtx;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And this piece of code was &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (samePrefixComparator != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
........
&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
Cell r = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValue.KeyOnlyKeyValue(current.keyBuffer, 0, current.keyLength);
          comp = comparator.compareOnlyKeyPortion(seekCell, r);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Ideally both were same.  In this patch I removed this unnecessary two references.  But forgot to clear this.  I can given an addendum or raise a new JIRA for the this.&lt;/p&gt;</comment>
                            <comment id="14529934" author="stack" created="Wed, 6 May 2015 05:14:59 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; Make new patch I&apos;d say since it has a history. Link here.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12827547">HBASE-13630</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12724166">HBASE-11425</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12653437" name="HBASE-10800_1.patch" size="181137" author="ram_krish" created="Tue, 1 Jul 2014 18:21:13 +0000"/>
                            <attachment id="12724162" name="HBASE-10800_11.patch" size="400699" author="ram_krish" created="Thu, 9 Apr 2015 06:36:00 +0000"/>
                            <attachment id="12724186" name="HBASE-10800_12.patch" size="400902" author="ram_krish" created="Thu, 9 Apr 2015 09:12:11 +0000"/>
                            <attachment id="12724534" name="HBASE-10800_13.patch" size="396866" author="ram_krish" created="Fri, 10 Apr 2015 11:26:48 +0000"/>
                            <attachment id="12724751" name="HBASE-10800_14.patch" size="396383" author="ram_krish" created="Sat, 11 Apr 2015 09:49:40 +0000"/>
                            <attachment id="12724768" name="HBASE-10800_15.patch" size="396490" author="ram_krish" created="Sat, 11 Apr 2015 17:07:00 +0000"/>
                            <attachment id="12724868" name="HBASE-10800_16.patch" size="396865" author="ram_krish" created="Mon, 13 Apr 2015 04:29:36 +0000"/>
                            <attachment id="12725781" name="HBASE-10800_18.patch" size="397904" author="ram_krish" created="Thu, 16 Apr 2015 05:32:56 +0000"/>
                            <attachment id="12667129" name="HBASE-10800_2.patch" size="206182" author="ram_krish" created="Mon, 8 Sep 2014 05:33:03 +0000"/>
                            <attachment id="12728338" name="HBASE-10800_23.patch" size="373157" author="ram_krish" created="Mon, 27 Apr 2015 08:16:45 +0000"/>
                            <attachment id="12728316" name="HBASE-10800_23.patch" size="373157" author="ram_krish" created="Mon, 27 Apr 2015 05:50:30 +0000"/>
                            <attachment id="12728368" name="HBASE-10800_24.patch" size="374493" author="ram_krish" created="Mon, 27 Apr 2015 10:19:01 +0000"/>
                            <attachment id="12729429" name="HBASE-10800_25.patch" size="387472" author="ram_krish" created="Thu, 30 Apr 2015 07:31:03 +0000"/>
                            <attachment id="12729469" name="HBASE-10800_26.patch" size="387608" author="ram_krish" created="Thu, 30 Apr 2015 11:21:42 +0000"/>
                            <attachment id="12730150" name="HBASE-10800_27.patch" size="387360" author="ram_krish" created="Mon, 4 May 2015 10:22:04 +0000"/>
                            <attachment id="12730208" name="HBASE-10800_28.patch" size="387235" author="ram_krish" created="Mon, 4 May 2015 17:04:35 +0000"/>
                            <attachment id="12730379" name="HBASE-10800_29.patch" size="387342" author="ram_krish" created="Tue, 5 May 2015 06:10:39 +0000"/>
                            <attachment id="12709202" name="HBASE-10800_3.patch" size="280163" author="ram_krish" created="Fri, 3 Apr 2015 09:30:33 +0000"/>
                            <attachment id="12723308" name="HBASE-10800_4.patch" size="279244" author="ram_krish" created="Mon, 6 Apr 2015 06:40:44 +0000"/>
                            <attachment id="12723306" name="HBASE-10800_4.patch" size="279277" author="ram_krish" created="Mon, 6 Apr 2015 06:27:08 +0000"/>
                            <attachment id="12723314" name="HBASE-10800_5.patch" size="274766" author="ram_krish" created="Mon, 6 Apr 2015 07:55:45 +0000"/>
                            <attachment id="12723386" name="HBASE-10800_6.patch" size="278355" author="ram_krish" created="Mon, 6 Apr 2015 16:53:07 +0000"/>
                            <attachment id="12723845" name="HBASE-10800_7.patch" size="364372" author="ram_krish" created="Wed, 8 Apr 2015 06:14:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 1 Jul 2014 19:07:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>380895</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 32 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1tmjz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>381174</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>From 2.0 branch onwards KVComparator and its subclasses MetaComparator, RawBytesComparator are all deprecated. &lt;br/&gt;
All the comparators are moved to CellComparator.  MetaCellComparator, a subclass of CellComparator, will be used to compare hbase:meta cells.  &lt;br/&gt;
Previously exposed static instances KeyValue.COMPARATOR, KeyValue.META_COMPARATOR and KeyValue.RAW_COMPARATOR are deprecated instead use CellComparator.COMPARATOR and CellComparator.META_COMPARATOR.&lt;br/&gt;
Also note that there will be no RawBytesComparator.  Where ever we need to compare raw bytes use Bytes.BYTES_RAWCOMPARATOR.&lt;br/&gt;
CellComparator will always operate on cells and its components, abstracting the fact that a cell can be backed by a single byte[] as opposed to how KVComparators were working.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>