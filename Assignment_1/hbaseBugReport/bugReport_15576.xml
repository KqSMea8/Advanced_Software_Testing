<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:05:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-15576/HBASE-15576.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-15576] Support stateless scanning and scanning cursor</title>
                <link>https://issues.apache.org/jira/browse/HBASE-15576</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;After 1.1.0 released, we have partial and heartbeat protocol in scanning to prevent responding large data or timeout. Now for ResultScanner.next(), we may block for longer time larger than timeout settings to get a Result if the row is very large, or filter is sparse, or there are too many delete markers in files.&lt;/p&gt;

&lt;p&gt;However, in some scenes, we don&apos;t want it to be blocked for too long. For example, a web service which handles requests from mobile devices whose network is not stable and we can not set timeout too long(eg. only 5 seconds) between mobile and web service. This service will scan rows from HBase and return it to mobile devices. In this scene, the simplest way is to make the web service stateless. Apps in mobile devices will send several requests one by one to get the data until enough just like paging a list. In each request it will carry a start position which depends on the last result from web service. Different requests can be sent to different web service server because it is stateless.&lt;/p&gt;

&lt;p&gt;Therefore, the stateless web service need a cursor from HBase telling where we have scanned in RegionScanner when HBase client receives an empty heartbeat. And the service will return the cursor to mobile device although the response has no data. In next request we can start at the position of cursor, without the cursor we have to scan from last returned result and we may timeout forever. And of course even if the heartbeat message is not empty we can still use cursor to prevent re-scan the same rows/cells which has beed skipped.&lt;/p&gt;

&lt;p&gt;Obviously, we will give up consistency for scanning because even HBase client is also stateless, but it is acceptable in this scene. And maybe we can keep mvcc in cursor so we can get a consistent view?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13099&quot; title=&quot;Scans as in DynamoDB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13099&quot;&gt;HBASE-13099&lt;/a&gt; had some discussion, but it has no further progress by now.&lt;/p&gt;

&lt;p&gt;API:&lt;/p&gt;

&lt;p&gt;In Scan we need a new method setStateless to make the scanning stateless and need another timeout setting for stateless scanning. In this mode we will not block ResultScanner.next() longer than this timeout setting. And we will return Results in next() as usual but the last Result (or only Result if we receive empty heartbeat) has a special flag to mark it a cursor. The cursor Result has only one Cell. Users can scan like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt;( r = scanner.next() &amp;amp;&amp;amp; r != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !r.isCursor()){
    &lt;span class=&quot;code-comment&quot;&gt;//just like before
&lt;/span&gt;}
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(r != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;){
    &lt;span class=&quot;code-comment&quot;&gt;// scanning is not end, it is a cursor
&lt;/span&gt;} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
    &lt;span class=&quot;code-comment&quot;&gt;// scanning is end
&lt;/span&gt;}
scanner.close()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Implementation:&lt;/p&gt;

&lt;p&gt;We will have two options to support stateless scanning: &lt;br/&gt;
Only one rpc like small scanning, not supporting batch/partials and cursor is row level. It is simple to implementation.&lt;br/&gt;
Support big scanning with several rpc requests, supporting batch/partials and cursor is cell level. It is a little complex because we need seek at server side and we should make sure total time of rpc requests not exceed timeout setting.&lt;/p&gt;

&lt;p&gt;Or we can make it by two phases, support one-shot first?&lt;/p&gt;

&lt;p&gt;Any thoughts? Thanks.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12955224">HBASE-15576</key>
            <summary>Support stateless scanning and scanning cursor</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="13022191">HBASE-17143</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="yangzhe1991">Phil Yang</assignee>
                                    <reporter username="yangzhe1991">Phil Yang</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Apr 2016 08:20:00 +0000</created>
                <updated>Mon, 21 Nov 2016 14:12:11 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                <comments>
                            <comment id="15221419" author="yuzhihong@gmail.com" created="Fri, 1 Apr 2016 09:17:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;cursor is row level&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This seems to have limited usefulness.&lt;/p&gt;

&lt;p&gt;Can you start working on design doc for cell level cursor and share the doc on this JIRA ?&lt;/p&gt;</comment>
                            <comment id="15221456" author="yangzhe1991" created="Fri, 1 Apr 2016 09:36:57 +0000"  >&lt;p&gt;Sure, will upload design doc next week &lt;/p&gt;</comment>
                            <comment id="15221485" author="yangzhe1991" created="Fri, 1 Apr 2016 10:00:18 +0000"  >&lt;p&gt;And another question is, if we do this at cell level, should we keep consistency of different scans within a row? Between two requests, there may be Put/Delete operation, and region may move/split. If we keep this by offering mvcc number(have not seen if it works) in cursor, in an extreme case, between two requests there is a Delete and region run a compaction and clear the data, we can not read the cell... After all, we can not guarantee the time interval between two stateless scanning.&lt;/p&gt;</comment>
                            <comment id="15221503" author="anoop.hbase" created="Fri, 1 Apr 2016 10:16:03 +0000"  >&lt;p&gt;So it is stateless and cursor is kind of state info and that is saved in client side?&lt;/p&gt;</comment>
                            <comment id="15221770" author="yuzhihong@gmail.com" created="Fri, 1 Apr 2016 14:33:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;we can not read the cell..&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In that case, either degrade to row level or throw exception to client.&lt;/p&gt;</comment>
                            <comment id="15221841" author="stack" created="Fri, 1 Apr 2016 15:22:49 +0000"  >&lt;p&gt;Hello &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yangzhe1991&quot; class=&quot;user-hover&quot; rel=&quot;yangzhe1991&quot;&gt;Phil Yang&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Now for ResultScanner.next(), we may block for longer time larger than timeout settings to get a Result if the row is very large, or filter is sparse, or there are too many delete markers in files.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why you say the above? With Scanner chunking, don&apos;t we return early if we hit thresholds (size, time?). Re: &lt;a href=&quot;https://blogs.apache.org/hbase/entry/scan_improvements_in_hbase_1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://blogs.apache.org/hbase/entry/scan_improvements_in_hbase_1&lt;/a&gt; But perhaps you are referring to the case where even with this in place, we can go on longer than a timeout?&lt;/p&gt;

&lt;p&gt;What will the Cursor return? The top of the merge sort heap and the mvcc? Yeah, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13099&quot; title=&quot;Scans as in DynamoDB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13099&quot;&gt;HBASE-13099&lt;/a&gt;, doing like dynamodb relates here (Enis comment on 1. and 2. in particular). The Cursor would be maintained internally? You see any need of our exposing it to the client?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Only one rpc like small scanning, not supporting batch/partials and cursor is row level. It is simple to implementation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How would this work against a big row?&lt;/p&gt;

&lt;p&gt;On your &apos;another question&apos;, if the Put/Delete are after your Scan start, then you will not see them because of mvcc. If move/split, the mvcc should still apply; if it doesn&apos;t, it is a bug. The issue as to what happens when a delete comes in after the Scan starts and then a compaction runs clearing your Cell &amp;#8211; and the Scan is totally stateless &amp;#8211; is a problem. I think that even for stateful scanners, if a move and then a compaction, it could fail to read Cells that were present when the Scan started (Having Scanner &apos;degrade to row level&apos; &amp;#8211; i.e. change how its working mid-scan &amp;#8211; would be erratic behavior and not sure how you&apos;d throw an exception for a Cell you don&apos;t is missing).&lt;/p&gt;

&lt;p&gt;Resetting the seeks on the server-side is expensive but you know this already I&apos;d say.&lt;/p&gt;
</comment>
                            <comment id="15221918" author="yangzhe1991" created="Fri, 1 Apr 2016 16:22:24 +0000"  >&lt;p&gt;Hi stack, thanks for your reply.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With Scanner chunking, don&apos;t we return early if we hit thresholds (size, time?)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes the server will return early to client, but if at client there is no complete Result in cache after rpc, client will do another rpc request . So for users, ResultScanner.next() will still be blocked until we scan a complete row, so the total time for blocking may exceed timeout setting, right?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Cursor would be maintained internally? You see any need of our exposing it to the client?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In description, I described a scene that the web service(which uses HBase client) is stateless to handle requests from mobile devices. A group of continuous scanning requests may come from different web service servers(different HBase clients). So it should be exposed to client and to mobile devices. &lt;br/&gt;
Mobile device ---&lt;del&gt;(telling where we start to read)&lt;/del&gt;-----&lt;del&gt;&amp;gt;any one of web service servers&lt;/del&gt;----&lt;del&gt;(open a scanner)&lt;/del&gt;-----&amp;gt; region server&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How would this work against a big row?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is based on the requirement of users. For example, at Xiaomi we still use 0.9x which doesn&apos;t support scan chunking yet. So we avoid any big row. Of course, cursor for cell level can be used in any cases, if we support row level fist, finally we must support cell level.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If the Put/Delete are after your Scan start, then you will not see them because of mvcc. If move/split, the mvcc should still apply; if it doesn&apos;t, it is a bug.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If HBase clients are stateless, in each scan we will open a new scanner at server, will we still not see the Put/Delete? And what will happen for cell level?&lt;/p&gt;</comment>
                            <comment id="15221927" author="yangzhe1991" created="Fri, 1 Apr 2016 16:30:34 +0000"  >&lt;p&gt;Sorry, one line is formatted wrongly and I have no access to edit... &lt;/p&gt;

&lt;p&gt;I think we can regard them as a HTTP service and a SQL database, for example, mobile device request a HTTP service with path /read?lastrow=10 , the http server read data from database by &quot;select * from table where id &amp;gt;10 limit 10&quot;. It will return rows from 11 to 20. And next http request will be /read?lastrow=20, and so on.&lt;/p&gt;</comment>
                            <comment id="15221933" author="yangzhe1991" created="Fri, 1 Apr 2016 16:31:50 +0000"  >&lt;p&gt;Yes, I think so.&lt;/p&gt;</comment>
                            <comment id="15221954" author="stack" created="Fri, 1 Apr 2016 16:48:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;So for users, ResultScanner.next() will still be blocked until we scan a complete row, so the total time for blocking may exceed timeout setting, right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Even if the client asks for partial result? If client asks for partials, I don&apos;t know, but will they get an empty Row if nothing to report, if it is a heartbeat only?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So it should be exposed to client and to mobile devices. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok. Makes sense.&lt;/p&gt;

&lt;p&gt;The dynamodb discussion makes sense here where we&apos;d pass back to the client a Scan description with last-thing-seen+mvcc...  We&apos;d use this on construction of a new Scan on each access....&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;....will we still not see the Put/Delete?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The new Scan would be made with the client volunteered mvcc, something we do not support currently....  Cells would be ruled in/out by mvcc so this would apply to Cells applied by Put/Delete (i.e. the cell level).&lt;/p&gt;

&lt;p&gt;Are you talking of patching 0.9x? Or master branch?&lt;/p&gt;




</comment>
                            <comment id="15222033" author="yangzhe1991" created="Fri, 1 Apr 2016 17:30:36 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Even if the client asks for partial result?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If client setAllowPartialResults, next() will still be blocked if we has no cell returned in heartbeat message, and next() will return if client get some cells.&lt;/p&gt;

&lt;p&gt;I think we should do this based on chunking protocol because we can get break position easily by time limit logic at server side to prevent timeout at client side. So we can work on master first.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The new Scan would be made with the client volunteered mvcc, something we do not support currently..&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If I am not wrong, in HFile we don&apos;t save mvcc for each Cells. Coincidently I had a discussion with &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt; and other workmates, we think we should save mvcc in HFile to solve some issues on replication. So maybe we can do it first as an independent task? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15222105" author="anoop.hbase" created="Fri, 1 Apr 2016 18:22:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;If I am not wrong, in HFile we don&apos;t save mvcc for each Cells. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Why you think so?  Yes we do save mvcc/seqNo  to HFiles.&lt;/p&gt;</comment>
                            <comment id="15222315" author="stack" created="Fri, 1 Apr 2016 20:37:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;we think we should save mvcc in HFile to solve some issues on replication. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We have been in a bit of an in-between place here for way too long. They are &apos;there&apos; sometimes. They are there when we flush so that any ongoing scanners that span memory and hfiles will do the right thing. But then they get compacted away after some period of time replaced by a global sequenceid on the whole hfile.&lt;/p&gt;

&lt;p&gt;Would make things easier to reason about at recovery and replication time if always present. Folks complain about size they occupy.&lt;/p&gt;

&lt;p&gt;There is also the hybrid logical clocks ticket which is related (overload timestamp to do sequenceid too) but that &apos;d be 2.0.&lt;/p&gt;</comment>
                            <comment id="15222841" author="apache9" created="Sat, 2 Apr 2016 10:27:43 +0000"  >&lt;blockquote&gt;
&lt;p&gt;There is also the hybrid logical clocks ticket which is related (overload timestamp to do sequenceid too) but that &apos;d be 2.0.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think the hybrid logical clock is used to replace sequence id, not timestamp, right?&lt;/p&gt;

&lt;p&gt;This is another big story I&apos;d say. In short words, the &apos;Delete Version&apos; operation is not idempotent in the current implementation, the final result maybe different if the major compaction happens at different time. We have been challenged many times by other teams about the inconsistency between replication master and slave... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Will open another issue to discuss the mvcc or seqid thing.&lt;/p&gt;

&lt;p&gt;And for this issue, the cell level cursor is way more complicated, both for us and the end user. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yangzhe1991&quot; class=&quot;user-hover&quot; rel=&quot;yangzhe1991&quot;&gt;Phil Yang&lt;/a&gt; has dived into it for weeks, let&apos;s see his design doc first. And I suggest we do the row level cursor first, the logic is clear, and can solve some of our problems.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15222983" author="yangzhe1991" created="Sat, 2 Apr 2016 17:56:29 +0000"  >&lt;blockquote&gt;
&lt;p&gt;They are there when we flush so that any ongoing scanners that span memory and hfiles will do the right thing. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I see, thanks for explanation. So we can scan with a specific mvcc which is not too old, right?&lt;/p&gt;

&lt;p&gt;I notice in &lt;a href=&quot;https://hbase.apache.org/acid-semantics.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hbase.apache.org/acid-semantics.html&lt;/a&gt;, it says that &quot;Any row returned by the scan will be a consistent view&quot; but &quot;A consistent view is not guaranteed intra-row scanning&quot;. If we have mvcc in the scanner, why we can not guarantee this if user setBatch? Thanks.&lt;/p&gt;</comment>
                            <comment id="15227875" author="yangzhe1991" created="Wed, 6 Apr 2016 07:18:46 +0000"  >&lt;p&gt;Post a document at &lt;a href=&quot;https://docs.google.com/document/d/1pGf2J7xt5V0E8hD1hd-zjsTvnPN8CC1OEyoaoozJQhU&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.google.com/document/d/1pGf2J7xt5V0E8hD1hd-zjsTvnPN8CC1OEyoaoozJQhU&lt;/a&gt;&lt;br/&gt;
Comments are welcomed &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15227880" author="yangzhe1991" created="Wed, 6 Apr 2016 07:21:10 +0000"  >&lt;p&gt;Post a document at &lt;a href=&quot;https://docs.google.com/document/d/1pGf2J7xt5V0E8hD1hd-zjsTvnPN8CC1OEyoaoozJQhU&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.google.com/document/d/1pGf2J7xt5V0E8hD1hd-zjsTvnPN8CC1OEyoaoozJQhU&lt;/a&gt;&lt;br/&gt;
Comments are welcomed &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 1 Apr 2016 09:17:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            36 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2vi53:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>