<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:31:38 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5864/HBASE-5864.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5864] Error while reading from hfile in 0.94</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5864</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Got the following stacktrace during region split.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2012-04-24 16:05:42,168 WARN org.apache.hadoop.hbase.regionserver.Store: Failed getting store size for value
java.io.IOException: Requested block is out of range: 2906737606134037404, lastDataBlockOffset: 84764558
	at org.apache.hadoop.hbase.io.hfile.HFileReaderV2.readBlock(HFileReaderV2.java:278)
	at org.apache.hadoop.hbase.io.hfile.HFileBlockIndex$BlockIndexReader.midkey(HFileBlockIndex.java:285)
	at org.apache.hadoop.hbase.io.hfile.HFileReaderV2.midkey(HFileReaderV2.java:402)
	at org.apache.hadoop.hbase.regionserver.StoreFile$Reader.midkey(StoreFile.java:1638)
	at org.apache.hadoop.hbase.regionserver.Store.getSplitPoint(Store.java:1943)
	at org.apache.hadoop.hbase.regionserver.RegionSplitPolicy.getSplitPoint(RegionSplitPolicy.java:77)
	at org.apache.hadoop.hbase.regionserver.HRegion.checkSplit(HRegion.java:4921)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.splitRegion(HRegionServer.java:2901)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12552287">HBASE-5864</key>
            <summary>Error while reading from hfile in 0.94</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="gopinathan.av">Gopinathan A</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Apr 2012 11:49:48 +0000</created>
                <updated>Wed, 18 Sep 2013 20:26:48 +0000</updated>
                            <resolved>Thu, 26 Apr 2012 20:14:58 +0000</resolved>
                                    <version>0.94.0</version>
                                    <fixVersion>0.94.0</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13260455" author="ram_krish" created="Tue, 24 Apr 2012 12:02:09 +0000"  >&lt;p&gt;The problem is because of using checksums.  This problem will be coming based on the block size and the kv size that are added in HFile.&lt;br/&gt;
When we try to read a block, Consider the following code &lt;br/&gt;
In BlockIterator.blockRange&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Override
        &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HFileBlock nextBlock() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (offset &amp;gt;= endOffset)
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
          HFileBlock b = readBlockData(offset, -1, -1, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
          offset += b.getOnDiskSizeWithHeader();
          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; b;
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In case of noncompressed algo in &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; HFileBlock readBlockDataInternal(FSDataInputStream is, &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; offset, 
        &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; onDiskSizeWithHeaderL,
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; uncompressedSize, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; pread, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; verifyChecksum) 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 b = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HFileBlock(headerBuf, getMinorVersion());

        &lt;span class=&quot;code-comment&quot;&gt;// This will also allocate enough room &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the next block&apos;s header.
&lt;/span&gt;        b.allocateBuffer(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Inside allocateBuffer&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; cksumBytes = totalChecksumBytes();
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; capacityNeeded = headerSize() + uncompressedSizeWithoutHeader +
        cksumBytes +
        (extraBytes ? headerSize() : 0);

    ByteBuffer newBuf = ByteBuffer.allocate(capacityNeeded);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This byte allocated for this block is having the checksumbytes also added to it.&lt;br/&gt;
After fetching the block and its corresponding stream, we try to get the root block.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// Data index. We also read statistics about the block index written after
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// the root level.
&lt;/span&gt;    dataBlockIndexReader.readMultiLevelIndexRoot(
        blockIter.nextBlockAsStream(BlockType.ROOT_INDEX),
        trailer.getDataIndexCount());

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Inside readMultiLevelIndexRoot&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
readRootIndex(in, numEntries);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (in.available() &amp;lt; MID_KEY_METADATA_SIZE) {
        &lt;span class=&quot;code-comment&quot;&gt;// No mid-key metadata available.
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here the InputStream &apos;in&apos; is formed from the blk.getByteStream().&lt;br/&gt;
Here the inputstream actually will have its available length including the checksum bytes.&lt;br/&gt;
While doing readRootIndex&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void readRootIndex(DataInput in, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; numEntries)
        &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We read only the data and the remaining checksum bytse allocated are still available with the input stream.&lt;br/&gt;
We know that for every 16k data size we have 4 byte check sum.&lt;br/&gt;
Now if my data size is ~66k i will have 20bytes check sum.  So the &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (in.available() &amp;lt; MID_KEY_METADATA_SIZE) {
        &lt;span class=&quot;code-comment&quot;&gt;// No mid-key metadata available.
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;will now be greater than MID_KEY_METADATA_SIZE(16 bytes) and thus giving us some invalid &apos;midLeafBlockOffset&apos;.&lt;br/&gt;
So when we try to read the file we get some abnormal values.  The same can be reproduced using the testcase.&lt;/p&gt;
</comment>
                            <comment id="13260456" author="ram_krish" created="Tue, 24 Apr 2012 12:02:55 +0000"  >&lt;p&gt;Please correct me if am wrong.  &lt;br/&gt;
Am working on a patch, which i can upload for verification.  Maynot be the final one.&lt;/p&gt;</comment>
                            <comment id="13260634" author="ram_krish" created="Tue, 24 Apr 2012 14:59:03 +0000"  >&lt;p&gt;I have attached a sample testcase.  Not a regular test case.  If you apply the test case and in the logs search for the string &lt;br/&gt;
&quot;The midLeafBlockOffset is  &quot;.&lt;br/&gt;
We should be getting &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2012-04-24 20:26:21,140 DEBUG [main] hfile.HFileBlockIndex$BlockIndexReader(553): The midLeafBlockOffset is  7767124539785491489
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13260645" author="stack" created="Tue, 24 Apr 2012 15:16:02 +0000"  >&lt;p&gt;Good find lads.  I&apos;m not sure I follow.  Is it fixable?&lt;/p&gt;</comment>
                            <comment id="13260665" author="ram_krish" created="Tue, 24 Apr 2012 15:38:05 +0000"  >&lt;p&gt;The attached patch seems to fix the problem that we encountered.  Needs more testing and also with files with old format.&lt;br/&gt;
Will find out if something better is there.&lt;/p&gt;</comment>
                            <comment id="13260672" author="stack" created="Tue, 24 Apr 2012 15:44:33 +0000"  >&lt;p&gt;I&apos;m not sure I follow what your patch is doing Ram.  And maybe we need a test around split of hfile?&lt;/p&gt;

&lt;p&gt;What is this doing:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; ENTRY_COUNT = 10000;
+    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; ENTRY_COUNT = 50000;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is asking for too many entries?&lt;/p&gt;

&lt;p&gt;Good stuff.&lt;/p&gt;</comment>
                            <comment id="13260697" author="zhihyu@ebaysf.com" created="Tue, 24 Apr 2012 16:47:27 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    DataInputStream nextBlockAsStream(BlockType blockType) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
+    HFileBlock nextBlockAsStream(BlockType blockType) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The method should be named nextBlock() because stream isn&apos;t returned.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+     * Read in the root-level index from the given input stream. Must match
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;input stream&apos; is no longer the input. HFileBlock is.&lt;br/&gt;
Please add @return to the javadoc.&lt;br/&gt;
For TestHFileWriterV2.java:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Compression.Algorithm COMPRESS_ALGO = Compression.Algorithm.GZ;
+    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Compression.Algorithm COMPRESS_ALGO = Compression.Algorithm.NONE;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We should exercise both compression algorithms. Refactoring is needed.&lt;/p&gt;</comment>
                            <comment id="13260700" author="ram_krish" created="Tue, 24 Apr 2012 16:48:52 +0000"  >&lt;p&gt;Just added a test case to show how midKey() will throw IOException.&lt;br/&gt;
Stack what the patch does is,&lt;br/&gt;
For the checksum we add some additional bytes while forming the inputstream to read the block.&lt;br/&gt;
After reading the block we just check if the bytes available in stream is less than the MID_KEY_METADATA_SIZE.&lt;br/&gt;
But in this case (50000 is many? but i get only one root level index), there is always some remaining bytes added as part of check sum and it is always more than MID_KEY_METADATA_SIZE.&lt;/p&gt;

&lt;p&gt;The testcase that we carried out to get this problem was,&lt;br/&gt;
Created a table with no split keys.&lt;br/&gt;
Start pumping data to this region using parallel threads.&lt;br/&gt;
Allow a couple of flush/compaction.  &lt;br/&gt;
Then try to split the region.  We got this problem. &lt;br/&gt;
I may be wrong, pls do correct me and feel free to update the patch also.&lt;/p&gt;
</comment>
                            <comment id="13260703" author="ram_krish" created="Tue, 24 Apr 2012 16:51:39 +0000"  >&lt;p&gt;@Ted&lt;br/&gt;
Sorry just now saw your comments. Will update based on further reviews. Thanks. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13260709" author="zhihyu@ebaysf.com" created="Tue, 24 Apr 2012 17:00:02 +0000"  >&lt;p&gt;Patch v2 passes the new test.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void writeDataAndReadFromHFile(Path hfilePath,
+      Algorithm COMPRESS_ALGO, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; ENTRY_COUNT, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; findMidKey) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please don&apos;t use all upper case parameter names.&lt;/p&gt;

&lt;p&gt;Please refactor the new readRootIndex() to re-use the existing method.&lt;/p&gt;</comment>
                            <comment id="13260743" author="zhihyu@ebaysf.com" created="Tue, 24 Apr 2012 17:43:54 +0000"  >&lt;p&gt;The following computation assumes checksum is on:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; numBytes = (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;) ChecksumUtil.numBytes(blk
+          .getOnDiskDataSizeWithHeader(), blk.getBytesPerChecksum());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If checksum is off, we would get &apos;divide by 0&apos; exception.&lt;/p&gt;

&lt;p&gt;I suggest using HFileBlock.totalChecksumBytes() in place of the above.&lt;/p&gt;</comment>
                            <comment id="13260744" author="hadoopqa" created="Tue, 24 Apr 2012 17:45:57 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12524007/HBASE-5864_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12524007/HBASE-5864_2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestRegionRebalancing&lt;br/&gt;
                  org.apache.hadoop.hbase.io.hfile.TestForceCacheImportantBlocks&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1627//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1627//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1627//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1627//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1627//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1627//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13261183" author="lhofhansl" created="Wed, 25 Apr 2012 00:40:49 +0000"  >&lt;p&gt;Dhruba should have a look this too.&lt;/p&gt;</comment>
                            <comment id="13261276" author="ram_krish" created="Wed, 25 Apr 2012 03:54:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;Dhruba should have a look this too.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 on Dhruba seeing this.&lt;/p&gt;</comment>
                            <comment id="13261307" author="ram_krish" created="Wed, 25 Apr 2012 05:16:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;I suggest using HFileBlock.totalChecksumBytes() in place of the above.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes Ted this should be used.  It&apos;s scope is default so we can use it.  &lt;/p&gt;</comment>
                            <comment id="13261315" author="lhofhansl" created="Wed, 25 Apr 2012 05:46:32 +0000"  >&lt;p&gt;I also don&apos;t quite follow the patch or problem.&lt;br/&gt;
How is it that HBase during normal operation (scanning, etc) can read HFiles correctly?&lt;/p&gt;</comment>
                            <comment id="13261319" author="ram_krish" created="Wed, 25 Apr 2012 05:56:51 +0000"  >&lt;p&gt;@Lars&lt;br/&gt;
In a file that has only one level of index, if we need to find the midkey( during external split operation) we should ideally get the midkey from&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
        &lt;span class=&quot;code-comment&quot;&gt;// The middle of the root-level index.
&lt;/span&gt;        midKey = blockKeys[(rootCount - 1) / 2];
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Because the midLeafBlockOffset should be -1.&lt;br/&gt;
But in this problem that we faced the midLeafBlockOffset is wrongly set with some value and hence the midkey() tries to &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (midLeafBlockOffset &amp;gt;= 0) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (cachingBlockReader == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
          &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Have to read the middle leaf block but &quot;&lt;/span&gt; +
              &lt;span class=&quot;code-quote&quot;&gt;&quot;no block reader available&quot;&lt;/span&gt;);
        }

        &lt;span class=&quot;code-comment&quot;&gt;// Caching, using pread, assuming &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; is not a compaction.
&lt;/span&gt;        HFileBlock midLeafBlock = cachingBlockReader.readBlock(
            midLeafBlockOffset, midLeafBlockOnDiskSize, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;,
            BlockType.LEAF_INDEX);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;That is where the problem happens as per this bug. For a single level index file there should not be any midLeafBlockOffset. Correct me if am wrong.&lt;/p&gt;</comment>
                            <comment id="13261324" author="lhofhansl" created="Wed, 25 Apr 2012 06:04:35 +0000"  >&lt;p&gt;I see. This is a blocker then.&lt;/p&gt;</comment>
                            <comment id="13261654" author="ram_krish" created="Wed, 25 Apr 2012 14:06:53 +0000"  >&lt;p&gt;Updated the patch.  All test cases passed.  Verified a scenario where i had multiple level indexes and was able to get the correct midkey.&lt;br/&gt;
Please review.&lt;/p&gt;</comment>
                            <comment id="13261686" author="hadoopqa" created="Wed, 25 Apr 2012 14:51:22 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12524272/HBASE-5864_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12524272/HBASE-5864_3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestRegionRebalancing&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1644//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1644//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1644//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1644//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1644//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1644//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13261831" author="dhruba" created="Wed, 25 Apr 2012 17:35:10 +0000"  >&lt;p&gt;Thanks for finding this ramkrishna. I can see how the bug is occuring, very good analysis and thanks for finding it. I m trying to digest the fix you are providing.&lt;/p&gt;</comment>
                            <comment id="13261917" author="lhofhansl" created="Wed, 25 Apr 2012 18:38:22 +0000"  >&lt;p&gt;TestRegionRebalancing is unrelated (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5848&quot; title=&quot;Create table with EMPTY_START_ROW passed as splitKey causes the HMaster to abort&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5848&quot;&gt;&lt;del&gt;HBASE-5848&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="13262266" author="zhihyu@ebaysf.com" created="Thu, 26 Apr 2012 00:10:52 +0000"  >&lt;p&gt;Latest patch looks good. Minor comments:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-comment&quot;&gt;// after reading the root index the check sum bytes has to&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;check sum bytes has to&apos; -&amp;gt; &apos;checksum bytes have to&apos;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-comment&quot;&gt;// be subracted to know &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the mid key exists.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;subracted&apos; -&amp;gt; &apos;subtracted&apos;&lt;/p&gt;</comment>
                            <comment id="13262363" author="lhofhansl" created="Thu, 26 Apr 2012 03:52:18 +0000"  >&lt;p&gt;This is the only issue in the way of the next RC attempt for 0.94.0.&lt;br/&gt;
I don&apos;t feel I can +1 this until a lot of study of the implication.&lt;/p&gt;

&lt;p&gt;Was hoping Dhruba would be able to grok it. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13262383" author="dhruba" created="Thu, 26 Apr 2012 05:28:03 +0000"  >&lt;p&gt;The meat of the change is in readMultiLevelIndexRoot() in which, instead of using in.available() it uses the in.available() - sizeofchecksum to determine if mid-key metadat is available, now I understand it. &lt;br/&gt;
+1 on the fix.&lt;/p&gt;</comment>
                            <comment id="13262385" author="dhruba" created="Thu, 26 Apr 2012 05:30:11 +0000"  >&lt;p&gt;I also grepped thru the code to see if there is any other place where readRootIndex().available() is used but could not find any.&lt;/p&gt;

&lt;p&gt;This is a good bug to catch. Ramkrishna: what was the symptom that triggered you to look for this bug?&lt;/p&gt;</comment>
                            <comment id="13262389" author="ram_krish" created="Thu, 26 Apr 2012 05:40:56 +0000"  >&lt;p&gt;@Dhruba&lt;br/&gt;
Thanks for looking into the patch&lt;/p&gt;

&lt;p&gt;The testcase that we carried out to get this problem was,&lt;/p&gt;

&lt;p&gt;-&amp;gt;Created a table with no split keys.&lt;br/&gt;
-&amp;gt;Start pumping data to this region using parallel threads.&lt;br/&gt;
-Allow a couple of flush/compaction.&lt;br/&gt;
-&amp;gt;Then try to split the region. It did not split saying midkey offset is not in range. &lt;/p&gt;


&lt;p&gt;Then we tried to reproduce this with different log messages added and found that it is while reading the root level index we get this problem.&lt;br/&gt;
Gopi (who saw this bug) and me spent 2 full days to come up with this.&lt;/p&gt;</comment>
                            <comment id="13262391" author="lhofhansl" created="Thu, 26 Apr 2012 05:42:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;The meat of the change is in readMultiLevelIndexRoot() in which, instead of using in.available() it uses the in.available() - sizeofchecksum&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So it seems we could have a smaller change that just does that (plus the tests)?&lt;br/&gt;
I agree that this is a great catch!&lt;/p&gt;</comment>
                            <comment id="13262393" author="ram_krish" created="Thu, 26 Apr 2012 05:55:35 +0000"  >&lt;p&gt;@Lars&lt;br/&gt;
I still feel the change is very small &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.  Just to get the checkSumBytes instead of getting the stream am now getting the block from which i can get the stream again.&lt;/p&gt;</comment>
                            <comment id="13262400" author="lhofhansl" created="Thu, 26 Apr 2012 06:14:40 +0000"  >&lt;p&gt;@Ram: You are right it is a small change.&lt;br/&gt;
Just wondering whether we actually need the part that changes &quot;public DataInputStream nextBlockAsStream(BlockType blockType)&quot; to &quot;public HFileBlock nextBlockWithBlockType(BlockType blockType)&quot;.&lt;/p&gt;</comment>
                            <comment id="13262401" author="lhofhansl" created="Thu, 26 Apr 2012 06:15:43 +0000"  >&lt;p&gt;Ah OK. Never mind, you need the Block to get the checksumBytes.&lt;/p&gt;</comment>
                            <comment id="13262403" author="lhofhansl" created="Thu, 26 Apr 2012 06:17:50 +0000"  >&lt;p&gt;I think I get the change now. +1&lt;/p&gt;</comment>
                            <comment id="13262812" author="lhofhansl" created="Thu, 26 Apr 2012 18:09:43 +0000"  >&lt;p&gt;Going to commit in a few unless there&apos;re objections.&lt;/p&gt;</comment>
                            <comment id="13263081" author="lhofhansl" created="Thu, 26 Apr 2012 20:14:58 +0000"  >&lt;p&gt;Committed to 0.94 and 0.96.&lt;br/&gt;
Thanks for the Ram.&lt;br/&gt;
Thanks for reviews Dhruba and Ted.&lt;/p&gt;</comment>
                            <comment id="13263100" author="hudson" created="Thu, 26 Apr 2012 20:27:20 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #151 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/151/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/151/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5864&quot; title=&quot;Error while reading from hfile in 0.94&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5864&quot;&gt;&lt;del&gt;HBASE-5864&lt;/del&gt;&lt;/a&gt; Error while reading from hfile in 0.94 (Ram) (Revision 1331057)&lt;/p&gt;

&lt;p&gt;     Result = ABORTED&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13263136" author="hudson" created="Thu, 26 Apr 2012 20:53:48 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #22 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/22/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/22/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5864&quot; title=&quot;Error while reading from hfile in 0.94&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5864&quot;&gt;&lt;del&gt;HBASE-5864&lt;/del&gt;&lt;/a&gt; Error while reading from hfile in 0.94 (Ram) (Revision 1331057)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13263185" author="hudson" created="Thu, 26 Apr 2012 22:02:23 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2819 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2819/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2819/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5864&quot; title=&quot;Error while reading from hfile in 0.94&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5864&quot;&gt;&lt;del&gt;HBASE-5864&lt;/del&gt;&lt;/a&gt; Error while reading from hfile in 0.94 (Ram) (Revision 1331058)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13263373" author="hudson" created="Fri, 27 Apr 2012 05:49:36 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #186 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/186/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5864&quot; title=&quot;Error while reading from hfile in 0.94&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5864&quot;&gt;&lt;del&gt;HBASE-5864&lt;/del&gt;&lt;/a&gt; Error while reading from hfile in 0.94 (Ram) (Revision 1331058)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13263684" author="jmhsieh" created="Fri, 27 Apr 2012 14:20:09 +0000"  >&lt;p&gt;I haven&apos;t looked carefully but do you all think this would affect the 0.92 line as well?&lt;/p&gt;</comment>
                            <comment id="13263766" author="lhofhansl" created="Fri, 27 Apr 2012 16:21:12 +0000"  >&lt;p&gt;@Jon: This is caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5074&quot; title=&quot;support checksums in HBase block cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5074&quot;&gt;&lt;del&gt;HBASE-5074&lt;/del&gt;&lt;/a&gt;, which is in 0.94+ only.&lt;/p&gt;</comment>
                            <comment id="13265009" author="ram_krish" created="Mon, 30 Apr 2012 16:27:12 +0000"  >&lt;p&gt;Let me update the resolved versions as 0.96 also. I was just about to prepare a patch for trunk.  Thanks Lars for taking care of it.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12535789">HBASE-5074</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12523999" name="HBASE-5864_1.patch" size="5916" author="ram_krish" created="Tue, 24 Apr 2012 15:36:54 +0000"/>
                            <attachment id="12524007" name="HBASE-5864_2.patch" size="7902" author="ram_krish" created="Tue, 24 Apr 2012 16:42:23 +0000"/>
                            <attachment id="12524272" name="HBASE-5864_3.patch" size="11023" author="ram_krish" created="Wed, 25 Apr 2012 13:58:00 +0000"/>
                            <attachment id="12523992" name="HBASE-5864_test.patch" size="1565" author="ram_krish" created="Tue, 24 Apr 2012 14:57:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 24 Apr 2012 12:02:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>236687</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 33 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i068pz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34344</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>