<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:06:08 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2952/HBASE-2952.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2952] HConnectionManager&apos;s shutdown hook interferes with client&apos;s operations</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2952</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;My HBase client calls incrementColValue() in pairs. If someone kills the client (SIGINT or SIGTERM) I want my client&apos;s increment threads to gracefully exit. If a thread has already done one of the incrementColValue() then I want that thread to complete the other incrementColValue() and then exit.&lt;/p&gt;

&lt;p&gt;For this purpose I installed my own shutdownHook(). My shitdownHook() thread &apos;sugnals&apos; all the threads in my process that it is time to exit and then waits for them to complete.&lt;/p&gt;

&lt;p&gt;The problem is that HConnectionManager&apos;s shutdownHook thread also runs and shuts down all connections and IPC threads.&lt;/p&gt;

&lt;p&gt;My increment thread keeps waiting to increment and then times out after 240s. Two problems with this - the incrementColValiue() didn&apos;t go through which will increase the chances of inconsistency in my HBase data. And it too 240s to exit. I am pasting some of the messages that the client thread outputs while it tries contact the HBase server.&lt;/p&gt;

&lt;p&gt;Signalled. Exiting ...&lt;br/&gt;
2010-09-01 12:11:14,769 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;HCM.shutdownHook&amp;#93;&lt;/span&gt; zookeeper.ZooKeeperWrapper(787): &amp;lt;localhost:/hbase,org.apache.hadoop.hbase.client.HConnectionManager&amp;gt;Closed connection with ZooKeeper; /hbase/root-region-server&lt;br/&gt;
flushing after 7899&lt;br/&gt;
2010-09-01 12:11:19,669 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Line Processing Thread 0&amp;#93;&lt;/span&gt; client.HConnectionManager$TableServers(903): Cache hit for row &amp;lt;&amp;gt; in tableName .META.: location server hadoop2205.snc3.facebook.com:60020, location region name .META.,,1.1028785192&lt;br/&gt;
2010-09-01 12:11:19,671 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;Line Processing Thread 0&amp;#93;&lt;/span&gt; zookeeper.ZooKeeperWrapper(206): Reconnecting to zookeeper&lt;br/&gt;
2010-09-01 12:11:19,671 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Line Processing Thread 0&amp;#93;&lt;/span&gt; zookeeper.ZooKeeperWrapper(212): &amp;lt;localhost:/hbase,org.apache.hadoop.hbase.client.HConnectionManager&amp;gt;Connected to zookeeper again&lt;br/&gt;
2010-09-01 12:11:24,679 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Line Processing Thread 0&amp;#93;&lt;/span&gt; client.HConnectionManager$TableServers(964): Removed .META.,,1.1028785192 for tableName=.META. from cache because of content_action_url_metrics,\x080r&amp;amp; B\xF7\x81_T\x07\x08\x16uOrcom.gigya 429934274290948,99999999999999&lt;br/&gt;
2010-09-01 12:11:24,680 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Line Processing Thread 0&amp;#93;&lt;/span&gt; client.HConnectionManager$TableServers(857): locateRegionInMeta attempt 0 of 4 failed; retrying after sleep of 5000 because: The client is stopped&lt;br/&gt;
2010-09-01 12:11:24,680 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Line Processing Thread 0&amp;#93;&lt;/span&gt; zookeeper.ZooKeeperWrapper(470): &amp;lt;localhost:/hbase,org.apache.hadoop.hbase.client.HConnectionManager&amp;gt;Trying to read /hbase/root-region-server&lt;br/&gt;
2010-09-01 12:11:24,681 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Line Processing Thread 0&amp;#93;&lt;/span&gt; zookeeper.ZooKeeperWrapper(489): &amp;lt;localhost:/hbase,org.apache.hadoop.hbase.client.HConnectionManager&amp;gt;Read ZNode /hbase/root-region-server got 10.26.119.190:60020&lt;br/&gt;
2010-09-01 12:11:24,681 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Line Processing Thread 0&amp;#93;&lt;/span&gt; client.HConnectionManager$TableServers(1116): Root region location changed. Sleeping.&lt;/p&gt;

&lt;p&gt;===&lt;/p&gt;

&lt;p&gt;It might be a good idea to only run the HCM shutdown code when all the HTables referring to it have been closed. That way the client can control when the shutdown actually happens.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12473071">HBASE-2952</key>
            <summary>HConnectionManager&apos;s shutdown hook interferes with client&apos;s operations</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="khemani">Prakash Khemani</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Sep 2010 19:14:16 +0000</created>
                <updated>Tue, 19 Oct 2010 00:01:49 +0000</updated>
                            <resolved>Tue, 19 Oct 2010 00:01:49 +0000</resolved>
                                    <version>0.20.0</version>
                                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12905171" author="streamy" created="Wed, 1 Sep 2010 19:22:38 +0000"  >&lt;p&gt;One issue with relying on HTables to be closed is that this would introduce a kind of incompatible API change.  Previously, we have not required (or encouraged) users to close() their HTables unless they are using the write buffer.  Those using HTablePool never really call HTable.close().&lt;/p&gt;

&lt;p&gt;Could we add something into HCM that would allow you to attach shutdown handlers to HCM that would be called before running its own logic?  Like HCM.registerShutdownHook(Thread) or whatever the interface is.&lt;/p&gt;</comment>
                            <comment id="12905232" author="khemani" created="Wed, 1 Sep 2010 21:31:46 +0000"  >&lt;p&gt;I don&#8217;t think that it can be a shutdownHook thread that HCM can accept. The JVM doesn&apos;t allow you to order in any way how the shutdownThreads will be run. It will have to be a user &apos;callback&apos; that HCM&apos;s shutdownHook() thread will invoke.&lt;/p&gt;

&lt;p&gt;Also, I think to get to the HCM instance we have to go through the HTable. There can be multiple instances of HCM in the same process.&lt;/p&gt;

&lt;p&gt;How about HTable::disableShutdownHook(). And then it becomes the caller&apos;s responsibility to make sure HTable::close() is called for every instance of HTable.&lt;/p&gt;



</comment>
                            <comment id="12905234" author="streamy" created="Wed, 1 Sep 2010 21:40:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t think that it can be a shutdownHook thread that HCM can accept. The JVM doesn&apos;t allow you to order in any way how the shutdownThreads will be run. It will have to be a user &apos;callback&apos; that HCM&apos;s shutdownHook() thread will invoke. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, that&apos;s what i meant.  Pass the callback to HCM and he would execute it before his own shutdown.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also, I think to get to the HCM instance we have to go through the HTable. There can be multiple instances of HCM in the same process.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is that the case?  My understanding is HCM is only used statically, so will &lt;b&gt;always&lt;/b&gt; be one per process.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;How about HTable::disableShutdownHook(). And then it becomes the caller&apos;s responsibility to make sure HTable::close() is called for every instance of HTable.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Would have to be HCM.disableShutdownHook(), no?  Or HTable would then call it&apos;s HCM?  I&apos;m pretty sure one HCM per process unless you&apos;ve seen otherwise.&lt;/p&gt;</comment>
                            <comment id="12905258" author="khemani" created="Wed, 1 Sep 2010 22:17:12 +0000"  >&lt;p&gt;In my experiment each processing thread that invokes incrementColValue() has its own instance of HTable. In an effort to try create multiple connections from my process to a region server I had each thread put something unique in its conf file. The following code then kicks in and creates multiple HCM - one per HTable instance. So, yes, it is possible to have multiple HCMs in a process - one per config.&lt;/p&gt;

&lt;p&gt;  public static HConnection getConnection(Configuration conf) {&lt;br/&gt;
    TableServers connection;&lt;br/&gt;
    Integer key = HBaseConfiguration.hashCode(conf);&lt;br/&gt;
    synchronized (HBASE_INSTANCES) {&lt;br/&gt;
      connection = HBASE_INSTANCES.get(key);&lt;/p&gt;

&lt;p&gt;(BTW, my experiment to create multiple connections by creating multiple connection-managers had not worked. I had to modify ConnectionManager::getHRegionConnection() and the servers map to create multiple connections.)&lt;/p&gt;



</comment>
                            <comment id="12905267" author="streamy" created="Wed, 1 Sep 2010 22:23:37 +0000"  >&lt;p&gt;You should have some wins from the patch over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2941&quot; title=&quot;port HADOOP-6713 - threading scalability for RPC reads - to HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2941&quot;&gt;&lt;del&gt;HBASE-2941&lt;/del&gt;&lt;/a&gt;.  There&apos;s also a patch up on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2939&quot; title=&quot;Allow Client-Side Connection Pooling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2939&quot;&gt;&lt;del&gt;HBASE-2939&lt;/del&gt;&lt;/a&gt; that adds multiple connections to HCM.&lt;/p&gt;

&lt;p&gt;Yeah, you&apos;re right, it&apos;s HCM per Configuration.&lt;/p&gt;

&lt;p&gt;Even in this case, I think it makes more sense to use HCM for this.  Could be HCM.addShutdownCall(Configuration, Callback)?  HTable is the core client API and I&apos;d rather not clutter it up.&lt;/p&gt;</comment>
                            <comment id="12905294" author="stack" created="Wed, 1 Sep 2010 22:53:24 +0000"  >&lt;p&gt;Prakash, would the patch over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2669&quot; title=&quot;HCM.shutdownHook causes data loss with hbase.client.write.buffer != 0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2669&quot;&gt;&lt;del&gt;HBASE-2669&lt;/del&gt;&lt;/a&gt; work for you (basically it removes the HCM&apos;s shutdown hook)?&lt;/p&gt;</comment>
                            <comment id="12905313" author="khemani" created="Wed, 1 Sep 2010 23:33:45 +0000"  >&lt;p&gt;Yes, removing the HCM shutdown hook seems like the right thing to do. I don&apos;t understand the TableOutputFormat part much ... so I am wondering, with the HCM shutdown hook gone, what will the HBase user have to do to do a clean shutdown?&lt;/p&gt;




</comment>
                            <comment id="12905333" author="stack" created="Thu, 2 Sep 2010 00:15:28 +0000"  >&lt;p&gt;They can call flush on their table to empty out the write buffer but that should be it.&lt;/p&gt;

&lt;p&gt;The shutdown hook doesn&apos;t seem to be really necessary yet it makes this issue you describe above and similar for benoit over in 2669.  Let me test this evening and will commit if all is good w/ TOF.&lt;/p&gt;</comment>
                            <comment id="12905396" author="khemani" created="Thu, 2 Sep 2010 04:35:15 +0000"  >&lt;p&gt;The shutdown hook prevents the zookeeper logs from getting flooded with unnecessary &quot;connection timed out&quot; or such messages. If that is the case then the shutdown hook still serves some good purpose. IMO the behavior ought to be the following - users who properly call HTable::close on all the open Htables should see this nice HCM shutdown hook behavior. Others who don&#8217;t call close() will have their zk logs flooded. This goes to my earlier suggestion that HTable::close should trigger HCM::close and there should be some kind of ref counting in HCM.&lt;/p&gt;


</comment>
                            <comment id="12905790" author="stack" created="Fri, 3 Sep 2010 05:12:43 +0000"  >&lt;p&gt;@Prakash Sorry, got distracted.  So, let me try the reference count you suggest above.  In HTable#close, along w/ flush, we&apos;d call HConnectionManager.releaseConnection, a new method.  When ref count went to zero, we&apos;d do what the current HCM.deleteConnection does (I think I need to remove this method, or make it private).  Let me put up a patch tomorrow.&lt;/p&gt;</comment>
                            <comment id="12905791" author="stack" created="Fri, 3 Sep 2010 05:14:02 +0000"  >&lt;p&gt;To be clear, this would be a complement to the patch up in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2669&quot; title=&quot;HCM.shutdownHook causes data loss with hbase.client.write.buffer != 0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2669&quot;&gt;&lt;del&gt;HBASE-2669&lt;/del&gt;&lt;/a&gt;  which removes the shutdown handler altogether.  The refcount would also be used to let go of shared zk sessions.&lt;/p&gt;</comment>
                            <comment id="12905792" author="stack" created="Fri, 3 Sep 2010 05:18:16 +0000"  >&lt;p&gt;Linking to critical 0.90 bug, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2669&quot; title=&quot;HCM.shutdownHook causes data loss with hbase.client.write.buffer != 0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2669&quot;&gt;&lt;del&gt;HBASE-2669&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12922371" author="stack" created="Tue, 19 Oct 2010 00:01:49 +0000"  >&lt;p&gt;I&apos;m going to resolve this issue as fixed by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2669&quot; title=&quot;HCM.shutdownHook causes data loss with hbase.client.write.buffer != 0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2669&quot;&gt;&lt;del&gt;HBASE-2669&lt;/del&gt;&lt;/a&gt;.  We are not doing reference counting.  We are just explicitly cleaning up all connections we use and punting to the client the need to clean up HConnection instances they make (added javadoc to explain the mechanics of HConnection and how it interacts with Configuration). &lt;/p&gt;

&lt;p&gt;Lets open new issue if we want to go the reference-count way.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12466236">HBASE-2669</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 1 Sep 2010 19:22:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32849</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 9 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hk0f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100504</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>