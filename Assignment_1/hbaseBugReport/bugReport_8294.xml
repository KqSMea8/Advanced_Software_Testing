<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:53:51 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-8294/HBASE-8294.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-8294] Make HBaseConfiguration a singleton class</title>
                <link>https://issues.apache.org/jira/browse/HBASE-8294</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;HBaseConfiguration.create() calls a new Configuration object. Ideally, we would like to have just one configuration object in the jvm.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12641421">HBASE-8294</key>
            <summary>Make HBaseConfiguration a singleton class</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="v.himanshu">Himanshu Vashishtha</assignee>
                                    <reporter username="v.himanshu">Himanshu Vashishtha</reporter>
                        <labels>
                    </labels>
                <created>Mon, 8 Apr 2013 18:37:11 +0000</created>
                <updated>Tue, 9 Apr 2013 13:48:26 +0000</updated>
                                            <version>0.95.0</version>
                                                    <component>master</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13625656" author="dmeil" created="Mon, 8 Apr 2013 18:46:35 +0000"  >&lt;p&gt;Just out of curiosity, what if you had a client that wanted to connect to 2 different clusters?  (e.g., a copy job from from cluster to another).  How would that be affected by making this a singleton?&lt;/p&gt;</comment>
                            <comment id="13625667" author="eclark" created="Mon, 8 Apr 2013 18:56:18 +0000"  >&lt;p&gt;Keeping it not a singleton allows testing to be independent much easier.  It also allows a more fine grain control over Hconnections and allows two clients to connect to different clusters.  &lt;/p&gt;

&lt;p&gt;I don&apos;t think that we should make it a singleton, perhaps we should add a function to get a shared version of the config (maybe getSingleton() )?  Then recommend that method for most users.  This would still allow advanced users to decide how to create their own configuration&lt;/p&gt;</comment>
                            <comment id="13625670" author="v.himanshu" created="Mon, 8 Apr 2013 18:57:27 +0000"  >&lt;p&gt;Good point. I see hbase replication also has a use case like that. &lt;br/&gt;
In such case, we can also have an api to create a new instance. &lt;/p&gt;

&lt;p&gt;Idea behind this jira is, currently whenever we call HBaseConfiguration.create(), it creates a new object, which is pretty expensive. And, there is no other way to reuse it other than passing a conf around in all the method calls... which is quite annoying at least.&lt;/p&gt;</comment>
                            <comment id="13625675" author="v.himanshu" created="Mon, 8 Apr 2013 18:59:53 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt;: +1&lt;/p&gt;</comment>
                            <comment id="13625677" author="dmeil" created="Mon, 8 Apr 2013 19:00:28 +0000"  >&lt;p&gt;re:  (Elliot) &quot;ï¿½perhaps we should add a function to get a shared version of the config (maybe getSingleton() )?&quot;&lt;/p&gt;

&lt;p&gt;I like that.  getConfiguration(String zookeeperQuorum).&lt;/p&gt;
</comment>
                            <comment id="13625692" author="ndimiduk" created="Mon, 8 Apr 2013 19:15:00 +0000"  >&lt;p&gt;Getting the &lt;tt&gt;equals()&lt;/tt&gt; correct on this sounds bug-prone. Why not let the application manage it&apos;s own &lt;tt&gt;Configuration&lt;/tt&gt;? We can add a comment on the javadoc for &lt;tt&gt;HBaseConfiguration.create()&lt;/tt&gt; describing it as heavy-weight operation.&lt;/p&gt;</comment>
                            <comment id="13625694" author="nkeywal" created="Mon, 8 Apr 2013 19:16:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;Getting the equals() correct on this sounds bug-prone. Why not let the application manage it&apos;s own Configuration? We can add a comment on the javadoc for HBaseConfiguration.create() describing it as heavy-weight operation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1, it seems less scary.&lt;/p&gt;</comment>
                            <comment id="13626143" author="enis" created="Tue, 9 Apr 2013 02:36:39 +0000"  >&lt;p&gt;I don&apos;t think this is the right way. Even if we just do a getSingleton() method, the code base will start filling up with references to that, and totally make testing and overriding confs extremely hard. &lt;/p&gt;</comment>
                            <comment id="13626275" author="stack" created="Tue, 9 Apr 2013 06:12:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;Ideally, we would like to have just one configuration object in the jvm.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Definitely do not want this in tests &amp;#8211; it is fundamental to quite a few tests that we can float a different Configuration per daemon (e.g. so different &apos;Users&apos; on hdfs).&lt;/p&gt;

&lt;p&gt;In client, you can ask for new connection by specifying a new Configuration so being able to have a new Config instance is important currently.&lt;/p&gt;

&lt;p&gt;On server, there has been various juggling of the Configuration instance to do things like a per column family &apos;view&apos; on Configuration to do stuff like dynamic config.&lt;/p&gt;

&lt;p&gt;I&apos;d say call it out as a heavyweight construction and close as Invalid at least until there is a better reason for changing how we treat Configuration.&lt;/p&gt;</comment>
                            <comment id="13626561" author="v.himanshu" created="Tue, 9 Apr 2013 13:07:31 +0000"  >&lt;p&gt;Okay, thanks for the input &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I was thinking of adding a method in HBaseConfiguration.create to let Regionserver, master give an option to use a &quot;shared&quot; configuration instance. If that is shared one, then it should be immutable, etc. But then, it may become confusing when to use what.&lt;br/&gt;
I will add a doc on HBaseConfiguration.create() and close this.&lt;/p&gt;</comment>
                            <comment id="13626612" author="dmeil" created="Tue, 9 Apr 2013 13:48:26 +0000"  >&lt;p&gt;If such a cache is only intended to be used by HBase server processes, should this cache exist in another class?  Like HBaseServerConfiguration?  Hopefully that will be clear from the name (and Javadoc) that this class is not to be used for the purpose of regular (i.e., application) usage.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 8 Apr 2013 18:46:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>321837</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 36 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1jj1z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>322182</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>