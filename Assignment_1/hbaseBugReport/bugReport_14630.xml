<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:54:55 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14630/HBASE-14630.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14630] Cells still show up in scan after cell-level TTL has expired</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14630</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I have an HBase table with the following description:&lt;/p&gt;

{NAME =&amp;gt; &apos;cf&apos;, DATA_BLOCK_ENCODING =&amp;gt; &apos;NONE&apos;, BLOOMFILTER =&amp;gt; &apos;ROW&apos;, REPLICATION_SCOPE =&amp;gt; &apos;0&apos;, VERSIONS =&amp;gt; &apos;1&apos;, COMPRESSION =&amp;gt; &apos;NONE&apos;, MIN_VERSIONS =&amp;gt; &apos;0&apos; , TTL =&amp;gt; &apos;FOREVER&apos;, KEEP_DELETED_CELLS =&amp;gt; &apos;FALSE&apos;, BLOCKSIZE =&amp;gt; &apos;65536&apos;, IN_MEMORY =&amp;gt; &apos;false&apos;, BLOCKCACHE =&amp;gt; &apos;true&apos;}

&lt;p&gt;I put some values in it and then set TTL (30s) on those values with another&lt;br/&gt;
put operation. First thing I notice is that the timestamps of the cells get&lt;br/&gt;
updated after the 2nd put. And 30 seconds later, when I do a scan on the&lt;br/&gt;
table, I still see those cells in the table, however this time with their&lt;br/&gt;
timestamps updated to the original timestamps.&lt;/p&gt;

&lt;p&gt;I understand that these cells won&apos;t necessarily be deleted until a&lt;br/&gt;
compaction, but they still come up in my scan even though the TTL&lt;br/&gt;
that I set on them has expired.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12905574">HBASE-14630</key>
            <summary>Cells still show up in scan after cell-level TTL has expired</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="emre.colak">Emre Colak</reporter>
                        <labels>
                    </labels>
                <created>Fri, 16 Oct 2015 16:06:34 +0000</created>
                <updated>Wed, 6 Apr 2016 23:28:03 +0000</updated>
                                            <version>1.0.2</version>
                    <version>1.1.2</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="14961190" author="apurtell" created="Fri, 16 Oct 2015 18:45:17 +0000"  >&lt;p&gt;So it sounds like we write one version with no TTL, then write another version of the cell with a TTL, then &lt;b&gt;before&lt;/b&gt; we compact and get rid of the &quot;extra&quot; version per the schema (VERSIONS=1) the cell with the TTL expires, resurrecting the previous version. While this is technically correct behavior I agree it can be surprising. At the least we could expand and improve the documentation on how all the schema features related to versioning and visibility interact (TTL, min versions, keep deleted cells, etc). We could potentially do more. What is the consensus expectation of correct behavior in this described case?&lt;/p&gt;</comment>
                            <comment id="14961215" author="emre.colak" created="Fri, 16 Oct 2015 19:04:28 +0000"  >&lt;p&gt;Ok, I think I understand what you mean. My understanding was that once I set TTL on a cell, it should not come up in a scan result after the TTL expires. And I was trying to set a TTL on a cell by performing another PUT operation with the same row key, same column family, same qualifier and same value plus a TTL for the mutation. But if I understand you correctly, there is no real updating the TTL of a cell, the 2nd PUT operation inserts another version of the cell, this time with a TTL. &lt;br/&gt;
Is there another way of setting the TTL on a cell, so that it does not come up in scan results after the TTL expires?&lt;/p&gt;</comment>
                            <comment id="14961434" author="apurtell" created="Fri, 16 Oct 2015 22:07:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;My understanding was that once I set TTL on a cell, it should not come up in a scan result after the TTL expires. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If I understand you correctly, you stored two versions to the same location, the first without a TTL, the second with. The timing of the original put without TTL, the update, the scan, and compaction activity conspired to confound your expectations.&lt;/p&gt;

&lt;p&gt;You would also need to think through corner cases if you set VERSIONS &amp;gt; 1 and store cells to the same location with varying TTLs.&lt;/p&gt;

&lt;p&gt;There is an interesting use case here for temporary overrides that automatically expire, reverting to the prior value. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Is there another way of setting the TTL on a cell, so that it does not come up in scan results after the TTL expires?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;A simple thing to do is store all cells at a given location with a TTL applied. If you don&apos;t need to set TTLs on a cell-by-cell basis, simply define one for a whole column family using the &quot;TTL&quot; schema attribute. You do that once and then all cells stored to the column family will have the same TTL. Prior versions will expire before later versions and the result will be what you expect. &lt;/p&gt;</comment>
                            <comment id="14961971" author="emre.colak" created="Sat, 17 Oct 2015 16:27:18 +0000"  >&lt;p&gt;Thank you, it all makes sense now. For some reason I thought I could update the TTL of an existing cell. &lt;/p&gt;</comment>
                            <comment id="14962797" author="anoop.hbase" created="Mon, 19 Oct 2015 03:29:25 +0000"  >&lt;p&gt;The issue comes because of the seq with which versions is handled and TTL.   Seems the TTL calc is first which will remove the second cell and not the 1st one and then the version check which see only one cell and it is being returned.   If the seq was reverse the intended behavior would be coming.&lt;br/&gt;
For cell level ACL and visibility this issue we handle within the Filters.  There also the seq is like 1st Filter apply and then version control.  But within those filters itself we take care of #versions also.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 16 Oct 2015 18:45:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 8 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2n4k7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>