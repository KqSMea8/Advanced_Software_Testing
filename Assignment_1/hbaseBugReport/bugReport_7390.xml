<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:45:19 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7390/HBASE-7390.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7390] Add extra test cases for assignement on the region server and fix the related issues</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7390</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We don&apos;t have a lot of tests on the region server itself.&lt;br/&gt;
Here are some.&lt;br/&gt;
Some of them are failing, feedback welcome.&lt;br/&gt;
See as well the attached state diagram for the ZK nodes on assignment.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12624658">HBASE-7390</key>
            <summary>Add extra test cases for assignement on the region server and fix the related issues</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nkeywal">Nicolas Liochon</assignee>
                                    <reporter username="nkeywal">Nicolas Liochon</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Dec 2012 16:02:48 +0000</created>
                <updated>Mon, 23 Sep 2013 18:31:23 +0000</updated>
                            <resolved>Mon, 31 Dec 2012 10:06:00 +0000</resolved>
                                    <version>0.95.2</version>
                                    <fixVersion>0.95.0</fixVersion>
                                    <component>Region Assignment</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13536158" author="stack" created="Wed, 19 Dec 2012 17:19:54 +0000"  >&lt;p&gt;Why does master not see SPLITTING?  Because it does not have a watcher?  It cannot create a znode when there is a SPLITTING znode in place though.  That is what we want, right?  Ditto for the OPENING?  Does the master not have a watcher on the OPENING znode?&lt;/p&gt;

&lt;p&gt;Missing license.&lt;/p&gt;

&lt;p&gt;Should test be called TestRegionServerNoMaster?&lt;/p&gt;

&lt;p&gt;Odd testCloseByMasterWithoutZNode fails. I can think no reason why it should fail.  Ditto testMultipleOpen&lt;/p&gt;

&lt;p&gt;Nice tests &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="13536172" author="nkeywal" created="Wed, 19 Dec 2012 17:31:59 +0000"  >&lt;p&gt;This code there is very very smart: if there is a open in progress, it changes the internal state to close, then raises an exception through the call to checkIfRegionInTransition. As we changed the state, we will have, if we were currently opening, a message saying that we were trying to close a region already closing.&lt;/p&gt;

&lt;p&gt;As well, it really means the other stuff going on is supposed to catch the state change?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; CloseRegionResponse closeRegion(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; RpcController controller,
      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; CloseRegionRequest request) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ServiceException {
&lt;span class=&quot;code-comment&quot;&gt;//..
&lt;/span&gt;      &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt; openAction = regionsInTransitionInRS.get(encodedName);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (openAction != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (openAction.booleanValue()) {
          regionsInTransitionInRS.replace(encodedName, openAction, &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;.FALSE);
        }
        checkIfRegionInTransition(encodedName, CLOSE);
      }
           
      requestCount.increment();
      LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Received close region: &quot;&lt;/span&gt; + region.getRegionNameAsString() +
        &lt;span class=&quot;code-quote&quot;&gt;&quot;. Version of ZK closing node:&quot;&lt;/span&gt; + versionOfClosingNode +
        &lt;span class=&quot;code-quote&quot;&gt;&quot;. Destination server:&quot;&lt;/span&gt; + sn);
      HRegionInfo regionInfo = region.getRegionInfo();
      checkIfRegionInTransition(encodedName, CLOSE);
      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; closed = closeRegion(
        regionInfo, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;, zk, versionOfClosingNode, sn);
      CloseRegionResponse.Builder builder =
        CloseRegionResponse.newBuilder().setClosed(closed);
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; builder.build();
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException ie) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ServiceException(ie);
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13536176" author="nkeywal" created="Wed, 19 Dec 2012 17:35:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;Why does master not see SPLITTING? Because it does not have a watcher? It cannot create a znode when there is a SPLITTING znode in place though. That is what we want, right? Ditto for the OPENING? Does the master not have a watcher on the OPENING znode?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I need to explore the splitting case, but there are no real reason imho (at least not a ZK reason).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;testMultipleOpen&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;m on this one (see comment above), it&apos;s not easy. The fix is trivial. What it is revealing is not.&lt;/p&gt;</comment>
                            <comment id="13536299" author="nkeywal" created="Wed, 19 Dec 2012 18:55:44 +0000"  >&lt;p&gt;v2 fixes the issue. I&apos;ve just removed the code above, I don&apos;t see how it can possibly work: if we were previously opening the region, we&apos;re updating the RIT state to closing, but without stopping the opening or starting a close handler.&lt;/p&gt;</comment>
                            <comment id="13536390" author="hadoopqa" created="Wed, 19 Dec 2012 20:24:37 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12561764/7390.v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12561764/7390.v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 28 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestFromClientSideWithCoprocessor&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are zombie tests. See build logs for details.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3617//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13536403" author="nkeywal" created="Wed, 19 Dec 2012 20:34:09 +0000"  >&lt;p&gt;Seems to be ok ok imho.&lt;/p&gt;

&lt;p&gt;For testCloseByMasterWithoutZNode, it fails because we update the znode state after doing the work. So when we discover there is no znode, the close is done. &lt;/p&gt;

&lt;p&gt;It easy to fix by adding a test at the beginning of the close.&lt;br/&gt;
As a consequence:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;broken situation where we were calling a close without znode will now lead to an error&lt;/li&gt;
	&lt;li&gt;we will be a little bit slower, as we will have another zk sync &amp;amp; read on the critical path&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If we&apos;re in line with what was done by Jimmy Xiang previously (i.e. checking carefully what we&apos;re doing &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ), we should do it.&lt;/p&gt;

&lt;p&gt;Toughts?&lt;/p&gt;</comment>
                            <comment id="13536439" author="nkeywal" created="Wed, 19 Dec 2012 21:36:17 +0000"  >&lt;p&gt;v3 with everything included. Ready for review &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13536452" author="sershe" created="Wed, 19 Dec 2012 21:52:49 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; closeRegion(HRegionInfo region, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; abort,
      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; zk)  {
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; closeRegion(region, abort, zk, -1, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (RegionAlreadyInTransitionException e) {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;; &lt;span class=&quot;code-comment&quot;&gt;// The region was already in transition &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; opening
&lt;/span&gt;    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;One closeRegion throws, and the other returns false, to indicate the same condition. Is this intended?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
}&lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (RuntimeException t){
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What is the RuntimeException here?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   * @param expectedVersion expecpted version og the znode
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&quot;of&quot;, &quot;expected&quot;&lt;/p&gt;
</comment>
                            <comment id="13536454" author="nkeywal" created="Wed, 19 Dec 2012 21:54:58 +0000"  >&lt;p&gt;@&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;br/&gt;
For SPLITTING and OPENING, I misread your point in you first comment. Yes, we may miss the state change because of ZooKeeper API: when we receive a watch, we need to do a getData. In the meantime, the value may have changed. The scenario is, for example&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Master creates a znode with M_ZK_REGION_OFFLINE and watch it&lt;/li&gt;
	&lt;li&gt;Regionserver updates the znode to RS_ZK_REGION_OPENING&lt;/li&gt;
	&lt;li&gt;Master receives the event&lt;/li&gt;
	&lt;li&gt;Regionserver updates the znode to RS_ZK_REGION_OPENED&lt;/li&gt;
	&lt;li&gt;Master does a getData, and reads RS_ZK_REGION_OPENED&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In this scenario, the master missed the RS_ZK_REGION_OPENING. So in the master code you must be ready to miss some transitions. The trunk code is actually compatible with this, but the reason is not documented.&lt;/p&gt;

&lt;p&gt;However, I don&apos;t know why we tickle RS_REGION_SPLIT as we do in the code.&lt;/p&gt;</comment>
                            <comment id="13536469" author="stack" created="Wed, 19 Dec 2012 22:07:26 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; I follow you now.  Yes, we can miss events and yes the master deals (and yes no harm in improving doc).&lt;/p&gt;

&lt;p&gt;IIRC (I believe I added SPLIT), we tickle in case the transition to SPLIT from SPLITTING is missed by the master.  We keep tickling till master acknowledges the SPLIT message (by removing SPLIT znode &amp;#8211; haven&apos;t looked at code).&lt;/p&gt;</comment>
                            <comment id="13536474" author="nkeywal" created="Wed, 19 Dec 2012 22:15:41 +0000"  >&lt;p&gt;Yes, that&apos;s what we do. But we should never miss the final event, so it&apos;s a little bit strange. But on master failover, when we iterate on the znodes, we ignore the one int the SPLIT state, that may be the reason. I need to look at this as well, I tend to think we may have issues around this part (master crash during a split).&lt;/p&gt;</comment>
                            <comment id="13536490" author="hadoopqa" created="Wed, 19 Dec 2012 22:30:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12561787/7390.v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12561787/7390.v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 28 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestMultiParallel&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.TestDrainingServer&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are zombie tests. See build logs for details.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3620//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13536508" author="nkeywal" created="Wed, 19 Dec 2012 22:45:27 +0000"  >&lt;p&gt;for the tests, we have the usual suspects again it seems.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;One closeRegion throws, and the other returns false, to indicate the same condition. Is this intended?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah... Questionable but acceptable imho. Don&apos;t mind changing this, but then I will need to throw an exception from the return somewhere else, and to change the return type from boolean to a 3 states types (no state, same state, different state).  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What is the RuntimeException here?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Over (and bad) design I would say. Changed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&quot;of&quot;, &quot;expected&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done.&lt;/p&gt;</comment>
                            <comment id="13536570" author="stack" created="Wed, 19 Dec 2012 23:24:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;But on master failover, when we iterate on the znodes, we ignore the one int the SPLIT state, that may be the reason.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes. In case the master went away on us, so the new master gets the SPLIT callback...and its handler does the SPLIT cleanup. &lt;/p&gt;

&lt;p&gt;Comment doesn&apos;t enough:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   * Transitions an existing node &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the specified region which is
   * currently in the SPLITTING state to be in the SPLIT state.  Converts the
   * ephemeral SPLITTING znode to an ephemeral SPLIT node.  Master cleans up
   * SPLIT znode when it reads it (or &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we crash, zk will clean it up).
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="13536634" author="hadoopqa" created="Thu, 20 Dec 2012 00:21:20 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12561800/7390.v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12561800/7390.v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 28 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are zombie tests. See build logs for details.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3621//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13537185" author="nkeywal" created="Thu, 20 Dec 2012 17:39:15 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Yes. In case the master went away on us, so the new master gets the SPLIT callback...and its handler does the SPLIT clean-up. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;What&apos;s strange to me is that it seems similar to a RS_ZK_REGION_CLOSED, and in this case we don&apos;t retickle at all: we start the close handler immediately. &lt;/p&gt;


&lt;p&gt;For this patch, I am waiting for a +1 before committing, as it touches a critical part.&lt;/p&gt;</comment>
                            <comment id="13537232" author="sershe" created="Thu, 20 Dec 2012 18:23:55 +0000"  >&lt;p&gt;+1 on v4 patch&lt;/p&gt;</comment>
                            <comment id="13537280" author="stack" created="Thu, 20 Dec 2012 19:19:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;What&apos;s strange to me is that it seems similar to a RS_ZK_REGION_CLOSED, and in this case we don&apos;t retickle at all: we start the close handler immediately.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agree we should do one or the other.  The tickle does not seem necessary if when new master joins cluster and it sees a SPLIT, it does the cleanup immediately &amp;#8211; queues the split handler as is don3 for CLOSED &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                            <comment id="13537311" author="stack" created="Thu, 20 Dec 2012 19:48:35 +0000"  >&lt;p&gt;On the patch, what Sergey said about different closeRegion returns.  Could the one that throws an exception be private?&lt;/p&gt;

&lt;p&gt;Would putIfAbsent be easier to read if it took an enum rather than a boolean to say whether open or close?  For example, what was there previous was opaque enough and I appreciate your collecting together tests into a single method but the below could be better:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (this.regionsInTransitionInRS.containsKey(region.getEncodedNameAsBytes())) {&lt;/li&gt;
	&lt;li&gt;LOG.warn(&quot;Received close for region we are already opening or closing; &quot; +&lt;/li&gt;
	&lt;li&gt;region.getEncodedName());&lt;br/&gt;
+    if (putIfAbsent(region, false)){&lt;br/&gt;
+      // We&apos;re already closing this region.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;This below continue is right?&lt;/p&gt;

&lt;p&gt;+          builder.addOpeningState(RegionOpeningState.OPENED);&lt;br/&gt;
+          continue;&lt;/p&gt;


&lt;p&gt;I see you do it again later if we continue... so above looks like it makes sense.&lt;/p&gt;

&lt;p&gt;Review comments.  Some error.  e.g. +   * @param expectedVersion expecpted version og the znode  It looks like klingon.&lt;/p&gt;

&lt;p&gt;I appreciate these changes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;String regionName)&lt;br/&gt;
+      String encodedRegionName)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I always have to back up to find what what is needed making these calls.  I suppose we should make an encodedRegionName type one of these days.&lt;/p&gt;

&lt;p&gt;Do we need to do this?&lt;/p&gt;

&lt;p&gt;+    zkw.sync(encoded);&lt;/p&gt;

&lt;p&gt;Its to be &apos;sure&apos;...  Its expensive though...&lt;/p&gt;

&lt;p&gt;Nice test.&lt;/p&gt;

&lt;p&gt;Can you say more on this @nkeywal &quot;This code there is very very smart: if there is a open in progress, it changes the internal state to close, then raises an exception through the call to checkIfRegionInTransition. As we changed the state, we will have, if we were currently opening, a message saying that we were trying to close a region already closing.&quot;&lt;/p&gt;

&lt;p&gt;I&apos;m not sure I follow.&lt;/p&gt;

&lt;p&gt;The patch looks great, cleaning up fuzzy state. &lt;/p&gt;

&lt;p&gt;Let me get Jimmy to take a looksee too.  He LOVEs this stuff.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt; Any chance of your taking a look here boss?&lt;/p&gt;








</comment>
                            <comment id="13537874" author="nkeywal" created="Fri, 21 Dec 2012 13:54:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m not sure I follow.&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt; openAction = regionsInTransitionInRS.get(encodedName);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (openAction != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {         &lt;span class=&quot;code-comment&quot;&gt;// If &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; region is already in transition
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (openAction.booleanValue()) { &lt;span class=&quot;code-comment&quot;&gt;// and is opening         
&lt;/span&gt;          regionsInTransitionInRS.replace(encodedName, openAction, &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;.FALSE);
          &lt;span class=&quot;code-comment&quot;&gt;// say it&apos;s now closing
&lt;/span&gt;        }
        checkIfRegionInTransition(encodedName, CLOSE); &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; an exception
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// we will never go there, we always &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; an exception at the previous line
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// So &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we were opening, we now have a OpenRegionHandler running but the RIT state says closing.
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// What&apos;s going to happen to the znode now?
&lt;/span&gt;      }
      &lt;span class=&quot;code-comment&quot;&gt;// If we&apos;re there, it means there is nothing in RIT    
&lt;/span&gt;      requestCount.increment();
      LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Received close region: &quot;&lt;/span&gt; + region.getRegionNameAsString() +
        &lt;span class=&quot;code-quote&quot;&gt;&quot;. Version of ZK closing node:&quot;&lt;/span&gt; + versionOfClosingNode +
        &lt;span class=&quot;code-quote&quot;&gt;&quot;. Destination server:&quot;&lt;/span&gt; + sn);
      HRegionInfo regionInfo = region.getRegionInfo();         
      checkIfRegionInTransition(encodedName, CLOSE); &lt;span class=&quot;code-comment&quot;&gt;// We&apos;ve just checked 0.0001 ms ago!&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I looked at it more, it&apos;s actually by design: the OpenRegionHandler checks for the content of this variable. So the behavior is: &apos;if we received the request to close a region we&apos;re currently opening, stop the opening but raise an exception saying we can&apos;t close again because we were already closing&quot;.&lt;br/&gt;
Issues are:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;What&apos;s going to happen with the znode? It seems it won&apos;t be changed in the openHandler for example. So it will remain forever.&lt;/li&gt;
	&lt;li&gt;It&apos;s a little bit racy: if we were at the end of the opening, we can get the exception but the opening will be done.&lt;/li&gt;
	&lt;li&gt;worse, the closeRegion call will be rejected at its very beginning, because when we try to do the &quot;getRegionByEncodedName&quot;, it throws a &quot;RegionIsNotOnline&quot;&lt;br/&gt;
  =&amp;gt; In many cases, the opening will continue, as if the region is opening it should not be in the onlineRegions list.&lt;br/&gt;
  =&amp;gt; It could be an impact of the coprocessor implementation.&lt;br/&gt;
  =&amp;gt; As a side node, as the closeRegion closes are nested, the coprocessors &quot;preClose&quot; will be called multiple times.&lt;br/&gt;
  =&amp;gt; As another side node, the way it&apos;s coded in the other closeRegion is that we don&apos;t call the coprocessors when the region is not online&lt;br/&gt;
  =&amp;gt; So it means that we don&quot;t check the access rigts if the region is not online, it allows to cancel an opening without the AR.&lt;/li&gt;
	&lt;li&gt;As well, we had no test case (that&apos;s why my patch, while broken, worked).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m trying to solve this in the last version.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;+ zkw.sync(encoded);&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s not absolutely necessary, but it maximizes corectness probability. It&apos;s done in all other cases as well, so not doing it will would be bad imho, as it would break consistency.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Review comments. Some error. e.g. + * @param expectedVersion expecpted version og the znode It looks like klingon.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Done.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This below continue is right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;ve changed the implementation to remove the continue. I found another issue while doing so. Previously, when the region was already in RIT and closing, we were saying &quot;OPENED&quot; on a bulkAssign (that is: the query was open, and we were saying &apos;opened&apos; while closing the region). This seems wrong. We now say &quot;FAILED_OPENING&quot; in this case.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On the patch, what Sergey said about different closeRegion returns. Could the one that throws an exception be private?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I looked at it in more details. Actually, what returns this function is never checked. So I&apos;ve renamed it and clean stuff around it.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;Would putIfAbsent be easier to read if it took an enum rather than a boolean to say whether open or close&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s was to be compatible with RIT design. I removed the method. I tried to change RIT, but its type is public through the getter, so I prefer not doing it in a patch.&lt;/p&gt;


&lt;p&gt;I will publish an updated version soon.&lt;/p&gt;</comment>
                            <comment id="13538227" author="stack" created="Fri, 21 Dec 2012 17:23:45 +0000"  >&lt;p&gt;Nice analysis @nkeywal.  I am trying to follow but cannot (I think that is your point &amp;#8211; smile).  When you say &apos;// If we&apos;re there, it means there is nothing in RIT  &apos; &amp;#8211; is the RIT in zk?  Under &apos;unassigned&apos; dir?  Can you see who is responsible for the logic w/ git/svn blame?  Maybe their insight would help w/ the unravelling?  I like your list of problems w/ current implementation.&lt;/p&gt;</comment>
                            <comment id="13538231" author="nkeywal" created="Fri, 21 Dec 2012 17:29:20 +0000"  >&lt;p&gt;@&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;br/&gt;
It&apos;s quite complicated &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. I think I&apos;m seeing the end, or at least a checkpoint. It&apos;s the region server RIT: 3 lines above, we already checked the content, so this line is likely useless.&lt;/p&gt;</comment>
                            <comment id="13538253" author="nkeywal" created="Fri, 21 Dec 2012 18:00:44 +0000"  >&lt;p&gt;v6. Likely not final, but enough to be tested and global feedback.&lt;/p&gt;</comment>
                            <comment id="13538257" author="hadoopqa" created="Fri, 21 Dec 2012 18:05:29 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12562109/7390.v6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12562109/7390.v6.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3655//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3655//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13538328" author="hadoopqa" created="Fri, 21 Dec 2012 19:32:31 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12562114/7390.v7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12562114/7390.v7.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 21 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestDrainingServer&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3656//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13539278" author="nkeywal" created="Mon, 24 Dec 2012 14:52:49 +0000"  >&lt;p&gt;v7. More bug fixes &amp;amp; more comments. I&apos;m gonna put it on the review board.&lt;/p&gt;</comment>
                            <comment id="13539285" author="hadoopqa" created="Mon, 24 Dec 2012 15:52:59 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12562325/7390.v8.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12562325/7390.v8.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 5 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3684//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13539867" author="nkeywal" created="Thu, 27 Dec 2012 08:32:53 +0000"  >&lt;p&gt;It&apos;s on a review board, there it a +1 from Nick there.&lt;br/&gt;
Is there anyone else reviewing it? If not, I will commit next Monday.&lt;/p&gt;</comment>
                            <comment id="13540064" author="jxiang" created="Thu, 27 Dec 2012 17:32:50 +0000"  >&lt;p&gt;Here is the link to the review:  &lt;a href=&quot;https://reviews.apache.org/r/8754/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/8754/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will take a look today.&lt;/p&gt;</comment>
                            <comment id="13540490" author="nkeywal" created="Fri, 28 Dec 2012 15:31:28 +0000"  >&lt;p&gt;Thanks Nick &amp;amp; Jimmy.&lt;br/&gt;
v9 contains the fixes for your points. I&apos;m testing it here, and if it&apos;s ok I will commit it.&lt;/p&gt;</comment>
                            <comment id="13540576" author="hadoopqa" created="Fri, 28 Dec 2012 20:02:22 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12562600/7390.v9.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12562600/7390.v9.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 5 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.handler.TestOpenRegionHandler&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3738//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13541111" author="hadoopqa" created="Sun, 30 Dec 2012 17:24:18 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12562721/7390.v10.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12562721/7390.v10.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 11 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestFromClientSide&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3766//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13541162" author="stack" created="Sun, 30 Dec 2012 21:24:32 +0000"  >&lt;p&gt;Patch is great.  You have two +1s up in RB.  Here is another +1 from me...  The tests are great as are the comments.&lt;/p&gt;

&lt;p&gt;You have lines &amp;gt; 100 characters according to the hadoopqa output!&lt;/p&gt;

&lt;p&gt;This is no longer deprecated?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @deprecated use 
{@link #getRegionLocation(byte [], boolean)}
&lt;p&gt; instead&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This should not be javadoc:&lt;/p&gt;

&lt;p&gt;+   *&lt;br/&gt;
+   * Protected to ease testing.&lt;/p&gt;

&lt;p&gt;Could be a comment inside the method.&lt;/p&gt;

&lt;p&gt;Does it have to be this explicit type:&lt;/p&gt;

&lt;p&gt;+  public ConcurrentSkipListMap&amp;lt;byte[], Boolean&amp;gt; getRegionsInTransitionInRS();&lt;/p&gt;


&lt;p&gt;Can it be NavigableMap or SortedMap?  (Not important).&lt;/p&gt;
</comment>
                            <comment id="13541164" author="nkeywal" created="Sun, 30 Dec 2012 21:48:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;You have lines &amp;gt; 100 characters according to the hadoopqa output!&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hadoopqa is right &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. I will fix it  on commit.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is no longer deprecated?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It was a little bit strange to have this one deprecated while the ones with two parameters / same method name were not. So I thought it was better to de-deprecate it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This should not be javadoc:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hum, I thought it made sense to have it in the javadoc: someone using (vs. developing) HBase would need to know that if a method is not private, it&apos;s not because it&apos;s supposed to be used or extended, but only for internal testing.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;public ConcurrentSkipListMap&amp;lt;byte[], Boolean&amp;gt; getRegionsInTransitionInRS();&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I kept the change even if iirc I finally don&apos;t need it for this patch. What was useful was pure concurrent oriented stuff like functions putif-absent or removeif-absent. So the best interface would be ConcurrentMap. I will change this on commit. It&apos;s beyond the scope of this patch, but the RIT should be more encapsulated, especially now that we sometimes hijack it to cancel an open... This makes me think as well that the best implementation class would be ConcurrentHashMap instead of ConcurrentSkipListMap. But&apos;s it will be for another patch as well &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks for the review, Stack, I will commit this tomorrow (and start to go forward with the other jira I had on assignment: the depend on this one).&lt;/p&gt;
</comment>
                            <comment id="13541165" author="stack" created="Sun, 30 Dec 2012 21:53:36 +0000"  >&lt;p&gt;Above sounds reasonable to  me.&lt;/p&gt;

&lt;p&gt;Regards encapsulating RIT, Jimmy did this for the server-side nicely.... makes sense that RS could get same treatment.&lt;/p&gt;</comment>
                            <comment id="13541327" author="nkeywal" created="Mon, 31 Dec 2012 10:05:38 +0000"  >&lt;p&gt;v11 is what I committed.&lt;/p&gt;</comment>
                            <comment id="13541330" author="hudson" created="Mon, 31 Dec 2012 11:06:45 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3676 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3676/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3676/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7390&quot; title=&quot;Add extra test cases for assignement on the region server and fix the related issues&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7390&quot;&gt;&lt;del&gt;HBASE-7390&lt;/del&gt;&lt;/a&gt; Add extra test cases for assignement on the region server and fix the related issues (Revision 1427064)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
nkeywal : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/CloseRegionHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/OpenRegionHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKAssign.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/MockRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerNoMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/MockRegionServerServices.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13541353" author="hudson" created="Mon, 31 Dec 2012 11:54:17 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #321 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/321/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/321/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7390&quot; title=&quot;Add extra test cases for assignement on the region server and fix the related issues&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7390&quot;&gt;&lt;del&gt;HBASE-7390&lt;/del&gt;&lt;/a&gt; Add extra test cases for assignement on the region server and fix the related issues (Revision 1427064)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
nkeywal : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/CloseRegionHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/OpenRegionHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKAssign.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/MockRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerNoMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/MockRegionServerServices.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13775384" author="stack" created="Mon, 23 Sep 2013 18:31:23 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12551766">HBASE-5843</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12631762">HBASE-7815</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12624864">HBASE-7407</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12623419">HBASE-7327</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12561718" name="7390.v1.patch" size="14278" author="nkeywal" created="Wed, 19 Dec 2012 16:05:43 +0000"/>
                            <attachment id="12562721" name="7390.v10.patch" size="66153" author="nkeywal" created="Sun, 30 Dec 2012 16:28:00 +0000"/>
                            <attachment id="12562775" name="7390.v11.patch" size="72127" author="nkeywal" created="Mon, 31 Dec 2012 10:05:05 +0000"/>
                            <attachment id="12561764" name="7390.v2.patch" size="25777" author="nkeywal" created="Wed, 19 Dec 2012 18:53:51 +0000"/>
                            <attachment id="12561787" name="7390.v3.patch" size="31425" author="nkeywal" created="Wed, 19 Dec 2012 21:35:17 +0000"/>
                            <attachment id="12561800" name="7390.v4.patch" size="32835" author="nkeywal" created="Wed, 19 Dec 2012 22:46:55 +0000"/>
                            <attachment id="12562109" name="7390.v6.patch" size="50164" author="nkeywal" created="Fri, 21 Dec 2012 17:59:52 +0000"/>
                            <attachment id="12562114" name="7390.v7.patch" size="49891" author="nkeywal" created="Fri, 21 Dec 2012 18:33:48 +0000"/>
                            <attachment id="12562325" name="7390.v8.patch" size="63382" author="nkeywal" created="Mon, 24 Dec 2012 14:52:03 +0000"/>
                            <attachment id="12562600" name="7390.v9.patch" size="63558" author="nkeywal" created="Fri, 28 Dec 2012 19:02:34 +0000"/>
                            <attachment id="12562587" name="7390.v9.patch" size="63558" author="nkeywal" created="Fri, 28 Dec 2012 15:30:41 +0000"/>
                            <attachment id="12561719" name="assignment_zk_states.jpg" size="101870" author="nkeywal" created="Wed, 19 Dec 2012 16:06:21 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 19 Dec 2012 17:19:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>300483</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i168kv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>244522</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>