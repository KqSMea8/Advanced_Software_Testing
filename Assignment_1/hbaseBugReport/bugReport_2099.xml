<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:58:57 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2099/HBASE-2099.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2099] Move build to Maven</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2099</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This issue is for discussing pros and cons of moving hbase build to Apache Maven.&lt;/p&gt;

&lt;p&gt;Maven, if you take on its paradigm, does a lot for you.  There are also a bunch of nice plugins that do nice reports on state of project; findbugs, that nice plugin where you can give out urls that will resolve to lines in source code (a doxygen-like thing ... I&apos;ve forgotten its name).  Other examples are a docbook plugin that would do the build inline with doc build.  We could start up the hbase book using docbook format and the hbase book would ride along with versions.&lt;/p&gt;

&lt;p&gt;As I see it &amp;#8211; and its a while since I&apos;ve done this stuff so things may have since changed &amp;#8211; in the way of an easy move to maven is our src/contrib content.  Maven would have these as distinct projects pulling in their hbase dependency or, if you wanted to take on the maven subproject notion, then, hbase would be at same level in build as the contribs &amp;#8211; it would be a subproject too just built before the others.&lt;/p&gt;

&lt;p&gt;Anyone interested in working on this issue?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12445071">HBASE-2099</key>
            <summary>Move build to Maven</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Fri, 8 Jan 2010 21:30:53 +0000</created>
                <updated>Thu, 2 May 2013 02:29:28 +0000</updated>
                            <resolved>Fri, 5 Mar 2010 07:39:26 +0000</resolved>
                                                                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12798947" author="psmith@apache.org" created="Tue, 12 Jan 2010 00:06:24 +0000"  >&lt;p&gt;I sort of itched and nearly put my hand up to have a crack at this because I&apos;m a bit of a Maven fan and have spent the last 18 months supporting the migration of a large and complex project into a series of sub-modules under Maven, so that experience would be useful here.&lt;/p&gt;

&lt;p&gt;The question is of course time.  The recent switch to ivy in some ways makes this simpler because the artifact/version ids of the dependencies are now specified in a fairly maven friendly way.&lt;/p&gt;

&lt;p&gt;Still, time is the problem here, I still haven&apos;t made further progress on the hbase-utils so perhaps I should get that to Google code before I try and start something else.  &lt;/p&gt;

&lt;p&gt;I&apos;ll certainly be lurking and can help review proposals of Maven poms and structures.  There should be a way to specify a Maven pom that keeps the existing directory structures to minimize pain (albeit with a more complex pom, but a later directory shuffle after can still happen if needed).&lt;/p&gt;</comment>
                            <comment id="12798952" author="stack" created="Tue, 12 Jan 2010 00:14:22 +0000"  >&lt;p&gt;@Paul Smith Can you at least comment on how we might do src/contrib sub builds using maven?  My (old) understanding is that to do our current hierarchy &amp;#8211; i.e. hbase.jar and then src/contrib jars, hbase-stargate.jar, etc. &amp;#8211; is possible but messy in maven.   I did it previously but it was an ugly hack, something I&apos;d not like to repeat.  Thanks (And thanks for the almost volunteering (smile)).&lt;/p&gt;</comment>
                            <comment id="12798985" author="psmith@apache.org" created="Tue, 12 Jan 2010 01:49:21 +0000"  >&lt;p&gt;I&apos;m going to have to refresh my memory of the directory layout of contrib, it may be that a smaller directory shuffle will make it more amenable to it, but it&apos;s definitely doable, at Aconex we have 5 sub-modules.&lt;/p&gt;

&lt;p&gt;I think if src/java was moved to &apos;core/src/java&apos;, then you&apos;d have &apos;core&apos; as a sub-module, and contribs as a set of smaller sub-modules.  &lt;/p&gt;

&lt;p&gt;If I have time, what I could do is use &apos;script&apos; to record a session of my hackery, doing some pretend &apos;svn mv&apos; around etc, and document pom details that work, and then upload a zip&apos;d example of the hbase-trunk check out.&lt;/p&gt;

&lt;p&gt;The fact hbase has a small list of dependencies for core is encouraging, and the fact there&apos;s only 3 contrib modules.&lt;/p&gt;

&lt;p&gt;setting up all the maven reports for CPD, PMD, etc is really simple, it&apos;s dropping in a bunch of plugin definitions of which I have many examples lying around so I think I have a good chance of success here.&lt;/p&gt;

&lt;p&gt;i&apos;m intrigued now, lets see what a lunch time session gets me.&lt;/p&gt;</comment>
                            <comment id="12798987" author="psmith@apache.org" created="Tue, 12 Jan 2010 01:55:21 +0000"  >&lt;p&gt;i managed to make some progress here by being.... crafty (ok it&apos;s a hack, lets be honest).&lt;/p&gt;

&lt;p&gt;What I&apos;ve started down the path of doing is simply adding a &apos;core&apos; subdirectory under the main hbase trunk check out. inside that directory is just a pom.  using judicious references to &quot;$&lt;/p&gt;
{basedir}
&lt;p&gt;../src/java&quot; etc I can fake out Maven into thinking that the core is a true sub-module.&lt;/p&gt;

&lt;p&gt;Still, my main headache is finding a binary for thrift, can&apos;t spot that anywhere, and indeed the ivy.xml currently has a commented out block for zookeeper and ivy (i&apos;ve got a local zookeeper binary in our corporate Nexus maven repo so I&apos;m just leveraging off that one for now ).&lt;/p&gt;

&lt;p&gt;I suspect we would also need to split out a resource directory, currently the following files under src/java wouldn&apos;t end up in the final jar without some more directory moving or trickery:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;bash-3.2$ find src/java/ -type f | fgrep -v &apos;.java&apos; | fgrep -v &apos;.svn&apos;
src/java//org/apache/hadoop/hbase/io/hfile/package.html
src/java//org/apache/hadoop/hbase/ipc/package.html
src/java//org/apache/hadoop/hbase/mapreduce/RowCounter_Counters.properties
src/java//org/apache/hadoop/hbase/thrift/Hbase.thrift
src/java//org/apache/hadoop/hbase/thrift/package.html
src/java//overview.html
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we could move these to say, src/resources, then it&apos;s pretty simple, just tell Maven that&apos;s the resource directory and it gets added to the jar.&lt;/p&gt;

&lt;p&gt;I&apos;ll keep working on it, but I feel fairly close to the core part being done.  After that, I&apos;ll make sure the contrib compiles and packages nicely, then I&apos;ll need to cycle back and make sure the test cycle is working ok.  &lt;/p&gt;
</comment>
                            <comment id="12799022" author="psmith@apache.org" created="Tue, 12 Jan 2010 02:19:54 +0000"  >&lt;p&gt;ahh... the old &quot;why don&apos;t you look in the directory named &apos;lib&apos; response&quot; coming I&apos;m sure... &lt;/p&gt;

&lt;p&gt;&lt;b&gt;ahem&lt;/b&gt;&lt;/p&gt;</comment>
                            <comment id="12799027" author="psmith@apache.org" created="Tue, 12 Jan 2010 02:27:09 +0000"  >&lt;p&gt;Here&apos;s my first cut at this, currently compiles the core fine, doesn&apos;t cater for the contrib modules yet.&lt;/p&gt;

&lt;p&gt;As said previously, I&apos;ve just simply adding a new &apos;core&apos; directory to contain the pom to fake Maven into thinking it a sub-module, with the core/pom.xml referencing the java src via &apos;..&apos;.&lt;/p&gt;
</comment>
                            <comment id="12799055" author="kaykay.unique" created="Tue, 12 Jan 2010 03:37:13 +0000"  >&lt;p&gt;Great - Paul. See also &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2114&quot; title=&quot;Can&amp;#39;t start HBase in trunk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2114&quot;&gt;&lt;del&gt;HBASE-2114&lt;/del&gt;&lt;/a&gt; / &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2115&quot; title=&quot;./hbase shell would not launch due to missing jruby dependency&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2115&quot;&gt;&lt;del&gt;HBASE-2115&lt;/del&gt;&lt;/a&gt; that added a couple of dependencies as well ( jruby-complete / log4j ) to &apos;core&apos; . &lt;/p&gt;</comment>
                            <comment id="12799076" author="psmith@apache.org" created="Tue, 12 Jan 2010 05:03:53 +0000"  >&lt;p&gt;yep, I&apos;ve spotted those will add them as I progressively drill deeper into the sub-modules, I&apos;m sure the test side is going to need to bring in more at this point.&lt;/p&gt;
</comment>
                            <comment id="12799465" author="psmith@apache.org" created="Tue, 12 Jan 2010 23:26:21 +0000"  >&lt;p&gt;the more I look into this the more I think I &lt;em&gt;could&lt;/em&gt; hack up a Maven structure that &apos;works&apos; following the same pattern I had done for core, which is to create a dummy directory containing the pom.  But that sort of smells.&lt;/p&gt;

&lt;p&gt;What I&apos;d prefer to be done would be this&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Move src/contrib -&amp;gt; contrib, have a top level contrib/pom.xml that makes this tree a multi-module project&lt;/li&gt;
	&lt;li&gt;Move src/java -&amp;gt; core/src/java&lt;/li&gt;
	&lt;li&gt;Move src/test -&amp;gt; core/src/test (probably extract out of this a core/src/resources too, but may be possible to configure the resource plugin to filter out .java and use the same directory, not ideal though)&lt;/li&gt;
	&lt;li&gt;Move src/test/data -&amp;gt; core/test/resources&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;The src/webapps directory is interesting, I&apos;m not exactly sure where that is supposed to be bundled up.  But I can definitely see how we can use the assembly plugin and descriptors to create the overarching tar ball for release purposes to mimic the current distribution.&lt;/p&gt;

&lt;p&gt;This sort of proposal is obviously far more invasive.  If there was a wish to have the Ivy setup in place in the interim, that would have to be modified to keep track.&lt;/p&gt;

&lt;p&gt;What about I just go and fiddle with the current setup and just show it in a fully working setup and upload it here as an example.&lt;/p&gt;</comment>
                            <comment id="12799470" author="psmith@apache.org" created="Tue, 12 Jan 2010 23:45:33 +0000"  >&lt;p&gt;incidentally the saveVersion.sh could probably be replaced with a text replace during a Maven build cycle (during the generate-sources phase), using the $&lt;/p&gt;
{project.version}
&lt;p&gt; variable.&lt;/p&gt;</comment>
                            <comment id="12799562" author="psmith@apache.org" created="Wed, 13 Jan 2010 04:03:24 +0000"  >&lt;p&gt;ok, I&apos;m making more progress, I&apos;m getting test failures,  but then I think the same tests fail when running through ivy, so perhaps a local environment thing, for now I&apos;m focusing on making the jars generated by ivy and by maven to be identical.  I do this by unpacking the ivy &amp;amp; maven generated ones into 2 different directories and then running the Mac&apos;s opendiff tool to look for differences.&lt;/p&gt;

&lt;p&gt;Heres some bits I&apos;ve discovered so far.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;the ivy generated targets appear to &apos;fatten up&apos; the jar with duplicate files in different directories.  For example hbase-default.xml:&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;bash-3.2$ unzip -l ../build/hbase-0.21.0-dev.jar | fgrep hbase-default.xml
    21472  01-12-10 11:04   hbase-default.xml
    21472  01-12-10 11:04   conf/hbase-default.xml
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I can probably replicate that behaviour but it will make the Maven pom more messy.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Maven appears to locate some .java files from &lt;em&gt;within&lt;/em&gt; the zookeeper dependency and decides to compile these to the hbase class output.  That&apos;s annoying, I haven&apos;t spotted this one before, I&apos;ll raise this with the Maven crew.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;The ivy-generated jar contains pre-compiled JSP files:&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;bash-3.2$ unzip -l ../build/hbase-0.21.0-dev.jar | fgrep generated | fgrep -v thrift
        0  01-12-10 13:17   org/apache/hadoop/hbase/generated/
        0  01-12-10 13:17   org/apache/hadoop/hbase/generated/master/
        0  01-12-10 13:17   org/apache/hadoop/hbase/generated/regionserver/
    12646  01-12-10 13:17   org/apache/hadoop/hbase/generated/master/master_jsp.class
    13018  01-12-10 13:17   org/apache/hadoop/hbase/generated/master/table_jsp.class
     4857  01-12-10 13:17   org/apache/hadoop/hbase/generated/master/zk_jsp.class
     8833  01-12-10 13:17   org/apache/hadoop/hbase/generated/regionserver/regionserver_jsp.class
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; I know Hbase uses Jetty for it&apos;s runtime web -apps and I can see in build.xml the jsp compilation, but whether the raw JSP&apos;s should be compiled and bundled isn&apos;t clear (for the small # of them it doesn&apos;t really seem high value, simpler for Jetty to compile dynamically at boot time?).  Seems to overcomplicate the build process?&lt;/p&gt;

&lt;p&gt;I suspect this is just going to be much cleaner with some directory reshuffling.&lt;/p&gt;

&lt;p&gt;i will keep pottering.&lt;/p&gt;</comment>
                            <comment id="12799575" author="stack" created="Wed, 13 Jan 2010 04:53:34 +0000"  >&lt;p&gt;Here&apos;s a few comments Paul (Thanks for taking this on).&lt;/p&gt;

&lt;p&gt;That the generated jar, hbase-0.21.0-dev.jar, has a hbase-default.xml in top-level and in a conf subdir looks wrong.  I think the top-level one is the one we want.  Whatever, its not your prob. Just make an issue on it and one of us will figure it.&lt;/p&gt;

&lt;p&gt;.bq Maven appears to locate some .java files from within the zookeeper dependency...&lt;/p&gt;

&lt;p&gt;Its finding java files in the zk jar and compiling them?&lt;/p&gt;

&lt;p&gt;.bq The ivy-generated jar contains pre-compiled JSP file...&lt;/p&gt;

&lt;p&gt;Yeah.  HBase and Hadoop do this.  I think its so hadoop/hbase can run on a jre, that they don&apos;t require a jdk.&lt;/p&gt;

&lt;p&gt;.bq cidentally the saveVersion.sh could probably be replaced with a text replace during a Maven build cycle...&lt;/p&gt;

&lt;p&gt;Sure.&lt;/p&gt;

&lt;p&gt;On moving dirs, thats no problem (Can&apos;t make an omelette...)&lt;/p&gt;



</comment>
                            <comment id="12799577" author="psmith@apache.org" created="Wed, 13 Jan 2010 05:01:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;That the generated jar, hbase-0.21.0-dev.jar, has a hbase-default.xml in top-level and in a conf subdir looks wrong. I think the top-level one is the one we want. Whatever, its not your prob. Just make an issue on it and one of us will figure it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ok, that&apos;s fine, I figured it was the top-level one, I&apos;ll just make it only do that one&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Its finding java files in the zk jar and compiling them?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yep, it appears to &apos;find&apos; these as part of it&apos;s java source location mechanism.  It&apos;s odd that the zookeeper binary artifact has the .java files embedded with it (go check, it&apos;s there), but Maven shouldn&apos;t really be doing that if it&apos;s not within the defined compilation directories.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On moving dirs, thats no problem (Can&apos;t make an omelette...)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Mine might be a spicy omelette, is someone ok to handle any ivy changes as we make progress?&lt;/p&gt;</comment>
                            <comment id="12799578" author="psmith@apache.org" created="Wed, 13 Jan 2010 05:08:57 +0000"  >&lt;p&gt;Latest version of the &apos;patch&apos;.  I&apos;ve included 2 forms, a full, and a &apos;lite&apos; version that contains only the pom files (makes it easier to review). &lt;/p&gt;

&lt;p&gt;At this stage, the major surgery includes only:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;creation of a new core directory (plus pom, with external references)&lt;/li&gt;
	&lt;li&gt;relocating src/contrib to be a top-level tree.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I now move on to larger scale svn mv hackery, I&apos;m not 100% sure how this will come out in svn diff form, I may have to just produce a document with all the commands necessary to accomplish it (I had found in a previous large scale maven migration that doing an svn mv, but with people checking in new and modified files into the old directory BEFORE the mv is committed ensures major headaches under svn).&lt;/p&gt;

&lt;p&gt;I hadn&apos;t thought of the JDK vs JRE point of view before.  There&apos;s a maven-jspc-plugin, so we should be able to accomplish the same thing here no problems.&lt;/p&gt;</comment>
                            <comment id="12799582" author="stack" created="Wed, 13 Jan 2010 05:20:33 +0000"  >&lt;p&gt;.bq yep, it appears to &apos;find&apos; these as part of it&apos;s java source location mechanism. It&apos;s odd that the zookeeper binary artifact has the .java files embedded with it (go check, it&apos;s there), but Maven shouldn&apos;t really be doing that if it&apos;s not within the defined compilation directories.&lt;/p&gt;

&lt;p&gt;Let me ask zk boys.&lt;/p&gt;

&lt;p&gt;.bq ..s someone ok to handle any ivy changes as we make progress?&lt;/p&gt;

&lt;p&gt;You think we should have ivy and maven at same time?  Once maven is working, we&apos;d ditch ivy?&lt;/p&gt;</comment>
                            <comment id="12799584" author="kaykay.unique" created="Wed, 13 Jan 2010 05:33:16 +0000"  >&lt;blockquote&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; .bq ..s someone ok to handle any ivy changes as we make progress?&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;You think we should have ivy and maven at same time? Once maven is working, we&apos;d ditch ivy?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;May be the first cut of changes can be the directory restructure of the existing files , as fitting maven. &lt;/p&gt;

&lt;p&gt;Change Ivy / build.xml to make sure the src tree changes go with them to continue to be useful for existing process. &lt;/p&gt;

&lt;p&gt;Maintain pom.xml(s) as another patch here until it works completely, and commit it when working. Get away from Ivy then. &lt;/p&gt;
</comment>
                            <comment id="12799589" author="stack" created="Wed, 13 Jan 2010 05:42:09 +0000"  >&lt;p&gt;Looking at the lightweight patch:&lt;/p&gt;

&lt;p&gt;+ Our groupid is org.apache.hbase.  I think that should be org.apache.hadoop.hbase.  Will this groupid put us into the right relative location in the apache maven repo?  Here&apos;s apache snapshots: &lt;a href=&quot;https://repository.apache.org/content/repositories/snapshots/org/apache/hadoop/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://repository.apache.org/content/repositories/snapshots/org/apache/hadoop/&lt;/a&gt;.  We should be going into this directory I&apos;d say.&lt;br/&gt;
+ The artifactid for core is hbase-core.  Currently our hbase jar is named hbase-X.X.X.jar.  if artifactId is hbase-core, doesn&apos;t that mean the core jar will be named hbase-core-X.X.X.jar.  Can we keep our old name?  Maybe the parent artifactId could be hadoop-hbase and then this core module&apos;s could be plain hbase?&lt;br/&gt;
+ On these:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &amp;lt;zookeeper.version&amp;gt;3.2.2&amp;lt;/zookeeper.version&amp;gt;
+    &amp;lt;thrift.version&amp;gt;r771587&amp;lt;/thrift.version&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can&apos;t we just check these in?  I remember that in maven for certain dependencies, you could override the pull from a remote repository and instead have it read from a local directory.  Is that still so?  (I might be remembering this wrong).&lt;/p&gt;

&lt;p&gt;+ We can add in licensing and better project description stuff later, no worries.&lt;/p&gt;</comment>
                            <comment id="12799590" author="psmith@apache.org" created="Wed, 13 Jan 2010 05:42:49 +0000"  >&lt;p&gt;I can&apos;t think of a seamless way of doing it that doesn&apos;t involve either keeping Ivy configs in sync, or having a bit of flexibility (ie. downtime) while the reshuffling is is done.&lt;/p&gt;

&lt;p&gt;What I can probably do is do exactly what I did for our corporate mavenization.  I took a branch off trunk, and built a sequence of steps to make the Maven switch, with a good bit of testing (lots of jar diffs).&lt;/p&gt;

&lt;p&gt;Once complete, we held off commits to trunk for a short while while the migration script was applied (in my case I did it manually, step by step, was only about a dozen or so commands), then commit.&lt;/p&gt;

&lt;p&gt;So perhaps we can do that, have a working test branch that someone can follow my steps locally for review and then once you guys are happy, you could run these steps yourself on trunk.&lt;/p&gt;

&lt;p&gt;i don&apos;t know how much work keeping ivy in sync would be, risking some brittleness in trunk.  How many dev build trunk ? I&apos;m not sure how big the hbase-dev team is, if it&apos;s small, that maybe ok, but if it&apos;s big it could be a bit of an inconvenience.&lt;/p&gt;</comment>
                            <comment id="12799593" author="stack" created="Wed, 13 Jan 2010 05:48:29 +0000"  >&lt;p&gt;I&apos;m good w/ Kay Kays suggestion of two phase commit.&lt;/p&gt;

&lt;p&gt;@Paul On svn moving, it&apos;ll leave notes in the patch as to what moved there... otherwise, you can do a rough description and I can move the stuff around.&lt;/p&gt;

&lt;p&gt;You know, you&apos;re getting pretty far along here Paul.  It might be time to solicit community opinion on move to maven.  Its a big change.  There should be some discussion up on hbase-dev.  Maybe hack some more and when you are confident its going to work and you have a good idea of the shape it will take, lets work on posting a note.&lt;/p&gt;

&lt;p&gt;Good stuff.&lt;/p&gt;</comment>
                            <comment id="12799596" author="stack" created="Wed, 13 Jan 2010 05:54:13 +0000"  >&lt;p&gt;.bq What I can probably do is do exactly what I did for our corporate mavenization. I took a branch off trunk, and built a sequence of steps to make the Maven switch, with a good bit of testing (lots of jar diffs).&lt;/p&gt;

&lt;p&gt;This sounds like a good idea.  Working in a branch.  github is good for this (Its hard giving a non-committer access to apache svn repo).&lt;/p&gt;</comment>
                            <comment id="12799599" author="psmith@apache.org" created="Wed, 13 Jan 2010 06:04:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;This sounds like a good idea. Working in a branch. github is good for this (Its hard giving a non-committer access to apache svn repo).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;although this will account for squat I&apos;m sure, but I am an Apache committer (psmith@apache.org, on the Logging Services projects). That makes it less administratively burdensome, but I can appreciate a project team doesn&apos;t hand out privileges in the Corn Flakes packets, so I&apos;m perfectly happy to provide patches/instructions and help for now.&lt;/p&gt;

&lt;p&gt;I could probably get myself git-enabled (yet-another-excuse to do that, I really must) but it may just slow me down in the short term.  I&apos;ll create a poor-mans-branch, and just checkout a fresh copy of trunk now and then and reapply the changes for testing.  Once I&apos;m confident it&apos;s solid, I&apos;ll just post the instructions here for someone with privs to try out and they can commit for review by other hbase-devs&lt;/p&gt;</comment>
                            <comment id="12799603" author="psmith@apache.org" created="Wed, 13 Jan 2010 06:24:23 +0000"  >&lt;p&gt;I&apos;ll change the groupId&apos;s to match @stack&apos;s comment.  I&apos;ll keep the artifactId for core as &apos;hbase-core&apos; but I&apos;ll make sure the final name jar is just &apos;hbase-$&lt;/p&gt;
{project.version}
&lt;p&gt;.jar&apos; to keep the consistency.&lt;/p&gt;</comment>
                            <comment id="12799861" author="stack" created="Wed, 13 Jan 2010 18:29:59 +0000"  >&lt;p&gt;Here is some discussion from up in hadoop on maven vs ivy: &lt;a href=&quot;http://www.mail-archive.com/core-dev@hadoop.apache.org/msg27653.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.mail-archive.com/core-dev@hadoop.apache.org/msg27653.html&lt;/a&gt;  There may have been more but I got tired of searching.   &lt;/p&gt;</comment>
                            <comment id="12799928" author="psmith@apache.org" created="Wed, 13 Jan 2010 20:52:26 +0000"  >&lt;p&gt;Thanks @stack.  There is no question that if a project has a non-standard need, then using Maven is a bit of the classic square-peg-round-hole scenario.&lt;/p&gt;

&lt;p&gt;But it&apos;s surprising how when one looks at builds needs, the commonality is usually there.  Yes, with Maven you really do need to give up a little flexibility (one can make an existing structure work with Maven, but it&apos;s usually easier to just conform).  The advantage to conformity is the principle of standardization;  a common build system principle means that more people will understand how to use it, (&quot;Hey, I&apos;ve used Maven projects before, so this one is easy to follow&quot;).&lt;/p&gt;

&lt;p&gt;I haven&apos;t spotted anything in the Hbase environment as yet that is really &apos;non-standard&apos;.  You&apos;re building a series of JARs, and packaging them up into a tar ball, that&apos;s pretty vanilla flavoured as Maven builds go, and exactly what it was targetted for.&lt;/p&gt;

&lt;p&gt;Ivy has a nice sweet spot of being familiar to those with Ant experience, and it does foster some of the commonality Maven strives towards.&lt;/p&gt;

&lt;p&gt;At the end of the day, this must be driven from the hbase-dev community.  I&apos;m happy to provide an example working setup based on my experience for consideration, and if it is not needed, it&apos;s no biggie.&lt;/p&gt;</comment>
                            <comment id="12799971" author="psmith@apache.org" created="Wed, 13 Jan 2010 22:25:38 +0000"  >&lt;p&gt;WIP so far&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Webapps shuffled directories around, JSPC done via antrun plugin&lt;/li&gt;
	&lt;li&gt;package-info.java generation done via antrun plugin (slight tweak to the saveVersion.sh to provide the outputDirectory to use, this works around any assumption about a working directory, and allows the outer Maven env to pass in the correct value).  build-helper plugin used to then compile this generated source.  Slight difference in output, because the $
{project.version}
&lt;p&gt; is automatically provided to the script by Maven rather than user entered (ie &apos;0.21.0-dev&apos; vs. &apos;0.22-SNAPSHOT&apos;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Current differences between ivy- and maven-generated jars:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;conf/hbase-default.xml appears in the jar (current assumption is this is unintended on the ivy part)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;META-INF/MANIFEST.MF is different (some extra info added by Maven, missing the Main-Class reference, easily done in Maven, just a TODO)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;org.apache.jute and zookeeper classes added, this is due to unintended source files being located in these artifacts binaries.  Still to chase up why Maven compiles these.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;overview.html appears in the root of the Maven jar.  Should that be located in webapps/ ?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;ivy-generated jar contains 0 byte webapps/rest/META-INF/MANIFEST.MF (as well as one for the static tree).  I&apos;m presuming this is unintended by Ivy.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;A small binary diff on org.apache.hadoop.hbase.HTableDescriptor.class.  Not sure what that is, will need to check&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Hbase.thrift is appearing in the Maven jar.  I don&apos;t think this is needed in the jar ?  Probably simpler to just move this resource into a non-Maven-resource directory.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12799973" author="stack" created="Wed, 13 Jan 2010 22:28:54 +0000"  >&lt;p&gt;Maybe its time to write the list then?  The only downside I see is that if we go w/ ivy, we are in closer alignment with the hadoop parent and adjacent projects.  Another minor downside is the hardwired &quot;website&quot; that maven generates.  Its hard to pull around.  Currently though, we&apos;re in alignment with parent project and we&apos;re using forrest which is a dog.&lt;/p&gt;

&lt;p&gt;Paul, what you think of the circa-2006 criticisms that maven is a time sink and that it&apos;ll make our build harder? (e.g. see commentary on spring moving to maven).  Do you think newer maven better?&lt;/p&gt;

&lt;p&gt;When I read the ivy site on why ivy and how it compares to maven, I buy neither.  The only arg. that makes sense for me is the one where ant remains the build driver if you go w/ ivy.  Maven does a load of nice stuff for you.&lt;/p&gt;</comment>
                            <comment id="12800020" author="psmith@apache.org" created="Wed, 13 Jan 2010 23:50:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;Maybe its time to write the list then? The only downside I see is that if we go w/ ivy, we are in closer alignment with the hadoop parent and adjacent projects. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;d like to make a little more progress (certainly getting the test cases to work) before I make this more visible.  As I said, it&apos;s not wasted effort if it is turned down.  I&apos;d say that providing more substantial progress may make going to Maven more appealing.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Another minor downside is the hardwired &quot;website&quot; that maven generates. Its hard to pull around. Currently though, we&apos;re in alignment with parent project and we&apos;re using forrest which is a dog.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maven site generation is not puuurrrty, but it is functional, and the integration of all the reports makes it functional and very useful. Apart from the report generation side of things, the site configuration is not something I have very much experience with (in terms of configuration).  Actually how is the HBase site generated at the moment?  I can&apos;t locate that in the build.xml/ivy setup ?  is it external to the hbase-trunk?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Paul, what you think of the circa-2006 criticisms that maven is a time sink and that it&apos;ll make our build harder? (e.g. see commentary on spring moving to maven). Do you think newer maven better?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;2006 is ancient.  Really I would have hated to use Maven back then.  It has really come to be very stable, and predictable now since 2.2.  2.1 went along way to convincing me it was time to convert our corporate build system to Maven, and it has worked well.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When I read the ivy site on why ivy and how it compares to maven, I buy neither. The only arg. that makes sense for me is the one where ant remains the build driver if you go w/ ivy. Maven does a load of nice stuff for you.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maven does do a lot of nice things.  I think many people have had headaches &lt;em&gt;converting&lt;/em&gt; their project to Maven, because the older setup of their build probably was &apos;non-standard&apos; (that&apos;s not saying it was bad, just not conventional).  When you drift too far from Mavens conventions, you are starting to go against the grain and it requires more energy to do so.  As soon I see something being &apos;hard&apos; in Maven, I start to question whether trying to do it that way is a good idea; perhaps it&apos;s simpler to just adjust the project to suit Maven (classic of shuffling directories around to fit the common Maven cases etc).&lt;/p&gt;

&lt;p&gt;Certainly starting off a new Maven project is a breeze, and adding new sub-modules becomes elegant, inheriting all the definitions from the parent, making refactoring/modularizing quite nice.&lt;/p&gt;

&lt;p&gt;I suspect migrating an existing ant build to ivy is way simpler than going to Maven.  One has to see the longer term benefits of Maven before it becomes compelling.&lt;/p&gt;
</comment>
                            <comment id="12800022" author="stack" created="Wed, 13 Jan 2010 23:59:34 +0000"  >&lt;p&gt;Thanks for the above Paul.&lt;/p&gt;</comment>
                            <comment id="12800086" author="psmith@apache.org" created="Thu, 14 Jan 2010 02:36:13 +0000"  >&lt;p&gt;I think this is where Maven starts to pay off, just by adding this snippet in the top-level pom:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  &amp;lt;distributionManagement&amp;gt;
    &amp;lt;repository&amp;gt;
      &amp;lt;id&amp;gt;Apache Public Releases&amp;lt;/id&amp;gt;
      &amp;lt;url&amp;gt;scp://people.apache.org/home/psmith/public_html/hbase/repo/&amp;lt;/url&amp;gt;
    &amp;lt;/repository&amp;gt;
    &amp;lt;snapshotRepository&amp;gt;
      &amp;lt;id&amp;gt;Apache Public Snapshots&amp;lt;/id&amp;gt;
      &amp;lt;name&amp;gt;Aconex Snapshots&amp;lt;/name&amp;gt;
      &amp;lt;url&amp;gt;scp://people.apache.org/home/psmith/public_html/hbase/repo-snapshots/&amp;lt;/url&amp;gt;
    &amp;lt;/snapshotRepository&amp;gt;
    &amp;lt;site&amp;gt;
      &amp;lt;id&amp;gt;HBase Site&amp;lt;/id&amp;gt;
      &amp;lt;url&amp;gt;scp://people.apache.org/home/psmith/public_html/hbase/sandbox/hbase/&amp;lt;/url&amp;gt;
    &amp;lt;/site&amp;gt;
  &amp;lt;/distributionManagement&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and having a corresponding username/password entries in my ~/.m2/settings.xml for each id, I can do this:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;# skip tests because they&apos;re currently failing in this interim

mvn -Dmaven.test.skip.exec=true deploy site:deploy
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Imagine that the Snapshots url is the real Apache Snapshots location, this is a fast way of providing working snapshot builds for upstream people to use without a full release:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://people.apache.org/~psmith/hbase/repo-snapshots/org/apache/hadoop/hbase/hbase-core/0.20.2-SNAPSHOT/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~psmith/hbase/repo-snapshots/org/apache/hadoop/hbase/hbase-core/0.20.2-SNAPSHOT/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also the site generation (putting aside it&apos;s ugliness) does produce useful info:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://people.apache.org/~psmith/hbase/sandbox/hbase/hbase-core/jdepend-report.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~psmith/hbase/sandbox/hbase/hbase-core/jdepend-report.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A full release can then use the maven-release-plugin, which will manage the SCM tagging, and pushing the final release candidates direct to their proper location on the Apache central release repo.&lt;/p&gt;</comment>
                            <comment id="12800113" author="stack" created="Thu, 14 Jan 2010 04:50:43 +0000"  >&lt;p&gt;Thats funny.  Now I see why you wanted to wait before you wrote the list.  As soon as you show them the above link with all the reports &amp;#8211; I always liked xsource plugin... really useful &amp;#8211; they are all going to vote +1 on maven.&lt;/p&gt;</comment>
                            <comment id="12800303" author="stack" created="Thu, 14 Jan 2010 18:57:36 +0000"  >&lt;p&gt;On java files in zk jar (from our Patrick &amp;#8211; I should have written the zk list instead of writing Patrick direct):&lt;/p&gt;

&lt;p&gt;&quot;We initially copied hadoop, which does that as well. Some of the team members like it as it means you have the source right there if there&apos;s an issue (in particular useful if someone patched/compiled themselves).&lt;/p&gt;

&lt;p&gt;&quot;Someone entered an issue for 3.3.0 re maven and source in the jar a while back, for 3.3.0 we have a patch to the build.xml that will address (4 jars now, original(current) + bin/src/doc jars for maven repo)&quot;&lt;/p&gt;</comment>
                            <comment id="12800381" author="psmith@apache.org" created="Thu, 14 Jan 2010 21:59:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;&quot;Someone entered an issue for 3.3.0 re maven and source in the jar a while back, for 3.3.0 we have a patch to the build.xml that will address (4 jars now, original(current) + bin/src/doc jars for maven repo)&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, good, so they have a plan for that.  It&apos;s more an annoyance I guess, there&apos;s no functional issue I can think of here, since it&apos;s the same source as the binary, it&apos;s just being recompiled (well we HOPE it&apos;s the same source right.. ? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ).  The only trickery here is that if it ISN&apos;T the same source, then because hbase is lexicographically earlier than zookeeper, in most JVMs I think it will find the zookeeper classes from the hbase jar, and use those, basically ignoring the binaries inside zookeeper.&lt;/p&gt;

&lt;p&gt;My next steps are in order:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;use the assembly plugin to build the overall tar ball, mimic what ivy does&lt;/li&gt;
	&lt;li&gt;make the test cases work (I should work out why they also fail under ivy first I suspect)&lt;/li&gt;
	&lt;li&gt;flesh out the contrib area more (I&apos;m currently only build stargate, and probably not completely, because I still haven&apos;t added the jruby dependency in just yet for runtime)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think if I do the first 2, then I&apos;ll post more details on the list.&lt;/p&gt;</comment>
                            <comment id="12800439" author="kaykay.unique" created="Thu, 14 Jan 2010 23:59:03 +0000"  >&lt;blockquote&gt;
&lt;p&gt;make the test cases work (I should work out why they also fail under ivy first I suspect)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Seems like an artifact of contrib/ec2 reusing build-contrib.xml . See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2126&quot; title=&quot;Fix build break - ec2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2126&quot;&gt;&lt;del&gt;HBASE-2126&lt;/del&gt;&lt;/a&gt;  , looks like a build.xml quirk. &lt;/p&gt;</comment>
                            <comment id="12800462" author="psmith@apache.org" created="Fri, 15 Jan 2010 00:28:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;Seems like an artifact of contrib/ec2 reusing build-contrib.xml . See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2126&quot; title=&quot;Fix build break - ec2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2126&quot;&gt;&lt;del&gt;HBASE-2126&lt;/del&gt;&lt;/a&gt; , looks like a build.xml quirk.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hrm, I don&apos;t think that&apos;s the problem with the Maven side as yet, I&apos;m getting stuff like:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;....
  &amp;lt;testcase time=&quot;1.403&quot; classname=&quot;org.apache.hadoop.hbase.TestFullLogReconstruction&quot; name=&quot;org.apache.hadoop.hbase.TestFullLogReconstruction&quot;&amp;gt;
    &amp;lt;error message=&quot;tried to access field org.slf4j.impl.StaticLoggerBinder.SINGLETON from class org.slf4j.LoggerFactory&quot; type=&quot;java.lang.IllegalAccessError&quot;&amp;gt;java.lang.IllegalAccessError: tried to access field org.slf4j.impl.StaticLoggerBinder.SINGLETON from class org.slf4j.LoggerFactory
	at org.slf4j.LoggerFactory.&amp;amp;lt;clinit&amp;amp;gt;(LoggerFactory.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mortbay.log.Slf4jLog.&amp;amp;lt;init&amp;amp;gt;(Slf4jLog.java:64)
	at org.mortbay.log.Slf4jLog.&amp;amp;lt;init&amp;amp;gt;(Slf4jLog.java:37)
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;...
  &amp;lt;testcase time=&quot;0.18&quot; classname=&quot;org.apache.hadoop.hbase.TestZooKeeper&quot; name=&quot;org.apache.hadoop.hbase.TestZooKeeper&quot;&amp;gt;
    &amp;lt;error message=&quot;Could not initialize class org.mortbay.log.Log&quot; type=&quot;java.lang.NoClassDefFoundError&quot;&amp;gt;java.lang.NoClassDefFoundError: Could not initialize class org.mortbay.log.Log
	at org.mortbay.component.Container.add(Container.java:200)
	at org.mortbay.component.Container.update(Container.java:164)
	at org.mortbay.component.Container.update(Container.java:106)
	at org.mortbay.jetty.Server.setConnectors(Server.java:158)
	at org.mortbay.jetty.Server.addConnector(Server.java:132)
	at org.apache.hadoop.http.HttpServer.&amp;amp;lt;init&amp;amp;gt;(HttpServer.java:119)
	at org.apache.hadoop.hdfs.server.namenode.NameNode.startHttpServer(NameNode.java:344
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I suspect there are more dependencies needed to be brought in for testing, but I can&apos;t see from the old ivy build system exactly what extra is needed for the &apos;hbase-core&apos; tests (nothing to do with hbase-contrib as yet).&lt;/p&gt;

&lt;p&gt;But I haven&apos;t spent much time on that yet, but if anyone can spot the problem, feel free to let me know...&lt;/p&gt;</comment>
                            <comment id="12800515" author="kaykay.unique" created="Fri, 15 Jan 2010 02:58:57 +0000"  >&lt;blockquote&gt;
&lt;p&gt;but I can&apos;t see from the old ivy build system exactly what extra is needed for the &apos;hbase-core&apos; tests &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt; &amp;lt;!--  Test  --&amp;gt;&lt;br/&gt;
   &amp;lt;dependency org=&quot;org.apache.hadoop&quot; name=&quot;hadoop-core-test&quot; &lt;br/&gt;
               rev=&quot;$&lt;/p&gt;
{hadoop-core.version}
&lt;p&gt;&quot; conf=&quot;test-&amp;gt;default&quot; transitive=&quot;false&quot;/&amp;gt; &lt;br/&gt;
   &amp;lt;dependency org=&quot;org.apache.hadoop&quot; name=&quot;hadoop-hdfs-test&quot; &lt;br/&gt;
               rev=&quot;$&lt;/p&gt;
{hadoop-hdfs.version}
&lt;p&gt;&quot; conf=&quot;test-&amp;gt;default&quot; transitive=&quot;false&quot;/&amp;gt; &lt;br/&gt;
   &amp;lt;dependency org=&quot;org.apache.hadoop&quot; name=&quot;hadoop-mapred-test&quot; &lt;br/&gt;
               rev=&quot;$&lt;/p&gt;
{hadoop-mapred.version}
&lt;p&gt;&quot; conf=&quot;test-&amp;gt;default&quot; transitive=&quot;false&quot;/&amp;gt; &lt;br/&gt;
   &amp;lt;dependency org=&quot;org.apache.commons&quot; name=&quot;commons-math&quot; &lt;br/&gt;
               rev=&quot;$&lt;/p&gt;
{commons-math.version}
&lt;p&gt;&quot; conf=&quot;test-&amp;gt;default&quot;/&amp;gt; &lt;/p&gt;


&lt;p&gt;These modules are needed for test  configuration, in addition to that of core. &lt;/p&gt;


&lt;p&gt;The error seems to be jetty / jetty-util though . &lt;/p&gt;

&lt;p&gt;Do an &lt;/p&gt;

&lt;p&gt;$ ant compile &lt;/p&gt;

&lt;p&gt;from the cmd line - and look at the list of jars at &lt;/p&gt;

&lt;p&gt;$&lt;/p&gt;
{basedir}
&lt;p&gt;/build/lib/ivy/lib/common and compare it with  &lt;/p&gt;

&lt;p&gt;$ mvn dependency:copy-dependencies  . &lt;/p&gt;

</comment>
                            <comment id="12800553" author="psmith@apache.org" created="Fri, 15 Jan 2010 05:34:10 +0000"  >&lt;p&gt;as it turned out I had missed the need for &apos;fork&apos; and the memory setting in the junit definition in build.xml, adding those same parameters to the Maven surefire plugin got me a lot close.&lt;/p&gt;

&lt;p&gt;I&apos;ve now only got 1 error, 2 failures, and 4 skipped tests (that&apos;s way less than before).&lt;/p&gt;

&lt;p&gt;thanks.&lt;/p&gt;</comment>
                            <comment id="12800563" author="psmith@apache.org" created="Fri, 15 Jan 2010 05:55:22 +0000"  >&lt;p&gt;Here&apos;s a small zip of the HTML report from the test run after getting most of this to work.&lt;/p&gt;

&lt;p&gt;This highlights a couple of things on the current test source:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;org.apache.hadoop.hbase.util.SoftValueSortedMapTest: - this doesn&apos;t have any methods to run, so currently comes up as an error under Maven.  I can&apos;t see in the build.xml where this would be marked as an ignore one, I can add it in to be ignored, but simpler to either move this class out of the test resource tree (even delete it if it&apos;s not useful anymore)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;2 failures, not sure if they currently happen in trunk or not, perhaps someone more familiar with Hbase can tell me&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;testIsDeleted_NotDeleted
	junit.framework.AssertionFailedError: expected:&amp;lt;false&amp;gt; but was:&amp;lt;true&amp;gt;
	
org.apache.hadoop.hbase.regionserver.TestGetDeleteTracker:260
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;testMakeZKProps
	junit.framework.AssertionFailedError: expected:&amp;lt;2000&amp;gt; but was:&amp;lt;3000&amp;gt;
	
org.apache.hadoop.hbase.zookeeper.HQuorumPeerTest:66
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;otherwise the test phase looks good, I will now &apos;assume all is well&apos; with the test cycle under Maven and move on to packaging.&lt;/p&gt;</comment>
                            <comment id="12800564" author="psmith@apache.org" created="Fri, 15 Jan 2010 05:57:04 +0000"  >&lt;p&gt;attached latest &apos;slim&apos; patch with pom&apos;s only, (I can work out the desired directory structure from this, and the full blown patch is just a bit heavy to continue doing for now).  Just saving work.&lt;/p&gt;</comment>
                            <comment id="12801537" author="psmith@apache.org" created="Sun, 17 Jan 2010 22:44:27 +0000"  >&lt;p&gt;Just sync&apos;ing (sort of) with what Kay Kay is doing with ivy build, attached current patch containing findbugs reporting plugin, and example report for core and contrib/stargate.&lt;/p&gt;</comment>
                            <comment id="12801669" author="psmith@apache.org" created="Mon, 18 Jan 2010 04:20:39 +0000"  >&lt;p&gt;This patch now makes decent headway into creating a overarching Hbase project-level binary (that&apos;s the src/assembly/bin.xml descriptor). &lt;/p&gt;

&lt;p&gt;Attached:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;latest patch, now actually USABLE with &apos;patch -p0&apos; etc.  Not sure why svn diff doesn&apos;t output new files correctly, but there you go.&lt;/li&gt;
&lt;/ol&gt;


&lt;ol&gt;
	&lt;li&gt;&apos;plan&apos; script showing the steps to execute to get to this point, which is a poor-mans version of Git I&apos;m sure.&lt;/li&gt;
&lt;/ol&gt;


&lt;ol&gt;
	&lt;li&gt;example top-level binary distribution (not including &lt;em&gt;everything&lt;/em&gt; yet, but looking close to the current setup)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Basically:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Take a clean HBase-trunk checkout&lt;/li&gt;
	&lt;li&gt;execute the steps included in the plan (but change the path to the patch)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;note: I&apos;m &lt;em&gt;positive&lt;/em&gt; this will not compile unless you have a local Nexus Maven repository setup, because I haven&apos;t specified the snapshot &amp;amp; google-code repo&apos;s in the top-level pom as yet, without these specified, and without a local repository manager proxying them, the dependencies won&apos;t be found.&lt;/p&gt;

&lt;p&gt;That&apos;s next on my list.&lt;/p&gt;

&lt;p&gt;However, if I: &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;mvn -Dmaven.test.skip.exec=true package assembly:assembly
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I find a tar.gz file in the hbase-trunk/target directory, which if unpacked, and then:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;target/hbase-0.20.2-SNAPSHOT-bin/bin/start-hbase.sh
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;seems to start Hbase (at least no NoClassDefFoundErrors anyway, I think I have an existing Hbase service running it doesn&apos;t like).&lt;/p&gt;

</comment>
                            <comment id="12801726" author="lars_francke" created="Mon, 18 Jan 2010 10:01:59 +0000"  >&lt;p&gt;Very good work. I&apos;m looking forward to building HBase with Maven.&lt;/p&gt;

&lt;p&gt;One thing though: You&apos;ve added a dependency for Thrift but that will perhaps never come to a Maven repository.&lt;/p&gt;

&lt;p&gt;Could you have a look at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1360&quot; title=&quot;move up to Thrift 0.2.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1360&quot;&gt;&lt;del&gt;HBASE-1360&lt;/del&gt;&lt;/a&gt;?&lt;br/&gt;
 We basically need three new dependencies for the core for now (at least for 0.21):  slf4j-simple 1.5.8, slf4j-api 1.5.8 (I&apos;ve seen that you added that already for avro) and commons-lang 2.4. And the libthrift-0.2.0.jar file from the lib/ directory, which you mention should be installed to the local repositories (mvn install:file/Nexus) but it would be ideal if Maven could use the jar from the lib directory directly for now without this additional step.&lt;/p&gt;</comment>
                            <comment id="12801992" author="stack" created="Mon, 18 Jan 2010 23:30:11 +0000"  >&lt;p&gt;@Paul Excellent.  You think it time to write the list now?   I think your message to the list should include a pointer to a mavenized hbase site hosted in your personal apache dir as per above.  That&apos;ll help people understand whats involved.  &lt;/p&gt;

&lt;p&gt;Also, regards the jars that are not yet up in maven &amp;#8211; as per Lars &amp;#8211; thrift and zk, can we tell maven to use the ones checked into the lib dir?  (You used to be able to IIRC).&lt;/p&gt;</comment>
                            <comment id="12802000" author="psmith@apache.org" created="Tue, 19 Jan 2010 00:28:22 +0000"  >&lt;p&gt;I don&apos;t think Maven can pull from a local directory, BUT, what would be &apos;wrong&apos; with just, say, &apos;mvn deploy:deploy-file&apos; these 2 to, say, people.apache.org/~psmith/..&lt;/p&gt;

&lt;p&gt;The jars need to come from a repo, there&apos;s no requirement that it be a &apos;flashy&apos; one.. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  &lt;/p&gt;

&lt;p&gt;Now, specifically, why CAN&apos;T the zookeeper final be uploaded to Maven central?  That&apos;s a &apos;released&apos; product from an Apache point of view? (or are you using a Snapshot one, and if so, then Apache Public Snapshots is fine too).&lt;/p&gt;

&lt;p&gt;thrift is in incubation, I know an incubation project can&apos;t publish official releases, but I don&apos;t think that means they can&apos;t publish a snapshot.  I could look into that if you like, but otherwise just hosting these @ people.apache.org..  is an interim measure.&lt;/p&gt;

&lt;p&gt;Once I have the repositories defined in the pom (lunch time today), I&apos;ll write the list, I&apos;d like to get to the point where I would think that anyone could follow my steps to a clean trunk, and it should just build.&lt;/p&gt;

&lt;p&gt;Thanks for everyone&apos;s feedback!&lt;/p&gt;</comment>
                            <comment id="12802019" author="stack" created="Tue, 19 Jan 2010 01:24:14 +0000"  >&lt;p&gt;I&apos;m good with that.  Could host it in my accunt since closer into hbase. &lt;/p&gt;</comment>
                            <comment id="12802039" author="kaykay.unique" created="Tue, 19 Jan 2010 02:09:02 +0000"  >&lt;p&gt;@Paul very good progress. Just to make sure - did you get mvn test work as well ?&lt;/p&gt;</comment>
                            <comment id="12802043" author="psmith@apache.org" created="Tue, 19 Jan 2010 02:24:17 +0000"  >&lt;p&gt;@KayKay, all but 2 pass (see attachment to this issue named &apos;test-reports&apos;, I haven&apos;t looked at them in detail),  see my comment dated 15th Jan starting &apos;Here&apos;s a small zip of the HTML report ...&apos;, it shows the summary.&lt;/p&gt;

&lt;p&gt;I&apos;ll loop back over these failing tests soon. (there&apos;s still the &apos;error&apos; test, which is a test without any tests, a main-method-only &apos;test-harness&apos; that either has to be excluded, deleted, or moved out of test, simple either way).&lt;/p&gt;

&lt;p&gt;I&apos;m just testing the repository definitions in maven by removing my local reference to our Nexus repo.  Oh man, I forgot how slow it is to download everything from US-&amp;gt;Australia(Where I ma).&lt;/p&gt;

&lt;p&gt;our office internet is a bit flakey at the moment too, bummer.&lt;/p&gt;</comment>
                            <comment id="12802074" author="stack" created="Tue, 19 Jan 2010 03:50:11 +0000"  >&lt;p&gt;@Paul Where in Oz?&lt;/p&gt;</comment>
                            <comment id="12802087" author="psmith@apache.org" created="Tue, 19 Jan 2010 04:35:30 +0000"  >&lt;p&gt;@stack Melbourne&lt;/p&gt;</comment>
                            <comment id="12802642" author="psmith@apache.org" created="Wed, 20 Jan 2010 03:36:28 +0000"  >&lt;p&gt;Attached is the first actual patch I deem worthy for someone to try out, and if successful, I will then mail the hbase-dev list to elicit further feedback.&lt;/p&gt;

&lt;p&gt;Please:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;save the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2099&quot; title=&quot;Move build to Maven&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2099&quot;&gt;&lt;del&gt;HBASE-2099&lt;/del&gt;&lt;/a&gt;-7.patch somewhere&lt;/li&gt;
&lt;/ol&gt;


&lt;ol&gt;
	&lt;li&gt;Read the HBase Move Script.txt file, it contains some important info at the top if you are an existing Maven user that has a local Repository Manager configured.  If you don&apos;t, I think it&apos;s (strangely) simpler, but otherwise straightforward.&lt;/li&gt;
&lt;/ol&gt;


&lt;ol&gt;
	&lt;li&gt;Execute the non-commented out patch, svn, and mvn statements on your console in your clean hbase-trunk checkout.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;b&gt;crosses fingers&lt;/b&gt;&lt;/p&gt;</comment>
                            <comment id="12802643" author="psmith@apache.org" created="Wed, 20 Jan 2010 03:37:58 +0000"  >&lt;p&gt;incidently the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2099&quot; title=&quot;Move build to Maven&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2099&quot;&gt;&lt;del&gt;HBASE-2099&lt;/del&gt;&lt;/a&gt;-7.patch and plan attached in the previous attempt WAS intended for use by the ASF (or thrown out and stomped on, whatever gets people excited)&amp;gt;  I had a brain fail there in choosing a tick box, oh my.&lt;/p&gt;</comment>
                            <comment id="12803069" author="stack" created="Wed, 20 Jan 2010 23:59:14 +0000"  >&lt;p&gt;Instructions on how to move to maven are high quality. Thanks Paul.&lt;/p&gt;

&lt;p&gt;I get the following after all is said and done:&lt;/p&gt;

&lt;p&gt;Here is my mvn version:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
pynchon:trunk stack$ ~/bin/mvn/bin/mvn clean &lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; assembly:assembly
[INFO] Scanning &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] 8479
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.ArrayIndexOutOfBoundsException: 8479
        at hidden.org.codehaus.plexus.util.xml.pull.MXParser.parsePI(MXParser.java:2470)
        at hidden.org.codehaus.plexus.util.xml.pull.MXParser.parseEpilog(MXParser.java:1575)
        at hidden.org.codehaus.plexus.util.xml.pull.MXParser.nextImpl(MXParser.java:1405)
        at hidden.org.codehaus.plexus.util.xml.pull.MXParser.next(MXParser.java:1105)
        at org.apache.maven.model.io.xpp3.MavenXpp3Reader.parseModel(MavenXpp3Reader.java:2133)
        at org.apache.maven.model.io.xpp3.MavenXpp3Reader.read(MavenXpp3Reader.java:3912)
        at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1606)
        at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1571)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFileInternal(DefaultMavenProjectBuilder.java:506)
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:200)
        at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:604)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:487)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:560)
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:391)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:272)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: &amp;lt; 1 second
[INFO] Finished at: Wed Jan 20 15:57:42 PST 2010
[INFO] Final Memory: 3M/79M
[INFO] ------------------------------------------------------------------------
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
pynchon:trunk stack$ ~/bin/mvn/bin/mvn -version
Apache Maven 2.2.1 (r801777; 2009-08-06 12:16:01-0700)
Java version: 1.6.0_15
Java home: /&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home
Default locale: en_US, platform encoding: MacRoman
OS name: &lt;span class=&quot;code-quote&quot;&gt;&quot;mac os x&quot;&lt;/span&gt; version: &lt;span class=&quot;code-quote&quot;&gt;&quot;10.6&quot;&lt;/span&gt; arch: &lt;span class=&quot;code-quote&quot;&gt;&quot;x86_64&quot;&lt;/span&gt; Family: &lt;span class=&quot;code-quote&quot;&gt;&quot;mac&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12803091" author="stack" created="Thu, 21 Jan 2010 00:48:36 +0000"  >&lt;p&gt;nm.  pilot error (I&apos;d double applied the patch so xml files were doubled).&lt;/p&gt;

&lt;p&gt;So, I got further.  Had to set MAVEN_OPTS=&quot;-Xmx1024m&quot; else it was OOMEing.&lt;/p&gt;

&lt;p&gt;Build is failing on me because I just updated us to thrift 0.2.0.  I&apos;m putting commons-lang in wrong place.  I added version property up in the top-level pom and then added the commons-lang dependency to core/pom.xml but that doesn&apos;t seem to be enough for the compile of the thrift generated classes.  They fail to compile looking for HashCodeBuilder from commons-lang.  What would you suggest?&lt;/p&gt;

&lt;p&gt;Paul, I think that I could make this work with your sweet instructions, no problem.  Whats missing is the vote on the move to maven.  One thing I was thinking was that we could bring up &quot;move to maven&quot; as a topic at next weeks HUG.  One of us could talk it up for you but for sure you should start the discussion going up on the list.&lt;/p&gt;

&lt;p&gt;Great stuff Paul.&lt;/p&gt;
</comment>
                            <comment id="12803124" author="psmith@apache.org" created="Thu, 21 Jan 2010 01:58:57 +0000"  >&lt;p&gt;ok, well my MAVEN_OPTS is &amp;lt; 1024, but is greater than default, I was using -Xmx512 because our own corporate packaging requires it.&lt;/p&gt;

&lt;p&gt;I&apos;ll note that down in the plan though, I&apos;ll be curious to know where it barfs through lack of memory because HBase build system isn&apos;t too large.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Build is failing on me because I just updated us to thrift 0.2.0. I&apos;m putting commons-lang in wrong place. I added version property up in the top-level pom and then added the commons-lang dependency to core/pom.xml but that doesn&apos;t seem to be enough for the compile of the thrift generated classes. They fail to compile looking for HashCodeBuilder from commons-lang. What would you suggest?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;well that should work, can you send me the top-level pom and core/pom.xml you are using?  where would I get thrift 0.2.0 from?  Is this stuff in trunk already or is it in a private work area?&lt;/p&gt;

&lt;p&gt;I&apos;ll start drafting a note to hbase-dev anyway.&lt;/p&gt;</comment>
                            <comment id="12803160" author="psmith@apache.org" created="Thu, 21 Jan 2010 03:34:05 +0000"  >&lt;p&gt;From a private email from stack which contained the poms, just removing the &apos;&amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&apos; from the commons-lang dependency fixed this problem (at least for me).&lt;/p&gt;</comment>
                            <comment id="12803477" author="stack" created="Thu, 21 Jan 2010 20:32:08 +0000"  >&lt;p&gt;That was it for me.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[INFO] Building tar : /Users/stack/checkouts/hbase/trunk/target/hbase-0.20.2-SNAPSHOT-bin.tar.gz
[INFO] 
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] ------------------------------------------------------------------------
[INFO] HBase ................................................. SUCCESS [1:38.680s]
[INFO] HBase Core ............................................ SUCCESS [1:03.140s]
[INFO] HBase Contrib ......................................... SUCCESS [0.005s]
[INFO] HBase Contrib - Stargate .............................. SUCCESS [37.954s]
[INFO] ------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 3 minutes 23 seconds
[INFO] Finished at: Thu Jan 21 12:12:17 PST 2010
[INFO] Final Memory: 55M/153M
[INFO] ------------------------------------------------------------------------
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The resulting tar ball is pretty dang close.  The lib dir is a bit overpopulated methinks but would have to check.   The resultant jar is named hbase-core:&lt;/p&gt;

&lt;p&gt;-rwxr-xr-x   1 stack  staff   1583331 Jan 21 12:10 hbase-core-0.20.2-SNAPSHOT.jar&lt;/p&gt;

&lt;p&gt;We need to get test jar in there too.&lt;/p&gt;

&lt;p&gt;Hadoop-style is to ship the source all in the one tar ball but maven does bin and src tarballs.  Thats fine by me separating them.&lt;/p&gt;

&lt;p&gt;I ran with tests and all output shows on console.  We can fix that later?&lt;/p&gt;

&lt;p&gt;Stargate seems to be the only contrib.  Is that intentional?  Thats fine if it is.&lt;/p&gt;

&lt;p&gt;Whats under the contrib dir needs work but can do that later.&lt;/p&gt;

&lt;p&gt;I tried to build the site and got this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Missing:
----------
1) org.apache.hadoop.hbase:hbase-core:jar:0.20.2-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command: 
      mvn install:install-file -DgroupId=org.apache.hadoop.hbase -DartifactId=hbase-core -Dversion=0.20.2-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file

  Alternatively, &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; you host your own repository you can deploy the file there: 
      mvn deploy:deploy-file -DgroupId=org.apache.hadoop.hbase -DartifactId=hbase-core -Dversion=0.20.2-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency: 
        1) org.apache.hadoop.hbase:hbase-contrib-stargate:jar:0.20.2-SNAPSHOT
        2) org.apache.hadoop.hbase:hbase-core:jar:0.20.2-SNAPSHOT

----------
1 required artifact is missing.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is looking great Paul.&lt;/p&gt;
</comment>
                            <comment id="12803482" author="kaykay.unique" created="Thu, 21 Jan 2010 20:53:23 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; I&apos;m good with that. Could host it in my accunt since closer into hbase.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Great going - Paul and stack. &lt;/p&gt;

&lt;p&gt;For thrift - &lt;a href=&quot;https://issues.apache.org/jira/browse/THRIFT-363&quot; title=&quot;Maven Deploy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;THRIFT-363&quot;&gt;&lt;del&gt;THRIFT-363&lt;/del&gt;&lt;/a&gt; should have the patch to publish artifacts . &lt;/p&gt;

&lt;p&gt;@stack - can you help give it a try to publish repository to your account. We need to apply the patch in thrift and then &lt;/p&gt;

&lt;p&gt;$ cd lib/java&lt;br/&gt;
$ ant publish &lt;/p&gt;

&lt;p&gt;to publish the artifacts. &lt;/p&gt;
</comment>
                            <comment id="12803556" author="stack" created="Fri, 22 Jan 2010 00:30:07 +0000"  >&lt;p&gt;@Kay Kay You want us to patch thrift 0.2.0 with thrift-363?  Then you want me to set up a mvn repo up on people.apache.org/~stack.&lt;/p&gt;</comment>
                            <comment id="12803558" author="kaykay.unique" created="Fri, 22 Jan 2010 00:38:38 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; You want us to patch thrift 0.2.0 with thrift-363? Then you want me to set up a mvn repo up on people.apache.org/~stack.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Sure. If you have the source code of thrift-0.2.0 - you can apply the patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/THRIFT-363&quot; title=&quot;Maven Deploy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;THRIFT-363&quot;&gt;&lt;del&gt;THRIFT-363&lt;/del&gt;&lt;/a&gt; ( the latest one ) and see if you are able to publish the artifacts. &lt;/p&gt;

&lt;p&gt;Caveat: &lt;/p&gt;


&lt;p&gt;+  &amp;lt;property name=&quot;apache.snapshot.repository&quot; value=&quot;https://repository.apache.org/content/repositories/snapshots&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;This property needs to be overridden / changed to a url that can publish to the home directory (people.apache.org/~username ) . &lt;/p&gt;

&lt;p&gt;Aliter: &lt;br/&gt;
--------&lt;br/&gt;
This patch should install the package in ~/.m2/repository in the local disk  and the installed files can be manually copied (ftp-ed) to the path mentioned above.  &lt;br/&gt;
(We can go down this route , if figuring out the url to publish to people.apache.org/~username is harder ). &lt;/p&gt;
</comment>
                            <comment id="12803560" author="kaykay.unique" created="Fri, 22 Jan 2010 00:42:11 +0000"  >&lt;p&gt;&lt;b&gt;Important&lt;/b&gt;: &lt;a href=&quot;https://issues.apache.org/jira/browse/THRIFT-363&quot; title=&quot;Maven Deploy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;THRIFT-363&quot;&gt;&lt;del&gt;THRIFT-363&lt;/del&gt;&lt;/a&gt; patch contains the version ( in ivy.xml ) to be 0.3.0-yyyyMMdd etc. &lt;/p&gt;

&lt;p&gt;That might need to changed to 0.2.0 as well. &lt;/p&gt;</comment>
                            <comment id="12830432" author="psmith@apache.org" created="Sat, 6 Feb 2010 02:34:15 +0000"  >&lt;p&gt;Latest patch and move script based on latest trunk, just wanted to re-sync since I&apos;ve been out of action with some family health issues (all good now).&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;adjusted to take the new libthrift-0.2.0.jar, that&apos;s been deployed to my &apos;paul special&apos; repository&lt;/li&gt;
	&lt;li&gt;Found missing step to actually &apos;svn add&apos; the newly patched in poms&lt;/li&gt;
	&lt;li&gt;added svn:ignore entries for Maven&apos;s target directory (can&apos;t find a simple way to add a line via &apos;svn propset&apos; non-interactively, probably could do this with a &apos;svn proplist&apos; via awk, and then add a line, but honestly it&apos;s just easier if someone types it in via vi or something.. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Lazy! )&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;the assembly tar ball is &apos;working&apos; although I can&apos;t quite get the sources to sit properly as a jar, they keep unpacking themselves inside the tar ball, may need an email to the maven-user list, it&apos;s not something I&apos;ve done before, definitely solvable, just not obvious right this second.  I&apos;m sure someone will not like the tar ball directory layout, but we can talk.&lt;/p&gt;

&lt;p&gt;Still have the other contrib modules to add, and there&apos;s that one test case that fails for some reason, but inching along..&lt;/p&gt;
</comment>
                            <comment id="12830458" author="stack" created="Sat, 6 Feb 2010 04:40:57 +0000"  >&lt;p&gt;Kick me when you want me to try a new patch of yours Paul&lt;/p&gt;</comment>
                            <comment id="12830501" author="psmith@apache.org" created="Sat, 6 Feb 2010 10:10:31 +0000"  >&lt;p&gt;Just replying to something stack said way back in response to the generated binary:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We need to get test jar in there too.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No problem, just odd, not normally something that is bundled in a binary artifact (I don&apos;t think I&apos;ve every seen that).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The resultant jar is named hbase-core&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ve got the sources bundled as a jar inside the tar ball, and fixed the &apos;hbase-core&apos; - &apos;hbase&apos; jar naming convention.   do wonder if in the longer term it would better to instead of change the &apos;finalName&apos; property in the pom to bypass the artifictId, instead rename the artifactId to just be &apos;hbase&apos; (so groupId:artifactId being org.apache.hadoop.hbase:hbase).  That might make things overal simpler ?&lt;/p&gt;

&lt;p&gt;I generated the ant/ivy generated binary with the latest trunk for comparison, oddly it currently dosen&apos;t include sources, or test jars.  Maybe that&apos;s a fallout of the ivy transition?  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The lib dir is a bit overpopulated methinks but would have to check&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, compared with the one generated by ivy, it&apos;s a bit.. thicker.  Is zookeeper all we need in the binary?  Easy to do, just odd that with the declared dependencies the transitive ones are coming in too.  You guys should know from experience what exactly is needed to run this, so I&apos;m up for suggestions, I&apos;ll try to mimic the Ivy-generated format for now since that should be what we&apos;re tracking against, it&apos;s just that if I look at my local hbase 0.20.1 binary install I grabbed weeks ago for mucking around with there&apos;s 24 jars and 2 directories in the lib directory, and that&apos;s way more than what is spitting out under ivy right now?&lt;/p&gt;

&lt;p&gt;I&apos;m going to package up the rest of the contrib projects next, that should be straight forward.&lt;/p&gt;

</comment>
                            <comment id="12830507" author="psmith@apache.org" created="Sat, 6 Feb 2010 11:18:15 +0000"  >&lt;p&gt;latest patch and updated Plan document:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;sources for hbase-core now in properly, now minus the &apos;-core&apos; part (although see previous comment about a probable better way to achieve this)&lt;/li&gt;
	&lt;li&gt;adds transactional and ec2 contrib areas to the binary.&lt;/li&gt;
	&lt;li&gt;stargate changed over to a WAR.  Looks like this module is trying to be 2 things (both a jar and war file).  Would likely prefer to make this a multi-module project so as to produce both the jar, and the war, it&apos;s just much simpler that way (the duopoly of it is a bit odd otherwise).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;stack (or whomever) this patch is worth a kick of the tires, but if it doesn&apos;t work, the generated tar ball this is creating on my local workspace can be gotten here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://people.apache.org/~psmith/hbase/hbase-0.20.2-SNAPSHOT-bin.tar.gz&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~psmith/hbase/hbase-0.20.2-SNAPSHOT-bin.tar.gz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note, in the new  plan, there&apos;s a set of steps that attempt to set the svn:ignore.  You&apos;ll need to add the &apos;target&apos; directory into svn:ignore one by one, if someone knows a smart &amp;amp; fast way to do this, let me know.&lt;/p&gt;</comment>
                            <comment id="12830571" author="stack" created="Sat, 6 Feb 2010 21:25:39 +0000"  >&lt;p&gt;I like the way you have sources bundled up a jar but I think needs a bit more work.  When I undo it, sources are not buildable (fellas like being able to do this).  There is no build.xml.  Test source should probably be there too.&lt;/p&gt;

&lt;p&gt;Contribs look good but need doc carried over?&lt;/p&gt;

&lt;p&gt;In general, I wouldn&apos;t sweat the tar ball too much.   My guess is that its layout may change some soon enough.  We can file issue to address after maven goes in.&lt;/p&gt;

&lt;p&gt;i was able to startup the hbase instance.  Thats sweet.&lt;/p&gt;

&lt;p&gt;.bq I generated the ant/ivy generated binary with the latest trunk for comparison, oddly it currently dosen&apos;t include sources, or test jars. Maybe that&apos;s a fallout of the ivy transition?&lt;/p&gt;

&lt;p&gt;Yes.  I believe so.  Ivy tarball needs a bit of attention.&lt;/p&gt;

&lt;p&gt;I wouldn&apos;t worry about the overpopulated lib dir.  We can fix that later.&lt;/p&gt;</comment>
                            <comment id="12830575" author="stack" created="Sat, 6 Feb 2010 21:40:25 +0000"  >&lt;p&gt;@ Kay Kay, regards the below comment over in the infrastructure issue &amp;#8211; since closed and I&apos;m not sure what it means when its been closed &amp;#8211; on group and artifactid....&lt;/p&gt;

&lt;p&gt;&quot;Stack -&lt;br/&gt;
  Would it be useful to have the groupId as -    org.apache.hadoop.hbase   and then publish artifacts as hbase-core / hbase-client  etc.  Let me know your thoughts on the same.&quot;&lt;/p&gt;

&lt;p&gt;... you think the above better than my suggestion of groupid org.apache.hadoop and our artifactid of hbase?&lt;/p&gt;

&lt;p&gt;I suppose we&apos;ll want to publish other than hbase.jar up to maven.  There will be hbase-stargate.war and hbase-transacation.jar etc.  hbase.jar should become hbase-core then as you suggest (and as Paul had it originally up in the pom above before I asked him to change it).&lt;/p&gt;

&lt;p&gt;What are the pros/cons you see to using groupid of o.a.h.h rather than o.a.h?&lt;/p&gt;

&lt;p&gt;Related, its a good ways of I think but there is talk of a few of the hadoop projects moving up to be top-level apache projects.  HBase is probably a good candidate so our default package would become o.a.hbase at some stage in the future.  This would seem to argue in favor of your suggestion for a groupid of o.a.h.h Kay Kay?&lt;/p&gt;</comment>
                            <comment id="12830591" author="kaykay.unique" created="Sat, 6 Feb 2010 23:39:46 +0000"  >&lt;blockquote&gt;
&lt;p&gt;.bq I generated the ant/ivy generated binary with the latest trunk for comparison, oddly it currently dosen&apos;t include sources, or test jars. Maybe that&apos;s a fallout of the ivy transition?&lt;/p&gt;

&lt;p&gt;Yes. I believe so. Ivy tarball needs a bit of attention.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Paul / stack - Yes , the &apos;tar&apos; target had an issue after ivy transition, about how we want to pack the lib in the final distribution.  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2128&quot; title=&quot;ant tar build broken since switch to Ivy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2128&quot;&gt;&lt;del&gt;HBASE-2128&lt;/del&gt;&lt;/a&gt; tracks it.  I believe we did not have a consensus then about how to pack independent jars of core and contrib into the lib directory. &lt;/p&gt;

&lt;p&gt;The final that I submitted puts together everything under ./lib directory for a release.&lt;/p&gt;




</comment>
                            <comment id="12830593" author="kaykay.unique" created="Sat, 6 Feb 2010 23:44:09 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  ... you think the above better than my suggestion of groupid org.apache.hadoop and our artifactid of hbase?&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Related, its a good ways of I think but there is talk of a few of the hadoop projects moving up to be top-level apache projects. HBase is probably a good candidate so our default package would become o.a.hbase at some stage in the future. This would seem to argue in favor of your suggestion for a groupid of o.a.h.h Kay Kay?&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;I guess - the way it works is , a project owns a groupId and can publish any number of artifacts as it sees fit ( and versions under the same). &lt;/p&gt;

&lt;p&gt;Since o.a.h is essentially owned by the hadoop project and I see HBase as an independent project , as you had mentioned yourself, hence thought it might be useful for us to reserve a groupId unique to HBase.&lt;/p&gt;

&lt;p&gt;say - o.a.h.hbase   or o.a.hbase , but wanted to make the distinction between the groupId chosen by HBase and hadoop projects ( mapreduce/ hdfs/ common - etc.), all of which use o.a.h . &lt;/p&gt;

&lt;p&gt;This will give us the flexibility to publish artifacts as we see fit , under it without disturbing the groupId owned by other teams. &lt;/p&gt;


&lt;p&gt;As far as the jira being closed - I believe it was closed saying o.a.hadoop , already exists ( as requested initially).  For the sake of independence of the project, it might make sense to reopen with a different groupId like - o.a.h.hbase , or o.a.hbase , better. &lt;/p&gt;

&lt;p&gt;And then we can fit that groupId in this pom.xml . &lt;/p&gt;</comment>
                            <comment id="12830606" author="psmith@apache.org" created="Sun, 7 Feb 2010 01:48:49 +0000"  >&lt;p&gt;I&apos;d &apos;vote&apos; in favour of o.a.hbase as a groupId.    If there is plans for HBase to become a top-level project (and it makes sense), it probably should have it&apos;s own identity independent of Hadoop.  &lt;/p&gt;

&lt;p&gt;You can then still choose to have an artifactid of hbase, I think that&apos;s fine for now.  Really it&apos;s about an artifacts identity.  At some point though you will probably (at least I hope you do) consider refactoring out independent layers of Hbase.  I think a &apos;hbase-client&apos; jar for example is a great idea for those apps that are just connecting scanner/update clients.  Choosing &apos;hbase&apos; as an artifactId now doesn&apos;t preclude that down the track, I just think it would be better to do it now, because later on if you want to do this right, you(we) should consider a backwards compatibility layer.&lt;/p&gt;

&lt;p&gt;For an example of how to &apos;migrate&apos; groupId/artifactId definitions, see &lt;a href=&quot;http://maven.apache.org/pom.html#Relocation&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://maven.apache.org/pom.html#Relocation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But it&apos;s probably nice to get it right first time.  We over at log4j had a bit of a newbie-maven-fail moment in log4j 1.2.15 with the jms/jmx dependencies, because they were not declared as &apos;optional&apos; upstream, so people have been constantly adding the exclusions (hbase itself is a victim here.. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )  &lt;/p&gt;
</comment>
                            <comment id="12830608" author="psmith@apache.org" created="Sun, 7 Feb 2010 02:01:24 +0000"  >&lt;p&gt;back to some things stack said in another post:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I like the way you have sources bundled up a jar but I think needs a bit more work. When I undo it, sources are not buildable (fellas like being able to do this). There is no build.xml. Test source should probably be there too.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We may get a bit philosophical here, but my own personal view is that a binary download of a release of a project shouldn&apos;t need all things needed to build the product - that&apos;s what SVN/Git is for.  The sources and javadocs are there as reference material for the user of the &lt;em&gt;binary&lt;/em&gt;.  Even if there was a standalone, in the majority of cases they&apos;re there for IDE&apos;s to have it added as source material for the artifact for the users project.  I can easily change this to have the sources unpacked, in fact the default is to have it unpacked, maybe it&apos;s clearer and more generally &apos;usable&apos; for the new user to see the sources unpacked just waiting for perusal.&lt;/p&gt;

&lt;p&gt;I would propose we produce 2 tar balls as is mostly standard, and Maven Assembly plugin has a definition right out of the box for a sources-like tar bal:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://maven.apache.org/plugins/maven-assembly-plugin/descriptor-refs.html#src&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://maven.apache.org/plugins/maven-assembly-plugin/descriptor-refs.html#src&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(look at both the &apos;sources&apos; descriptor and the one below it &apos;project&apos;.  stack may be thinking of &apos;project&apos;.  I&apos;ll add both so you can see.&lt;/p&gt;
</comment>
                            <comment id="12830609" author="kaykay.unique" created="Sun, 7 Feb 2010 02:08:06 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; We may get a bit philosophical here, but my own personal view is that a binary download of a release of a project shouldn&apos;t need all things needed to build the product - that&apos;s what SVN/Git is for. The sources and javadocs are there as reference material for the user of the binary. Even if there was a standalone, in the majority of cases they&apos;re there for IDE&apos;s to have it added as source material for the artifact for the users project. I can easily change this to have the sources unpacked, in fact the default is to have it unpacked, maybe it&apos;s clearer and more generally &apos;usable&apos; for the new user to see the sources unpacked just waiting for perusal.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;But - when we publish an artifact , we can always add sources and javadocs as separate artifacts (for the same version) - right ??  So - binary would just have .class / .jar files as a library to link against, by other apps as needed ? &lt;/p&gt;</comment>
                            <comment id="12830611" author="kaykay.unique" created="Sun, 7 Feb 2010 02:09:40 +0000"  >&lt;p&gt;Paul - Can you also help double check the pom.xml-s with this - &lt;a href=&quot;http://nexus.sonatype.org/oss-repository-hosting.html#4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://nexus.sonatype.org/oss-repository-hosting.html#4&lt;/a&gt; , that all necessary elements are present. &lt;/p&gt;

&lt;p&gt;For those - that does not make sense , may be you can add a TODO and bring up as appropriate. This would be useful to publish artifacts once this is in. &lt;/p&gt;</comment>
                            <comment id="12830613" author="psmith@apache.org" created="Sun, 7 Feb 2010 02:26:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;But - when we publish an artifact , we can always add sources and javadocs as separate artifacts (for the same version) - right ?? So - binary would just have .class / .jar files as a library to link against, by other apps as needed ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ok, I see where we may be on different wave lengths here, my apologize.  the short answer, is maven will absolutely definitely have a -sources and -javadoc artifacts produced naturally and pushed to a Maven repo as part of the &apos;deploy&apos; phase.  That&apos;s done automatically without any configuration.&lt;/p&gt;

&lt;p&gt;However that common automatic case generally covers purely artifact pushing to, say, Maven central (or more formally a spot which is automatically ingested into central).  Most projects like to have a large tar ball with a collection of artifacts put together for the end user (who is perhaps either looking to learn Hbase, or doesn&apos;t use Maven/Ivy).  This latter case is what the &apos;tar ball&apos; I&apos;ve produced via the Maven assembly plugin does. The former case is done automatically during the &apos;deploy&apos; phase.&lt;/p&gt;

&lt;p&gt;By default, the -sources and -javadoc are not generated during &apos;package&apos; phase, but it is easily configured to do so if that&apos;s what we wish, in  fact I&apos;ve already configured -sources.jar to always be produced during &apos;package&apos; because I need that as part of the assembly in the end so that it can appear in the tar ball.&lt;/p&gt;

&lt;p&gt;In the maven world, the binary, the sources, and the javadoc are all separate artifacts sharing the same groupId:artifactId:version co-ordinates.  the latter 2 just get given a &apos;classifier&apos; (with the main jar given a &apos;blank&apos; classifier, implying the main artifact).&lt;/p&gt;

&lt;p&gt;All of this becomes second nature after a while with Maven, and I forget sometimes! sorry!&lt;/p&gt;
</comment>
                            <comment id="12830764" author="psmith@apache.org" created="Sun, 7 Feb 2010 20:32:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;Paul - Can you also help double check the pom.xml-s with this - &lt;a href=&quot;http://nexus.sonatype.org/oss-repository-hosting.html#4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://nexus.sonatype.org/oss-repository-hosting.html#4&lt;/a&gt; , that all necessary elements are present. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, I&apos;ve gone and added the missing ones which were: Licenses, developers (I just added stack in as an example, I&apos;ll need more details, or you can fill it in as a template later), URL, and Description. I&apos;ve relocated the SCM definition I had in hbase-core to be in the top-level pom, I think that makes more sense there. &lt;/p&gt;

&lt;p&gt;but here&apos;s the kicker: &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Make sure your POM does not contain repositories or pluginRepositories element. Central repository must be self-contained, so all your dependencies must be available in Central. You need to make sure your project can be built without extra repositories or pluginRepositories. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;unless Zookeeper and Thrift are put somewhere standard soon, you won&apos;t pass this one. it&apos;s unclear what the use of googlecode, java.net and codehaus repositories means for this as well. Seems odd to eliminate us based on that.. ? Could someone in a more sensible timezone chat with some of the sonatype guys or their IRC channel about this? there must be a bucket load of Apache projects that wouldn&apos;t qualify there.&lt;/p&gt;</comment>
                            <comment id="12830776" author="kaykay.unique" created="Sun, 7 Feb 2010 21:45:41 +0000"  >&lt;blockquote&gt;
&lt;p&gt;. I&apos;ve relocated the SCM definition I had in hbase-core&lt;/p&gt;&lt;/blockquote&gt; 

&lt;p&gt;Great. I believe the important distinction is to have connection and developerConnection nodes available under scm , since that would be used by the maven-release plugin. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;unless Zookeeper and Thrift are put somewhere standard soon, you won&apos;t pass this one. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes. As far as zookeeper is concerned - it will be available soon in a maven snapshot repository with the next release. As far as thrift is concerned - we can publish ourselves once a groupId is identified for hbase. &lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;it&apos;s unclear what the use of googlecode, java.net and codehaus repositories means for this as well. Seems odd to eliminate us based on that.. ? Could someone in a more sensible timezone chat with some of the sonatype guys or their IRC channel about this? there must be a bucket load of Apache projects that wouldn&apos;t qualify there.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I do not think this is a major showstopper because those original instructions that I had pasted are for artifacts to be uploaded to central maven repository , but when it comes to apache snapshot maven repository ( as it applies for hbase), the criteria are more relaxed. So - that should not be a showstopper I guess. I will confirm this with the sonatype people on this as well. &lt;/p&gt;</comment>
                            <comment id="12830778" author="psmith@apache.org" created="Sun, 7 Feb 2010 21:54:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;Yes. As far as zookeeper is concerned - it will be available soon in a maven snapshot repository with the next release. As far as thrift is concerned - we can publish ourselves once a groupId is identified for hbase.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The Maven Release plugin is absolutely brutally anal about snapshot dependencies though.  It will not let you &apos;mvn release&apos; a project such as HBase if that project depends on snapshot artifacts.  There&apos;s good reasons for it, but there&apos;s no flexibility built in.  I&apos;m hoping that Zookeeper can be deployed to a non-snapshot status (which is sort of by definition maven central..)&lt;/p&gt;

&lt;p&gt;I&apos;m sure that since Zookeeper is pushing it&apos;s own releases, it won&apos;t take too much effort to get Zookeeper 3.2.2 in Maven central.&lt;/p&gt;

&lt;p&gt;Thrift is still the sticking point, the fact it&apos;s an incubation project makes life difficult.  That doesn&apos;t mean you can&apos;t deploy a non-snapshot version of the artifact to a known repository (even Stack&apos;s own one), you just won&apos;t be able to take advantage of the Nexus staging and deployment into central that Sonatype is offering.&lt;/p&gt;</comment>
                            <comment id="12831189" author="kaykay.unique" created="Mon, 8 Feb 2010 23:17:51 +0000"  >&lt;p&gt;Group Id finalized:   org.apache.hbase ( &lt;a href=&quot;https://issues.apache.org/jira/browse/INFRA-2461&quot; title=&quot;Nexus Access for Apache Hadoop Hbase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;INFRA-2461&quot;&gt;&lt;del&gt;INFRA-2461&lt;/del&gt;&lt;/a&gt; for more details). &lt;/p&gt;

&lt;p&gt;Paul - &lt;br/&gt;
  can you help incorporate this as well. &lt;/p&gt;</comment>
                            <comment id="12833132" author="kaykay.unique" created="Fri, 12 Feb 2010 19:52:14 +0000"  >&lt;p&gt;When publishing artifacts - it would be nice to publish a client-side only artifact to link against , as specified by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2170&quot; title=&quot;hbase lightweight client library as a distribution &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2170&quot;&gt;&lt;del&gt;HBASE-2170&lt;/del&gt;&lt;/a&gt; , to minimize the volume of dependencies coming in that might be potentially unnecessary for a Put/Scan scenarion. &lt;/p&gt;</comment>
                            <comment id="12833500" author="psmith@apache.org" created="Sun, 14 Feb 2010 03:27:30 +0000"  >&lt;p&gt;latest patch and plan.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Added developers section in the top-level pom, taken from the credits.html page from the current HBase site.  This will be output during a &apos;mvn site&apos; (copy for review to be shown in another post, may have to be tomorrow)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Relocated the webapps directory into core/src/resources - looks like this directory is needed inside the jar, as some unit tests wouldn&apos;t pass without access to these directories. realigned the jspc compilation so that it can pick up these files in this directory now too.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Added a specific exclude for running unit tests because there&apos;s a class in there that isn&apos;t an actual JUnit test (it&apos;s SoftValueSortedMapTest.java if you&apos;re intrigued).  Be nicer to either remove this class or move it as a &apos;test harness&apos; in core/src/main/java rather than a test, would keep the configuration simpler.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Plan document now includes specifically marking &apos;target&apos; as an excluded directory under svn:ignore.&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12833501" author="psmith@apache.org" created="Sun, 14 Feb 2010 03:33:28 +0000"  >&lt;p&gt;oh, and all the groupId&apos;s have been changed to org.apache.hbase as requested a little while ago.&lt;/p&gt;</comment>
                            <comment id="12835613" author="stack" created="Fri, 19 Feb 2010 06:47:24 +0000"  >&lt;p&gt;Paul, any chance of you taking a look at this mvn.out file?&lt;/p&gt;

&lt;p&gt;Its doing a bunch of the right things, fast, thats great... but see the WARNINGs on the end about file length.  E.g:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNING&amp;#93;&lt;/span&gt; Entry: hbase-0.20.2-SNAPSHOT/core/src/test/java/org/apache/hadoop/hbase/regionserver/TestWildcardColumnTracker.java longer than 100 characters.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNING&amp;#93;&lt;/span&gt; Entry: hbase-0.20.2-SNAPSHOT/core/src/test/java/org/apache/hadoop/hbase/regionserver/transactional/DisabledTestHLogRecovery.java longer than 100 characters.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNING&amp;#93;&lt;/span&gt; Entry: hbase-0.20.2-SNAPSHOT/core/src/test/java/org/apache/hadoop/hbase/regionserver/transactional/DisabledTestTransactionalHLogManager.java longer than 100 characters.&lt;/p&gt;

&lt;p&gt;This is macosx.&lt;/p&gt;

&lt;p&gt;And it seems like the resultant tar.gz is missing stuff when all is done, no jars make it into the bundle:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
pynchon-2:x stack$ ls -la
total 128
drwxr-xr-x   9 stack  staff    306 Feb 18 22:46 .
drwxr-xr-x  10 stack  staff    340 Feb 18 22:46 ..
-rw-r--r--   1 stack  staff  11358 Jan 21 16:01 LICENSE.txt
-rw-r--r--   1 stack  staff    293 Jan 21 16:01 NOTICE.txt
-rw-r--r--   1 stack  staff     43 Jan 21 16:01 README.txt
drwxr-xr-x  19 stack  staff    646 Feb 18 13:51 bin
drwxr-xr-x   8 stack  staff    272 Feb 18 21:59 conf
drwxr-xr-x   4 stack  staff    136 Feb 18 22:46 contrib
-rw-r--r--   1 stack  staff  43090 Feb 18 22:38 hbase-0.20.2-SNAPSHOT-bin.tar.gz
pynchon-2:x stack$ find . -name *jar
pynchon-2:x stack$ 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;BTW, your instructions are amazing Paul.  Even a gorilla like myself is able to follow the bouncing ball.&lt;/p&gt;
</comment>
                            <comment id="12835669" author="psmith@apache.org" created="Fri, 19 Feb 2010 09:44:52 +0000"  >&lt;p&gt;&lt;b&gt;FACE PALM&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;oh crap.  I forget the appassembler descriptor change when we changed from org.apache.hadoop.hbase -&amp;gt; org.apache.hbase.&lt;/p&gt;

&lt;p&gt;oh so trivial change, new patch coming.&lt;/p&gt;

&lt;p&gt;Man, I&apos;m so sorry, I feel like a complete tool.&lt;/p&gt;</comment>
                            <comment id="12835670" author="psmith@apache.org" created="Fri, 19 Feb 2010 09:51:49 +0000"  >&lt;p&gt;Latest patch.  only difference between v13 and this one is the src/assembly/bin.xml file which now contains the correct groupIds that we all agreed on.&lt;/p&gt;

&lt;p&gt;Full Disclosure: 2 nips of Talisker (Isle of Skye) were utilised in the development of this patch.&lt;/p&gt;</comment>
                            <comment id="12835883" author="stack" created="Fri, 19 Feb 2010 18:47:58 +0000"  >&lt;p&gt;Paul, so, now jars are showing up in the tarball. Good stuff.  The Talisker must have done the job.&lt;/p&gt;

&lt;p&gt;What about these warnings....&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[WARNING] NOTE: Currently, inclusion of module dependencies may produce unpredictable results &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; a version conflict occurs.
[WARNING] NOTE: Currently, inclusion of module dependencies may produce unpredictable results &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; a version conflict occurs.
[WARNING] NOTE: Currently, inclusion of module dependencies may produce unpredictable results &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; a version conflict occurs.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... and&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[INFO] contrib/transactional/hbase-contrib-transactional-0.20.2-SNAPSHOT.jar already added, skipping
[INFO] contrib/transactional/hbase-contrib-transactional-0.20.2-SNAPSHOT.jar already added, skipping
[INFO] contrib/transactional/hbase-contrib-transactional-0.20.2-SNAPSHOT.jar already added, skipping
[INFO] contrib/transactional/hbase-contrib-transactional-0.20.2-SNAPSHOT.jar already added, skipping
[INFO] contrib/transactional/hbase-contrib-transactional-0.20.2-SNAPSHOT.jar already added, skipping
[INFO] contrib/transactional/hbase-contrib-transactional-0.20.2-SNAPSHOT.jar already added, skipping
[INFO] contrib/transactional/hbase-contrib-transactional-0.20.2-SNAPSHOT.jar already added, skipping
[INFO] contrib/transactional/hbase-contrib-transactional-0.20.2-SNAPSHOT.jar already added, 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... and&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[WARNING] Entry: hbase-0.20.2-SNAPSHOT/core/src/test/java/org/apache/hadoop/hbase/regionserver/TestDeleteCompare.java longer than 100 characters.
[WARNING] Entry: hbase-0.20.2-SNAPSHOT/core/src/test/java/org/apache/hadoop/hbase/regionserver/TestExplicitColumnTracker.java longer than 100 characters.
[WARNING] Entry: hbase-0.20.2-SNAPSHOT/core/src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java longer than 100 characters.
[WARNING] Entry: hbase-0.20.2-SNAPSHOT/core/src/test/java/org/apache/hadoop/hbase/regionserver/TestGetDeleteTracker.java longer than 100 characters.
[WARNING] Entry: hbase-0.20.2-SNAPSHOT/core/src/test/java/org/apache/hadoop/hbase/regionserver/TestKeyValueScanFixture.java longer than 100 characters.
[WARNING] Entry: hbase-0.20.2-SNAPSHOT/core/src/test/java/org/apache/hadoop/hbase/regionserver/TestKeyValueSkipListSet.java longer than 100 characters.
[WARNING] Entry: hbase-0.20.2-SNAPSHOT/core/src/test/java/org/apache/hadoop/hbase/regionserver/TestMinorCompactingStoreScanner.java longer than 100 characters.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Otherwise, it runs nice and prompt.&lt;/p&gt;

&lt;p&gt;Oh, and how do I build the package?  I can&apos;t.  I have to go back to my mvn checkout, is that right?&lt;/p&gt;</comment>
                            <comment id="12836024" author="dan.washusen" created="Fri, 19 Feb 2010 22:50:59 +0000"  >&lt;p&gt;Can&apos;t wait! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Few question/comments;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;any particular reason you specify versions of some plugins (e.g. maven-source-plugin=2.1.1)?&lt;/li&gt;
	&lt;li&gt;maybe define the maven-compiler-plugin tweaks in the pluginManagemet section of the pom.  That way sub modules can take advantage...&lt;/li&gt;
	&lt;li&gt;there is a mention of the &quot;Aconex Snapshots&quot; under distributionManagement...?&lt;/li&gt;
	&lt;li&gt;could some of the dependencies mentioned in the core pom be optional (e.g. hadoop-mapred, thrift).  So third parties depending on hbase core don&apos;t have to explicitly exclude stuff...&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12836136" author="psmith@apache.org" created="Sat, 20 Feb 2010 08:26:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNING&amp;#93;&lt;/span&gt; NOTE: Currently, inclusion of module dependencies may produce unpredictable results if a version conflict occurs.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, I had read up about that exact warning earlier in the week. It is related to the fact that one has to have the &apos;assembly:assembly&apos; text during a full distribution, that is, to get the full tar ball, you have to invoke the assembly plugin&apos;s goal.&lt;/p&gt;

&lt;p&gt;This is because I have configured this assembly in the top-level pom.  Apparently this is &apos;not the preferred way&apos;. Instead, a new sub-module should be created to host this.  Basically shift the definition into a, say, &apos;dist&apos; sub-module. &lt;/p&gt;

&lt;p&gt;I&apos;d like to experiment with this after it&apos;s in trunk and I can use git more effectively to publish potential changes for review (if Ryan is ok with me using his github repo, otherwise I could create my own I guess)  I think my patch contains &apos;just enough&apos; to get started, but not enough for an official release (a few other reasons it&apos;s not ready yet anyway).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;INFO] contrib/transactional/hbase-contrib-transactional-0.20.2-SNAPSHOT.jar already added, skipping&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;to be honest, no idea.  Seems benign though. maybe an errant INFO level log message (perhaps should be DEBUG..).  Can follow up with maven-user list if it&apos;s annoying.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNING&amp;#93;&lt;/span&gt; Entry: hbase-0.20.2-SNAPSHOT/core/src/test/java/org/apache/hadoop/hbase/regionserver/TestDeleteCompare.java longer than 100 characters.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The &apos;official&apos; tar spec does not support filenames &amp;gt; 100 chars.  In practice, the tar ball works fine.  I&apos;ve seen this plenty of times during our own Aconex builds and not a single server has yet failed to unpack it.  It&apos;s perhaps targetted to warn for &lt;em&gt;really&lt;/em&gt; old or esoteric Unix distributions.  &lt;/p&gt;

&lt;p&gt;May even be able to turn it off via config, not sure yet.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Oh, and how do I build the package? I can&apos;t. I have to go back to my mvn checkout, is that right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;i have no idea what you mean here...  sorry.&lt;/p&gt;
</comment>
                            <comment id="12836137" author="psmith@apache.org" created="Sat, 20 Feb 2010 08:43:30 +0000"  >&lt;p&gt;in response to Dan&apos;s comments:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;any particular reason you specify versions of some plugins (e.g. maven-source-plugin=2.1.1)?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ummm.... slackness!  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  The proper (ok &apos;anal&apos;) Maven way is to have every single plugin defined in a pom to have an explicit version definition.   This is so builds are completely reproducible.  &lt;br/&gt;
By not specifying a version, during the build the most recent version is used, so it is possible that right at the moment of producing a full ASF distribution a plugin is updated and perhaps you get hit by a bug in that plugin.&lt;/p&gt;

&lt;p&gt;So I would recommend we explicitly put in a version for all plugins, I think I have a TODO in there already, but it was always my intent, even if it&apos;s just locking in the current set of plugin versions.  The ones that currently have versions specified is probably a consequence of the fact that their example docs have easily copy/pastable snippets containing version info... :-$&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;maybe define the maven-compiler-plugin tweaks in the pluginManagemet section of the pom. That way sub modules can take advantage...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I must lookup the usage of the pluginManagement section, it&apos;s not something I&apos;m intimate with, from experience, the sub-modules already inherit from the top-level pom&apos;s build plugin definition (certainly seems to work like that for our own corporate pom).  &lt;/p&gt;

&lt;p&gt;Will investigate.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;there is a mention of the &quot;Aconex Snapshots&quot; under distributionManagement...?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Copy/paste #fail.  ahem. thanks...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;could some of the dependencies mentioned in the core pom be optional (e.g. hadoop-mapred, thrift). So third parties depending on hbase core don&apos;t have to explicitly exclude stuff...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yes, that was definitely on my list to investigate, but I don&apos;t think I have a TODO in there yet.  I initially targeted by just matching the Ivy dependencies (as much as I could, since I&apos;m not familiar with the Ivy syntax).  I would definitely suggest we review the output of the&lt;br/&gt;
&apos;mvn dependency:tree&apos; output and go through each jar and say &quot;oh, no, we don&apos;t &lt;em&gt;neeeeed&lt;/em&gt; that one, lets mark that as optional&apos;.&lt;/p&gt;

&lt;p&gt;I definitely want to do that before the next HBase release if it&apos;s done by Maven, we totally didn&apos;t do this when log4j switched to Maven during log4j 1.2.15 and a gazilion projects have been paying the price ever since. (I am definitely partly to blame there for sure).&lt;/p&gt;
</comment>
                            <comment id="12836244" author="stack" created="Sat, 20 Feb 2010 19:58:40 +0000"  >&lt;p&gt;@Paul NM on the above.  The warnings are a little disturbing but we can deal w/ them going forward.  I&apos;ll commit v14 of the patch?&lt;/p&gt;</comment>
                            <comment id="12836256" author="psmith@apache.org" created="Sat, 20 Feb 2010 20:29:27 +0000"  >&lt;p&gt;If you are happy the resultant layout works fine in your own IDE for you &amp;amp; others then yeah, v14 should be fine.&lt;/p&gt;</comment>
                            <comment id="12839646" author="steve_l" created="Mon, 1 Mar 2010 11:17:46 +0000"  >&lt;p&gt;As part of the Ant team you can probably expect me to be -1 to Maven, but I take the view that &quot;whatever suits your needs are best&quot;&lt;/p&gt;

&lt;p&gt;One thing you really, really have to look out for in Maven is getting the POMs right for downstream use. Bad metadata is a problem in both Ivy and M2 builds:&lt;br/&gt;
&lt;a href=&quot;http://www.1060.org/blogxter/entry?publicid=9EE3794599F42C4E1D9BF2F2FE655180&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.1060.org/blogxter/entry?publicid=9EE3794599F42C4E1D9BF2F2FE655180&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The problem is that to get your build to work you just add on as many JARs as you need, but downstream things are different. Audit the POMs, they are now release artifacts of their own!&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Make sure that builds under hudson work with the latest version of everything being picked up. Don&apos;t be afraid to keep some build.xml files around to clean up all the local cache directories, which are effectively shared state across projects.&lt;/li&gt;
	&lt;li&gt;Make sure that you can get functional testing to work. Maven is fairly biased towards &quot;classic&quot; webapp dev, not more complex workflows of requesting real/virtual machines from the infrastructure, deploying and testing on them. Ant isn&apos;t biased towards either, leaving you to do everything yourself.&lt;/li&gt;
	&lt;li&gt;Don&apos;t have the build something that only one person can understand/maintain. They will become a SPOF.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;On the topic of tar, the Ant docs explain the issue, the main one being that &amp;gt;100 byte filenames are handled differently by different tools. you see, we in the Ant team do care about such problems, which are most likely to occur on non-linux Unix platforms:&lt;br/&gt;
&lt;a href=&quot;http://ant.apache.org/manual/CoreTasks/tar.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ant.apache.org/manual/CoreTasks/tar.html&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12839714" author="lars_francke" created="Mon, 1 Mar 2010 15:35:08 +0000"  >&lt;p&gt;Just as a heads up: HBase trunk has already moved to Maven as of a few days ago. This issue can be closed. We have and had a few follow up issues that deal with the problems that occurred: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2267&quot; title=&quot;More improvements to the Maven build&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2267&quot;&gt;&lt;del&gt;HBASE-2267&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2264&quot; title=&quot;Adjust the contrib apps to the Maven project layout&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2264&quot;&gt;&lt;del&gt;HBASE-2264&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2254&quot; title=&quot;Improvements to the Maven POMs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2254&quot;&gt;&lt;del&gt;HBASE-2254&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2250&quot; title=&quot;typo in the maven pom&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2250&quot;&gt;&lt;del&gt;HBASE-2250&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The blog post you cite is very old and while some of the points still apply a lot of it has been fixed or gotten better since. Bad metadata isn&apos;t a problem exclusive to Ivy and Maven though but for Ant too. Even more so as a lot of projects don&apos;t clearly specify their dependencies at all. We just can do our best to be good &quot;citizens&quot; and provide good project descriptions - in this case Maven POMs.&lt;/p&gt;

&lt;p&gt;1. The build currently doesn&apos;t work under Hudson as a result from the switch from Ivy to Maven but I expect this&apos;ll be sorted out in the coming days/weeks. What local cache directories do you mean that need cleaning up? I don&apos;t think we currently do any cleaning up after the build so any specifics would be helpful so we can change that.&lt;br/&gt;
2. I&apos;m no quite sure I can follow you there but there are Maven plugins help in the test process in various ways. What exactly are you missing there for HBase? If everything else fails Maven can run Ant tasks fairly easily. I believe we do this as part of our build process now (JspC).&lt;br/&gt;
3. Well...that&apos;s obviously true independent of the build system used (Ivy, Maven, Ant, Makefiles, ...)&lt;/p&gt;

&lt;p&gt;tar: Maven handles this the same way: &lt;a href=&quot;http://maven.apache.org/plugins/maven-assembly-plugin/assembly-mojo.html#tarLongFileMode&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://maven.apache.org/plugins/maven-assembly-plugin/assembly-mojo.html#tarLongFileMode&lt;/a&gt; - in the newest patch I chose the &quot;gnu&quot; mode.&lt;/p&gt;</comment>
                            <comment id="12840111" author="steve_l" created="Tue, 2 Mar 2010 11:04:33 +0000"  >&lt;p&gt;No, the metadata is often getting worse. Old stuff stays the same, and if you look at things like commons-logging 1.1.1 its dependency graph includes now pulls in servlets 2.3 while v 1.0.4 didn&apos;t. &lt;br/&gt;
&lt;a href=&quot;http://mvnrepository.com/artifact/commons-logging/commons-logging/1.1.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mvnrepository.com/artifact/commons-logging/commons-logging/1.1.1&lt;/a&gt;&lt;br/&gt;
Whatever tool you use, treat the dependency data as a hint rather than something to blindly depend on. Better to explicitly pull in everything you need. And when you release, audit your metadata before you ship, as you aren&apos;t allowed to change it.&lt;/p&gt;

&lt;p&gt;1. ~/.m2/repository ~/.maven/repository. For Ivy I&apos;d go for ~/.ivy and ~/.ivy2. You can do a full rm -rf or just purge your artifact tree. Either way, good to do for clean builds, especially the release VM.&lt;/p&gt;

&lt;p&gt;2. The issue is just that when your build process involves creating RPMs and scp-ing them to VMs that you ask the cloud infrastructure for as part of the test run you are on your own, whatever tooling you have to hand.&lt;/p&gt;

&lt;p&gt;3. Yes. Like I said, I&apos;m not taking sides, just emphasising risk. &lt;/p&gt;</comment>
                            <comment id="12840358" author="lars_francke" created="Tue, 2 Mar 2010 22:24:26 +0000"  >&lt;p&gt;I really don&apos;t want to start a discussion about Maven vs. Ant. I just like the Maven style better. It is true that there is a lot of incorrect meta data and we&apos;re in the process of weeding out those dependencies that are really needed. If you use Ant the process is bottom up. You start with nothing and have to figure out what you need. I&apos;d say it depends on what you prefer.&lt;/p&gt;

&lt;p&gt;1. I don&apos;t think that&apos;s necessary or even a good idea. As you said: Artifacts aren&apos;t allowed to change (at least in the central repository) so there is really no need to clean the local repository; it just makes the builds take longer.&lt;/p&gt;

&lt;p&gt;2. Can&apos;t say a lot about that except that the Wagon and Cargo plugins make it pretty easy to deploy and run stuff on other machines. But I&apos;m still not sure I can follow you - I haven&apos;t yet done any very complex deployment operations (just deployment to a remote Tomcat etc. with Cargo) with Maven but if it can be done with Ant it can be done with Maven &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Either way: Maven now seems to do everything we need for HBase but Ant and Ivy worked too.&lt;/p&gt;

&lt;p&gt;As to the clean up: The unit tests currently build their stuff in a &quot;build&quot; or &quot;data&quot; directoy. When we abort a build for whatever reasons those might not be cleaned up and they won&apos;t be picked up by the clean plugin. This is something I&apos;ll have to remember to look at.&lt;/p&gt;</comment>
                            <comment id="12841738" author="stack" created="Fri, 5 Mar 2010 07:39:26 +0000"  >&lt;p&gt;I&apos;m going to close this issue though we still have work to do, hudson passed for first time this evening.&lt;/p&gt;

&lt;p&gt;@Steve Thanks for the input.  I like the one where we&apos;d clear local cache building a release, just in case.  Thanks for the warnings regards sloppy pom &amp;#8211; makes sense.&lt;/p&gt;

&lt;p&gt;@Lars and @Paul, thanks for wrestling this one to this stage.  Excellent work.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12439012">HBASE-1933</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12435799" name="HBASE-2099.13.patch" size="27322" author="psmith@apache.org" created="Sun, 14 Feb 2010 03:27:30 +0000"/>
                            <attachment id="12436302" name="HBASE-2099.14.patch" size="27294" author="psmith@apache.org" created="Fri, 19 Feb 2010 09:51:49 +0000"/>
                            <attachment id="12435800" name="HBase Move Script.txt" size="5510" author="psmith@apache.org" created="Sun, 14 Feb 2010 03:27:30 +0000"/>
                            <attachment id="12430586" name="findbugs.html" size="27539" author="psmith@apache.org" created="Sun, 17 Jan 2010 22:44:27 +0000"/>
                            <attachment id="12430585" name="findbugs.html" size="290795" author="psmith@apache.org" created="Sun, 17 Jan 2010 22:44:27 +0000"/>
                            <attachment id="12436292" name="mvn.out" size="88507" author="stack" created="Fri, 19 Feb 2010 06:47:24 +0000"/>
                            <attachment id="12430359" name="test-reports.zip" size="63729" author="psmith@apache.org" created="Fri, 15 Jan 2010 05:55:22 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 12 Jan 2010 00:06:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32410</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 42 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hgev:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99921</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>