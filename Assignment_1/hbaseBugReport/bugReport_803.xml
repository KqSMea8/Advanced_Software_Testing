<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:47:40 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-803/HBASE-803.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-803] Atomic increment operations</title>
                <link>https://issues.apache.org/jira/browse/HBASE-803</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Discussion was already started in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-798&quot; title=&quot;Provide Client API to explicitly lock and unlock rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-798&quot;&gt;&lt;del&gt;HBASE-798&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First version will contain to additional HTable methods:&lt;/p&gt;

&lt;p&gt;incrementColumnValue(table,row,family:column) -&amp;gt; Inserts a new version of the specified column (which must already exist) with an incremented cell value.&lt;/p&gt;

&lt;p&gt;incrementFamilyColumn(table,row,family: ) -&amp;gt; Inserts a new column under the specified family.  This assumes the family always contains only one column.  That column is read, incremented, deleted, and a new column is inserted with the incremented column name.  The existing value is re-inserted unchanged to the new column.&lt;/p&gt;

&lt;p&gt;I&apos;m going to be making even more specialized versions of these for internal use (taking apart byte[]&apos;s, doing different bit/byte operations, and assorted munging...).  So if anyone has any requests for other specialized versions, or more generic versions, please post them here and I&apos;d be more than happy to take a stab at them.&lt;/p&gt;

&lt;p&gt;Next week I will likely have a go at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-493&quot; title=&quot;Write-If-Not-Modified-Since support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-493&quot;&gt;&lt;del&gt;HBASE-493&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12402017">HBASE-803</key>
            <summary>Atomic increment operations</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ryanobjc">ryan rawson</assignee>
                                    <reporter username="streamy">Jonathan Gray</reporter>
                        <labels>
                    </labels>
                <created>Fri, 8 Aug 2008 17:37:22 +0000</created>
                <updated>Sun, 13 Sep 2009 22:24:10 +0000</updated>
                            <resolved>Wed, 25 Mar 2009 09:38:03 +0000</resolved>
                                    <version>0.19.0</version>
                                    <fixVersion>0.19.1</fixVersion>
                    <fixVersion>0.20.0</fixVersion>
                                    <component>Client</component>
                    <component>IPC/RPC</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12620984" author="streamy" created="Fri, 8 Aug 2008 17:37:52 +0000"  >&lt;p&gt;Removed the &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12620994" author="clint.morgan" created="Fri, 8 Aug 2008 18:04:06 +0000"  >&lt;p&gt;What does it mean to increment a cell value? Is there an implicit type that the byte[]  is deserialized to (long/int..)? Or some sort of increment of a byte[]? Perhaps it would be best to be as generic as possible, and pass a byte[] modify(byte []) method? Would add to the RPC cost, though..&lt;/p&gt;

&lt;p&gt;I&apos;m a bit concerned that the functionality as proposed above is too specialized for the HTable api, which is already sizable..&lt;/p&gt;</comment>
                            <comment id="12620998" author="streamy" created="Fri, 8 Aug 2008 18:11:51 +0000"  >&lt;p&gt;Currently I am doing an actual byte increment.  I may actual do as you propose, passing a modify method.  But for now I&apos;m leaving as a straight byte-increment.  This includes adding additional bytes if you overflow your array size.  I should have a patch up today so you can see.&lt;/p&gt;

&lt;p&gt;I completely agree that this functionality is probably too specialized for HTable api.  I&apos;m doing it for internal use and I know of at least one other person who wants similar behavior.  So I figured I&apos;d put it out there for others to see or use.&lt;/p&gt;</comment>
                            <comment id="12621011" author="streamy" created="Fri, 8 Aug 2008 19:04:35 +0000"  >&lt;p&gt;Unfortunately I have to switch my focus to another project for the next few days.&lt;/p&gt;

&lt;p&gt;I will post the patch I have now so you can see what I&apos;m doing, but it is still buggy.  incrementFamilyColumn is a bit odd and may not work at all.&lt;/p&gt;</comment>
                            <comment id="12621019" author="apurtell" created="Fri, 8 Aug 2008 19:26:08 +0000"  >&lt;p&gt;Just a random thought but incrementors (and decrementors, etc.) could be handled the same way row fitlers are handled: There are a standard set implemented server side that the client can build descriptors for and send them up in RPC invocations. &lt;/p&gt;</comment>
                            <comment id="12621071" author="streamy" created="Fri, 8 Aug 2008 21:45:32 +0000"  >&lt;p&gt;This patch applies against TRUNK but does not compile.&lt;/p&gt;

&lt;p&gt;Within HR it relies on new batchUpdate and getFull methods that can be passed previously acquired row locks.&lt;/p&gt;

&lt;p&gt;Will clean up &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-798&quot; title=&quot;Provide Client API to explicitly lock and unlock rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-798&quot;&gt;&lt;del&gt;HBASE-798&lt;/del&gt;&lt;/a&gt; next week, though latest patch should work.&lt;/p&gt;</comment>
                            <comment id="12643582" author="stack" created="Wed, 29 Oct 2008 18:29:46 +0000"  >&lt;p&gt;Moved it out of 0.19.0.&lt;/p&gt;</comment>
                            <comment id="12673552" author="ryanobjc" created="Sat, 14 Feb 2009 22:11:06 +0000"  >&lt;p&gt;we may also need this functionality.  Fast up-to-date counters like this are a common use case out there, I think it could be justified to create a new API point for it.  &lt;/p&gt;</comment>
                            <comment id="12679850" author="ryanobjc" created="Sat, 7 Mar 2009 07:42:32 +0000"  >&lt;p&gt;new atomic increment - for efficiency only increments up to 64 bits total. Test also works.&lt;/p&gt;</comment>
                            <comment id="12679928" author="ryanobjc" created="Sat, 7 Mar 2009 23:50:29 +0000"  >&lt;p&gt;new patch, but uses longs as the param and return types.&lt;/p&gt;</comment>
                            <comment id="12679951" author="stack" created="Sun, 8 Mar 2009 04:45:10 +0000"  >&lt;p&gt;Here&apos;s a couple of comments on the patch:&lt;/p&gt;

&lt;p&gt;Javadoc on new method in HTable is wrong (run ant javadoc and you&apos;ll see the warnings).  I&apos;d suggest you remove it.  The correct javadoc in the Interface will shine through when the javadoc tool is run.&lt;/p&gt;

&lt;p&gt;The below should probably be DEBUG especially if you are talking of many updates an hour:&lt;/p&gt;

&lt;p&gt;+        LOG.info(&quot;Overwriting the memcache value for &quot; + Bytes.toString(row) + &quot;/&quot; + Bytes.toString(column));&lt;/p&gt;

&lt;p&gt;Same here:&lt;/p&gt;

&lt;p&gt;+          LOG.info(&quot;Using HFile previous value for &quot; + Bytes.toString(row) + &quot;/&quot; + Bytes.toString(column));&lt;/p&gt;

&lt;p&gt;,,,,and this:&lt;/p&gt;

&lt;p&gt;+        LOG.info(&quot;Creating new counter value for &quot; + Bytes.toString(row) + &quot;/&quot;+ Bytes.toString(column));&lt;/p&gt;

&lt;p&gt;I don&apos;t think this necessary though no harm I suppose:&lt;/p&gt;

&lt;p&gt;+      for (int i = 0; i &amp;lt; newvalue.length; ++i)&lt;br/&gt;
+        newvalue&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; = 0;&lt;/p&gt;

&lt;p&gt;Here, I think  you can add the exception as an extra argument:\&lt;/p&gt;

&lt;p&gt;+      IOException io = new IOException(&lt;br/&gt;
+          &quot;Invalid arguments to incrementColumnValue&quot;);&lt;br/&gt;
+      io.initCause(npe);&lt;/p&gt;

&lt;p&gt;As in, new IOException(&quot;Invalid....&quot;, npe);&lt;/p&gt;

&lt;p&gt;I could be wrong on that.  Just FYI.&lt;/p&gt;

&lt;p&gt;Your new test is missing an Apache license header.&lt;/p&gt;

&lt;p&gt;Otherwise patch is great.  Does it work for you jgray?&lt;/p&gt;


</comment>
                            <comment id="12679956" author="streamy" created="Sun, 8 Mar 2009 06:24:16 +0000"  >&lt;p&gt;Patch that applies cleanly to 0.19 branch.  I&apos;d like to get this in to 0.19.1 release if possible.  Currently doing more thorough testing.&lt;/p&gt;</comment>
                            <comment id="12679957" author="streamy" created="Sun, 8 Mar 2009 06:35:04 +0000"  >&lt;p&gt;Version of Ryan&apos;s patch for 0.19 branch that compiles.  It&apos;s called HStore here.&lt;/p&gt;</comment>
                            <comment id="12679963" author="streamy" created="Sun, 8 Mar 2009 07:39:58 +0000"  >&lt;p&gt;Changes HTable method to long to match HRI.  Also changes logging in HRegion to debug level, even one line per increment is noisy for info.&lt;/p&gt;

&lt;p&gt;0.19 patch just changes Store back to HStore and RPC version from 15 to 16 (instead of 16 to 17)... What&apos;s the right thing to do here?  This is actually a unique RPC version as it&apos;s not 15, 16 or 17.&lt;/p&gt;</comment>
                            <comment id="12679965" author="streamy" created="Sun, 8 Mar 2009 07:50:21 +0000"  >&lt;p&gt;Everything seems to be working.  I have not tested data-loss scenarios.  &amp;lt; 0.5ms/increment in bulk, 3ms indvidually (client on master, gigabit ethernet to regionserver).&lt;/p&gt;

&lt;p&gt;On our cluster:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Completed 1000 increments (0 to 10000 by 10) in 405ms (0.405 ms/increment)
Completed 1000 increments (0 to 20000 by 10) in 394ms (0.394 ms/increment)
Completed 1 increments (0 to 20010 by 10) in 3ms (3.0 ms/increment)
Completed 1 increments (0 to 20020 by 10) in 3ms (3.0 ms/increment)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12680053" author="ryanobjc" created="Mon, 9 Mar 2009 05:23:31 +0000"  >&lt;p&gt;the next patch iteration against trunk.&lt;/p&gt;</comment>
                            <comment id="12680307" author="stack" created="Mon, 9 Mar 2009 22:25:13 +0000"  >&lt;p&gt;Committed branch and trunk (Thanks for the patch ryan and jon).&lt;/p&gt;</comment>
                            <comment id="12685408" author="ryanobjc" created="Sat, 21 Mar 2009 01:49:47 +0000"  >&lt;p&gt;the server code crashes if you increment during a flush, with an exception &quot;more than 1 value from memcache.&quot;.  The solution is to only use the first value if there are more than 1 returned - with the snapshot, it&apos;s possible to return 2 values during a flush.&lt;/p&gt;</comment>
                            <comment id="12689048" author="stack" created="Wed, 25 Mar 2009 09:38:02 +0000"  >&lt;p&gt;Committed the patch for crash.  Thanks for the patch Ryan. Lets open new issue next time rather than reuse.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12390273">HBASE-493</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12401756">HBASE-798</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12402863" name="HBASE-803-crash-bug.patch" size="1505" author="ryanobjc" created="Sat, 21 Mar 2009 01:50:15 +0000"/>
                            <attachment id="12401694" name="HBASE-803-v2.patch" size="11246" author="ryanobjc" created="Sat, 7 Mar 2009 23:50:29 +0000"/>
                            <attachment id="12401707" name="HBASE-803-v3-0.19.patch" size="10858" author="streamy" created="Sun, 8 Mar 2009 07:39:58 +0000"/>
                            <attachment id="12401708" name="HBASE-803-v3-0.20.patch" size="10949" author="streamy" created="Sun, 8 Mar 2009 07:39:58 +0000"/>
                            <attachment id="12401730" name="HBASE-803-v3.patch" size="11879" author="ryanobjc" created="Mon, 9 Mar 2009 05:23:31 +0000"/>
                            <attachment id="12401678" name="HBASE-803.patch" size="11626" author="ryanobjc" created="Sat, 7 Mar 2009 07:42:32 +0000"/>
                            <attachment id="12387856" name="hbase-803-v1.patch" size="7556" author="streamy" created="Fri, 8 Aug 2008 21:45:32 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 8 Aug 2008 18:04:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31860</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 39 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h9jb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>