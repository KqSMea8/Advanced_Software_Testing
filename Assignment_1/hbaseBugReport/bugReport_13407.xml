<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:42:59 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13407/HBASE-13407.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13407] Add a configurable jitter to MemStoreFlusher#FlushHandler in order to smooth write latency</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13407</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;There is a very interesting behavior that I can reproduce consistently with many workloads from HBase 0.98 to HBase 1.0 since hbase.hstore.flusher.count was set by default to 2: when writes are evenly distributed across regions, memstores grow and flush about the same rate causing spikes in IO and CPU. The side effect of those spikes is loss in throughput which in some cases can above 10% impacting write metrics. When the flushes get a out of sync the spikes lower and and throughput is very stable. Reverting hbase.hstore.flusher.count to 1 doesn&apos;t help too much with write heavy workloads since we end with a large flush queue that eventually can block writers.&lt;/p&gt;

&lt;p&gt;Adding a small configurable jitter hbase.server.thread.wakefrequency.jitter.pct (a percentage of the hbase.server.thread.wakefrequency frequency) can help to stagger the writes from FlushHandler to HDFS and smooth the write latencies when the memstores are flushed in multiple threads. &lt;/p&gt;
</description>
                <environment></environment>
        <key id="12788252">HBASE-13407</key>
            <summary>Add a configurable jitter to MemStoreFlusher#FlushHandler in order to smooth write latency</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="esteban">Esteban Gutierrez</assignee>
                                    <reporter username="esteban">Esteban Gutierrez</reporter>
                        <labels>
                    </labels>
                <created>Sat, 4 Apr 2015 04:54:32 +0000</created>
                <updated>Wed, 8 Apr 2015 04:16:19 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="14395556" author="esteban" created="Sat, 4 Apr 2015 05:26:53 +0000"  >&lt;p&gt;This is a good example when this happens while running YCSB:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2015-04-03 21:26:01,985 INFO org.apache.hadoop.hbase.regionserver.HRegion: Started memstore flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; usertable,user7375,1428051592143.73d40c07586ba526791a44f87c2765bf., current region memstore size 256.20 MB, and 1/1 column families&apos; memstores are being flushed.
2015-04-03 21:26:05,598 INFO org.apache.hadoop.hbase.regionserver.HRegion: Started memstore flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; usertable,user6850,1428051592142.a4fd5b0bac8ec25bd72da26914be61b7., current region memstore size 256.12 MB, and 1/1 column families&apos; memstores are being flushed.
2015-04-03 21:26:07,624 INFO org.apache.hadoop.hbase.regionserver.HRegion: Started memstore flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; usertable,user7450,1428051592143.bb73df854c86eeb3afb8d2269a85734a., current region memstore size 256.05 MB, and 1/1 column families&apos; memstores are being flushed.
2015-04-03 21:26:12,208 INFO org.apache.hadoop.hbase.regionserver.HRegion: Started memstore flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; usertable,user8575,1428051592144.e198c3e0dffbeadb0b20d020d2a5424e., current region memstore size 256.09 MB, and 1/1 column families&apos; memstores are being flushed.
2015-04-03 21:26:20,740 INFO org.apache.hadoop.hbase.regionserver.HRegion: Finished memstore flush of ~256.20 MB/268642496, currentsize=22.81 MB/23913248 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region usertable,user7375,1428051592143.73d40c07586ba526791a44f87c2765bf. in 18755ms, sequenceid=473396, compaction requested=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
2015-04-03 21:26:23,356 INFO org.apache.hadoop.hbase.regionserver.HRegion: Finished memstore flush of ~256.15 MB/268595112, currentsize=24.09 MB/25261824 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region usertable,user6850,1428051592142.a4fd5b0bac8ec25bd72da26914be61b7. in 17758ms, sequenceid=473170, compaction requested=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
2015-04-03 21:26:26,825 INFO org.apache.hadoop.hbase.regionserver.HRegion: Finished memstore flush of ~256.19 MB/268636560, currentsize=27.52 MB/28854080 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region usertable,user7450,1428051592143.bb73df854c86eeb3afb8d2269a85734a. in 19201ms, sequenceid=473529, compaction requested=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
2015-04-03 21:26:30,940 INFO org.apache.hadoop.hbase.regionserver.HRegion: Finished memstore flush of ~256.33 MB/268781008, currentsize=29.82 MB/31269440 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region usertable,user8575,1428051592144.e198c3e0dffbeadb0b20d020d2a5424e. in 18732ms, sequenceid=474463, compaction requested=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The 4 flushers started about the same time for nearly 20 seconds, and during that time writes dropped from 37K req/sec to 30K req/sec. (see attached chart)&lt;/p&gt;

</comment>
                            <comment id="14395571" author="srikanth235" created="Sat, 4 Apr 2015 06:15:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;Adding a small configurable jitter hbase.server.thread.wakefrequency.jitter.pct (a percentage of the hbase.server.thread.wakefrequency frequency) can help to stagger the writes from FlushHandler to HDFS and smooth the write latencies when the memstores are flushed in multiple threads. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It would be great if you can upload graph with this param configured to demonstrate the impact this change brings.&lt;/p&gt;</comment>
                            <comment id="14484685" author="ndimiduk" created="Wed, 8 Apr 2015 04:16:19 +0000"  >&lt;p&gt;Nice find &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=esteban&quot; class=&quot;user-hover&quot; rel=&quot;esteban&quot;&gt;Esteban Gutierrez&lt;/a&gt;. Can you suggest any other ways we can avoid the herd of regions stampeding a region server?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12709396" name="memstoreflush.png" size="200781" author="esteban" created="Sat, 4 Apr 2015 05:27:15 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 4 Apr 2015 06:15:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 36 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i27s8n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>