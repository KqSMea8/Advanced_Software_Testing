<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:07:38 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9794/HBASE-9794.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9794] KeyValues / cells backed by buffer fragments</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9794</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;There are various places in the code where we see comments to the effect &quot;would be great if we had a scatter gather API for KV&quot;, appearing at places where we rewrite KVs on the server, for example in HRegion where we process appends and increments.&lt;/p&gt;

&lt;p&gt;KeyValues are stored in buffers of fixed length. This approach has performance advantages for the common case where KVs are not manipulated on their way from disk to RPC. The disadvantage of this approach is any manipulation of the KV internals then requires the creation of a new buffer to hold the result, and a copy of the KV data into the new buffer. Appends and increments are typically a small percentage of overall workload so this has been fine up to now.&lt;/p&gt;

&lt;p&gt;KeyValues can now carry metadata known as tags. Tags are stored contiguously with the rest of the KeyValue. Applications wishing to use tags (like per cell security) change the equation by wanting to rewrite KVs significantly more often. &lt;/p&gt;

&lt;p&gt;We should consider backing KeyValue with an alternative structure that can better support rewriting portions of its data, appends to existing buffers, scatter-gather copies, possibly even copy-on-write.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12674359">HBASE-9794</key>
            <summary>KeyValues / cells backed by buffer fragments</summary>
                <type id="13" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/genericissue.png">Brainstorming</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Oct 2013 17:53:40 +0000</created>
                <updated>Wed, 22 Jan 2014 06:06:26 +0000</updated>
                                            <version>0.98.0</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13798187" author="lhofhansl" created="Thu, 17 Oct 2013 17:59:37 +0000"  >&lt;p&gt;Related to (or dup of) &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7320&quot; title=&quot;Remove KeyValue.getBuffer()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7320&quot;&gt;HBASE-7320&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13798188" author="lhofhansl" created="Thu, 17 Oct 2013 18:00:30 +0000"  >&lt;p&gt;This is one of my pet peeves &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  and the reason why scanning with block encoding is so much slower and more GC intensive than without.&lt;/p&gt;</comment>
                            <comment id="13798190" author="apurtell" created="Thu, 17 Oct 2013 18:00:45 +0000"  >&lt;p&gt;Considering alternatives to the single contiguous buffer as we have now, but only if needed. The current way should remain the default way.&lt;/p&gt;

&lt;p&gt;The kind of KeyValue manipulations desired here are analogous to those performed by network stacks in operating systems. &lt;/p&gt;

&lt;p&gt;The BSD mbuf structure is a good example, although it contains a lot of particulars to network stacks.&lt;/p&gt;

&lt;p&gt;Back when the dinosaurs roamed the earth I worked with a research OS called Scout which had (I though) a particularly nice tree based structure for composing and decomposing packet buffers. Could be inspiration. From foggy memory it had an API like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// Return the current length of the message
&lt;/span&gt;extern size_t msgLength (Msg m);

&lt;span class=&quot;code-comment&quot;&gt;// Replace the contents of message &apos;m&apos; with that of &apos;other&apos;, but without an ownership transfer to &apos;m&apos;, any changes will have COW semantics
&lt;/span&gt;extern void msgAssign (Msg m, Msg other);

&lt;span class=&quot;code-comment&quot;&gt;// Replace the contents of message &apos;m&apos; with the union of &apos;left&apos; and &apos;right&apos;, but without an ownership transfer to &apos;m&apos;, any changes will have COW semantics
&lt;/span&gt;extern void msgJoin (Msg m, Msg left, Msg right);

&lt;span class=&quot;code-comment&quot;&gt;// Remove &apos;len&apos; bytes from the head of message &apos;m&apos; into message &apos;other&apos;
&lt;/span&gt;extern void msgBreak (Msg m, Msg other, size_t len);

&lt;span class=&quot;code-comment&quot;&gt;// Get a contiguous view over &apos;len&apos; bytes of &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; storage at the tail of message &apos;m&apos;, may cause internal tree manipulations and allocations in order to provide it
&lt;/span&gt;extern void * msgPush (Msg m, size_t len);

&lt;span class=&quot;code-comment&quot;&gt;// Get a contiguous view over &apos;len&apos; bytes at the head of message &apos;m&apos;, may cause internal tree manipulations and allocations in order to provide it, and remove those bytes from the message
&lt;/span&gt;extern void * msgPop (Msg m, size_t len);

&lt;span class=&quot;code-comment&quot;&gt;// Get a contiguous view over &apos;len&apos; bytes at the head of message &apos;m&apos;, may cause internal tree manipulations and allocations in order to provide it, without removing those bytes from the message
&lt;/span&gt;extern void * msgPeek (Msg m, size_t len);

&lt;span class=&quot;code-comment&quot;&gt;// Discard &apos;len&apos; bytes from the head of the message
&lt;/span&gt;extern void msgDiscard (Msg m, size_t len);

&lt;span class=&quot;code-comment&quot;&gt;// Discard &apos;len&apos; bytes from the tail of the message
&lt;/span&gt;extern void msgTruncate (Msg m, size_t len);

&lt;span class=&quot;code-comment&quot;&gt;// Initialize state &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; a walk over the tree of buffers &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; message &apos;m&apos;
&lt;/span&gt;extern void msgWalkInit (MsgWalk w, Msg m);

&lt;span class=&quot;code-comment&quot;&gt;// Return a view over the contents of the next buffer &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; message &apos;m&apos;, or the first buffer upon first invocation. Does not trigger any tree manipulations or allocations
&lt;/span&gt;extern void * msgWalkNext (MsgWalk w, size_t *lenp);

&lt;span class=&quot;code-comment&quot;&gt;// Clean up walk state
&lt;/span&gt;extern void msgWalkDone (MsgWalk w);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13798191" author="apurtell" created="Thu, 17 Oct 2013 18:01:23 +0000"  >&lt;p&gt;Related to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7320&quot; title=&quot;Remove KeyValue.getBuffer()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7320&quot;&gt;HBASE-7320&lt;/a&gt; I&apos;d say&lt;/p&gt;</comment>
                            <comment id="13798193" author="lhofhansl" created="Thu, 17 Oct 2013 18:03:38 +0000"  >&lt;p&gt;I am reminded of my writing network protocols in OCaml in a former life &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12623342">HBASE-7320</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12685275">HBASE-10191</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 17 Oct 2013 17:59:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>353981</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 9 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1p113:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>354273</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>