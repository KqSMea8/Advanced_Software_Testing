<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:53:06 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1388/HBASE-1388.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1388] Implement performance tests using Vpork</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1388</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;It would be useful to have a suite of performance tests so that HBase can be compared to other similar projects. This could then be automated on the same hardware (perhaps even EC2?).&lt;/p&gt;

&lt;p&gt;There is a project called Vpork, developed by Jon Travis to test Voldemort that would be a good starting point. It is written in Groovy and can use the Java client libs. This version has been slightly refactored and also supports Cassandra:&lt;br/&gt;
&lt;a href=&quot;http://github.com/johanoskarsson/vpork/tree/master&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/johanoskarsson/vpork/tree/master&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12424830">HBASE-1388</key>
            <summary>Implement performance tests using Vpork</summary>
                <type id="5" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Wish</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="johanoskarsson">Johan Oskarsson</reporter>
                        <labels>
                    </labels>
                <created>Thu, 7 May 2009 16:51:39 +0000</created>
                <updated>Mon, 29 Nov 2010 19:51:38 +0000</updated>
                            <resolved>Mon, 29 Nov 2010 19:51:38 +0000</resolved>
                                                                    <component>test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12724934" author="jmhodges" created="Sun, 28 Jun 2009 09:52:13 +0000"  >&lt;p&gt;An initial implementation has been made: &lt;a href=&quot;http://github.com/jmhodges/vpork/tree/hbase&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/jmhodges/vpork/tree/hbase&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12725019" author="stack" created="Mon, 29 Jun 2009 02:30:52 +0000"  >&lt;p&gt;Writing Jeff to see if we can use java directly instead of going groovy to thrift to hbase java client.&lt;/p&gt;</comment>
                            <comment id="12725041" author="euphoria" created="Mon, 29 Jun 2009 05:46:22 +0000"  >&lt;p&gt;If you do end up using Java directly, it&apos;d be nice if there were also an option to test the Thrift version.  The tests are more &quot;fair&quot; (for some value of fair) if everyone is testing against cross-language bindings, instead of the Java projects being able to use native while the non-Java projects have to take the extra hit.&lt;/p&gt;</comment>
                            <comment id="12725260" author="stack" created="Mon, 29 Jun 2009 17:23:50 +0000"  >&lt;p&gt;@Michael Greene&lt;/p&gt;

&lt;p&gt;For sure.  Yeah, both.  There&apos;s big difference in performance dependent on interface.  Even going via groovy there&apos;ll be a cost (This is old but tells a good story on this point: &lt;a href=&quot;http://ryantwopointoh.blogspot.com/2009/01/performance-of-hbase-importing.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ryantwopointoh.blogspot.com/2009/01/performance-of-hbase-importing.html&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;VPork looks like a KV test framework having had a look at it.  As far as the BT engines are concerned, this test looks a bit like a decathelete being evaluated on how well he can arm-wrestle.&lt;/p&gt;
</comment>
                            <comment id="12725307" author="jmhodges" created="Mon, 29 Jun 2009 18:36:28 +0000"  >&lt;p&gt;I asked stack how to access a remote table without the Thrift overhead, but haven&apos;t heard back. The problem that had me using Thrift was hacking around HBaseConfiguration without needing to sit vpork inside a HBase.. app? exploded tarball? Whatever the terminology is.&lt;/p&gt;

&lt;p&gt;I see there&apos;s a constructor for HBaseConfiguration that takes a Configuration object, but I didn&apos;t see any docs on how said Configuration should be laid out to mock out the HBase config. I&apos;d need some insight from someone into that before I would put it into place.&lt;/p&gt;

&lt;p&gt;Alternatively, feel free to fork and commit another version.&lt;/p&gt;</comment>
                            <comment id="12725318" author="ryanobjc" created="Mon, 29 Jun 2009 19:28:49 +0000"  >&lt;p&gt;Guys, I disagree with the &apos;level playing field&apos; thing here.  Our official access is via Java thick client libraries.  The thrift gateway is provided so that languages that don&apos;t have direct access can achieve it.  With RPC work done in 0.21, the thrift gateway will probably be increasingly deprecated as we get C/C++ client libraries (and there, most scripting languages). &lt;/p&gt;

&lt;p&gt;To use the native API, you need several things:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;hbase-site.xml, zoo.cfg in your classpath&lt;/li&gt;
	&lt;li&gt;create a new HBaseConfiguration()&lt;/li&gt;
	&lt;li&gt;create a new HTable(conf, &quot;table_name&quot;)&lt;/li&gt;
	&lt;li&gt;You&apos;re done!&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Just because vpork is designed to test systems with thrift APIs doesn&apos;t mean that it should only do that against all other systems.  Demanding that all systems implement a (slower?) thrift API just for vpork really calls into question exactly how accurate vpork could ever be.  &lt;/p&gt;</comment>
                            <comment id="12725332" author="tim_s" created="Mon, 29 Jun 2009 20:28:03 +0000"  >&lt;p&gt;Definitely, our thrift api is sooo slow. It&apos;s really just easy access.&lt;br/&gt;
I was thinking of ways to speed it up, not sure how without thrift being tighter integrated. Apart from extra serializing of data, the thrift server is disadvantaged in that it has to reconstruct extra objects out of everything you send through it. &lt;br/&gt;
eg,&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
newmap = {}
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; key, val in oldmap
  newmap[key] = val
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Because newmap has different types. yuck! It seems especially horrible when you think of doing that for a 10000 row put.&lt;/p&gt;

&lt;p&gt;(yay pythonesque psuedocode)&lt;/p&gt;</comment>
                            <comment id="12725362" author="jmhodges" created="Mon, 29 Jun 2009 21:43:16 +0000"  >&lt;p&gt;Uh, okay, so some misconceptions need to be cleared up.&lt;/p&gt;

&lt;p&gt;1) Neither I nor the code I wrote speak for the vpork point of view. The first time I even looked at vpork&apos;s codebase was Saturday. I didn&apos;t even know groovy beforehand.&lt;/p&gt;

&lt;p&gt;2) I don&apos;t know that anyone who&apos;s actually working on vpork thinks that thrift should be The Only Way to access anything. I honestly have no friggin&apos; clue how that little meme started. Can we stop that?&lt;/p&gt;

&lt;p&gt;3) I wrote the Thrift client because I could not find any documentation that described what was needed to make `new HBaseConfiguration()` Just Work. There was also no documentation describing how to lay out the Configuration that could be passed to HbaseConfiguration as an argument. It wasn&apos;t even clear that you could work on a remote table without the whole set of hbase configs available.&lt;/p&gt;

&lt;p&gt;4) People are trying to find all the pain points of using a variety of dbs, including the random reads and writes. vpork helps with getting Real Numbers for those including, for certain folks concerned with lots of data and lots of accesses, the 99% case (which I&apos;d like to be 99.9%, but working on that). Hence, why it&apos;s nice. So, yeah, it&apos;s not testing everything hbase does and I&apos;m not sure, as-is, it&apos;s meant to. Just because it&apos;s an HBase pain point doesn&apos;t mean it&apos;s a bad test.&lt;/p&gt;

&lt;p&gt;To reiterate, the Thrift interface was picked because it worked, worked easily, worked remotely (meaning, to a whole cluster) and the API for it described exactly how to use it. (Well, modulo the Mutations stuff. That took another minute of digging through the API.) No other reasons.&lt;/p&gt;

&lt;p&gt;I&apos;ll take a look at the hbase-site.xml and zoo.cfg files and see if I can&apos;t hack those requirements into something that fits the vpork config model. St.Ack mentioned maybe working on this. That&apos;d be nice.&lt;/p&gt;</comment>
                            <comment id="12725373" author="apurtell" created="Mon, 29 Jun 2009 22:18:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;Just because it&apos;s an HBase pain point doesn&apos;t mean it&apos;s a bad test.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Nice. &lt;/p&gt;

&lt;p&gt;I can test the performance characteristics of my car&apos;s engine just as well driving in reverse. Doesn&apos;t mean it&apos;s a bad test. &lt;/p&gt;</comment>
                            <comment id="12725376" author="tim_s" created="Mon, 29 Jun 2009 22:23:19 +0000"  >&lt;p&gt;it will be nice to know how the thrift api compares to the native java api though. so it&apos;s definitely worth having both.&lt;/p&gt;</comment>
                            <comment id="12725377" author="apurtell" created="Mon, 29 Jun 2009 22:33:13 +0000"  >&lt;p&gt;If there&apos;s bandwidth in the 0.21 period, I think we should either give the Thrift gateway attention or deprecate it and remove it in favor of the C/C++ client side API. I think really on the Thrift side it should be the slimmest wrapper around direct communication via KeyValues. At that point, why not just use KeyValues directly? &lt;/p&gt;</comment>
                            <comment id="12725378" author="jmhodges" created="Mon, 29 Jun 2009 22:37:32 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I can test the performance characteristics of my car&apos;s engine just as well driving in reverse. Doesn&apos;t mean it&apos;s a bad test. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Random reads and writes is what I was talking about and what people seemed to be saying were a bad test. Maybe we have different understandings of what was meant. I&apos;m really not harshing on HBase. I like HBase!&lt;/p&gt;

&lt;p&gt;I mean, unless you&apos;re saying that testing random reads and writes is a bad test?&lt;/p&gt;

&lt;p&gt;Here&apos;s my context: I&apos;ve evaluating a bunch of datastores that could have a number of uses, from the usual Hadoop-style streaming to random reads, etc. HBase does somethings well, and other things not so well, just like the rest right? vpork tests just one particular use case and is not a complete benchmarking of HBase. We can all agree to this right?&lt;/p&gt;

&lt;p&gt;(And I&apos;m not advocating staying on Thrift solely, btw. Like I said, I just was able to get that to work.)&lt;/p&gt;</comment>
                            <comment id="12725381" author="ryanobjc" created="Mon, 29 Jun 2009 22:45:51 +0000"  >&lt;p&gt;and thank you for doing so.  &lt;/p&gt;

&lt;p&gt;There is some misunderstanding, stack and I advocate adding native API while you&apos;re &quot;in the guts&quot;. The native API is in fact easier than the thrift one in some ways.  &lt;/p&gt;

&lt;p&gt;Someone else said something about &apos;level playing field&apos; and sticking to thrift only, and this is where I don&apos;t entirely agree. Depending on how Avro shapes up, it&apos;s possible that hbase will be entirely thrift free in 4-5 months anyways.&lt;/p&gt;

&lt;p&gt;In the mean time, it would be good to build a performance test for hbase, since many of the scale features don&apos;t kick in until you have gigs of data on a dozen servers.  But after they kick in, it&apos;s near linear for quite some time.&lt;/p&gt;</comment>
                            <comment id="12725485" author="euphoria" created="Tue, 30 Jun 2009 06:16:36 +0000"  >&lt;p&gt;I don&apos;t think anyone advocated sticking to Thrift only, that&apos;s a bit of a strawman.  I wanted Thrift to be kept ostensibly because it&apos;s the most-accessible denominator, but also because it&apos;s the API that I would have to use.  I have to agree with almost everything Jeff said in his previous comments.  Just because it&apos;s a pain point doesn&apos;t mean it&apos;s a bad test &amp;#8211; I don&apos;t have the luxury of using the native Java client so it&apos;s testing what I (and other python/erlang/ruby/C#,...) developers would experience.  The proposed C/C++ API and an Avro API have both been brought up during this discussion but their non-existence tables that discussion for vpork.&lt;/p&gt;

&lt;p&gt;I do think a more bigtable-esque test for some of the features that HBase, Hypertable, and Cassandra share (to some extent) would be a good project.  A K/V test obviously does not exercise HBase&apos;s potential.&lt;/p&gt;</comment>
                            <comment id="12964909" author="stack" created="Mon, 29 Nov 2010 19:51:38 +0000"  >&lt;p&gt;Stale.  Won&apos;t do.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 28 Jun 2009 09:52:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32115</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 3 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hcy7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99360</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>