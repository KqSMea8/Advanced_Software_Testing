<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:03:34 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9343/HBASE-9343.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9343] Implement stateless scanner for Stargate</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9343</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The current scanner implementation for scanner stores state and hence not very suitable for REST server failure scenarios. The current JIRA proposes to implement a stateless scanner. In the first version of the patch, a new resource class &quot;ScanResource&quot; has been added and all the scan parameters will be specified as query params. &lt;/p&gt;

&lt;p&gt;The following are the scan parameters&lt;/p&gt;

&lt;p&gt;startrow -  The start row for the scan.&lt;/p&gt;

&lt;p&gt;endrow - The end row for the scan.&lt;/p&gt;

&lt;p&gt;columns - The columns to scan. &lt;/p&gt;

&lt;p&gt;starttime, endtime - To only retrieve columns within a specific range of version timestamps,both start and end time must be specified.&lt;/p&gt;

&lt;p&gt;maxversions  - To limit the number of versions of each column to be returned.&lt;/p&gt;

&lt;p&gt;batchsize - To limit the maximum number of values returned for each call to next().&lt;/p&gt;

&lt;p&gt;limit - The number of rows to return in the scan operation.&lt;/p&gt;

&lt;p&gt; More on start row, end row and limit parameters.&lt;br/&gt;
1. If start row, end row and limit not specified, then the whole table will be scanned.&lt;br/&gt;
2. If start row and limit (say N) is specified, then the scan operation will return N rows from the start row specified.&lt;br/&gt;
3. If only limit parameter is specified, then the scan operation will return N rows from the start of the table.&lt;br/&gt;
4. If limit and end row are specified, then the scan operation will return N rows from start of table till the end row. If the end row is &lt;br/&gt;
reached before N rows ( say M and M &amp;lt; N ), then M rows will be returned to the user.&lt;br/&gt;
5. If start row, end row and limit (say N ) are specified and N &amp;lt; number of rows between start row and end row, then N rows from start row&lt;br/&gt;
will be returned to the user. If N &amp;gt; (number of rows between start row and end row (say M), then M number of rows will be returned to the&lt;br/&gt;
user.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12665605">HBASE-9343</key>
            <summary>Implement stateless scanner for Stargate</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="avandana">Vandana Ayyalasomayajula</assignee>
                                    <reporter username="avandana">Vandana Ayyalasomayajula</reporter>
                        <labels>
                    </labels>
                <created>Mon, 26 Aug 2013 22:03:24 +0000</created>
                <updated>Sat, 21 Feb 2015 23:32:34 +0000</updated>
                            <resolved>Fri, 17 Jan 2014 02:33:53 +0000</resolved>
                                    <version>0.94.11</version>
                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.99.0</fixVersion>
                                    <component>REST</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="13750619" author="avandana" created="Mon, 26 Aug 2013 22:05:24 +0000"  >&lt;p&gt;First draft of the patch.&lt;/p&gt;</comment>
                            <comment id="13750621" author="avandana" created="Mon, 26 Aug 2013 22:08:06 +0000"  >&lt;p&gt;Review board request link: &lt;a href=&quot;https://reviews.apache.org/r/13836/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/13836/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13750862" author="hadoopqa" created="Tue, 27 Aug 2013 01:31:00 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12600031/HBASE-9343_94.00.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12600031/HBASE-9343_94.00.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 13 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6911//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6911//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13751170" author="apurtell" created="Tue, 27 Aug 2013 10:39:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;The current scanner implementation for scanner stores state and hence not very suitable for REST server failure scenarios&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s not quite how I would describe it. The current scanner implementation expects clients to restart scans if there is a REST server failure in the midst. The tradeoff is a pretty close semantic mapping - though definitely not RESTful - to the client API on the one hand, and loss of the cursor upon process failure on the other. Sure, that can be problematic.&lt;/p&gt;

&lt;p&gt;Why introduce new resources and a new model of scanning? Most of what you are trying to do can be done with Gets. Extend the existing resources for that. &lt;/p&gt;

&lt;p&gt;Do we need ProtobufStreamingUtil if REST already has internally a Generator API for iterating over results returned by scanners? Did you partially reimplement that here? What about XML or JSON?&lt;/p&gt;

&lt;p&gt;I am -0 on the changes as is.&lt;/p&gt;</comment>
                            <comment id="13751174" author="apurtell" created="Tue, 27 Aug 2013 10:48:41 +0000"  >&lt;p&gt;I considered briefly once keeping the REST scan cursor state in ZooKeeper for transparent failover of scans upon REST process failure. This would not have the same scalability as native scanners on account of ZooKeeper operation throughput limits but could surely support on the order of 100s of concurrent scanners open on a REST farm. Clients that need scanner failover would have it without API changes, though they would need to handle possible HTTP redirects. Expectation would be the majority of clients could live with loss of the cursor upon REST process failure though.&lt;/p&gt;

&lt;p&gt;No need to do it this way, just providing a historical note.&lt;/p&gt;</comment>
                            <comment id="13751557" author="toffer" created="Tue, 27 Aug 2013 18:34:25 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=andrew.purtell%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;andrew.purtell@gmail.com&quot;&gt;Andrew Purtell&lt;/a&gt; Just to clarify there&apos;s two big motivating pieces to create a new scanner resource:&lt;/p&gt;

&lt;p&gt;1. make REST server stateless, let&apos;s keep all state in hbase and have the server merely function as a proxy this makes the system much simpler to scale and manage. &lt;br/&gt;
2. stream the data instead of issuing new http request for each batch, this solves #1 as well as makes scans more performant (less rpc calls, delegating flow control at tcp layer). This also eases the pressure of having to keep a lot of scan data in memory in order to make it performant.&lt;/p&gt;

&lt;p&gt;This patch should include support for json, xml and protobuf. &lt;/p&gt;</comment>
                            <comment id="13751884" author="avandana" created="Tue, 27 Aug 2013 23:30:06 +0000"  >&lt;p&gt;Currently if a user has to scan a table, they have to&lt;br/&gt;
1. Use PUT/POST with -d option and specify a serialized scanner model object if scan params are needed. &lt;br/&gt;
2. Then issue GET command (s).&lt;br/&gt;
3. Finally use DELETE to delete the scanner. &lt;/p&gt;

&lt;p&gt;But semantically it should only be a GET call, so the above patch has all the scan parameters as query parameters, which makes it easy to use. &lt;br/&gt;
The ProtobufStreamingUtil class sends records to user in frames instead of one record in each GET call. The existing Generator API uses RowSpec to fetch &lt;br/&gt;
the records, which the new scan resource does not use. So that has not been used. &lt;/p&gt;</comment>
                            <comment id="13752407" author="apurtell" created="Wed, 28 Aug 2013 13:58:05 +0000"  >&lt;p&gt;Set aside the old scanner stuff for a moment. &lt;/p&gt;

&lt;p&gt;I agree the changes to use streaming are good. Can this be done using the existing resource types and the new query parameters you are introducing instead of also introducing ScanResource and &lt;/p&gt;
{table}
&lt;p&gt;/scan ?&lt;/p&gt;</comment>
                            <comment id="13752662" author="toffer" created="Wed, 28 Aug 2013 18:20:49 +0000"  >&lt;p&gt;I think there&apos;s two other options:&lt;/p&gt;

&lt;p&gt;1. GET /table&lt;br/&gt;
2. GET /table/scanner&lt;/p&gt;

&lt;p&gt;#2 is not good since it just convolutes the resource. #1 is more intuitive tho it might be accidentally invoked when users are constructing/playing with URIs. &lt;/p&gt;</comment>
                            <comment id="13753464" author="apurtell" created="Thu, 29 Aug 2013 09:36:56 +0000"  >&lt;p&gt;#1 works if you are ok with that. Then there&apos;s a new way to manage scanning with the approach in this issue, or backwards compatible URL constructions aka RowSpec for the old behavior. Let&apos;s see how it goes. Perhaps we adopt this new way (e.g. GET on /table with query parameters) as better, since it streams, and deprecate the old RowSpec way of addressing cells.&lt;/p&gt;</comment>
                            <comment id="13757333" author="avandana" created="Wed, 4 Sep 2013 00:52:29 +0000"  >&lt;p&gt;The patch contains changes to scan a table using  GET /table with scan specification as query parameters.&lt;/p&gt;</comment>
                            <comment id="13757345" author="hadoopqa" created="Wed, 4 Sep 2013 01:04:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12601292/HBASE-9364.01.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12601292/HBASE-9364.01.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7019//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7019//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13760478" author="hadoopqa" created="Fri, 6 Sep 2013 18:22:57 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12601871/HBASE-9343_94.01.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12601871/HBASE-9343_94.01.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7073//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7073//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13760732" author="avandana" created="Fri, 6 Sep 2013 23:07:23 +0000"  >&lt;p&gt;Patch for trunk.&lt;/p&gt;</comment>
                            <comment id="13760736" author="hadoopqa" created="Fri, 6 Sep 2013 23:14:26 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12601923/HBASE-9343_trunk.00.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12601923/HBASE-9343_trunk.00.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 hadoop2.0&lt;/font&gt;.  The patch failed to compile against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7077//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7077//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13760759" author="ndimiduk" created="Fri, 6 Sep 2013 23:48:45 +0000"  >&lt;p&gt;Please verify your changes vs. Hadoop2 profile:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;$ mvn -Dhadoop.profile=2.0 clean compile
...
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:compile (default-compile) on project hbase-hadoop2-compat: Compilation failure
[ERROR] /Users/ndimiduk/repos/hbase/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSourceImpl.java:[30,7] org.apache.hadoop.hbase.rest.MetricsRESTSourceImpl is not abstract and does not override abstract method incrementFailedScanRequests(int) in org.apache.hadoop.hbase.rest.MetricsRESTSource
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13760898" author="hadoopqa" created="Sat, 7 Sep 2013 03:26:01 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12601953/HBASE-9343_trunk.01.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12601953/HBASE-9343_trunk.01.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7081//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13761968" author="ndimiduk" created="Mon, 9 Sep 2013 16:14:12 +0000"  >&lt;p&gt;poking jenkins.&lt;/p&gt;</comment>
                            <comment id="13762081" author="hadoopqa" created="Mon, 9 Sep 2013 17:46:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12602157/HBASE-9343_trunk.01.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12602157/HBASE-9343_trunk.01.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7092//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13762335" author="ndimiduk" created="Mon, 9 Sep 2013 21:35:18 +0000"  >&lt;p&gt;Hmm. Looks like test TestResourceFilter is flakey? It ran in build &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7090//testReport/org.apache.hadoop.hbase.rest/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;#7090&lt;/a&gt; but not &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7089/testReport/org.apache.hadoop.hbase.rest/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;#7089&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&apos;m in favor of adopting the streaming model going forward. The patch structure looks good to me as well. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; how do you recommend &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=avandana&quot; class=&quot;user-hover&quot; rel=&quot;avandana&quot;&gt;Vandana Ayyalasomayajula&lt;/a&gt; processed regarding the API changes and deprecating the existing interface?&lt;/p&gt;</comment>
                            <comment id="13762393" author="avandana" created="Mon, 9 Sep 2013 22:27:53 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; TestResourceFilter is not checked in yet. Its part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9347&quot; title=&quot;Support for enabling servlet filters for REST service&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9347&quot;&gt;&lt;del&gt;HBASE-9347&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="13762406" author="ndimiduk" created="Mon, 9 Sep 2013 22:40:27 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=avandana&quot; class=&quot;user-hover&quot; rel=&quot;avandana&quot;&gt;Vandana Ayyalasomayajula&lt;/a&gt; so it is &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13765837" author="avandana" created="Thu, 12 Sep 2013 19:57:08 +0000"  >&lt;p&gt;rebased on open source&lt;/p&gt;</comment>
                            <comment id="13765888" author="hadoopqa" created="Thu, 12 Sep 2013 20:59:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12602864/HBASE-9343_trunk.02.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12602864/HBASE-9343_trunk.02.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestMasterObserver&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestAggregateProtocol&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableInputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestTimeRangeMapRed&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestRowCounter&lt;br/&gt;
                  org.apache.hadoop.hbase.io.encoding.TestChangingEncoding&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestHTableUtil&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestOpenTableInCoprocessor&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestClassLoading&lt;br/&gt;
                  org.apache.hadoop.hbase.thrift.TestThriftServer&lt;br/&gt;
                  org.apache.hadoop.hbase.master.cleaner.TestSnapshotFromMaster&lt;br/&gt;
                  org.apache.hadoop.hbase.trace.TestHTraceHooks&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestCopyTable&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportExport&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestHTablePool$TestHTableThreadLocalPool&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestMergeTool&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles&lt;br/&gt;
                  org.apache.hadoop.hbase.security.access.TestTablePermissions&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestExportSnapshot&lt;br/&gt;
                  org.apache.hadoop.hbase.TestZooKeeper&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithRemove&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestCloneSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.security.access.TestZKPermissionsWatcher&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestClientTimeouts&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestSnapshotCloneIndependence&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterFailoverBalancerPersistence&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan2&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSideNoCodec&lt;br/&gt;
                  org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildOverlap&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestMultiParallel&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildBase&lt;br/&gt;
                  org.apache.hadoop.hbase.security.access.TestAccessControlFilter&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithAbort&lt;br/&gt;
                  org.apache.hadoop.hbase.thrift.TestThriftServerCmdLine&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegion&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestTimestampsFilter&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestRegionSplitter&lt;br/&gt;
                  org.apache.hadoop.hbase.catalog.TestMetaMigrationConvertingToPB&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestMetaScanner&lt;br/&gt;
                  org.apache.hadoop.hbase.master.snapshot.TestSnapshotFileCache&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionObserverBypass&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestMultipleTimestamps&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.master.handler.TestCreateTableHandler&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterMetricsWrapper&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterRestartAfterDisablingTable&lt;br/&gt;
                  org.apache.hadoop.hbase.TestAcidGuarantees&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestRollingRestart&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.TestFullLogReconstruction&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionObserverScannerOpenHook&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestBigDecimalColumnInterpreter&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestWALPlayer&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestScannersFromClientSide&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestMasterCoprocessorExceptionWithRemove&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestCellCounter&lt;br/&gt;
                  org.apache.hadoop.hbase.TestIOFencing&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHLogRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterTransitions&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestScannerTimeout&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestClientScannerRPCTimeout&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestMergeTable&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestServerCustomProtocol&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestShell&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestRestartCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestMultithreadedTableMapper&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestMasterCoprocessorExceptionWithAbort&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestMiniClusterLoadParallel&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestSnapshotMetadata&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestHTablePool$TestHTableReusablePool&lt;br/&gt;
                  org.apache.hadoop.hbase.TestDrainingServer&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestMiniClusterLoadSequential&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterFileSystem&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestZKBasedOpenCloseRegion&lt;br/&gt;
                  org.apache.hadoop.hbase.zookeeper.TestZooKeeperACL&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestCoprocessorScanPolicy&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestOpenedRegionHandler&lt;br/&gt;
                  org.apache.hadoop.hbase.io.TestFileLink&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterMetrics&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestHTableMultiplexer&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery&lt;br/&gt;
                  org.apache.hadoop.hbase.backup.TestHFileArchiving&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestTableLockManager&lt;br/&gt;
                  org.apache.hadoop.hbase.master.handler.TestTableDescriptorModification&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHRegionPartitioner&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestHCM&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterShutdown&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestWALObserver&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestFlushSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSide&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestMiniClusterLoadEncoded&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestRegionPlacement&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSide3&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSideWithCoprocessor&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan1&lt;br/&gt;
                  org.apache.hadoop.hbase.security.access.TestAccessController&lt;br/&gt;
                  org.apache.hadoop.hbase.TestLocalHBaseCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.catalog.TestMetaReaderEditor&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestCoprocessorEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestFSUtils&lt;br/&gt;
                  org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildHole&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.master.cleaner.TestHFileCleaner&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMaster&lt;br/&gt;
                  org.apache.hadoop.hbase.io.encoding.TestLoadAndSwitchEncodeOnDisk&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestLogRolling&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestHBaseFsck&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestClusterId&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7195//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13767080" author="ndimiduk" created="Fri, 13 Sep 2013 22:32:44 +0000"  >&lt;p&gt;I&apos;m targeting 0.96.0 and trunk for this patch once questions are resolved. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; please push out if you feel differently.&lt;/p&gt;</comment>
                            <comment id="13767178" author="ndimiduk" created="Fri, 13 Sep 2013 23:40:21 +0000"  >&lt;p&gt;This is more of a design review/comment than specific to you patch. Let me know what you think.&lt;/p&gt;

&lt;p&gt;I&apos;m a fan of rolling out a streaming API for accessing CellSets. However, I think patch v2 is adding to existing confusion. From a data model perspective, hbase starts at the top with tables (well, namespaces now, but ignore that), followed by rows. For someone exploring the API, getting a listing of top-level entities makes sense (it would be nice to also get basic cluster info here, but that&apos;s a separate issue):&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;$ curl ... http://localhost:8080/ ; echo
{&quot;table&quot;:[{&quot;name&quot;:&quot;foo&quot;}]}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next logical step would be to get information about the table (ie, the schema) using &lt;tt&gt;GET /&amp;lt;table&amp;gt;&lt;/tt&gt;. Instead, they have to use &lt;tt&gt;GET /&amp;lt;table&amp;gt;/schema&lt;/tt&gt;. Let&apos;s set this aside a minute, let me come back to it.&lt;/p&gt;

&lt;p&gt;After that, &lt;tt&gt;GET /&amp;lt;table&amp;gt;/&amp;lt;rowkey&amp;gt;&lt;/tt&gt; works as expected (though you&apos;re excluded from requesting the &apos;schema&apos; rowkey).&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;$ curl ... http://localhost:8080/foo/r1 ; echo
{&quot;Row&quot;:[{&quot;key&quot;:&quot;cjE=&quot;,&quot;Cell&quot;:[{&quot;column&quot;:&quot;ZjE6&quot;,&quot;timestamp&quot;:1379113061705,&quot;$&quot;:&quot;ZW1wdHkh&quot;},{&quot;column&quot;:&quot;ZjE6YmFy&quot;,&quot;timestamp&quot;:1379113067612,&quot;$&quot;:&quot;YmF6&quot;}]}]}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;According to the HBase data model, I think this makes good sense.&lt;/p&gt;

&lt;p&gt;You can also perform simple prefix-filtered scans using the magical &quot;&amp;#42;&quot; (glob) character (again, excluding people from requesting the &apos;&amp;#42;&apos; rowkey).&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;$ curl ... http://localhost:8080/foo/r* ; echo
{&quot;Row&quot;:[{&quot;key&quot;:&quot;cjE=&quot;,&quot;Cell&quot;:[{&quot;column&quot;:&quot;ZjE6&quot;,&quot;timestamp&quot;:1379113061705,&quot;$&quot;:&quot;ZW1wdHkh&quot;},{&quot;column&quot;:&quot;ZjE6YmFy&quot;,&quot;timestamp&quot;:1379113067612,&quot;$&quot;:&quot;YmF6&quot;}]}]}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nicely self-consistent, &lt;tt&gt;GET /&amp;lt;table&amp;gt;/*&lt;/tt&gt; returns a full table scan.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;$ curl ... http://localhost:8080/foo/* ; echo
{&quot;Row&quot;:[{&quot;key&quot;:&quot;cjE=&quot;,&quot;Cell&quot;:[{&quot;column&quot;:&quot;ZjE6&quot;,&quot;timestamp&quot;:1379113061705,&quot;$&quot;:&quot;ZW1wdHkh&quot;},{&quot;column&quot;:&quot;ZjE6YmFy&quot;,&quot;timestamp&quot;:1379113067612,&quot;$&quot;:&quot;YmF6&quot;}]},{&quot;key&quot;:&quot;c2NoZW1h&quot;,&quot;Cell&quot;:[{&quot;column&quot;:&quot;ZjE6Zm9v&quot;,&quot;timestamp&quot;:1379114118517,&quot;$&quot;:&quot;ZG9lcyB0aGlzIHdvcms/&quot;}]}]}&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This patch introduces &lt;tt&gt;GET /&amp;lt;table&amp;gt;&lt;/tt&gt; not as table resource info, but as a way to list rows. Per my earlier comment, I think this should be reserved for table info.&lt;/p&gt;

&lt;p&gt;Does it make sense to instead roll this new streaming scanner stuff into the &lt;tt&gt;GET /&amp;lt;table&amp;gt;/&amp;#42;&lt;/tt&gt; functionality? &apos;&amp;#42;&apos; is special anyway, so why not extend it with these scanner creation query parameters? That way, we can move to an API that behaves like:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;GET / =&amp;gt; table list (and maybe cluster info?)
GET /&amp;lt;table&amp;gt; =&amp;gt; table info (existing /&amp;lt;table&amp;gt;/schema)
GET /&amp;lt;table&amp;gt;/&amp;lt;rowkey&amp;gt; =&amp;gt; existing behavior (+ your new streaming hotness?)
GET /&amp;lt;table&amp;gt;/&amp;lt;optional_prefix&amp;gt;* =&amp;gt; existing behavior (+ your new streaming hotness!)
GET /&amp;lt;table&amp;gt;/&amp;lt;optional_prefix&amp;gt;*?&amp;lt;filter_args...&amp;gt; =&amp;gt; all your new streaming hotness plus implied rowkey prefix filter.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think this starts to look like a more idiomatic rest API. What do you guys think?&lt;/p&gt;

&lt;p&gt;(We should also figure out and document how a user retrieves their precious data hidden behind the rowkeys &apos;&amp;#42;&apos;, &apos;schema&apos;, &amp;amp;c.)&lt;/p&gt;</comment>
                            <comment id="13768486" author="ndimiduk" created="Mon, 16 Sep 2013 16:57:50 +0000"  >&lt;p&gt;Moving out to 0.96.1.&lt;/p&gt;</comment>
                            <comment id="13770484" author="devaraj" created="Wed, 18 Sep 2013 06:22:01 +0000"  >&lt;p&gt;Not sure whether this would work or not but would this work - we host the &quot;scan&quot; at /&amp;lt;table&amp;gt;/scan?&amp;lt;queryParams&amp;gt;. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;, not meaning to rush it, but maybe we can have the discussion based on your writeup in a follow up jira?&lt;/p&gt;</comment>
                            <comment id="13770948" author="ndimiduk" created="Wed, 18 Sep 2013 16:47:06 +0000"  >&lt;p&gt;Yes, you&apos;re probably right &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt;. Is there a way we can push this into the existing &lt;tt&gt;/&amp;lt;table&amp;gt;/scanner&lt;/tt&gt; API? Currently that endpoint expects a PUT or POST to request a scanner creation. Can we put the GET onto the same endpoint to initiate the streaming connection? At least then all the scanner stuff is in the same place.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=avandana&quot; class=&quot;user-hover&quot; rel=&quot;avandana&quot;&gt;Vandana Ayyalasomayajula&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; What do you think?&lt;/p&gt;</comment>
                            <comment id="13771095" author="toffer" created="Wed, 18 Sep 2013 18:49:54 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; IMHO adding the new streaming scanner api to /&amp;lt;table&amp;gt;/scanner would convolute that resource. I think your original proposal of &apos;&amp;lt;table&amp;gt;/*&apos; (AKA suffix globing in the doc) is inline with existing apis and I&apos;d be more amenable to that. It seems that the suffix globing api only has one query parameter so there shouldn&apos;t be any conflicts. Are we trying to avoid adding a new resource, is that the concern?&lt;/p&gt;</comment>
                            <comment id="13771390" author="ndimiduk" created="Wed, 18 Sep 2013 23:33:20 +0000"  >&lt;p&gt;The reason I suggest &lt;tt&gt;/&amp;lt;table&amp;gt;/scanner&lt;/tt&gt; is because that&apos;s already where you go to scan over data in the table. The parameters outlined in this ticket&apos;s description are almost identical to the &lt;a href=&quot;http://hbase.apache.org/devapidocs/org/apache/hadoop/hbase/rest/package-summary.html#pbufschema&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;existing&lt;/a&gt; scanner parameters. By making them identical and having the client hit the same location, the user API maintains consistency.&lt;/p&gt;</comment>
                            <comment id="13771455" author="toffer" created="Thu, 19 Sep 2013 00:37:45 +0000"  >&lt;p&gt;I see thanks for the explanation. The reason I&apos;m saying it&apos;s convoluting the api is that semantically the current api exposes scanner as a resource, you can create one, iterate through it and remove it. While the scanner we are proposing is a method (as opposed to a resource) on a table resource. Intuitively it would seem a get on the scanner resource should return information about the scanner. Hence my favoring your original proposal. I don&apos;t think we can really maintain api consistency since the semantics are different so might as well see were this new api best fits?&lt;/p&gt;</comment>
                            <comment id="13771464" author="toffer" created="Thu, 19 Sep 2013 00:48:01 +0000"  >&lt;p&gt;*Sorry meant convolute the resource.&lt;/p&gt;</comment>
                            <comment id="13771477" author="ndimiduk" created="Thu, 19 Sep 2013 01:02:58 +0000"  >&lt;p&gt;Yeah. I guess my issue comes down to the scanner as a resource at all. It&apos;s not a data component or part of addressing data, so IMHO the user shouldn&apos;t be thinking about it &amp;#8211; it&apos;s just an artifact of how the current API facilitates data retrieval.&lt;/p&gt;

&lt;p&gt;I hear what you&apos;re saying though. Since your proposal fits relatively well with the existing semantics of &lt;tt&gt;GET /&amp;lt;table&amp;gt;/&amp;lt;rowprefix&amp;gt;*&lt;/tt&gt;, let&apos;s see what the API and code look like if you attach it there. Including some invocation examples will be very helpful.&lt;/p&gt;

&lt;p&gt;Thanks for bearing with me as I don the usability hat.&lt;/p&gt;</comment>
                            <comment id="13838694" author="apurtell" created="Wed, 4 Dec 2013 07:46:46 +0000"  >&lt;p&gt;Moving out of 0.98.0&lt;/p&gt;</comment>
                            <comment id="13870031" author="avandana" created="Mon, 13 Jan 2014 21:51:16 +0000"  >&lt;p&gt;Attached new patch with changes for scanning table using: &lt;br/&gt;
GET /&amp;lt;table&amp;gt;/*&lt;/p&gt;</comment>
                            <comment id="13870117" author="hadoopqa" created="Mon, 13 Jan 2014 23:28:33 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12622713/HBASE-9343_trunk.03.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12622713/HBASE-9343_trunk.03.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12622713&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +        rModel.addCell(new CellModel(CellUtil.cloneFamily(kv), CellUtil.cloneQualifier(kv), kv.getTimestamp(),&lt;br/&gt;
+      @DefaultValue(Integer.MAX_VALUE + &quot;&quot;) @QueryParam(Constants.SCAN_LIMIT) int userRequestedLimit,&lt;br/&gt;
+      @DefaultValue(Integer.MAX_VALUE + &quot;&quot;) @QueryParam(Constants.SCAN_LIMIT) int userRequestedLimit,&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestHBaseFsck&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8407//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13870227" author="avandana" created="Tue, 14 Jan 2014 01:06:30 +0000"  >&lt;p&gt;This patch fixes the line lengths issue raised by HadoopQA. Also the behavior now is the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GET /&amp;lt;table&amp;gt;/&amp;lt;rowkey&amp;gt; =&amp;gt; existing behavior &lt;br/&gt;
GET /&amp;lt;table&amp;gt;/&amp;lt;optional_prefix&amp;gt;* =&amp;gt; new streaming scanner with prefix filter.&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/&amp;lt;optional_prefix&amp;gt;*?&amp;lt;scan_args...&amp;gt; =&amp;gt; new streaming scanner with prefix filter and scan parameters.&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/* =&amp;gt; new streaming scanner&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/*?&amp;lt;scan_args...&amp;gt; =&amp;gt; new streaming scanner with scan parameters.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13870228" author="avandana" created="Tue, 14 Jan 2014 01:07:12 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; &amp;#8211; If you have time, could you please review the latest patch ? Thanks!&lt;/p&gt;</comment>
                            <comment id="13870376" author="hadoopqa" created="Tue, 14 Jan 2014 04:29:43 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12622756/HBASE-9343_trunk.04.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12622756/HBASE-9343_trunk.04.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12622756&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8413//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13871535" author="apurtell" created="Wed, 15 Jan 2014 02:08:53 +0000"  >&lt;p&gt;We have been neglecting this issue, I apologize.&lt;/p&gt;

&lt;p&gt;I am inclined to commit this on the grounds of having had several review cycles and being driven by user need. Anyone disagree?&lt;/p&gt;</comment>
                            <comment id="13871536" author="apurtell" created="Wed, 15 Jan 2014 02:09:57 +0000"  >&lt;p&gt;The only thing I would ask is an update to the documentation on the new behaviors.&lt;/p&gt;</comment>
                            <comment id="13871599" author="ndimiduk" created="Wed, 15 Jan 2014 03:37:15 +0000"  >&lt;p&gt;This is really nice, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=avandana&quot; class=&quot;user-hover&quot; rel=&quot;avandana&quot;&gt;Vandana Ayyalasomayajula&lt;/a&gt;! I think this will make using this API a lot more intuitive for web developers. Per Andrew&apos;s request, a new section added to the rest package javadoc would be fantastic. Do you see deprecation of the existing /&amp;lt;table&amp;gt;/scanner resources in a future patch?&lt;/p&gt;

&lt;p&gt;I do have one question though, which is: how does this interact with the existing row-based &lt;a href=&quot;https://hbase.apache.org/apidocs/org/apache/hadoop/hbase/rest/package-summary.html#operation_cell_query_multiple&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;suffix-globbing&lt;/a&gt;? Are these APIs compatible? Your new goodness should be a superset of that functionality, right?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;: Pending some docs, are you keen on letting this slip into your RC?&lt;/p&gt;</comment>
                            <comment id="13871673" author="stack" created="Wed, 15 Jan 2014 05:38:44 +0000"  >&lt;p&gt;That is sufficient justification for me &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13871695" author="avandana" created="Wed, 15 Jan 2014 06:00:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; I added testSuffixGlobbingXML test in TestGetAndPutResource to make sure existing row based suffix-globbing behavior is consistent. As mentioned in the above document, it will boil down to scanner with prefix filter. &lt;br/&gt;
Can I add a dependent jira for documentation and old scanner deprecation if needed ?&lt;br/&gt;
Thanks all for quick reviews. &lt;/p&gt;</comment>
                            <comment id="13871706" author="avandana" created="Wed, 15 Jan 2014 06:16:43 +0000"  >&lt;p&gt;The following API will not work since the same parameters need to be specified a differently (as query params) with the new scanner. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GET /&amp;lt;table&amp;gt;/&amp;lt;rowprefix&amp;gt;*/( &amp;lt;column&amp;gt; ( : &amp;lt;qualifier&amp;gt; )?&lt;br/&gt;
      ( , &amp;lt;column&amp;gt; ( : &amp;lt;qualifier&amp;gt; )? )+ )?&lt;br/&gt;
    ( / ( &amp;lt;start-timestamp&amp;gt; &apos;,&apos; )? &amp;lt;end-timestamp&amp;gt; )? )?&lt;br/&gt;
  ( ?v= &amp;lt;num-versions&amp;gt; )?&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13871766" author="apurtell" created="Wed, 15 Jan 2014 07:30:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can I add a dependent jira for documentation and old scanner deprecation if needed ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The following API will not work since the same parameters need to be specified a differently (as query params) with the new scanner.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, this could possibly go into 0.98 if old APIs and behaviors are deprecated in 0.96 and documented as such in the online manual. That would depend on what Stack wants to let in. In any case it looks like we could use an update of this patch that also includes a new section for the online manual on the difference in REST API before and after this patch. That will help us evaluate what branches it should ultimately go into.&lt;/p&gt;</comment>
                            <comment id="13872306" author="ndimiduk" created="Wed, 15 Jan 2014 17:37:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;The following API will not work since the same parameters need to be specified a differently (as query params) with the new scanner.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s what I was afraid of. We&apos;ll need to make sure we stage the API change responsibly. @stack, your attention as 0.96 RM is requested.&lt;/p&gt;</comment>
                            <comment id="13872307" author="ndimiduk" created="Wed, 15 Jan 2014 17:38:18 +0000"  >&lt;p&gt;Derp. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; ^^^&lt;/p&gt;</comment>
                            <comment id="13872347" author="stack" created="Wed, 15 Jan 2014 18:14:01 +0000"  >&lt;p&gt;Not for 0.96 right?  That is long gone.  Hurry up for 0.98?&lt;/p&gt;</comment>
                            <comment id="13872364" author="ndimiduk" created="Wed, 15 Jan 2014 18:21:08 +0000"  >&lt;p&gt;No, not the new feature for 0.96. I was thinking in mind of deprecating APIs.&lt;/p&gt;

&lt;p&gt;Do we only introduce new deprecation markers in a point release, not patch releases?&lt;/p&gt;</comment>
                            <comment id="13872367" author="apurtell" created="Wed, 15 Jan 2014 18:22:46 +0000"  >&lt;p&gt;This shouldn&apos;t go into 0.98 unless the old behaviors are deprecated in 0.96. There should be decorations and printed warnings and such. Otherwise, we could put those things into 0.98 and the feature into whatever comes after.&lt;/p&gt;</comment>
                            <comment id="13872372" author="stack" created="Wed, 15 Jan 2014 18:24:15 +0000"  >&lt;p&gt;IMO, deprecation after major release &amp;#8211; in point release &amp;#8211; doesn&apos;t count.  No harm adding them though.&lt;/p&gt;</comment>
                            <comment id="13872378" author="ndimiduk" created="Wed, 15 Jan 2014 18:27:54 +0000"  >&lt;p&gt;Thank you, gentlemen, for the clarification.&lt;/p&gt;</comment>
                            <comment id="13872380" author="avandana" created="Wed, 15 Jan 2014 18:28:26 +0000"  >&lt;p&gt;We would like to have this patch to go in 0.96 as well as 0.98 . I can create two separated patches depending on what is required to be done for each branch.&lt;/p&gt;</comment>
                            <comment id="13872383" author="apurtell" created="Wed, 15 Jan 2014 18:28:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;IMO, deprecation after major release &#8211; in point release &#8211; doesn&apos;t count. No harm adding them though.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So then we only get one chance at each .0 to do deprecations? That is ... limiting. I tend to look at each major release as one product. Any 0.94.x is 0.94, any 0.96.x is 0.96, and such. My expectation is deploys are following along the minor version progression. Therefore they will notice a deprecation. Every user is different, but we have a choice to generalize in a way that is really restrictive on us or one that gives us more flexibility to get things out in usable releases sooner.&lt;/p&gt;</comment>
                            <comment id="13872385" author="apurtell" created="Wed, 15 Jan 2014 18:30:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;We would like to have this patch to go in 0.96 as well as 0.98 . I can create two separated patches depending on what is required to be done for each branch.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This patch can&apos;t go into 0.96. That should be clear. We are talking about deprecations int 0.96 that make it possible to put it into 0.98. &lt;/p&gt;</comment>
                            <comment id="13872396" author="stack" created="Wed, 15 Jan 2014 18:35:40 +0000"  >&lt;p&gt;We need to get to 1.0 (smile).  I&apos;d be fine if we agree deprecation in a point release &apos;counts&apos;.  We can revisit when up on 1.0.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=avandana&quot; class=&quot;user-hover&quot; rel=&quot;avandana&quot;&gt;Vandana Ayyalasomayajula&lt;/a&gt; Could only go into 0.96 if it didn&apos;t break current REST (0.98 is wire and API compatiblie w/ 0.96 FYI).&lt;/p&gt;</comment>
                            <comment id="13872427" author="apurtell" created="Wed, 15 Jan 2014 18:59:48 +0000"  >&lt;p&gt;0.98 should be wire compatible with 0.96, unless we have deprecated something in 0.96 as fair warning, if we agree that deprecation in point releases counts, at least for now. This change breaks wire compatibility so we need fair warning allowed into 0.96 in order for the feature itself to go into 0.98. &lt;/p&gt;</comment>
                            <comment id="13872567" author="avandana" created="Wed, 15 Jan 2014 20:39:29 +0000"  >&lt;p&gt;I have attached a new patch that maintains compatability with older APIs:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GET /&amp;lt;table&amp;gt;/&amp;lt;rowkey&amp;gt; =&amp;gt; existing behavior &lt;br/&gt;
GET /&amp;lt;table&amp;gt;/&amp;lt;optional_prefix&amp;gt;*/&amp;lt;columns&amp;gt;/ =&amp;gt; existing behavior&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/&amp;lt;optional_prefix&amp;gt;* =&amp;gt; new streaming scanner with prefix filter.&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/&amp;lt;optional_prefix&amp;gt;*?&amp;lt;scan_args...&amp;gt; =&amp;gt; new streaming scanner with prefix filter and scan parameters.&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/* =&amp;gt; new streaming scanner&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/*?&amp;lt;scan_args...&amp;gt; =&amp;gt; new streaming scanner with scan parameters&lt;/p&gt;&lt;/blockquote&gt;

</comment>
                            <comment id="13872668" author="hadoopqa" created="Wed, 15 Jan 2014 22:07:46 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12623219/HBASE-9343_trunk.05.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12623219/HBASE-9343_trunk.05.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12623219&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8438//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13872692" author="apurtell" created="Wed, 15 Jan 2014 22:23:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;I have attached a new patch that maintains compatability with older APIs:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Great, I have no further concerns about putting in trunk or 0.98. Thanks.&lt;br/&gt;
Edit: But I don&apos;t see doc updates in the new patch for the new behaviors. Not a must but would be great.&lt;/p&gt;</comment>
                            <comment id="13872697" author="avandana" created="Wed, 15 Jan 2014 22:26:11 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; Can I create a new jira for documenting the new scanner ? &lt;/p&gt;</comment>
                            <comment id="13872708" author="apurtell" created="Wed, 15 Jan 2014 22:32:01 +0000"  >&lt;p&gt;Can we have the doc before cutting the 0.98 RC (within days)?&lt;/p&gt;</comment>
                            <comment id="13872717" author="avandana" created="Wed, 15 Jan 2014 22:34:44 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; Definitely. I will start working on documentation asap.&lt;/p&gt;</comment>
                            <comment id="13872733" author="apurtell" created="Wed, 15 Jan 2014 22:47:09 +0000"  >&lt;p&gt;Ok, +1 to commit the latest patch with a follow up issue for docs. I can do this for trunk and 0.98 in a bit. Feel free to do so ahead of me if you like &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13872913" author="ndimiduk" created="Thu, 16 Jan 2014 01:23:09 +0000"  >&lt;p&gt;Let me be pedantic for a moment here.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;GET /&amp;lt;table&amp;gt;/&amp;lt;rowkey&amp;gt; =&amp;gt; existing behavior &lt;br/&gt;
GET /&amp;lt;table&amp;gt;/&amp;lt;optional_prefix&amp;gt;*/&amp;lt;columns&amp;gt;/ =&amp;gt; existing behavior&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/&amp;lt;optional_prefix&amp;gt;* =&amp;gt; new streaming scanner with prefix filter.&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/&amp;lt;optional_prefix&amp;gt;*?&amp;lt;scan_args...&amp;gt; =&amp;gt; new streaming scanner with prefix filter and scan parameters.&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/* =&amp;gt; new streaming scanner&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/*?&amp;lt;scan_args...&amp;gt; =&amp;gt; new streaming scanner with scan parameters&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;These explicitly overlap with the existing documented behavior in the &lt;a href=&quot;https://hbase.apache.org/apidocs/org/apache/hadoop/hbase/rest/package-summary.html#operation_cell_query_multiple&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;package-info&lt;/a&gt;. Specifically, I&apos;m looking at the suffix-globbing functionality. Meaning, I think your patch overrides existing APIs on&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;GET /&amp;lt;table&amp;gt;/&amp;lt;optional_prefix&amp;gt;*&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/&amp;lt;optional_prefix&amp;gt;*?&amp;lt;scan_args...&amp;gt;&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/*&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The semantics of your new scanner &lt;b&gt;must&lt;/b&gt; match the semantics of the original feature, both in terms of the accepted arguments and the response body. If I understand this correctly, this patch is faithful to argument consistency, but I&apos;m concerned that it&apos;s inconsistent in the response body by design &amp;#8211; it&apos;s a streamed response instead of the existing response. I&apos;m not an expert in the HTTP protocol spec; is this difference going to be transparent to or break existing clients?&lt;/p&gt;</comment>
                            <comment id="13872933" author="avandana" created="Thu, 16 Jan 2014 01:39:43 +0000"  >&lt;p&gt;I think the new scanner overrides the following existing APIs&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GET /&amp;lt;table&amp;gt;/&amp;lt;optional_prefix&amp;gt;*&lt;br/&gt;
GET /&amp;lt;table&amp;gt;/*&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Scan arguments are not taken as query parameters in the existing APIs. I added unit tests testSuffixGlobbingXMLWithNewScanner() and testSuffixGlobbingXML() to make sure the responses are not different. The new scanner uses the same RowModel class for streaming, hidden under CellSetModelStream class ( TableScanResource.java). The XML tags are the same, so the unmarshaller  unmarshalls the response body in the same manner.&lt;/p&gt;</comment>
                            <comment id="13872949" author="jxiang" created="Thu, 16 Jan 2014 01:52:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;1. If start row, end row and limit not specified, then the whole table will be scanned.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This sounds to be not good. If the table is huge, are we still going to return the whole table? I was wondering if we should have a default max data size, and if the max cap is reached, return what we have so far with a flag saying there are more data to fetch. Without a cap, the REST server will be easily OOM.&lt;/p&gt;</comment>
                            <comment id="13873627" author="ndimiduk" created="Thu, 16 Jan 2014 17:20:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;the unmarshaller unmarshalls the response body in the same manner.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks, that&apos;s exactly what I needed to hear.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If the table is huge, are we still going to return the whole table?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, that&apos;s the behavior of today, AFAIK. At least, with the new streaming response, a single client won&apos;t overrun a singe gateway instance anymore. Does that sound right, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=avandana&quot; class=&quot;user-hover&quot; rel=&quot;avandana&quot;&gt;Vandana Ayyalasomayajula&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Pending any further objections, I&apos;ll commit to 0.98 and trunk this afternoon. Let&apos;s get &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10346&quot; title=&quot;Add Documentation for stateless scanner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10346&quot;&gt;&lt;del&gt;HBASE-10346&lt;/del&gt;&lt;/a&gt; in soon too so as to not keep the 0.98RC waiting.&lt;/p&gt;</comment>
                            <comment id="13873633" author="ndimiduk" created="Thu, 16 Jan 2014 17:23:44 +0000"  >&lt;p&gt;With the latest patch here that maintains backward compatibility, is there anything to do for the next 0.96 patch release? Sounds to me like not...&lt;/p&gt;</comment>
                            <comment id="13873755" author="apurtell" created="Thu, 16 Jan 2014 18:51:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;With the latest patch here that maintains backward compatibility, is there anything to do for the next 0.96 patch release? Sounds to me like not...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No&lt;/p&gt;</comment>
                            <comment id="13873800" author="avandana" created="Thu, 16 Jan 2014 19:14:23 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt; &amp;#8211; I currently have the default limit to Integer.MAX, I can change it to some good value. I can take that up as a dependent JIRA. What do you think a good value is ? We send the rows lazily to the client, so server being OOM is less likely issue. Even in that case, the client can resend the request with updated scan parameters, so that scanning can be continued. &lt;/p&gt;</comment>
                            <comment id="13873809" author="jxiang" created="Thu, 16 Jan 2014 19:22:13 +0000"  >&lt;p&gt;Can we at least make it configurable? It is fine with me to do it in a separate issue.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13874342" author="ndimiduk" created="Fri, 17 Jan 2014 02:33:53 +0000"  >&lt;p&gt;Committed to 0.98 and trunk. Thanks for another nice improvement, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=avandana&quot; class=&quot;user-hover&quot; rel=&quot;avandana&quot;&gt;Vandana Ayyalasomayajula&lt;/a&gt;!&lt;/p&gt;</comment>
                            <comment id="13874443" author="hudson" created="Fri, 17 Jan 2014 05:12:38 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98 #89 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/89/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/89/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9343&quot; title=&quot;Implement stateless scanner for Stargate&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9343&quot;&gt;&lt;del&gt;HBASE-9343&lt;/del&gt;&lt;/a&gt; Implement stateless scanner for Stargate (Vandana Ayyalasomayajula) (ndimiduk: rev 1558995)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/Constants.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/MetricsREST.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/ProtobufStreamingUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/TableResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/TableScanResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/client/Client.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/client/Response.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestGetAndPutResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestScannerResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestTableScan.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13874477" author="hudson" created="Fri, 17 Jan 2014 06:01:25 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #4829 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4829/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4829/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9343&quot; title=&quot;Implement stateless scanner for Stargate&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9343&quot;&gt;&lt;del&gt;HBASE-9343&lt;/del&gt;&lt;/a&gt; Implement stateless scanner for Stargate (Vandana Ayyalasomayajula) (ndimiduk: rev 1558994)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/Constants.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/MetricsREST.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/ProtobufStreamingUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/TableResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/TableScanResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/client/Client.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/client/Response.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestGetAndPutResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestScannerResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestTableScan.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13874486" author="hudson" created="Fri, 17 Jan 2014 06:16:03 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #81 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/81/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/81/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9343&quot; title=&quot;Implement stateless scanner for Stargate&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9343&quot;&gt;&lt;del&gt;HBASE-9343&lt;/del&gt;&lt;/a&gt; Implement stateless scanner for Stargate (Vandana Ayyalasomayajula) (ndimiduk: rev 1558995)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/Constants.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/MetricsREST.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/ProtobufStreamingUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/TableResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/TableScanResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/client/Client.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/client/Response.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestGetAndPutResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestScannerResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestTableScan.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13875410" author="hudson" created="Fri, 17 Jan 2014 23:42:22 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK-on-Hadoop-1.1 #56 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-1.1/56/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-1.1/56/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9343&quot; title=&quot;Implement stateless scanner for Stargate&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9343&quot;&gt;&lt;del&gt;HBASE-9343&lt;/del&gt;&lt;/a&gt; Implement stateless scanner for Stargate (Vandana Ayyalasomayajula) (ndimiduk: rev 1558994)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop1-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSourceImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/Constants.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/MetricsREST.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/ProtobufStreamingUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/TableResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/TableScanResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/client/Client.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/client/Response.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestGetAndPutResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestScannerResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestTableScan.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14330979" author="enis" created="Sat, 21 Feb 2015 23:32:34 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12665609">HBASE-9345</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12689105">HBASE-10346</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12600031" name="HBASE-9343_94.00.patch" size="54477" author="avandana" created="Mon, 26 Aug 2013 22:05:24 +0000"/>
                            <attachment id="12601871" name="HBASE-9343_94.01.patch" size="54478" author="avandana" created="Fri, 6 Sep 2013 18:16:45 +0000"/>
                            <attachment id="12601923" name="HBASE-9343_trunk.00.patch" size="47269" author="avandana" created="Fri, 6 Sep 2013 23:07:23 +0000"/>
                            <attachment id="12602157" name="HBASE-9343_trunk.01.patch" size="49276" author="ndimiduk" created="Mon, 9 Sep 2013 16:14:12 +0000"/>
                            <attachment id="12601953" name="HBASE-9343_trunk.01.patch" size="49276" author="avandana" created="Sat, 7 Sep 2013 01:55:47 +0000"/>
                            <attachment id="12602864" name="HBASE-9343_trunk.02.patch" size="49769" author="avandana" created="Thu, 12 Sep 2013 19:57:08 +0000"/>
                            <attachment id="12622713" name="HBASE-9343_trunk.03.patch" size="50705" author="avandana" created="Mon, 13 Jan 2014 21:51:16 +0000"/>
                            <attachment id="12622756" name="HBASE-9343_trunk.04.patch" size="51044" author="avandana" created="Tue, 14 Jan 2014 01:06:30 +0000"/>
                            <attachment id="12623219" name="HBASE-9343_trunk.05.patch" size="53698" author="avandana" created="Wed, 15 Jan 2014 20:36:21 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 27 Aug 2013 01:31:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>345545</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1nl5r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>345846</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>scanner, rest</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>