<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:30:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5728/HBASE-5728.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5728] Methods Missing in HTableInterface</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5728</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Dear all,&lt;/p&gt;

&lt;p&gt;I found some methods existed in HTable were not in HTableInterface.&lt;/p&gt;

&lt;p&gt;   setAutoFlush&lt;br/&gt;
   setWriteBufferSize&lt;br/&gt;
   ...&lt;/p&gt;

&lt;p&gt;In most cases, I manipulate HBase through HTableInterface from HTablePool. If I need to use the above methods, how to do that?&lt;/p&gt;

&lt;p&gt;I am considering writing my own table pool if no proper ways. Is it fine?&lt;/p&gt;

&lt;p&gt;Thanks so much!&lt;/p&gt;

&lt;p&gt;Best regards,&lt;br/&gt;
Bing&lt;/p&gt;</description>
                <environment></environment>
        <key id="12549744">HBASE-5728</key>
            <summary>Methods Missing in HTableInterface</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jxiang">Jimmy Xiang</assignee>
                                    <reporter username="greatfree">Bing Li</reporter>
                        <labels>
                    </labels>
                <created>Thu, 5 Apr 2012 15:59:48 +0000</created>
                <updated>Thu, 2 May 2013 02:29:54 +0000</updated>
                            <resolved>Wed, 15 Aug 2012 15:46:46 +0000</resolved>
                                                    <fixVersion>0.94.2</fixVersion>
                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13247692" author="stack" created="Thu, 5 Apr 2012 21:26:12 +0000"  >&lt;p&gt;Want to make a patch Bing?&lt;/p&gt;</comment>
                            <comment id="13250521" author="larsgeorge" created="Tue, 10 Apr 2012 08:55:40 +0000"  >&lt;p&gt;Here is what you find only in HTable in 0.90.x:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ArrayList&amp;lt;Put&amp;gt; getWriteBuffer();
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getCurrentNrHRS() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HRegionLocation getRegionLocation(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; row) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HRegionLocation getRegionLocation(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] row) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HConnection getConnection();
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getScannerCaching();
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setScannerCaching(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; scannerCaching);
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][] getStartKeys() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][] getEndKeys() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Pair&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][]&amp;gt; getStartEndKeys() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Map&amp;lt;HRegionInfo, HServerAddress&amp;gt; getRegionsInfo() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void prewarmRegionCache(Map&amp;lt;HRegionInfo, HServerAddress&amp;gt; regionMap);
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void serializeRegionInfo(DataOutput out) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Map&amp;lt;HRegionInfo, HServerAddress&amp;gt; deserializeRegionInfo(DataInput in) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void clearRegionCache();
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setAutoFlush(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; autoFlush);
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setAutoFlush(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; autoFlush, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; clearBufferOnFail);  
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getWriteBufferSize();
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setWriteBufferSize(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; writeBufferSize) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException,
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Out of those we should check those that should be elevated into the HTableInterface. Sorting them a dropping some serialization related ones, I could think of these to be added:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HConnection getConnection();

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getScannerCaching();
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setScannerCaching(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; scannerCaching);

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][] getStartKeys() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][] getEndKeys() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Pair&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][]&amp;gt; getStartEndKeys() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Map&amp;lt;HRegionInfo, HServerAddress&amp;gt; getRegionsInfo() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HRegionLocation getRegionLocation(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; row) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HRegionLocation getRegionLocation(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] row) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void prewarmRegionCache(Map&amp;lt;HRegionInfo, HServerAddress&amp;gt; regionMap);
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void clearRegionCache();

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setAutoFlush(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; autoFlush);
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setAutoFlush(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; autoFlush, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; clearBufferOnFail);  

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getWriteBufferSize();
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setWriteBufferSize(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; writeBufferSize) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException,
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ArrayList&amp;lt;Put&amp;gt; getWriteBuffer();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is adding a lot to the interface, but we need to really decide what is &quot;generic&quot;, and what is an implementation detail needed only for a concrete class implementing HTableInterface.&lt;/p&gt;

&lt;p&gt;I could imagine getConnection() to be very specific to a remote table implementation. This might be not required for, for example, a HTableInterface implementation for coprocessors (i.e. the one returned by the copro context). &lt;/p&gt;

&lt;p&gt;This is open for feedback please!&lt;/p&gt;</comment>
                            <comment id="13250525" author="greatfree" created="Tue, 10 Apr 2012 09:03:20 +0000"  >&lt;p&gt;Stack,&lt;/p&gt;

&lt;p&gt;Thanks so much! You mean I need to fix the bug myself?&lt;/p&gt;

&lt;p&gt;Best,&lt;br/&gt;
Bing&lt;/p&gt;

</comment>
                            <comment id="13250740" author="stack" created="Tue, 10 Apr 2012 15:28:18 +0000"  >&lt;p&gt;@Bing Yes.  If you are up for it.&lt;/p&gt;

&lt;p&gt;@Lars Thanks for doing the research.  &lt;/p&gt;</comment>
                            <comment id="13250985" author="lhofhansl" created="Tue, 10 Apr 2012 19:26:47 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getScannerCaching();
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setScannerCaching(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; scannerCaching);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;These two are deprecated (in trunk at least), let&apos;s not add them to the interface.&lt;/p&gt;</comment>
                            <comment id="13424535" author="larsgeorge" created="Sun, 29 Jul 2012 12:44:28 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4054&quot; title=&quot;Usability improvement to HTablePool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4054&quot;&gt;&lt;del&gt;HBASE-4054&lt;/del&gt;&lt;/a&gt; needs some of the listed, missing methods to return to instantiating HTableInterface&apos;s as opposed to an extended HTable.&lt;/p&gt;</comment>
                            <comment id="13426024" author="lhofhansl" created="Tue, 31 Jul 2012 19:01:31 +0000"  >&lt;p&gt;These:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Map&amp;lt;HRegionInfo, HServerAddress&amp;gt; getRegionsInfo() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HRegionLocation getRegionLocation(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; row) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HRegionLocation getRegionLocation(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] row) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void prewarmRegionCache(Map&amp;lt;HRegionInfo, HServerAddress&amp;gt; regionMap);
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void clearRegionCache();

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getWriteBufferSize();
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setWriteBufferSize(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; writeBufferSize) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException,
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ArrayList&amp;lt;Put&amp;gt; getWriteBuffer();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;Would leak implementation stuff into the interface.&lt;br/&gt;
I think &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4054&quot; title=&quot;Usability improvement to HTablePool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4054&quot;&gt;&lt;del&gt;HBASE-4054&lt;/del&gt;&lt;/a&gt; specifically mentions, that &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Map&amp;lt;HRegionInfo, HServerAddress&amp;gt; getRegionsInfo() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; is needed. Hmm...&lt;/p&gt;</comment>
                            <comment id="13433297" author="jxiang" created="Mon, 13 Aug 2012 17:02:25 +0000"  >&lt;p&gt;Based on comments, I put up a patch.  It added the following methods to HTableInterface from HTable:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  public byte[][] getStartKeys() throws IOException;
  public byte[][] getEndKeys() throws IOException;
  public Pair&amp;lt;byte[][], byte[][]&amp;gt; getStartEndKeys() throws IOException;

  public void setAutoFlush(boolean autoFlush);
  public void setAutoFlush(boolean autoFlush, boolean clearBufferOnFail);

  public long getWriteBufferSize();
  public void setWriteBufferSize(long writeBufferSize) throws IOException,
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="13433373" author="hadoopqa" created="Mon, 13 Aug 2012 18:04:04 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12540691/trunk-5728.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12540691/trunk-5728.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestServerCustomProtocol&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2555//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13433631" author="jxiang" created="Mon, 13 Aug 2012 22:05:08 +0000"  >&lt;p&gt;Added one method:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  public NavigableMap&amp;lt;HRegionInfo, ServerName&amp;gt; getRegionLocations() throws IOException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is to replace &lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;public Map&amp;lt;HRegionInfo, HServerAddress&amp;gt; getRegionsInfo() throws IOException
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which is used by TableResource.&lt;/p&gt;</comment>
                            <comment id="13433777" author="lhofhansl" created="Tue, 14 Aug 2012 00:26:17 +0000"  >&lt;p&gt;There might be HTableInterface implementations where it makes no sense to even speak of start and end keys.&lt;/p&gt;

&lt;p&gt;I think we have three options here:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Keep HTableInterface pure as is, and use HTable directly when we need to know about the implementation.&lt;/li&gt;
	&lt;li&gt;Add all necessary methods to HTableInterface&lt;/li&gt;
	&lt;li&gt;Create another Interface - extending HTableInterface - which includes the needed implementation specific methods. Then we can decide in the using code what level of interface is needed.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Not sure which one is best.&lt;/p&gt;</comment>
                            <comment id="13433847" author="jxiang" created="Tue, 14 Aug 2012 03:16:01 +0000"  >&lt;p&gt;+1 for 2.&lt;/p&gt;

&lt;p&gt;It seems to me too HTableInterface doesn&apos;t need those start/end keys info.  So, how about adding the following methods for now?&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  public void setAutoFlush(boolean autoFlush);
  public void setAutoFlush(boolean autoFlush, boolean clearBufferOnFail);

  public long getWriteBufferSize();
  public void setWriteBufferSize(long writeBufferSize) throws IOException;

  public NavigableMap&amp;lt;HRegionInfo, ServerName&amp;gt; getRegionLocations() throws IOException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can always add more methods if needed later on.&lt;/p&gt;

&lt;p&gt;We can use Map instead of NavigableMap if makes sense.&lt;/p&gt;</comment>
                            <comment id="13433867" author="hadoopqa" created="Tue, 14 Aug 2012 04:20:33 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12540779/trunk-5728_v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12540779/trunk-5728_v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestReplication&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2560//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13433885" author="lhofhansl" created="Tue, 14 Aug 2012 04:54:38 +0000"  >&lt;p&gt;I&apos;m fine with #2. Returning NavigableMap is good here, because it let&apos;s the caller make gymnastics based on the order of the keys, which is sometimes useful.&lt;/p&gt;</comment>
                            <comment id="13433887" author="lhofhansl" created="Tue, 14 Aug 2012 04:55:38 +0000"  >&lt;p&gt;+1 on v2&lt;/p&gt;</comment>
                            <comment id="13434290" author="jxiang" created="Tue, 14 Aug 2012 17:36:25 +0000"  >&lt;p&gt;In v2, there are methods about start/end keys. Should we keep them in HTableInterface?&lt;/p&gt;</comment>
                            <comment id="13434428" author="jxiang" created="Tue, 14 Aug 2012 19:40:25 +0000"  >&lt;p&gt;v3 doesn&apos;t have start/end keys methods. We can add them later when needed.&lt;/p&gt;</comment>
                            <comment id="13434631" author="jmhsieh" created="Tue, 14 Aug 2012 23:30:05 +0000"  >&lt;p&gt;Hm.. why isn&apos;t  &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; NavigableMap&amp;lt;HRegionInfo, ServerName&amp;gt; getRegionLocations() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;in HBaseAdmin or something like that instead of HTable?&lt;/p&gt;

&lt;p&gt;HBaseAdmin seems to have these already which seem very related.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
List&amp;lt;HRegionInfo&amp;gt;	getTableRegions(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] tableName) 
List&amp;lt;HRegionInfo&amp;gt;	getOnlineRegions(ServerName sn) 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Seems like this is for metadata instead of for getting or putting data like the others.&lt;/p&gt;</comment>
                            <comment id="13434653" author="lhofhansl" created="Tue, 14 Aug 2012 23:51:07 +0000"  >&lt;p&gt;@Jimmy: Once we agreed to option #2 above let&apos;s just add all useful methods to the interface, that would include the start/end key methods.&lt;br/&gt;
@Jon: Excellent point. Maybe all metadata type operations should be removed from HTable.&lt;/p&gt;</comment>
                            <comment id="13434657" author="jxiang" created="Tue, 14 Aug 2012 23:54:33 +0000"  >&lt;p&gt;v4 removed getRegionLocations.  In TableResource/RegionsResource, we can use HBaseAdmin to get such info instead of using HTablePool.&lt;/p&gt;</comment>
                            <comment id="13434662" author="jxiang" created="Tue, 14 Aug 2012 23:57:10 +0000"  >&lt;p&gt;@Lars, yes, we can add all useful methods to the interface.  For now, I am not sure if the start/end key methods are useful.  They are for MR. getRegionLocations is for MR too.&lt;/p&gt;</comment>
                            <comment id="13434665" author="jmhsieh" created="Wed, 15 Aug 2012 00:04:05 +0000"  >&lt;p&gt;+1 v4.  Maybe file another jira if other metadata ops are in HTable and should be moved.  Lars this sound good to you?&lt;/p&gt;
</comment>
                            <comment id="13434676" author="lhofhansl" created="Wed, 15 Aug 2012 00:10:02 +0000"  >&lt;p&gt;@Jimmy: As an example we use these to parallelize scans across multiple region servers. But we just use HTables for that.&lt;/p&gt;</comment>
                            <comment id="13434717" author="hadoopqa" created="Wed, 15 Aug 2012 01:08:00 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12540981/trunk-5728_v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12540981/trunk-5728_v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2570//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13434752" author="apurtell" created="Wed, 15 Aug 2012 02:13:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;v4 removed getRegionLocations. In TableResource/RegionsResource, we can use HBaseAdmin to get such info instead of using HTablePool.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13434785" author="jxiang" created="Wed, 15 Aug 2012 03:28:29 +0000"  >&lt;p&gt;@Lars, I see. So should we go with patch 1?&lt;/p&gt;</comment>
                            <comment id="13434788" author="lhofhansl" created="Wed, 15 Aug 2012 03:42:29 +0000"  >&lt;p&gt;I&apos;m fine either way. If we do not want to keep the interface pure I&apos;m all for adding the *key methods there as well.&lt;/p&gt;</comment>
                            <comment id="13434795" author="jxiang" created="Wed, 15 Aug 2012 04:05:17 +0000"  >&lt;p&gt;isAutoFlush() is already in the interface. Just adding those auto flush related methods should not affect the purity of the interface. Let&apos;s go with v4, how is that?&lt;/p&gt;</comment>
                            <comment id="13434796" author="lhofhansl" created="Wed, 15 Aug 2012 04:06:58 +0000"  >&lt;p&gt;+1 on v4 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13434797" author="lhofhansl" created="Wed, 15 Aug 2012 04:07:52 +0000"  >&lt;p&gt;Let&apos;s put this into 0.94 as well. Unless we&apos;re worried about folks who have created their own implementations of HTableInterface.&lt;/p&gt;</comment>
                            <comment id="13435218" author="jxiang" created="Wed, 15 Aug 2012 15:46:46 +0000"  >&lt;p&gt;Thanks everyone. Patch v4 was integrated to 0.96 and 0.94.2.&lt;/p&gt;</comment>
                            <comment id="13435289" author="hudson" created="Wed, 15 Aug 2012 16:51:07 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3217 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3217/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3217/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5728&quot; title=&quot;Methods Missing in HTableInterface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5728&quot;&gt;&lt;del&gt;HBASE-5728&lt;/del&gt;&lt;/a&gt; Methods Missing in HTableInterface (Revision 1373481)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jxiang : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13435304" author="hudson" created="Wed, 15 Aug 2012 17:10:46 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #393 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/393/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/393/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5728&quot; title=&quot;Methods Missing in HTableInterface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5728&quot;&gt;&lt;del&gt;HBASE-5728&lt;/del&gt;&lt;/a&gt; Methods Missing in HTableInterface (Revision 1373480)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jxiang : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13435639" author="hudson" created="Thu, 16 Aug 2012 00:17:31 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #131 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/131/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/131/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5728&quot; title=&quot;Methods Missing in HTableInterface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5728&quot;&gt;&lt;del&gt;HBASE-5728&lt;/del&gt;&lt;/a&gt; Methods Missing in HTableInterface (Revision 1373481)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jxiang : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13435968" author="larsgeorge" created="Thu, 16 Aug 2012 13:49:45 +0000"  >&lt;p&gt;Sorry for being late here, but one thing that irks me is that you can set the buffer size, which already implies what the given values means, but have no means to return the buffer itself. Should we create a new JIRA that abstracts the write buffer into an interface that is returned? That way we can add it to HTableInterface as &quot;public WriteBuffer getWriteBuffer()&quot; or some such. Then the write buffer size as a long could be interpreted as whatever the actual implementation chooses?&lt;/p&gt;</comment>
                            <comment id="13436102" author="jxiang" created="Thu, 16 Aug 2012 17:01:33 +0000"  >&lt;p&gt;Autoflush or not implies there is a buffer too. However, I think the buffer itself should be kept hidden from the interface.  Otherwise, client app could mess around with it, which should be prevented, right?&lt;/p&gt;</comment>
                            <comment id="13439506" author="hudson" created="Wed, 22 Aug 2012 13:48:08 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #48 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/48/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/48/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5728&quot; title=&quot;Methods Missing in HTableInterface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5728&quot;&gt;&lt;del&gt;HBASE-5728&lt;/del&gt;&lt;/a&gt; Methods Missing in HTableInterface (Revision 1373480)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jxiang : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13448330" author="hudson" created="Wed, 5 Sep 2012 00:57:15 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #7 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/7/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/7/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5728&quot; title=&quot;Methods Missing in HTableInterface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5728&quot;&gt;&lt;del&gt;HBASE-5728&lt;/del&gt;&lt;/a&gt; Methods Missing in HTableInterface (Revision 1373480)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jxiang : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13624710" author="stack" created="Sun, 7 Apr 2013 05:10:38 +0000"  >&lt;p&gt;Fix up after bulk move overwrote some 0.94.2 fix versions w/ 0.95.0 (Noticed by Lars Hofhansl)&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12512478">HBASE-4054</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12600593">HBASE-6471</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12540691" name="trunk-5728.patch" size="8154" author="jxiang" created="Mon, 13 Aug 2012 16:59:54 +0000"/>
                            <attachment id="12540779" name="trunk-5728_v2.patch" size="10369" author="jxiang" created="Mon, 13 Aug 2012 22:01:43 +0000"/>
                            <attachment id="12540933" name="trunk-5728_v3.patch" size="7971" author="jxiang" created="Tue, 14 Aug 2012 19:39:43 +0000"/>
                            <attachment id="12540981" name="trunk-5728_v4.patch" size="5795" author="jxiang" created="Tue, 14 Aug 2012 23:53:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 5 Apr 2012 21:26:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>234735</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 36 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02gz3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12351</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>