<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:55:40 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14708/HBASE-14708.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14708] Use copy on write Map for region location cache</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14708</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Internally a co-worker profiled their application that was talking to HBase. &amp;gt; 60% of the time was spent in locating a region. This was while the cluster was stable and no regions were moving.&lt;/p&gt;

&lt;p&gt;To figure out if there was a faster way to cache region location I wrote up a benchmark here: &lt;a href=&quot;https://github.com/elliottneilclark/benchmark-hbase-cache&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/elliottneilclark/benchmark-hbase-cache&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This tries to simulate a heavy load on the location cache. &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;24 different threads.&lt;/li&gt;
	&lt;li&gt;2 Deleting location data&lt;/li&gt;
	&lt;li&gt;2 Adding location data&lt;/li&gt;
	&lt;li&gt;Using floor to get the result.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;To repeat my work just run ./run.sh and it should produce a result.csv&lt;/p&gt;

&lt;p&gt;Results:&lt;br/&gt;
ConcurrentSkiplistMap is a good middle ground. It&apos;s got equal speed for reading and writing.&lt;/p&gt;

&lt;p&gt;However most operations will not need to remove or add a region location. There will be potentially several orders of magnitude more reads for cached locations than there will be on clearing the cache.&lt;/p&gt;

&lt;p&gt;So I propose a copy on write tree map.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12908273">HBASE-14708</key>
            <summary>Use copy on write Map for region location cache</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="eclark">Elliott Clark</assignee>
                                    <reporter username="eclark">Elliott Clark</reporter>
                        <labels>
                    </labels>
                <created>Tue, 27 Oct 2015 16:17:30 +0000</created>
                <updated>Thu, 19 Nov 2015 12:55:36 +0000</updated>
                            <resolved>Tue, 17 Nov 2015 19:05:48 +0000</resolved>
                                    <version>1.1.2</version>
                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.2.0</fixVersion>
                    <fixVersion>1.3.0</fixVersion>
                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                <comments>
                            <comment id="14976674" author="eclark" created="Tue, 27 Oct 2015 16:30:42 +0000"  >&lt;p&gt;Notice that the delete location time scale is logarithmic.&lt;/p&gt;</comment>
                            <comment id="14976994" author="eclark" created="Tue, 27 Oct 2015 19:17:37 +0000"  >&lt;p&gt;&lt;a href=&quot;https://reviews.facebook.net/D49545&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D49545&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14977275" author="hadoopqa" created="Tue, 27 Oct 2015 22:20:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12769079/HBASE-14708.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12769079/HBASE-14708.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit d5d81d675ace2d87c4ac19562b6b0a29da3d8902.&lt;br/&gt;
  ATTACHMENT ID: 12769079&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The patch appears to cause mvn compile goal to fail with Hadoop version 2.4.0.&lt;/p&gt;

&lt;p&gt;    Compilation errors resume:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; COMPILATION ERROR : &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteTreeMap.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;241,27&amp;#93;&lt;/span&gt; cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteTreeMap.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;249,33&amp;#93;&lt;/span&gt; no suitable method found for remove(java.lang.Object,java.lang.Object)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteTreeMap.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;257,33&amp;#93;&lt;/span&gt; cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteTreeMap.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;265,27&amp;#93;&lt;/span&gt; cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.2:compile (default-compile) on project hbase-common: Compilation failure: Compilation failure:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteTreeMap.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;241,27&amp;#93;&lt;/span&gt; cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; symbol:   method putIfAbsent(K,V)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; location: variable newMap of type java.util.TreeMap&amp;lt;K,V&amp;gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteTreeMap.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;249,33&amp;#93;&lt;/span&gt; no suitable method found for remove(java.lang.Object,java.lang.Object)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; method java.util.TreeMap.remove(java.lang.Object) is not applicable&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; (actual and formal argument lists differ in length)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; method java.util.AbstractMap.remove(java.lang.Object) is not applicable&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; (actual and formal argument lists differ in length)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteTreeMap.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;257,33&amp;#93;&lt;/span&gt; cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; symbol:   method replace(K,V,V)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; location: variable newMap of type java.util.TreeMap&amp;lt;K,V&amp;gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteTreeMap.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;265,27&amp;#93;&lt;/span&gt; cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; symbol:   method replace(K,V)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; location: variable newMap of type java.util.TreeMap&amp;lt;K,V&amp;gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; To see the full stack trace of the errors, re-run Maven with the -e switch.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Re-run Maven using the -X switch to enable full debug logging.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; For more information about the errors and possible solutions, please read the following articles:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; After correcting the problems, you can resume the build with the command&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt;   mvn &amp;lt;goals&amp;gt; -rf :hbase-common&lt;/p&gt;


&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16250//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16250//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14977414" author="mbertozzi" created="Tue, 27 Oct 2015 23:57:39 +0000"  >&lt;p&gt;looks good to me, some time ago &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=esteban&quot; class=&quot;user-hover&quot; rel=&quot;esteban&quot;&gt;Esteban Gutierrez&lt;/a&gt; noticed the same SkipList bottleneck, I think even with a simple YCSB running.&lt;/p&gt;</comment>
                            <comment id="14977466" author="eclark" created="Wed, 28 Oct 2015 00:35:01 +0000"  >&lt;p&gt;Even more tests.&lt;/p&gt;</comment>
                            <comment id="14977730" author="hadoopqa" created="Wed, 28 Oct 2015 04:59:15 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12769165/HBASE-14708-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12769165/HBASE-14708-v4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 0e6dd3257b1bebe3e12c84aace59dd9cf0dcac2b.&lt;br/&gt;
  ATTACHMENT ID: 12769165&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 2 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestReplicationKillMasterRS&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSideWithCoprocessor&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestSizeFailures&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillMasterRSCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestFlushSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestHCM&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.multiwal.TestReplicationKillMasterRSCompressedWithMultipleWAL&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestServerCrashProcedure&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestHBaseFsckOneRS&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.multiwal.TestReplicationSyncUpToolWithMultipleWAL&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestHTableMultiplexerFlushCache&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestTruncateTableProcedure&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationSyncUpTool&lt;br/&gt;
                  org.apache.hadoop.hbase.TestMultiVersions&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSide&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16253//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16253//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16253//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16253//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16253//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16253//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16253//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16253//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16253//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16253//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14978634" author="eclark" created="Wed, 28 Oct 2015 15:50:56 +0000"  >&lt;p&gt;I broke some of the jdk7 safe methods. Here&apos;s a fix for that.&lt;/p&gt;</comment>
                            <comment id="14978770" author="hadoopqa" created="Wed, 28 Oct 2015 17:04:58 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12769314/HBASE-14708-v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12769314/HBASE-14708-v5.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 51538c5ff89dd7ee8e32ef4895d10bfc58045b17.&lt;br/&gt;
  ATTACHMENT ID: 12769314&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 2 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestInterfaceAudienceAnnotations&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16259//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16259//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16259//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16259//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16259//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16259//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16259//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16259//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16259//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16259//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14978828" author="eclark" created="Wed, 28 Oct 2015 17:29:21 +0000"  >&lt;p&gt;Docs and annotations.&lt;/p&gt;</comment>
                            <comment id="14979443" author="hadoopqa" created="Wed, 28 Oct 2015 23:12:35 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12769334/HBASE-14708-v6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12769334/HBASE-14708-v6.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 4b018d2a3988a70d98e2388d0013e63857c5e193.&lt;br/&gt;
  ATTACHMENT ID: 12769334&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 2 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16265//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16265//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16265//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16265//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16265//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16265//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16265//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16265//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16265//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16265//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14979694" author="hadoopqa" created="Thu, 29 Oct 2015 02:41:55 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12769439/HBASE-14708-v7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12769439/HBASE-14708-v7.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 273beceae213b4ea7ee60132b874b5a99ad83e4b.&lt;br/&gt;
  ATTACHMENT ID: 12769439&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16271//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16271//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16271//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16271//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16271//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16271//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16271//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16271//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14979835" author="ikeda" created="Thu, 29 Oct 2015 05:19:34 +0000"  >&lt;p&gt;Sorry for my wrong operation &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I just wanted to comment.&lt;/p&gt;

&lt;p&gt;CopyOnWriteTreeMap is not required to implement Map nor ConcurrentNavigableMap, which strained implementation breaks the intrinsic contracts of the interfaces. It is enough to prepare some methods.&lt;/p&gt;

&lt;p&gt;Using AtomicReference instead of synchronized for the internal map might be better (or not).&lt;/p&gt;</comment>
                            <comment id="14979852" author="eclark" created="Thu, 29 Oct 2015 05:35:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;CopyOnWriteTreeMap is not required to implement Map nor ConcurrentNavigableMap&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Quite a few of the methods of those interfaces are used in the meta cache. So it felt better to just use the interfaces and create something that could be more useful other places. There are already a few places that I want to look into using this as CSM is used all over the place in hbase.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Using AtomicReference instead of synchronized for the internal map might be better&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;So I benchmarked that. They end up looking pretty close to the same. Reading/Writing to either an atomic reference or a volatile field both require a memory barrier. Synchronized with a volatile came out slightly ahead for the read. Thought I am not sure why. Either way it should be negligible.&lt;/p&gt;

&lt;p&gt;If I went with the atomic reference I would have gone with the compare and swap. It would have bloated the size of each method. So without a clear benefit I went for the easiest to implement.&lt;/p&gt;</comment>
                            <comment id="14979964" author="ikeda" created="Thu, 29 Oct 2015 07:15:47 +0000"  >&lt;p&gt;Breaking contracts is a bug by itself and it is dangerous to allow.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So I benchmarked that.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oops sorry I should have checked more carefully.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If I went with the atomic reference I would have gone with the compare and swap. It would have bloated the size of each method.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I rather worry that cost of creation and copy of the internal map can waste if failed swapping, which fruitless cost and possibility might increase in accordance with the size of the map.&lt;/p&gt;

&lt;p&gt;BTW, how about using ConcurrentHashMap or something with a simple wrapper of a byte array? NavigableMap implementations requires several comparisons of bytes.&lt;/p&gt;</comment>
                            <comment id="14980244" author="ikeda" created="Thu, 29 Oct 2015 10:47:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;BTW, ...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ignore my silly opinion. I have realized NavigabaleMap is required.&lt;/p&gt;

&lt;p&gt;I played with the benchmark code for a while.&lt;/p&gt;

&lt;p&gt;TreeMap.floorEntry is very very light weight, and lock or synchronized is relatively too heavy so that there is little difference when replacing ReadWriteLock.readlock with writelock or Lock or synchronized, especially when the map just contains about 1000 elements.&lt;/p&gt;

&lt;p&gt;On the other hand, when putting/removing elements, ConcurrentSkipListMap is absolutely incomparable with TreeMap with these synchronizations. Using AtomicReference wastes too many resources when congested, and my cpus become full-throttle in vain. Just blocking other operations is better.&lt;/p&gt;</comment>
                            <comment id="14985003" author="ikeda" created="Mon, 2 Nov 2015 10:10:23 +0000"  >&lt;p&gt;I have tired to make several implementations and benchmark code myself, and I would like to attach the code and its output FYI.&lt;br/&gt;
It seems to be better to use an array and Arrays.binarySearch for copy-on-write.&lt;/p&gt;</comment>
                            <comment id="14986331" author="eclark" created="Tue, 3 Nov 2015 00:08:51 +0000"  >&lt;p&gt;Things like tailMap and other things that return sub maps get more complex. Lets get this in for branch-1 and branch-1.2 and then try the more radical array based for master.&lt;/p&gt;

&lt;p&gt;Sound like a plan ?&lt;/p&gt;</comment>
                            <comment id="14986436" author="eclark" created="Tue, 3 Nov 2015 01:13:49 +0000"  >&lt;p&gt;Blah second thought let me just do the right fix. I think I can get it before 1.2 is ready.&lt;/p&gt;</comment>
                            <comment id="14988631" author="ikeda" created="Wed, 4 Nov 2015 00:56:04 +0000"  >&lt;p&gt;If you are going to break the contract, there would be no problem to throw UnsupportedOperationException or something anywhere &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/tongue.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Some methods like tailMap should be implemented as copy-on-write, or should be at least read-only on humanitarian grounds.&lt;/p&gt;</comment>
                            <comment id="14988695" author="eclark" created="Wed, 4 Nov 2015 01:39:38 +0000"  >&lt;p&gt;Just attaching to get Jenkins to run. It for sure needs some more work. However it does tail map.&lt;/p&gt;</comment>
                            <comment id="14988811" author="hadoopqa" created="Wed, 4 Nov 2015 03:22:51 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12770491/HBASE-14708-v9.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12770491/HBASE-14708-v9.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 68717241040e6dad04958e49e5373887dd677dfd.&lt;br/&gt;
  ATTACHMENT ID: 12770491&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The patch appears to cause mvn compile goal to fail with Hadoop version 2.4.0.&lt;/p&gt;

&lt;p&gt;    Compilation errors resume:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; COMPILATION ERROR : &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteArrayMap.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;579,17&amp;#93;&lt;/span&gt; org.apache.hadoop.hbase.types.CopyOnWriteArrayMap.ArrayKeyIterator is not abstract and does not override abstract method remove() in java.util.Iterator&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteArrayMap.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;600,17&amp;#93;&lt;/span&gt; org.apache.hadoop.hbase.types.CopyOnWriteArrayMap.ArrayValueIterator is not abstract and does not override abstract method remove() in java.util.Iterator&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.2:compile (default-compile) on project hbase-common: Compilation failure: Compilation failure:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteArrayMap.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;579,17&amp;#93;&lt;/span&gt; org.apache.hadoop.hbase.types.CopyOnWriteArrayMap.ArrayKeyIterator is not abstract and does not override abstract method remove() in java.util.Iterator&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteArrayMap.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;600,17&amp;#93;&lt;/span&gt; org.apache.hadoop.hbase.types.CopyOnWriteArrayMap.ArrayValueIterator is not abstract and does not override abstract method remove() in java.util.Iterator&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; To see the full stack trace of the errors, re-run Maven with the -e switch.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Re-run Maven using the -X switch to enable full debug logging.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; For more information about the errors and possible solutions, please read the following articles:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; After correcting the problems, you can resume the build with the command&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt;   mvn &amp;lt;goals&amp;gt; -rf :hbase-common&lt;/p&gt;


&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16376//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16376//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14990501" author="hadoopqa" created="Wed, 4 Nov 2015 21:43:16 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12770665/HBASE-14708-v11.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12770665/HBASE-14708-v11.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 3e45755411f7cc1eb38832b48bf801f5a7947020.&lt;br/&gt;
  ATTACHMENT ID: 12770665&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1733 checkstyle errors (more than the master&apos;s current 1726 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 2 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +public class CopyOnWriteArrayMap&amp;lt;K,V&amp;gt; extends AbstractMap&amp;lt;K,V&amp;gt; implements Map&amp;lt;K,V&amp;gt;, ConcurrentNavigableMap&amp;lt;K,V&amp;gt; {&lt;br/&gt;
+    private ArrayHolder(Map.Entry&amp;lt;K,V&amp;gt;[] entries, int startIndex, int endIndex, Comparator&amp;lt;Map.Entry&amp;lt;K,V&amp;gt;&amp;gt; comparator) {&lt;br/&gt;
+public class CopyOnWriteTreeMap&amp;lt;K,V&amp;gt; implements Map&amp;lt;K,V&amp;gt;, ConcurrentNavigableMap&amp;lt;K,V&amp;gt;, TailMapable&amp;lt;K,V&amp;gt; {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestInterfaceAudienceAnnotations&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16388//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16388//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16388//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16388//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16388//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16388//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16388//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16388//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16388//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16388//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14990539" author="eclark" created="Wed, 4 Nov 2015 22:06:44 +0000"  >&lt;p&gt;Clean up checkstyle&lt;br/&gt;
Add headers to a file.&lt;br/&gt;
Combine the test files.&lt;/p&gt;</comment>
                            <comment id="14990781" author="hadoopqa" created="Thu, 5 Nov 2015 00:28:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12770694/HBASE-14708-v12.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12770694/HBASE-14708-v12.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 9fc7858c6bb2d0356267cd7bc4aac9e38294c40c.&lt;br/&gt;
  ATTACHMENT ID: 12770694&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1728 checkstyle errors (more than the master&apos;s current 1726 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestInterfaceAudienceAnnotations&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16392//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16392//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16392//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16392//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16392//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16392//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16392//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16392//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14991038" author="ikeda" created="Thu, 5 Nov 2015 03:15:03 +0000"  >&lt;p&gt;It is quite confusing that some of methods provide copies, and some of methods expose the internal data that the client should not modify. If you decide to copy all, you might have to copy not only submaps but also entry sets, key sets, value collections, and entries (TreeMap&apos;s entry is not thread safe).&lt;/p&gt;</comment>
                            <comment id="14992171" author="eclark" created="Thu, 5 Nov 2015 18:20:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;It is quite confusing that some of methods provide copies, and some of methods expose the internal data that the client should not modify.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That&apos;s only for tree map. The array based version has non-modifiable versions of everything. The tree map is less risky as it relies on a know and tested version of map. However it&apos;s pretty specialized and should only really ever be used in meta cache.&lt;/p&gt;

&lt;p&gt;The array based map is faster and more complete. However it is also more risky.&lt;/p&gt;

&lt;p&gt;My thought was that in branch-1.2 we would use the tree map and in branch-1 + we would use the array map.&lt;/p&gt;</comment>
                            <comment id="14992489" author="hadoopqa" created="Thu, 5 Nov 2015 21:16:00 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12770848/HBASE-14708-v13.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12770848/HBASE-14708-v13.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 050ebe850b32057860fb94b46f955352db139db1.&lt;br/&gt;
  ATTACHMENT ID: 12770848&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1727 checkstyle errors (more than the master&apos;s current 1726 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16413//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16413//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16413//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16413//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16413//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16413//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16413//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16413//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14992554" author="eclark" created="Thu, 5 Nov 2015 21:48:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; Thoughts on this? You seem to be the last person to touch MetaCache.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; Thoughts on the plan for branch-1.2 ?&lt;/p&gt;</comment>
                            <comment id="14992568" author="busbey" created="Thu, 5 Nov 2015 21:56:52 +0000"  >&lt;p&gt;the plan sounds reasonable for 1.2.&lt;/p&gt;</comment>
                            <comment id="14993168" author="ikeda" created="Fri, 6 Nov 2015 05:44:38 +0000"  >&lt;p&gt;What I want to say is, it is better to expose the internal data in all the methods rather than paying cost of copying partially, because you cannot guard its consistency after all. In for a penny, in for a pound &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/tongue.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14997486" author="enis" created="Mon, 9 Nov 2015 22:16:41 +0000"  >&lt;p&gt;The numbers look good. Will the COW behave well with 30K+ regions? Any region move or split will cause the whole thing to be copied, no? &lt;/p&gt;

&lt;p&gt;Elliott&apos;s numbers and Hiroshi&apos;s do not match from what I can tell. &lt;/p&gt;</comment>
                            <comment id="14999533" author="eclark" created="Tue, 10 Nov 2015 23:01:10 +0000"  >&lt;blockquote&gt;&lt;p&gt;Will the COW behave well with 30K+ regions?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah it&apos;s pretty darn fast at that scale.  By the end of the tests I had 100&apos;s of thousands in the map.&lt;/p&gt;</comment>
                            <comment id="15007670" author="eclark" created="Tue, 17 Nov 2015 00:04:30 +0000"  >&lt;p&gt;Anyone have objections to me committing?&lt;/p&gt;</comment>
                            <comment id="15007754" author="ikeda" created="Tue, 17 Nov 2015 01:18:26 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class CopyOnWriteTreeMap&amp;lt;K, V&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; AbstractMap&amp;lt;K, V&amp;gt;
...skip...
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ConcurrentNavigableMap&amp;lt;K, V&amp;gt; tailMap(K fromKey, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; inclusive) {
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CopyOnWriteTreeMap&amp;lt;&amp;gt;(map.tailMap(fromKey, inclusive));
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As described before, it should expose the internal data:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ConcurrentNavigableMap&amp;lt;K, V&amp;gt; tailMap(K fromKey, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; inclusive) {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; map.tailMap(fromKey, inclusive);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When a client modifies the tail-map, the purpose is to modify the parent map. We have to check there is no such client after all, and the copying just wastes.&lt;/p&gt;</comment>
                            <comment id="15007765" author="eclark" created="Tue, 17 Nov 2015 01:29:11 +0000"  >&lt;p&gt;There are no places that a client modifies the tail map. It can&apos;t just expose the internal. The internal isn&apos;t concurrent.&lt;/p&gt;</comment>
                            <comment id="15007790" author="eclark" created="Tue, 17 Nov 2015 01:37:31 +0000"  >&lt;p&gt;Removed TreeMap since it seems to be the one causing concern.&lt;/p&gt;</comment>
                            <comment id="15007844" author="enis" created="Tue, 17 Nov 2015 02:14:56 +0000"  >&lt;p&gt;COWAM looks good. My main concern was with very large number of regions. I guess client bootstrapping is also not a problem though insertion is linearized? &lt;/p&gt;

&lt;p&gt;For get(), we are unnecessarily creating an Entry object. We can just do the comparator key only? &lt;/p&gt;</comment>
                            <comment id="15007894" author="eclark" created="Tue, 17 Nov 2015 02:38:20 +0000"  >&lt;p&gt;I just added some timing to the tests:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
csm insert time = 29
cow insert time = 121
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So we&apos;re 4x slower inserting at 10k regions in the map.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For get(), we are unnecessarily creating an Entry object. We can just do the comparator key only?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not if we want to use the optimized jvm binary search.&lt;/p&gt;</comment>
                            <comment id="15007920" author="enis" created="Tue, 17 Nov 2015 03:05:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;So we&apos;re 4x slower inserting at 10k regions in the map.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The expected pattern for the MetaCache is reads &amp;gt;&amp;gt; writes, so this should be fine. Is there a way to easily verify / measure actual use? If not, the plan is to commit this and put this through some bake time? &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Not if we want to use the optimized jvm binary search.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Makese sense. &lt;/p&gt;</comment>
                            <comment id="15007924" author="ikeda" created="Tue, 17 Nov 2015 03:11:27 +0000"  >&lt;blockquote&gt;
&lt;p&gt;My main concern was with very large number of regions. I guess client bootstrapping is also not a problem though insertion is linearized? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It might be possible to create a hybrid cache of a read-only array and a concurrent map.&lt;/p&gt;

&lt;p&gt;When getting, if the read-only array exists, read from it. Otherwise increase the count and if the count reaches a threshold, create the array. Until the array is created, read from the concurrent map.&lt;/p&gt;

&lt;p&gt;When modifying, reset the count and remove the array if it exists, and modify the concurrent map.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We can just do the comparator key only?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It might be possible to create a read-only pair of a key array and a value array.&lt;/p&gt;</comment>
                            <comment id="15007976" author="hadoopqa" created="Tue, 17 Nov 2015 04:06:44 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12772633/HBASE-14708-v15.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12772633/HBASE-14708-v15.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit db42fc64f1e54ab8b47799eae7920f7298a5a406.&lt;br/&gt;
  ATTACHMENT ID: 12772633&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16541//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16541//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16541//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16541//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16541//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16541//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16541//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16541//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15008046" author="eclark" created="Tue, 17 Nov 2015 04:55:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;Makese sense.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Well I looked at all the jvm&apos;s that I could find and none of them actually do much that&apos;s all that interesting for binary search. So much for my assumption. So I just implemented one that&apos;s for key only search.&lt;/p&gt;</comment>
                            <comment id="15008076" author="eclark" created="Tue, 17 Nov 2015 05:20:33 +0000"  >&lt;p&gt;Remove un-used tailmapable since there is no COWTreemap.&lt;/p&gt;</comment>
                            <comment id="15008205" author="ikeda" created="Tue, 17 Nov 2015 07:40:15 +0000"  >&lt;p&gt;I added a hybrid implementation to my previous benchmark code and its output FYI. That logic is not so trivial and I&apos;m not sure how to manage for ConcurrentNavigableMap.&lt;/p&gt;</comment>
                            <comment id="15008211" author="hadoopqa" created="Tue, 17 Nov 2015 07:44:13 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12772661/HBASE-14708-v16.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12772661/HBASE-14708-v16.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit db42fc64f1e54ab8b47799eae7920f7298a5a406.&lt;br/&gt;
  ATTACHMENT ID: 12772661&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1728 checkstyle errors (more than the master&apos;s current 1727 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16546//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16546//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16546//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16546//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16546//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16546//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16546//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16546//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15008246" author="hadoopqa" created="Tue, 17 Nov 2015 08:19:01 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12772662/HBASE-14708-v17.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12772662/HBASE-14708-v17.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit db42fc64f1e54ab8b47799eae7920f7298a5a406.&lt;br/&gt;
  ATTACHMENT ID: 12772662&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1728 checkstyle errors (more than the master&apos;s current 1727 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16547//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16547//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16547//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16547//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16547//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16547//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16547//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16547//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15008297" author="eclark" created="Tue, 17 Nov 2015 08:51:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;I added a hybrid implementation to my previous benchmark code and its output FYI. That logic is not so trivial and I&apos;m not sure how to manage for ConcurrentNavigableMap.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m not convinced that it&apos;s going to be worth the extra complexity or added perf loss. The counter will be a contention point. &lt;/p&gt;

&lt;p&gt;If it becomes an issue then we can iterate. Testing the array map version has been very positive for long lived connections.&lt;/p&gt;</comment>
                            <comment id="15008451" author="hadoopqa" created="Tue, 17 Nov 2015 10:31:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12772662/HBASE-14708-v17.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12772662/HBASE-14708-v17.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit db42fc64f1e54ab8b47799eae7920f7298a5a406.&lt;br/&gt;
  ATTACHMENT ID: 12772662&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1728 checkstyle errors (more than the master&apos;s current 1727 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16549//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16549//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16549//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16549//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16549//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16549//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16549//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16549//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15008517" author="ikeda" created="Tue, 17 Nov 2015 11:33:29 +0000"  >&lt;p&gt;Certainly it is not trivial to think out a rule to make consistent between counter, internal concurrent map and its array cache, with just using CAS. That has been done with encapsulating the details in some methods, and it is clear how to implement. It is also convenient that you can anytime use the internal concurrent map for read operations.&lt;/p&gt;

&lt;p&gt;Accessing the counter with multiple threads cause overhead, and it is observable in the benchmark result, but it is still 7.5 times faster than copy-on-write array implementation. As to read operations, once a read cache is created there is no difference except overhead of calling a method (which can be optimized by VM, I think) and additional null check.&lt;/p&gt;</comment>
                            <comment id="15008673" author="busbey" created="Tue, 17 Nov 2015 13:58:02 +0000"  >&lt;p&gt;let&apos;s go with the simple change for 1.2 and then open a follow on ticket(s) that define a macro benchmark and try out the more complicated version.&lt;/p&gt;</comment>
                            <comment id="15009357" author="hudson" created="Tue, 17 Nov 2015 19:44:04 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2-IT #286 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2-IT/286/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2-IT/286/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14708&quot; title=&quot;Use copy on write Map for region location cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14708&quot;&gt;&lt;del&gt;HBASE-14708&lt;/del&gt;&lt;/a&gt; Use copy on write Map for region location cache (eclark: rev c178595e7f84ee7e38f95b0388796d1518b9f86a)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteArrayMap.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestCopyOnWriteMaps.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/MetaCache.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15009624" author="hudson" created="Tue, 17 Nov 2015 21:55:45 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.2 #378 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/378/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/378/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14708&quot; title=&quot;Use copy on write Map for region location cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14708&quot;&gt;&lt;del&gt;HBASE-14708&lt;/del&gt;&lt;/a&gt; Use copy on write Map for region location cache (eclark: rev c178595e7f84ee7e38f95b0388796d1518b9f86a)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestCopyOnWriteMaps.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteArrayMap.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/MetaCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15009679" author="hudson" created="Tue, 17 Nov 2015 22:11:24 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.3 #374 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/374/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/374/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14708&quot; title=&quot;Use copy on write Map for region location cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14708&quot;&gt;&lt;del&gt;HBASE-14708&lt;/del&gt;&lt;/a&gt; Use copy on write Map for region location cache (eclark: rev 4d5ac316b626baa43880a1b65916e008e3d73b69)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteArrayMap.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/MetaCache.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestCopyOnWriteMaps.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15009774" author="hudson" created="Tue, 17 Nov 2015 22:52:47 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.3-IT #317 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3-IT/317/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3-IT/317/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14708&quot; title=&quot;Use copy on write Map for region location cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14708&quot;&gt;&lt;del&gt;HBASE-14708&lt;/del&gt;&lt;/a&gt; Use copy on write Map for region location cache (eclark: rev 4d5ac316b626baa43880a1b65916e008e3d73b69)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteArrayMap.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/MetaCache.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestCopyOnWriteMaps.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15009813" author="hudson" created="Tue, 17 Nov 2015 23:19:22 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-Trunk_matrix #475 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/475/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/475/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14708&quot; title=&quot;Use copy on write Map for region location cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14708&quot;&gt;&lt;del&gt;HBASE-14708&lt;/del&gt;&lt;/a&gt; Use copy on write Map for region location cache (eclark: rev a591df1073c81a0fd1029f4a0db62d7ef8a95207)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestCopyOnWriteMaps.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteArrayMap.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/MetaCache.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15009943" author="ikeda" created="Wed, 18 Nov 2015 00:44:57 +0000"  >&lt;p&gt;Sorry I have found several race conditions in my hybrid implementation. Yet it is no so trivial. You are right.&lt;/p&gt;</comment>
                            <comment id="15009960" author="eclark" created="Wed, 18 Nov 2015 00:53:48 +0000"  >&lt;p&gt;If we need to we can always go with a sharded set of arrays. That will mean that each write will only do 1/N of the copies and array holder gets a little more complex. However I don&apos;t expect it to be too pressing as even people with very large tables aren&apos;t talking to 100k regions from one client.&lt;/p&gt;</comment>
                            <comment id="15009961" author="eclark" created="Wed, 18 Nov 2015 00:53:57 +0000"  >&lt;p&gt;If we need to we can always go with a sharded set of arrays. That will mean that each write will only do 1/N of the copies and array holder gets a little more complex. However I don&apos;t expect it to be too pressing as even people with very large tables aren&apos;t talking to 100k regions from one client.&lt;/p&gt;</comment>
                            <comment id="15012814" author="ikeda" created="Thu, 19 Nov 2015 05:10:22 +0000"  >&lt;blockquote&gt;
&lt;p&gt;If we need to we can always go with a sharded set of arrays. That will mean that each write will only do 1/N of the copies and array holder gets a little more complex.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There is no way to equally divide the array unless we know the data beforehand.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;However I don&apos;t expect it to be too pressing as even people with very large tables aren&apos;t talking to 100k regions from one client.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I checked the HBase codebase but I didn&apos;t find out, but is it OK that MetaCache is not used in servers?&lt;/p&gt;</comment>
                            <comment id="15013144" author="ikeda" created="Thu, 19 Nov 2015 08:35:16 +0000"  >&lt;p&gt;I created a revised hybrid implementation and attached it with its benchmark. I hope there is no race condition and it will clear my bad.&lt;/p&gt;

&lt;p&gt;I changed the benchmark code to use System.nanoTime() instead of System.currentTimeMillis() because the resolution of the latter seems 15 msec in my environment.&lt;/p&gt;

&lt;p&gt;I measured the benchmark with 10k init entries. As to adding/removing elements, still the hybrid implementation has 10% overhead compared to ConcurrentSkipListMap, but copy-on-write array implementation is 30 times slower than the hybrid implementation. As to reading elements, the hybrid implementation seems almost always a bit faster than the cony-on-write array implementation. I think that is because the hybrid implementation doesn&apos;t create an entry object for search.&lt;/p&gt;

&lt;p&gt;FYI&lt;/p&gt;</comment>
                            <comment id="15013483" author="busbey" created="Thu, 19 Nov 2015 12:55:36 +0000"  >&lt;p&gt;Please open a new ticket or move the discussion of follow on approaches to dev@hbase.&lt;/p&gt;

&lt;p&gt;This ticket is already resolved, so folks are unlikely to track further updates.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12770658" name="HBASE-14708-v10.patch" size="51160" author="eclark" created="Wed, 4 Nov 2015 19:13:32 +0000"/>
                            <attachment id="12770665" name="HBASE-14708-v11.patch" size="51167" author="eclark" created="Wed, 4 Nov 2015 19:29:35 +0000"/>
                            <attachment id="12770694" name="HBASE-14708-v12.patch" size="51493" author="eclark" created="Wed, 4 Nov 2015 22:06:44 +0000"/>
                            <attachment id="12770848" name="HBASE-14708-v13.patch" size="52991" author="eclark" created="Thu, 5 Nov 2015 18:23:16 +0000"/>
                            <attachment id="12772633" name="HBASE-14708-v15.patch" size="42306" author="eclark" created="Tue, 17 Nov 2015 01:37:31 +0000"/>
                            <attachment id="12772661" name="HBASE-14708-v16.patch" size="43087" author="eclark" created="Tue, 17 Nov 2015 05:18:15 +0000"/>
                            <attachment id="12772662" name="HBASE-14708-v17.patch" size="40773" author="eclark" created="Tue, 17 Nov 2015 05:20:33 +0000"/>
                            <attachment id="12769147" name="HBASE-14708-v2.patch" size="11224" author="eclark" created="Tue, 27 Oct 2015 23:01:34 +0000"/>
                            <attachment id="12769153" name="HBASE-14708-v3.patch" size="16857" author="eclark" created="Tue, 27 Oct 2015 23:53:05 +0000"/>
                            <attachment id="12769165" name="HBASE-14708-v4.patch" size="17010" author="eclark" created="Wed, 28 Oct 2015 00:35:01 +0000"/>
                            <attachment id="12769314" name="HBASE-14708-v5.patch" size="17016" author="eclark" created="Wed, 28 Oct 2015 15:50:56 +0000"/>
                            <attachment id="12769334" name="HBASE-14708-v6.patch" size="18951" author="eclark" created="Wed, 28 Oct 2015 17:29:21 +0000"/>
                            <attachment id="12769439" name="HBASE-14708-v7.patch" size="20604" author="eclark" created="Wed, 28 Oct 2015 23:23:16 +0000"/>
                            <attachment id="12770479" name="HBASE-14708-v8.patch" size="40318" author="eclark" created="Wed, 4 Nov 2015 01:10:37 +0000"/>
                            <attachment id="12770491" name="HBASE-14708-v9.patch" size="46755" author="eclark" created="Wed, 4 Nov 2015 01:33:46 +0000"/>
                            <attachment id="12769079" name="HBASE-14708.patch" size="10794" author="eclark" created="Tue, 27 Oct 2015 19:17:37 +0000"/>
                            <attachment id="12770069" name="anotherbench.zip" size="183976" author="ikeda" created="Mon, 2 Nov 2015 10:10:23 +0000"/>
                            <attachment id="12772687" name="anotherbench2.zip" size="186735" author="ikeda" created="Tue, 17 Nov 2015 07:40:15 +0000"/>
                            <attachment id="12773208" name="anotherbench3.zip" size="188156" author="ikeda" created="Thu, 19 Nov 2015 08:35:16 +0000"/>
                            <attachment id="12769022" name="location_cache_times.pdf" size="13240" author="eclark" created="Tue, 27 Oct 2015 16:17:59 +0000"/>
                            <attachment id="12769023" name="result.csv" size="2282" author="eclark" created="Tue, 27 Oct 2015 16:17:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 27 Oct 2015 22:20:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2nl1j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>