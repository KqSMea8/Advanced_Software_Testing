<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:07:35 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3130/HBASE-3130.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3130] [replication] ReplicationSource can&apos;t recover from session expired on remote clusters</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3130</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently ReplicationSource cannot recover when its zookeeper connection to its remote cluster expires. HLogs are still being tracked, but a cluster restart is required to continue replication (or a rolling restart).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12477785">HBASE-3130</key>
            <summary>[replication] ReplicationSource can&apos;t recover from session expired on remote clusters</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ctrezzo">Chris Trezzo</assignee>
                                    <reporter username="jdcryans">Jean-Daniel Cryans</reporter>
                        <labels>
                    </labels>
                <created>Tue, 19 Oct 2010 21:38:01 +0000</created>
                <updated>Fri, 20 Nov 2015 12:41:58 +0000</updated>
                            <resolved>Thu, 29 Sep 2011 23:41:18 +0000</resolved>
                                    <version>0.92.0</version>
                                    <fixVersion>0.92.0</fixVersion>
                                    <component>Replication</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13047531" author="stack" created="Fri, 10 Jun 2011 22:45:41 +0000"  >&lt;p&gt;Moving out of 0.92.0. Pull it back in if you think different.&lt;/p&gt;</comment>
                            <comment id="13094279" author="lhofhansl" created="Wed, 31 Aug 2011 03:27:14 +0000"  >&lt;p&gt;We will need this at Salesforce.com. So I am likely going to work on this soon.&lt;/p&gt;

&lt;p&gt;What is the exact problem?&lt;br/&gt;
If it would as simple as just recreating ReplicationZookeeper or using RecoverableZookeeper J-D would have probably just done it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13094281" author="jdcryans" created="Wed, 31 Aug 2011 03:31:49 +0000"  >&lt;p&gt;RecoverableZookeeper only recovers from recoverable exceptions, SessionExpired isn&apos;t one of those. Basically you have to catch it on the paths that use ZK, mostly hidden behind ReplicationZookeeper. Treat it as a normal exception, retry it every once in a while.&lt;/p&gt;</comment>
                            <comment id="13101621" author="jdcryans" created="Fri, 9 Sep 2011 22:52:27 +0000"  >&lt;p&gt;Looks like it got even worse recently, we got a situation where the SessionExpired was treated like if it was the RS&apos;s own and it FATAL&apos;ed.&lt;/p&gt;</comment>
                            <comment id="13102052" author="yuzhihong@gmail.com" created="Sat, 10 Sep 2011 13:55:23 +0000"  >&lt;p&gt;@J-D:&lt;br/&gt;
Can you post snippet of server log containing the FATAL portion ?&lt;/p&gt;</comment>
                            <comment id="13102080" author="lhofhansl" created="Sat, 10 Sep 2011 16:42:13 +0000"  >&lt;p&gt;Yes that would be useful. Somebody at Salesforce is currently looking at this issue anyway.&lt;/p&gt;</comment>
                            <comment id="13102083" author="jdcryans" created="Sat, 10 Sep 2011 17:05:42 +0000"  >&lt;p&gt;Here it goes:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2011-09-09 19:44:28,224 FATAL org.apache.hadoop.hbase.regionserver.HRegionServer: ABORTING region server serverName=sv4r17s40,60020,1313587209632, load=(requests=4292, regions=186, usedHeap=11929, maxHeap=24749): connection to cluster: 5-0x130d4937f890066 connection to cluster: 5-0x130d4937f890066 received expired from ZooKeeper, aborting&lt;br/&gt;
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired&lt;br/&gt;
	at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.connectionEvent(ZooKeeperWatcher.java:343)&lt;br/&gt;
	at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.process(ZooKeeperWatcher.java:261)&lt;br/&gt;
	at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:530)&lt;br/&gt;
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:506)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you can see it&apos;s pretty generic, I could trace it was the peer connection with the &quot;connection to cluster&quot;. Moreover the fix will take place around ReplicationPeer which contains a ZKW that requires an Abortable which, at the moment, is the RS itself. Instead we should pass our own, or maybe ReplicationSource should implement it.&lt;/p&gt;</comment>
                            <comment id="13102204" author="ctrezzo" created="Sun, 11 Sep 2011 02:28:42 +0000"  >&lt;p&gt;Hi all,&lt;/p&gt;

&lt;p&gt;I am the &quot;somebody at salesforce&quot; that is currently looking at this issue. I should have a sketch patch for you guys shortly.&lt;/p&gt;

&lt;p&gt;Here is the general gist of what I am doing:&lt;br/&gt;
1. I am now specifically catching the SESSIONEXPIRED KeeperExceptions that are thrown by methods which use a ZookeeperWatcher from ReplicationPeer.&lt;/p&gt;

&lt;p&gt;2. I am adding a public method to ReplicationZookeeper that is responsible for retrying/opening a new connection to the peer zookeeper cluster. This method will take a ReplicationPeer (the old rp from the peer we are trying to reconnect to) and an Abortable (which will be the ReplicationSource). It will return a new ReplicationPeer with a fresh connection.&lt;/p&gt;

&lt;p&gt;3. I will modify ReplicationSource so that it implements the Abortable interface.&lt;/p&gt;

&lt;p&gt;4. Currently I am going back and forth about two retry strategies:&lt;br/&gt;
A. There is a sleepMultiplier and a maxNumberOfRetries. The source will try to reconnect until the maxNumberOfRetries is exceeded, after which it will abort.&lt;/p&gt;

&lt;p&gt;B. Same as A, except after exceeding maxNumberOfRetries it will continue retrying indefinitely, but at a very low frequency (i.e every 5 min). With this approach I would implement it in a way such that replication could always be turned off, at which point the retries would stop.&lt;/p&gt;

&lt;p&gt;Thoughts/comments/suggestions are always appreciated. I am excited to contribute!&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Chris Trezzo&lt;/p&gt;</comment>
                            <comment id="13102206" author="lhofhansl" created="Sun, 11 Sep 2011 02:47:52 +0000"  >&lt;p&gt;Hey Chris &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I&apos;d say 4.B. until an admin explicitly stops replication or removes the peer.&lt;br/&gt;
I would also probably handle this in ReplicationSource&apos;s main loop.&lt;/p&gt;</comment>
                            <comment id="13103869" author="lhofhansl" created="Tue, 13 Sep 2011 18:29:08 +0000"  >&lt;p&gt;This seems like an important bug fix, can we but this into 0.92 even after we branched it?&lt;/p&gt;</comment>
                            <comment id="13103878" author="stack" created="Tue, 13 Sep 2011 18:34:02 +0000"  >&lt;p&gt;@Lars Bugs and doc improvements yes.  Features no.&lt;/p&gt;</comment>
                            <comment id="13104872" author="lhofhansl" created="Wed, 14 Sep 2011 21:03:12 +0000"  >&lt;p&gt;@J-D While testing we encountered the problem above (where the RegionServer closes) too.&lt;/p&gt;

&lt;p&gt;Should we fix that part in a separate jira, as this one might take a bit longer? The stop gap change is to log the problem and move on, i.e. simply pass an adhoc Abortable a peer&apos;s zk watcher.&lt;/p&gt;</comment>
                            <comment id="13105578" author="jdcryans" created="Thu, 15 Sep 2011 18:33:30 +0000"  >&lt;p&gt;@Chris&lt;/p&gt;

&lt;p&gt;Sorry for the late answer.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;1. I am now specifically catching the SESSIONEXPIRED KeeperExceptions that are thrown by methods which use a ZookeeperWatcher from ReplicationPeer.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;They are all catch at a super low lovel (ZKW) so I don&apos;t think you need that.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;2. I am adding a public method to ReplicationZookeeper that is responsible for retrying/opening a new connection to the peer zookeeper cluster.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There might be some synchronization problems with ReplicationSource, watch out.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;3. I will modify ReplicationSource so that it implements the Abortable interface.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m -0, I&apos;d prefer if all the handling was kept in ReplicationZookeeper. Ideally for ReplicationSource it would just see that it can&apos;t reach the peer for some reason and retry.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;4. Currently I am going back and forth about two retry strategies:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Definitely 4B, that&apos;s how the code works at the moment. Wait until the peer comes back, the operator can always turn it off.&lt;/p&gt;</comment>
                            <comment id="13105674" author="ctrezzo" created="Thu, 15 Sep 2011 20:50:24 +0000"  >&lt;p&gt;@J-D&lt;/p&gt;

&lt;p&gt;Thanks for the comments. I am attaching a first patch that I worked on with Lars. There are a few things that are slightly different from your comments above, but I figured I would post it anyways just to get the ball rolling. Let me know what you think.&lt;/p&gt;

&lt;p&gt;Here is an overview of the changes:&lt;/p&gt;

&lt;p&gt;1. Added a new reloadZkWatcher method to ReplicationPeer. This method is responsible for reseting the ReplicationPeer&apos;s ZookeeperWatcher when the connection for the old watcher dies.&lt;/p&gt;

&lt;p&gt;2. The crux of the change is in ReplicationSource.chooseSinks. We catch the KeeperException there, and if it is a ConnectionLoss or SessionExpired we reset that peer&apos;s ZookeeperWatcher using the new method from (1). Retries are handled by the existing loops in the callers of chooseSinks (i.e. connectToPeers and shipEdits).&lt;/p&gt;

&lt;p&gt;3. ReplicationPeer now implements Abortable and is passed in as the Abortable for the peer&apos;s ZookeeperWatcher. The abort method simply logs the fact that it was called and returns.&lt;/p&gt;

&lt;p&gt;I ran TestReplication, TestMasterReplication and TestMultiSlaveReplication tests with no failures. I also manually tested the case where the slave cluster fails, and confirmed that the ReplicationSource does recover and resumes replication once the peer cluster comes back.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                            <comment id="13105709" author="jdcryans" created="Thu, 15 Sep 2011 21:39:28 +0000"  >&lt;p&gt;Made Chris a contributor, assigning to him.&lt;/p&gt;</comment>
                            <comment id="13105743" author="jdcryans" created="Thu, 15 Sep 2011 22:32:05 +0000"  >&lt;p&gt;Some comments on the contribution itself since you&apos;re a newcomer:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The logging should be done like we do it elsewhere in the code, by using the Log class provided by Commons Logging and then using the LogFactory. ReplicationSource is an example.&lt;/li&gt;
	&lt;li&gt;When logging, try to include relevant information because with all different threads logging it can be hard to follow. For example, this could tell which peer we&apos;re talking about:
&lt;blockquote&gt;&lt;p&gt;Log.info(&quot;Refreshing ZookeeperWatcher&quot;);&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;
	&lt;li&gt;Lines should be max 80 characters long (the one where you&apos;re catching SessionExpiredException for example).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;More info in this chapter of the book: &lt;a href=&quot;http://hbase.apache.org/book/developer.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/book/developer.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now on the content, I still think that the management of the connection should be done inside ReplicationZookeeper. In its current form the patch exposes a feature envy between ReplicationSource and ReplicationPeer, might just be better to contain the functionality in between.&lt;/p&gt;

&lt;p&gt;Thanks for working on this Chris!&lt;/p&gt;</comment>
                            <comment id="13105808" author="ctrezzo" created="Fri, 16 Sep 2011 01:43:52 +0000"  >&lt;p&gt;@J-D&lt;/p&gt;

&lt;p&gt;Thanks for the response! Attaching a new patch with your comments in mind.&lt;/p&gt;

&lt;p&gt;Here are the changes:&lt;/p&gt;

&lt;p&gt;1. Fixed the logging in ReplicationPeer so that it uses the commons logging LogFactory.&lt;/p&gt;

&lt;p&gt;2. Fixed the line with 80+ characters.&lt;/p&gt;

&lt;p&gt;3. Moved the connection management logic from ReplicationSource down to ReplicationZookeeper.getSlavesAddresses.&lt;/p&gt;

&lt;p&gt;4. I kept the ReplicationPeer.reloadZkWatcher method for a couple reasons. (1) In order to move all the ZookeeperWatcher logic out of ReplicationPeer, we would need to have a setZkw method. This potentially allows for null ZookeeperWatchers within a ReplicationPeer (the reloadZkWatcher method seems like a slightly cleaner choice). (2) It is basically doing the exact same thing that the ReplicationPeer constructor is already doing.&lt;/p&gt;

&lt;p&gt;Let me know what you think.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                            <comment id="13105817" author="lhofhansl" created="Fri, 16 Sep 2011 02:21:52 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;I think the patch is nice because it&lt;br/&gt;
o Keeps retrying logic in ReplicationSource&lt;br/&gt;
o Removes handling KeeperExceptions from ReplicationSource&lt;br/&gt;
o Has ReplicationPeer manage its watcher&lt;br/&gt;
o Now the zoo keeper failure handling is in ReplicationZookeeper&lt;/p&gt;

&lt;p&gt;Nit: You could use Collections.emptyList() instead of new ArrayList&amp;lt;String&amp;gt;(0), and then just fall through to the set- and return getRegionServers.&lt;/p&gt;</comment>
                            <comment id="13106694" author="ctrezzo" created="Fri, 16 Sep 2011 18:50:39 +0000"  >&lt;p&gt;Submitting a new patch that addresses the Collections.emptyList() comment from Lars.&lt;/p&gt;</comment>
                            <comment id="13106706" author="jdcryans" created="Fri, 16 Sep 2011 18:57:19 +0000"  >&lt;p&gt;I like where this is going.&lt;/p&gt;

&lt;p&gt;Further improvements:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In RP, the creation of the ZKW should be refactored&lt;/li&gt;
	&lt;li&gt;The logging in abort() could use some more explanation&lt;/li&gt;
	&lt;li&gt;Would it be possible to have a unit test?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13106708" author="stack" created="Fri, 16 Sep 2011 18:59:37 +0000"  >&lt;p&gt;@Chris If you need help writing unit test, ask for it.&lt;/p&gt;</comment>
                            <comment id="13106914" author="jdcryans" created="Fri, 16 Sep 2011 23:39:28 +0000"  >&lt;p&gt;@Chris &lt;/p&gt;

&lt;p&gt;Stack was telling me that you were wondering if you need 2 ZK ensembles, I personally don&apos;t think so since the session for the master -&amp;gt; slave connection is different from all the others. So you can just expire that one (maybe across all region servers on the master side).&lt;/p&gt;</comment>
                            <comment id="13107001" author="ctrezzo" created="Sat, 17 Sep 2011 02:30:39 +0000"  >&lt;p&gt;@J-D&lt;/p&gt;

&lt;p&gt;That sounds like a good plan. I&apos;ll try writing a test, and if I run into anything weird I&apos;ll let you know.&lt;/p&gt;</comment>
                            <comment id="13109246" author="ctrezzo" created="Wed, 21 Sep 2011 04:01:33 +0000"  >&lt;p&gt;@J-D&lt;/p&gt;

&lt;p&gt;Now that I have looked at the test code a bit, I have a question:&lt;/p&gt;

&lt;p&gt;My current understanding is that to kill the master-&amp;gt;slave connection, you need to somehow get the session id and session password for the ReplicationPeer&apos;s zookeeper session (i.e. you need the ZookeeperWatcher instance). Currently, this is not exposed. Also, this does not seem like something we would want to expose if the only motivation is for testing. Any thoughts?&lt;/p&gt;

&lt;p&gt;I could be missing something obvious.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                            <comment id="13109270" author="jdcryans" created="Wed, 21 Sep 2011 04:58:55 +0000"  >&lt;p&gt;At the very minimum you could do a TestReplicationPeer that tests the session &quot;recovery&quot; code. An integration test might be harder since you have to fiddle with the internals, maybe explore the avenue of having a test that resides in the same package (o.a.h.h.r.replication) and expose the methods only there.&lt;/p&gt;</comment>
                            <comment id="13115886" author="jdcryans" created="Tue, 27 Sep 2011 20:29:35 +0000"  >&lt;p&gt;Another thing about the latest patch, this line needs to be removed in RP:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;* @param zkw zookeeper connection to the peer&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13116016" author="jdcryans" created="Tue, 27 Sep 2011 23:54:57 +0000"  >&lt;p&gt;Also I&apos;d add that I was able to test the patch (on 0.90) and it really works, proof:&lt;/p&gt;

&lt;p&gt;First it loses the connection:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2011-09-27 16:44:54,984 WARN org.apache.hadoop.hbase.replication.ReplicationPeer: connection to cluster: 10.10.30.7:2181:/hbase1-0x132ad0f29d70017 connection to cluster: 10.10.30.7:2181:/hbase1-0x132ad0f29d70017 received expired from ZooKeeper, aborting&lt;br/&gt;
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired&lt;br/&gt;
	at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.connectionEvent(ZooKeeperWatcher.java:343)&lt;br/&gt;
	at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.process(ZooKeeperWatcher.java:261)&lt;br/&gt;
	at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:530)&lt;br/&gt;
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:506)&lt;br/&gt;
2011-09-27 16:44:54,984 INFO org.apache.zookeeper.ClientCnxn: EventThread shut down&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then later when it tries to replicate it tries to talk to ZK again and it works after a reload:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2011-09-27 16:49:03,738 DEBUG org.apache.hadoop.hbase.replication.regionserver.ReplicationSource: Since we are unable to replicate, sleeping 1000 times 10&lt;br/&gt;
2011-09-27 16:49:13,738 WARN org.apache.hadoop.hbase.replication.ReplicationZookeeper: Lost the ZooKeeper connection for peer 1&lt;br/&gt;
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /hbase1/rs&lt;br/&gt;
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:118)&lt;br/&gt;
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:42)&lt;br/&gt;
	at org.apache.zookeeper.ZooKeeper.getChildren(ZooKeeper.java:1243)&lt;br/&gt;
	at org.apache.hadoop.hbase.zookeeper.ZKUtil.listChildrenNoWatch(ZKUtil.java:389)&lt;br/&gt;
	at org.apache.hadoop.hbase.zookeeper.ZKUtil.listChildrenAndGetAsAddresses(ZKUtil.java:355)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.ReplicationZookeeper.fetchSlavesAddresses(ReplicationZookeeper.java:268)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.ReplicationZookeeper.getSlavesAddresses(ReplicationZookeeper.java:239)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSource.chooseSinks(ReplicationSource.java:205)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSource.shipEdits(ReplicationSource.java:588)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSource.run(ReplicationSource.java:341)&lt;br/&gt;
2011-09-27 16:49:13,772 INFO org.apache.zookeeper.ZooKeeper: Initiating client connection, connectString=10.10.30.7:2181 sessionTimeout=20000 watcher=connection to cluster: 10.10.30.7:2181:/hbase1&lt;br/&gt;
2011-09-27 16:49:13,773 INFO org.apache.zookeeper.ClientCnxn: Opening socket connection to server /10.10.30.7:2181&lt;br/&gt;
2011-09-27 16:49:14,111 INFO org.apache.zookeeper.ClientCnxn: Socket connection established to hbasedev.sfo.stumble.net/10.10.30.7:2181, initiating session&lt;br/&gt;
2011-09-27 16:49:14,140 INFO org.apache.zookeeper.ClientCnxn: Session establishment complete on server hbasedev.sfo.stumble.net/10.10.30.7:2181, sessionid = 0x132ad0f29d70024, negotiated timeout = 20000&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13116072" author="lhofhansl" created="Wed, 28 Sep 2011 02:12:45 +0000"  >&lt;p&gt;You sound like you are surprised &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

</comment>
                            <comment id="13116073" author="jdcryans" created="Wed, 28 Sep 2011 02:16:33 +0000"  >&lt;p&gt;More like joyful amusement, it&apos;s been broken for so long...  we&apos;re pushing this in prod really soon.&lt;/p&gt;</comment>
                            <comment id="13116867" author="ctrezzo" created="Wed, 28 Sep 2011 22:42:24 +0000"  >&lt;p&gt;I finally had some time last night to look at the test code. Here is a new patch that addresses the above comments and adds a new test. TestReplicationPeer verifies the refresh ZooKeeperWatcher functionality in ReplicationPeer.&lt;/p&gt;

&lt;p&gt;As per J-D&apos;s comment above, doing more of an integration test at a higher level seems to be quite tricky and may require a large change.&lt;/p&gt;

&lt;p&gt;Let me know what you guys think.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                            <comment id="13116874" author="ctrezzo" created="Wed, 28 Sep 2011 22:51:26 +0000"  >&lt;p&gt;I am also glad the patch brings joyful amusement &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13117682" author="jdcryans" created="Thu, 29 Sep 2011 22:35:25 +0000"  >&lt;p&gt;Here&apos;s another iteration on the patch, I did the following:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Modified the test to not create a full cluster but just ZK, had to add an option in the testing utility to not create an HTable. That also fixed the test.&lt;/li&gt;
	&lt;li&gt;Removed the copyright in RP and fixed some javadoc.&lt;/li&gt;
	&lt;li&gt;Also in RP the constructor now calls reload (that was the refactoring I mentioned earlier).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Let me know if it makes sense to you.&lt;/p&gt;</comment>
                            <comment id="13117715" author="ctrezzo" created="Thu, 29 Sep 2011 23:01:48 +0000"  >&lt;p&gt;That looks good to me!&lt;/p&gt;</comment>
                            <comment id="13117718" author="lhofhansl" created="Thu, 29 Sep 2011 23:03:39 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13117744" author="jdcryans" created="Thu, 29 Sep 2011 23:41:18 +0000"  >&lt;p&gt;Committed to 0.92 and trunk, thanks for the good work Chris!&lt;/p&gt;</comment>
                            <comment id="13118042" author="hudson" created="Fri, 30 Sep 2011 13:10:14 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #33 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/33/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/33/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3130&quot; title=&quot;[replication] ReplicationSource can&amp;#39;t recover from session expired on remote clusters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3130&quot;&gt;&lt;del&gt;HBASE-3130&lt;/del&gt;&lt;/a&gt;  &lt;span class=&quot;error&quot;&gt;&amp;#91;replication&amp;#93;&lt;/span&gt; ReplicationSource can&apos;t recover from session&lt;br/&gt;
               expired on remote clusters (Chris Trezzo via JD)&lt;br/&gt;
   &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4499&quot; title=&quot;[replication] Source shouldn&amp;#39;t update ZK if it didn&amp;#39;t progress&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4499&quot;&gt;&lt;del&gt;HBASE-4499&lt;/del&gt;&lt;/a&gt;  &lt;span class=&quot;error&quot;&gt;&amp;#91;replication&amp;#93;&lt;/span&gt; Source shouldn&apos;t update ZK if it didn&apos;t progress&lt;br/&gt;
               (Chris Trezzo via JD)&lt;/p&gt;

&lt;p&gt;jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/replication/ReplicationZookeeper.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationPeer.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13118136" author="hudson" created="Fri, 30 Sep 2011 15:22:13 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2272 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2272/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2272/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3130&quot; title=&quot;[replication] ReplicationSource can&amp;#39;t recover from session expired on remote clusters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3130&quot;&gt;&lt;del&gt;HBASE-3130&lt;/del&gt;&lt;/a&gt;  &lt;span class=&quot;error&quot;&gt;&amp;#91;replication&amp;#93;&lt;/span&gt; ReplicationSource can&apos;t recover from session&lt;br/&gt;
               expired on remote clusters (Chris Trezzo via JD)&lt;br/&gt;
   &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4499&quot; title=&quot;[replication] Source shouldn&amp;#39;t update ZK if it didn&amp;#39;t progress&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4499&quot;&gt;&lt;del&gt;HBASE-4499&lt;/del&gt;&lt;/a&gt;  &lt;span class=&quot;error&quot;&gt;&amp;#91;replication&amp;#93;&lt;/span&gt; Source shouldn&apos;t update ZK if it didn&apos;t progress&lt;br/&gt;
               (Chris Trezzo via JD)&lt;/p&gt;

&lt;p&gt;jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/replication/ReplicationZookeeper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationPeer.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15017123" author="lars_francke" created="Fri, 20 Nov 2015 12:41:58 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12494735" name="3130-v2.txt" size="6561" author="ctrezzo" created="Fri, 16 Sep 2011 01:44:15 +0000"/>
                            <attachment id="12494846" name="3130-v3.txt" size="6673" author="ctrezzo" created="Fri, 16 Sep 2011 18:50:38 +0000"/>
                            <attachment id="12496940" name="3130-v4.txt" size="10261" author="ctrezzo" created="Wed, 28 Sep 2011 22:43:04 +0000"/>
                            <attachment id="12494691" name="3130.txt" size="5934" author="ctrezzo" created="Thu, 15 Sep 2011 20:52:57 +0000"/>
                            <attachment id="12497079" name="HBASE-3130-v5.patch" size="11685" author="jdcryans" created="Thu, 29 Sep 2011 22:35:25 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 10 Jun 2011 22:45:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26665</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hkvb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100643</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>ReplicationPeer is now the abortable for the sink&amp;#39;s ZK and can be told to reconnect if the session expires.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>