<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:14:21 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10497/HBASE-10497.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10497] Correct wrong handling and add proper handling for swallowed InterruptedException thrown by Thread.sleep under HBase-Client/HBase-Server folders systematically</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10497</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;There are two kinds of handling problems for InterruptedException thrown by Thread.sleep in many places under HBase-Client/HBase-Server folders:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Thread.currentThread.interrupt() is called within &apos;while&apos; loops which can result in buggy behaviors such as expected sleep doesn&apos;t occur due to restored interrupt status by former loop&lt;/li&gt;
	&lt;li&gt;InterruptedException thrown by Thread.sleep are swallowed silently (which are neither declared in the caller method&apos;s throws clause nor rethrown immediately)&lt;/li&gt;
&lt;/ol&gt;
</description>
                <environment></environment>
        <key id="12694453">HBASE-10497</key>
            <summary>Correct wrong handling and add proper handling for swallowed InterruptedException thrown by Thread.sleep under HBase-Client/HBase-Server folders systematically</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="fenghh">Honghua Feng</assignee>
                                    <reporter username="fenghh">Honghua Feng</reporter>
                        <labels>
                    </labels>
                <created>Tue, 11 Feb 2014 09:51:43 +0000</created>
                <updated>Fri, 21 Feb 2014 00:35:02 +0000</updated>
                                                                            <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                            <comments>
                            <comment id="13897690" author="fenghh" created="Tue, 11 Feb 2014 09:59:05 +0000"  >&lt;p&gt;patch attached&lt;/p&gt;

&lt;p&gt;Note: The handling for InterruptedException thrown by sleep within createTable in HBaseAdmin.java is rethrow an encapsulated InterruptedIOException, while it&apos;s ignored for the one thrown within deleteTable. To keep the previous semantic, I just log and call Thread.currentThread.interrupt there. But maybe rethrowing an encapsulated InterruptedIOException as in createTable is more appropriate.&lt;/p&gt;</comment>
                            <comment id="13897694" author="fenghh" created="Tue, 11 Feb 2014 10:10:15 +0000"  >&lt;p&gt;Threads.sleep()(which prints full call stack and call Thread.currentThread.interrupt) is also a good alternative and it&apos;s used somewhere for this purpose, but maybe printing full call stack is a bit more heavyweight than a one-line logging for most cases?&lt;/p&gt;</comment>
                            <comment id="13897708" author="nkeywal" created="Tue, 11 Feb 2014 10:25:18 +0000"  >&lt;p&gt;I&apos;m not sure of this one.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSyncUp.java	(working copy)
@@ -111,6 +111,7 @@
       }
     } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
       &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.err.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;didn&apos;t wait &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; enough:&quot;&lt;/span&gt; + e);
+      &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().interrupt();
       &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (-1);
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Because we took care of the interruption already (may be wrongly however), so the thread is not interrupted any more: the -1 means: we stop.&lt;br/&gt;
It&apos;s the same for the one with the split worker likely.&lt;/p&gt;

&lt;p&gt;This one is likely wrong:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -185,6 +185,8 @@
       &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
         &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(100);
       } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException ignored) {
+        LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Interrupted &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; sleeping&quot;&lt;/span&gt;);
+        &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().interrupt();
       }
       &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis() &amp;gt; startTime + 30000) {
         &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Master not active after 30 seconds&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As it&apos;s inside a loop, we&apos;re likely to loop again, then the sleep will be interrupted immediately as we restored the interruption status, then we will log again =&amp;gt; we will flood the logs.&lt;/p&gt;

&lt;p&gt;I haven&apos;t checked the whole patch, but inside a loop you can&apos;t simply restore the status, you need to take a decision (stop the loop) or store the interruption to restore the status later. When we can, it&apos;s better to take care of the interruption explicitly by stopping our process and/or rethrowing an exception to the caller. In the case above, may be be we should throw a runtime exception, as in &quot;Master not active after 30 seconds&quot;?&lt;/p&gt;

&lt;p&gt;See as well ExceptionUtils (it&apos;s new).&lt;/p&gt;</comment>
                            <comment id="13897827" author="fenghh" created="Tue, 11 Feb 2014 13:06:10 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; for the prompt review!&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This one is likely wrong...As it&apos;s inside a loop, we&apos;re likely to loop again, then the sleep will be interrupted immediately as we restored the interruption status, then we will log again =&amp;gt; we will flood the logs&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Good catch, my carelessness. To keep the same semantic(in terms of how/when we handle the exception), I use below code block for such non-cancelable tasks as while/for loops to prevent latter sleep from immediately throwing InterruptedException due to the re-interrupt issued by former iteration&apos;s catch...&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; interrupted = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
  &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (...) {
      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        ...
        &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(...);
        ...
      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
        interrupted = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
      }
    }
  } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (interrupted) {
      LOG.warn(...);
      &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().interrupt();
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;&lt;p&gt;Because we took care of the interruption already (may be wrongly however), so the thread is not interrupted any more: the -1 means: we stop. It&apos;s the same for the one with the split worker likely.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;As you said we do take care of the interruption already, but they are within Runnable and Tool respectively, it&apos;s still meaningful to re-interrupt current thread in order for code higher up the call stack to being able to know about the fact of interrupt, right? At least it does no harm to re-interrupt here.&lt;/p&gt;</comment>
                            <comment id="13897831" author="fenghh" created="Tue, 11 Feb 2014 13:08:01 +0000"  >&lt;p&gt;Patch attached per &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt;&apos;s review feedback, and thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; again&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13898762" author="fenghh" created="Wed, 12 Feb 2014 04:02:48 +0000"  >&lt;p&gt;The helper method Threads.sleep is implemented as below:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void sleep(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; millis) {
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(millis);
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
      e.printStackTrace();
      &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().interrupt();
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So it&apos;s incorrect for tit to be called within a while/for loop(as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; pointed out in above comment), but actually it does be called within while/for loop several times in HBase code such as in DeleteTableHandler.java, AssignmentManager.java, JVMClusterUtil.java, HRegionServer.java and LruBlockCache.java (just a search under hbase-server folder). and a method in HRegionFileSystem.java calling Threads.sleep itself is called within a do-while loop, hence the same problem...&lt;/p&gt;</comment>
                            <comment id="13899374" author="nkeywal" created="Wed, 12 Feb 2014 18:18:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;The helper method Threads.sleep is implemented as below:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Wow. We should just remove Threads.sleep: it&apos;s a sure way to shoot ourselves in the foot... (it doesn&apos;t have to be done in this patch)&lt;/p&gt;</comment>
                            <comment id="13899422" author="nkeywal" created="Wed, 12 Feb 2014 18:52:25 +0000"  >&lt;p&gt;I&apos;ve submitted the patch, to see what hadoop-qa says.&lt;/p&gt;

&lt;p&gt;The patch is big. It touches some scaring part. I would propose to split it:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;some parts are in the mini cluster: even if we do something wrong here it&apos;s not a big deal&lt;/li&gt;
	&lt;li&gt;some parts seems good: RpcClient (I can +1 this)&lt;/li&gt;
	&lt;li&gt;some parts are more complex: MemStoreFlusher: I&apos;m not sure. It&apos;s a runnable, restoring the status seems meaningless; SplitLogWorker seems wrong, it&apos;s a runnable ;Leases. I don&apos;t know. Could be wrong again; HRegionServer&lt;/li&gt;
	&lt;li&gt;some parts, imho, should not be managed by restoring the status but by throwing an exception or even explaining why we do nothing. That&apos;s the case here.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; TableListModel getTableList() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {

    StringBuilder path = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StringBuilder();
    path.append(&apos;/&apos;);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (accessToken != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      path.append(accessToken);
      path.append(&apos;/&apos;);
    }

    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; code = 0;
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; maxRetries; i++) {
      &lt;span class=&quot;code-comment&quot;&gt;// Response response = client.get(path.toString(),
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// Constants.MIMETYPE_XML);
&lt;/span&gt;      Response response = client.get(path.toString(),
          Constants.MIMETYPE_PROTOBUF);
      code = response.getCode();
      &lt;span class=&quot;code-keyword&quot;&gt;switch&lt;/span&gt; (code) {
      &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; 200:
        TableListModel t = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TableListModel();
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (TableListModel) t.getObjectFromMessage(response.getBody());
      &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; 404:
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Table list not found&quot;&lt;/span&gt;);
      &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; 509:
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
          &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(sleepTime);
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
          thrown &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InterruptedIOException();
        }
        &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
      &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;:
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;get request to &quot;&lt;/span&gt; + path.toString()
            + &lt;span class=&quot;code-quote&quot;&gt;&quot; request returned &quot;&lt;/span&gt; + code);
      }
    }
    &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;get request to &quot;&lt;/span&gt; + path.toString()
        + &lt;span class=&quot;code-quote&quot;&gt;&quot; request timed out&quot;&lt;/span&gt;);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So at the end, we could have a few sub jiras:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the ones with a high level of confidence&lt;/li&gt;
	&lt;li&gt;the less confident ones bug not very risky&lt;/li&gt;
	&lt;li&gt;the ones when we don&apos;t restore the status but we properly manage the exception&lt;/li&gt;
	&lt;li&gt;a set of small ones per area for the others. They will be easier to review.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13899517" author="hadoopqa" created="Wed, 12 Feb 2014 19:59:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12628215/HBASE-10497-trunk_v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12628215/HBASE-10497-trunk_v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12628215&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8671//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13899892" author="fenghh" created="Thu, 13 Feb 2014 01:24:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;(The helper method Threads.sleep is implemented as below:...) Wow. We should just remove Threads.sleep: it&apos;s a sure way to shoot ourselves in the foot... (it doesn&apos;t have to be done in this patch)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;OK, the new jira &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10516&quot; title=&quot;Refactor code where Threads.sleep is called within a while/for loop&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10516&quot;&gt;&lt;del&gt;HBASE-10516&lt;/del&gt;&lt;/a&gt; is created for this purpose.&lt;/p&gt;</comment>
                            <comment id="13899894" author="fenghh" created="Thu, 13 Feb 2014 01:31:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;The patch is big. It touches some scaring part. I would propose to split it...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;hmm...I&apos;ll try to split it to some sub-jiras per your suggestion, thanks for the review and suggestion, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13900139" author="fenghh" created="Thu, 13 Feb 2014 09:00:43 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt;, I&apos;m done with the jira split and also made some change to individual patch per your review feedback, would you please take some time to review them? The sub-jiras are &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10519&quot; title=&quot;Add handling for swallowed InterruptedException thrown by Thread.sleep in rest related files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10519&quot;&gt;&lt;del&gt;HBASE-10519&lt;/del&gt;&lt;/a&gt; &amp;#8212; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10524&quot; title=&quot;Correct wrong handling and add proper handling for swallowed InterruptedException thrown by Thread.sleep in regionserver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10524&quot;&gt;&lt;del&gt;HBASE-10524&lt;/del&gt;&lt;/a&gt;. Thanks in advance!&lt;/p&gt;</comment>
                            <comment id="13907062" author="nkeywal" created="Thu, 20 Feb 2014 15:19:04 +0000"  >&lt;p&gt;They are all committed to trunk now. Thanks for your time!&lt;/p&gt;</comment>
                            <comment id="13907792" author="fenghh" created="Fri, 21 Feb 2014 00:35:02 +0000"  >&lt;p&gt;Thank you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12628176" name="HBASE-10497-trunk_v1.patch" size="16841" author="fenghh" created="Tue, 11 Feb 2014 09:59:05 +0000"/>
                            <attachment id="12628215" name="HBASE-10497-trunk_v2.patch" size="68696" author="fenghh" created="Tue, 11 Feb 2014 13:08:01 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12694925">HBASE-10519</subtask>
                            <subtask id="12694928">HBASE-10520</subtask>
                            <subtask id="12694930">HBASE-10521</subtask>
                            <subtask id="12694931">HBASE-10522</subtask>
                            <subtask id="12694937">HBASE-10523</subtask>
                            <subtask id="12694939">HBASE-10524</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Feb 2014 10:25:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>372961</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 43 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1s9v3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>373263</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>