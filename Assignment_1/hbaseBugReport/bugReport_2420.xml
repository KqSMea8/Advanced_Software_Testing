<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:01:45 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2420/HBASE-2420.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2420] [DAC] HDFS and ZK access delegation (isolation)</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2420</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;HBase security will be in part layered on top of HDFS security, and whatever ZK offers as well. For sake of discussion we presume both HDFS and ZK use a Kerberos based authentication and authorization model, as proposed in the Hadoop Security Architecture document. There are two basic options for that, fine- or coarse-grained:&lt;/p&gt;

&lt;h4&gt;&lt;a name=&quot;Coarse&quot;&gt;&lt;/a&gt;Coarse&lt;/h4&gt;
&lt;p&gt;There could simply be a single delegation token granted to a HBase cluster from HDFS and ZK for all operations on behalf of all possible users of the HBase cluster. From the perspective of HDFS and ZK, there is only a single principal for each cluster.&lt;/p&gt;

&lt;h4&gt;&lt;a name=&quot;Fine&quot;&gt;&lt;/a&gt;Fine&lt;/h4&gt;
&lt;p&gt;The HBase master could manage and renew HDFS and ZK delegation tokens on behalf of users authenticated to HBase via Kerberos. So when a client authenticates via KRB to the HMaster when looking up region locations as the first step to any HBase access, the HMaster would get a delegation token from the NameNode on behalf of the user. (The user would then hand the delegation token to the HRegionServers to allow access to store data via their embedded DFSClients.) It would be ideal if ZooKeeper authentication and authorization could tie in seamlessly. For example, at the same time the HMaster is getting a delegation token for the user for HDFS, it could also get another token for ZK on behalf of the user. A wrinkle here is token renewal. If a user transacts with a HRegionServer with an expired token, the HRegionServer would renew the token (or ask the HMaster to renew the token if superuser should not be delegated from HMaster to HRegionServer) transparently with the NameNode on behalf of the user. Something like that would be necessary on the ZK side also. To support this model, the HRegionServers and HMaster (or just HMaster) must act as a superuser principal capable of impersonating user principals. Presumably, with the ZK ensemble also. Thus ZK, like HDFS, must provide methods for a superuser to act on behalf of others. HDFS will have this facility. &lt;/p&gt;

&lt;p&gt;There are pros and cons for each approach. Coarse obviously is much more simple to implement and reason about. But it requires more trust in HBase to maintain isolation between users than the fine-grained approach. With the fine-grained approach, the regionservers get HDFS and ZK delegation tokens from the HBase client and this allows a policy where files and znodes created by one user+group cannot be read or written by another at the DFS (store) level or the ZK level. Assume group level permissions. Thus you can reason about isolation further down the stack, not just from client-&amp;gt;HBase, but client-&amp;gt;HBase-&amp;gt;HDFS and client-&amp;gt;ZK and client-&amp;gt;HBase-&amp;gt;ZK. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12461448">HBASE-2420</key>
            <summary>[DAC] HDFS and ZK access delegation (isolation)</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12431322">HBASE-1697</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 Apr 2010 19:51:57 +0000</created>
                <updated>Sat, 19 Jul 2014 00:47:21 +0000</updated>
                            <resolved>Sat, 19 Jul 2014 00:47:21 +0000</resolved>
                                                                    <component>security</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12854683" author="ryanobjc" created="Wed, 7 Apr 2010 20:23:57 +0000"  >&lt;p&gt;The fine grained approach doesnt make sense to me.  Who owns the hfiles?  I would expect the &apos;hbase&apos; user to own it.  If this is so, then why would we want to delegate end user permissions all the way to hdfs - unless we wanted to have ACL on HFiles depending on the user involved?&lt;/p&gt;

&lt;p&gt;I would expect the client &lt;del&gt;&amp;gt; hbase and hbase&lt;/del&gt;&amp;gt; hdfs security to be separate concerns.  Otherwise we&apos;d have to do fine grained ACLs on all HFiles, and granting a user access to a table would require granting them access to the files involved in that table only.  &lt;/p&gt;</comment>
                            <comment id="12854706" author="apurtell" created="Wed, 7 Apr 2010 20:56:04 +0000"  >&lt;p&gt;It&apos;s about trust for enforcement of isolation. HBase can run as a single principal across the whole cluster from the HDFS perspective no matter the details of HBase internal security model. So as you put it the &quot;hbase&quot; user would own the hfiles. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Otherwise we&apos;d have to do fine grained ACLs on all HFiles, and granting a user access to a table would require granting them access to the files involved in that table only.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s one option. &lt;/p&gt;

&lt;p&gt;Another is a scheme where HBase users are mapped to HBase roles which are mapped to HDFS users which are aggregated as HDFS groups:&lt;/p&gt;

&lt;p&gt;HBase user -&amp;gt; HBase role -&amp;gt; HDFS user -&amp;gt; HDFS group&lt;/p&gt;

&lt;p&gt;This can provide some flexibility for various configurations from simple-but-no-isolation to complex-but-paranoid. This scheme would have the DFSClients in the region servers operate with multiple delegation tokens from HDFS in a pass through manner. &lt;/p&gt;

&lt;p&gt;The trade off is some complexity for being able to get some assurance of isolation even if HBase is &quot;broken&quot; in some way. &lt;/p&gt;</comment>
                            <comment id="14067300" author="apurtell" created="Sat, 19 Jul 2014 00:47:21 +0000"  >&lt;p&gt;Should have been a brainstorming JIRA. Storm fizzled out&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 7 Apr 2010 20:23:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32575</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 21 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d467:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74452</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>