<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:25:55 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5229/HBASE-5229.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5229] Provide basic building blocks for &quot;multi-row&quot; local transactions.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5229</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In the final iteration, this issue provides a generalized, public mutateRowsWithLocks method on HRegion, that can be used by coprocessors to implement atomic operations efficiently.&lt;br/&gt;
Coprocessors are already region aware, which makes this is a good pairing of APIs. This feature is by design not available to the client via the HTable API.&lt;/p&gt;

&lt;p&gt;It took a long time to arrive at this and I apologize for the public exposure of my (erratic in retrospect) thought processes.&lt;/p&gt;

&lt;p&gt;Was:&lt;br/&gt;
HBase should provide basic building blocks for multi-row local transactions. Local means that we do this by co-locating the data. Global (cross region) transactions are not discussed here.&lt;/p&gt;

&lt;p&gt;After a bit of discussion two solutions have emerged:&lt;br/&gt;
1. Keep the row-key for determining grouping and location and allow efficient intra-row scanning. A client application would then model tables as HBase-rows.&lt;br/&gt;
2. Define a prefix-length in HTableDescriptor that defines a grouping of rows. Regions will then never be split inside a grouping prefix.&lt;/p&gt;

&lt;p&gt;#1 is true to the current storage paradigm of HBase.&lt;br/&gt;
#2 is true to the current client side API.&lt;/p&gt;

&lt;p&gt;I will explore these two with sample patches here.&lt;/p&gt;

&lt;p&gt;--------------------&lt;br/&gt;
Was:&lt;br/&gt;
As discussed (at length) on the dev mailing list with the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3584&quot; title=&quot;Allow atomic put/delete in one call&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3584&quot;&gt;&lt;del&gt;HBASE-3584&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5203&quot; title=&quot;Group atomic put/delete operation into a single WALEdit to handle region server failures.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5203&quot;&gt;&lt;del&gt;HBASE-5203&lt;/del&gt;&lt;/a&gt; committed, supporting atomic cross row transactions within a region becomes simple.&lt;br/&gt;
I am aware of the hesitation about the usefulness of this feature, but we have to start somewhere.&lt;/p&gt;

&lt;p&gt;Let&apos;s use this jira for discussion, I&apos;ll attach a patch (with tests) momentarily to make this concrete.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12538906">HBASE-5229</key>
            <summary>Provide basic building blocks for &quot;multi-row&quot; local transactions.</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Thu, 19 Jan 2012 00:51:18 +0000</created>
                <updated>Fri, 12 Oct 2012 05:34:57 +0000</updated>
                            <resolved>Wed, 8 Feb 2012 18:31:31 +0000</resolved>
                                                    <fixVersion>0.94.0</fixVersion>
                                    <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>16</watches>
                                                                                                            <comments>
                            <comment id="13188852" author="lhofhansl" created="Thu, 19 Jan 2012 00:52:36 +0000"  >&lt;p&gt;Initial patch. It works as advertised. I couldn&apos;t think of good names for the classes (RegionMutation is not a good name).&lt;/p&gt;</comment>
                            <comment id="13188964" author="lhofhansl" created="Thu, 19 Jan 2012 07:09:06 +0000"  >&lt;p&gt;Todd Lipcon made a good point: Currently regions are an implementation detail. With this patch they would practically become part of the API.&lt;/p&gt;</comment>
                            <comment id="13189240" author="lhofhansl" created="Thu, 19 Jan 2012 17:55:37 +0000"  >&lt;p&gt;That argument pretty much sinks this approach for me.&lt;/p&gt;

&lt;p&gt;At the same time we should not put a full transactional API into HBase, but rather provide enough building blocks so that an outside client could implement transactions. I do not see how we can do that without exposing knowledge about some internals such as regions.&lt;/p&gt;

&lt;p&gt;Another approach is to give more control over which set of rows can participate in a transaction.&lt;br/&gt;
Right now that is all KVs with the same row-key (internally we achieve by collocating all those KVs, but that is an implementation detail).&lt;br/&gt;
What if we allow a prefix of the row key instead? We can even formalize that, and give the row key some internal (optional) structure, which allows the application to specific transaction groups.&lt;/p&gt;</comment>
                            <comment id="13189272" author="stack" created="Thu, 19 Jan 2012 18:39:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;Another approach is to give more control over which set of rows can participate in a transaction.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If we did row prefix instead, it&apos;d have to be an input to the table splitting function so we didn&apos;t split in the middle of a transactions row set.  Doesn&apos;t sound hard.  Would be part of table schema.&lt;/p&gt;</comment>
                            <comment id="13189273" author="tlipcon" created="Thu, 19 Jan 2012 18:39:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;What if we allow a prefix of the row key instead?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That&apos;s essentially the approach that both DynamoDB and Oracle&apos;s NoSQL db take. But, the way I see it, we already have that &amp;#8211; the row key is the &quot;prefix of the row key&quot;, and the column key is the &quot;rest of the row key&quot;. What would an extra element of key structure give us?&lt;/p&gt;</comment>
                            <comment id="13189434" author="lhofhansl" created="Thu, 19 Jan 2012 22:25:53 +0000"  >&lt;p&gt;That is true when it comes to storage.&lt;br/&gt;
However our (current) API is mostly row based. There is no way to start or stop a stop a scan at a column, there are many assumptions about rows baked into the scanner, etc. I don&apos;t think ColumnRangeFilter would be good enough here.&lt;/p&gt;

&lt;p&gt;Declaring a prefix and honoring it during splitting seems simpler and more in line with our current API and (probably?) what a user would expect.&lt;/p&gt;

&lt;p&gt;It is another avenue, though. For example we can add Scan.set&lt;/p&gt;
{Start|Stop}
&lt;p&gt;Key (where we can present prefixes of the full key, rather than just the row key), and handle it accordingly at the server. Would also need a nextKeyValue (or nextColumn or something) method on ResultScanner along with the server code that does this efficiently.&lt;/p&gt;</comment>
                            <comment id="13189456" author="philip" created="Thu, 19 Jan 2012 22:48:44 +0000"  >&lt;p&gt;Just to kibitz a little bit:&lt;/p&gt;

&lt;p&gt;The approach you&apos;re proposing will only ever let you do &quot;local&quot; transactions: transactions clearly related to a prefix-friendly set of rows.  For example, if, say, inserting a tweet is transactional, but there&apos;s a global hash tag index, you might want to make deleting a tweet transactional in the sense that it&apos;ll clean up the index entry for you.  You&apos;re never going to get the index to be on the same region.  It&apos;s possible to implement multi-row transactions on top of single row transactions (by putting a write a head log there, see Megastore at &lt;a href=&quot;http://research.google.com/pubs/pub36971.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://research.google.com/pubs/pub36971.html&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;On the other hand, if you&apos;re cool with that, and even just &quot;local&quot; transactions could be very useful to many users and is probably quite efficient.  As a user, I&apos;d much prefer dealing with single rows, or row prefixes, than hoping that my rows are on the same region server.&lt;/p&gt;</comment>
                            <comment id="13189464" author="lhofhansl" created="Thu, 19 Jan 2012 22:56:13 +0000"  >&lt;p&gt;Thanks Philip. Yep, that&apos;s the idea with this. Global transactions would be handled differently and be &lt;b&gt;far&lt;/b&gt; more heavyweight (and must be used judiciously or your load will not scale).&lt;/p&gt;

&lt;p&gt;The transactions I have in mind with this would be just as fast as a current Puts/Deletes (with the drawback that related data would be collocated).&lt;/p&gt;</comment>
                            <comment id="13189487" author="mcorgan" created="Thu, 19 Jan 2012 23:20:11 +0000"  >&lt;p&gt;I think the approach of expanding and improving support for gigantic rows would be cleaner than adding another consistency guarantee to hbase&apos;s feature list.  Combining very wide rows with many column families, each with separate settings and compactions provides a good framework for all sorts of different data models on top.  You could let a row become so big that it&apos;s the only row on a machine if you want.&lt;/p&gt;

&lt;p&gt;From what I can tell from papers and presentations, BigTable actually supports many gigabyte EntityGroups.  They mention it at 6:18 in this video: &lt;a href=&quot;http://www.youtube.com/watch?v=xO015C3R6dw&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.youtube.com/watch?v=xO015C3R6dw&lt;/a&gt; .  I&apos;m not sure how &quot;Entity Groups can span machines and still enforce transactionality&quot;.  I had thought that an entity group was confined to a single BigTable row, maybe that means they do span BigTable regions.  Anyone know how that works?&lt;/p&gt;</comment>
                            <comment id="13189739" author="dferro" created="Fri, 20 Jan 2012 11:27:15 +0000"  >&lt;blockquote&gt;&lt;p&gt;Currently regions are an implementation detail. With this patch they would practically become part of the API.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Didn&apos;t regions already become part of the API with Coprocessors?&lt;/p&gt;</comment>
                            <comment id="13189949" author="tlipcon" created="Fri, 20 Jan 2012 17:56:42 +0000"  >&lt;p&gt;Sort of - but coprocessors are really an ultra-advanced API. I see them more like kernel modules in Linux - we don&apos;t purport to keep them 100% compatible between versions, and you&apos;re likely to crash your database if you mess up. Here, though, we were talking about a publicly accessible transactionality feature which users are going to depend on, and which breaks the abstractions everywhere else.&lt;/p&gt;</comment>
                            <comment id="13190285" author="lhofhansl" created="Sat, 21 Jan 2012 02:58:56 +0000"  >&lt;p&gt;@Daniel: Except for RegionCoprocessorEnvironment there are not too many points there directly expose regions. So I think Todd&apos;s point still holds &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;J-D brought to my attention that via scanner batching we can already control how many columns a scanner.next() call returns. So what I am exploring now is better control over where to start a scan (allow a column prefix to specified along with the startRow - the only sticky point is that family delete marker would not be honored in that case, as we&apos;d want to seek directly to the column and not seek to the family delete marker first as that would defeat the purpose completely).&lt;/p&gt;</comment>
                            <comment id="13190316" author="lhofhansl" created="Sat, 21 Jan 2012 05:53:53 +0000"  >&lt;p&gt;Here&apos;s a patch &lt;b&gt;demonstrating&lt;/b&gt; that approach.&lt;br/&gt;
A scanner can be passed a start KeyValue. It will seek to that KeyValue.&lt;br/&gt;
The client is responsible to create a suitable KeyValue for seeking (see the included test).&lt;br/&gt;
Together with scanner batching this allows for pretty flexible intra row scanning.&lt;/p&gt;

&lt;p&gt;For simplicity the stopRow is also enforced allowing only intra-row scanning (that is just so that the change it ClientScanner is small - otherwise it&apos;d need to remember the seekTo for retry but still allow to scan to the next region by setting the startRow).&lt;/p&gt;

&lt;p&gt;If folks like this approach, I&apos;ll make a nicer patch and change the title of this jira.&lt;/p&gt;</comment>
                            <comment id="13190321" author="lhofhansl" created="Sat, 21 Jan 2012 06:02:26 +0000"  >&lt;p&gt;Oops... Attached the wrong file. This is the one.&lt;/p&gt;</comment>
                            <comment id="13190324" author="lhofhansl" created="Sat, 21 Jan 2012 06:04:22 +0000"  >&lt;p&gt;Arghhh... This one... Really.&lt;/p&gt;</comment>
                            <comment id="13190329" author="zhihyu@ebaysf.com" created="Sat, 21 Jan 2012 06:29:22 +0000"  >&lt;p&gt;Interesting.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; length = in.readInt();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Would be nice if we can utilize vint.&lt;/p&gt;

&lt;p&gt;I suggest changing the title. We&apos;re pretty far from the original plan.&lt;/p&gt;</comment>
                            <comment id="13190340" author="lhofhansl" created="Sat, 21 Jan 2012 07:22:27 +0000"  >&lt;p&gt;Was going by the code in Put.java. Agreed, vint is better here, especially because seekTo will typically only have the key portion (i.e. be small in size). Maybe we should go through Put/Get/Delete/etc and also use vints there.&lt;/p&gt;

&lt;p&gt;I&apos;ll do some performance tests with a 1m columns or so. Also have to wrap my head around the implications for bloom filters.&lt;/p&gt;</comment>
                            <comment id="13190572" author="lhofhansl" created="Sun, 22 Jan 2012 01:15:43 +0000"  >&lt;p&gt;A real patch is a bit more complicated, as there are multiple regions and stores. The ClientScanner still needs to address the correct region, and all unneeded stores need to be skipped.&lt;/p&gt;</comment>
                            <comment id="13190796" author="lhofhansl" created="Sun, 22 Jan 2012 21:51:55 +0000"  >&lt;p&gt;Here&apos;s a patch that works. Regions are correctly addressed using the row key. Intra-row scans are limited to a single row.&lt;br/&gt;
The region scanner will correctly skip all stores for families before the seekTo KV.&lt;br/&gt;
The first matching store will use the seekTo KV, the others will seek to the beginning of the row (since their family sorts after the seekTo key).&lt;/p&gt;

&lt;p&gt;The model possible here would be that a &quot;transactional&quot; table ends up being a row in HBase (i.e. the row-key is the tablename), and a prefix of the columns defines &quot;rows&quot; inside that table, the rest of the columns defines the actual &quot;columns&quot; of that row.&lt;/p&gt;

&lt;p&gt;With this patch that is possible (set seekTo in Scan.java to seek inside a row, and enable batching).&lt;/p&gt;

&lt;p&gt;This patch provides no way to set a stop point inside a row. The client would need to set batching to reasonable amount (to avoid too many roundtrips and at the same not to return too many unnecessary KVs).&lt;br/&gt;
Also with a stop point, we could prune all stores whose family is past the stop point (just like this patch prunes all stores with families before the stop point).&lt;br/&gt;
Because RegionScannerImpl and StoreScaner are inherently the row based the refactoring would be non-trivial and risky.&lt;/p&gt;

&lt;p&gt;I will now explore what it would take to define a grouping prefix in HTableDefinition.&lt;/p&gt;</comment>
                            <comment id="13190825" author="lhofhansl" created="Sun, 22 Jan 2012 23:59:12 +0000"  >&lt;p&gt;Yet another option is to a have ColumnFamilyRangeFilter (similar to ColumnRangeFilter, but also taking column families into account). Such a filter could be optimized to do just one seek in the beginning to seek to the appropriate KeyValue (using SEEK_NEXT_USING_HINT, and hinting the right KV), and it could easily seek to the next row at the end. The app would then create a scan for a single row and pass a ColumnFamilyRangeFilter.&lt;/p&gt;

&lt;p&gt;Anyway, maybe I should stop my public stream of consciousness here.&lt;/p&gt;</comment>
                            <comment id="13190864" author="lhofhansl" created="Mon, 23 Jan 2012 04:19:48 +0000"  >&lt;p&gt;It turns out that there is no reliable ordering between KeyValues in different families (for the same row key).&lt;br/&gt;
Neither should there be, really, since stores should (in theory - not done, yet) be able to retrieve KVs in parallel. So starting at (row1, familyX, columnA) and ending at (row1, familyY, columnB) has no meaning.&lt;br/&gt;
Maybe that should have been obvious... See comment in KeyValue.KeyComparator(...):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// TODO the family and qualifier should be compared separately
&lt;/span&gt;compare = Bytes.compareTo(left, lcolumnoffset, lcolumnlength, right,
   rcolumnoffset, rcolumnlength);
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Not sure if that is separate bug. Indeed a (&quot;row1&quot;, &quot;family&quot;, &quot;12&quot;) is equal to (&quot;row1&quot;, &quot;family1&quot;, &quot;2&quot;) by this comparator.&lt;/p&gt;

&lt;p&gt;After all this, it looks like the best bet is to use the existing ColumnRangeFilter for intra-row scanning. If only one (or a few) families are used, that will be pretty efficient too, as ColumnRangeFilter seeks to the appropriate KV.&lt;/p&gt;

&lt;p&gt;I&apos;ll close this issue.&lt;/p&gt;</comment>
                            <comment id="13190865" author="lhofhansl" created="Mon, 23 Jan 2012 04:21:20 +0000"  >&lt;p&gt;That is to say &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3584&quot; title=&quot;Allow atomic put/delete in one call&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3584&quot;&gt;&lt;del&gt;HBASE-3584&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5203&quot; title=&quot;Group atomic put/delete operation into a single WALEdit to handle region server failures.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5203&quot;&gt;&lt;del&gt;HBASE-5203&lt;/del&gt;&lt;/a&gt; along with ColumnRangeFilter is all this is needed.&lt;/p&gt;</comment>
                            <comment id="13190875" author="stack" created="Mon, 23 Jan 2012 05:18:11 +0000"  >&lt;p&gt;Is this the second exercise where we arrive at the same conclusion, that ColumnRangeFilter is what we should use doing intra-row scan?  If so, should we do something to make ColumnRangeFilter use more palatable to use (add methods to Scan API that use the ColumnRangeFilter underneath).&lt;/p&gt;

&lt;p&gt;What about the comparator, we should fix that?&lt;/p&gt;

&lt;p&gt;Is it a problem, that there is no ordering between CFs Lars?&lt;/p&gt;

&lt;p&gt;Anything else we need to fix after your explorations Lars?&lt;/p&gt;

&lt;p&gt;Should we write up something in the book or elsewhere on &apos;transactions&apos; in a single row is the way to go (as per Matt&apos;s supposition that making the single row case work properly should be good for a variety of modelings on hbase)?&lt;/p&gt;

&lt;p&gt;Good stuff Lars.&lt;/p&gt;
</comment>
                            <comment id="13190891" author="lhofhansl" created="Mon, 23 Jan 2012 06:07:54 +0000"  >&lt;p&gt;Yes, it is the 2nd time &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;This is the way to make large Rows (ala Megastore) possible as Matt suggests, because a scan can be efficiently done inside a row (well actually a column family).&lt;/p&gt;

&lt;p&gt;Re: KV ordering. Looking around at the code... It is causing no problems, because we never have to compare KVs between families. It makes sense, RegionScannerImpl just deals with rows, and StoreScanners just deals with StoreFileScaners, which are all of he same family... Just something I somehow had not groked before today (I had assumed there is a consistent global ordering between &lt;b&gt;all&lt;/b&gt; KeyValues).&lt;/p&gt;

&lt;p&gt;Instead of adding cruft to the Scan API that does not provide any new features, I think that ColumnRangeFilter rather should just be documented more prominently. I&apos;ll add something to the book (it&apos;s only tersely mentioned). And I&apos;ll definitely blog about it. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Might still be worth exploring some outside grouping of rows (like the prefix I mention above), because that would be more in line with the API that a client expects. Implementing that would actually be simple: We&apos;d just calculate the midKey as we do now, and then we take a prefix of the midKey to do the actual split (if the table declares - say - a four byte prefix, then we always split on the first four bytes of the midKey instead of the full row-key).&lt;/p&gt;

&lt;p&gt;Using wide rows with ColumnRangeFilter forces the application to reinvent many concepts (like selected a prefix of the column to declare the &quot;inner grouping&quot; and then use the remaining suffix to identify the &quot;inner columns&quot;.)&lt;br/&gt;
Additionally there might be work to have HBase perform with very wide rows (although ColumnRangeFilter can efficiently retrieve a subset of columns).&lt;/p&gt;

&lt;p&gt;It looks like ColumnRangeFilter might be ineffective if there many versions of the cells, as version elimination during scanning happens after Filters are evaluated (see ScanQueryMatcher).&lt;/p&gt;

&lt;p&gt;Maybe that&apos;s one thing to change: Allow a filter to declare whether it is evaluated pre or post version elimination... There&apos;re usecases for both. Kannan faces a similar problem in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt;, which I think could be solved if filters could be optionally evaluated after the version handling. If that&apos;s something we want to do, I&apos;ll create a jira for that and work out a patch.&lt;/p&gt;</comment>
                            <comment id="13190897" author="stack" created="Mon, 23 Jan 2012 06:34:47 +0000"  >&lt;p&gt;In the above when you talk of column prefix, couldn&apos;t that be column family?&lt;/p&gt;

&lt;p&gt;For sure we need to talk up ColumnRangeFilter and exercise it more (e.g. your observation on filters and versions needs looking into...)&lt;/p&gt;

&lt;p&gt;Good stuff.&lt;/p&gt;</comment>
                            <comment id="13190898" author="stack" created="Mon, 23 Jan 2012 06:34:57 +0000"  >&lt;p&gt;In the above when you talk of column prefix, couldn&apos;t that be column family?&lt;/p&gt;

&lt;p&gt;For sure we need to talk up ColumnRangeFilter and exercise it more (e.g. your observation on filters and versions needs looking into...)&lt;/p&gt;

&lt;p&gt;Good stuff.&lt;/p&gt;</comment>
                            <comment id="13190900" author="lhofhansl" created="Mon, 23 Jan 2012 06:44:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;In the above when you talk of column prefix, couldn&apos;t that be column family?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Depends on how wants to slice it. One idea is to map a transaction grouping of rows into a single HBase row. So you need a way to identify the inner rows. If you do that by column family you&apos;d have a CF for each row. In that case it&apos;d be better to take a prefix of the HBase columns to identify the (inner) row and the rest to be column.&lt;/p&gt;

&lt;p&gt;There are probably many other way to slice this.&lt;/p&gt;

&lt;p&gt;I&apos;ll file a jira for the Filter versioning interaction.&lt;/p&gt;</comment>
                            <comment id="13191816" author="lhofhansl" created="Tue, 24 Jan 2012 02:00:33 +0000"  >&lt;p&gt;The other thing that comes to mind is deletion.&lt;br/&gt;
We would need a delete marker that can flag a set of column by prefix. It would be almost identical to the columns delete marker but affect all column with a particular prefix.&lt;/p&gt;</comment>
                            <comment id="13191927" author="stack" created="Tue, 24 Jan 2012 06:24:03 +0000"  >&lt;p&gt;I see now what the other delete issue is about.&lt;/p&gt;

&lt;p&gt;Regards CF as prefix, yeah, its a prob. now where the logical cf and physical cf are same thing.  If we had locality groups, as per BT paper, we could have lots of cfs.&lt;/p&gt;</comment>
                            <comment id="13193551" author="lhofhansl" created="Thu, 26 Jan 2012 04:25:38 +0000"  >&lt;p&gt;Is anybody interested in me exploring the split prefix idea described above?&lt;/p&gt;

&lt;p&gt;Basically a table would declare a prefix of N bytes, and during splitting we make sure don&apos;t split values with the same prefix (which essentially just means that we calculate the midKey as we do now, and just take the first N bytes to perform the actual split, hence actual split point would always be aligned with the prefixes).&lt;br/&gt;
That way we have defined a grouping of rows that could participate in local transactions.&lt;/p&gt;</comment>
                            <comment id="13194879" author="tlipcon" created="Fri, 27 Jan 2012 16:05:47 +0000"  >&lt;p&gt;I&apos;d rather see some ability to make the split row determination a pluggable interface, so this could be implemented without changing core. Do you think that sounds feasible?&lt;/p&gt;

&lt;p&gt;Pie-in-the-sky wise, it would be great if HBase had a data model that was just a hierarchy with a configurable number of tables. Right now we have (row, col, ts) keys, where row is both the unit of splittability and the unit of atomicity. It would be cool if instead you could have a table with (foo, bar, baz, ts) where &quot;foo&quot; was the unit of split and &quot;baz&quot; was the unit of atomicity &amp;#8211; or even do away with timestamps on a row. But that would be a rather giant change.&lt;/p&gt;</comment>
                            <comment id="13195187" author="stack" created="Fri, 27 Jan 2012 22:43:23 +0000"  >&lt;p&gt;@Lars I&apos;m &apos;intellectually&apos; interested.  I have no practical need.  I&apos;m more interested in our being able to support large rows (intra-row scanning, etc.); i.e. one row in a region and that region is huge and it works.&lt;/p&gt;</comment>
                            <comment id="13195270" author="lhofhansl" created="Sat, 28 Jan 2012 00:20:06 +0000"  >&lt;p&gt;@Todd: Making split row determination pluggable is a good idea. Not sure how this would interact with the possibility of choosing explicit split points through the HBase shell, would need to disable that (unless the split policy supports it).&lt;/p&gt;

&lt;p&gt;Would also need to work on a per table basis.&lt;/p&gt;

&lt;p&gt;The pie-in-the-sky sounds cool and also like a rewrite of HBase. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  (You mean &quot;bar&quot; being the unit of atomicity - not &quot;baz&quot;, right? &lt;/p&gt;

&lt;p&gt;@Stack: I hear you. Means that the client and data modeling would have to change completely if it needs transactions.&lt;/p&gt;</comment>
                            <comment id="13197328" author="stack" created="Tue, 31 Jan 2012 22:26:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;I hear you. Means that the client and data modeling would have to change completely if it needs transactions.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Could this be done as a facade atop our current api?&lt;/p&gt;</comment>
                            <comment id="13197345" author="lhofhansl" created="Tue, 31 Jan 2012 22:48:02 +0000"  >&lt;p&gt;Potentially. I also filed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5304&quot; title=&quot;Pluggable split key policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5304&quot;&gt;&lt;del&gt;HBASE-5304&lt;/del&gt;&lt;/a&gt;. Turns out that it is not that hard to make the split key policy pluggable per table.&lt;br/&gt;
With that one can define a policy to keep ranges of rows together (regions still cannot overlap or have holes of course). After that we can extend &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5203&quot; title=&quot;Group atomic put/delete operation into a single WALEdit to handle region server failures.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5203&quot;&gt;&lt;del&gt;HBASE-5203&lt;/del&gt;&lt;/a&gt; to allow multiple rows (and fail cold at the region server if the rows are not colocated).&lt;/p&gt;</comment>
                            <comment id="13199340" author="lhofhansl" created="Thu, 2 Feb 2012 23:07:17 +0000"  >&lt;p&gt;Now that &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5304&quot; title=&quot;Pluggable split key policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5304&quot;&gt;&lt;del&gt;HBASE-5304&lt;/del&gt;&lt;/a&gt; is committed, I would to rekindle the discussion here.&lt;/p&gt;

&lt;p&gt;We have need to be able to co-locate some data for our tenant (for example all data of a specific user within a specific tenant space), in order to provide fast atomic operations.&lt;/p&gt;

&lt;p&gt;With &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5304&quot; title=&quot;Pluggable split key policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5304&quot;&gt;&lt;del&gt;HBASE-5304&lt;/del&gt;&lt;/a&gt; it is now possible to provide a split policy that (within the HBase constraints, of course) allows to guide the split process to co-locate parts of the data. What is missing is a small change on top of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3584&quot; title=&quot;Allow atomic put/delete in one call&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3584&quot;&gt;&lt;del&gt;HBASE-3584&lt;/del&gt;&lt;/a&gt; to allow atomic cross row operations.&lt;br/&gt;
See the first patch I have attached here - 5229.txt.&lt;br/&gt;
I would change the RegionMutation to MultiRowMutation, but in principle it would be the same. A very small, safe, incremental change.&lt;/p&gt;</comment>
                            <comment id="13199452" author="lhofhansl" created="Fri, 3 Feb 2012 01:22:37 +0000"  >&lt;p&gt;Patch that works for me. Looks bigger than it is. Just refactors some code to make it usable for MultiRow ops.&lt;/p&gt;

&lt;p&gt;&quot;Advanced use only&quot; is prominently mentioned in the Javadoc, and it also advises to either disable splitting or use a custom RegionSplitPolicy.&lt;/p&gt;</comment>
                            <comment id="13199459" author="jiraposter@reviews.apache.org" created="Fri, 3 Feb 2012 01:30:52 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This builds on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3584&quot; title=&quot;Allow atomic put/delete in one call&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3584&quot;&gt;&lt;del&gt;HBASE-3584&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5203&quot; title=&quot;Group atomic put/delete operation into a single WALEdit to handle region server failures.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5203&quot;&gt;&lt;del&gt;HBASE-5203&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5304&quot; title=&quot;Pluggable split key policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5304&quot;&gt;&lt;del&gt;HBASE-5304&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Multiple Rows can be locked and applied atomically as long as the application ensures that all rows reside in the same Region (by presplitting or a custom RegionSplitPolicy).&lt;br/&gt;
At SFDC we can use this to colocate subsets of a tenant&apos;s data and allow atomic operations over these subsets.&lt;/p&gt;

&lt;p&gt;Obviously this is an advanced features and this prominently called out in the Javadoc.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5229&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/a&gt; 1239953 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3748/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Tests added to TestFromClientSide and TestAtomicOperation&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Lars&lt;/p&gt;
</comment>
                            <comment id="13199514" author="jiraposter@reviews.apache.org" created="Fri, 3 Feb 2012 04:47:51 +0000"  >&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/#review4788&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#review4788&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10525&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10525&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should be &apos; to mutateRows&apos;&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10526&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10526&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should read &apos; the mutations&apos;&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10529&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10529&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can the two add() methods be combined into one which accepts Mutation ?&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10527&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10527&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is this method thread-safe ?&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10528&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10528&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This comment can be removed, right ?&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10531&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10531&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    From its name, RowMutation seems to refer to single row. It is a little confusing RowMutation extends MultiRowMutation.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10530&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10530&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    version would be read / written twice, right ?&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10532&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10532&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should be &apos;within the region&apos;, right ?&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10533&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10533&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    rowsToLock.size() could be smaller than mutations.size(), right ?&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10535&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10535&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can we refer regionName from rm (the MultiRowMutation) ?&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10534&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10534&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should be mutateRows&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10536&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10536&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should read &quot;atomic mutation&quot;&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13199518" author="jiraposter@reviews.apache.org" created="Fri, 3 Feb 2012 04:57:52 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 04:45:54, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The for the thourough review as usual.&lt;br/&gt;
I&apos;ll have a new patch tomorrow.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 04:45:54, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;, line 60&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line60&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line60&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can the two add() methods be combined into one which accepts Mutation ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That is because there are other mutations that I do not support (Increment/Append).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 04:45:54, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;, line 65&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line65&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line65&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This comment can be removed, right ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 04:45:54, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&lt;/a&gt;, line 39&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72040#file72040line39&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72040#file72040line39&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     From its name, RowMutation seems to refer to single row. It is a little confusing RowMutation extends MultiRowMutation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah. Maybe I&apos;ll have a common super class instead.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 04:45:54, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&lt;/a&gt;, line 96&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72040#file72040line96&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72040#file72040line96&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     version would be read / written twice, right ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes. Need to fix that.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 04:45:54, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;, line 4211&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72044#file72044line4211&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72044#file72044line4211&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     rowsToLock.size() could be smaller than mutations.size(), right ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oh yes... Good point.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 04:45:54, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt;, line 3160&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72045#file72045line3160&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72045#file72045line3160&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can we refer regionName from rm (the MultiRowMutation) ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, because all rows on the MultiRowMutation need to be in the same region. HTable just uses the first Mutation to find the region to the used.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 04:45:54, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;, line 64&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line64&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line64&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is this method thread-safe ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Should be. Only uses local state or protected data structures (like put, get, etc)&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/#review4788&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#review4788&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2012-02-03 01:29:58, Lars Hofhansl wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3748/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-02-03 01:29:58)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This builds on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3584&quot; title=&quot;Allow atomic put/delete in one call&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3584&quot;&gt;&lt;del&gt;HBASE-3584&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5203&quot; title=&quot;Group atomic put/delete operation into a single WALEdit to handle region server failures.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5203&quot;&gt;&lt;del&gt;HBASE-5203&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5304&quot; title=&quot;Pluggable split key policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5304&quot;&gt;&lt;del&gt;HBASE-5304&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Multiple Rows can be locked and applied atomically as long as the application ensures that all rows reside in the same Region (by presplitting or a custom RegionSplitPolicy).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;At SFDC we can use this to colocate subsets of a tenant&apos;s data and allow atomic operations over these subsets.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Obviously this is an advanced features and this prominently called out in the Javadoc.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5229&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/a&gt; 1239953 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/a&gt; 1239953 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&lt;/a&gt; 1239953 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/a&gt; 1239953 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;/a&gt; 1239953 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;/a&gt; 1239953 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt; 1239953 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt; 1239953 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/a&gt; 1239953 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/a&gt; 1239953 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/a&gt; 1239953 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3748/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tests added to TestFromClientSide and TestAtomicOperation&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Lars&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13199520" author="jiraposter@reviews.apache.org" created="Fri, 3 Feb 2012 05:01:53 +0000"  >&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/#review4789&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#review4789&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10537&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10537&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should we check they are for different rows here?&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10543&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10543&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is called by default.  No need to call it explicitly.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10545&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10545&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is called by default.  No need to call it explicitly.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jimmy&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13199523" author="jiraposter@reviews.apache.org" created="Fri, 3 Feb 2012 05:07:51 +0000"  >&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/#review4791&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#review4791&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10547&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10547&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    My point was we shouldn&apos;t throw exception in this case.&lt;br/&gt;
    MultiRowMutation should be delivered to the correct region.&lt;/p&gt;

&lt;p&gt;    I think we agree on the above.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13199932" author="jiraposter@reviews.apache.org" created="Fri, 3 Feb 2012 18:47:53 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 05:01:34, Jimmy Xiang wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;, line 67&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line67&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line67&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should we check they are for different rows here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It is still valid to pass the same rows here.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 05:01:34, Jimmy Xiang wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&lt;/a&gt;, line 46&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72040#file72040line46&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72040#file72040line46&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This is called by default.  No need to call it explicitly.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;rights... will fix.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13199933" author="jiraposter@reviews.apache.org" created="Fri, 3 Feb 2012 18:47:56 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 05:07:24, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt;, line 3160&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72045#file72045line3160&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72045#file72045line3160&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     My point was we shouldn&apos;t throw exception in this case.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     MultiRowMutation should be delivered to the correct region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think we agree on the above.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oh... MultiRowMutation does not know anything about regions. So we have the use the one passed.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13199934" author="jiraposter@reviews.apache.org" created="Fri, 3 Feb 2012 18:49:52 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 04:45:54, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&lt;/a&gt;, line 39&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72040#file72040line39&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72040#file72040line39&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     From its name, RowMutation seems to refer to single row. It is a little confusing RowMutation extends MultiRowMutation.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yeah. Maybe I&apos;ll have a common super class instead.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;On 2nd thought. RowMutation &lt;b&gt;is&lt;/b&gt; specialisation of MultiRowMutation, one that only allows a single row.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;


</comment>
                            <comment id="13199940" author="jiraposter@reviews.apache.org" created="Fri, 3 Feb 2012 18:51:52 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 04:45:54, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&lt;/a&gt;, line 96&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72040#file72040line96&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72040#file72040line96&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     version would be read / written twice, right ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yes. Need to fix that.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;And actually this is what I had in mind too. Both MultiRowMutation and RowMution write their version.&lt;br/&gt;
MultiRowMutation knowns to serialize mutations, that process needs to be versioned.&lt;br/&gt;
RowMutation adds some fields on top of that, those also need to be versioned.&lt;/p&gt;

&lt;p&gt;Maybe the two should be entirely independent (at the expense of a few duplicated lines of code) so that they can evolve independently.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;


</comment>
                            <comment id="13199946" author="zhihyu@ebaysf.com" created="Fri, 3 Feb 2012 19:00:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;Maybe the two should be entirely independent (at the expense of a few duplicated lines of code) so that they can evolve independently.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That is better.&lt;/p&gt;</comment>
                            <comment id="13199953" author="jiraposter@reviews.apache.org" created="Fri, 3 Feb 2012 19:15:53 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 05:01:34, Jimmy Xiang wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;, line 67&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line67&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line67&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should we check they are for different rows here?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;It is still valid to pass the same rows here.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s right.  Should the server side share the same function to do MultiRowMutation and RowMutation?  Looks the server side doesn&apos;t have much difference for mutateRow() and mutateRows()&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jimmy&lt;/li&gt;
&lt;/ul&gt;


</comment>
                            <comment id="13200002" author="jiraposter@reviews.apache.org" created="Fri, 3 Feb 2012 20:01:53 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-02-03 19:59:55.515243)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Addressed Ted&apos;s and Jimmy&apos;s comments.&lt;br/&gt;
Also: &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;RowMutation and MultiRowMutation are evolved independently (at the expense of some replicated code)&lt;/li&gt;
	&lt;li&gt;MultiRowMutation cannot participate itself in a Multi operation (because it does not implement Row). Could be made working, but would need some refactoring in a different jira.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This builds on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3584&quot; title=&quot;Allow atomic put/delete in one call&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3584&quot;&gt;&lt;del&gt;HBASE-3584&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5203&quot; title=&quot;Group atomic put/delete operation into a single WALEdit to handle region server failures.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5203&quot;&gt;&lt;del&gt;HBASE-5203&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5304&quot; title=&quot;Pluggable split key policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5304&quot;&gt;&lt;del&gt;HBASE-5304&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Multiple Rows can be locked and applied atomically as long as the application ensures that all rows reside in the same Region (by presplitting or a custom RegionSplitPolicy).&lt;br/&gt;
At SFDC we can use this to colocate subsets of a tenant&apos;s data and allow atomic operations over these subsets.&lt;/p&gt;

&lt;p&gt;Obviously this is an advanced features and this prominently called out in the Javadoc.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5229&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/a&gt; 1239953 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/a&gt; 1239953 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3748/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Tests added to TestFromClientSide and TestAtomicOperation&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Lars&lt;/p&gt;
</comment>
                            <comment id="13200059" author="zhihyu@ebaysf.com" created="Fri, 3 Feb 2012 21:26:56 +0000"  >&lt;p&gt;Latest patch looks much cleaner.&lt;br/&gt;
Shall we let Hadoop QA run over the patch ?&lt;/p&gt;</comment>
                            <comment id="13200104" author="jiraposter@reviews.apache.org" created="Fri, 3 Feb 2012 22:27:52 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 05:01:34, Jimmy Xiang wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;, line 67&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line67&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line67&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should we check they are for different rows here?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;It is still valid to pass the same rows here.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jimmy Xiang wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;That&apos;s right.  Should the server side share the same function to do MultiRowMutation and RowMutation?  Looks the server side doesn&apos;t have much difference for mutateRow() and mutateRows()&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oh... I misunderstood what you were saying.&lt;br/&gt;
On the server it is mostly the same code. On the client I would like to keep them separate features as RowMutation (hopefully) is a pretty standard feature, whereas MultiRowMutation is pretty advanced (need to manage your Splits, etc) and really treads new HBase ground.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13200106" author="lhofhansl" created="Fri, 3 Feb 2012 22:30:41 +0000"  >&lt;p&gt;@Ted... Getting test run in.&lt;/p&gt;</comment>
                            <comment id="13200164" author="hadoopqa" created="Fri, 3 Feb 2012 23:44:45 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12513190/5229-multiRow-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12513190/5229-multiRow-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -136 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 156 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/902//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/902//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/902//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/902//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/902//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/902//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13200236" author="lhofhansl" created="Sat, 4 Feb 2012 01:11:39 +0000"  >&lt;p&gt;Test run looks good.&lt;/p&gt;</comment>
                            <comment id="13200616" author="lhofhansl" created="Sun, 5 Feb 2012 01:08:52 +0000"  >&lt;p&gt;Is there still general trepidation around this?&lt;br/&gt;
The patch is very lightweight and does not change any existing functionality. With &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5304&quot; title=&quot;Pluggable split key policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5304&quot;&gt;&lt;del&gt;HBASE-5304&lt;/del&gt;&lt;/a&gt; it can be quite helpful to provide local transaction to help in multi-tenant settings.&lt;/p&gt;

&lt;p&gt;We can possibly call out the &quot;advancedness&quot; of this feature, maybe by having an &quot;advanced htable&quot; (or something like this). Not sure that is worth splitting the API, though.&lt;/p&gt;</comment>
                            <comment id="13200681" author="jiraposter@reviews.apache.org" created="Sun, 5 Feb 2012 07:26:53 +0000"  >&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/#review4822&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#review4822&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;A couple of nits and small implementation details, but overall looks pretty good.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10588&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10588&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think is this unnecessary, javadoc should handle inheriting the docs.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10587&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10587&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    or presplitting as is described in other documenttation.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10586&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10586&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Probably want to wrap NOTE in &amp;lt;b&amp;gt; tags to call it out.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10590&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10590&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    A javadoc here might be nice to indicate that the nullary constructor is actually completely ok to use (as opposed to the more common state of being reserved for readFields).&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10585&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10585&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Even though it uses protected structures doesn&apos;t mean that its necessarily thread safe. In fact, because it is using the standard ArrayList, there is no guarantee of safety. Either the class should be marked as not thread safe OR the mutations should be wrapped as a concurrent list.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10591&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10591&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You really don&apos;t need to keep around the row anymore either because you can get that from the mutations as you already do mutateRows with MultiRowMutation. Its nice to store it, but is only going to be checked infrequently and saves you a little bit over the wire (which could add up, depending on row size).&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10592&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10592&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Suprised this isn&apos;t a utility method in HRegion - it seems really useful. Maybe worth pulling out for general use.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10593&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10593&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This isn&apos;t actually true, right? With multirow, you are actually going to lock more than one row (and the lockId null seems kind of a hack around that as it is always null, so far).&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10594&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10594&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    nit: lockID rather than just lid would be slightly descriptive.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10595&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10595&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    But in the comments on the MultiRowMutation you push that checking off onto the RS, so no checking really happens then (except, I guess when you try to mutate rows on the region and it fails b/c those rows aren&apos;t there, but that seems kinda late for the check).&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10596&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10596&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Wow, this is ugly. Maybe we should consider some refactoring of this later?&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10597&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10597&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This class can get easily bloated as we add more types. Might be worth considering refactoring this out into its own test.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jesse&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13200911" author="jiraposter@reviews.apache.org" created="Sun, 5 Feb 2012 21:27:57 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; A couple of nits and small implementation details, but overall looks pretty good.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You&apos;re looking at an old version of the patch. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt;, line 3160&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72045#file72045line3160&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72045#file72045line3160&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     But in the comments on the MultiRowMutation you push that checking off onto the RS, so no checking really happens then (except, I guess when you try to mutate rows on the region and it fails b/c those rows aren&apos;t there, but that seems kinda late for the check).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Checking is happening the region.internalMutate.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/a&gt;, line 786&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72037#file72037line786&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72037#file72037line786&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think is this unnecessary, javadoc should handle inheriting the docs.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;s done elsewhere, it is good to call out that no doc was added here, because the interface has the doc.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/a&gt;, line 284&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72038#file72038line284&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72038#file72038line284&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     or presplitting as is described in other documenttation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, should add this.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;, line 35&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line35&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line35&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Probably want to wrap NOTE in &amp;lt;b&amp;gt; tags to call it out.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;, line 45&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line45&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line45&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     A javadoc here might be nice to indicate that the nullary constructor is actually completely ok to use (as opposed to the more common state of being reserved for readFields).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good point. Although unless it is called out that you cannot use a constructor there should be no reason whyt you couldn&apos;t.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;, line 64&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line64&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line64&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Even though it uses protected structures doesn&apos;t mean that its necessarily thread safe. In fact, because it is using the standard ArrayList, there is no guarantee of safety. Either the class should be marked as not thread safe OR the mutations should be wrapped as a concurrent list.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I disagree.&lt;br/&gt;
This is a client side object and none of the client side objects are threadsafe nor should they be (see Put.java/Delete.java/Increment.java/Append.java/etc), that&apos;s the task of client application.&lt;/p&gt;

&lt;p&gt;I misread Ted&apos;s comment before, of course this method is not threadsafe.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/RowMutation.java&lt;/a&gt;, line 95&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72040#file72040line95&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72040#file72040line95&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     You really don&apos;t need to keep around the row anymore either because you can get that from the mutations as you already do mutateRows with MultiRowMutation. Its nice to store it, but is only going to be checked infrequently and saves you a little bit over the wire (which could add up, depending on row size).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Same as Put and Delete (where every KV already has the row).&lt;br/&gt;
There is room optimization, but this is not the jira to do that.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;, line 4161&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72044#file72044line4161&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72044#file72044line4161&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Suprised this isn&apos;t a utility method in HRegion - it seems really useful. Maybe worth pulling out for general use.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;internalMutate?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;, line 4181&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72044#file72044line4181&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72044#file72044line4181&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This isn&apos;t actually true, right? With multirow, you are actually going to lock more than one row (and the lockId null seems kind of a hack around that as it is always null, so far).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;lockId could be passed to use one lock to lock all rows. Not used, yet, but still useful.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;, line 4214&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72044#file72044line4214&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72044#file72044line4214&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     nit: lockID rather than just lid would be slightly descriptive.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;getLock is pretty clear, so is rowsToLock.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt;, line 3346&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72045#file72045line3346&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72045#file72045line3346&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Wow, this is ugly. Maybe we should consider some refactoring of this later?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not only ugly, but also wrong (see 2nd version of the patch). MultiRowMutation does not implement Row so it cannot be part of a Multi action.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/a&gt;, line 272&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72048#file72048line272&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72048#file72048line272&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This class can get easily bloated as we add more types. Might be worth considering refactoring this out into its own test.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;See 2nd version of patch.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13200912" author="jiraposter@reviews.apache.org" created="Sun, 5 Feb 2012 21:27:59 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-03 04:45:54, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt;, line 64&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line64&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72039#file72039line64&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is this method thread-safe ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Should be. Only uses local state or protected data structures (like put, get, etc)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Misread your comment Ted. This method is indeed not thread-safe nor should it be. This is a client side object and it up to the application to provide thread safety (which is identical to Put/Delete/Append/Increment, and indeed HTable).&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13200922" author="jiraposter@reviews.apache.org" created="Sun, 5 Feb 2012 21:47:57 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;, line 4161&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72044#file72044line4161&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72044#file72044line4161&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Suprised this isn&apos;t a utility method in HRegion - it seems really useful. Maybe worth pulling out for general use.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;internalMutate?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ah misread again. There is a utility method: checkRow, which I should indeed use. The first incarnation of this did something different, now checkRow should be used.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13200928" author="jiraposter@reviews.apache.org" created="Sun, 5 Feb 2012 21:55:58 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-05 07:26:08, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;, line 4161&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/1/?file=72044#file72044line4161&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/1/?file=72044#file72044line4161&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Suprised this isn&apos;t a utility method in HRegion - it seems really useful. Maybe worth pulling out for general use.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;internalMutate?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ah misread again. There is a utility method: checkRow, which I should indeed use. The first incarnation of this did something different, now checkRow should be used.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Remember now. checkRow throws WrongRegionException, which means the client will retry. Here I throws DoNotRetryException, because retrying will be wrong.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13201354" author="jiraposter@reviews.apache.org" created="Mon, 6 Feb 2012 15:53:58 +0000"  >&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/#review4833&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#review4833&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10616&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10616&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Do we need to be sorting rowsToLock?&lt;/p&gt;

&lt;p&gt;    I&apos;m thinking of multiple concurrent mutateRows operation, trying to lock the same set of rows.&lt;/p&gt;

&lt;p&gt;    Perhaps, throwing IOException is going to prevent us from a situation where we end up with a deadlock. But, we still might want to sort it to ensure (better) progress (no livelock).&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Amitanand&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13201365" author="jiraposter@reviews.apache.org" created="Mon, 6 Feb 2012 16:11:58 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-06 15:52:43, Amitanand Aiyer wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;, line 4212&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/2/?file=72266#file72266line4212&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/2/?file=72266#file72266line4212&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Do we need to be sorting rowsToLock?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I&apos;m thinking of multiple concurrent mutateRows operation, trying to lock the same set of rows.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Perhaps, throwing IOException is going to prevent us from a situation where we end up with a deadlock. But, we still might want to sort it to ensure (better) progress (no livelock).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;MutateRows sorts them (by using a TreeSet with Bytes.BYTES_COMPARATOR, for exactly this reason.&lt;br/&gt;
Maybe this should be called out here, by making the argument a SortedSet.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13201515" author="jiraposter@reviews.apache.org" created="Mon, 6 Feb 2012 19:53:58 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-02-06 19:51:58.341235)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Addressed a few comments.&lt;br/&gt;
In addition the client can retry a MultiRowMutation if the first row is not available in the region (as that might indicate that the region moved).&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This builds on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3584&quot; title=&quot;Allow atomic put/delete in one call&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3584&quot;&gt;&lt;del&gt;HBASE-3584&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5203&quot; title=&quot;Group atomic put/delete operation into a single WALEdit to handle region server failures.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5203&quot;&gt;&lt;del&gt;HBASE-5203&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5304&quot; title=&quot;Pluggable split key policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5304&quot;&gt;&lt;del&gt;HBASE-5304&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Multiple Rows can be locked and applied atomically as long as the application ensures that all rows reside in the same Region (by presplitting or a custom RegionSplitPolicy).&lt;br/&gt;
At SFDC we can use this to colocate subsets of a tenant&apos;s data and allow atomic operations over these subsets.&lt;/p&gt;

&lt;p&gt;Obviously this is an advanced features and this prominently called out in the Javadoc.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5229&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt; 1241120 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/a&gt; 1241120 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/a&gt; 1241120 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/a&gt; 1241120 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;/a&gt; 1241120 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;/a&gt; 1241120 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt; 1241120 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MultiRowMutation.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/a&gt; 1241120 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/a&gt; 1241120 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/a&gt; 1241120 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3748/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Tests added to TestFromClientSide and TestAtomicOperation&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Lars&lt;/p&gt;
</comment>
                            <comment id="13201556" author="jiraposter@reviews.apache.org" created="Mon, 6 Feb 2012 20:25:58 +0000"  >&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/#review4844&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#review4844&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10643&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10643&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What if rm contains more than one Mutation ?&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10642&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10642&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    else is not needed considering exception is thrown on line 4170.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13201563" author="zhihyu@ebaysf.com" created="Mon, 6 Feb 2012 20:37:45 +0000"  >&lt;p&gt;For my first comment, RowMutation maintains single row in internalAdd().&lt;br/&gt;
So it should be fine passing the row directly to internalMutate().&lt;/p&gt;</comment>
                            <comment id="13201624" author="jiraposter@reviews.apache.org" created="Mon, 6 Feb 2012 21:40:57 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-06 20:24:17, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;, line 4152&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/3/?file=72610#file72610line4152&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/3/?file=72610#file72610line4152&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What if rm contains more than one Mutation ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hopefully rm does contain more than one Mutation, otherwise using this API is pointless. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
It is guranteed, though, that all Mutations are for this single row.&lt;/p&gt;

&lt;p&gt;Do you see a concern?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-06 20:24:17, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt;, line 4171&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/3/?file=72610#file72610line4171&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/3/?file=72610#file72610line4171&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     else is not needed considering exception is thrown on line 4170.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right. But this makes the flow clear. Personally I am not a big fan of having to look through code and having to piece together the control flow by tracking exceptions and return statements.&lt;br/&gt;
I don&apos;t mind changing it, though.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13202095" author="lhofhansl" created="Tue, 7 Feb 2012 05:46:20 +0000"  >&lt;p&gt;Another option I thought of to make this interface less public, is to not add mutateRows to HRegionInterface and HTableInterface/HTable, but rather to RegionServerServices and hence allow access from Coprocessor endpoints, only. HRegionServer would still have a public mutateRows method (or maybe a more generalized version of it) but it will be only accessible to coprocessors.&lt;/p&gt;

&lt;p&gt;If that sounds like a good idea, I&apos;ll update the patch to do that.&lt;/p&gt;</comment>
                            <comment id="13202105" author="lhofhansl" created="Tue, 7 Feb 2012 06:01:18 +0000"  >&lt;p&gt;It&apos;s even simpler. A coprocessor endpoint has access to its region. If I rename internalMutate from my patch to mutateRowsWithLocks(List&amp;lt;Mutations&amp;gt; mutations, Set&amp;lt;String&amp;gt; rowsToLock) and make it public in HRegion, it can be called from a coprocessor endpoint.&lt;br/&gt;
It would not exposed in HRegionInterface, HRegionServer, RegionServerServices, or the HTableInterfaces.&lt;/p&gt;</comment>
                            <comment id="13202584" author="lhofhansl" created="Tue, 7 Feb 2012 18:07:34 +0000"  >&lt;p&gt;Here&apos;s what I had in mind.&lt;br/&gt;
The patch is essentially the same (a slight refactoring of the mutateRow code), but without changes to HTable&lt;span class=&quot;error&quot;&gt;&amp;#91;Interface&amp;#93;&lt;/span&gt;, HRegionServer, HRegionInterface, etc.&lt;/p&gt;

&lt;p&gt;mutateRowsWithLocks is now public on HRegion so that coprocessor endpoints have access to it.&lt;/p&gt;

&lt;p&gt;The test classes MultiRowMutation&lt;/p&gt;
{Protocol|Endpoint}
&lt;p&gt; illustrate how one could write a coprocessor using this feature.&lt;br/&gt;
(I could move these two to HBase proper into org.apache.hadoop.hbase.coprocessor).&lt;/p&gt;

&lt;p&gt;TestFromClientSide.testMultiRowMutation illustrates how this would look from a client.&lt;/p&gt;

&lt;p&gt;Since coprocessor already are region aware, this is a nice match of APIs.&lt;/p&gt;

&lt;p&gt;I think this addresses all objections I have noted so far.&lt;br/&gt;
Please have a look and let me know what you think. I would like to commit this version (or one very similar to it).&lt;/p&gt;</comment>
                            <comment id="13202624" author="hadoopqa" created="Tue, 7 Feb 2012 18:53:33 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12513647/5229-endpoint.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12513647/5229-endpoint.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 12 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -136 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 156 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/912//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/912//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/912//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/912//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/912//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/912//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13202650" author="zhihyu@ebaysf.com" created="Tue, 7 Feb 2012 19:19:14 +0000"  >&lt;p&gt;Latest patch is of decent size.&lt;br/&gt;
Can you update the patch on review board ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13202670" author="tlipcon" created="Tue, 7 Feb 2012 19:36:36 +0000"  >&lt;p&gt;Also, since this extends the semantics exposed by HBase we should probably point it out widely on the dev list to make sure everyone agrees with the direction.&lt;/p&gt;</comment>
                            <comment id="13202684" author="jiraposter@reviews.apache.org" created="Tue, 7 Feb 2012 19:42:57 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-02-07 19:41:16.600336)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is essentially the same patch with the following differences:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;all changes to HTable, HTableInterface, HRegionServer, HRegionInterface removed&lt;/li&gt;
	&lt;li&gt;internalMutate made public and renamed to mutateRowsWithLocks&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The idea is that mutateRowsWithLocks is only available to coprocessors, and not to the client HTableInterface API.&lt;br/&gt;
Coprocessors already need to be region aware, so this is a nice match of APIs. The test classes MulitRowMutationProtocol and MulitRowMutationEndPoint serve as an example of how to do that.&lt;/p&gt;

&lt;p&gt;TestFromClientSide.testMultiRowMutation illustrates how the client API would like (once a coprocessor is in place)&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This builds on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3584&quot; title=&quot;Allow atomic put/delete in one call&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3584&quot;&gt;&lt;del&gt;HBASE-3584&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5203&quot; title=&quot;Group atomic put/delete operation into a single WALEdit to handle region server failures.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5203&quot;&gt;&lt;del&gt;HBASE-5203&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5304&quot; title=&quot;Pluggable split key policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5304&quot;&gt;&lt;del&gt;HBASE-5304&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Multiple Rows can be locked and applied atomically as long as the application ensures that all rows reside in the same Region (by presplitting or a custom RegionSplitPolicy).&lt;br/&gt;
At SFDC we can use this to colocate subsets of a tenant&apos;s data and allow atomic operations over these subsets.&lt;/p&gt;

&lt;p&gt;Obviously this is an advanced features and this prominently called out in the Javadoc.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5229&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt; 1241350 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt; 1241350 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/MultiRowMutationEndpoint.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/MultiRowMutationEndpoint.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/MultiRowMutationProtocol.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/MultiRowMutationProtocol.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/a&gt; 1241350 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/a&gt; 1241350 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3748/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Tests added to TestFromClientSide and TestAtomicOperation&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Lars&lt;/p&gt;
</comment>
                            <comment id="13202700" author="lhofhansl" created="Tue, 7 Feb 2012 19:55:05 +0000"  >&lt;p&gt;@Todd: The last patch only provides a hook for a coprocessor endpoint to call (and the hook itself is just a more flexible way to call an existing method).&lt;/p&gt;

&lt;p&gt;So in order to use this, a user would need to write and install a coprocessor endpoint.&lt;/p&gt;

&lt;p&gt;Coprocessors can already do whatever they want, and that includes modifying multiple rows (but this feature cannot be done efficiently or correctly, hence the small core change).&lt;/p&gt;

&lt;p&gt;Only HRegion is changed (20 lines without comments), the rest is test code.&lt;/p&gt;</comment>
                            <comment id="13202739" author="jiraposter@reviews.apache.org" created="Tue, 7 Feb 2012 20:24:58 +0000"  >&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/#review4876&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#review4876&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/MultiRowMutationProtocol.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/MultiRowMutationProtocol.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10746&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10746&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Please add javadoc.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13202786" author="lhofhansl" created="Tue, 7 Feb 2012 21:05:43 +0000"  >&lt;p&gt;@Ted: Will do. Any other comments/converns?&lt;/p&gt;</comment>
                            <comment id="13202805" author="zhihyu@ebaysf.com" created="Tue, 7 Feb 2012 21:21:00 +0000"  >&lt;p&gt;The patch looks clean.&lt;/p&gt;

&lt;p&gt;Other people&apos;s comments are important, too.&lt;/p&gt;</comment>
                            <comment id="13202815" author="tlipcon" created="Tue, 7 Feb 2012 21:32:30 +0000"  >&lt;p&gt;Gotcha - I hadn&apos;t looked at the most recent patch. Seems reasonable enough.&lt;/p&gt;</comment>
                            <comment id="13202827" author="lhofhansl" created="Tue, 7 Feb 2012 21:44:33 +0000"  >&lt;p&gt;Maybe I should file a new jira for the latest change and let this one rest... It seems like it went through too many iterations already.&lt;/p&gt;</comment>
                            <comment id="13202834" author="lhofhansl" created="Tue, 7 Feb 2012 21:48:11 +0000"  >&lt;p&gt;Oh and also, I could move the test coprocessor into org.apache.hadoop.hbase.coprocessor, so the endpoint for multirow mutations would be there as part of the HBase install, and a user would just need to load it (similar to what we do with the Aggregation Coprocessor).&lt;br/&gt;
Would that make it too official? (I&apos;m fine leaving it just in test, too)&lt;/p&gt;</comment>
                            <comment id="13202849" author="zhihyu@ebaysf.com" created="Tue, 7 Feb 2012 21:58:08 +0000"  >&lt;p&gt;I am fine with moving MultiRowMutationEndpoint into org.apache.hadoop.hbase.coprocessor&lt;/p&gt;</comment>
                            <comment id="13202943" author="jiraposter@reviews.apache.org" created="Tue, 7 Feb 2012 23:24:58 +0000"  >&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/#review4885&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#review4885&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;+1&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13202980" author="jiraposter@reviews.apache.org" created="Tue, 7 Feb 2012 23:50:58 +0000"  >&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/#review4886&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#review4886&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;Small nits depending on what you want to do here. Looks good though.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/MultiRowMutationEndpoint.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/MultiRowMutationEndpoint.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10769&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10769&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This could be good to put into client.coprocessor, rather than client (when you make the move over).&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10775&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10775&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    It would be nice if this stuff was in its own test, &lt;em&gt;IF&lt;/em&gt; you are going to pull the endpoint out to src/main. It will help make the functionality a bit more obvious.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jesse&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13202993" author="jiraposter@reviews.apache.org" created="Tue, 7 Feb 2012 23:58:59 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-07 23:49:19, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/MultiRowMutationEndpoint.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/MultiRowMutationEndpoint.java&lt;/a&gt;, line 39&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/4/?file=72911#file72911line39&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/4/?file=72911#file72911line39&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This could be good to put into client.coprocessor, rather than client (when you make the move over).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is a good point.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13202996" author="jiraposter@reviews.apache.org" created="Wed, 8 Feb 2012 00:00:58 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-07 23:49:19, Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/MultiRowMutationEndpoint.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/MultiRowMutationEndpoint.java&lt;/a&gt;, line 39&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/4/?file=72911#file72911line39&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/4/?file=72911#file72911line39&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This could be good to put into client.coprocessor, rather than client (when you make the move over).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is a good point.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Heh, I am way ahead of you guys &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Suggested already on the jira.&lt;br/&gt;
Will have a new patch soon, hopefully the last revision.&lt;br/&gt;
I would like to keep the test in TestFromClientSide, though.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13203010" author="jiraposter@reviews.apache.org" created="Wed, 8 Feb 2012 00:16:57 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-02-08 00:15:28.554140)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Hopefully the last iteration.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Added Javadoc&lt;/li&gt;
	&lt;li&gt;moved coprocessor endpoint to org.apache.hadoop.hbase.coprocessor (not ...hbase.client.coprocessor)&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This builds on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3584&quot; title=&quot;Allow atomic put/delete in one call&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3584&quot;&gt;&lt;del&gt;HBASE-3584&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5203&quot; title=&quot;Group atomic put/delete operation into a single WALEdit to handle region server failures.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5203&quot;&gt;&lt;del&gt;HBASE-5203&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5304&quot; title=&quot;Pluggable split key policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5304&quot;&gt;&lt;del&gt;HBASE-5304&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Multiple Rows can be locked and applied atomically as long as the application ensures that all rows reside in the same Region (by presplitting or a custom RegionSplitPolicy).&lt;br/&gt;
At SFDC we can use this to colocate subsets of a tenant&apos;s data and allow atomic operations over these subsets.&lt;/p&gt;

&lt;p&gt;Obviously this is an advanced features and this prominently called out in the Javadoc.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5229&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/MultiRowMutationEndpoint.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/MultiRowMutationEndpoint.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/MultiRowMutationProtocol.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/MultiRowMutationProtocol.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/a&gt; 1241536 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/a&gt; 1241536 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/a&gt; 1241536 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/a&gt; 1241536 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3748/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Tests added to TestFromClientSide and TestAtomicOperation&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Lars&lt;/p&gt;
</comment>
                            <comment id="13203018" author="lhofhansl" created="Wed, 8 Feb 2012 00:23:15 +0000"  >&lt;p&gt;If there are no further concerns, I will commit this change tomorrow.&lt;/p&gt;</comment>
                            <comment id="13203080" author="jiraposter@reviews.apache.org" created="Wed, 8 Feb 2012 01:06:59 +0000"  >&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3748/#review4889&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#review4889&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/MultiRowMutationProtocol.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/MultiRowMutationProtocol.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10786&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10786&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Replace operations with transactions.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10787&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10787&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Please plug in testMultiRowMutation&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/#comment10788&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/#comment10788&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    testMultiRowMutation here as well.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13203087" author="jiraposter@reviews.apache.org" created="Wed, 8 Feb 2012 01:10:59 +0000"  >
&lt;blockquote&gt;&lt;p&gt;On 2012-02-08 01:06:21, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ah yes, good catch as usual. If there&apos;re no further comments, I&apos;ll do that on commit.&lt;br/&gt;
Thanks Ted.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-08 01:06:21, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/MultiRowMutationProtocol.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/MultiRowMutationProtocol.java&lt;/a&gt;, line 28&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3748/diff/5/?file=72962#file72962line28&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3748/diff/5/?file=72962#file72962line28&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Replace operations with transactions.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;And presumably remove &quot;atomic&quot; as it is implied by transaction, right?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13203820" author="lhofhansl" created="Wed, 8 Feb 2012 18:31:31 +0000"  >&lt;p&gt;Committed to trunnk. Thanks everyone for bearing with me.&lt;/p&gt;</comment>
                            <comment id="13203825" author="lhofhansl" created="Wed, 8 Feb 2012 18:34:27 +0000"  >&lt;p&gt;Final patch for reference&lt;/p&gt;</comment>
                            <comment id="13204285" author="hudson" created="Thu, 9 Feb 2012 05:47:36 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #102 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/102/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/102/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt; Provide basic building blocks for &apos;multi-row&apos; local transactions.&lt;/p&gt;

&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/MultiRowMutationEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/MultiRowMutationProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13205340" author="hudson" created="Fri, 10 Feb 2012 10:26:37 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2656 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2656/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2656/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt; Provide basic building blocks for &apos;multi-row&apos; local transactions.&lt;/p&gt;

&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/MultiRowMutationEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/MultiRowMutationProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13210770" author="lhofhansl" created="Sat, 18 Feb 2012 02:33:43 +0000"  >&lt;p&gt;Note that Cassandra adds something similar in 1.1: &lt;a href=&quot;http://www.datastax.com/dev/blog/schema-in-cassandra-1-1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.datastax.com/dev/blog/schema-in-cassandra-1-1&lt;/a&gt; (check towards the end of that blog post).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12539420">HBASE-5257</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12545700">HBASE-5542</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12536610">HBASE-5104</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12520181">HBASE-4256</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12513647" name="5229-endpoint.txt" size="20456" author="lhofhansl" created="Tue, 7 Feb 2012 18:07:34 +0000"/>
                            <attachment id="12513841" name="5229-final.txt" size="21356" author="lhofhansl" created="Wed, 8 Feb 2012 18:34:27 +0000"/>
                            <attachment id="12513190" name="5229-multiRow-v2.txt" size="25922" author="lhofhansl" created="Fri, 3 Feb 2012 22:30:41 +0000"/>
                            <attachment id="12513089" name="5229-multiRow.txt" size="29842" author="lhofhansl" created="Fri, 3 Feb 2012 01:22:37 +0000"/>
                            <attachment id="12511449" name="5229-seekto-v2.txt" size="8410" author="lhofhansl" created="Sun, 22 Jan 2012 21:51:55 +0000"/>
                            <attachment id="12511366" name="5229-seekto.txt" size="6945" author="lhofhansl" created="Sat, 21 Jan 2012 06:04:22 +0000"/>
                            <attachment id="12511073" name="5229.txt" size="27558" author="lhofhansl" created="Thu, 19 Jan 2012 00:52:36 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12539548">HBASE-5266</subtask>
                            <subtask id="12545691">HBASE-5541</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 19 Jan 2012 18:39:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>224409</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 43 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08r9b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>49016</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>