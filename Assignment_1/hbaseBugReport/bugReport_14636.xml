<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:54:59 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14636/HBASE-14636.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14636] Clear HFileScannerImpl#prevBlocks in between Compaction flow</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14636</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description></description>
                <environment></environment>
        <key id="12905703">HBASE-14636</key>
            <summary>Clear HFileScannerImpl#prevBlocks in between Compaction flow</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12724166">HBASE-11425</parent>
                                    <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="anoop.hbase">Anoop Sam John</assignee>
                                    <reporter username="anoop.hbase">Anoop Sam John</reporter>
                        <labels>
                    </labels>
                <created>Sat, 17 Oct 2015 05:25:19 +0000</created>
                <updated>Tue, 20 Oct 2015 12:25:45 +0000</updated>
                            <resolved>Tue, 20 Oct 2015 07:40:59 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                                    <component>regionserver</component>
                    <component>Scanners</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14961760" author="anoop.hbase" created="Sat, 17 Oct 2015 05:51:26 +0000"  >&lt;p&gt;1.	Call shipped in btw..  every one min ?&lt;br/&gt;
2.	Keep blocks in prev blocks iff they are shared memory one&lt;/p&gt;</comment>
                            <comment id="14961775" author="ram_krish" created="Sat, 17 Oct 2015 06:23:52 +0000"  >&lt;p&gt;One way to introduce the OOME is that doing a full table scan with FilterAllFilter so that there is no option to release the blocks because the next() call ends up after the full scan only.  The similar reason should be with compactions also. I tried with compactions but did not reproduce. So will load more data to reproduce it. &lt;br/&gt;
The fix will work but instead of one min we can call shipped() after every next() in case of compaction or after a  pre configured batch of next().&lt;/p&gt;</comment>
                            <comment id="14961972" author="stack" created="Sat, 17 Oct 2015 16:31:05 +0000"  >&lt;p&gt;This just straight YCSB with not filters or other machinations in between. First experience of OOME was workloadc so I&apos;d doubt there was any compaction.  The one I sent over was a load .. then workloada, b, etc...  The YCSB suite worked fine when all was onheap with 16G. If I offheap, even though I leave heap at 16, it OOMEs pretty quickly.&lt;/p&gt;

&lt;p&gt;Is btw By-The-Way?&lt;/p&gt;</comment>
                            <comment id="14962183" author="ram_krish" created="Sun, 18 Oct 2015 05:07:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is btw By-The-Way?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Here it is Between.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The YCSB suite worked fine when all was onheap with 16G. If I offheap, even though I leave heap at 16, it OOMEs pretty quickly.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I really doubt this. Onheap or offheap we should have the same implications except that we don&apos;t do the final ref counting.  Seeing the logs that you attached I can see frequent compactions and every compaction creating a 11 to 13 G files. &lt;/p&gt;</comment>
                            <comment id="14962194" author="ram_krish" created="Sun, 18 Oct 2015 06:03:37 +0000"  >&lt;p&gt;With the above approache I was able to avoid OOME with even a 2GB heap space while doing a compaction. Without this change a 2GB compaction was OOMEing without any other operations being performed. &lt;br/&gt;
So I suggest we do the clear after every next() in compaction flow.&lt;/p&gt;</comment>
                            <comment id="14962237" author="anoop.hbase" created="Sun, 18 Oct 2015 09:03:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;do the clear after every next() in compaction flow&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That will be too much of overhead IMO..  No need..  The shipped call has to reach KVHeap and then till HFileScanner and just try iterate over the preBlocks ArrayList and mostly it will be empty if we call it for every next().   So all these are unwanted overhead.&lt;br/&gt;
Here this patch will make sure there wont be OOME for sure.&lt;br/&gt;
1. When the blocks being compacted are delivered not from BucketCache, we wont keep the ref in prevBlocks at all.   So even if we call shipped or not at all call it during compaction flow, no matter&lt;br/&gt;
2.When the blocks being compacted are delivered from BucketCache, the data bytes are still there in the bucket cache dedicated memory area. We just keep refs..  If we release the prev blocks in between the BucketCache can clear them as per demand.  That is the adv.  So better not call after every next() call but after some time period. Just kept it as 1 min as I saw the logging was during that interval..  We can change this period and make it shorter.  But for every next() call doing a shipped call... I am not in favor.&lt;/p&gt;</comment>
                            <comment id="14962824" author="anoop.hbase" created="Mon, 19 Oct 2015 04:39:31 +0000"  >&lt;p&gt;We can reduce the interval from 1 min to a smaller value.  10 secs is fine?&lt;/p&gt;</comment>
                            <comment id="14963544" author="stack" created="Mon, 19 Oct 2015 16:15:28 +0000"  >&lt;p&gt;Want me to try something?&lt;/p&gt;</comment>
                            <comment id="14963566" author="anoop.hbase" created="Mon, 19 Oct 2015 16:25:47 +0000"  >&lt;p&gt;The shipped call in every 2 secs during the compaction.  Yes 1 min looks so long. I was just giving a quick patch and the 1 min interval thing was already there for log.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;  can u test the second case u mentioned with this patch pls?&lt;br/&gt;
Load the data and run some workload a and b.  With 16GB also u said, u faced OOME.  This patch should solve that IMO.&lt;/p&gt;</comment>
                            <comment id="14963854" author="ram_krish" created="Mon, 19 Oct 2015 18:58:59 +0000"  >&lt;p&gt;With 9G heap space and LRU cache just after loading 20G of data and running workload c - causes pauses upto 1.5 secs even with the patch applied. So it is something else that is leading to this bigger GCs?&lt;/p&gt;</comment>
                            <comment id="14964016" author="hadoopqa" created="Mon, 19 Oct 2015 20:41:58 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12767386/HBASE-14636.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12767386/HBASE-14636.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit ea0cf399b4b665d6a0daa0c4e616e893e377a283.&lt;br/&gt;
  ATTACHMENT ID: 12767386&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16096//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16096//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16096//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16096//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16096//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16096//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16096//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16096//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14964042" author="stack" created="Mon, 19 Oct 2015 20:58:49 +0000"  >&lt;p&gt;The patch seems to be doing well in my testbed (it takes a good few hours to run).  Will keep you posted. We got much further than w/o the patch.&lt;/p&gt;

&lt;p&gt;On the patch:&lt;/p&gt;

&lt;p&gt;this.curBlock.getMemoryType() == MemoryType.SHARED&lt;/p&gt;

&lt;p&gt;Can we keep this internal to the block rather than have HFileScannerImpl have to know about SHARED?... Maybe a method on block... &lt;/p&gt;

&lt;p&gt;Sort of similiar, this bit where we do a check every two seconds...... could we change it to be size based?&lt;/p&gt;

&lt;p&gt;Maybe not.... every two seconds seems a little arbitrary. Pity there not a more &apos;natural&apos; place to do the housekeeping.&lt;/p&gt;

&lt;p&gt;I had other comments here but edited it out because I remembered how this stuff worked after I&apos;d made the comment... my comment made no sense after I remembered what shipped does. Please excuse.&lt;/p&gt;
</comment>
                            <comment id="14964056" author="stack" created="Mon, 19 Oct 2015 21:08:55 +0000"  >&lt;p&gt;What about closeCheckInterval? We are already on an interval checking for a close. Could we do the shipped in here on this same interval? Or at least unite the two time-based checks?&lt;/p&gt;</comment>
                            <comment id="14964258" author="stack" created="Mon, 19 Oct 2015 23:43:19 +0000"  >&lt;p&gt;Patch seems to have made it so we survived the loading. Great. I&apos;m trying workloadc again... and then will try again but w/ less memory. Will report back.&lt;/p&gt;</comment>
                            <comment id="14964472" author="anoop.hbase" created="Tue, 20 Oct 2015 03:54:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;What about closeCheckInterval? We are already on an interval checking for a close. Could we do the shipped in here on this same interval? Or at least unite the two time-based checks?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;closeCheckInterval -&amp;gt; This is not really time based check. This is size written based check. Default is 10 MB. After this much sized cells written, we check whether store is still writable.  Use this same for shipped call also?  2 concerns&lt;br/&gt;
1. This config can be 0 and then we won&apos;t be doing the shipped call at all. We don&apos;t want this to happen.&lt;br/&gt;
2. The def 10 MB seems too high.&lt;/p&gt;

&lt;p&gt;I first tried with a size based check only.  Then just changed to time based as it looked simple wrt #ops also.&lt;br/&gt;
If we go with size based I would suggest the size limit for check to be some thing like&lt;br/&gt;
HConstants.DEFAULT_BLOCKSIZE * conf.get(min_files_for_compact) -&amp;gt; So by def 64 KB * 3  so that there is chance for at least one block will get cleared from prevBlocks list.&lt;br/&gt;
This make sense?&lt;br/&gt;
We will need another long variable and add cell sizes to that taking some more ops to be done. Not a big deal any way. I can do this if all agree.  And size based check is the best way IMO&lt;/p&gt;</comment>
                            <comment id="14964474" author="anoop.hbase" created="Tue, 20 Oct 2015 03:56:07 +0000"  >&lt;p&gt;Patch addressing Stack&apos;s comments&lt;br/&gt;
Also changed 2 secs interval based shipped call to a size based shipped call.&lt;br/&gt;
Renamed some of the misleading existing variables.&lt;/p&gt;</comment>
                            <comment id="14964493" author="ram_krish" created="Tue, 20 Oct 2015 04:26:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;Also changed 2 secs interval based shipped call to a size based shipped call.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Okie. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If we go with size based I would suggest the size limit for check to be some thing like&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;HConstants.DEFAULT_BLOCKSIZE * conf.get(min_files_for_compact) -&amp;gt; So by def 64 KB * 3 so that there is chance for at least one block will get cleared from prevBlocks list.&lt;br/&gt;
So we are sure that atleast one element is always there and that gets cleared. Should  be fine I think. &lt;br/&gt;
As discussed yesterday and based on reports once we start clearing the prev blocks for the offheap compaction case I was not hitting the OOME even with heaps as lower as 2GB. &lt;/p&gt;</comment>
                            <comment id="14964524" author="anoop.hbase" created="Tue, 20 Oct 2015 05:00:46 +0000"  >&lt;p&gt;Ram :  Is it a +1 for patch V2?&lt;/p&gt;</comment>
                            <comment id="14964537" author="ram_krish" created="Tue, 20 Oct 2015 05:15:37 +0000"  >&lt;p&gt;Yes +1 on V2. Size based seems to be the ideal way as we discussed yesterday. &lt;/p&gt;</comment>
                            <comment id="14964547" author="anoop.hbase" created="Tue, 20 Oct 2015 05:25:37 +0000"  >&lt;p&gt;Yes..  Thanks Ram&lt;br/&gt;
Will commit once Stack also gives +1 on V2&lt;/p&gt;</comment>
                            <comment id="14964554" author="stack" created="Tue, 20 Oct 2015 05:29:30 +0000"  >&lt;p&gt;+1 on v2.&lt;/p&gt;

&lt;p&gt;My test completed with a heap of 4G doing workloadc... the loading that failed OOME after a few minutes previously. Good one lads.&lt;/p&gt;</comment>
                            <comment id="14964705" author="hadoopqa" created="Tue, 20 Oct 2015 07:33:15 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12767532/HBASE-14636_V2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12767532/HBASE-14636_V2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit c1f0442045f44fcbb3935f9244794929a5d0caea.&lt;br/&gt;
  ATTACHMENT ID: 12767532&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16109//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16109//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16109//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16109//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16109//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16109//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16109//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16109//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14964721" author="anoop.hbase" created="Tue, 20 Oct 2015 07:40:59 +0000"  >&lt;p&gt;Pushed to master. Thanks for reviews Stack and Ram..&lt;/p&gt;

&lt;p&gt;Thanks a lot Stack for taking time to test it again and confirm back that the OOME no longer exists.&lt;/p&gt;</comment>
                            <comment id="14965030" author="hudson" created="Tue, 20 Oct 2015 12:25:45 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6930 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6930/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6930/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14636&quot; title=&quot;Clear HFileScannerImpl#prevBlocks in between Compaction flow&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14636&quot;&gt;&lt;del&gt;HBASE-14636&lt;/del&gt;&lt;/a&gt; Clear HFileScannerImpl#prevBlocks in between Compaction (anoopsamjohn: rev c9523a569d45e9edc2c2d7b8d4d9cbf05f46a100)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/Compactor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderImpl.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12767386" name="HBASE-14636.patch" size="4641" author="anoop.hbase" created="Mon, 19 Oct 2015 16:26:29 +0000"/>
                            <attachment id="12767385" name="HBASE-14636.patch" size="4641" author="anoop.hbase" created="Mon, 19 Oct 2015 16:25:47 +0000"/>
                            <attachment id="12767532" name="HBASE-14636_V2.patch" size="7648" author="anoop.hbase" created="Tue, 20 Oct 2015 03:56:07 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 17 Oct 2015 06:23:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 8 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2n5cn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>