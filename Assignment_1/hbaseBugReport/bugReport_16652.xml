<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:16:23 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-16652/HBASE-16652.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-16652] Figure out performance difference between increment and append</title>
                <link>https://issues.apache.org/jira/browse/HBASE-16652</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;When do performance test in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16625&quot; title=&quot;Performance test for interface unified with AP&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16625&quot;&gt;HBASE-16625&lt;/a&gt;,  i found it has the very big difference between Append and Increment (append is about 37% faster than increment).&lt;/p&gt;

&lt;p&gt;As &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; mentioned in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16610?focusedCommentId=15493166&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15493166&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-16610?focusedCommentId=15493166&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15493166&lt;/a&gt;,   append and increment has been unified in server-side,  and they looks the same in client-side. &lt;/p&gt;

&lt;p&gt;This issue is to figure out why the performance looks different between them.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13005812">HBASE-16652</key>
            <summary>Figure out performance difference between increment and append</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="13003812">HBASE-16593</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="chenheng">Heng Chen</reporter>
                        <labels>
                            <label>performance</label>
                    </labels>
                <created>Mon, 19 Sep 2016 02:54:45 +0000</created>
                <updated>Wed, 21 Sep 2016 02:18:50 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="15502124" author="chenheng" created="Mon, 19 Sep 2016 03:08:46 +0000"  >&lt;p&gt;server-side profile with JFR,  almost looks the same&lt;/p&gt;</comment>
                            <comment id="15502128" author="allan163" created="Mon, 19 Sep 2016 03:10:24 +0000"  >&lt;p&gt;Though may not related to this jira, I&apos;d like to mention that, we don&apos;t recommend customers to use append in production env. Since every append will end up with one get and one put, the &#8216;snowball effect&#8217; caused by append will create big pressure on the cluster. &lt;/p&gt;</comment>
                            <comment id="15502137" author="chenheng" created="Mon, 19 Sep 2016 03:16:11 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=allan163&quot; class=&quot;user-hover&quot; rel=&quot;allan163&quot;&gt;Allan Yang&lt;/a&gt;.  Increment has one get and one put too....   Currently, increment is not implemented as &apos;insert and sum up&apos; operation. &lt;/p&gt;</comment>
                            <comment id="15502190" author="yangzhe1991" created="Mon, 19 Sep 2016 03:51:11 +0000"  >&lt;p&gt;In append we use arraycopy to merge the bytes and in increment we have to deserialize two Long (current and delta) and serialize the sum. Maybe this is the difference? And if the size of data in performance test is not large, all data is in memory, we have no disk/network io in reading and the difference is more obvious?&lt;/p&gt;</comment>
                            <comment id="15502310" author="yangzhe1991" created="Mon, 19 Sep 2016 05:11:12 +0000"  >&lt;p&gt;And there may be an improvement that we can add two Longs bit by bit, not deserialize/serialize?&lt;/p&gt;</comment>
                            <comment id="15502322" author="chenheng" created="Mon, 19 Sep 2016 05:17:48 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yangzhe1991&quot; class=&quot;user-hover&quot; rel=&quot;yangzhe1991&quot;&gt;Phil Yang&lt;/a&gt;.  As profile shows,  the main difference happens in &apos;get&apos; operation (about 5%),   let me dig it more. &lt;/p&gt;</comment>
                            <comment id="15502496" author="chenheng" created="Mon, 19 Sep 2016 06:47:00 +0000"  >&lt;p&gt;I add time log about &apos;get&apos; operation, and do test with pe command,  3 runs.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
bin/hbase org.apache.hadoop.hbase.PerformanceEvaluation --rows=10000 --nomapred increment/append 10
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;calculate the AVG time about &apos;get&apos; action in increment/append,  the results show below:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Increment:  55693ns,  57180ns,  56374ns
Append:  50174ns,  50101ns,  52870ns
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&apos;Get&apos; in increment is about 10% slower than append.  It matches the profile i have uploaded.   And the profile shows that &lt;tt&gt;org.apache.hadoop.hbase.regionserver.StoreScanner.seekAsDirection(Cell)&lt;/tt&gt; is 5% in &apos;Increment&apos; profile,  but this action NOT appear in &apos;Append&apos;.  Upload the relates picture.&lt;/p&gt;




</comment>
                            <comment id="15502720" author="chenheng" created="Mon, 19 Sep 2016 08:34:49 +0000"  >&lt;p&gt;Found the reason why &apos;get&apos; in Increment is slower than append. &lt;/p&gt;

&lt;p&gt;That is due to &apos;TimeRange&apos; in Increment,  if we not set it,  the default value is &lt;span class=&quot;error&quot;&gt;&amp;#91;0, Long.MaxValue&amp;#93;&lt;/span&gt;, so get in increment will be slower. &lt;/p&gt;

&lt;p&gt;IMO the default value about tr should be null if we not set it explicitly. Upload a patch.  And with the patch,  &apos;get&apos; in increment is faster now.  &lt;/p&gt;

&lt;p&gt;Results shows below:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
w/o the patch of increment:  55693ns,  57180ns,  56374ns
w the patch of increment: 52358ns, 50146ns, 48047.2ns
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="15502775" author="yangzhe1991" created="Mon, 19 Sep 2016 09:00:29 +0000"  >&lt;p&gt;If I am not wrong, we have a default TimeRange in Scan so the tr will not be null. But if the Get&apos;s range is null, the scan&apos;s tr will be null, too. So if we set Scan&apos;s default value to null, will scan be faster too? Thanks.&lt;/p&gt;</comment>
                            <comment id="15502791" author="chenheng" created="Mon, 19 Sep 2016 09:06:45 +0000"  >&lt;p&gt;Good question.  We could test it,  it seems should be faster.&lt;/p&gt;</comment>
                            <comment id="15502795" author="yangzhe1991" created="Mon, 19 Sep 2016 09:08:22 +0000"  >&lt;p&gt;Oh, we have a default TimeRange in Get, too. So the reason that setting null at client will get a better performace is we do not serialize it to PB?&lt;/p&gt;</comment>
                            <comment id="15502796" author="apache9" created="Mon, 19 Sep 2016 09:08:32 +0000"  >&lt;p&gt;See ProtobufUtil.toGet and toScan. If TimeRange.isAllTime returns true then we will not set time range to the generated protobuf message.&lt;/p&gt;</comment>
                            <comment id="15502798" author="anoop.hbase" created="Mon, 19 Sep 2016 09:08:44 +0000"  >&lt;p&gt;Increment is a public exposed class and this will change the behavior of getTimeRange API in it.   Also pls see the usage of this API within our code.  See AccessController&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (checkCoveringPermission(user, OpType.INCREMENT, c.getEnvironment(), increment.getRow(),
          increment.getFamilyCellMap(), increment.getTimeRange().getMax(), Action.WRITE)) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This change will make NPE here.&lt;br/&gt;
So instead of this can be set the TimeRange to get iff Increment is having a TR on it and it is not allTime?  (See   TR#isAllTime() )&lt;/p&gt;</comment>
                            <comment id="15502811" author="chenheng" created="Mon, 19 Sep 2016 09:13:39 +0000"  >&lt;p&gt;Sounds reasonable. &lt;/p&gt;</comment>
                            <comment id="15502816" author="chenheng" created="Mon, 19 Sep 2016 09:15:55 +0000"  >&lt;p&gt;En....  The time comes from server-side,  it is only &apos;get&apos; action time. &lt;/p&gt;</comment>
                            <comment id="15502849" author="yangzhe1991" created="Mon, 19 Sep 2016 09:31:31 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
List&amp;lt;Cell&amp;gt; currentValues = get(mutation, store, deltas,
        &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;/*Default IsolationLevel*/,
        op == Operation.INCREMENT? ((Increment)mutation).getTimeRange(): &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In HRegion#reckonDeltasByStore, we will pass null for timerange,  so in Get we will use the default TimeRange, right? In scanner, it is same as we pass a new TimeRange()? &lt;/p&gt;</comment>
                            <comment id="15502851" author="chenheng" created="Mon, 19 Sep 2016 09:32:06 +0000"  >&lt;p&gt;Let me test it again with cache closed.  &lt;/p&gt;</comment>
                            <comment id="15502866" author="apache9" created="Mon, 19 Sep 2016 09:39:29 +0000"  >&lt;p&gt;This is in &lt;tt&gt;reckonDeltasByStore&lt;/tt&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;HRegion.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    List&amp;lt;Cell&amp;gt; currentValues = get(mutation, store, deltas,
        &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;/*Default IsolationLevel*/,
        op == Operation.INCREMENT? ((Increment)mutation).getTimeRange(): &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is where we do get and as you said, we will pass the TimeRange to the &lt;tt&gt;get&lt;/tt&gt; method if it is a increment, and for append it does not have a TimeRange so always pass null.&lt;/p&gt;

&lt;p&gt;And in the &lt;tt&gt;get&lt;/tt&gt; method&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;HRegion.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-comment&quot;&gt;// Increments carry time range. If an Increment instance, put it on the Get.
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (tr != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      get.setTimeRange(tr.getMin(), tr.getMax());
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The only extra cost is this setTimeRange call I think? Since the default TimeRange of Get is also [0, Long.MAX_VALUE). I do not know how this could lead to the differences in your profiling results.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15503102" author="chenheng" created="Mon, 19 Sep 2016 11:00:40 +0000"  >&lt;p&gt;Will be back later. &lt;/p&gt;</comment>
                            <comment id="15506121" author="chenheng" created="Tue, 20 Sep 2016 09:13:25 +0000"  >&lt;p&gt;add time log for each step in append/increment path (1.diff),  and do tests with PE 3 times.  &lt;/p&gt;

&lt;p&gt;steps:&lt;br/&gt;
1.  delete &apos;TestTable&apos;&lt;br/&gt;
2.  run pe for append 3 times&lt;br/&gt;
3.  delete &apos;TestTable&apos;&lt;br/&gt;
4.  run pe for increment 3 times&lt;/p&gt;


&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; type &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; client_time &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; reckonDeltas &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; doWALAppend &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; sync &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; a_1 &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 2.06ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 0.06ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 1.7ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 1.6ms &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; a_2 &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 1.81ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 0.05ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 1.4ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 1.3ms &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; a_3 &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 1.87ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 0.05ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 1.5ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 1.4ms &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; i_1 &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 2.47ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 0.05ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 2.1ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 2.0ms &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; i_2 &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 2.39ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 0.06ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 2.0ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 1.9ms &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; i_3 &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 2.36ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 0.06ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 2.0ms &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; 1.9ms &lt;/th&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Notes:  it is one operation time in average.  &lt;/p&gt;


&lt;p&gt;It seems the main difference is sync wal??&lt;/p&gt;</comment>
                            <comment id="15506133" author="yangzhe1991" created="Tue, 20 Sep 2016 09:17:54 +0000"  >&lt;p&gt;What are the sizes of two WAL.Entry?&lt;/p&gt;</comment>
                            <comment id="15508452" author="chenheng" created="Wed, 21 Sep 2016 02:18:50 +0000"  >&lt;p&gt;Increment entry size is stable due to it just one long size,  append entry size is random depends on original value,  but it is larger than increment,  because in PE,  we set 26 bytes for append value.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="13004550">HBASE-16625</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12829364" name="1.diff" size="7965" author="chenheng" created="Tue, 20 Sep 2016 09:13:25 +0000"/>
                            <attachment id="12829163" name="HBASE-16652.patch" size="1980" author="chenheng" created="Mon, 19 Sep 2016 08:36:29 +0000"/>
                            <attachment id="12829131" name="append.jfr" size="2805341" author="chenheng" created="Mon, 19 Sep 2016 03:08:46 +0000"/>
                            <attachment id="12829152" name="append_get_profile.png" size="499603" author="chenheng" created="Mon, 19 Sep 2016 06:47:27 +0000"/>
                            <attachment id="12829132" name="increment.jfr" size="2818630" author="chenheng" created="Mon, 19 Sep 2016 03:08:46 +0000"/>
                            <attachment id="12829153" name="increment_get_profile.png" size="466834" author="chenheng" created="Mon, 19 Sep 2016 06:47:28 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 19 Sep 2016 03:10:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            12 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33s0v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>