<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:58:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1990/HBASE-1990.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1990] Add methods accepting strings for family/qualifier in client </title>
                <link>https://issues.apache.org/jira/browse/HBASE-1990</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Consider the following client code...&lt;/p&gt;

&lt;p&gt;	byte b[] = result.getValue( Bytes.toBytes(&quot;family&quot;), Bytes.toBytes(&quot;qualifier&quot;) );&lt;br/&gt;
        put.add( Bytes.toBytes(&quot;family&quot;), Bytes.toBytes(&quot;qualifer&quot;), Bytes.toBytes( &quot;value&quot;)  );&lt;/p&gt;

&lt;p&gt;... the requirement to supply family and qualifiers as bytes causes code to get cluttered and verbose.  At worst, it scares peoples un-necessarily about HBase development, and at best, developers inevitably will get tired of doing all this casting and then add their own wrapper classes around the HBase client to make their code more readable.&lt;/p&gt;

&lt;p&gt;I would like to see something like this in the API...&lt;/p&gt;

&lt;p&gt;	byte b[] = result.getValue( &quot;family&quot;), &quot;qualifier&quot; );&lt;br/&gt;
        put.add( &quot;family&quot;, &quot;qualifer&quot;, Bytes.toBytes( &quot;value&quot;)  );&lt;/p&gt;

&lt;p&gt;... where the Hbase client can perform the required Bytes.toBytes() conversion behind the scenes.&lt;/p&gt;



</description>
                <environment></environment>
        <key id="12441105">HBASE-1990</key>
            <summary>Add methods accepting strings for family/qualifier in client </summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="dmeil">Doug Meil</reporter>
                        <labels>
                    </labels>
                <created>Wed, 18 Nov 2009 21:48:59 +0000</created>
                <updated>Mon, 12 May 2014 00:40:37 +0000</updated>
                            <resolved>Mon, 12 May 2014 00:40:37 +0000</resolved>
                                    <version>0.20.0</version>
                                                    <component>Client</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="12779684" author="apurtell" created="Wed, 18 Nov 2009 22:01:49 +0000"  >&lt;p&gt;This is no problem. As long as nobody votes this down I&apos;ll put in the convenience methods. &lt;/p&gt;</comment>
                            <comment id="12779742" author="stack" created="Wed, 18 Nov 2009 23:55:30 +0000"  >&lt;p&gt;+1 But you might want to wait Andrew.  I think Doug might have someone for the job (Doug?).&lt;/p&gt;</comment>
                            <comment id="12780006" author="dmeil" created="Thu, 19 Nov 2009 14:40:32 +0000"  >&lt;p&gt;I&apos;ll give it a shot.  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Two questions: &lt;/p&gt;

&lt;p&gt;1) what timeframe?  (i.e., I&apos;m expecting to try this &apos;soon&apos; but not by tomorrow morning).  Even though this is small, this would be my first attempt at an HBase change and I don&apos;t want to screw it up.&lt;/p&gt;

&lt;p&gt;2) I am assuming that the value is still going to take &apos;byte[]&apos;.  I think it would be nice to have methods that also took String (et al.) and &quot;did the right thing&quot; internally, but the .get methods would get a little more complicated since overloading doesn&apos;t work with return values (and they would probably need to be something like getString and getInt, etc.).  Any changes along this line I think would require a separate JIRA ticket.&lt;/p&gt;</comment>
                            <comment id="12780013" author="apurtell" created="Thu, 19 Nov 2009 14:52:35 +0000"  >&lt;blockquote&gt;
&lt;p&gt;1) what timeframe? (i.e., I&apos;m expecting to try this &apos;soon&apos; but not by tomorrow morning). Even though this is small, this would be my first attempt at an HBase change and I don&apos;t want to screw it up.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No worries.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2) I am assuming that the value is still going to take &apos;byte[]&apos;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Having convenience functions to address values with strings at user request I think is fine. But, HBase is really type agnostic with respect to both keys and values. Storing something as String does not and should not imply the String type is suitable representation for the value, or Integer, or Boolean, etc. &lt;/p&gt;</comment>
                            <comment id="12780023" author="larsgeorge" created="Thu, 19 Nov 2009 15:18:07 +0000"  >&lt;p&gt;What about lightweight wrapper classes in contrib that expose these String based methods? Or - if possible and you want to go crazy - adds generics that denote the type you want. Internally you use that to call the right Bytes.toXYZ() method. That way this leaves the API unchanged being type agnostic and that wrapper would take care of more than just String types?&lt;/p&gt;</comment>
                            <comment id="12780138" author="stack" created="Thu, 19 Nov 2009 16:37:48 +0000"  >&lt;p&gt;Lars, this sounds sweet.  Can you sketch more what a genericised (sp?) HTable would look like?&lt;/p&gt;</comment>
                            <comment id="12780515" author="larsgeorge" created="Fri, 20 Nov 2009 11:01:08 +0000"  >&lt;p&gt;Will do. Let me try to do a proof in a unit test and then propose a solution.&lt;/p&gt;</comment>
                            <comment id="12781184" author="larsgeorge" created="Sun, 22 Nov 2009 18:33:50 +0000"  >&lt;p&gt;TestHTableGenerics.java is a sample of how we could add generics support to the classes. Now, this could be in a contrib package, but maybe even in the standard API. Biggest issue is of course the API change again. And we want to keep the API as simple as possible I would assume and with byte[] it is already as generic as possible. &lt;/p&gt;

&lt;p&gt;I would opt for those classes to be in contrib, fully implemented of course and properly layed out and tested. My classes above are just an attempt to show a general idea, which is how to make a wrapper framework that adds all the various type support. &lt;/p&gt;

&lt;p&gt;What do you all think?&lt;/p&gt;</comment>
                            <comment id="12782138" author="stack" created="Tue, 24 Nov 2009 20:17:17 +0000"  >&lt;p&gt;I like this direction.  It does more than just String.  Regards the API change, if we changed all Put, Delete, Get, etc. to do generics instead, would it just add warnings since the old and new should erase to the same types?  Or would old compile not compile at all?&lt;/p&gt;</comment>
                            <comment id="12782149" author="stack" created="Tue, 24 Nov 2009 20:27:46 +0000"  >&lt;p&gt;If we add in generic HTable, I think that would make this a non-0.20 change... Would be done in 0.21.&lt;/p&gt;</comment>
                            <comment id="12790971" author="pvaibhav" created="Tue, 15 Dec 2009 21:45:10 +0000"  >&lt;p&gt;The concept of  TestHTableGenerics.java is good, but unfortunately it might not work even for simpler use cases. Let&apos;s discuss the following example:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Put&amp;lt;String, String, String, String&amp;gt; put =      new Put&amp;lt;String, String, String, String&amp;gt;(&quot;row1&quot;);
    put.add(&quot;family&quot;, &quot;stringtest&quot;, &quot;stringdata&quot;);
    ht.put(put.getPut());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above example forces you to pick a data type for values at the instantiation of the Put object. But in most cases (at least in our software) we have different data types in a row such as Long, String, Custom Object etc.&lt;br/&gt;
Even a typical relational database table always have multiple data types in a row.&lt;/p&gt;

&lt;p&gt;If you exclude the value and keep the value as byte array, it should be sufficient for 80% of the use cases. (Even though we have many columns where the column name is not a string, they are a minority)&lt;/p&gt;</comment>
                            <comment id="12791431" author="larsgeorge" created="Wed, 16 Dec 2009 16:18:53 +0000"  >&lt;p&gt;Vaibhav,&lt;/p&gt;

&lt;p&gt;I think the idea was to use that as an optional &quot;wrapper&quot; around the purely byte oriented low level classes. Also, you can always still do this&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Put&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;&amp;gt; put = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Put&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;&amp;gt;(&lt;span class=&quot;code-quote&quot;&gt;&quot;row1&quot;&lt;/span&gt;);
put.add(&lt;span class=&quot;code-quote&quot;&gt;&quot;family&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;stringtest&quot;&lt;/span&gt;, Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;stringdata&quot;&lt;/span&gt;));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and do the value conversion to byte yourself. Or we add a &quot;Object&quot; type parameter and convert the value from Long, String, etc. internally (like an &quot;auto boxing&quot; or marshalling).&lt;/p&gt;</comment>
                            <comment id="12791703" author="stack" created="Thu, 17 Dec 2009 00:45:27 +0000"  >&lt;p&gt;@Vaibhav Good point&lt;/p&gt;

&lt;p&gt;@Lars You mean byte [] , rather byte in your example above?   If so, that&apos;d work.  As would our suggestion of an LCD Object.  Vaibhav, what you think of Lars&apos; suggestion?&lt;/p&gt;</comment>
                            <comment id="12791728" author="pvaibhav" created="Thu, 17 Dec 2009 01:38:51 +0000"  >&lt;p&gt;It will be great if we could do autoboxing somehow for most common data types. That would certainly help. &lt;/p&gt;</comment>
                            <comment id="12794957" author="stack" created="Mon, 28 Dec 2009 23:07:29 +0000"  >&lt;p&gt;Moving out of 0.20.3  I like Lars suggestion and looks like it would work after some discussion but this change in API better belongs in 0.21 IMO. Since 0.21 is not too far away, I&apos;d say no harm punting it till then.  If anyone disagrees, please put it back into 0.20.3.&lt;/p&gt;</comment>
                            <comment id="12867009" author="stack" created="Thu, 13 May 2010 04:41:45 +0000"  >&lt;p&gt;Moved from 0.21 to 0.22 just after merge of old 0.20 branch into TRUNK.&lt;/p&gt;</comment>
                            <comment id="13047647" author="stack" created="Fri, 10 Jun 2011 22:58:12 +0000"  >&lt;p&gt;Moving out of 0.92.  Move it back in if you think differently.&lt;/p&gt;</comment>
                            <comment id="13047657" author="stack" created="Fri, 10 Jun 2011 22:58:14 +0000"  >&lt;p&gt;Moving out of 0.92.  Move it back in if you think differently.&lt;/p&gt;</comment>
                            <comment id="13994726" author="apurtell" created="Mon, 12 May 2014 00:40:37 +0000"  >&lt;p&gt;Not wanted badly enough I&apos;d say&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12443472">HBASE-2051</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12425765" name="TestHTableGenerics.java" size="5260" author="larsgeorge" created="Sun, 22 Nov 2009 18:33:50 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 18 Nov 2009 22:01:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32351</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 31 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02eov:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11981</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>