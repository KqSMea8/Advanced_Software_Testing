<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:39:21 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13071/HBASE-13071.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13071] Hbase Streaming Scan Feature</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13071</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;A scan operation iterates over all rows of a table or a subrange of the table. The synchronous nature in which the data is served at the client side hinders the speed the application traverses the data: it increases the overall processing time, and may cause a great variance in the times the application waits for the next piece of data.&lt;/p&gt;

&lt;p&gt;The scanner next() method at the client side invokes an RPC to the regionserver and then stores the results in a cache. The application can specify how many rows will be transmitted per RPC; by default this is set to 100 rows. &lt;br/&gt;
The cache can be considered as a producer-consumer queue, where the hbase client pushes the data to the queue and the application consumes it. Currently this queue is synchronous, i.e., blocking. More specifically, when the application consumed all the data from the cache &amp;#8212; so the cache is empty &amp;#8212; the hbase client retrieves additional data from the server and re-fills the cache with new data. During this time the application is blocked.&lt;/p&gt;

&lt;p&gt;Under the assumption that the application processing time can be balanced by the time it takes to retrieve the data, an asynchronous approach can reduce the time the application is waiting for data.&lt;/p&gt;

&lt;p&gt;We attach a design document.&lt;br/&gt;
We also have a patch that is based on a private branch, and some evaluation results of this code.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12776140">HBASE-13071</key>
            <summary>Hbase Streaming Scan Feature</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="eshcar">Eshcar Hillel</assignee>
                                    <reporter username="eshcar">Eshcar Hillel</reporter>
                        <labels>
                    </labels>
                <created>Thu, 19 Feb 2015 12:49:14 +0000</created>
                <updated>Thu, 21 May 2015 08:38:44 +0000</updated>
                            <resolved>Wed, 13 May 2015 15:29:24 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>30</watches>
                                                                <comments>
                            <comment id="14327362" author="eshcar" created="Thu, 19 Feb 2015 12:53:43 +0000"  >&lt;p&gt;Design Document&lt;/p&gt;</comment>
                            <comment id="14327808" author="jonathan.lawlor" created="Thu, 19 Feb 2015 17:57:51 +0000"  >&lt;p&gt;This sounds like a great feature. &lt;/p&gt;

&lt;p&gt;There is some discussion over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11544&quot; title=&quot;[Ergonomics] hbase.client.scanner.caching is dogged and will try to return batch even if it means OOME&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11544&quot;&gt;&lt;del&gt;HBASE-11544&lt;/del&gt;&lt;/a&gt; about the inefficiency of the way that the current (synchronous) scanners use the network (which lead to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12994&quot; title=&quot;Improve network utilization for scanning RPC requests by preloading the next set of results on the server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12994&quot;&gt;HBASE-12994&lt;/a&gt;) as well as discussion about how to move Scan RPC&apos;s into the realm of streaming. This seems like it would address both of those issues and should provide some nice performance gains. &lt;/p&gt;

&lt;p&gt;Looking forward to this&lt;/p&gt;</comment>
                            <comment id="14328514" author="lhofhansl" created="Fri, 20 Feb 2015 03:47:19 +0000"  >&lt;p&gt;Let&apos;s close one of these issues.&lt;/p&gt;</comment>
                            <comment id="14328607" author="lhofhansl" created="Fri, 20 Feb 2015 06:15:54 +0000"  >&lt;p&gt;There are many ways to do this:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;managing two buffers, one is filled by a background thread, the other used by the client thread, then switched.&lt;/li&gt;
	&lt;li&gt;managing a queue on the client. The user thread polls from it, a background thread pushed data in as it gets it from the server. A blocking queue makes this simple, but comes with synchronization overhead.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;In any event, unless we rewrite client and server to support true streaming, it means extra buffering of some form regardless of the implementation.&lt;/p&gt;</comment>
                            <comment id="14329342" author="apurtell" created="Fri, 20 Feb 2015 18:48:40 +0000"  >&lt;p&gt;This might also be the next incarnation of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8691&quot; title=&quot;High-Throughput Streaming Scan API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8691&quot;&gt;HBASE-8691&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14330005" author="stack" created="Sat, 21 Feb 2015 05:39:47 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt; Design doc looks straightforward... no continental shifts going on here. One question for you is if you are &apos;up&apos; on all that has gone on in this space previous? If not, let me dig it up for you (In particular, an experiment that added faux streaming via a hacked up new port on the server that allowed client via a new channel get a KV/Cell at a time with nice improvements in throughput....)&lt;/p&gt;

&lt;p&gt;On &apos;hbase.client.scanner.async.prefetch=true&apos;, let me suggest that default is that this feature is on, not off, by default. Why would you want current behavior if this is available. In fact, IMO, don&apos;t bother offering this config presuming the throughput is better after this change as I expect it wil be.&lt;/p&gt;


</comment>
                            <comment id="14332166" author="eshcar" created="Sun, 22 Feb 2015 13:49:55 +0000"  >&lt;p&gt;Thanks all for your comments.&lt;/p&gt;

&lt;p&gt;@stack, I wasn&apos;t aware of the discussions in the other Jiras, thanks for putting the links &amp;#8211; I am now updated.&lt;/p&gt;

&lt;p&gt;@ Lars, the concurrent queue in the suggested modification is implemented as a LinkedBlockingQueue (which in addition to efficient put and get operations provides an efficient count operation). But we can discuss alternatives, including devising a dedicated data structure if it looks this can improve performance.&lt;/p&gt;

&lt;p&gt;The suggested modification focuses on managing the concurrent queue at the client side, but still applies the &quot;pull&quot; model, where the client pulls the data from the server.&lt;br/&gt;
To support a true streaming, a push model, where the server is pushing the data to the client, might be better.&lt;br/&gt;
In both cases a concurrent queue is part of the solution. &lt;/p&gt;

&lt;p&gt;I am attaching some evaluation results.&lt;br/&gt;
Next step is to provide a patch for 0.98. &lt;/p&gt;</comment>
                            <comment id="14332170" author="eshcar" created="Sun, 22 Feb 2015 13:53:58 +0000"  >&lt;p&gt;This config setting can be easily removed. &lt;br/&gt;
Our main concern was to allow backward compatibility for users, and specifically to maintain scan behavior, unless explicitly asked to use asynchronous scanner.&lt;br/&gt;
Since the asynchronous scanner uses a concurrent data structure which entails some overhead, in some cases &amp;#8211; like short scans &amp;#8211; the caller might prefer to use a sync scan.&lt;/p&gt;</comment>
                            <comment id="14334019" author="jonathan.lawlor" created="Mon, 23 Feb 2015 22:41:11 +0000"  >&lt;p&gt;Those performance improvements look great &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt;! I agree with &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; that this configuration should be on by default.&lt;/p&gt;

&lt;p&gt;I have been thinking about this asynchronous scanner a bit and was wondering how it deals with the case where the user has specified a maximum result size via Scan#setMaxResultSize():&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Does the prefetch mechanism attempt to prefetch a certain number of rows and loop until that number of rows is retrieved (i.e. does the prefetch only stop making prefetch RPCs once it has accumulated the expected number of rows)?&lt;/li&gt;
	&lt;li&gt;If the prefetch does stop when the maxResultSize limit has been exceeded, when would the next prefetch be initiated? When next() is called and the cache is observed to have less than half the specified caching value?
	&lt;ul&gt;
		&lt;li&gt;If that&apos;s the case, I was thinking that it may be possible that a table with very large rows could potentially create memory issues on the client (and this may be a good reason to make this async behavior configurable rather that go all-in on async scanners).&lt;/li&gt;
		&lt;li&gt;The scenario that I have in mind is the case where the client is not able to hold X rows in memory where X is half of the specified scanner caching (i.e. the case where (half_caching_limit * size_of_row) exceeds the avalaible memory on the client). The synchronous scanners currently guard the client from out of memory exceptions by considering the remaining result size after each next RPC &amp;#8211; if the maxResultSize limit is exceeded the scanner stops making RPCs, regardless of how many rows the scanner has received from RPCs. However, in the case of asynch scanners (if they work how I am thinking they do) each call to next() may trigger a prefetch, and each prefetch would receive only Y rows, where Y &amp;lt;&amp;lt; half_of_caching. The prefetches would be triggered on each call to next() until we have accumulated half_of_caching rows in our scanner cache and the client may OOM before that limit can be reached
		&lt;ul&gt;
			&lt;li&gt;In such a case, it may be best to instead use a synch scanner. Alternatively, we could keep track of the size of results in our cache and allow the user to specifiy maxSizeOfCache so that prefetches aren&apos;t continuosly fired off on calls to next() when scanning a table with large rows&lt;/li&gt;
			&lt;li&gt;This also raises the question about whether or not it would be worthwhile to have an asynchronous scanner that used the size of the Results (in memory) as the deciding factor for prefetching &amp;#8211; i.e. If the size of the results in the cache is less than half of maxResultSize then perform a prefetch for another chunk of maxResultSize worth of values... just a thought&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;My concern above is definitely a corner case issue, but I thought I&apos;d raise it for discussion.&lt;/p&gt;

&lt;p&gt;I like the idea that you pointed out towards the end about ramping the prefetch size up from a small initial size to the actual prefetch size. Looks like it would definitely help ease the initial latency jump seen for large prefetches. &lt;/p&gt;

&lt;p&gt;Really nice results &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14334477" author="lhofhansl" created="Tue, 24 Feb 2015 06:20:36 +0000"  >&lt;p&gt;Interesting. I had experimented with a blocking queue and a background threads a year ago or two and found that the synchronization overhead ate up most of the benefits (I did not build in any artificial delay, though).&lt;/p&gt;

&lt;p&gt;Eager to see a patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14338438" author="eshcar" created="Thu, 26 Feb 2015 14:21:58 +0000"  >&lt;p&gt;I&apos;ve just attached the patch.&lt;br/&gt;
The default value for scanners is sync. This can be easily changed.&lt;/p&gt;

&lt;p&gt;Addressing the issue raised by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jonathan.lawlor&quot; class=&quot;user-hover&quot; rel=&quot;jonathan.lawlor&quot;&gt;Jonathan Lawlor&lt;/a&gt;: &lt;br/&gt;
The prefetch logic is the same for sync and async scanners. Therefore, async scanner stops RPCs if the max result size is exceeded. However, since the prefetch is executed in the background, it is possible that the size of the data inside the cache exceeds the max size set by the user (which cannot happen with sync scanner). &lt;br/&gt;
There are ways to handle this, but this requires knowing the size of the data in the cache at any point and limiting the size of the data retrieved from the server with respect to this size. This may reduce the performance gain. &lt;/p&gt;

&lt;p&gt;I plan to attach a patch of the YCSB extension if anyone wants to re-run the experiments.&lt;/p&gt;</comment>
                            <comment id="14338439" author="hadoopqa" created="Thu, 26 Feb 2015 14:22:18 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12701068/HBASE-13071-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12701068/HBASE-13071-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 1c957b65b16a8706caee140c18b84ea48a0dc0aa.&lt;br/&gt;
  ATTACHMENT ID: 12701068&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 @author&lt;/font&gt;.  The patch appears to contain 2 @author tags which the Hadoop community has agreed to not allow in code contributions.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12978//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12978//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14338479" author="hadoopqa" created="Thu, 26 Feb 2015 14:52:15 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12701075/HBASE-13071-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12701075/HBASE-13071-v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 1c957b65b16a8706caee140c18b84ea48a0dc0aa.&lt;br/&gt;
  ATTACHMENT ID: 12701075&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12979//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12979//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14338571" author="yuzhihong@gmail.com" created="Thu, 26 Feb 2015 15:40:49 +0000"  >&lt;p&gt;For ClientAsyncPrefetchScanner.java and ClientSimpleScanner.java:&lt;br/&gt;
please add license header&lt;br/&gt;
add annotation for audience&lt;/p&gt;

&lt;p&gt;Mind putting patch on reviewboard ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="14338581" author="eshcar" created="Thu, 26 Feb 2015 15:45:55 +0000"  >&lt;p&gt;I use the following commands to create the patches&lt;br/&gt;
git format-patch 0.98 --minimal --stdout &amp;gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071&quot; title=&quot;Hbase Streaming Scan Feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13071&quot;&gt;&lt;del&gt;HBASE-13071&lt;/del&gt;&lt;/a&gt;-v1.patch &lt;br/&gt;
git diff --no-prefix 0.98 &amp;gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071&quot; title=&quot;Hbase Streaming Scan Feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13071&quot;&gt;&lt;del&gt;HBASE-13071&lt;/del&gt;&lt;/a&gt;-v2.patch&lt;/p&gt;

&lt;p&gt;Any idea why these can&apos;t be applied?&lt;/p&gt;</comment>
                            <comment id="14338590" author="yuzhihong@gmail.com" created="Thu, 26 Feb 2015 15:49:34 +0000"  >&lt;p&gt;Applying patch v2 resulted in the following rejects:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-rw-r--r--  1 tyu  staff  1803 Feb 26 07:48 ./hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java.rej
-rw-r--r--  1 tyu  staff  730 Feb 26 07:48 ./hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientSmallScanner.java.rej
-rw-r--r--  1 tyu  staff  689 Feb 26 07:48 ./hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java.rej
-rw-r--r--  1 tyu  staff  696 Feb 26 07:48 ./hbase-client/src/main/java/org/apache/hadoop/hbase/client/ReversedClientScanner.java.rej
-rw-r--r--  1 tyu  staff  1374 Feb 26 07:48 ./hbase-client/src/main/java/org/apache/hadoop/hbase/client/Scan.java.rej
-rw-r--r--  1 tyu  staff  1504 Feb 26 07:48 ./hbase-client/src/main/java/org/apache/hadoop/hbase/client/TableConfiguration.java.rej
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please update your workspace to latest master.&lt;/p&gt;</comment>
                            <comment id="14338596" author="eshcar" created="Thu, 26 Feb 2015 15:54:48 +0000"  >&lt;p&gt;I tried running the code from master, but encountered problems (even without the patch).&lt;br/&gt;
Specifically, when running commands from hbase shell wasn&apos;t able to exit the shell properly, therefore created the patch based on 0.98.&lt;/p&gt;</comment>
                            <comment id="14338599" author="eshcar" created="Thu, 26 Feb 2015 15:55:48 +0000"  >&lt;p&gt;I tried running the code from master, but encountered problems (even without the patch).&lt;br/&gt;
Specifically, when running commands from hbase shell wasn&apos;t able to exit the shell properly, therefore created the patch based on 0.98.&lt;/p&gt;</comment>
                            <comment id="14341359" author="yuzhihong@gmail.com" created="Sat, 28 Feb 2015 05:51:47 +0000"  >&lt;p&gt;There has been effort to stabilize trunk build.&lt;/p&gt;

&lt;p&gt;Please prepare patch for trunk.&lt;/p&gt;</comment>
                            <comment id="14342109" author="eshcar" created="Sun, 1 Mar 2015 09:58:13 +0000"  >&lt;p&gt;New patches for 0.98 and trunk are available.&lt;br/&gt;
Link to review board.&lt;/p&gt;</comment>
                            <comment id="14342129" author="hadoopqa" created="Sun, 1 Mar 2015 10:41:02 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12701690/HBASE-13071_trunk_1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12701690/HBASE-13071_trunk_1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit dad2474f08d201d09989e36f5cf1c25d3fa4acee.&lt;br/&gt;
  ATTACHMENT ID: 12701690&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;br/&gt;
    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1946 checkstyle errors (more than the master&apos;s current 1937 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                                    ClusterConnection connection, RpcRetryingCallerFactory rpcCallerFactory,&lt;br/&gt;
+    super(configuration,scan,name,connection,rpcCallerFactory,rpcControllerFactory,pool,replicaCallTimeoutMicroSecondScan);&lt;br/&gt;
+  public ClientSimpleScanner(Configuration configuration, Scan scan, TableName name, ClusterConnection connection,&lt;br/&gt;
+                             RpcRetryingCallerFactory rpcCallerFactory, RpcControllerFactory rpcControllerFactory,&lt;br/&gt;
+                             ExecutorService pool, int replicaCallTimeoutMicroSecondScan) throws IOException {&lt;br/&gt;
+    super(configuration,scan,name,connection,rpcCallerFactory,rpcControllerFactory,pool,replicaCallTimeoutMicroSecondScan);&lt;br/&gt;
+  public static final String HBASE_CLIENT_SCANNER_ASYNC_PREFETCH = &quot;hbase.client.scanner.async.prefetch&quot;;&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestInterfaceAudienceAnnotations&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestOperation&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13021//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14342280" author="yuzhihong@gmail.com" created="Sun, 1 Mar 2015 15:25:23 +0000"  >&lt;p&gt;ClientAsyncPrefetchScanner.java and ClientSimpleScanner.java need audience annotation.&lt;/p&gt;</comment>
                            <comment id="14342842" author="stack" created="Mon, 2 Mar 2015 06:44:24 +0000"  >&lt;p&gt;I tried this and saw improvement. Let me come back with some pretty pictures.&lt;/p&gt;</comment>
                            <comment id="14344839" author="hadoopqa" created="Tue, 3 Mar 2015 09:44:48 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12702115/HBASE-13071_trunk_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12702115/HBASE-13071_trunk_2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit daed00fc98167870463e77b620e9adb6ce9b204d.&lt;br/&gt;
  ATTACHMENT ID: 12702115&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;br/&gt;
    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1939 checkstyle errors (more than the master&apos;s current 1936 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestOperation&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13057//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14345030" author="hadoopqa" created="Tue, 3 Mar 2015 12:57:34 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12702139/HBASE-13071_trunk_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12702139/HBASE-13071_trunk_3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit daed00fc98167870463e77b620e9adb6ce9b204d.&lt;br/&gt;
  ATTACHMENT ID: 12702139&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;br/&gt;
    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1939 checkstyle errors (more than the master&apos;s current 1936 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13061//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14345329" author="stack" created="Tue, 3 Mar 2015 16:55:59 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt; Any reason for why your formatting is unorthodox (compared to rest of code base?)  There is some here on formatting if that&apos;ll help: &lt;a href=&quot;http://hbase.apache.org/book.html#_ides&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/book.html#_ides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please add class comments describing what the class does.&lt;/p&gt;

&lt;p&gt;isPrefetchRunning is the name of the method you would call to find the value of the boolean prefetchRunning; data members shouldn&apos;t have &apos;is&apos; prefix (javabean idiom)&lt;/p&gt;

&lt;p&gt;Do we have to add a new executor pool? Could we take one in on construction at least optionally (with perhaps the default being we pass in the tables executor?).  This could be done in a followup patch.  In general we create too many threads in the client and have been trying to go on a diet (but you know how diet&apos;s go)... in fact you take in a pool on construction...Can you exploit this passed-in pool rather than make one of your own?&lt;/p&gt;

&lt;p&gt;On close, if a prefetch outstanding, we let it continue rather than interrupt it?&lt;/p&gt;

&lt;p&gt;We already have AbstractClientScanner. Rather than make ClientScanner also abstract, could we not push what ClientScanner has down into ACS? Or add a &apos;cache&apos; or &apos;prefetch&apos; interface that subclasses of ACS could implement?&lt;/p&gt;

&lt;p&gt;Your formatting is a little irregular (smile).&lt;/p&gt;

&lt;p&gt;IMO this should be ON by default.&lt;/p&gt;

&lt;p&gt;I&apos;m trying to get you some pretty pictures to show speedup.  Will be back.&lt;/p&gt;

&lt;p&gt;Thanks for the patch.&lt;/p&gt;
</comment>
                            <comment id="14345929" author="eshcar" created="Tue, 3 Mar 2015 22:51:59 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; for your comments, I applied most of them.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;The cache is defined in the context of ClientScanner, therefore initializing it and the prefetch methods are defined here.&lt;br/&gt;
IMHO, the entire hierarchy requires major refactoring (e.g., due to code replication), but this should be done in the scope of a different jira &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/li&gt;
		&lt;li&gt;How would you suggest to get a hold of the thread executing the prefetch, so as to interrupt it on close?&lt;/li&gt;
		&lt;li&gt;Apologies for the formatting irregularities. I use IntelliJ which fails to import the eclipse formatting as suggested in the help page you referred me to.&lt;/li&gt;
		&lt;li&gt;Waiting (patiently) for the pictures...&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14346012" author="jonathan.lawlor" created="Tue, 3 Mar 2015 23:34:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt; I have added some review below to follow up on stack&apos;s comments:&lt;/p&gt;

&lt;p&gt;When the defining the capacity for the concurrent queue as below:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;ClientAsyncPrefetchScanner.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
...
&lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void initCache() {
  &lt;span class=&quot;code-comment&quot;&gt;// concurrent cache
&lt;/span&gt;  &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; buffer - &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; cache size
&lt;/span&gt;  cache = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LinkedBlockingQueue&amp;lt;Result&amp;gt;(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.caching*2 + 1);
}
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;we need to check the size of caching first to make sure that overflow does not occur. For example, in the case that this.caching &amp;gt; Integer.Max_Value / 2, this will throw an IllegalArgumentException. This is important in the case that the user has configured Scan#caching=Integer.Max_Value and Scan#maxResultSize to be a nice chunk size (this configuration is used in instances where the user wants to receives responses of a certain heap size from the server rather than responses with a certain number of rows).&lt;/p&gt;

&lt;p&gt;When close() is called and the prefetch is running we still need to end up calling super.close() at some point. In ClientScanner, the call to close() ensures that the RegionScanner is closed on the server side so it is important that we do not miss this call. &lt;/p&gt;

&lt;p&gt;The javadoc on the async ClientScanner seems to indicate that the prefetch will be issued when the cache is half full, but it looks like the cache size check is using caching rather than caching / 2. My guess is that the first two calls to ClientScanner#next() would both kick off RPC calls. The first would fetch the initial chunk containing caching number of rows, and the second call to next would kick off a prefetch (since one Result was consumed by first call and thus cache size will be caching - 1).&lt;/p&gt;

&lt;p&gt;Some javadoc on the async parameter inside Scan.java may be helpful just to clarify how the parameter is used. For example, the parameter currently won&apos;t have any effect in the case that the user has set Scan#setSmall or Scan#setReversed&lt;/p&gt;

&lt;p&gt;Looks like there may be some minor formatting issues that are still hanging around in the latest patch (e.g. Tabs should be 2 spaces instead of 4). You may have already seen it, but in the link &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; pointed out, there is mention of a plugin that can be used with IntelliJ to let eclipse formatters work with it; any luck with that? (having the formatter in the IDE avoids headaches &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)&lt;/p&gt;

&lt;p&gt;Looking forward to getting this one in !&lt;/p&gt;</comment>
                            <comment id="14346017" author="stack" created="Tue, 3 Mar 2015 23:42:03 +0000"  >&lt;p&gt;Wondering why we have a pool data member though we are passing pool to the super class and the super class has a getPool accessor.&lt;/p&gt;

&lt;p&gt;On your feedback, understand that you add caching to ClientScanner but why not AbstractClientScanner? A hierarchy that is AbstractClientScanner subclassed to make a ClientScanner (which is itself abstract) which is subclassed by ClientAsyncPrefetchScanner is a little ugly; can we cut out the ClientScanner tier?&lt;/p&gt;

&lt;p&gt;bq, How would you suggest to get a hold of the thread executing the prefetch, so as to interrupt it on close?&lt;/p&gt;

&lt;p&gt;You will only ever have a single prefetcher?  If so, executorpool is probably overkill?  Just start a single thread that you control?&lt;/p&gt;

&lt;p&gt;Formatting irregularities are still in there... &lt;/p&gt;

&lt;p&gt;Pictures coming.. they are provoking interesting questions (smile)&lt;/p&gt;</comment>
                            <comment id="14346021" author="stack" created="Tue, 3 Mar 2015 23:51:46 +0000"  >&lt;p&gt;Here are the pictures.&lt;/p&gt;

&lt;p&gt;The way to read them is that the four humps on the left are from previous runs.  The first hump is current branch-1.0.  The second is branch-1.0 with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13082&quot; title=&quot;Coarsen StoreScanner locks to RegionScanner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13082&quot;&gt;&lt;del&gt;HBASE-13082&lt;/del&gt;&lt;/a&gt; as is the third hump. The fourth hump is branch-1.0 unadorned again. The two humps on the right hand side are your patch on branch-1.0&lt;/p&gt;

&lt;p&gt;The tall humps are a test that has 5 clients on 5 different machines each running 10 clients against a single regionserver (the regionserver cannot go faster; it is at a ceiling whose nature is TBD).&lt;/p&gt;

&lt;p&gt;The low humps are a single client with two threads.&lt;/p&gt;

&lt;p&gt;The dataset is 100M rows of 10 columns whose size is zipfian distributed between 0 and 8k. On average, a row is about 200k.&lt;/p&gt;

&lt;p&gt;So, interesting observations:&lt;/p&gt;

&lt;p&gt;+ We start out good. Net traffic is up and so are requests but after a while, net traffic and requests falls down to what it was before.  Do we hit a cadence where the rhythm of fetch is effectively what it was without patch?  What you think?  Should we be more aggressive prefetching?&lt;br/&gt;
+ For the light test of two clients only, we run much slower than the unpatched version. Whats that about do you think?&lt;/p&gt;

&lt;p&gt;This is patch v4. Scan gets rows in batches of 30.&lt;/p&gt;

&lt;p&gt;If you want me to try an instrumented version, no problem. I&apos;ll have this little rig for another few days.  Thanks.&lt;/p&gt;</comment>
                            <comment id="14346119" author="hadoopqa" created="Wed, 4 Mar 2015 00:42:18 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12702279/HBASE-13071_trunk_4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12702279/HBASE-13071_trunk_4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 524791bcf5d41202b5da9293896078b45067699a.&lt;br/&gt;
  ATTACHMENT ID: 12702279&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1940 checkstyle errors (more than the master&apos;s current 1935 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13070//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14346239" author="hadoopqa" created="Wed, 4 Mar 2015 02:12:12 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12702279/HBASE-13071_trunk_4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12702279/HBASE-13071_trunk_4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 883d6fd8e512b14c967d2f7acf78d2b1d40e40fe.&lt;br/&gt;
  ATTACHMENT ID: 12702279&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1940 checkstyle errors (more than the master&apos;s current 1935 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.tajo.engine.query.TestJoinQuery.testLeftOuterJoinWithEmptySubquery1(TestJoinQuery.java:473)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13072//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14348304" author="eshcar" created="Thu, 5 Mar 2015 07:15:57 +0000"  >&lt;p&gt;I will work on a new version following the comments above (will take a few days).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; I will get back with a full answer to your questions, first I want to do some additional perf tests on my side.&lt;br/&gt;
The cause of the behavior of the tall humps can be rooted in the way you performed the tests. What is the size of the prefetch? 30?&lt;br/&gt;
If the tests simply call next in a loop without actually processing the data (which is simulated with delays in my tests) then the user exhaust the cache very quickly even though the prefetch is done in the background, and therefore the behavior is equivalent to a sync scan when the app needs to wait for the current prefetch to complete. &lt;br/&gt;
It doesn&apos;t need to wait for the prefetch thread to complete loading the cache at the client side but this is minor when compared to the round trip time at the server side.&lt;br/&gt;
As I mentioned before, the assumption underlying this new feature is that the processing time at the client side can be balanced by the network and IO at the server side. If the processing is short then the network+IO is still a bottleneck. Makes sense?&lt;/p&gt;</comment>
                            <comment id="14348984" author="stack" created="Thu, 5 Mar 2015 16:01:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;Makes sense?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes. Thank you. The test &apos;reads&apos; the result but does not processing, true. Yes, 30 per batch. What test would you like me to run that makes this feature shine? Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14353865" author="eshcar" created="Mon, 9 Mar 2015 23:24:55 +0000"  >&lt;p&gt;A new patch is attached following the comments by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jonathan.lawlor&quot; class=&quot;user-hover&quot; rel=&quot;jonathan.lawlor&quot;&gt;Jonathan Lawlor&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some notes on implementation and design:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;The default value is now set to async. (btw, this means async scanner is used in multiple tests, which used to have sync scan.)&lt;/li&gt;
	&lt;li&gt;The responsibility to invoke super.close() is now shifted to the pending prefetch thread, so it is not missed.&lt;/li&gt;
	&lt;li&gt;In case of sync scanner, the caching parameter indicates both the size of the buffer and the chunk size (#rows fetched). In case of async scanner, the parameter only indicates the later, while the buffer size is doubled. This should now be clear from the documentation, as well as from the new methods getCacheCapacity() and getThresholdSize().&lt;/li&gt;
	&lt;li&gt;cache and caching were members of ClientScanner even before this patch. I only added the abstract initCache() method. I agree that having two abstract classes is not the cleanest solution, but neither is having initCache() in a class where not all subclasses have a cache. As I said before, this hierarchy can benefit from some re-factoring (the right design might use composition like in the strategy pattern instead of inheritance, but all these decisions should not be in the scope of the current Jira).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Some notes on performance:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;This feature is a client side feature and therefore should be tested in terms of client side latency.&lt;/li&gt;
	&lt;li&gt;This feature should reduce the latency, and in worse case scenario should not increase it (at least not significantly)&lt;/li&gt;
	&lt;li&gt;On the server side I would expect the same behavior as in sync scanner, since the same RPC calls are invoked, they only shift earlier in time to have the data ready at the client side before the user needs it.&lt;/li&gt;
	&lt;li&gt;I cannot explain the behavior of the low humps in your test. Do you see this consistently? What is the exact setting? Is it a fixed number of scans or a fixed time?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14354065" author="hadoopqa" created="Tue, 10 Mar 2015 01:33:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12703536/HBASE-13071_trunk_5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12703536/HBASE-13071_trunk_5.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 5025d3aa91d18310fc4d738114ee2b58e48c46c2.&lt;br/&gt;
  ATTACHMENT ID: 12703536&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1929 checkstyle errors (more than the master&apos;s current 1927 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestImportTSVWithTTLs&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestFSErrorsExposed&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestHCM&lt;br/&gt;
                  org.apache.hadoop.hbase.security.access.TestScanEarlyTermination&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClientWithRegionReplicas&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestAdmin1&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSide&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTSVWithOperationAttributes&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.client.TestHTableMultiplexerFlushCache.testOnRegionChange(TestHTableMultiplexerFlushCache.java:114)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13148//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14354312" author="stack" created="Tue, 10 Mar 2015 04:49:09 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt; How should I test so your patch shines?&lt;/p&gt;</comment>
                            <comment id="14355648" author="eshcar" created="Tue, 10 Mar 2015 20:34:32 +0000"  >&lt;p&gt;I think the best way to test this patch is to use the extended version of YCSB which supports measuring multi-step operations like scans (see the link to the code - I added the code in a separate branch).&lt;br/&gt;
The attached evaluation file describes the settings I used in my test.&lt;/p&gt;</comment>
                            <comment id="14355815" author="hadoopqa" created="Tue, 10 Mar 2015 22:07:14 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12703740/HBASE-13071_trunk_6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12703740/HBASE-13071_trunk_6.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit ed93ddd94f6264ca246477bece4bf2c895706a22.&lt;br/&gt;
  ATTACHMENT ID: 12703740&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1926 checkstyle errors (more than the master&apos;s current 1924 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.procedure.TestProcedureManager&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13165//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14356691" author="hadoopqa" created="Wed, 11 Mar 2015 10:36:39 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12703862/HBASE-13071_trunk_7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12703862/HBASE-13071_trunk_7.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit b436db7d70c8a90b0167dc0e0120f503efb37e3c.&lt;br/&gt;
  ATTACHMENT ID: 12703862&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1926 checkstyle errors (more than the master&apos;s current 1924 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTSVWithTTLs&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestHCM&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTSVWithOperationAttributes&lt;br/&gt;
                  org.apache.hadoop.hbase.security.access.TestScanEarlyTermination&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClientWithRegionReplicas&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestFSErrorsExposed&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestAdmin1&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13177//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14357070" author="hadoopqa" created="Wed, 11 Mar 2015 15:49:05 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12703903/HBASE-13071_trunk_8.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12703903/HBASE-13071_trunk_8.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e66dca6cd1fd91bfa65a7cd4c68acb7a7f6a6c4e.&lt;br/&gt;
  ATTACHMENT ID: 12703903&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1926 checkstyle errors (more than the master&apos;s current 1924 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13185//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14362424" author="hadoopqa" created="Sun, 15 Mar 2015 16:07:39 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12704663/HBASE-13071_trunk_9.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12704663/HBASE-13071_trunk_9.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 01bc979ea29e9282786de13c1cb8cbc107e92e9f.&lt;br/&gt;
  ATTACHMENT ID: 12704663&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1918 checkstyle errors (more than the master&apos;s current 1917 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13254//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14362606" author="eshcar" created="Sun, 15 Mar 2015 23:19:08 +0000"  >&lt;p&gt;New patch is attached.&lt;/p&gt;

&lt;p&gt;Also attached the evaluation results for multiple parallel  scanners.&lt;br/&gt;
Bottom line, on client side results show similar latency improvement trends for multiple async scanners as for a single scanner thread.&lt;/p&gt;</comment>
                            <comment id="14362649" author="hadoopqa" created="Mon, 16 Mar 2015 01:19:06 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12704698/HBASE-13071_trunk_10.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12704698/HBASE-13071_trunk_10.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 0505b7941e175d86004daf9a31ef5ce240d4570f.&lt;br/&gt;
  ATTACHMENT ID: 12704698&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.client.TestHTableMultiplexerFlushCache.testOnRegionChange(TestHTableMultiplexerFlushCache.java:114)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13256//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14362659" author="yuzhihong@gmail.com" created="Mon, 16 Mar 2015 02:09:43 +0000"  >&lt;p&gt;Results shown in the pdf are impressive.&lt;/p&gt;</comment>
                            <comment id="14362777" author="ebortnik" created="Mon, 16 Mar 2015 05:51:40 +0000"  >&lt;p&gt;Eshcar,&lt;br/&gt;
Do you have an idea why there are still steps in the async graph? This probably means that our delays are not long enough.&#160;&lt;br/&gt;
Eddie &lt;/p&gt;


&lt;p&gt;     On Monday, March 16, 2015 1:14 AM, Eshcar Hillel (JIRA) &amp;lt;jira@apache.org&amp;gt; wrote:&lt;/p&gt;



&lt;p&gt;&#160; &#160; [ &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-13071?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Eshcar Hillel updated &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071&quot; title=&quot;Hbase Streaming Scan Feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13071&quot;&gt;&lt;del&gt;HBASE-13071&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
----------------------------------&lt;br/&gt;
&#160; &#160; Attachment: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071&quot; title=&quot;Hbase Streaming Scan Feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13071&quot;&gt;&lt;del&gt;HBASE-13071&lt;/del&gt;&lt;/a&gt;_trunk_10.patch&lt;/p&gt;




&lt;p&gt;&amp;#8211;&lt;br/&gt;
This message was sent by Atlassian JIRA&lt;br/&gt;
(v6.3.4#6332)&lt;/p&gt;

</comment>
                            <comment id="14366767" author="eshcar" created="Wed, 18 Mar 2015 07:20:40 +0000"  >&lt;p&gt;Yes it&apos;s all about setting the delays, but I don&apos;t want to change &#160;them to make the results look better.They are there just to make the point.&lt;/p&gt;

&lt;p&gt;      From: Edward Bortnikov (JIRA) &amp;lt;jira@apache.org&amp;gt;&lt;br/&gt;
 To: eshcar@yahoo-inc.com &lt;br/&gt;
 Sent: Monday, March 16, 2015 7:52 AM&lt;br/&gt;
 Subject: &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Commented&amp;#93;&lt;/span&gt; (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071&quot; title=&quot;Hbase Streaming Scan Feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13071&quot;&gt;&lt;del&gt;HBASE-13071&lt;/del&gt;&lt;/a&gt;) Hbase Streaming Scan Feature&lt;/p&gt;


&lt;p&gt;&#160; &#160; [ &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=14362777#comment-14362777&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-13071?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=14362777#comment-14362777&lt;/a&gt; ] &lt;/p&gt;

&lt;p&gt;Edward Bortnikov commented on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071&quot; title=&quot;Hbase Streaming Scan Feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13071&quot;&gt;&lt;del&gt;HBASE-13071&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
------------------------------------------&lt;/p&gt;

&lt;p&gt;Eshcar,&lt;br/&gt;
Do you have an idea why there are still steps in the async graph? This probably means that our delays are not long enough.&#160;&lt;br/&gt;
Eddie &lt;/p&gt;


&lt;p&gt;&#160; &#160; On Monday, March 16, 2015 1:14 AM, Eshcar Hillel (JIRA) &amp;lt;jira@apache.org&amp;gt; wrote:&lt;br/&gt;
&#160; &lt;/p&gt;


&lt;p&gt;&#160; &#160; [ &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-13071?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Eshcar Hillel updated &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071&quot; title=&quot;Hbase Streaming Scan Feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13071&quot;&gt;&lt;del&gt;HBASE-13071&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
----------------------------------&lt;br/&gt;
&#160; &#160; Attachment: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071&quot; title=&quot;Hbase Streaming Scan Feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13071&quot;&gt;&lt;del&gt;HBASE-13071&lt;/del&gt;&lt;/a&gt;_trunk_10.patch&lt;/p&gt;




&lt;p&gt;&amp;#8211;&lt;br/&gt;
This message was sent by Atlassian JIRA&lt;br/&gt;
(v6.3.4#6332)&lt;/p&gt;







&lt;p&gt;&amp;#8211;&lt;br/&gt;
This message was sent by Atlassian JIRA&lt;br/&gt;
(v6.3.4#6332)&lt;/p&gt;
</comment>
                            <comment id="14367141" author="hadoopqa" created="Wed, 18 Mar 2015 13:46:47 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12705332/HBASE-13071_trunk_10.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12705332/HBASE-13071_trunk_10.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f9a17edc252a88c5a1a2c7764e3f9f65623e0ced.&lt;br/&gt;
  ATTACHMENT ID: 12705332&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13294//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14367166" author="eshcar" created="Wed, 18 Mar 2015 14:12:52 +0000"  >&lt;p&gt;Hi everyone,&lt;/p&gt;

&lt;p&gt;What would be the next thing to do to get this patch in (now that all the lights are green &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Eshcar&lt;/p&gt;</comment>
                            <comment id="14368689" author="ebortnik" created="Thu, 19 Mar 2015 08:27:13 +0000"  >&lt;p&gt;I second &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt;. This is not a huge feature, and everybody seems to benefit. &lt;br/&gt;
If there is anything else we should do about the code review - let&apos;s do it, and race to commit &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Edward&lt;/p&gt;</comment>
                            <comment id="14381587" author="ebortnik" created="Thu, 26 Mar 2015 08:50:57 +0000"  >&lt;p&gt;+1 on this feature&lt;/p&gt;</comment>
                            <comment id="14445936" author="stack" created="Mon, 6 Apr 2015 00:59:23 +0000"  >&lt;p&gt;I have your latest patch on my little rig &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt; Throughput is down and latency is up (the first hump is a run w/o your patch, the second hump is with your patch installed). Tell me how to make your patch shine? I do not think I should have to run a particular YCSB loading. I would think that I should be able to see the benefit in any long scan setup? Please correct me if I have it wrong.&lt;/p&gt;

&lt;p&gt;My dataset is 100M rows of ten columns each. The cells are zipfian sized from 0-8k. Average row size is about 160k. I am running 5 processes each of ten clients all doing random scans of 1k rows against a single server; i.e. pick random row and then scan for 1000 rows. There is no &apos;delay&apos; processing the row. Let me try adding one now.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="14480881" author="stack" created="Mon, 6 Apr 2015 03:19:12 +0000"  >&lt;p&gt;I added a delay of 1ms every ten rows. Shows same story; slightly lower throughput, higher latency, and more gc. Let me know what you&apos;d have me try &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14482738" author="eshcar" created="Tue, 7 Apr 2015 07:25:55 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; for running this rig tests.&lt;br/&gt;
I believe the right way to see the benefit of this feature is to measure the scan.next() latency at the client side, there you should see the latency going down as you increase the delays.&lt;br/&gt;
Obviously, an async scanner puts more pressure on the server since the rate it is asking for records is higher. Since you are already stress testing the server with 50 (heavy scanners) clients, it could be that the extra pressure the async clients put on the server push it beyond its peak point.&lt;br/&gt;
Other than that, what is the prefetch size you are using? I assume it is less than 100. The scenarios in which async scanner would have maximum gain is when the client side processing (i.e., delays) are equal to the server side I/O time + network delays. If the prefetch size is too small the network delays are more pronounced, and therefore the delays should be longer.&lt;/p&gt;

&lt;p&gt;Finally, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;  could you please share the client code you use for your tests, either via this Jira or send it directly to me, so I can take a closer look, and try it out myself.&lt;/p&gt;</comment>
                            <comment id="14483600" author="stack" created="Tue, 7 Apr 2015 17:44:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;Thanks stack for running this rig tests.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It is my pleasure.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I believe the right way to see the benefit of this feature is to measure the scan.next() latency at the client side, there you should see the latency going down as you increase the delays.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Let me do this. I will do it with a single process of ten clients only so server is not near capacity.&lt;/p&gt;

&lt;p&gt;I am using default of 30.  I will up it.&lt;/p&gt;

&lt;p&gt;I am using PerformanceEvaluation tool with the scan1000 option. Above I describe the dataset I am scanning.&lt;/p&gt;

&lt;p&gt;So, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt;, it would seem that this feature would need to be self tuning to add general benefit given size of prefetch, client processing time, and other factors, all hinder its ability to shine?&lt;/p&gt;
</comment>
                            <comment id="14487621" author="ebortnik" created="Thu, 9 Apr 2015 16:31:02 +0000"  >&lt;p&gt;Chiming in ... The discussion is becoming loaded, let me summarize up to this point, so that we can figure out what&apos;s missing. Apologies about the possible duplication of what was said before, and might sound obvious. &lt;/p&gt;

&lt;p&gt;The feature is 100% client-side. The metrics we&apos;ve been measuring are client-side as well. Ycsb is the workload generator; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt; provided the source. The network and server hardware are pretty much standard. In order for the optimization results to be observable, the scans should be meaty, with large prefetches (we used 100-1000 records), and the per-record processing at the client side should be non-negligible. In this context, it makes sense to mask the network delay by prefetching in the background.&lt;/p&gt;

&lt;p&gt;We are not familiar with the PerformanceEvaluation tool. Does it measure server-side metrics? If so, it can definitely happen that the server side is more congested (and consequently, a bit slower) because many clients move faster. Still, the elimination of the stop-and-wait pattern is significant to boost the client throughput metrics, as our results suggest. We did not measure network congestion, but it&apos;s hard to believe that the 1G backbone gets congested in this context. &lt;/p&gt;

&lt;p&gt;Re/ auto-tuning, I believe this is a bit premature. Let&apos;s keep the code simple, and let the client control. The optimization does not necessarily need to be a default.&lt;/p&gt;

&lt;p&gt;Thanks. &lt;/p&gt;</comment>
                            <comment id="14491898" author="stack" created="Mon, 13 Apr 2015 04:18:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;the scans should be meaty, with large prefetches (we used 100-1000 records), and the per-record processing at the client side should be non-negligible&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What would you suggest then &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ebortnik&quot; class=&quot;user-hover&quot; rel=&quot;ebortnik&quot;&gt;Edward Bortnikov&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt;?  Defaults in hbase are 30 rows at a time, not 1000. Would it make sense if this facility could be turned on by enabling a property on a Scan object?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We are not familiar with the PerformanceEvaluation tool&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Np. It is a coarse tool we&apos;ve been using since early days to run loadings on hbase. See bin/hbase pe&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Re/ auto-tuning, I believe this is a bit premature. Let&apos;s keep the code simple, and let the client control. The optimization does not necessarily need to be a default.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I suggest auto-tune so the feature is useful more often than not. Regards it not needing to be the default, would be cool if user didn&apos;t have to go figure an opaque option to get this benefit.&lt;/p&gt;

&lt;p&gt;Let me try and repro the benefit seen in posted graphs.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="14494748" author="eshcar" created="Tue, 14 Apr 2015 19:51:56 +0000"  >&lt;p&gt;I looked into the PerformanceEvaluation tool, the code is easy to read and maintain.&lt;br/&gt;
I believe the changes that are required in the implementation of testRow() in ScanTest:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;set caching to 100 (or even to DEFAULT_HBASE_CLIENT_SCANNER_CACHING) instead of 30&lt;/li&gt;
	&lt;li&gt;add timeout before calling testScanner.next() &lt;span class=&quot;error&quot;&gt;&amp;#91;I think you already added this one&amp;#93;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;make sure setFilter(FilterAllFilter) is not invoked&lt;br/&gt;
and optionally, add a scanRange100000 class to do really big scans&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, do you have by any chance the results of the client latency distribution collected by the tool in your previous experiments?&lt;/p&gt;

&lt;p&gt;BTW, 30 is not the default value for prefetch size. DEFAULT_HBASE_CLIENT_SCANNER_CACHING is set to 100 in 0.98 and to Integer.MAX_VALUE in master.&lt;/p&gt;</comment>
                            <comment id="14496916" author="stack" created="Wed, 15 Apr 2015 20:47:18 +0000"  >&lt;p&gt;Pardon me &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt; but the patch has rotted. I can&apos;t make sense of what is supposed to be happening in ClientScanner where we remove #next and replace it with #prefetch. Help me out. Thanks.&lt;/p&gt;</comment>
                            <comment id="14497714" author="eshcar" created="Thu, 16 Apr 2015 08:19:46 +0000"  >&lt;p&gt;ClientScanner is an abstract class that bares the code shared by the sync and async scanner classes, like the prefetch method.&lt;br/&gt;
#prefetch does not replace #next, it is invoked from #next in ClientSimpleScanner (the sync scanner) thereby preserving the same sync behavior as before. In ClientAsyncPrefetchScanner the prefetch method is invoked in the run method of a background thread when the buffer at the client side is half full.&lt;br/&gt;
I hope this makes sense.&lt;/p&gt;</comment>
                            <comment id="14498201" author="stack" created="Thu, 16 Apr 2015 15:54:08 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt; I was talking about patch. Your patch no longer applies. Trunk has changed (the bit that does not apply is overwrite of next by prefetch...) Sorry I was not clear. Would you mind rebasing your patch? Thank you. Pardon my letting it rot.&lt;/p&gt;</comment>
                            <comment id="14503549" author="eshcar" created="Mon, 20 Apr 2015 20:33:23 +0000"  >&lt;p&gt;Done rebase.&lt;br/&gt;
Thanks to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13090&quot; title=&quot;Progress heartbeats for long running scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13090&quot;&gt;&lt;del&gt;HBASE-13090&lt;/del&gt;&lt;/a&gt; next and loadCache methods are separated so this rebase wasn&apos;t too painful (thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jonathan.lawlor&quot; class=&quot;user-hover&quot; rel=&quot;jonathan.lawlor&quot;&gt;Jonathan Lawlor&lt;/a&gt;).&lt;br/&gt;
I also changed some new scanner tests to account for the change in scanner cache interface (it is now a Queue).&lt;/p&gt;</comment>
                            <comment id="14503897" author="hadoopqa" created="Mon, 20 Apr 2015 23:05:12 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12726649/HBASE-13071_trunk_rebase_1.0.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12726649/HBASE-13071_trunk_rebase_1.0.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 702aea5b38ed6ad0942b0c59c3accca476b46873.&lt;br/&gt;
  ATTACHMENT ID: 12726649&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1902 checkstyle errors (more than the master&apos;s current 1898 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13744//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13744//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13744//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13744//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13744//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13744//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13744//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13744//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14513647" author="ebortnik" created="Mon, 27 Apr 2015 07:19:52 +0000"  >&lt;p&gt;I&apos;d suggest leaving the use of this feature manual rather than expecting the system to auto-tune. It is often hard to know whether the application requires aggressive caching at the client side. For example, consider an application that does some tricky aggregation of the scanned data, in which the compute part is considerable. There is no way for HBase to know that in advance. The optimization does not come for free (up to 2x caching at the client side), so IMHO it&apos;s up to the application to decide whether to use it.  &lt;/p&gt;

&lt;p&gt;Dear community - could you please review and vote on the last patch before it becomes obsolete again? The JIRA is still not assigned to any committer. &lt;/p&gt;</comment>
                            <comment id="14523816" author="stack" created="Fri, 1 May 2015 20:08:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;d suggest leaving the use of this feature manual rather than expecting the system to auto-tune.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok. But you would have to turn it on globally for the client, right?  You can&apos;t do it on a per-scan basis.  How hard to add enabling this facility on a per-scan basis. It would make it easier to commit this feature if it was not a choice between being globally on or off.&lt;/p&gt;

&lt;p&gt;This patch also does sizing using (row) caching count. Caching is going to go away as first class attribute of Scan in hbase 1.1+ as we have moved to a size-in-bytes basis for our scan requests; size-in-bytes would make more sense sizing the client-size cache too I&apos;d say. Any plans for moving off the row caching basis?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</comment>
                            <comment id="14525825" author="ebortnik" created="Sun, 3 May 2015 13:03:16 +0000"  >
&lt;p&gt;1. No problem having a per-scan parameter. The assumption is that scans should be big in order for the feature to be efficient. &lt;br/&gt;
2. No problem moving to the size-in-bytes parameter. The API should be identical for synchronous and asynchronous clients. &lt;/p&gt;

&lt;p&gt;Let&apos;s agree on the upper-bound parameter semantics (whether rows or bytes). Should it be conservative or optimistic? In the optimistic interpretation, the client would directly relay the API parameter to the server. A new prefetch request is issued when 50% of the old buffer consumed, so when the new buffer arrives the old one might not be released yet. This overlap should be short but the bound semantics are soft (best-effort). In the conservative interpretation, the client would adapt the API parameters, and issue requests for less data, to prevent any overflow. For legacy scans, there was no difference because the prefetch and computation parts did not overlap. &lt;/p&gt;

&lt;p&gt;Which approach would be better? &lt;/p&gt;</comment>
                            <comment id="14526155" author="stack" created="Mon, 4 May 2015 01:52:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;1. No problem having a per-scan parameter. The assumption is that scans should be big in order for the feature to be efficient. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good. Can say in javadoc that scan needs to be big to get the benefit.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;2. No problem moving to the size-in-bytes parameter. The API should be identical for synchronous and asynchronous clients.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good.&lt;/p&gt;

&lt;p&gt;Bytes is what we do now rather than rows, since this work &lt;a href=&quot;https://blogs.apache.org/hbase/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://blogs.apache.org/hbase/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In the optimistic interpretation, the client would directly relay the API parameter to the server. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What parameter and why go to the server?&lt;/p&gt;

&lt;p&gt;Whats wrong w/ optimistic other than client carrying extra data? I&apos;d say go for optimistic.&lt;/p&gt;

&lt;p&gt;I&apos;d be fine that it &apos;costs&apos; more on the server as long as tangible benefit.&lt;/p&gt;
</comment>
                            <comment id="14531326" author="eshcar" created="Wed, 6 May 2015 20:20:17 +0000"  >&lt;p&gt;Aligning with the size-in-bytes basis for scan requests -&lt;br/&gt;
here is a snippet of the code to set the cache capacity and to determine whether or not to invoke prefetch when next() is called in ClientAsyncPrefetchScanner&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; buffer - &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; cache size
&lt;/span&gt;  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; calcCacheCapacity() {
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; capacity = &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MAX_VALUE;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(caching &amp;gt;= 0 &amp;amp;&amp;amp; caching &amp;lt; (&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MAX_VALUE /2)) {
      capacity = caching * 2 + 1;
    }
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(capacity == &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MAX_VALUE){
      capacity = (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;) (maxScannerResultSize / ESTIMATED_SINGLE_RESULT_SIZE);
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; capacity;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; prefetchCondition() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;
        (getCacheCount() &amp;lt; getCountThreshold()) &amp;amp;&amp;amp;
        (getCacheSizeInBytes() &amp;lt; getSizeThreshold()) ;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getCountThreshold() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; cacheCapacity / 2 ;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getSizeThreshold() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; maxScannerResultSize / 2 ;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where cacheSizeInBytes is an AtomicInteger that is updated whenever the cache is (increased when adding results to cache, decreased when removing them).&lt;/p&gt;</comment>
                            <comment id="14537096" author="eshcar" created="Sun, 10 May 2015 09:36:28 +0000"  >&lt;p&gt;New patch available.&lt;/p&gt;</comment>
                            <comment id="14537161" author="hadoopqa" created="Sun, 10 May 2015 12:18:16 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12731786/HBASE-13071_trunk_rebase_2.0.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12731786/HBASE-13071_trunk_rebase_2.0.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 5a2ca43fa16a95d8db67e5a3d8b48e4d3f3a9aeb.&lt;br/&gt;
  ATTACHMENT ID: 12731786&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1898 checkstyle errors (more than the master&apos;s current 1896 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13996//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13996//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13996//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13996//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13996//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13996//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13996//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13996//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14537322" author="ebortnik" created="Sun, 10 May 2015 19:24:34 +0000"  >&lt;p&gt;Community - please review the last patch (covers all the previous requests).&lt;/p&gt;</comment>
                            <comment id="14537523" author="stack" created="Mon, 11 May 2015 03:43:59 +0000"  >&lt;p&gt;+1 on this last patch. At a minimum, its an nice illustration of what is possible. I&apos;ll commit in a day or so. Anyone else want to have a look?&lt;/p&gt;

&lt;p&gt;A few questions &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Do the changes in table-scoped configuration &amp;#8211; the changes in TableConfiguration &amp;#8211; make sense? Having Scan defaults &amp;#8211; a client-side op &amp;#8211; in the general Configuration seems a little overbroad. Probably no harm done since it off by default so we can let it be.&lt;/p&gt;

&lt;p&gt;Is the checkstyle error from your report? No harm, I can check on commit so don&apos;t worry about it.&lt;/p&gt;

&lt;p&gt;I suggest you write up a fat release note. Release note is probably how folks will learn of this feature (unless you do a blog post or something &amp;#8211; which might make sense since you have those nice perf findings &amp;#8211; have you redone them for this patch that is now size-base?).  If you have done th size-base perf analysis, suggest you link to that in the release notes too.&lt;/p&gt;

&lt;p&gt;Nice work.&lt;/p&gt;
</comment>
                            <comment id="14538227" author="ebortnik" created="Mon, 11 May 2015 17:29:02 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;We&apos;ll post release notes to the jira tomorrow (is this the right destination?), and a blog post a tad later (probably, early next week), including the perf results. &lt;/p&gt;</comment>
                            <comment id="14538418" author="eshcar" created="Mon, 11 May 2015 18:52:34 +0000"  >&lt;p&gt;2 check styles error added in this patch: (1) forgot to remove redundant import in ClientSimpleScanner, (2) added a line to the method loadCache() in ClientScanner which caused it to overflow (151 lines).&lt;/p&gt;</comment>
                            <comment id="14538419" author="eshcar" created="Mon, 11 May 2015 18:52:43 +0000"  >&lt;p&gt;2 check styles error added in this patch: (1) forgot to remove redundant import in ClientSimpleScanner, (2) added a line to the method loadCache() in ClientScanner which caused it to overflow (151 lines).&lt;/p&gt;</comment>
                            <comment id="14541787" author="ebortnik" created="Wed, 13 May 2015 11:53:30 +0000"  >&lt;p&gt;Release note - motivation, API, configuration, and some implementation detail. &lt;/p&gt;</comment>
                            <comment id="14541789" author="ebortnik" created="Wed, 13 May 2015 11:57:58 +0000"  >&lt;p&gt;Release note attached, please advise if some different format is expected. &lt;br/&gt;
We are working on the blog - will complete next week, hopefully should not preclude commit. &lt;/p&gt;

&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; for volunteering to commit. Which release will this feature become candidate for - 1.1, 2.0, or both? &lt;/p&gt;</comment>
                            <comment id="14541822" author="hadoopqa" created="Wed, 13 May 2015 12:16:29 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12732546/Releasenote-13071.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12732546/Releasenote-13071.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 220ac141bfcea7798faa5f73295ec61d8b173af9.&lt;br/&gt;
  ATTACHMENT ID: 12732546&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+0 tests included&lt;/font&gt;.  The patch appears to be a documentation, build,&lt;br/&gt;
                        or dev-support patch that doesn&apos;t require tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14035//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14035//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14542093" author="stack" created="Wed, 13 May 2015 15:28:16 +0000"  >&lt;p&gt;Very nice release note. I took the contents and inserted them in the release note section in this JIRA (For future, see how when you hit &apos;edit&apos;, and if you scroll down, there is a &apos;release note&apos; textbox). I added a sentence on the end about more load on server and YMMV.&lt;/p&gt;

&lt;p&gt;Is there a place in the refguide where we should shove your release note? Just say and I will take care of it.&lt;/p&gt;

&lt;p&gt;I committed to master, so 2.0. I tried the branch-1 patch but it failed apply. If you update it, I&apos;ll apply it to branch-1.&lt;/p&gt;

&lt;p&gt;Thank you for the persistence.&lt;/p&gt;</comment>
                            <comment id="14542094" author="stack" created="Wed, 13 May 2015 15:29:24 +0000"  >&lt;p&gt;Resolving since it went into master. If a branch-1 patch comes in soon, I will apply on this issue.&lt;/p&gt;</comment>
                            <comment id="14542120" author="stack" created="Wed, 13 May 2015 15:39:54 +0000"  >&lt;p&gt;Hopefully this will go into refguide when &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13681&quot; title=&quot;Refactor Scan section in refguide to take account of scanner chunking, heartbeating, prefetch&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13681&quot;&gt;HBASE-13681&lt;/a&gt; gets attention.&lt;/p&gt;</comment>
                            <comment id="14542396" author="hudson" created="Wed, 13 May 2015 18:38:01 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #6481 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6481/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6481/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071&quot; title=&quot;Hbase Streaming Scan Feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13071&quot;&gt;&lt;del&gt;HBASE-13071&lt;/del&gt;&lt;/a&gt; Hbase Streaming Scan Feature (stack: rev 86b91997d0590fcf00634e9e90216e77da607fd2)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientSimpleScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientAsyncPrefetchScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestScannersFromClientSide.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestClientSmallScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ReversedClientScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientSmallScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestClientScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestClientSmallReversedScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/TableConfiguration.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14543714" author="ebortnik" created="Thu, 14 May 2015 14:19:04 +0000"  >&lt;p&gt;We&apos;ll be happy to get guidance as per how to contribute to refguide. &lt;/p&gt;</comment>
                            <comment id="14543715" author="ebortnik" created="Thu, 14 May 2015 14:19:06 +0000"  >&lt;p&gt;We&apos;ll be happy to get guidance as per how to contribute to refguide. &lt;/p&gt;</comment>
                            <comment id="14544043" author="stack" created="Thu, 14 May 2015 17:12:46 +0000"  >&lt;blockquote&gt;&lt;p&gt;We&apos;ll be happy to get guidance as per how to contribute to refguide.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Make a patch for the refguide &amp;#8211; it is at src/main/asciidoc/ &amp;#8211; in a new issue? You&apos;ll have to figure where you think it sits best (perf, scan?) Copy/paste your release note would make good candidate text.&lt;/p&gt;</comment>
                            <comment id="14547627" author="eshcar" created="Mon, 18 May 2015 07:17:24 +0000"  >&lt;p&gt;Hi ~stack,&lt;/p&gt;

&lt;p&gt;Attached 2 new patches for branch-1 and 0.98.&lt;br/&gt;
While preparing these patches I discovered that in asynchronous scanner the cache byte-size variable is not updated in one of the places where polling item from the cache. Therefore I also attach a patch to fix this bug in trunk - it is a small local fix in ClientAsyncPrefetchScanner.java (this is already fixed in the patches for branch-1 and 0.98).&lt;/p&gt;

&lt;p&gt;Will you be able to apply the patches?&lt;/p&gt;

&lt;p&gt;Also do we need to open a new Jira for the refugee patch or is it ok to post it here?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Eshcar&lt;/p&gt;</comment>
                            <comment id="14548148" author="stack" created="Mon, 18 May 2015 15:17:49 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eshcar&quot; class=&quot;user-hover&quot; rel=&quot;eshcar&quot;&gt;Eshcar Hillel&lt;/a&gt; Thanks for finding issue. Please open new issue. This one is dense enough already. Thank you (FYI, you do not need to clean up old patches &amp;#8211; thanks).&lt;/p&gt;</comment>
                            <comment id="14553312" author="hudson" created="Wed, 20 May 2015 23:15:47 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6499 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6499/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6499/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13071&quot; title=&quot;Hbase Streaming Scan Feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13071&quot;&gt;&lt;del&gt;HBASE-13071&lt;/del&gt;&lt;/a&gt; synchronous scanner &amp;#8211; cache size-in-bytes bug fix (stack: rev 7f2b33dbbf90474a8f73e4d38ea8f6817ee3dcdb)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientAsyncPrefetchScanner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12651048">HBASE-8691</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12831289">HBASE-13719</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12776620">HBASE-13082</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12728285">HBASE-11544</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12777230">HBASE-13090</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12773517">HBASE-12994</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12702303" name="99.eshcar.png" size="24816" author="stack" created="Tue, 3 Mar 2015 23:51:46 +0000"/>
                            <attachment id="12733465" name="HBASE-13071-0_98.patch" size="35635" author="eshcar" created="Mon, 18 May 2015 07:07:53 +0000"/>
                            <attachment id="12733464" name="HBASE-13071-BRANCH-1.patch" size="34625" author="eshcar" created="Mon, 18 May 2015 07:07:21 +0000"/>
                            <attachment id="12733463" name="HBASE-13071-trunk-bug-fix.patch" size="1904" author="eshcar" created="Mon, 18 May 2015 07:06:47 +0000"/>
                            <attachment id="12726649" name="HBASE-13071_trunk_rebase_1.0.patch" size="31789" author="eshcar" created="Mon, 20 Apr 2015 20:26:07 +0000"/>
                            <attachment id="12731786" name="HBASE-13071_trunk_rebase_2.0.patch" size="34574" author="eshcar" created="Sun, 10 May 2015 09:36:28 +0000"/>
                            <attachment id="12699659" name="HBaseStreamingScanDesign.pdf" size="123946" author="eshcar" created="Thu, 19 Feb 2015 12:53:43 +0000"/>
                            <attachment id="12700095" name="HbaseStreamingScanEvaluation.pdf" size="166220" author="eshcar" created="Sun, 22 Feb 2015 13:46:21 +0000"/>
                            <attachment id="12704697" name="HbaseStreamingScanEvaluationwithMultipleClients.pdf" size="361171" author="eshcar" created="Sun, 15 Mar 2015 23:07:26 +0000"/>
                            <attachment id="12732546" name="Releasenote-13071.txt" size="2271" author="ebortnik" created="Wed, 13 May 2015 11:53:30 +0000"/>
                            <attachment id="12723283" name="gc.delay.png" size="12555" author="stack" created="Mon, 6 Apr 2015 03:19:12 +0000"/>
                            <attachment id="12702305" name="gc.eshcar.png" size="25502" author="stack" created="Tue, 3 Mar 2015 23:51:46 +0000"/>
                            <attachment id="12718342" name="gc.png" size="12584" author="stack" created="Mon, 6 Apr 2015 00:59:23 +0000"/>
                            <attachment id="12723281" name="hits.delay.png" size="11026" author="stack" created="Mon, 6 Apr 2015 03:19:12 +0000"/>
                            <attachment id="12702304" name="hits.eshcar.png" size="12812" author="stack" created="Tue, 3 Mar 2015 23:51:46 +0000"/>
                            <attachment id="12718343" name="hits.png" size="10682" author="stack" created="Mon, 6 Apr 2015 00:59:23 +0000"/>
                            <attachment id="12723282" name="latency.delay.png" size="11544" author="stack" created="Mon, 6 Apr 2015 03:19:12 +0000"/>
                            <attachment id="12718341" name="latency.png" size="8746" author="stack" created="Mon, 6 Apr 2015 00:59:23 +0000"/>
                            <attachment id="12702306" name="network.png" size="15264" author="stack" created="Tue, 3 Mar 2015 23:51:46 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 19 Feb 2015 17:57:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 30 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2eodb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>MOTIVATION&lt;br/&gt;
&lt;br/&gt;
A pipelined scan API is introduced for speeding up applications that combine massive data traversal with compute-intensive processing. Traditional HBase scans save network trips through prefetching the data to the client side cache. However, they prefetch synchronously: the fetch request to regionserver is invoked only when the entire cache is consumed. This leads to a stop-and-wait access pattern, in which the client stalls until the next chunk of data is fetched. Applications that do significant processing can benefit from background data prefetching, which eliminates this bottleneck. The pipelined scan implementation overlaps the cache population at the client side with application processing. Namely, it issues a new scan RPC when the iteration retrieves 50% of the cache. If the application processing (that is, the time between invocations of next()) is substantial, the new chunk of data will be available before the previous one is exhausted, and the client will not experience any delay. Ideally, the prefetch and the processing times should be balanced. &lt;br/&gt;
&lt;br/&gt;
API AND CONFIGURATION&lt;br/&gt;
&lt;br/&gt;
Asynchronous scanning can be configured either globally for all tables and scans, or on per-scan basis via a new Scan class API. &lt;br/&gt;
&lt;br/&gt;
Configuration in hbase-site.xml: hbase.client.scanner.async.prefetch, default false:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;lt;property&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;name&amp;gt;hbase.client.scanner.async.prefetch&amp;lt;/name&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;value&amp;gt;true&amp;lt;/value&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;lt;/property&amp;gt;&lt;br/&gt;
&lt;br/&gt;
API - Scan#setAsyncPrefetch(boolean)&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Scan scan = new Scan();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scan.setCaching(1000);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scan.setMaxResultSize(BIG_SIZE);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scan.setAsyncPrefetch(true);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ResultScanner scanner = table.getScanner(scan);&lt;br/&gt;
&lt;br/&gt;
IMPLEMENTATION NOTES&lt;br/&gt;
&lt;br/&gt;
Pipelined scan is implemented by a new ClientAsyncPrefetchScanner class, which is fully API-compatible with the synchronous ClientSimpleScanner. ClientAsyncPrefetchScanner is not instantiated in case of small (Scan#setSmall) and reversed (Scan#setReversed) scanners. The application is responsible for setting the prefetch size in a way that the prefetch time and the processing times are balanced. Note that due to double buffering, the client side cache can use twice as much memory as the synchronous scanner.&lt;br/&gt;
&lt;br/&gt;
Generally, this feature will put more load on the server (higher fetch rate -- which is the whole point).  Also, YMMV.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>