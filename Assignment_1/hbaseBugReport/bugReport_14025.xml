<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:49:00 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14025/HBASE-14025.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14025] Update CHANGES.txt for 1.2</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14025</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Since it&apos;s more effort than I expected, making a ticket to track actually updating CHANGES.txt so that new RMs have an idea what to expect.&lt;/p&gt;

&lt;p&gt;Maybe will make doc changes if there&apos;s enough here.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12842675">HBASE-14025</key>
            <summary>Update CHANGES.txt for 1.2</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12838031">HBASE-13908</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="busbey">Sean Busbey</assignee>
                                    <reporter username="busbey">Sean Busbey</reporter>
                        <labels>
                    </labels>
                <created>Sat, 4 Jul 2015 18:57:35 +0000</created>
                <updated>Mon, 20 Jun 2016 15:05:30 +0000</updated>
                            <resolved>Mon, 22 Feb 2016 23:37:21 +0000</resolved>
                                    <version>1.2.0</version>
                                    <fixVersion>1.2.0</fixVersion>
                                    <component>documentation</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="14614022" author="stack" created="Sat, 4 Jul 2015 19:36:55 +0000"  >&lt;p&gt;What you thinking &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If it helps:&lt;/p&gt;

&lt;p&gt;In past, you could not export more than 100 issues at a time from JIRA so making the CHANGES.txt content when &amp;gt; 100 issues was painful. Often, just punted and pointed at the release notes report in JIRA. Even when an export, hackery coming up w/ the form that always screamed &apos;script it&apos; but was always too lazy to do it; instead just bungled through regex&apos;ing in editor.&lt;/p&gt;</comment>
                            <comment id="14614032" author="busbey" created="Sat, 4 Jul 2015 20:00:39 +0000"  >&lt;p&gt;(opinion): JIRA is the source of truth for what is fixed in a given version. The CHANGES.txt file in a release is meant as a convenience for downstream folks who might not have access to JIRA. A primary benefit of providing this convenience is making sure the RM does a pass at validating the fix versions set in JIRA.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Clean up JIRA for your release
	&lt;ol&gt;
		&lt;li&gt;get the release notes from JIRA in text format and save it (i.e. as CHANGES_1.2.0_jira.txt)
		&lt;ol&gt;
			&lt;li&gt;i.e. project home -&amp;gt; versions -&amp;gt; 1.2.0 -&amp;gt; Release Notes -&amp;gt; Configure Release Notes -&amp;gt; format: text -&amp;gt; Create (leads to &lt;a href=&quot;https://issues.apache.org/jira/secure/ReleaseNote.jspa?version=12332062&amp;amp;styleName=Text&amp;amp;projectId=12310753&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;these text release notes for 1.2.0&lt;/a&gt;&lt;/li&gt;
			&lt;li&gt;the text box at the bottom will have the contents to copy&lt;/li&gt;
			&lt;li&gt;filter the file to be just a list of JIRA IDs 
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# on OS X, just use pbpaste as the first stage of &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; pipeline instead of saving to a temp file
$ cat CHANGES_1.2.0_raw.txt | grep -o -E &lt;span class=&quot;code-quote&quot;&gt;&quot;\[HBASE-[0-9]*\]&quot;&lt;/span&gt; | grep -o -E &lt;span class=&quot;code-quote&quot;&gt;&quot;HBASE-[0-9]*&quot;&lt;/span&gt; | sort -u &amp;gt; CHANGES_1.2.0_jira.txt
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
		&lt;/ol&gt;
		&lt;/li&gt;
		&lt;li&gt;get the set of JIRAs that are marked in git
		&lt;ol&gt;
			&lt;li&gt;find the commit where your release line branched off from the previous release. 
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ git merge-base 1.1.0 branch-1.2
8166142b2e815fc6ab30c14a5a546cd242bf3b4c
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
			&lt;li&gt;get the set of all jiras committed between that branch point and the previous release. 
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ git log --oneline 8166142...1.1.0 | grep -o -E &lt;span class=&quot;code-quote&quot;&gt;&quot; HBASE-[0-9]* &quot;&lt;/span&gt; | awk &apos;{$1=$1;print}&apos; | sort -u &amp;gt; in_1.1.0.txt
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
			&lt;li&gt;get the set of all jiras committed between that branch point and the current release.
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ git log --oneline 8166142...branch-1.2 | grep -o -E &lt;span class=&quot;code-quote&quot;&gt;&quot; HBASE-[0-9]* &quot;&lt;/span&gt; | awk &apos;{$1=$1;print}&apos; | sort -u &amp;gt; in_1.2.0.txt
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
			&lt;li&gt;check the set of jiras that appear in the previous release after the branch but not in the current release.
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ comm -2 -3 in_1.1.0.txt in_1.2.0.txt
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;ul&gt;
				&lt;li&gt;these can be release specific changes (i.e. disabling DLR in the 1.1.0 release)&lt;/li&gt;
				&lt;li&gt;they can be changes that were reverted during the prior release&apos;s RC process that have not been reapplied&lt;/li&gt;
				&lt;li&gt;they can be changes that were mistakenly only applied in the branch for the previous release and need to be cherry picked&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;find the jiras for the current release that were not applied to the previous release after branching. this should be all the jiras that are in git for the current release.
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ comm -1 -3 in_1.1.0.txt in_1.2.0.txt  &amp;gt; CHANGES_1.2.0_git.txt 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
		&lt;/ol&gt;
		&lt;/li&gt;
		&lt;li&gt;go through JIRAs that appear in the JIRA tracker but not in git 
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ comm -1 -3 CHANGES_1.2.0_git.txt CHANGES_1.2.0_jira.txt
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
		&lt;ul&gt;
			&lt;li&gt;the above process can give you false positive here, e.g. if a commit was in the prior release but then reverted and reapplied in your release&#8212;be sure to check the git history&lt;/li&gt;
			&lt;li&gt;sometimes these are issue that didn&apos;t get properly cleaned up when things made it into the previous minor/major release during the RC process&lt;/li&gt;
			&lt;li&gt;sometimes they&apos;re task or umbrella jiras that don&apos;t have a representation in git&lt;/li&gt;
			&lt;li&gt;sometimes they&apos;re documentation jiras that shouldn&apos;t have been marked for the release (doc tickets always are resolved against the major version that was in the &lt;em&gt;master&lt;/em&gt; git branch at the time)&lt;/li&gt;
			&lt;li&gt;sometimes they&apos;re improperly closed tickets (e.g. invalid, duplicate, and wontfix tickets should not have a fix version)&lt;/li&gt;
			&lt;li&gt;sometimes they were improperly labeled on commit and weren&apos;t reverted and reapplied with the correct commit message.&lt;/li&gt;
			&lt;li&gt;occasionally they&apos;re changes that should be in your branch but were missed. in this case reopen the ticket and cherry-pick to your branch&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;go through JIRAs that appear in git but not in JIRA 
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ comm -2 -3 CHANGES_1.2.0_git.txt CHANGES_1.2.0_jira.txt
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
		&lt;ul&gt;
			&lt;li&gt;sometimes these were improperly labeled on commit. ideally they will have been reverted and reapplied with the correct commit message.&lt;/li&gt;
			&lt;li&gt;sometimes they weren&apos;t marked correctly in jira because they were pushed out of the previous minor/major release during the RC process.&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ol&gt;
	&lt;/li&gt;
	&lt;li&gt;remove entries in CHANGES.txt unrelated to your current release
	&lt;ul&gt;
		&lt;li&gt;for a PATCH release, you should be starting from a file that only contains related changes&lt;/li&gt;
		&lt;li&gt;for a MINOR release, you should reset the file so that you will only have changes for prior minor releases in the same major release (e.g. for the 1.2.0 release CHANGES.txt will start by copying the notes from 1.0.0 and 1.1.0)&lt;/li&gt;
		&lt;li&gt;for a MAJOR release, you should reset the file so that you will only have changes for prior  major releases (e.g. for the 2.0.0 release CHANGES.txt will start by copying the notes from 1.0.0)&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;generate a post-clean-up set of text release notes from JIRA and add it to the top of the CHANGES.txt file with the current date.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="14614061" author="busbey" created="Sat, 4 Jul 2015 21:30:19 +0000"  >&lt;p&gt;this pipeline does a better job of avoiding false positives for jiras that show up in git log messages:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ git log --oneline 8166142...branch-1.2 | grep -o -E &apos;^[a-z0-9]{7} HBASE-[0-9]* &apos; | grep -o -E &apos;HBASE-[0-9]*&apos; | sort -u &amp;gt; in_1.2.0.txt
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14614065" author="apurtell" created="Sat, 4 Jul 2015 21:51:55 +0000"  >&lt;p&gt;Thanks for documenting this black art &lt;/p&gt;</comment>
                            <comment id="14614153" author="stack" created="Sun, 5 Jul 2015 06:21:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; Good read. You shoving this in RM section of refguide? Very nice addition.&lt;/p&gt;</comment>
                            <comment id="14615908" author="enis" created="Mon, 6 Jul 2015 23:44:58 +0000"  >&lt;p&gt;i think the discrepancy is due to the fact that we mark all active branches that the fix went in, for example, today we are marking an issue with 1.2.0, 1.3.0 and 2.0.0 if it was committed to branches branch-1.2, branch-1 and master. By the time, 1.3.0 release comes up, the jiras with fixVersion = 1.3.0 will include 1.3 exclusive patches + patches in 1.2.0 and earlier.  &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; I have noticed that you have been unmarking some of the fixVersions in jira (for example &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13895&quot; title=&quot;DATALOSS: Region assigned before WAL replay when abort&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13895&quot;&gt;&lt;del&gt;HBASE-13895&lt;/del&gt;&lt;/a&gt;). Is this for clean up for CHANGES.txt for 1.3.0 or some general cleanup? I am asking to understand whether we need to refine the process. &lt;/p&gt;

&lt;p&gt;At the time of the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13895&quot; title=&quot;DATALOSS: Region assigned before WAL replay when abort&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13895&quot;&gt;&lt;del&gt;HBASE-13895&lt;/del&gt;&lt;/a&gt; commit, there was already branch-1, branch-1.1, branch-1.2 and master branches. Thus, the jira used to bear &lt;tt&gt;2.0.0, 1.2.0, 1.1.2, 1.3.0&lt;/tt&gt;. Your process above (correct me if I am wrong) removes 1.3.0 from fixVersions since 1.2.0 is the first release that will have that patch? How do we differentiate the fact that the issue has actually been committed after the branch-1.2 is forked, and committed to both branch-1.2 and branch-1? &lt;/p&gt;</comment>
                            <comment id="14616000" author="busbey" created="Tue, 7 Jul 2015 00:53:06 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Sean Busbey I have noticed that you have been unmarking some of the fixVersions in jira (for example &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13895&quot; title=&quot;DATALOSS: Region assigned before WAL replay when abort&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13895&quot;&gt;&lt;del&gt;HBASE-13895&lt;/del&gt;&lt;/a&gt;). Is this for clean up for CHANGES.txt for 1.3.0 or some general cleanup? I am asking to understand whether we need to refine the process.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, I was proactively trying to make the 1.3.0 RM&apos;s job easier.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;At the time of the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13895&quot; title=&quot;DATALOSS: Region assigned before WAL replay when abort&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13895&quot;&gt;&lt;del&gt;HBASE-13895&lt;/del&gt;&lt;/a&gt; commit, there was already branch-1, branch-1.1, branch-1.2 and master branches. Thus, the jira used to bear 2.0.0, 1.2.0, 1.1.2, 1.3.0. Your process above (correct me if I am wrong) removes 1.3.0 from fixVersions since 1.2.0 is the first release that will have that patch? How do we differentiate the fact that the issue has actually been committed after the branch-1.2 is forked, and committed to both branch-1.2 and branch-1?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Correct, it removes 1.3.0 because a previous minor release (1.2.0) included it. It doesn&apos;t remove 2.0.0 because the fix was not in the prior major release (1.0.0), so there will likely be future minor releases on the previous major release that are not in the initial 2.0.0 release. For example, say we release 1.3.0 in August and 1.4.0 in November, then 2.0.0 in January. When 1.5.0 comes out in February, it will contain fixes not present in the 2.0.0 release, so we need a way to know that fixes are in 2.0.0 just as we needed a way to know when a fix for e.g. 1.1.1 is also in 1.2.0.&lt;/p&gt;

&lt;p&gt;As for differentiating between things committed after branch-1.2 is forked, why would we need to know something went into both branch-1 and branch-1.2? It&apos;s the norm. It&apos;s only rare that something goes into the minor release branch and not into the &quot;future dev&quot; branch (e.g. the DLR-opt-in for 1.1 listed above). In the rare case we call out in the jira that it&apos;s only for e.g. 1.1 and not future releases. If it was a mistake that missed the future dev branch, then the process above will also catch it without needing additional markers in jira.&lt;/p&gt;

&lt;p&gt;Put another way, what&apos;s the value to me as a consumer of the 1.2 CHANGES.txt for including just those fixes that are in 1.1.0 from after the branch point? The vast majority of other changes in 1.1.0 form before hte branch point are also in the code I&apos;m getting. Given the above process for making CHANGES.txt, those changes from post-branch will be included in the section explaining what changed in the prior minor release.&lt;/p&gt;</comment>
                            <comment id="14616018" author="enis" created="Tue, 7 Jul 2015 01:10:37 +0000"  >&lt;blockquote&gt;&lt;p&gt;Correct, it removes 1.3.0 because a previous minor release (1.2.0) included it. It doesn&apos;t remove 2.0.0 because the fix was not in the prior major release (1.0.0), so there will likely be future minor releases on the previous major release that are not in the initial 2.0.0 release. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think I get your point, but not sure how easily we can follow this practice. It gets complicated for committers to think about what fixVersions to set at the time of the commit. The thing we have where we just mark the next scheduled version from that branch is simple and worked so far. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;As for differentiating between things committed after branch-1.2 is forked, why would we need to know something went into both branch-1 and branch-1.2? It&apos;s the norm.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Put another way, what&apos;s the value to me as a consumer of the 1.2 CHANGES.txt for including just those fixes that are in 1.1.0 from after the branch point? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed that the CHANGES.txt can be filtered out for easy consumption. As a consumer of CHANGES.txt, you may not care about whether the change went in before the fork or after the fork. As a developer / committer though, I prefer to have the fixVersion there just to make sure that all branches are covered at the time of the commit. It is preferable to err on the cautious side. &lt;/p&gt;

&lt;p&gt;Can we do a middle ground where we keep the fixVersions in jira, and filter them out in CHANGES.txt for convenience if not needed? &lt;/p&gt;</comment>
                            <comment id="14617122" author="busbey" created="Tue, 7 Jul 2015 18:15:33 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I think I get your point, but not sure how easily we can follow this practice. It gets complicated for committers to think about what fixVersions to set at the time of the commit. The thing we have where we just mark the next scheduled version from that branch is simple and worked so far.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s fair. I think this is the kind of thing that release managers will have to do, since they know if something actually made it into the release branch. Since it&apos;s one time work on non-patch releases it doesn&apos;t seem so bad.&lt;/p&gt;

&lt;p&gt;I see it the same as how when the RCs get close the RM needs to move out things that aren&apos;t going to make it in (e.g. replacing a 1.2.0 version with 1.2.1 and 1.3.0) or move back in things that got committed between candidates (e.g. by replacing 1.2.1 with 1.2.0).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Can we do a middle ground where we keep the fixVersions in jira, and filter them out in CHANGES.txt for convenience if not needed?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The problem with this is that then the release notes in Jira will be less accurate than the CHANGES.txt file, and I&apos;d very much like to point to the jira data as authoritative.&lt;/p&gt;

&lt;p&gt;What about having the committers continue with their current habit and then leaving it to the release managers to make things consistent around release time?&lt;/p&gt;</comment>
                            <comment id="14621132" author="apurtell" created="Thu, 9 Jul 2015 19:40:53 +0000"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Correct, it removes 1.3.0 because a previous minor release (1.2.0) included it. It doesn&apos;t remove 2.0.0 because the fix was not in the prior major release (1.0.0), so there will likely be future minor releases on the previous major release that are not in the initial 2.0.0 release.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think I get your point, but not sure how easily we can follow this practice. It gets complicated for committers to think about what fixVersions to set at the time of the commit. The thing we have where we just mark the next scheduled version from that branch is simple and worked so far.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think it&apos;s fine for the RM to do this cleanup on the eve of the first release of a new minor version. At such time we start having fixVersions = &lt;/p&gt;
{ 1.3, 1.4, ... }
&lt;p&gt; and it&apos;s time for the first 1.3.0 release, the 1.3 RM can drop all of the 1.4 fix versions where the changes are going out in 1.3. And so on.&lt;br/&gt;
Edit: Likewise, if there&apos;s something going out in 1.3 that doesn&apos;t have that fix version, the RM will need to set it. There&apos;s some homework and burden placed on the RM to be sure. However other alternatives seem less optimal to me.&lt;/p&gt;</comment>
                            <comment id="14621278" author="enis" created="Thu, 9 Jul 2015 21:14:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;What about having the committers continue with their current habit and then leaving it to the release managers to make things consistent around release time?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;There&apos;s some homework and burden placed on the RM to be sure. However other alternatives seem less optimal to me.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sounds reasonable. RM, at the time of the release, should know about the status of branches and jiras for the release anyway, so she can do a better job at this than committers at the commit time. &lt;/p&gt;</comment>
                            <comment id="14628248" author="lhofhansl" created="Wed, 15 Jul 2015 15:39:09 +0000"  >&lt;p&gt;I find this still confusing (or not right). If we do not follow branches in jira some things are getting quite complicated:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;if (say) 1.2.0 was not released, yet, but 1.2 was already branched the committer has to remember that when committing to branch-1 which will be (say) 1.3.0&lt;/li&gt;
	&lt;li&gt;one cannot just copy the (again, say) CHANGES.txt from 1.2.0 (once it&apos;s released) into 1.3.0 and fill in the 1.3.0 changes from jira. If jira is the source of truth that should be possible&lt;/li&gt;
	&lt;li&gt;I&apos;d still want to see 1.2.0 changes, followed by the new 1.3.x changes, no?&lt;/li&gt;
	&lt;li&gt;since we branch 1.2 before 1.2.0 is released (and hence branch-1 becomes 1.3.0) we can simply copy the CHANGES.txt from 1.2.0 and fill in the 1.3.x changes, instead.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So I still find it cleaner to set &quot;Fix Version/s&quot; to all affected branches/tags.&lt;/p&gt;</comment>
                            <comment id="14628399" author="busbey" created="Wed, 15 Jul 2015 17:29:21 +0000"  >&lt;p&gt;We&apos;re saying that the committer does still set the Fix Version/s to all affected branches. It&apos;s the RM who laters things.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;if (say) 1.2.0 was not released, yet, but 1.2 was already branched the committer has to remember that when committing to branch-1 which will be (say) 1.3.0&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes. And they can then set 1.2.0 and 1.3.0 as fix versions.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;one cannot just copy the (again, say) CHANGES.txt from 1.2.0 (once it&apos;s released) into 1.3.0 and fill in the 1.3.0 changes from jira. If jira is the source of truth that should be possible&lt;/li&gt;
	&lt;li&gt;I&apos;d still want to see 1.2.0 changes, followed by the new 1.3.x changes, no?&lt;/li&gt;
	&lt;li&gt;since we branch 1.2 before 1.2.0 is released (and hence branch-1 becomes 1.3.0) we can simply copy the CHANGES.txt from 1.2.0 and fill in the 1.3.x changes, instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;This should be possible starting with 1.3.0. For 1.2.0 I had to go copy the notes from 1.1.0 and 1.0.0 to build the CHANGES.txt file with all minor version information.&lt;/p&gt;

&lt;p&gt;If we left 1.3.0 as a fix version rather than have the RM clean it up as a part of releasing 1.2.0, then we wouldn&apos;t be able to do this iterative building because some of the jiras would be repeated in both the 1.2.0 section and the 1.3.0 section.&lt;/p&gt;</comment>
                            <comment id="15080406" author="hudson" created="Sun, 3 Jan 2016 11:41:18 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2-IT #375 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2-IT/375/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2-IT/375/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14025&quot; title=&quot;Update CHANGES.txt for 1.2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14025&quot;&gt;&lt;del&gt;HBASE-14025&lt;/del&gt;&lt;/a&gt; update CHANGES.txt for the 1.2 RC. (busbey: rev 20c4368065165ad49bdfe8172316e42566a6d6a0)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15080431" author="hudson" created="Sun, 3 Jan 2016 13:32:32 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2 #486 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/486/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/486/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14025&quot; title=&quot;Update CHANGES.txt for 1.2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14025&quot;&gt;&lt;del&gt;HBASE-14025&lt;/del&gt;&lt;/a&gt; update CHANGES.txt for the 1.2 RC. (busbey: rev 20c4368065165ad49bdfe8172316e42566a6d6a0)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15123334" author="hudson" created="Fri, 29 Jan 2016 10:46:10 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2 #524 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/524/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/524/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14025&quot; title=&quot;Update CHANGES.txt for 1.2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14025&quot;&gt;&lt;del&gt;HBASE-14025&lt;/del&gt;&lt;/a&gt; update CHANGES.txt for 1.2 RC1 (busbey: rev 46fc1d876bd604f2f71f8692d79978055a095a7a)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15123376" author="hudson" created="Fri, 29 Jan 2016 11:48:15 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2-IT #414 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2-IT/414/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2-IT/414/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14025&quot; title=&quot;Update CHANGES.txt for 1.2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14025&quot;&gt;&lt;del&gt;HBASE-14025&lt;/del&gt;&lt;/a&gt; update CHANGES.txt for 1.2 RC1 (busbey: rev 46fc1d876bd604f2f71f8692d79978055a095a7a)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15136675" author="hudson" created="Mon, 8 Feb 2016 07:41:27 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2-IT #424 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2-IT/424/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2-IT/424/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14025&quot; title=&quot;Update CHANGES.txt for 1.2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14025&quot;&gt;&lt;del&gt;HBASE-14025&lt;/del&gt;&lt;/a&gt; update CHANGES.txt for 1.2 RC2 (busbey: rev d568db8372a3fbc6b93c5854749c30276ba19ba4)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15136768" author="hudson" created="Mon, 8 Feb 2016 09:59:11 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2 #534 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/534/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/534/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14025&quot; title=&quot;Update CHANGES.txt for 1.2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14025&quot;&gt;&lt;del&gt;HBASE-14025&lt;/del&gt;&lt;/a&gt; update CHANGES.txt for 1.2 RC2 (busbey: rev d568db8372a3fbc6b93c5854749c30276ba19ba4)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15146160" author="hudson" created="Sat, 13 Feb 2016 19:48:13 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2-IT #436 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2-IT/436/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2-IT/436/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14025&quot; title=&quot;Update CHANGES.txt for 1.2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14025&quot;&gt;&lt;del&gt;HBASE-14025&lt;/del&gt;&lt;/a&gt; update CHANGES.txt for 1.2 RC3 (busbey: rev 645eb92987b499016a24ac462353ff3cd2162f69)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15146222" author="hudson" created="Sat, 13 Feb 2016 22:07:53 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.2 #548 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/548/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/548/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14025&quot; title=&quot;Update CHANGES.txt for 1.2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14025&quot;&gt;&lt;del&gt;HBASE-14025&lt;/del&gt;&lt;/a&gt; update CHANGES.txt for 1.2 RC3 (busbey: rev 645eb92987b499016a24ac462353ff3cd2162f69)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15153869" author="hudson" created="Fri, 19 Feb 2016 07:48:14 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2-IT #443 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2-IT/443/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2-IT/443/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14025&quot; title=&quot;Update CHANGES.txt for 1.2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14025&quot;&gt;&lt;del&gt;HBASE-14025&lt;/del&gt;&lt;/a&gt; update CHANGES.txt for 1.2 RC4 (busbey: rev 25b281972df2f5b15c426c8963cbf77dd853a5ad)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15154003" author="hudson" created="Fri, 19 Feb 2016 09:48:43 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2 #558 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/558/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/558/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14025&quot; title=&quot;Update CHANGES.txt for 1.2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14025&quot;&gt;&lt;del&gt;HBASE-14025&lt;/del&gt;&lt;/a&gt; update CHANGES.txt for 1.2 RC4 (busbey: rev 25b281972df2f5b15c426c8963cbf77dd853a5ad)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15337124" author="mantonov" created="Fri, 17 Jun 2016 22:28:22 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; I&apos;ve been walking through the guide above looking for inspiration, and just wanted to confirm or disprove my understandings.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if we&apos;re considering the Jira to be a source of truth here, then &quot;project = HBase AND fixVersion = 1.3.0 AND fixVersion not in (1.2.0, 1.2.1, 1.2.2) AND status in (Resolved, Closed) ORDER BY issuetype DESC, updated ASC&quot; jira filter should basically give the list of jiras (if we assumed that fixVersion are set accurately), if the jira fixVersion was always accurate?&lt;/li&gt;
	&lt;li&gt;in the comment above:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;find the commit where your release line branched off from the previous release.&lt;br/&gt;
$ git merge-base 1.1.0 branch-1.2&lt;br/&gt;
8166142b2e815fc6ab30c14a5a546cd242bf3b4c&quot;&lt;/p&gt;

&lt;p&gt;But branch-1.3 was cut off branch-1 with whatever was there in the moment, so I don&apos;t see how it applies?&lt;/p&gt;</comment>
                            <comment id="15337460" author="busbey" created="Sat, 18 Jun 2016 02:54:52 +0000"  >&lt;blockquote&gt;
&lt;p&gt;if we&apos;re considering the Jira to be a source of truth here, then &quot;project = HBase AND fixVersion = 1.3.0 AND fixVersion not in (1.2.0, 1.2.1, 1.2.2) AND status in (Resolved, Closed) ORDER BY issuetype DESC, updated ASC&quot; jira filter should basically give the list of jiras (if we assumed that fixVersion are set accurately), if the jira fixVersion was always accurate?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I would just look at those jiras with fixVersion 1.3.0 and fixVersion not in 1.2.0, 1.1.0, 1.0.0. After the .0 release, it&apos;s hard to know how maintenance releases in the prior minor release line marry up with the new minor release line.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;find the commit where your release line branched off from the previous release.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;$ git merge-base 1.1.0 branch-1.2&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;8166142b2e815fc6ab30c14a5a546cd242bf3b4c&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;But branch-1.3 was cut off branch-1 with whatever was there in the moment, so I don&apos;t see how it applies?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;right, but the prior minor release lines were also cut off of it. you can find where the branch for the prior minor release left branch-1 using merge-base, which then lets you check the commits that continued on branch-1 afterwards to see which ones also made it into the prior minor release.&lt;/p&gt;

&lt;p&gt;That is, after the branch that led to 1.2.0 came off of branch-1 some set of JIRAS still had commits on both branches. the ones that happened on both you need not include in the CHANGES file for 1.3.0 because they will already be listed under 1.2.0.&lt;/p&gt;

&lt;p&gt;does that make sense? If not, could make a diagram maybe?&lt;/p&gt;</comment>
                            <comment id="15338352" author="mantonov" created="Sun, 19 Jun 2016 04:06:31 +0000"  >&lt;p&gt;Yep, it does - thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;. So far I&apos;m working with merge-base between rel/1.2.1 (should be probably 1.2.0?) and branch-1.3.&lt;/p&gt;</comment>
                            <comment id="15339664" author="busbey" created="Mon, 20 Jun 2016 15:05:30 +0000"  >&lt;p&gt;yeah I&apos;d do 1.2.0, but they should both end up in the same place unless something unusual happened with the 1.2.1 release.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 4 Jul 2015 19:36:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            25 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2gunz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>