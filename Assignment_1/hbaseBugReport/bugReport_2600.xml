<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:03:12 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2600/HBASE-2600.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2600] Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2600</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation.   &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region.  If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12465201">HBASE-2600</key>
            <summary>Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Sat, 22 May 2010 23:58:43 +0000</created>
                <updated>Fri, 21 Jun 2013 20:41:03 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>16</watches>
                                                                <comments>
                            <comment id="13092207" author="lhofhansl" created="Sat, 27 Aug 2011 06:32:51 +0000"  >&lt;p&gt;I ran into this partially when I worked on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4071&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;HBASE-4071&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One thing I noticed is that getRowOrBefore(...) is actually exposed via HTableInterface. Do we really want this? If we ever want to get rid of this, should we at least deprecate this method in HTableInterface now before more - if any - folks start using it?&lt;/p&gt;

&lt;p&gt;Also a question regarding &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;HBASE-2531&lt;/a&gt;, can we rely on the fact all table (except - ROOT - and .META.) have the encodedRegionName? Looking at the patch attached there it seems that regions of old tables (and ROOT and META - but that&apos;s ok) could still have the old names.&lt;/p&gt;</comment>
                            <comment id="13092537" author="lhofhansl" created="Sun, 28 Aug 2011 19:41:21 +0000"  >&lt;p&gt;What I meant to say with the previous comment:&lt;br/&gt;
The comment of Store.getRowKeyAtOrBefore lists a bunch of requirements that are true for the meta tables, but might not hold in general. Somebody using HTableInterface will probably not understand that, and hence it might be better to make this method available publicly at all.&lt;/p&gt;

&lt;p&gt;I realize this is not primarily what this issue about, but it would be nice to rid ourselves of getClosestRowBefore altogether. Maybe starting with removing this from the public interface and then fixing this issue.&lt;/p&gt;</comment>
                            <comment id="13093104" author="stack" created="Mon, 29 Aug 2011 19:10:51 +0000"  >&lt;p&gt;+1 on deprecating getRowOrBefore (if we think its on its way out).   And yes, I think this method only &apos;works&apos; going against .META.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also a question regarding &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt;, can we rely on the fact all table (except - ROOT - and .META.) have the encodedRegionName?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes. Only regions created by an hbase older than 0.90 AND that have not been compacted will have old-style names.&lt;/p&gt;

</comment>
                            <comment id="13102447" author="lhofhansl" created="Mon, 12 Sep 2011 06:00:24 +0000"  >&lt;p&gt;One thing that is harder now is how to deal with tables with only one region. The endKey will be &apos;&apos;, and hence it sort before all keys we might be looking for. There is no key that reliably sorts after all other keys.&lt;br/&gt;
So if a region cannot be found for a key there has to be a 2nd lookup to check if a row with &apos;&apos; endKey exists (and if we ever split .META. the regionName with the &apos;&apos; endKey might even be served by a different region server).&lt;/p&gt;</comment>
                            <comment id="13102774" author="stack" created="Mon, 12 Sep 2011 16:27:37 +0000"  >&lt;p&gt;IIRC, we do special casing already for &apos;&apos; start/end key.  Your concern seems like a valid one but I&apos;d say that when comes implementation time, we can deal in a line or two of checks in a strategic location.&lt;/p&gt;</comment>
                            <comment id="13102813" author="lhofhansl" created="Mon, 12 Sep 2011 17:19:39 +0000"  >&lt;p&gt;I have something basic working (i.e. it does the conversion on startup and I can still do scans and gets on my various existing tables - unless the table has one region that is). The change is in no condition to be attached here, though.&lt;/p&gt;

&lt;p&gt;The startup conversion is idempotent (if the master dies during the conversion it can just be restarted), and in the end it writes a marker into the ROOT table.&lt;/p&gt;

&lt;p&gt;To solve the problem cited above I&apos;ll just add a 2nd scan for now.&lt;/p&gt;</comment>
                            <comment id="13102827" author="tlipcon" created="Mon, 12 Sep 2011 17:34:05 +0000"  >&lt;p&gt;It&apos;s a hack, but we could change the format of the rows in META to be &lt;tt&gt;&amp;lt;table_name&amp;gt;\x00&amp;lt;region end row&amp;gt;&lt;/tt&gt;, and then have the special value &lt;tt&gt;&amp;lt;table_name&amp;gt;\x01&lt;/tt&gt; be used for the last region? Or something of that sort.&lt;/p&gt;</comment>
                            <comment id="13102841" author="stack" created="Mon, 12 Sep 2011 17:44:31 +0000"  >&lt;p&gt;More hacks.  I think table name should be fixed size.   Hash or code or something.  Would make the compare less of a mess.&lt;/p&gt;</comment>
                            <comment id="13102848" author="tlipcon" created="Mon, 12 Sep 2011 17:54:10 +0000"  >&lt;p&gt;Do we need fixed size, or just a reasonable escaping scheme? Maybe we can use something like consistent overhead byte stuffing: &lt;a href=&quot;http://en.wikipedia.org/wiki/Consistent_Overhead_Byte_Stuffing&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Consistent_Overhead_Byte_Stuffing&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13102855" author="lhofhansl" created="Mon, 12 Sep 2011 17:58:09 +0000"  >&lt;p&gt;I was thinking along that line too (I thought about replacing the first , with a ; in the key for the last region); then I convinced myself that it wouldn&apos;t work.&lt;/p&gt;

&lt;p&gt;But I think you are right, it would work.&lt;/p&gt;</comment>
                            <comment id="13102856" author="lhofhansl" created="Mon, 12 Sep 2011 18:01:43 +0000"  >&lt;p&gt;Ah... Comment crossing again.&lt;/p&gt;

&lt;p&gt;Stack and I had been discussing some kind of escaping, because the Meta comparator is the only reason why we pass around comparators everywhere.&lt;br/&gt;
We&apos;d have to guarantee that the escaped byte sequences will still sorts correctly.&lt;/p&gt;</comment>
                            <comment id="13102868" author="tlipcon" created="Mon, 12 Sep 2011 18:08:48 +0000"  >&lt;p&gt;Yea, I don&apos;t think COBS is even necessary... this seems like it would work:&lt;/p&gt;

&lt;p&gt;Region encoding is:&lt;br/&gt;
  &amp;lt;table_name&amp;gt;\x00&amp;lt;end key&amp;gt;&lt;br/&gt;
The last region of a table is:&lt;br/&gt;
  &amp;lt;table_name&amp;gt;\x01&lt;/p&gt;

&lt;p&gt;If a table name or key has a \x00, \x01, or \x02 in it, it is represented as \x02\x00, \x0201, \x0202&lt;/p&gt;

&lt;p&gt;This should preserve ordering, right?&lt;br/&gt;
foo\x00bar &amp;lt; foo\x01  and foo\x02\x00bar &amp;lt; foo\x02\x01&lt;br/&gt;
foo\x02bar &amp;gt; foo\x02  and foo\x02\x02bar &amp;gt; foo\x02\x02&lt;br/&gt;
foo\x00bar &amp;lt; foo\x03  and foo\x02\x00bar &amp;lt; foo\x03&lt;/p&gt;</comment>
                            <comment id="13102929" author="jpallas" created="Mon, 12 Sep 2011 19:14:21 +0000"  >&lt;p&gt;How would a table name have 0x00 in it?  HTableDescriptor says it will throw IllegalArgumentException &quot;if passed a table name that is made of other than &apos;word&apos; characters or underscores: i.e. &lt;span class=&quot;error&quot;&gt;&amp;#91;a-zA-Z_0-9&amp;#93;&lt;/span&gt;.&quot;&lt;/p&gt;</comment>
                            <comment id="13102952" author="tlipcon" created="Mon, 12 Sep 2011 19:30:39 +0000"  >&lt;p&gt;Oh, I forgot that we restrict table names...&lt;/p&gt;

&lt;p&gt;In that case we could just prefix all row keys with \x00, except for the special &quot;end of region&quot; which would be \x01?&lt;/p&gt;</comment>
                            <comment id="13103374" author="lhofhansl" created="Tue, 13 Sep 2011 05:49:14 +0000"  >&lt;p&gt;We can probably leave the format closer to what it is now by keeping , as separator (instead of 0x00), and using some other character - maybe ; - for the last region (neither , nor ; are allowed in table names). Still need to fix up MetaKeyComparator in either case.&lt;/p&gt;

&lt;p&gt;This is not for 0.92.&lt;/p&gt;</comment>
                            <comment id="13113178" author="lhofhansl" created="Fri, 23 Sep 2011 06:10:35 +0000"  >&lt;p&gt;This also has implication for the asynchhbase. Just looked through the code. The RegionInfo there only stores the stopKey because the startKey is implicit in the name. That will no longer be the case.&lt;/p&gt;</comment>
                            <comment id="13144394" author="posix4e" created="Fri, 4 Nov 2011 22:05:28 +0000"  >&lt;p&gt;So I think the issue with ; is that it comes after &lt;span class=&quot;error&quot;&gt;&amp;#91;0-9&amp;#93;&lt;/span&gt;. What about using ! or something like that?&lt;/p&gt;</comment>
                            <comment id="13144439" author="lhofhansl" created="Fri, 4 Nov 2011 23:09:43 +0000"  >&lt;p&gt;I think it does not matter as long as it comes after &apos;,&apos;.&lt;br/&gt;
The current format is: tableName&apos;,&apos;..., in order to enforce that the empty region is at the end, we can have the that entry have the forma: tableName&apos;;&apos;... that way we ensure it is after all other key for that table.&lt;/p&gt;</comment>
                            <comment id="13144441" author="posix4e" created="Fri, 4 Nov 2011 23:13:04 +0000"  >&lt;p&gt;consider what would happen if you had two tables, one named foo and one named foo1&lt;/p&gt;

&lt;p&gt;Wouldn&apos;t you have a row order like&lt;/p&gt;

&lt;p&gt;foo,A&lt;br/&gt;
foo,B&lt;br/&gt;
foo,C&lt;br/&gt;
foo1,A &amp;lt;- notice 1 comes before ; in ascii&lt;br/&gt;
foo1,B&lt;br/&gt;
foo1,C&lt;br/&gt;
foo;,&lt;br/&gt;
foo1;, &lt;/p&gt;</comment>
                            <comment id="13144447" author="lhofhansl" created="Fri, 4 Nov 2011 23:18:30 +0000"  >&lt;p&gt;True. Could use &apos;-&apos; or &apos;/&apos; then. &apos;!&apos; is before &apos;,&apos;, so that would not work.&lt;br/&gt;
Maybe Todd&apos;s suggestion above is best then \x00 for all regions but the last one, and \x01 for the last one.&lt;/p&gt;</comment>
                            <comment id="13144460" author="yuzhihong@gmail.com" created="Fri, 4 Nov 2011 23:46:25 +0000"  >&lt;p&gt;&apos;-&apos; or &apos;/&apos; makes row key human-friendly and easier to enter by users.&lt;/p&gt;</comment>
                            <comment id="13144464" author="posix4e" created="Fri, 4 Nov 2011 23:54:42 +0000"  >&lt;p&gt;Are they valid tableNames?&lt;/p&gt;</comment>
                            <comment id="13144466" author="posix4e" created="Sat, 5 Nov 2011 00:00:40 +0000"  >&lt;p&gt;Just as a heads up I am very close on this patch. It was a larger change than I wanted but it touches a bunch of places.&lt;/p&gt;</comment>
                            <comment id="13144471" author="yuzhihong@gmail.com" created="Sat, 5 Nov 2011 00:06:32 +0000"  >&lt;p&gt;@Alex:&lt;br/&gt;
Cannot wait to see your work !&lt;/p&gt;

&lt;p&gt;Friendly reminder: .META. table conversion and its unit tests are included, I guess.&lt;/p&gt;</comment>
                            <comment id="13144472" author="posix4e" created="Sat, 5 Nov 2011 00:09:24 +0000"  >&lt;p&gt;Indeed. &lt;/p&gt;</comment>
                            <comment id="13144475" author="lhofhansl" created="Sat, 5 Nov 2011 00:15:56 +0000"  >&lt;p&gt;@Alex, awesome.&lt;/p&gt;</comment>
                            <comment id="13159612" author="jiraposter@reviews.apache.org" created="Tue, 29 Nov 2011 22:59:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2965/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2965/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-11-29 22:58:47.832063)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary (updated)&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;The issue is we have to have a custom compareter for metakey/rootkey scanning to work. One of the reasons why this is required is that the tablenames are currently lexically sorted.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 0c1fa3f &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2965/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2965/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13159615" author="jiraposter@reviews.apache.org" created="Tue, 29 Nov 2011 23:01:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2968/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2968/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug hbase-2600.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/hbase-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/hbase-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java d22f50a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 0c1fa3f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/CatalogTracker.java 1c49dc5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java aa8512b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 6af1f82 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 4135e55 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java 08b7de3 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/main/resources/hbase-default.xml 7059c60 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 66d808f &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java 7af4db4 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 940d726 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassLoading.java b579b29 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 49bfc5a &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 477e772 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java 24903f3 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java 4a8bb69 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java 60e0e41 &lt;br/&gt;
  src/test/ruby/hbase/admin_test.rb 0c2672b &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2968/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2968/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13159616" author="jiraposter@reviews.apache.org" created="Tue, 29 Nov 2011 23:01:41 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2968/#review3568&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2968/#review3568&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2968/#comment7985&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2968/#comment7985&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Please ignore me.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Alex&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-29 23:00:08, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2968/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2968/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-29 23:00:08)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug hbase-2600.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/hbase-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/hbase-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java d22f50a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 0c1fa3f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/CatalogTracker.java 1c49dc5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java aa8512b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 6af1f82 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 4135e55 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java 08b7de3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 7059c60 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 66d808f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java 7af4db4 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 940d726 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassLoading.java b579b29 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 49bfc5a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 477e772 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java 24903f3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java 4a8bb69 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java 60e0e41 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/ruby/hbase/admin_test.rb 0c2672b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2968/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2968/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13166465" author="jiraposter@reviews.apache.org" created="Fri, 9 Dec 2011 19:16:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2965/#review3794&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2965/#review3794&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;This patch doesn&apos;t seem to be coherent.  It seems to be a mix of things Alex.  Good on you.&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2965/#comment8601&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2965/#comment8601&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is odd.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2965/#comment8600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2965/#comment8600&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This should do Bytes.toBytes() and pass the String version (else you are susceptible to the machines&apos; locale &amp;#8211; toBytes does UTF-8 all the time).&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2965/#comment8602&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2965/#comment8602&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Not sure I grok this change.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2965/#comment8603&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2965/#comment8603&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is this change related to this patch?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2965/#comment8604&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2965/#comment8604&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should change the javadoc?  Can we not get the table name any more once this change goes in?  Get the table name from HRI I mean?  We&apos;d have to do look up into a Map of UUID to tablename?&lt;/p&gt;

&lt;p&gt;    Yeah, what is a tableNameUUID?  Its just a UUID?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-29 22:58:47, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2965/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2965/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-29 22:58:47)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The issue is we have to have a custom compareter for metakey/rootkey scanning to work. One of the reasons why this is required is that the tablenames are currently lexically sorted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 0c1fa3f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2965/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2965/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13167795" author="jiraposter@reviews.apache.org" created="Mon, 12 Dec 2011 20:51:30 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-12-09 19:15:28, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; This patch doesn&apos;t seem to be coherent.  It seems to be a mix of things Alex.  Good on you.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Correct, it was discarded and I reposted a different review. But your comments seem reasonable. Can you move them to the active review?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Alex&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2965/#review3794&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2965/#review3794&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-29 22:58:47, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2965/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2965/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-29 22:58:47)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The issue is we have to have a custom compareter for metakey/rootkey scanning to work. One of the reasons why this is required is that the tablenames are currently lexically sorted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 0c1fa3f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2965/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2965/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13168724" author="jiraposter@reviews.apache.org" created="Tue, 13 Dec 2011 21:11:31 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;PART 1 of hbase-4616&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java 1cf58a9 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 6bff130 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 6f19d21 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 4135e55 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6fca020 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 95712dd &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java a092cf0 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java 1997abd &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3186/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13168727" author="jiraposter@reviews.apache.org" created="Tue, 13 Dec 2011 21:13:30 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-12-13 21:12:33.352768)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;PART 1 of hbase-4616&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java 1cf58a9 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 6bff130 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 6f19d21 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 4135e55 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6fca020 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 95712dd &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java a092cf0 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java 1997abd &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3186/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13168731" author="posix4e" created="Tue, 13 Dec 2011 21:14:41 +0000"  >&lt;p&gt;I updated the review for this change, although this should still be considered a talking point we still need to figure out migrations and a couple of tests. I am just curious if the approach makes sense.&lt;/p&gt;</comment>
                            <comment id="13168768" author="posix4e" created="Tue, 13 Dec 2011 21:58:46 +0000"  >&lt;p&gt;So we have a couple of choices after a split. Currently daughter regions can come after the parent, while splitting, because of the ts when the split happened. I could just always grab 2 and use the second if the first one is offline. Or we could call next again. Or we could change it so the daughter always comes before the parent.&lt;/p&gt;</comment>
                            <comment id="13168778" author="stack" created="Tue, 13 Dec 2011 22:12:56 +0000"  >&lt;p&gt;Seems like daughters should come before parent if we are to be consistent.&lt;/p&gt;

&lt;p&gt;Could change how we timestamp to be max - current time and as we do now, ensure the timestamp is always less (in this case) than parent &amp;#8211; currently we always ensure daughter is &amp;gt; parent.&lt;/p&gt;</comment>
                            <comment id="13168780" author="stack" created="Tue, 13 Dec 2011 22:14:26 +0000"  >&lt;p&gt;On other hand, why not have daughters go in after the offlined parent?   We&apos;d just call next again as you say above?&lt;/p&gt;</comment>
                            <comment id="13168799" author="jiraposter@reviews.apache.org" created="Tue, 13 Dec 2011 22:37:30 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3186/#review3887&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#review3887&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;I thought the change would be bigger than this.  Does it work?&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8723&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8723&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should this be &apos;starts with&apos;?  Are 0x01 and 0x02 good characters to have here?   They are unprintable.  Would it be better to have printables?  More friendly to, you know, those humans that have to look at this stuff.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8724&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8724&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whats this define for?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8722&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8722&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why this stray &apos;;&apos;?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8725&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8725&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This define name is hard to grok too&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8726&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8726&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whats up w/ your formatting here?  Here and a few lines down for the @return?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8727&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8727&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    A bit of a comment here on why this math would help the reader.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8728&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8728&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can you not just put DELIMITER here?  Ditto for the puts above?  Do you have to put it into oneByte first?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8729&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8729&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Would it be error if a null id?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8730&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8730&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    method names do not begin with capital letters.&lt;/p&gt;

&lt;p&gt;    Line is too long&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8731&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Formatting is off in this method?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8732&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8732&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Will this always give same name?  Doesn&apos;t uuid have time and machine name inputs?&lt;/p&gt;

&lt;p&gt;    Does this belong in here anyways?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8734&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8734&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    line too long&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8735&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8735&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Would suggest you not change the formatting already in place; blend in instead (lines too long anyway)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8737&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8737&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Needs class comment.&lt;/p&gt;

&lt;p&gt;    What is this class replacing?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8738&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8738&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    public methods need javadoc?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8739&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8739&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Do we need zeros?&lt;/p&gt;

&lt;p&gt;    Is this tablename its uuid?&lt;/p&gt;

&lt;p&gt;    Maybe we can&apos;t do uuid if it has host and time factors?  Maybe need to sha1/md5 it?  Something that will always give us same answer regardless of when we hash or where?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-12-13 21:12:33, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:12:33)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;PART 1 of hbase-4616&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 1cf58a9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 6bff130 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 6f19d21 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 4135e55 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6fca020 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 95712dd &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java a092cf0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java 1997abd &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3186/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13168808" author="jiraposter@reviews.apache.org" created="Tue, 13 Dec 2011 22:45:30 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I thought the change would be bigger than this.  Does it work?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Mostly, we still need the migration to work and a small change around the questions still in the jira. Also it is dependent on the two other reviews I filed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 142&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line142&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line142&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should this be &apos;starts with&apos;?  Are 0x01 and 0x02 good characters to have here?   They are unprintable.  Would it be better to have printables?  More friendly to, you know, those humans that have to look at this stuff.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It should say, the tablename encoded in the region ends with 0x01, but the last region ends with 0x02. I am down with changing it to anything, it&apos;s super easy now that we uuid the tablename.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Alex&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3186/#review3887&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#review3887&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-12-13 21:12:33, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:12:33)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;PART 1 of hbase-4616&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 1cf58a9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 6bff130 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 6f19d21 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 4135e55 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6fca020 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 95712dd &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java a092cf0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java 1997abd &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3186/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13168835" author="jiraposter@reviews.apache.org" created="Tue, 13 Dec 2011 23:12:30 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3186/#review3893&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#review3893&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8759&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8759&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    According to &lt;a href=&quot;http://kickjava.com/src/java/util/UUID.java.htm&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://kickjava.com/src/java/util/UUID.java.htm&lt;/a&gt;, UUID.nameUUIDFromBytes() resorts to MD5 MessageDigest.&lt;/p&gt;

&lt;p&gt;    From &lt;a href=&quot;http://www.docjar.com/html/api/java/security/MessageDigest.java.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.docjar.com/html/api/java/security/MessageDigest.java.html&lt;/a&gt;, I don&apos;t see machine name or time being involved.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-12-13 21:12:33, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:12:33)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;PART 1 of hbase-4616&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 1cf58a9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 6bff130 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 6f19d21 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 4135e55 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6fca020 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 95712dd &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java a092cf0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java 1997abd &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3186/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13168843" author="jiraposter@reviews.apache.org" created="Tue, 13 Dec 2011 23:16:30 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I thought the change would be bigger than this.  Does it work?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex Newman wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Mostly, we still need the migration to work and a small change around the questions still in the jira. Also it is dependent on the two other reviews I filed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Expect an update shortly.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 145&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line145&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line145&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Whats this define for?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is the 0x01 at the end of the table name.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 146&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line146&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line146&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Why this stray &apos;;&apos;?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;fixed&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 147&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line147&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line147&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This define name is hard to grok too&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It was actually suggested by ted. I am totally open minded.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 335&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line335&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line335&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Whats up w/ your formatting here?  Here and a few lines down for the @return?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed I think&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 347&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line347&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line347&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     A bit of a comment here on why this math would help the reader.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;done&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 366&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line366&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line366&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can you not just put DELIMITER here?  Ditto for the puts above?  Do you have to put it into oneByte first?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Indeed, as far as I can tell you do. I could probably add it to one of the strings which is appended above if that is preferable. &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 372&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line372&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line372&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Would it be error if a null id?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think code actually does exercise this, but I will double check. It might just be testing.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 470&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line470&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line470&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     method names do not begin with capital letters.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Line is too long&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;woopsie, fixed&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 477&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line477&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64438#file64438line477&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Formatting is off in this method?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;fixed&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/KeyValue.java, line 1907&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64439#file64439line1907&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64439#file64439line1907&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     line too long&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;done&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/KeyValue.java, line 1991&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64439#file64439line1991&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64439#file64439line1991&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Would suggest you not change the formatting already in place; blend in instead (lines too long anyway)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;done. But it&apos;s hard to read &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java, line 47&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64444#file64444line47&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64444#file64444line47&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Do we need zeros?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is this tablename its uuid?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Maybe we can&apos;t do uuid if it has host and time factors?  Maybe need to sha1/md5 it?  Something that will always give us same answer regardless of when we hash or where?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It doesn&apos;t have those factors as far as I can tell. I reflected to the api to hint that it&apos;s a uuid of a tablename&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/KeyValue.java, line 68&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64439#file64439line68&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64439#file64439line68&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Will this always give same name?  Doesn&apos;t uuid have time and machine name inputs?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Does this belong in here anyways?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I ran the test:&lt;/p&gt;


&lt;p&gt;import java.util.List;&lt;br/&gt;
import java.util.UUID;&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Created by IntelliJ IDEA.&lt;/li&gt;
	&lt;li&gt;User: alexnewman&lt;/li&gt;
	&lt;li&gt;Date: 12/13/11&lt;/li&gt;
	&lt;li&gt;Time: 2:55 PM&lt;/li&gt;
	&lt;li&gt;To change this template use File | Settings | File Templates.&lt;br/&gt;
 */&lt;br/&gt;
public class Test {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  public static void main(String args[]) &lt;/p&gt;
{


    String test = &quot;test123&quot;;
    UUID foo = UUID.nameUUIDFromBytes(test.getBytes());
    System.out.println(foo.toString());
  }


&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;on a couple of machines a couple of times and it always made the same string. I think it&apos;s just that a &quot;new UUID&quot; has those components.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 22:35:41, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java, line 30&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64444#file64444line30&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64444#file64444line30&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     public methods need javadoc?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;done.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Alex&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3186/#review3887&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#review3887&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-12-13 21:12:33, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:12:33)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;PART 1 of hbase-4616&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 1cf58a9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 6bff130 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 6f19d21 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 4135e55 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6fca020 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 95712dd &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java a092cf0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java 1997abd &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3186/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13168847" author="jiraposter@reviews.apache.org" created="Tue, 13 Dec 2011 23:22:30 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-12-13 23:12:20, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/KeyValue.java, line 68&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/diff/2/?file=64439#file64439line68&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff/2/?file=64439#file64439line68&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     According to &lt;a href=&quot;http://kickjava.com/src/java/util/UUID.java.htm&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://kickjava.com/src/java/util/UUID.java.htm&lt;/a&gt;, UUID.nameUUIDFromBytes() resorts to MD5 MessageDigest.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     From &lt;a href=&quot;http://www.docjar.com/html/api/java/security/MessageDigest.java.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.docjar.com/html/api/java/security/MessageDigest.java.html&lt;/a&gt;, I don&apos;t see machine name or time being involved.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Ted.  Yeah, saw that when went to read up on it.  Was going to suggest we just md5 it altogether but could go either way (and not important at this stage anyways).&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3186/#review3893&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#review3893&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-12-13 21:12:33, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:12:33)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;PART 1 of hbase-4616&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 1cf58a9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 6bff130 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 6f19d21 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 4135e55 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6fca020 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 95712dd &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java a092cf0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java 1997abd &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3186/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13168850" author="jiraposter@reviews.apache.org" created="Tue, 13 Dec 2011 23:24:30 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3186/#review3895&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#review3895&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3186/#comment8762&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/#comment8762&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yeah, Michael should blame me.&lt;/p&gt;

&lt;p&gt;    This marker marks the last region for the underlying table where endkey is empty, hence the choice of value 0x02.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-12-13 21:12:33, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:12:33)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;PART 1 of hbase-4616&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 1cf58a9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 6bff130 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 6f19d21 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 4135e55 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6fca020 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 95712dd &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java a092cf0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java 1997abd &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3186/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13168875" author="jiraposter@reviews.apache.org" created="Tue, 13 Dec 2011 23:38:31 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-12-13 23:36:54.674313)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;PART 1 of hbase-4616&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java 1cf58a9 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 6bff130 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 6f19d21 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 4135e55 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6fca020 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 95712dd &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java a092cf0 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java 1997abd &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3186/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13168909" author="jiraposter@reviews.apache.org" created="Wed, 14 Dec 2011 00:08:30 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-12-14 00:07:41.488978)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This change handles scanning while splitting better.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;PART 1 of hbase-4616&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java 1cf58a9 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 6bff130 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 6f19d21 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 4135e55 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6fca020 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 95712dd &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java a092cf0 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java 1997abd &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3186/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13172629" author="jiraposter@reviews.apache.org" created="Mon, 19 Dec 2011 21:27:30 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-12-19 21:25:51.965234)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;PART 1 of hbase-4616&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 6bff130 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java d475a1d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java 8cc6444 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 4135e55 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaSearchRow.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java 3c83846 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 9ea19e5 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 9f66880 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfoGetTableName.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMemStore.java a092cf0 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java 1997abd &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3186/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3186/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13184543" author="posix4e" created="Wed, 11 Jan 2012 23:37:53 +0000"  >&lt;p&gt;There&apos;s lots of discussion &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4616&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4616&lt;/a&gt; as well&lt;/p&gt;</comment>
                            <comment id="13184545" author="jiraposter@reviews.apache.org" created="Wed, 11 Jan 2012 23:38:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase and Michael Stack.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java 5120a3c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests started table. &lt;/p&gt;


&lt;p&gt;Tests in error: &lt;br/&gt;
  org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;

&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13184578" author="hadoopqa" created="Thu, 12 Jan 2012 00:17:43 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12510274/0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12510274/0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 20 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -147 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 80 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/736//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/736//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/736//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/736//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/736//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/736//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13187059" author="jiraposter@reviews.apache.org" created="Mon, 16 Jan 2012 18:27:38 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-01-16 18:26:39.949854)&lt;/p&gt;


&lt;p&gt;Review request for hbase and Michael Stack.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Updating the patch so that &lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java&lt;/p&gt;

&lt;p&gt;uses the endkey instead of the startkey as it&apos;s more oftenly populated.&lt;/p&gt;

&lt;p&gt;it fixes the occasional test breakage of org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster#testShutdownSimpleFixup&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java 904e2d2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 8f4f4b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests started table. &lt;/p&gt;


&lt;p&gt;Tests in error: &lt;br/&gt;
  org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;

&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13187093" author="hadoopqa" created="Mon, 16 Jan 2012 19:08:38 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12510727/0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12510727/0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 20 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -145 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 83 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationPeer&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/780//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/780//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/780//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/780//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/780//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/780//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13187095" author="posix4e" created="Mon, 16 Jan 2012 19:11:37 +0000"  >&lt;p&gt;I&apos;ll take a look at these broken  tests. Weird that these didn&apos;t break on my jenkins.&lt;/p&gt;</comment>
                            <comment id="13187309" author="lhofhansl" created="Mon, 16 Jan 2012 23:40:42 +0000"  >&lt;p&gt;These three always fail it seems:&lt;br/&gt;
org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;</comment>
                            <comment id="13187311" author="posix4e" created="Mon, 16 Jan 2012 23:42:55 +0000"  >&lt;p&gt;On all jenkins?&lt;/p&gt;</comment>
                            <comment id="13187320" author="lhofhansl" created="Mon, 16 Jan 2012 23:57:57 +0000"  >&lt;p&gt;Something to do with the Hadoop version on the jenkins machines.&lt;br/&gt;
Ted might know the details.&lt;/p&gt;</comment>
                            <comment id="13187330" author="jiraposter@reviews.apache.org" created="Tue, 17 Jan 2012 00:10:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/#review4418&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#review4418&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;This looks pretty good. Thanks for being persistent and patient Alex!&lt;br/&gt;
Devil is probably still in the details.&lt;/p&gt;

&lt;p&gt;All the getClosestBefore huh hah can now be removed from HTable/Region&lt;span class=&quot;error&quot;&gt;&amp;#91;Server&amp;#93;&lt;/span&gt;/Store, right?&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3466/#comment9924&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#comment9924&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ! and &quot;&lt;br/&gt;
    Although it&apos;s not very intuitive.&lt;br/&gt;
    So the encoded region is now?&lt;br/&gt;
    &amp;lt;tableName&amp;gt;!,&amp;lt;endKey&amp;gt;,...&lt;br/&gt;
    &amp;lt;tableName&amp;gt;&quot;,&amp;lt;endKey&amp;gt;,...&lt;/p&gt;

&lt;p&gt;    Is that simpler than replacing the separator?&lt;br/&gt;
    That could look like this:&lt;br/&gt;
    &amp;lt;tableName&amp;gt;,&amp;lt;endKey&amp;gt;,...&lt;br/&gt;
    &amp;lt;tableName&amp;gt;/&amp;lt;endKey&amp;gt;,...&lt;/p&gt;




&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3466/#comment9923&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#comment9923&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    addEncoding does not use the startKey. Could just remove it from there, and hence from here as well so that this method just needs to know the endKey.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3466/#comment9925&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#comment9925&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I like this. Captures what it is doing without being too complicated.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3466/#comment9926&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#comment9926&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why is this needed?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3466/#comment9927&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#comment9927&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yeah... Be gone!&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2012-01-16 18:26:39, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-01-16 18:26:39)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Michael Stack.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 904e2d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 8f4f4b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Unit tests started table. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tests in error: &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13187333" author="zhihyu@ebaysf.com" created="Tue, 17 Jan 2012 00:23:13 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/MAPREDUCE-3583&quot; title=&quot;ProcfsBasedProcessTree#constructProcessInfo() may throw NumberFormatException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAPREDUCE-3583&quot;&gt;&lt;del&gt;MAPREDUCE-3583&lt;/del&gt;&lt;/a&gt; for background on test failures for:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.hadoop.hbase.mapred.TestTableMapReduce
org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;TestMetaMigrationRemovingHTD needs attention for this feature.&lt;/p&gt;</comment>
                            <comment id="13187358" author="jiraposter@reviews.apache.org" created="Tue, 17 Jan 2012 01:18:38 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/#review4420&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#review4420&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3466/#comment9931&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#comment9931&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Since we don&apos;t support meta splitting this is a lot simpler than the previous code. It would require a decent amount of changes, to be supported without getClosestRowBefore.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Alex&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2012-01-17 01:17:10, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-01-17 01:17:10)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Michael Stack.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 904e2d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 8f4f4b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Unit tests started table. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tests in error: &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13187359" author="jiraposter@reviews.apache.org" created="Tue, 17 Jan 2012 01:18:40 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-01-17 01:17:10.937632)&lt;/p&gt;


&lt;p&gt;Review request for hbase and Michael Stack.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java 904e2d2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 8f4f4b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests started table. &lt;/p&gt;


&lt;p&gt;Tests in error: &lt;br/&gt;
  org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;

&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13187360" author="jiraposter@reviews.apache.org" created="Tue, 17 Jan 2012 01:18:42 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2012-01-17 00:08:40, Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java, line 826&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3466/diff/2/?file=69001#file69001line826&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff/2/?file=69001#file69001line826&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Why is this needed?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex Newman wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ooh, your right, it&apos;s not needed anymore. Removed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Woops wrong reply. Basically this would require a large change and we dont&apos; support splitting meta anyway. I would argue this is much more efficient.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Alex&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/#review4418&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#review4418&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2012-01-17 01:17:10, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-01-17 01:17:10)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Michael Stack.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 904e2d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 8f4f4b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Unit tests started table. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tests in error: &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13187361" author="jiraposter@reviews.apache.org" created="Tue, 17 Jan 2012 01:18:44 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2012-01-17 00:08:40, Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; This looks pretty good. Thanks for being persistent and patient Alex!&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Devil is probably still in the details.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; All the getClosestBefore huh hah can now be removed from HTable/Region&lt;span class=&quot;error&quot;&gt;&amp;#91;Server&amp;#93;&lt;/span&gt;/Store, right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;sounds good. Should I remove it or mark it deprecated?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-01-17 00:08:40, Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 146&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3466/diff/2/?file=68996#file68996line146&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff/2/?file=68996#file68996line146&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     ! and &quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Although it&apos;s not very intuitive.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     So the encoded region is now?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &amp;lt;tableName&amp;gt;!,&amp;lt;endKey&amp;gt;,...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &amp;lt;tableName&amp;gt;&quot;,&amp;lt;endKey&amp;gt;,...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is that simpler than replacing the separator?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     That could look like this:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &amp;lt;tableName&amp;gt;,&amp;lt;endKey&amp;gt;,...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &amp;lt;tableName&amp;gt;/&amp;lt;endKey&amp;gt;,...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I believe it is much simpler than replacing the separator. In addition, i have a feeling that the format of these keys is going to change after I get this through. There is no reason why we can&apos;t move to fixed sized lhs/rhs, but I wanted to keep this patch simple.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-01-17 00:08:40, Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 436&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3466/diff/2/?file=68996#file68996line436&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff/2/?file=68996#file68996line436&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     addEncoding does not use the startKey. Could just remove it from there, and hence from here as well so that this method just needs to know the endKey.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ooh right, sorry. Fixed in patch&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-01-17 00:08:40, Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java, line 826&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3466/diff/2/?file=69001#file69001line826&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff/2/?file=69001#file69001line826&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Why is this needed?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ooh, your right, it&apos;s not needed anymore. Removed.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Alex&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/#review4418&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#review4418&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2012-01-17 01:17:10, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-01-17 01:17:10)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Michael Stack.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 904e2d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 8f4f4b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Unit tests started table. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tests in error: &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13187365" author="jiraposter@reviews.apache.org" created="Tue, 17 Jan 2012 01:30:39 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2012-01-17 00:08:40, Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; This looks pretty good. Thanks for being persistent and patient Alex!&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Devil is probably still in the details.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; All the getClosestBefore huh hah can now be removed from HTable/Region&lt;span class=&quot;error&quot;&gt;&amp;#91;Server&amp;#93;&lt;/span&gt;/Store, right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex Newman wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;sounds good. Should I remove it or mark it deprecated?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In 0.92 I marked HTableInterface.getRowOrBefore as deprecated, so now we can go ahead and kill it, along with the methods in RegionServer, Store, etc.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-01-17 00:08:40, Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 146&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3466/diff/2/?file=68996#file68996line146&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff/2/?file=68996#file68996line146&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     ! and &quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Although it&apos;s not very intuitive.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     So the encoded region is now?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &amp;lt;tableName&amp;gt;!,&amp;lt;endKey&amp;gt;,...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &amp;lt;tableName&amp;gt;&quot;,&amp;lt;endKey&amp;gt;,...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is that simpler than replacing the separator?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     That could look like this:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &amp;lt;tableName&amp;gt;,&amp;lt;endKey&amp;gt;,...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &amp;lt;tableName&amp;gt;/&amp;lt;endKey&amp;gt;,...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex Newman wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I believe it is much simpler than replacing the separator. In addition, i have a feeling that the format of these keys is going to change after I get this through. There is no reason why we can&apos;t move to fixed sized lhs/rhs, but I wanted to keep this patch simple.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s fine then. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-01-17 00:08:40, Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java, line 826&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3466/diff/2/?file=69001#file69001line826&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff/2/?file=69001#file69001line826&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Why is this needed?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex Newman wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ooh, your right, it&apos;s not needed anymore. Removed.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex Newman wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Woops wrong reply. Basically this would require a large change and we dont&apos; support splitting meta anyway. I would argue this is much more efficient.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah.. I hope we never ever have to go back and require META splits.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/#review4418&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#review4418&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2012-01-17 01:17:10, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-01-17 01:17:10)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Michael Stack.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 904e2d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 8f4f4b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Unit tests started table. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tests in error: &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13187389" author="jiraposter@reviews.apache.org" created="Tue, 17 Jan 2012 02:38:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-01-17 02:37:58.199761)&lt;/p&gt;


&lt;p&gt;Review request for hbase and Michael Stack.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Removed the deprecated api&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java 904e2d2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java 8aeccb6 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 8af8c28 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTablePool.java a5c198f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 7a7b896 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java b47423c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java c0a4184 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java 25ae9a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 8f4f4b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker.java 3a26bbb &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 48f6d77 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 79373e1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 50e7fe0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a3850e5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 636e533 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java f93c81d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/ThriftServer.java 3fa5d41 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/Hbase.java 9e31c61 &lt;br/&gt;
  src/main/resources/org/apache/hadoop/hbase/thrift/Hbase.thrift 5821d31 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java ab80020 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java dacb936 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java 33c78ab &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests started table. &lt;/p&gt;


&lt;p&gt;Tests in error: &lt;br/&gt;
  org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;

&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13187390" author="posix4e" created="Tue, 17 Jan 2012 02:38:52 +0000"  >&lt;p&gt;Added a patch with removal of old api.&lt;/p&gt;</comment>
                            <comment id="13187391" author="jiraposter@reviews.apache.org" created="Tue, 17 Jan 2012 02:40:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-01-17 02:40:00.376730)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Michael Stack and Lars Hofhansl.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;added lars as a reviewer.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java 904e2d2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java 8aeccb6 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 8af8c28 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTablePool.java a5c198f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 7a7b896 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java b47423c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java c0a4184 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java 25ae9a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 8f4f4b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker.java 3a26bbb &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 48f6d77 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 79373e1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 50e7fe0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a3850e5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 636e533 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java f93c81d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/ThriftServer.java 3fa5d41 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/Hbase.java 9e31c61 &lt;br/&gt;
  src/main/resources/org/apache/hadoop/hbase/thrift/Hbase.thrift 5821d31 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java ab80020 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java dacb936 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java 33c78ab &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests started table. &lt;/p&gt;


&lt;p&gt;Tests in error: &lt;br/&gt;
  org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;

&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13187392" author="jiraposter@reviews.apache.org" created="Tue, 17 Jan 2012 02:40:40 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/#review4423&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#review4423&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;I&apos;m slightly worried that this patch has gotten overly big. Maybe we should break up the removal of the old api into it&apos;s own? Or this fine?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Alex&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2012-01-17 02:37:58, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-01-17 02:37:58)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Michael Stack.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 904e2d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HTable.java 8aeccb6 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 8af8c28 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HTablePool.java a5c198f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 7a7b896 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java b47423c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java c0a4184 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java 25ae9a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 8f4f4b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker.java 3a26bbb &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 48f6d77 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 79373e1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 50e7fe0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a3850e5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 636e533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java f93c81d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/thrift/ThriftServer.java 3fa5d41 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/thrift/generated/Hbase.java 9e31c61 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/org/apache/hadoop/hbase/thrift/Hbase.thrift 5821d31 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java ab80020 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java dacb936 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java 33c78ab &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Unit tests started table. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tests in error: &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13187409" author="hadoopqa" created="Tue, 17 Jan 2012 03:22:36 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12510791/0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12510791/0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 31 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -145 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 81 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/784//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/784//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/784//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/784//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/784//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/784//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13187443" author="posix4e" created="Tue, 17 Jan 2012 04:50:45 +0000"  >&lt;p&gt;I attached the results of my jenkins run.&lt;/p&gt;</comment>
                            <comment id="13187450" author="zhihyu@ebaysf.com" created="Tue, 17 Jan 2012 05:00:37 +0000"  >&lt;p&gt;TestMetaMigrationRemovingHTD is the only failed test.&lt;/p&gt;</comment>
                            <comment id="13187451" author="posix4e" created="Tue, 17 Jan 2012 05:01:54 +0000"  >&lt;p&gt;@Zhihong indeed, i need stack&apos;s help for fixing that one.&lt;/p&gt;</comment>
                            <comment id="13187520" author="posix4e" created="Tue, 17 Jan 2012 08:01:33 +0000"  >&lt;p&gt;I realized that manually editing the generated thrift files might not be the best approach. Any suggestions?&lt;/p&gt;</comment>
                            <comment id="13187949" author="jiraposter@reviews.apache.org" created="Tue, 17 Jan 2012 19:55:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/#review4427&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#review4427&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;I love all that removed code!!&lt;br/&gt;
I think it&apos;s fine to have it with patch (in fact removing all that code and the main reason why we&apos;re doing this, right?)&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3466/#comment9937&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#comment9937&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This still has the startKey, but it is not needed. Seems we can simplify the code further by only requiring the endKey here&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2012-01-17 02:40:00, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-01-17 02:40:00)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Michael Stack and Lars Hofhansl.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 904e2d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HTable.java 8aeccb6 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 8af8c28 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HTablePool.java a5c198f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 7a7b896 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java b47423c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java c0a4184 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java 25ae9a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 8f4f4b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker.java 3a26bbb &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 48f6d77 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 79373e1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 50e7fe0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a3850e5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 636e533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java f93c81d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/thrift/ThriftServer.java 3fa5d41 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/thrift/generated/Hbase.java 9e31c61 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/org/apache/hadoop/hbase/thrift/Hbase.thrift 5821d31 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java ab80020 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java dacb936 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java 33c78ab &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Unit tests started table. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tests in error: &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13187980" author="jiraposter@reviews.apache.org" created="Tue, 17 Jan 2012 20:35:40 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-01-17 20:35:34.796686)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Michael Stack and Lars Hofhansl.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java 904e2d2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java 8aeccb6 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 8af8c28 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTablePool.java a5c198f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 7a7b896 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java b47423c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java c0a4184 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java 25ae9a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 8f4f4b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker.java 3a26bbb &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 48f6d77 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 79373e1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 50e7fe0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a3850e5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 636e533 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java f93c81d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/ThriftServer.java 3fa5d41 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/Hbase.java 9e31c61 &lt;br/&gt;
  src/main/resources/org/apache/hadoop/hbase/thrift/Hbase.thrift 5821d31 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java ab80020 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java dacb936 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java 33c78ab &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests started table. &lt;/p&gt;


&lt;p&gt;Tests in error: &lt;br/&gt;
  org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;

&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13188066" author="zhihyu@ebaysf.com" created="Tue, 17 Jan 2012 22:11:42 +0000"  >&lt;p&gt;For HRegionInfo.createRegionName():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] createRegionName(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] tableName,
      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] startKey, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; regionid, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; newFormat) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I don&apos;t see it deprecated in 0.92.&lt;/p&gt;

&lt;p&gt;I suggest creating a sub-task in 0.92.1 for this JIRA which deprecates the API&apos;s whose semantics are changed in this JIRA.&lt;/p&gt;

&lt;p&gt;Some (though few) users may utilize the above API in their codebase.&lt;/p&gt;</comment>
                            <comment id="13188081" author="zhihyu@ebaysf.com" created="Tue, 17 Jan 2012 22:35:25 +0000"  >&lt;p&gt;Patch rebased for the latest TRUNK.&lt;/p&gt;</comment>
                            <comment id="13188106" author="zhihyu@ebaysf.com" created="Tue, 17 Jan 2012 23:00:41 +0000"  >&lt;p&gt;Still need to understand the test failure.&lt;br/&gt;
Since TestMetaMigrationRemovingHTD migrates from 0.90 HBase, I wonder if the test itself should be maintained in TRUNK.&lt;br/&gt;
Migration from 0.90 to 0.94 isn&apos;t supported.&lt;/p&gt;</comment>
                            <comment id="13188110" author="posix4e" created="Tue, 17 Jan 2012 23:04:51 +0000"  >&lt;p&gt;I will in fact fix this, but I am going to need stacks help. I know what the issue is.&lt;/p&gt;</comment>
                            <comment id="13188117" author="hadoopqa" created="Tue, 17 Jan 2012 23:15:59 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12510912/2600-trunk-01-17.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12510912/2600-trunk-01-17.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 24 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -145 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 81 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/798//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/798//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/798//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/798//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/798//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/798//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13188140" author="stack" created="Wed, 18 Jan 2012 00:03:26 +0000"  >&lt;p&gt;I like what Ted says above about need to deprecate a call to remove.&lt;/p&gt;

&lt;p&gt;Here&apos;s some feedback.  I&apos;m half-way done.  Patch is shaping up nicely.&lt;/p&gt;


&lt;p&gt;What is the change in TestHRegionInfo?  You change a startkey to an endkey?  I&apos;m not sure I follow why this is done.&lt;/p&gt;

&lt;p&gt;I like the removal of the testGetClosestBefore from TestMinVersions.java&lt;br/&gt;
and of TestGetClosestAtOrBefore.java (hurray!)&lt;/p&gt;

&lt;p&gt;I love all the removed code.&lt;/p&gt;

&lt;p&gt;So in HConstants, ZEROS is deprecated but NINES is not?  How is NINES used still (later I see it used but I&apos;m not sure what its doing?)&lt;/p&gt;

&lt;p&gt;I like removal of META_ROW_DELIMITER&lt;/p&gt;

&lt;p&gt;Spacing is wacky here:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;this.startKey, this.id,&lt;/li&gt;
	&lt;li&gt;!HTableDescriptor.isMetaTable(tableNameAsBytes));&lt;/li&gt;
	&lt;li&gt;return Bytes.toString(nameAsBytes);&lt;br/&gt;
+                                                       this.endKey,&lt;br/&gt;
+                                                       Long.toString(this.id).getBytes(),&lt;br/&gt;
+                                                       !HTableDescriptor.isMetaTable(tableNameAsBytes));&lt;br/&gt;
+    return Bytes.toStringBinary(nameAsBytes);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What happens if the last region in a table is missing for whatever reason?&lt;/p&gt;

&lt;p&gt;Is the javadoc on getStartRow in HTableDescriptor right?  Its says its returning first&lt;br/&gt;
possible region that could match a tablename + searchrow?  Is it first possible row&lt;br/&gt;
in meta?&lt;/p&gt;</comment>
                            <comment id="13188153" author="lhofhansl" created="Wed, 18 Jan 2012 00:49:33 +0000"  >&lt;p&gt;Is HRegionInfo part of the public API?&lt;/p&gt;</comment>
                            <comment id="13188154" author="posix4e" created="Wed, 18 Jan 2012 00:50:23 +0000"  >&lt;p&gt;&amp;gt; What is the change in TestHRegionInfo? You change a startkey to an endkey? I&apos;m not sure I follow why this is done.&lt;br/&gt;
it&apos;s because creatioRegionId now uses the start key instead of the end key. &lt;/p&gt;

&lt;p&gt;&amp;gt; So in HConstants, ZEROS is deprecated but NINES is not? How is NINES used still (later I see it used but I&apos;m not sure what its doing?)&lt;br/&gt;
Fixed&lt;/p&gt;

&lt;p&gt;&amp;gt; Spacing&lt;br/&gt;
fixed&lt;/p&gt;

&lt;p&gt;&amp;gt; What if the last region is missing&lt;br/&gt;
The stoprow should catch it.&lt;/p&gt;

&lt;p&gt;&amp;gt;Is the javadoc on getStartRow in HTableDescriptor right? Its says its returning first possible region that could match a tablename + searchrow? Is it first possible row in meta?&lt;br/&gt;
 Oh your right fixed&lt;/p&gt;


&lt;p&gt;Patch inbound&lt;/p&gt;</comment>
                            <comment id="13188155" author="posix4e" created="Wed, 18 Jan 2012 00:50:50 +0000"  >&lt;p&gt;@Lars it is public, i have no idea why.&lt;/p&gt;</comment>
                            <comment id="13188161" author="stack" created="Wed, 18 Jan 2012 01:00:08 +0000"  >&lt;p&gt;HRI can be exposed to the client via HTable (as part of HRegionLocation) and in HBaseAdmin doing a closeRegion &amp;#8211; unnecessary, we should deprecate &amp;#8211; and then when we do getTableRegions.  We could redo and hide HRI.  HRegionLocation would beome name and servername only instead of HRI.&lt;/p&gt;</comment>
                            <comment id="13188162" author="stack" created="Wed, 18 Jan 2012 01:01:17 +0000"  >&lt;p&gt;Where is the migration issue Alex?&lt;/p&gt;</comment>
                            <comment id="13188163" author="posix4e" created="Wed, 18 Jan 2012 01:03:14 +0000"  >&lt;p&gt;I was going to handle it as a part of this one. I can create a specialized migration issue if you think that&apos;s better.&lt;/p&gt;</comment>
                            <comment id="13188170" author="posix4e" created="Wed, 18 Jan 2012 01:23:06 +0000"  >&lt;p&gt;rebased&lt;/p&gt;</comment>
                            <comment id="13188172" author="jiraposter@reviews.apache.org" created="Wed, 18 Jan 2012 01:23:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-01-18 01:22:37.824212)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Michael Stack and Lars Hofhansl.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Stack&apos;s changes&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java 8370ef8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java aec7af2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 8af8c28 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTablePool.java a5c198f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 7a7b896 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java b47423c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java c0a4184 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java 25ae9a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 4307d89 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker.java 3a26bbb &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 48f6d77 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 79373e1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 50e7fe0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a3850e5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 636e533 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java f93c81d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/ThriftServer.java 3fa5d41 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/Hbase.java 9e31c61 &lt;br/&gt;
  src/main/resources/org/apache/hadoop/hbase/thrift/Hbase.thrift 5821d31 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java 4b2b97c &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java dacb936 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java 33c78ab &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests started table. &lt;/p&gt;


&lt;p&gt;Tests in error: &lt;br/&gt;
  org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;

&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13188181" author="stack" created="Wed, 18 Jan 2012 01:34:04 +0000"  >&lt;p&gt;Why does this have to be hardcoded?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; locateRegionInMeta(HConstants.ROOT_TABLE_NAME, tableName, row,
-            useCache, metaRegionLock);
+
+        &lt;span class=&quot;code-comment&quot;&gt;//HARD CODED TO POINT TO THE FIRST META TABLE
&lt;/span&gt;+        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; locateRegionInMeta(HConstants.ROOT_TABLE_NAME,
+                                  HConstants.META_TABLE_NAME,
+                                  HConstants.EMPTY_BYTE_ARRAY,
+                                  useCache,
+                                  metaRegionLock);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It works right?&lt;/p&gt;

&lt;p&gt;I&apos;m looking at NINES in HConnectionManager... we don&apos;t need this anymore now we are scanning in the &apos;natural&apos; direction?&lt;/p&gt;

&lt;p&gt;Is this enough?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-comment&quot;&gt;// We always &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; to get two rows just in &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; one of them is a split.
&lt;/span&gt;+            Result[] result = server.next(scannerId, 2);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What if the split has split?  Then you&apos;d have two offlined regions in meta... so you&apos;d have to scan a third to get the live one (and so on... if the split is split is split....)&lt;/p&gt;

&lt;p&gt;Is this comment right?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      &lt;span class=&quot;code-comment&quot;&gt;// &amp;lt;tableName&amp;gt;,&amp;lt;startKey&amp;gt;,&amp;lt;regionIdTimeStamp&amp;gt;/encodedName/
&lt;/span&gt;+      &lt;span class=&quot;code-comment&quot;&gt;// &amp;lt;tableName&amp;gt;,&amp;lt;endKey&amp;gt;,&amp;lt;regionIdTimeStamp&amp;gt;/encodedName/&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Should the be a &apos;!&apos; in there?&lt;/p&gt;

&lt;p&gt;This I think I follow but its kind of an important change so should be crystal clear:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-comment&quot;&gt;// It should say, the tablename encoded in the region ends with !,
&lt;/span&gt;+  &lt;span class=&quot;code-comment&quot;&gt;// but the last region&apos;s tablename ends with &quot;
&lt;/span&gt;+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; END_OF_TABLE_NAME = 33;  &lt;span class=&quot;code-comment&quot;&gt;// The ascii &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; !
&lt;/span&gt;+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; END_OF_TABLE_NAME_FOR_EMPTY_ENDKEY =
+          END_OF_TABLE_NAME + 1;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So, last region in a table has a &apos;!&apos; delimiter between it and its empty endrow rather than a &apos;,&apos;?&lt;/p&gt;

&lt;p&gt;Is the comment above complete?  Whats the &apos;&quot;&apos; about?&lt;/p&gt;

&lt;p&gt;Oh, I see.  Lets discuss the actual characters used.  Hopefully can be better ones than &apos;!&apos; and &apos;&quot;&apos; (But this is minor)&lt;/p&gt;

&lt;p&gt;You do this a bunch in your patch:&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; createRegionName(tableName, startKey, Bytes.toBytes(id), newFormat);
+      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] endKey, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; id, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; newFormat) {
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; createRegionName(tableName, endKey, Bytes.toBytes(id), newFormat);
   }
+    /**
+     * Make a region name of passed parameters.
+     *
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m referring to the spacing.  It should be two spaces, not four.&lt;/p&gt;

&lt;p&gt;How is this so?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; metalength = 7; &lt;span class=&quot;code-comment&quot;&gt;// &apos;.META.&apos; length
&lt;/span&gt;+      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; metalength = 8; &lt;span class=&quot;code-comment&quot;&gt;// &apos;.META.&apos; length&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Update the comment to explain 8 I&apos;d say.&lt;/p&gt;

</comment>
                            <comment id="13188184" author="stack" created="Wed, 18 Jan 2012 01:37:23 +0000"  >&lt;p&gt;@Alex I&apos;d think a separate issue would work.  Otherwise this becomes a monster issue.  We can commit this w/o the migration technically... the migration would just have to follow soon after.  But before we could do that, we&apos;d need a viable migration before this could be committed but we can work that out distinct from what is going on here.  Good stuff.&lt;/p&gt;</comment>
                            <comment id="13188185" author="posix4e" created="Wed, 18 Jan 2012 01:38:42 +0000"  >&lt;p&gt;I think we should be able to hammer out the migration next week, i would rather not commit(and put this on hold) until we have a migration.&lt;/p&gt;</comment>
                            <comment id="13188189" author="posix4e" created="Wed, 18 Jan 2012 01:44:24 +0000"  >&lt;p&gt;Remerged&lt;/p&gt;</comment>
                            <comment id="13188191" author="jiraposter@reviews.apache.org" created="Wed, 18 Jan 2012 01:45:39 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2012-01-17 19:54:30, Lars Hofhansl wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I love all that removed code!!&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I think it&apos;s fine to have it with patch (in fact removing all that code and the main reason why we&apos;re doing this, right?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We need this patch also to get rid of the perverse backtracking.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/#review4427&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/#review4427&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2012-01-18 01:22:37, Alex Newman wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-01-18 01:22:37)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Michael Stack and Lars Hofhansl.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java 8370ef8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 99f90b2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HTable.java aec7af2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 8af8c28 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HTablePool.java a5c198f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 7a7b896 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java b47423c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java c0a4184 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java 25ae9a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 4307d89 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker.java 3a26bbb &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 48f6d77 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 79373e1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 50e7fe0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a3850e5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 636e533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java f93c81d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/thrift/ThriftServer.java 3fa5d41 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/thrift/generated/Hbase.java 9e31c61 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/org/apache/hadoop/hbase/thrift/Hbase.thrift 5821d31 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java 4b2b97c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java dacb936 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java 33c78ab &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Unit tests started table. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tests in error: &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Alex&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13188192" author="jiraposter@reviews.apache.org" created="Wed, 18 Jan 2012 01:45:41 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-01-18 01:45:19.120980)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Michael Stack and Lars Hofhansl.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/test/java/org/apache/hadoop/hbase/thrift/TestThriftServer.java c3be6e3 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests started table. &lt;/p&gt;


&lt;p&gt;Tests in error: &lt;br/&gt;
  org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;

&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13188194" author="jiraposter@reviews.apache.org" created="Wed, 18 Jan 2012 01:55:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-01-18 01:54:42.329073)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Michael Stack and Lars Hofhansl.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/test/java/org/apache/hadoop/hbase/thrift/TestThriftServer.java c3be6e3 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests started table. &lt;/p&gt;


&lt;p&gt;Tests in error: &lt;br/&gt;
  org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;

&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13188197" author="hadoopqa" created="Wed, 18 Jan 2012 01:56:51 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12510929/0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v8&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12510929/0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v8&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -145 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 82 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/801//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/801//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/801//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/801//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/801//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/801//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13188201" author="hadoopqa" created="Wed, 18 Jan 2012 02:06:09 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12510930/0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v8.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12510930/0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v8.1&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -145 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 82 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/802//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/802//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/802//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/802//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/802//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/802//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13188287" author="lhofhansl" created="Wed, 18 Jan 2012 05:48:46 +0000"  >&lt;p&gt;HadoopQA says there were no changes?&lt;/p&gt;</comment>
                            <comment id="13188291" author="lhofhansl" created="Wed, 18 Jan 2012 06:00:02 +0000"  >&lt;p&gt;@Stack:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;We need this patch also to get rid of the perverse backtracking.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What is this &quot;backtracking&quot;? Is that different from the code that Alex removed from Store.java?&lt;/p&gt;</comment>
                            <comment id="13188639" author="posix4e" created="Wed, 18 Jan 2012 19:19:49 +0000"  >&lt;p&gt;Fixed spacing.&lt;/p&gt;</comment>
                            <comment id="13188640" author="jiraposter@reviews.apache.org" created="Wed, 18 Jan 2012 19:20:38 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-01-18 19:19:27.118173)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Michael Stack and Lars Hofhansl.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Fixed the spacing and got most of stack&apos;s comments in.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java 8370ef8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java d857538 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java 57605e6 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 784fdc2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTablePool.java a5c198f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 7a7b896 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java b1b5a78 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java c0a4184 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java 0431444 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 4307d89 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker.java 3a26bbb &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java c7cc402 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 5cb606f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 50e7fe0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a3850e5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 636e533 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java 3919985 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java b6a6349 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/Hbase.java 9e31c61 &lt;br/&gt;
  src/main/resources/org/apache/hadoop/hbase/thrift/Hbase.thrift 5821d31 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java 95ab8e6 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java dacb936 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java 33c78ab &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests started table. &lt;/p&gt;


&lt;p&gt;Tests in error: &lt;br/&gt;
  org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;

&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13188642" author="jiraposter@reviews.apache.org" created="Wed, 18 Jan 2012 19:22:38 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-01-18 19:21:37.796315)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Michael Stack and Lars Hofhansl.&lt;/p&gt;


&lt;p&gt;Summary (updated)&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 74cb821 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java 8370ef8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 133759d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java be7e2d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java e5e60a8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 88c381f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java d857538 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java 57605e6 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 784fdc2 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTablePool.java a5c198f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f0c6828 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 7a7b896 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java b1b5a78 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java c0a4184 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java 0431444 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 4307d89 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker.java 3a26bbb &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java c7cc402 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 5cb606f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 50e7fe0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a3850e5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 636e533 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java bf85bc1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java 3919985 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 67e7a04 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java b6a6349 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/Hbase.java 9e31c61 &lt;br/&gt;
  src/main/resources/org/apache/hadoop/hbase/thrift/Hbase.thrift 5821d31 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java dc4ee8d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java 95ab8e6 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java dacb936 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6e1211b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java 33c78ab &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests started table. &lt;/p&gt;


&lt;p&gt;Tests in error: &lt;br/&gt;
  org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;

&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13188679" author="hadoopqa" created="Wed, 18 Jan 2012 20:28:25 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12511025/0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v9.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12511025/0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v9.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 31 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -145 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 81 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/808//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/808//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/808//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/808//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/808//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/808//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13188795" author="lhofhansl" created="Wed, 18 Jan 2012 23:16:59 +0000"  >&lt;p&gt;@Alex: What is the problem with TestMetaMigrationRemovingHTD? The tar file with that version of HBase is in ./src/test/data/hbase-4388-root.dir.tgz.&lt;br/&gt;
I am actually not sure what it means if that test fails.&lt;br/&gt;
@Stack: That seems to be the last stumbling block to get a successful test run. I assume this test failing indicates something bad (that we cannot migrate meta with this patch applied).&lt;/p&gt;</comment>
                            <comment id="13188798" author="zhihyu@ebaysf.com" created="Wed, 18 Jan 2012 23:23:17 +0000"  >&lt;p&gt;I think we should shift our attention from TestMetaMigrationRemovingHTD to creating a new migration test.&lt;br/&gt;
The reason is that 0.90 to 0.94 is not a supported migration path.&lt;/p&gt;

&lt;p&gt;1. A tar ball of 0.92 HBase should be generated.&lt;br/&gt;
2. Verify that we can migrate from 0.92 .META. table to the new format.&lt;/p&gt;</comment>
                            <comment id="13188805" author="lhofhansl" created="Wed, 18 Jan 2012 23:29:05 +0000"  >&lt;p&gt;Oh? Did not know that.&lt;br/&gt;
If that&apos;s the case, I agree we should remove that test and create a similar test for this issue.&lt;/p&gt;</comment>
                            <comment id="13232847" author="stack" created="Mon, 19 Mar 2012 20:06:07 +0000"  >&lt;p&gt;Fixing this will fix &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1841&quot; title=&quot;If multiple of same key in an hfile and they span blocks, may miss the earlier keys on a lookup&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1841&quot;&gt;&lt;del&gt;HBASE-1841&lt;/del&gt;&lt;/a&gt;.  Or, we need to do something weird like keep a block going if it has same key multiple times...&lt;/p&gt;</comment>
                            <comment id="13233092" author="schubertzhang" created="Tue, 20 Mar 2012 01:26:27 +0000"  >&lt;p&gt;Fixing this will also fix &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1978&quot; title=&quot;Change the range/block index scheme from [start,end) to (start, end], and index range/block by endKey, specially in HFile&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1978&quot;&gt;HBASE-1978&lt;/a&gt;, since I have no ability to complete that.&lt;/p&gt;</comment>
                            <comment id="13233098" author="schubertzhang" created="Tue, 20 Mar 2012 01:31:08 +0000"  >&lt;p&gt;Change the range/block index scheme from &lt;span class=&quot;error&quot;&gt;&amp;#91;start,end) to (start, end&amp;#93;&lt;/span&gt;, and index range/block by endKey, specially in HFile&lt;/p&gt;</comment>
                            <comment id="13233123" author="posix4e" created="Tue, 20 Mar 2012 02:02:10 +0000"  >&lt;p&gt;Oh thanks for the reminder. I think this patch is ready. I just need to rebase and retest on my jenkins setup. Expect a patch soon.&lt;/p&gt;</comment>
                            <comment id="13237965" author="jiraposter@reviews.apache.org" created="Sun, 25 Mar 2012 20:13:25 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3466/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-03-25 20:11:32.746962)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Michael Stack and Lars Hofhansl.&lt;/p&gt;


&lt;p&gt;Summary (updated)&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is an idea that Ryan and I have been kicking around on and off for a while now.&lt;/p&gt;

&lt;p&gt;If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we&apos;d just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we&apos;d have to scan to the next row).&lt;/p&gt;

&lt;p&gt;If we redid the meta tables in this format, we&apos;d be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region.&lt;/p&gt;

&lt;p&gt;This issue is about changing the way we name regions.&lt;/p&gt;

&lt;p&gt;If we were using scans, prewarming client cache would be near costless (as opposed to what we&apos;ll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward).&lt;/p&gt;

&lt;p&gt;Converting to the new method, we&apos;d have to run a migration on startup changing the content in meta.&lt;/p&gt;

&lt;p&gt;Up to this, the randomid component of a region name has been the timestamp of region creation. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt; &quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region. If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we&apos;d need hbase-2531 to be in place before we could do this change.&lt;/p&gt;


&lt;p&gt;    public TRegionInfo getRegionInfo(ByteBuffer searchRow) throws IOError { was nulled out and enabled with &lt;a href=&quot;https://reviews.apache.org/r/3514/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3514/&lt;/a&gt;. They are listed as dependencies in the jira and will be committed together.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2600&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java c1f20de &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java 8888347 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 8d83ff3 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java fc5e53e &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java 243d76f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaMigratev2.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java 0129ee9 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 16e4017 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java b2a5463 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java 8e7d7f7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 04150ad &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTablePool.java 47381f4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java f404999 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 197eb71 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18c13c4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java 30c61ca &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java 757f98e &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java dbc9251 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java 2ec6677 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/migration/HRegionInfo090x2.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker.java 8174cf5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 02d55d4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java e0af8fb &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 0592f40 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a3850e5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 0c7b396 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java 56e31e1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java 3535595 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java 60eb426 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/AlreadyExists.java a5b81f5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/BatchMutation.java d5df940 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/ColumnDescriptor.java 4ce85e7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/Hbase.java 6c505c0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/IOError.java 11e31e3 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/IllegalArgument.java ede215f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/Mutation.java ef1817f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/TCell.java 6ee8ca7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/TRegionInfo.java ed251e8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/TRowResult.java e1709b5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/thrift/generated/TScan.java f7cc05d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/FSUtils.java aebe5b0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/Writables.java 3d20723 &lt;br/&gt;
  src/main/resources/org/apache/hadoop/hbase/thrift/Hbase.thrift f698a6c &lt;br/&gt;
  src/test/data/generate-hbase-2600-root-in-tmp.sh PRE-CREATION &lt;br/&gt;
  src/test/data/hbase-2600-root.dir.tgz PRE-CREATION &lt;br/&gt;
  src/test/data/hbase-4388-root.dir.tgz da2244e8097d3fd3b0cb04d49cbc615406f7e809 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java fae6902 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/catalog/TestMetaUpdate.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java f7430ee &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestMetaMigrationRemovingHTD.java d1c15af &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java dacb936 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/MockRegionServer.java d2b3060 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/migration/TestMigration.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/migration/TestMigrationFrom090To092.java c3651ac &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 5f97167 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 6dfba41 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java 33c78ab &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/TestStatusResource.java cffdcb6 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/rest/model/TestTableRegionModel.java b6f0ab5 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3466/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3466/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests started table. &lt;/p&gt;


&lt;p&gt;Tests in error: &lt;br/&gt;
  org.apache.hadoop.hbase.client.TestMetaMigrationRemovingHTD: Table &apos;TestTable we searched for the StartKey: TestTable ,, startKey lastChar&apos;s int value: 32 with the stopKey: TestTable#,, stopRow lastChar&apos;s int value: 35 with parentTable:.META.&lt;/p&gt;

&lt;p&gt;I need to know how to update/recreate the tar ball which is the source for that test.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13237972" author="posix4e" created="Sun, 25 Mar 2012 21:07:12 +0000"  >&lt;p&gt;Combined with 5217 as they need to be committed at the same time.&lt;/p&gt;</comment>
                            <comment id="13237974" author="posix4e" created="Sun, 25 Mar 2012 21:29:48 +0000"  >&lt;p&gt;Sorry I apparently don&apos;t know how to generate patches with git. That was just the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2600&quot; title=&quot;Change how we do meta tables; from tablename+STARTROW+randomid to instead, tablename+ENDROW+randomid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2600&quot;&gt;HBASE-2600&lt;/a&gt; patch.&lt;/p&gt;</comment>
                            <comment id="13237998" author="hadoopqa" created="Sun, 25 Mar 2012 22:21:28 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12519880/HBASE-2600%2B5217-Sun-Mar-25-2012-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12519880/HBASE-2600%2B5217-Sun-Mar-25-2012-v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 50 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 11 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.TestForceCacheImportantBlocks&lt;br/&gt;
                  org.apache.hadoop.hbase.catalog.TestMetaUpdate&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1303//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1303//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1303//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1303//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1303//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1303//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13238004" author="posix4e" created="Sun, 25 Mar 2012 22:42:03 +0000"  >&lt;p&gt;I bungled the patch. I&apos;ve been using git diff --no-prefix HEAD^^ &amp;gt; bla . That doesn&apos;t seem to include my binary tar ball. ANy ideas&lt;/p&gt;</comment>
                            <comment id="13238010" author="yuzhihong@gmail.com" created="Sun, 25 Mar 2012 23:27:23 +0000"  >&lt;p&gt;@Alex:&lt;br/&gt;
Try this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
git diff --no-prefix --binary 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13238038" author="posix4e" created="Mon, 26 Mar 2012 01:28:52 +0000"  >&lt;p&gt;Binary included&lt;/p&gt;</comment>
                            <comment id="13238063" author="hadoopqa" created="Mon, 26 Mar 2012 02:21:17 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12519888/HBASE-2600%2B5217-Sun-Mar-25-2012-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12519888/HBASE-2600%2B5217-Sun-Mar-25-2012-v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 48 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 11 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.catalog.TestMetaUpdate&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1304//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1304//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1304//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1304//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1304//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1304//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13238074" author="yuzhihong@gmail.com" created="Mon, 26 Mar 2012 02:51:00 +0000"  >&lt;p&gt;dev-support/test-patch.sh doesn&apos;t use &apos;--binary&apos; option when applying patches.&lt;/p&gt;

&lt;p&gt;I tried the following command:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
patch -p0 --binary -i HBASE-2600+5217-Sun-Mar-25-2012-v4.patch
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But src/test/data/hbase-2600-root.dir.tgz wasn&apos;t unpacked from patch.&lt;/p&gt;</comment>
                            <comment id="13238513" author="posix4e" created="Mon, 26 Mar 2012 16:00:26 +0000"  >&lt;p&gt;I really have no idea what&apos;s going on here. I can&apos;t seem to create patch from svn or git. Also, I&apos;ve noticed the patch does have the binary snippet, svn and patch just aren&apos;t applying it. My jenkins job runs out of memory(/dev/shm). So I gave the build machine a reboot and the branch at &lt;a href=&quot;http://github.com/posix4e/hbase&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/posix4e/hbase&lt;/a&gt; (branch jenkins) built fine. Can someone with a commit bit just pull it into a svn branch?&lt;/p&gt;</comment>
                            <comment id="13238891" author="yuzhihong@gmail.com" created="Mon, 26 Mar 2012 22:01:13 +0000"  >&lt;p&gt;@Alex:&lt;br/&gt;
Can you attach hbase-2600-root.dir.tgz to this JIRA ?&lt;br/&gt;
Please briefly describe how you generated the tar ball.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13238914" author="posix4e" created="Mon, 26 Mar 2012 22:26:05 +0000"  >&lt;p&gt;generate-hbase-2600-root-in-tmp.sh	was used to generate this tarball&lt;/p&gt;</comment>
                            <comment id="13239863" author="zhihyu@ebaysf.com" created="Tue, 27 Mar 2012 19:38:53 +0000"  >&lt;p&gt;TestMetaUpdate passes with the binary provided by Alex.&lt;/p&gt;</comment>
                            <comment id="13239884" author="posix4e" created="Tue, 27 Mar 2012 20:03:21 +0000"  >&lt;p&gt;Are any tests failing?&lt;/p&gt;</comment>
                            <comment id="13239896" author="zhihyu@ebaysf.com" created="Tue, 27 Mar 2012 20:09:06 +0000"  >&lt;p&gt;I was about to go over the patch on review board - I didn&apos;t run whole suite.&lt;br/&gt;
Since the tar ball is only used by TestMetaUpdate, I wanted to get some clarification for TestMetaUpdate first.&lt;/p&gt;</comment>
                            <comment id="13247416" author="posix4e" created="Thu, 5 Apr 2012 17:47:19 +0000"  >&lt;p&gt;What do I need to do to move this forward?&lt;/p&gt;</comment>
                            <comment id="13256781" author="posix4e" created="Wed, 18 Apr 2012 18:24:54 +0000"  >&lt;p&gt;I rebased today.&lt;/p&gt;</comment>
                            <comment id="13256857" author="hadoopqa" created="Wed, 18 Apr 2012 19:12:30 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12523233/0001-HBASE-2600.v10.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12523233/0001-HBASE-2600.v10.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 65 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause mvn compile goal to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1568//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1568//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1568//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1568//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13256894" author="posix4e" created="Wed, 18 Apr 2012 19:52:11 +0000"  >&lt;p&gt;Removed getclosestrow use&lt;/p&gt;</comment>
                            <comment id="13256907" author="hadoopqa" created="Wed, 18 Apr 2012 20:08:21 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12523242/0001-HBASE-2600-v11.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12523242/0001-HBASE-2600-v11.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 65 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 18 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1570//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1570//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1570//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1570//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1570//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1570//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13256932" author="posix4e" created="Wed, 18 Apr 2012 20:40:33 +0000"  >&lt;p&gt;looks like it&apos;s failing tests on my jira. I&apos;ll have to look into this further.&lt;/p&gt;</comment>
                            <comment id="13256935" author="posix4e" created="Wed, 18 Apr 2012 20:40:56 +0000"  >&lt;p&gt;Err I mean it&apos;s failing tests on my jenkins&lt;/p&gt;</comment>
                            <comment id="13257582" author="posix4e" created="Thu, 19 Apr 2012 16:26:35 +0000"  >&lt;p&gt;Never mind the second jenkins run  ran fine. i think it was just bad job interaction.&lt;/p&gt;</comment>
                            <comment id="13263183" author="posix4e" created="Thu, 26 Apr 2012 22:00:54 +0000"  >&lt;p&gt;I needed to rebase again. I&apos;ll upload a patch in a second after I run it through my jenkins.&lt;/p&gt;</comment>
                            <comment id="13443336" author="mcorgan" created="Tue, 28 Aug 2012 18:16:13 +0000"  >&lt;p&gt;I saw some discussion earlier in this jira about this patch removing the need for the custom MetaKeyComparator... does it end up doing that in its current form?&lt;/p&gt;</comment>
                            <comment id="13443561" author="mcorgan" created="Tue, 28 Aug 2012 21:39:07 +0000"  >&lt;p&gt;At the risk of confusing this huge issue even more... the current (0.94) META rows are formatted like&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;[table],[region start key],[region id]&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;.  Then I believe this jira changes them to &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;[table],[region end key],[region id]&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is that correct?&lt;/p&gt;

&lt;p&gt;what if we:&lt;br/&gt;
1) replace the first comma with \x00 which sorts before all legal filesystem characters&lt;br/&gt;
2) move the regionId to be a prefix of the qualifier&lt;/p&gt;

&lt;p&gt;Would that format allow us to get rid of the custom MetaKeyComparator?  I mention this now as i&apos;m trying to future-proof the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4676&quot; title=&quot;Prefix Compression - Trie data block encoding&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4676&quot;&gt;&lt;del&gt;HBASE-4676&lt;/del&gt;&lt;/a&gt; so it can work with META at some point.&lt;/p&gt;</comment>
                            <comment id="13444325" author="stack" created="Wed, 29 Aug 2012 19:00:09 +0000"  >&lt;p&gt;Yes, Matt.  We&apos;d use the end key over start key so we query on .META. would not need to do any backing up.&lt;/p&gt;

&lt;p&gt;1. I think the \x00 would work for first delimiter.  Rows would be sorted first on table.  \x00 could be part of a region key but the sort on table name first should make it so the \x00 delimiter would be found first (We could too make the table name fixed size, a &apos;code&apos; with its string value kept elsewhere perhaps in another table.  This way table renames would be easy.  Then we&apos;d need no delimiter).&lt;/p&gt;

&lt;p&gt;2. Regionid as a column qualifier prefix?  Thats radical.  Tell me more what you are thinking.  It&apos;d be sweet if we could do memcmp on row keys.  BIG SIMPLIFICATION.  Region id as qualifier would make for some interesting changes.  On split, for the bottom half of the split, we&apos;d be adding a new column with the new qualifier.  There&apos;d be one less delete and add?  Is that right?   Its a radical notion.  Lets tease it out.  It could be really good.&lt;/p&gt;</comment>
                            <comment id="13444334" author="stack" created="Wed, 29 Aug 2012 19:11:30 +0000"  >&lt;p&gt;Elliott just made an interesting suggestion which was that we could put the regionid into a .META. column of its own... info:regionid (need to think this through more)&lt;/p&gt;</comment>
                            <comment id="13444349" author="mcorgan" created="Wed, 29 Aug 2012 19:38:31 +0000"  >&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;\x00 could be part of a region key but the sort on table name first should make it so the \x00 delimiter would be found first&lt;/p&gt;&lt;/blockquote&gt;yep - in general, this is how i build compound primary keys with variable length strings.  you shouldn&apos;t need any padding or anything.  the only complication is if your string somehow contains \x00, but that can&apos;t happen in this case&lt;/p&gt;

&lt;p&gt;As for moving the regionId to the qualifier, I don&apos;t really know enough about how it&apos;s used to give detailed ideas, but some thoughts:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;there will not be many daughter regions at a given time, so we are not talking about wide rows&lt;/li&gt;
	&lt;li&gt;perhaps putting the daughters into the same row adds some transactional benefits that we didn&apos;t previously have?&lt;/li&gt;
	&lt;li&gt;as for qualifier-prefix vs separate-qualifier, i actually don&apos;t know enough about usage to say if neither/either/both would work.  seems like either could work given that each row will be small enough to easily hold in memory and parse however.  i first proposed prefixing to keep the KV sort order intact, but if that isn&apos;t required then separate-qualifier is cleaner.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13447846" author="posix4e" created="Tue, 4 Sep 2012 17:45:34 +0000"  >&lt;p&gt;Sorry everyone, I was lost at burning man.&lt;/p&gt;

&lt;p&gt;&amp;gt; perhaps putting the daughters into the same row adds some transactional benefits that we didn&apos;t previously have?&lt;br/&gt;
Indeed. Currently we can&apos;t split meta, and even still, I think we can do atomic operations within a region easily.&lt;/p&gt;

&lt;p&gt;@Stack I like the info:regionid idea. I&apos;ll also put on my thinking cap about it. This patch requires a big rework to get it to work.&lt;/p&gt;</comment>
                            <comment id="13481772" author="jesse_yates" created="Mon, 22 Oct 2012 20:47:50 +0000"  >&lt;p&gt;We&apos;ve been doing a lot of thinking over here at Saleforce about this issue and was thinking about picking up work on this, is Alex is busy. The current approach is pretty good, and has a lot of merits. We also discussed the option of using the multi-row transaction stuff (which will be another reason why we couldn&apos;t split META). I did a full write-up/analysis of the options (see &lt;a href=&quot;https://dl.dropbox.com/u/6147077/Proposal-HBASE-2600.docx&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://dl.dropbox.com/u/6147077/Proposal-HBASE-2600.docx&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;What I ended up coming up with is a little bit crazy, but I think it works. (I&apos;m not dealing with tablenames as hashes, but that is pretty trivial). What I&apos;m looking to solve are:&lt;/p&gt;

&lt;p&gt;(1) replacing start  key&#8217;s with endkeys&lt;br/&gt;
(2) ensuring correct sorting &lt;br/&gt;
(3) ensuring correct split behavior to avoid META holes &lt;br/&gt;
(4) moving the compound key to their own family/qualifier&lt;/p&gt;

&lt;p&gt;There seems to be a couple pieces we can put together to ensure we meet all the above goals.&lt;br/&gt;
First, row keys are encoded as:&lt;/p&gt;

&lt;p&gt;	For all non-terminal regions:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;	
	&amp;lt;table&amp;gt;0x00&amp;lt;endkey&amp;gt; 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;	For the terminal region:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
		&amp;lt;table&amp;gt;0x01
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then we can move the encoded name into its own cell, under the &#8220;info:encodedname&#8221; column. Next, the regionid is moved to the timestamp and used for all updates the region in META (this includes offlining and marking the parent as split).  Since regionids are already timestamps by convention, this doesn&apos;t stray that far afield.&lt;/p&gt;

&lt;p&gt;META then looks something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;table&amp;gt;0x00&amp;lt;endkey&amp;gt; | info |
                           | encodedname     | &amp;lt;regionid&amp;gt; | &amp;lt;md5 hash&amp;gt;
                           | regioninfo      | &amp;lt;regionid&amp;gt; | &amp;lt;hri &#8211; 1&amp;gt;
                           | server          | &amp;lt;regionid&amp;gt; | &amp;lt;server:port&amp;gt;
                           | server.startcode| &amp;lt;regionid&amp;gt; | &amp;lt;startcode 
                           | splitA          | &amp;lt;regionid&amp;gt; | &amp;lt;hri &#8211; 3&amp;gt;
                           | splitB          | &amp;lt;regionid&amp;gt; | &amp;lt;hri &#8211; 4&amp;gt;
&amp;lt;table&amp;gt;0x01        |  info | encodedname     | &amp;lt;regionid2&amp;gt;| &amp;lt;hri-4&amp;gt; 
                           |  ...            | &amp;lt;regionid2&amp;gt;| ...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Obviously there are some serious implications for how lookups and splits work.&lt;/p&gt;

&lt;p&gt;Splits need to take the opposite approach with respect to putting children in META. Currently, we write the bottom and then the top child, counting on the htable to retry when it finds an offlined region. Now, we just flip the ordering by: (1) offline the parent, (2) put the &apos;top&apos; child and then (3) insert the bottom child. &lt;/p&gt;

&lt;p&gt;The problem lies in making sure that the bottom child sorts before the parent. In the previous scheme we ensured that sorting by putting a regionid in the row key. With the above scheme, the &apos;top&apos; child will always sort before the parent because it has a lower endkey. The &apos;bottom&apos; child actual has &lt;em&gt;exactly the same row key&lt;/em&gt; as the parent. However, the bottom child still sorts first because it has a larger regionid (which is also already baked into the code).&lt;/p&gt;

&lt;p&gt;We also must do a check of the timestamp vs. the expected regionid to ensure that we can get the correct region, but that is a minor overhead.&lt;/p&gt;

&lt;p&gt;NOTE: this also gives us provenance of regions, at least until the catalog janitor cleans up parent regions.&lt;/p&gt;

&lt;p&gt;For lookups, you would query for the first region that matches (similar to the current mechanism):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	&amp;lt;table&amp;gt;0x00&amp;lt;desired key&amp;gt;999999&#8230;&#8230;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which still finds the correct (bottom) child because its regionid must be greater than its parent causing it to sort &lt;em&gt;before&lt;/em&gt; its parent in the same row.&lt;/p&gt;

&lt;p&gt;This give us correct sorting, an easily readable META, and no holes. Oh, and we can remove all the backwords scanning.&lt;/p&gt;</comment>
                            <comment id="13481773" author="jesse_yates" created="Mon, 22 Oct 2012 20:48:18 +0000"  >&lt;p&gt;As an aside, if don&apos;t roll into the hashed tablenames here, we do easy end-key extraction by encoding the length of the table name into the row key as the last 4 bytes of the key. Then you would read in an int from the last 4 bytes to jump right to the correct location in the key for the endkey. This still sorts correctly because the prefix to that length will always sort the same way, so the suffix doesn&apos;t affect sorting.&lt;/p&gt;</comment>
                            <comment id="13648921" author="jdcryans" created="Fri, 3 May 2013 23:37:10 +0000"  >&lt;p&gt;Patch is stale, all the code moved, unmarking as available.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12521500">HBASE-4335</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12435761">HBASE-1841</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12440605">HBASE-1978</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12464206">HBASE-2531</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12513076">HBASE-4071</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12538682">HBASE-5217</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12507243" name="0001-Changed-regioninfo-format-to-use-endKey-instead-of-s.patch" size="79582" author="posix4e" created="Tue, 13 Dec 2011 21:11:05 +0000"/>
                            <attachment id="12523242" name="0001-HBASE-2600-v11.patch" size="639238" author="posix4e" created="Wed, 18 Apr 2012 19:52:11 +0000"/>
                            <attachment id="12510727" name="0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v2.patch" size="58181" author="posix4e" created="Mon, 16 Jan 2012 18:27:46 +0000"/>
                            <attachment id="12510791" name="0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v4.patch" size="146829" author="posix4e" created="Tue, 17 Jan 2012 02:38:39 +0000"/>
                            <attachment id="12510898" name="0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v6.patch" size="144326" author="posix4e" created="Tue, 17 Jan 2012 20:36:31 +0000"/>
                            <attachment id="12510928" name="0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v7.2.patch" size="143321" author="posix4e" created="Wed, 18 Jan 2012 01:23:06 +0000"/>
                            <attachment id="12510929" name="0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v8" size="5327" author="posix4e" created="Wed, 18 Jan 2012 01:44:24 +0000"/>
                            <attachment id="12510930" name="0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v8.1" size="5327" author="posix4e" created="Wed, 18 Jan 2012 01:55:00 +0000"/>
                            <attachment id="12511025" name="0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen-v9.patch" size="142218" author="posix4e" created="Wed, 18 Jan 2012 19:19:49 +0000"/>
                            <attachment id="12510274" name="0001-HBASE-2600.-Change-how-we-do-meta-tables-from-tablen.patch" size="57338" author="posix4e" created="Wed, 11 Jan 2012 23:38:20 +0000"/>
                            <attachment id="12523233" name="0001-HBASE-2600.v10.patch" size="636929" author="posix4e" created="Wed, 18 Apr 2012 18:24:54 +0000"/>
                            <attachment id="12510912" name="2600-trunk-01-17.txt" size="138181" author="zhihyu@ebaysf.com" created="Tue, 17 Jan 2012 22:35:25 +0000"/>
                            <attachment id="12519880" name="HBASE-2600+5217-Sun-Mar-25-2012-v3.patch" size="441565" author="posix4e" created="Sun, 25 Mar 2012 21:30:41 +0000"/>
                            <attachment id="12519888" name="HBASE-2600+5217-Sun-Mar-25-2012-v4.patch" size="954788" author="posix4e" created="Mon, 26 Mar 2012 01:28:52 +0000"/>
                            <attachment id="12520024" name="hbase-2600-root.dir.tgz" size="260764" author="posix4e" created="Mon, 26 Mar 2012 22:26:05 +0000"/>
                            <attachment id="12510807" name="jenkins.pdf" size="373414" author="posix4e" created="Tue, 17 Jan 2012 04:50:45 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 27 Aug 2011 06:32:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32669</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 32 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00s6f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2497</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>