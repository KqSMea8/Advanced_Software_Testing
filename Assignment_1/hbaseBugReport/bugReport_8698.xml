<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:57:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-8698/HBASE-8698.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-8698] potential thread creation in MetaScanner.metaScan</title>
                <link>https://issues.apache.org/jira/browse/HBASE-8698</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;MetaScanner.metaScan() creates an instance of HTable per call. The constructur used creates a new ThreadPoolExecutor. The executor itself will not create a thread unless it&apos;s pool is used. I am not sure if the HTable instance in question ever uses it&apos;s pool. But if so, this could become a big performance issue. Logging an issue at Lars&apos;s request. mail list chain below.&lt;/p&gt;

&lt;p&gt;------------------------------------- &lt;/p&gt;

&lt;p&gt;Indeed. That is bad.&lt;br/&gt;
I cannot see a clean fix immediately, but we need to look at this.&lt;/p&gt;

&lt;p&gt;Mind filing a ticket, Kireet?&lt;/p&gt;

&lt;p&gt;&amp;#8211; Lars&lt;/p&gt;



&lt;p&gt;________________________________&lt;br/&gt;
 From: Kireet &amp;lt;kireet-Teh5dPVPL8nQT0dZR+AlfA@public.gmane.org&amp;gt;&lt;br/&gt;
To: public-user-50Pas4EWwPEyzMRdD/IqWQ-wOFGN7rlS/M9smdsby/KFg@public.gmane.org &lt;br/&gt;
Sent: Friday, May 31, 2013 11:58 AM&lt;br/&gt;
Subject: Re: HConnectionManager$HConnectionImplementation.locateRegionInMeta&lt;/p&gt;




&lt;p&gt;Even if I initiate the call via a pooled htable, the MetaScanner seems &lt;br/&gt;
to use a concrete HTable instance. The constructor invoked seems to &lt;br/&gt;
create a java ThreadPoolExecutor. I am not 100% sure but I think as long &lt;br/&gt;
as nothing is submitted to the ThreadPoolExecutor it won&apos;t create any &lt;br/&gt;
threads. I just wanted to confirm this was the case. I do see the &lt;br/&gt;
connection is shared.&lt;/p&gt;

&lt;p&gt;--Kireet&lt;/p&gt;



&lt;p&gt;On 5/30/13 7:38 PM, Ted Yu wrote:&lt;br/&gt;
&amp;gt; HTablePool$**PooledHTable is a wrapper around HTable.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; Here is how HTable obtains a connection:&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;     public HTable(Configuration conf, final byte[] tableName, final&lt;br/&gt;
&amp;gt; ExecutorService pool)&lt;br/&gt;
&amp;gt;         throws IOException {&lt;br/&gt;
&amp;gt;       this.connection = HConnectionManager.getConnection(conf);&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; Meaning the connection is a shared one based on certain key/value pairs&lt;br/&gt;
&amp;gt; from conf.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; bq. So every call to batch will create a new thread?&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; I don&apos;t think so.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; On Thu, May 30, 2013 at 11:28 AM, Kireet &amp;lt;kireet-Teh5dPVPL8nQT0dZR+AlfA-XMD5yJDbdMReXY1tMh2IBg@public.gmane.org&amp;gt; wrote:&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; Thanks, will give it a shot. So I should download 0.94.7 (latest stable)&lt;br/&gt;
&amp;gt;&amp;gt; and run the patch tool on top with the backport? This is a little new to me.&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; Also, I was looking at the stack below. From my reading of the code, the&lt;br/&gt;
&amp;gt;&amp;gt; HTable.batch() call will always cause the prefetch call to occur, which&lt;br/&gt;
&amp;gt;&amp;gt; will cause a new HTable object to get created. The constructor used in&lt;br/&gt;
&amp;gt;&amp;gt; creating a new thread pool. So every call to batch will create a new&lt;br/&gt;
&amp;gt;&amp;gt; thread? Or the HTable&apos;s thread pool never gets used as the pool is only&lt;br/&gt;
&amp;gt;&amp;gt; used for writes? I think I am missing something but just want to confirm.&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; Thanks&lt;br/&gt;
&amp;gt;&amp;gt; Kireet&lt;/p&gt;</description>
                <environment></environment>
        <key id="12651358">HBASE-8698</key>
            <summary>potential thread creation in MetaScanner.metaScan</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="kireet">Kireet Reddy</reporter>
                        <labels>
                    </labels>
                <created>Thu, 6 Jun 2013 15:24:37 +0000</created>
                <updated>Wed, 21 Aug 2013 00:08:49 +0000</updated>
                            <resolved>Sun, 28 Jul 2013 06:04:27 +0000</resolved>
                                    <version>0.94.7</version>
                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.95.2</fixVersion>
                    <fixVersion>0.94.11</fixVersion>
                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13677542" author="lhofhansl" created="Thu, 6 Jun 2013 21:37:34 +0000"  >&lt;p&gt;Another email from Kireet for motivation:&lt;/p&gt;

&lt;p&gt;We are running hbase 0.94.6 in a concurrent environment and we are&lt;br/&gt;
seeing the majority of our code stuck in this method at the synchronized&lt;br/&gt;
block (line 997). Is there some configuration we can change to avoid it?&lt;br/&gt;
It seems like we could disable prefetching, but that sounds like it&lt;br/&gt;
could cause other problems?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegionInMeta(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[],
&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;, java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;) @bci=149, line=997
(Compiled frame)
  -
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[],
&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;) @bci=212, line=889 (Compiled frame)
  -
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[],
&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]) @bci=5, line=846 (Compiled frame)
  -
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.processBatchCallback(java.util.List,
&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], java.util.concurrent.ExecutorService, java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;[],
org.apache.hadoop.hbase.client.coprocessor.Batch$Callback) @bci=194,
line=1533 (Compiled frame)
  -
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.processBatch(java.util.List,
&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], java.util.concurrent.ExecutorService, java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;[])
@bci=30, line=1418 (Compiled frame)
  - org.apache.hadoop.hbase.client.HTable.batch(java.util.List) @bci=24,
line=702 (Compiled frame)
  - org.apache.hadoop.hbase.client.HTable.get(java.util.List) @bci=2,
line=671 (Compiled frame)
  -
org.apache.hadoop.hbase.client.HTablePool$PooledHTable.get(java.util.List)
@bci=5, line=367 (Compiled frame)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13677547" author="kireet" created="Thu, 6 Jun 2013 21:40:56 +0000"  >&lt;p&gt;Hello, actually in the end we found that we accidently configured our java heap size way too small (it seems if you set -Xmx twice java doesn&apos;t complain but takes the last value) and ended up chasing down lots of non-existent issues. Once we fixed the heap size issue we haven&apos;t run into hbase related performance issues. &lt;/p&gt;</comment>
                            <comment id="13677565" author="lhofhansl" created="Thu, 6 Jun 2013 21:53:35 +0000"  >&lt;p&gt;And this (also from Kireet):&lt;br/&gt;
Also, I was looking at the stack below. From my reading of the code, the&lt;br/&gt;
HTable.batch() call will always cause the prefetch call to occur, which&lt;br/&gt;
will cause a new HTable object to get created. The constructor used in&lt;br/&gt;
creating a new thread pool. So every call to batch will create a new&lt;br/&gt;
thread? Or the HTable&apos;s thread pool never gets used as the pool is only&lt;br/&gt;
used for writes? I think I am missing something but just want to confirm.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: WAITING (on object monitor)
  at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
  at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.java:503)
  at org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:1309)
- locked &amp;lt;0x00000000e10cf830&amp;gt; (a org.apache.zookeeper.ClientCnxn$Packet)
  at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1036)
  at
org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.exists(RecoverableZooKeeper.java:172)
  at org.apache.hadoop.hbase.zookeeper.ZKUtil.checkExists(ZKUtil.java:450)
  at
org.apache.hadoop.hbase.zookeeper.ZooKeeperNodeTracker.checkIfBaseNodeAvailable(ZooKeeperNodeTracker.java:208)
  at
org.apache.hadoop.hbase.zookeeper.RootRegionTracker.waitRootRegionLocation(RootRegionTracker.java:77)
  at
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:874)
  at
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegionInMeta(HConnectionManager.java:987)
  at
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:885)
  at
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:846)
  at org.apache.hadoop.hbase.client.HTable.finishSetup(HTable.java:234)
  at org.apache.hadoop.hbase.client.HTable.&amp;lt;init&amp;gt;(HTable.java:174)
  at
org.apache.hadoop.hbase.client.MetaScanner.metaScan(MetaScanner.java:160)
  at
org.apache.hadoop.hbase.client.MetaScanner.access$000(MetaScanner.java:54)
  at
org.apache.hadoop.hbase.client.MetaScanner$1.connect(MetaScanner.java:133)
  at
org.apache.hadoop.hbase.client.MetaScanner$1.connect(MetaScanner.java:130)
  at
org.apache.hadoop.hbase.client.HConnectionManager.execute(HConnectionManager.java:383)
  at
org.apache.hadoop.hbase.client.MetaScanner.metaScan(MetaScanner.java:130)
  at
org.apache.hadoop.hbase.client.MetaScanner.metaScan(MetaScanner.java:105)
  at
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.prefetchRegionCache(HConnectionManager.java:947)
  at
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegionInMeta(HConnectionManager.java:1002)
- locked &amp;lt;0x00000000e882f778&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
  at
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:889)
  at
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:846)
  at
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.processBatchCallback(HConnectionManager.java:1533)
  at
org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.processBatch(HConnectionManager.java:1418)
  at org.apache.hadoop.hbase.client.HTable.batch(HTable.java:702)
  at org.apache.hadoop.hbase.client.HTable.get(HTable.java:671)
  at
org.apache.hadoop.hbase.client.HTablePool$PooledHTable.get(HTablePool.java:367)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13677600" author="lhofhansl" created="Thu, 6 Jun 2013 22:24:53 +0000"  >&lt;p&gt;I see. Was going to note that the repeated meta scans do not happen after the regions are cached in the client.&lt;/p&gt;

&lt;p&gt;Should I close this one then?&lt;/p&gt;</comment>
                            <comment id="13677604" author="kireet" created="Thu, 6 Jun 2013 22:29:54 +0000"  >&lt;p&gt;I think &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8655&quot; title=&quot;Backport to 94 - HBASE-8346(Prefetching .META. rows in case only when useCache is set to true) &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8655&quot;&gt;&lt;del&gt;HBASE-8655&lt;/del&gt;&lt;/a&gt; addresses most of this problem (repeated locateRegionInMeta calls). I&apos;ll leave it at your discretion on whether to close this issue as it&apos;s not exactly the same. I think if this method is called with any regularity, someone should probably double check the code and ensure thread creation is not happening unless absolutely necessary. &lt;/p&gt;</comment>
                            <comment id="13719245" author="lhofhansl" created="Thu, 25 Jul 2013 05:23:54 +0000"  >&lt;p&gt;Looking at the code (0.94)... We &lt;b&gt;are&lt;/b&gt; creating a new HTable (along with a new HConnectionImplementation and a new ThreadPool) on each meta scan. We do that even when the call originates from an HConnectionImplementation, and even though the threadpool as actually never used.&lt;/p&gt;

&lt;p&gt;I think we can improve upon this at least in some cases. Reopening.&lt;/p&gt;</comment>
                            <comment id="13719250" author="lhofhansl" created="Thu, 25 Jul 2013 05:30:34 +0000"  >&lt;p&gt;Also note that the ThreadPool in HTable is created with 1 core thread. So I believe that one thread is created here unnecessarily.&lt;br/&gt;
I just ran TestFromClientSide with the HTable&apos;s threadpool just forced to null in metascan, and it worked fine (metascan just calls getRowOrBefore and getScanner on the HTable object, neither of which actually use the thread pool.&lt;/p&gt;

&lt;p&gt;I&apos;ll make a patch tomorrow that will do two things:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;always force the HTable&apos;s thread pool used in metascan to null (saves the creation of the pool itself and one unnecessary thread)&lt;/li&gt;
	&lt;li&gt;allow the HConnection to be passed to metascan (optionally). So if called from an HConnection, that connection can be used directly (saves expensive creation/caching of a new HConnection).&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13720010" author="lhofhansl" created="Thu, 25 Jul 2013 20:31:53 +0000"  >&lt;p&gt;Here&apos;s a trunk patch illustrating the patch.&lt;br/&gt;
In metascan now we never instantiate a threadpool, and we have we use an existing HConnection.&lt;/p&gt;

&lt;p&gt;HTable now has to allow for initialization with a null threadpool (which was allowed through one of the constructors, but not the other)&lt;/p&gt;</comment>
                            <comment id="13720011" author="lhofhansl" created="Thu, 25 Jul 2013 20:32:56 +0000"  >&lt;p&gt;I ran TestFromClientSide. Let&apos;s see whether this breaks any other tests.&lt;/p&gt;</comment>
                            <comment id="13720170" author="hadoopqa" created="Thu, 25 Jul 2013 22:47:34 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12594261/8698-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12594261/8698-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6468//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13720227" author="lhofhansl" created="Thu, 25 Jul 2013 23:26:25 +0000"  >&lt;p&gt;Fixing long line.&lt;br/&gt;
I think this is an important client side cleanup. Creating a new threadpool and (potentially) a new HConnection for each single meta scan was not good.&lt;/p&gt;

&lt;p&gt;Comments? Concerns?&lt;/p&gt;</comment>
                            <comment id="13720310" author="stack" created="Fri, 26 Jul 2013 00:54:52 +0000"  >&lt;p&gt;Looks like an improvement.&lt;/p&gt;

&lt;p&gt;Can we do anything about HTable taking an HConnection.  That seems way convoluted and messes w/ layering.&lt;/p&gt;

&lt;p&gt;Ditto on MetaScanner and then in HConnectionManager, we have metaScan (and over in the catalog package other meta operators).&lt;/p&gt;

&lt;p&gt;The MetaScanner doing a table open and close per op was done because notion is that new HTable is cheap (and if not, lets fix).  It also cleaned up rationalizing whats going on in this class making sure we did clean up per call.&lt;/p&gt;

&lt;p&gt;Yeah, more perversity in that a new HTable on construction creates another to scan Meta.&lt;/p&gt;

&lt;p&gt;I&apos;d be +1 on commit.&lt;/p&gt;
</comment>
                            <comment id="13720321" author="hadoopqa" created="Fri, 26 Jul 2013 01:03:20 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12594291/8698-trunk-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12594291/8698-trunk-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6471//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13720393" author="lhofhansl" created="Fri, 26 Jul 2013 04:30:02 +0000"  >&lt;p&gt;Yeah, the layer convolution is a pet peeve of mine. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6580&quot; title=&quot;Deprecate HTablePool in favor of HConnection.getTable(...)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6580&quot;&gt;&lt;del&gt;HBASE-6580&lt;/del&gt;&lt;/a&gt; is attempt, maybe it is also time to get closure on that one; would allow us to finally deprecate the HTablePool abomination &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Why does HTable call &lt;tt&gt;this.connection.locateRegion(tableName, HConstants.EMPTY_START_ROW);&lt;/tt&gt; upon creation (I had moved it into finishSetup a while ago, but it was called in the constructors before). Is it to ensure the table exists? Or to allow prefetching of regions?&lt;/p&gt;

&lt;p&gt;Let me mull this one over for another day or so, if I cannot think of any further improvement I&apos;ll commit this.&lt;/p&gt;</comment>
                            <comment id="13720402" author="lhofhansl" created="Fri, 26 Jul 2013 04:49:55 +0000"  >&lt;p&gt;Yeah, without that call to locateRegion, creation of an HTable does not fail if the table does not exist.&lt;/p&gt;</comment>
                            <comment id="13721008" author="stack" created="Fri, 26 Jul 2013 18:04:11 +0000"  >&lt;p&gt;I&apos;d be up for spending ten minutes around a white board.&lt;/p&gt;

&lt;p&gt;Prefetching is useless.  Shouldn&apos;t be encouraged. &lt;/p&gt;</comment>
                            <comment id="13721288" author="lhofhansl" created="Fri, 26 Jul 2013 22:10:38 +0000"  >&lt;p&gt;The 0.94 will be quite a bit different.&lt;/p&gt;</comment>
                            <comment id="13721411" author="lhofhansl" created="Sat, 27 Jul 2013 00:06:31 +0000"  >&lt;p&gt;Here&apos;s a 0.94 patch.&lt;br/&gt;
Now looking around a bit more. This all isn&apos;t right in HBaseAdmin either.&lt;br/&gt;
I&apos;ll have a larger patch soon (for trunk and 0.94 fixing HBaseAdmin as well).&lt;/p&gt;</comment>
                            <comment id="13721428" author="lhofhansl" created="Sat, 27 Jul 2013 00:20:59 +0000"  >&lt;p&gt;Version that also fixes HBaseAdmin:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Do not close up the HConnection if it was passed to HBaseAdmin (that was a bug!)&lt;/li&gt;
	&lt;li&gt;Use the HBaseAdmin&apos;s HConnection for meta scans.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I&apos;ll do a similar path for trunk.&lt;/p&gt;</comment>
                            <comment id="13721441" author="lhofhansl" created="Sat, 27 Jul 2013 00:35:33 +0000"  >&lt;p&gt;Same cleanup for trunk.&lt;br/&gt;
Please have a look, I would like to commit this version (after a test run)&lt;/p&gt;</comment>
                            <comment id="13721453" author="yuzhihong@gmail.com" created="Sat, 27 Jul 2013 00:55:27 +0000"  >&lt;p&gt;In HTable.java :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HTable(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] tableName, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; HConnection connection,
       &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ExecutorService pool) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
-    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (pool == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || pool.isShutdown()) {
-      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Pool is &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; or shut down.&quot;&lt;/span&gt;);
-    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We don&apos;t need the above check ?&lt;/p&gt;

&lt;p&gt;Otherwise patch looks good.&lt;/p&gt;</comment>
                            <comment id="13721489" author="hadoopqa" created="Sat, 27 Jul 2013 01:48:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12594492/8698-trunk-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12594492/8698-trunk-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestAtomicOperation&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6490//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13721521" author="lhofhansl" created="Sat, 27 Jul 2013 04:24:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;We don&apos;t need the above check ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It was inconsistently enforced anyway (one constructor checked, the other did not). In some situations such as this one it is OK to set the ExecutorService to null.&lt;br/&gt;
We also do not typically null-check all the arguments. If the ExecutorService was closed before, we&apos;d find out upon the first usage.&lt;/p&gt;

&lt;p&gt;So, I&apos;d say we remove it. Makes this use case here easier to handle, too.&lt;/p&gt;</comment>
                            <comment id="13721526" author="yuzhihong@gmail.com" created="Sat, 27 Jul 2013 05:02:36 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13721529" author="lhofhansl" created="Sat, 27 Jul 2013 05:21:43 +0000"  >&lt;p&gt;Thanks Ted and Stack. Running the 0.94 test suite now, just to be safe (as the patch is a bit different). Will commit if no issue was found.&lt;/p&gt;</comment>
                            <comment id="13721551" author="lhofhansl" created="Sat, 27 Jul 2013 06:49:29 +0000"  >&lt;p&gt;0.94 test run:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Results :&lt;/p&gt;

&lt;p&gt;Failed tests:   testDeleteEditUnknownColumnFamilyAndOrTable(org.apache.hadoop.hbase.client.TestAdmin)&lt;/p&gt;

&lt;p&gt;Tests run: 1359, Failures: 1, Errors: 0, Skipped: 13&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ran TestAdmin a few times in a loop:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Running org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
Tests run: 42, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 311.167 sec&lt;/p&gt;

&lt;p&gt;Results :&lt;/p&gt;

&lt;p&gt;Tests run: 42, Failures: 0, Errors: 0, Skipped: 0&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Going to commit this tomorrow.&lt;/p&gt;</comment>
                            <comment id="13721886" author="lhofhansl" created="Sun, 28 Jul 2013 06:04:27 +0000"  >&lt;p&gt;Committed to 0.94, 0.95, and trunk.&lt;br/&gt;
Thanks for the reviews.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12594488" name="8698-0.94-v2.txt" size="21720" author="lhofhansl" created="Sat, 27 Jul 2013 00:20:59 +0000"/>
                            <attachment id="12594486" name="8698-0.94.txt" size="17721" author="lhofhansl" created="Sat, 27 Jul 2013 00:06:31 +0000"/>
                            <attachment id="12594291" name="8698-trunk-v2.txt" size="9661" author="lhofhansl" created="Thu, 25 Jul 2013 23:26:25 +0000"/>
                            <attachment id="12594492" name="8698-trunk-v3.txt" size="14317" author="lhofhansl" created="Sat, 27 Jul 2013 00:35:33 +0000"/>
                            <attachment id="12594261" name="8698-trunk.txt" size="9533" author="lhofhansl" created="Thu, 25 Jul 2013 20:31:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 6 Jun 2013 21:37:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>331684</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 20 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1l7yn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>332015</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>