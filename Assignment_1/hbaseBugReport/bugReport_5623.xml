<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:29:28 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5623/HBASE-5623.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5623] Race condition when rolling the HLog and hlogFlush</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5623</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;When doing a ycsb test with a large number of handlers (regionserver.handler.count=60), I get the following exceptions:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Caused by: org.apache.hadoop.ipc.RemoteException: java.io.IOException: java.lang.NullPointerException
	at org.apache.hadoop.io.SequenceFile$Writer.getLength(SequenceFile.java:1099)
	at org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogWriter.getLength(SequenceFileLogWriter.java:314)
	at org.apache.hadoop.hbase.regionserver.wal.HLog.syncer(HLog.java:1291)
	at org.apache.hadoop.hbase.regionserver.wal.HLog.sync(HLog.java:1388)
	at org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchPut(HRegion.java:2192)
	at org.apache.hadoop.hbase.regionserver.HRegion.put(HRegion.java:1985)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.multi(HRegionServer.java:3400)
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.hadoop.hbase.ipc.WritableRpcEngine$Server.call(WritableRpcEngine.java:366)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1351)

	at org.apache.hadoop.hbase.ipc.HBaseClient.call(HBaseClient.java:920)
	at org.apache.hadoop.hbase.ipc.WritableRpcEngine$Invoker.invoke(WritableRpcEngine.java:152)
	at $Proxy1.multi(Unknown Source)
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation$3$1.call(HConnectionManager.java:1691)
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation$3$1.call(HConnectionManager.java:1689)
	at org.apache.hadoop.hbase.client.ServerCallable.withoutRetries(ServerCallable.java:214)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	java.lang.NullPointerException
		at org.apache.hadoop.io.SequenceFile$Writer.checkAndWriteSync(SequenceFile.java:1026)
		at org.apache.hadoop.io.SequenceFile$Writer.append(SequenceFile.java:1068)
		at org.apache.hadoop.io.SequenceFile$Writer.append(SequenceFile.java:1035)
		at org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogWriter.append(SequenceFileLogWriter.java:279)
		at org.apache.hadoop.hbase.regionserver.wal.HLog$LogSyncer.hlogFlush(HLog.java:1237)
		at org.apache.hadoop.hbase.regionserver.wal.HLog.syncer(HLog.java:1271)
		at org.apache.hadoop.hbase.regionserver.wal.HLog.sync(HLog.java:1391)
		at org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchPut(HRegion.java:2192)
		at org.apache.hadoop.hbase.regionserver.HRegion.put(HRegion.java:1985)
		at org.apache.hadoop.hbase.regionserver.HRegionServer.multi(HRegionServer.java:3400)
		at sun.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
		at java.lang.reflect.Method.invoke(Method.java:597)
		at org.apache.hadoop.hbase.ipc.WritableRpcEngine$Server.call(WritableRpcEngine.java:366)
		at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1351)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It seems the root cause of the issue is that we open a new log writer and close the old one at HLog#rollWriter() holding the updateLock, but the other threads doing syncer() calls&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; 
logSyncerThread.hlogFlush(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;without holding the updateLock. LogSyncer only synchronizes against concurrent appends and flush(), but not on the passed writer, which can be closed already by rollWriter(). In this case, since SequenceFile#Writer.close() sets it&apos;s out field as null, we get the NPE. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12547728">HBASE-5623</key>
            <summary>Race condition when rolling the HLog and hlogFlush</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="enis">Enis Soztutar</assignee>
                                    <reporter username="enis">Enis Soztutar</reporter>
                        <labels>
                    </labels>
                <created>Fri, 23 Mar 2012 01:22:07 +0000</created>
                <updated>Fri, 12 Oct 2012 05:35:00 +0000</updated>
                            <resolved>Mon, 26 Mar 2012 20:43:04 +0000</resolved>
                                    <version>0.94.0</version>
                                    <fixVersion>0.94.0</fixVersion>
                                    <component>wal</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13236261" author="enis" created="Fri, 23 Mar 2012 01:31:28 +0000"  >&lt;p&gt;Attaching a simple patch, which seems to solve the problem. This does wrap the call  logSyncerThread.hlogFlush(this.writer) to obtain the updateLock. Otherwise, I guess we can also lose wal edits, since the writer cannot append the pendingWrites. &lt;/p&gt;</comment>
                            <comment id="13236278" author="zhihyu@ebaysf.com" created="Fri, 23 Mar 2012 02:04:43 +0000"  >&lt;p&gt;Patch makes sense.&lt;/p&gt;</comment>
                            <comment id="13236293" author="hadoopqa" created="Fri, 23 Mar 2012 02:56:38 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12519570/HBASE-5623_v0.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12519570/HBASE-5623_v0.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1271//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1271//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1271//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1271//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1271//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1271//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13236294" author="stack" created="Fri, 23 Mar 2012 02:58:17 +0000"  >&lt;p&gt;+1 on patch.  Odd we&apos;ve not seen this before.&lt;/p&gt;</comment>
                            <comment id="13236295" author="stack" created="Fri, 23 Mar 2012 02:58:42 +0000"  >&lt;p&gt;How&apos;d you make it happen Enis?  Could we write a unit test to surface it?&lt;/p&gt;</comment>
                            <comment id="13236322" author="lhofhansl" created="Fri, 23 Mar 2012 04:41:55 +0000"  >&lt;p&gt;This is the same I&apos;ve seen in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5336&quot; title=&quot;Spurious exceptions in HConnectionImplementation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5336&quot;&gt;&lt;del&gt;HBASE-5336&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13236334" author="stack" created="Fri, 23 Mar 2012 05:14:25 +0000"  >&lt;p&gt;This patch is Enis&apos;s patch plus a test.  It doesn&apos;t seem to fix the issue (it makes it a little better as far as I can tell but the test NPEs easy).&lt;/p&gt;

&lt;p&gt;This is a good find Enis.  Looks like its easy to NPE in here.&lt;/p&gt;</comment>
                            <comment id="13236379" author="hadoopqa" created="Fri, 23 Mar 2012 06:07:00 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12519585/5623v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12519585/5623v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1272//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1272//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1272//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1272//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1272//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1272//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13236771" author="zhihyu@ebaysf.com" created="Fri, 23 Mar 2012 16:48:10 +0000"  >&lt;p&gt;I looped TestLogRollingNoCluster 20 times and didn&apos;t see NPE.&lt;/p&gt;</comment>
                            <comment id="13236853" author="lhofhansl" created="Fri, 23 Mar 2012 17:59:37 +0000"  >&lt;p&gt;Looking at SequenceFileLogWriter, I notice that other methods on it catch Exception or even NullPointerException (see close() and sync()).&lt;/p&gt;

&lt;p&gt;If we want maximum concurrency here, we need to do the same we do for writer.sync(). I.e. try without lock held, if failing get the lock and retry, along with SequenceFileLogWriter.getLength() catching Exception and retrow as IOException.&lt;/p&gt;</comment>
                            <comment id="13236870" author="stack" created="Fri, 23 Mar 2012 18:13:29 +0000"  >&lt;p&gt;Yeah, I should make the test fail on these but its kinda hard to put your fingers in there.  I was seeing the NPEs running it up in eclipse.  I need to amend the test so if fails outright on NPE.&lt;/p&gt;</comment>
                            <comment id="13236889" author="enis" created="Fri, 23 Mar 2012 18:27:16 +0000"  >&lt;p&gt;@Stack, thanks for the unit test. I&apos;ll test the the unit test with and without the patch today. Normally, it is very easy to replicate this bug. I just set up a 4 node cluster with Hadoop-1.0.1, and run ycsb with -load -threads 30.  &lt;/p&gt;

&lt;p&gt;@Lars&lt;br/&gt;
Yes, it is the same with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5336&quot; title=&quot;Spurious exceptions in HConnectionImplementation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5336&quot;&gt;&lt;del&gt;HBASE-5336&lt;/del&gt;&lt;/a&gt;. I had searched for the exception but did not find that issue. Anyway I&apos;ll close that one as duplicate. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If we want maximum concurrency here, we need to do the same we do for writer.sync(). I.e. try without lock held, if failing get the lock and retry, along with SequenceFileLogWriter.getLength() catching Exception and retrow as IOException.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes we can do that, but we cannot do this double-checking for the logSyncerThread.hlogFlush(this.writer) since it is not idempotent, so in any case we should be holding the updateLock, no? From my understanding you are suggesting that we sync on the hlogFlush, and do the retry mechanism in writer.sync and getLength(), catching all the exceptions in the first try, right? &lt;/p&gt;</comment>
                            <comment id="13236907" author="lhofhansl" created="Fri, 23 Mar 2012 18:39:50 +0000"  >&lt;p&gt;@Enis: For logSyncerThread.hlogFlush(this.writer) we need to do that in that method, LogSyncer is non-static, so we can use the HLog&apos;s updateLock in its methods.&lt;/p&gt;</comment>
                            <comment id="13236920" author="lhofhansl" created="Fri, 23 Mar 2012 18:46:25 +0000"  >&lt;p&gt;I think this needs to be in 0.94.0.&lt;/p&gt;</comment>
                            <comment id="13237141" author="lhofhansl" created="Fri, 23 Mar 2012 21:20:26 +0000"  >&lt;p&gt;How about this?&lt;br/&gt;
Could possibly generally synchronize in hLogFlush, since we&apos;re just appending and not sync&apos;ing.&lt;/p&gt;</comment>
                            <comment id="13237145" author="lhofhansl" created="Fri, 23 Mar 2012 21:21:30 +0000"  >&lt;p&gt;Sorry for the naming... Should&apos;ve named it v3 or test or something.&lt;/p&gt;</comment>
                            <comment id="13237157" author="stack" created="Fri, 23 Mar 2012 21:31:05 +0000"  >&lt;p&gt;Seems fine.  Edit your comments.  Does it pass the test?  Do you want to include the test?   Do you think this will slow writes?  Should we check for null writer here: &apos;+      return this.writer.getLength();&apos;&lt;/p&gt;

&lt;p&gt;This seems like a catch that is very broad:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException io) {
+        &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; again is lock held&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can we narrow it at all?  Would an NPE come up here?&lt;/p&gt;

&lt;p&gt;This log message is going to freak out the chicken littles out there: &apos;+          LOG.debug(&quot;Log roll failed&quot;, io);&apos;  Can you do some amelioration?  Something like, failed this time but we&apos;ll be back soon to retry?&lt;/p&gt;</comment>
                            <comment id="13237161" author="lhofhansl" created="Fri, 23 Mar 2012 21:37:37 +0000"  >&lt;p&gt;Lemme include the test and run it a few time, and cleanup the comments. Just wanted to tease out the general strategy.&lt;/p&gt;</comment>
                            <comment id="13237163" author="lhofhansl" created="Fri, 23 Mar 2012 21:40:06 +0000"  >&lt;p&gt;re: The broad exception. The worst that can happen is that we try again. I think if there is any IOException we want try again.&lt;/p&gt;</comment>
                            <comment id="13237166" author="lhofhansl" created="Fri, 23 Mar 2012 21:41:48 +0000"  >&lt;p&gt;Sorry one more: checking this.writer against null won&apos;t work unless we lock out other threads that could set it to null.&lt;/p&gt;</comment>
                            <comment id="13237179" author="zhihyu@ebaysf.com" created="Fri, 23 Mar 2012 21:55:09 +0000"  >&lt;p&gt;Is the following correct ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt;(HLog.&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updateLock) {
+          &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Entry e : pending) {
+            writer.append(e);
+          }
+        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We may have appended some entries before retry. Should we remember which Entry caused exception and continue ?&lt;/p&gt;</comment>
                            <comment id="13237181" author="lhofhansl" created="Fri, 23 Mar 2012 21:56:41 +0000"  >&lt;p&gt;I just thought about and added coded that uses an iterator and remembers the last entry. But then I realized that these are all idempotent operations and adding some of them into the log twice should have no bad effect (besides creating two identical versions of a KV)&lt;/p&gt;</comment>
                            <comment id="13237211" author="hadoopqa" created="Fri, 23 Mar 2012 22:21:10 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12519720/5623.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12519720/5623.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1283//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1283//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1283//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1283//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1283//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1283//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13237229" author="lhofhansl" created="Fri, 23 Mar 2012 22:35:42 +0000"  >&lt;p&gt;Ran the about 300 times now, no failure.&lt;/p&gt;</comment>
                            <comment id="13237230" author="enis" created="Fri, 23 Mar 2012 22:36:26 +0000"  >&lt;p&gt;While running the unit test, I also noticed that in some cases, the syncer() still holds the old writer reference, and holding the updateLock does not guarantee that the other thread&apos;s writer pointer is updated to the nextWriter. I had changed Writer to be volatile but that did not help either. So, I use AtomicReference for managing the Writer pointer. &lt;/p&gt;

&lt;p&gt;Lars, I have merged my patch with yours for the second-tries, and modified Stack&apos;s unit test so that it fails nearly everytime on trunk, and once in 10 runs with patch v2. &lt;/p&gt;</comment>
                            <comment id="13237234" author="enis" created="Fri, 23 Mar 2012 22:40:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;Ran the about 300 times now, no failure.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Lars, did you run the Stack&apos;s patch as it is? It does not fail also in trunk, but the problem is that the threads exit with NPE, and it gets written to the log, but the test passes. &lt;/p&gt;</comment>
                            <comment id="13237269" author="enis" created="Fri, 23 Mar 2012 23:12:55 +0000"  >&lt;p&gt;@Ted, &lt;br/&gt;
Forgot to git add. Also applied your suggestion. &lt;/p&gt;</comment>
                            <comment id="13237279" author="lhofhansl" created="Fri, 23 Mar 2012 23:17:40 +0000"  >&lt;p&gt;We&apos;re have a bunch of conflicting patches now &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Let&apos;s take Enis&apos; one as the authoritative one.&lt;/p&gt;</comment>
                            <comment id="13237292" author="zhihyu@ebaysf.com" created="Fri, 23 Mar 2012 23:28:25 +0000"  >&lt;p&gt;For this log at line 1320:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+          LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Log roll failed&quot;&lt;/span&gt;, ex);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;my script detects NPE in test output in iteration 3.&lt;br/&gt;
Since the above doesn&apos;t signify failure, I changed it to:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!(ex &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; NullPointerException)) LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Log roll failed&quot;&lt;/span&gt;, ex);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13237293" author="lhofhansl" created="Fri, 23 Mar 2012 23:28:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;holding the updateLock does not guarantee that the other thread&apos;s writer pointer is updated to the nextWriter&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Are you sure about this? This seems to be the main objective of the updateLock. I don&apos;t see any spot where we change this.writer without the updateLock held.&lt;br/&gt;
AtomicReference should not be needed (IMHO). Also not a big fan of catching NPE, in your scenario it also should not be needed (although I could be mistaken).&lt;/p&gt;

&lt;p&gt;OK... Lemme do one: I&apos;ll integrate my fixed up patch without your new test. I&apos;ll run locally for a while. If it&apos;s fine I&apos;ll post the patch here and you can poke holes in it. Sounds fair?&lt;/p&gt;</comment>
                            <comment id="13237304" author="hadoopqa" created="Fri, 23 Mar 2012 23:43:35 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12519736/HBASE-5623_v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12519736/HBASE-5623_v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1286//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1286//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1286//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1286//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1286//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1286//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13237306" author="zhihyu@ebaysf.com" created="Fri, 23 Mar 2012 23:46:52 +0000"  >&lt;p&gt;Ran Stack&apos;s test 100 times with the change mentioned @ 23/Mar/12 23:28&lt;br/&gt;
No failure.&lt;/p&gt;</comment>
                            <comment id="13237316" author="lhofhansl" created="Fri, 23 Mar 2012 23:56:30 +0000"  >&lt;p&gt;This one works for me.&lt;br/&gt;
The observation is that only with the updateLock held are we guaranteed that this.writer is not null (as Enis pointed out correctly).&lt;/p&gt;

&lt;p&gt;So we can get a writer with the lock held, it is known to be not-null. If that writer has been closed we get an IOException, in which case we try again with the instance writer and the lock held.&lt;/p&gt;

&lt;p&gt;Not entirely pretty, but avoids the AtomicReference everywhere.&lt;/p&gt;</comment>
                            <comment id="13237343" author="hadoopqa" created="Sat, 24 Mar 2012 00:29:12 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12519746/HBASE-5623_v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12519746/HBASE-5623_v5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.wal.TestHLog&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1288//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1288//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1288//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1288//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1288//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1288//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13237375" author="enis" created="Sat, 24 Mar 2012 01:04:05 +0000"  >&lt;p&gt;Thanks Lars for the patch. I retried again based on your comment, and was not able to reproduce the condition necessinating AtomicRef&apos;s. So, I just added one more check for in the unit test, and added a volatile to logRollRunning to your patch (5623-suggestion).&lt;/p&gt;

&lt;p&gt;I have tested this with the unit test, but I am not able to test it with the ycsb cluster. I&apos;ll do that Monday. Until then, we can go with this patch, if you are comfortable. &lt;/p&gt;</comment>
                            <comment id="13237379" author="lhofhansl" created="Sat, 24 Mar 2012 01:13:33 +0000"  >&lt;p&gt;OK. Looks like I am not going to roll the RC today after all. Still 5 jiras open against 0.94.0, so Monday is fine.&lt;br/&gt;
I might think about this a bit more, it&apos;s a bit messy now and hard to change in the future. (but I don&apos;t think we need to change this in principle).&lt;br/&gt;
It&apos;s mostly because we want to be able do the expensive IO without the lock held.&lt;/p&gt;</comment>
                            <comment id="13237421" author="zhihyu@ebaysf.com" created="Sat, 24 Mar 2012 04:01:35 +0000"  >&lt;p&gt;Re-attaching Enis&apos; patch for Hadoop QA&lt;/p&gt;</comment>
                            <comment id="13237422" author="lhofhansl" created="Sat, 24 Mar 2012 04:04:42 +0000"  >&lt;p&gt;Here&apos;s what I believe is a cleaner patch.&lt;br/&gt;
Includes Enis&apos; test and volatile change.&lt;/p&gt;</comment>
                            <comment id="13237423" author="lhofhansl" created="Sat, 24 Mar 2012 04:13:09 +0000"  >&lt;p&gt;Slightly simpler even.&lt;br/&gt;
Last patch today... Promised.&lt;/p&gt;</comment>
                            <comment id="13237425" author="zhihyu@ebaysf.com" created="Sat, 24 Mar 2012 04:26:14 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-          &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer.sync();
+          &lt;span class=&quot;code-comment&quot;&gt;// HBASE-4387, HBASE-5623, retry with updateLock held
&lt;/span&gt;+          tempWriter = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer;
+          logSyncerThread.hlogFlush(tempWriter, pending);
+          tempWriter.sync();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;do we still need tempWriter ? The above is within synchronized (this.updateLock).&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (tempWriter.getLength() &amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.logrollsize) {
+            requestLogRoll();
+          }
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException x) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is the above catch intended to handle NPE ? NPE was handled in an earlier patch.&lt;/p&gt;</comment>
                            <comment id="13237428" author="lhofhansl" created="Sat, 24 Mar 2012 04:33:29 +0000"  >&lt;p&gt;@Ted: Yes. See the changes to SequenceFileLogWriter in the same patch. Basically my reasoning is to avoid leaking up NPE from SequenceFileLogWriter. close() already had an NPE check.&lt;/p&gt;</comment>
                            <comment id="13237429" author="lhofhansl" created="Sat, 24 Mar 2012 04:34:27 +0000"  >&lt;p&gt;Oh and re: tempWriter, yes it is used below in getLength(), so it&apos;s updated here.&lt;/p&gt;</comment>
                            <comment id="13237434" author="zhihyu@ebaysf.com" created="Sat, 24 Mar 2012 04:46:50 +0000"  >&lt;p&gt;I see.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException x) {
+          &lt;span class=&quot;code-comment&quot;&gt;// Ignore.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should we verify that x.getCause() is NPE ?&lt;/p&gt;

&lt;p&gt;My first comment about tempWriter is that this.writer can be used directly since the code is within synchronized block.&lt;/p&gt;</comment>
                            <comment id="13237436" author="hadoopqa" created="Sat, 24 Mar 2012 04:49:24 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12519779/HBASE-5623_v6-alt.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12519779/HBASE-5623_v6-alt.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1294//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1294//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1294//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1294//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1294//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1294//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13237437" author="lhofhansl" created="Sat, 24 Mar 2012 04:52:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should we verify that x.getCause() is NPE ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think so. Any IOException here warrants a retry.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;My first comment about tempWriter is that this.writer can be used directly since the code is within synchronized block.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, but it doesn&apos;t matter right. Since at this point the existing tempWriter most likely bad, it needs to be updated to the current one (for the getLength() check below). This way try and retry are the same.&lt;/p&gt;</comment>
                            <comment id="13237439" author="hadoopqa" created="Sat, 24 Mar 2012 04:54:59 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12519780/5623-v7.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12519780/5623-v7.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1295//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1295//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1295//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1295//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1295//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1295//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13237442" author="hadoopqa" created="Sat, 24 Mar 2012 05:11:34 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12519781/5623-v8.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12519781/5623-v8.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.TestForceCacheImportantBlocks&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1296//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1296//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1296//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1296//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1296//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1296//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13237444" author="zhihyu@ebaysf.com" created="Sat, 24 Mar 2012 05:15:59 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException x) {
+          &lt;span class=&quot;code-comment&quot;&gt;// Ignore.
&lt;/span&gt;+          &lt;span class=&quot;code-comment&quot;&gt;// Writer might have been closed.
&lt;/span&gt;+          &lt;span class=&quot;code-comment&quot;&gt;// In any &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt;, we either don&apos;t have to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; anything,
&lt;/span&gt;+          &lt;span class=&quot;code-comment&quot;&gt;// or the log will be rolled the next time.
&lt;/span&gt;         }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above code is in last hunk of the patch. It is not related to retry.&lt;br/&gt;
At least we should log a short sentence in the above catch block.&lt;/p&gt;</comment>
                            <comment id="13237658" author="lhofhansl" created="Sat, 24 Mar 2012 20:31:27 +0000"  >&lt;p&gt;Was going by the assumption that an IOException here is actually not bad.&lt;br/&gt;
Either the writer was concurrently closed (which means it was rolled as well), or any persistent HDFS problem will detected on next write attempt.&lt;/p&gt;

&lt;p&gt;Could LOG.debug something like: &quot;Informational: Log roll failed. Will be retried.&quot;&lt;/p&gt;</comment>
                            <comment id="13237713" author="lhofhansl" created="Sat, 24 Mar 2012 22:09:40 +0000"  >&lt;p&gt;Any strong opinions other than the log message?&lt;br/&gt;
This is the last 0.94.0 issue. I think my latest proposed patch fixes the problem while not impacting maintainability.&lt;/p&gt;</comment>
                            <comment id="13237714" author="yuzhihong@gmail.com" created="Sat, 24 Mar 2012 22:24:09 +0000"  >&lt;p&gt;Adding LOG.debug should be fine.&lt;/p&gt;</comment>
                            <comment id="13237746" author="lhofhansl" created="Sun, 25 Mar 2012 00:30:16 +0000"  >&lt;p&gt;Will wait for Enis to have a look at latest patch.&lt;/p&gt;</comment>
                            <comment id="13238534" author="lhofhansl" created="Mon, 26 Mar 2012 16:29:05 +0000"  >&lt;p&gt;@Enis: Please have a look when you get a chance. I would like to cut an RC of 0.94 today.&lt;/p&gt;</comment>
                            <comment id="13238664" author="lhofhansl" created="Mon, 26 Mar 2012 18:40:53 +0000"  >&lt;p&gt;I do not want to wait with the RC any longer.&lt;br/&gt;
@Stack or @Ted: Please have a look at the last patch (will add LOG.debug message as indicated in the last comment).&lt;/p&gt;</comment>
                            <comment id="13238675" author="yuzhihong@gmail.com" created="Mon, 26 Mar 2012 18:53:18 +0000"  >&lt;p&gt;Last patch should be good to go.&lt;/p&gt;</comment>
                            <comment id="13238680" author="stack" created="Mon, 26 Mar 2012 18:59:36 +0000"  >&lt;p&gt;Is this right?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    Writer tempWriter;
     &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updateLock) {
       &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.closed) &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
+      tempWriter = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer; &lt;span class=&quot;code-comment&quot;&gt;// guaranteed non-&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
&lt;/span&gt;     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When we go to use tempWriter, it may be closed.  We&apos;re fine w/ that?  We&apos;ll get an IOE about it being closed....&lt;/p&gt;

&lt;p&gt;Yeah, add a log here instead:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException x) {
+          &lt;span class=&quot;code-comment&quot;&gt;// Ignore.
&lt;/span&gt;+          &lt;span class=&quot;code-comment&quot;&gt;// Writer might have been closed.
&lt;/span&gt;+          &lt;span class=&quot;code-comment&quot;&gt;// In any &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt;, we either don&apos;t have to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; anything,
&lt;/span&gt;+          &lt;span class=&quot;code-comment&quot;&gt;// or the log will be rolled the next time.
&lt;/span&gt;         }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m +1 on commit.  Its way to easy reproducing the NPE.  The changes in SequenceFileLogWriter are an improvement.  I&apos;m down w/ the retry on IOE (long as the retry is logged).&lt;/p&gt;

&lt;p&gt;Good stuff.&lt;/p&gt;</comment>
                            <comment id="13238689" author="lhofhansl" created="Mon, 26 Mar 2012 19:05:35 +0000"  >&lt;p&gt;Re: tempWriter. Yep, the idea is the &lt;b&gt;only&lt;/b&gt; error-condition for tempWriter is that it could have been closed.&lt;br/&gt;
I&apos;ll add LOG.debug(&quot;Log roll failed and will be retried. (This is not an error)&quot;)&lt;/p&gt;</comment>
                            <comment id="13238799" author="lhofhansl" created="Mon, 26 Mar 2012 20:43:04 +0000"  >&lt;p&gt;Committed to 0.94 and 0.96.&lt;/p&gt;</comment>
                            <comment id="13238800" author="lhofhansl" created="Mon, 26 Mar 2012 20:43:28 +0000"  >&lt;p&gt;Thanks for the patch Enis! And thanks for the reviews Stack and Ted.&lt;/p&gt;</comment>
                            <comment id="13238802" author="jdcryans" created="Mon, 26 Mar 2012 20:47:12 +0000"  >&lt;p&gt;Funny, I just saw that NPE for the first time in my testing.&lt;/p&gt;</comment>
                            <comment id="13238910" author="hudson" created="Mon, 26 Mar 2012 22:21:01 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #57 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/57/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/57/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5623&quot; title=&quot;Race condition when rolling the HLog and hlogFlush&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5623&quot;&gt;&lt;del&gt;HBASE-5623&lt;/del&gt;&lt;/a&gt; Race condition when rolling the HLog and hlogFlush (Enis Soztutar and LarsH) (Revision 1305549)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRollingNoCluster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13238938" author="enis" created="Mon, 26 Mar 2012 22:52:02 +0000"  >&lt;p&gt;Thanks Lars for pushing this. Just as a note, I just tested the final version of the patch on a 4 node cluster with ycsb -threads 100. No problems.  &lt;/p&gt;</comment>
                            <comment id="13238963" author="lhofhansl" created="Mon, 26 Mar 2012 23:12:02 +0000"  >&lt;p&gt;Good to know &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13239001" author="hudson" created="Mon, 26 Mar 2012 23:40:05 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #3 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/3/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/3/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5623&quot; title=&quot;Race condition when rolling the HLog and hlogFlush&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5623&quot;&gt;&lt;del&gt;HBASE-5623&lt;/del&gt;&lt;/a&gt; Race condition when rolling the HLog and hlogFlush (Enis Soztutar and LarsH) (Revision 1305549)&lt;/p&gt;

&lt;p&gt;     Result = ABORTED&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRollingNoCluster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13239213" author="hudson" created="Tue, 27 Mar 2012 06:06:07 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #151 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/151/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/151/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5623&quot; title=&quot;Race condition when rolling the HLog and hlogFlush&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5623&quot;&gt;&lt;del&gt;HBASE-5623&lt;/del&gt;&lt;/a&gt; Race condition when rolling the HLog and hlogFlush (Enis Soztutar and LarsH) (Revision 1305556)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRollingNoCluster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13240889" author="hudson" created="Thu, 29 Mar 2012 01:37:00 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2697 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2697/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2697/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5623&quot; title=&quot;Race condition when rolling the HLog and hlogFlush&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5623&quot;&gt;&lt;del&gt;HBASE-5623&lt;/del&gt;&lt;/a&gt; Race condition when rolling the HLog and hlogFlush (Enis Soztutar and LarsH) (Revision 1305556)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRollingNoCluster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12541165">HBASE-5336</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12519756" name="5623-suggestion.txt" size="8626" author="lhofhansl" created="Fri, 23 Mar 2012 23:56:30 +0000"/>
                            <attachment id="12519780" name="5623-v7.txt" size="10037" author="lhofhansl" created="Sat, 24 Mar 2012 04:04:42 +0000"/>
                            <attachment id="12519781" name="5623-v8.txt" size="9947" author="lhofhansl" created="Sat, 24 Mar 2012 04:13:09 +0000"/>
                            <attachment id="12519720" name="5623.txt" size="2322" author="lhofhansl" created="Fri, 23 Mar 2012 21:20:26 +0000"/>
                            <attachment id="12519585" name="5623v2.txt" size="6377" author="stack" created="Fri, 23 Mar 2012 05:14:23 +0000"/>
                            <attachment id="12519570" name="HBASE-5623_v0.patch" size="1247" author="enis" created="Fri, 23 Mar 2012 01:31:28 +0000"/>
                            <attachment id="12519736" name="HBASE-5623_v4.patch" size="11389" author="enis" created="Fri, 23 Mar 2012 22:36:26 +0000"/>
                            <attachment id="12519746" name="HBASE-5623_v5.patch" size="16652" author="enis" created="Fri, 23 Mar 2012 23:12:54 +0000"/>
                            <attachment id="12519779" name="HBASE-5623_v6-alt.patch" size="13396" author="zhihyu@ebaysf.com" created="Sat, 24 Mar 2012 04:01:33 +0000"/>
                            <attachment id="12519766" name="HBASE-5623_v6-alt.patch" size="13396" author="enis" created="Sat, 24 Mar 2012 01:04:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 23 Mar 2012 02:04:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>232825</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 38 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i06927:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34399</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>