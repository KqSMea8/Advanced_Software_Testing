<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:20:11 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11099/HBASE-11099.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11099] Two situations where we could open a region with smaller sequence number</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11099</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Recently I happened to run into code where we potentially could open region with smaller sequence number:&lt;/p&gt;

&lt;p&gt;1) Inside function: HRegion#internalFlushcache. This is due to we change the way WAL Sync where we use late binding(assign sequence number right before wal sync).&lt;br/&gt;
The flushSeqId may less than the change sequence number included in the flush which may cause later region opening code to use a smaller than expected sequence number when we reopen the region.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
flushSeqId = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.sequenceId.incrementAndGet();
...
mvcc.waitForRead(w);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2) HRegion#replayRecoveredEdits where we have following code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
...
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (coprocessorHost != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
            status.setStatus(&lt;span class=&quot;code-quote&quot;&gt;&quot;Running pre-WAL-restore hook in coprocessors&quot;&lt;/span&gt;);
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (coprocessorHost.preWALRestore(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.getRegionInfo(), key, val)) {
              &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; bypass &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; log entry, ignore it ...
&lt;/span&gt;              &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
            }
          }
...
          currentEditSeqId = key.getLogSeqNum();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 
&lt;p&gt;If coprocessor skip some tail WALEdits, then the function will return smaller currentEditSeqId. In the end, a region may also open with a smaller sequence number. This may cause data loss because Master may record a larger flushed sequence Id and some WALEdits maybe skipped during recovery if the region fail again.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12711364">HBASE-11099</key>
            <summary>Two situations where we could open a region with smaller sequence number</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="syuanjiang">Stephen Yuan Jiang</assignee>
                                    <reporter username="jeffreyz">Jeffrey Zhong</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Apr 2014 01:45:19 +0000</created>
                <updated>Sat, 21 Feb 2015 23:45:08 +0000</updated>
                            <resolved>Wed, 3 Dec 2014 04:17:15 +0000</resolved>
                                    <version>1.0.0</version>
                    <version>2.0.0</version>
                    <version>0.99.1</version>
                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>0.98.9</fixVersion>
                    <fixVersion>0.99.2</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>16</watches>
                                                                                                            <comments>
                            <comment id="13985060" author="enis" created="Wed, 30 Apr 2014 01:47:57 +0000"  >&lt;p&gt;My understanding is that 1) only applies to trunk with the disruptor changes. 2) applies to 0.98 as well. Is that right Jeffrey ? &lt;/p&gt;</comment>
                            <comment id="13985062" author="jeffreyz" created="Wed, 30 Apr 2014 01:49:00 +0000"  >&lt;p&gt;Yes, that&apos;s correct.&lt;/p&gt;</comment>
                            <comment id="13985128" author="stack" created="Wed, 30 Apr 2014 03:47:56 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; Good one.  Want me to take the first one as a subtask of this issue?&lt;/p&gt;</comment>
                            <comment id="13985188" author="jeffreyz" created="Wed, 30 Apr 2014 05:36:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;Sure, please go ahead. Thanks.&lt;/p&gt;</comment>
                            <comment id="13985191" author="mantonov" created="Wed, 30 Apr 2014 05:41:29 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; I can take second one (should have time to work on closer to this weekend).&lt;/p&gt;</comment>
                            <comment id="13985237" author="stack" created="Wed, 30 Apr 2014 07:08:18 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; On the first, what do you see as the hole?  There are no writes coming in when I take the snapshot but there may be edits queued in the ring buffer that have yet to take a seqid?   These edits may be in the snapshot so could be included in the hfile but because we took the flushSeqId before they finished, these &apos;extra&apos; edits could be overwritten on HRegion open?  Hard to know when my regions&apos; edits have all cleared the ring buffer.  I could add in a sync and wait till it completes but that could take a while if the ring buffer filled by other regions writing.  Let me see....&lt;/p&gt;</comment>
                            <comment id="13985764" author="jeffreyz" created="Wed, 30 Apr 2014 17:16:42 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; Please go ahead. Thanks.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There are no writes coming in when I take the snapshot but there may be edits queued in the ring buffer that have yet to take a seqid? These edits may be in the snapshot so could be included in the hfile but because we took the flushSeqId before they finished?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, your understanding is same as mine. The major issue is that it breaks our sequence id monotonically increase assumption which likely cause some unexpected issues.  &lt;/p&gt;</comment>
                            <comment id="13985843" author="enis" created="Wed, 30 Apr 2014 17:59:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;These edits may be in the snapshot so could be included in the hfile but because we took the flushSeqId before they finished, these &apos;extra&apos; edits could be overwritten on HRegion open?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not sure about getting overriden. But we might end up in a case where the hfile flush seqId is smaller than some of the seqId of the keys which were in the ring buffer. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I could add in a sync and wait till it completes but that could take a while if the ring buffer filled by other regions writing.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think we already sync() before flush. Jeff added that some time ago. But the sync() call does not happen while holding the updatesLock IIRC. &lt;/p&gt;</comment>
                            <comment id="13985961" author="stack" created="Wed, 30 Apr 2014 19:35:49 +0000"  >&lt;p&gt;Calling a sync while writes are blocked on this store would not be the end of the world.  When the sync comes out the otherside, I know all of my region edits have been pushed through ahead of it.  Syncs happen at a rate of many per ms &amp;#8211; in last measure over in hbase-10156 it had us syncing over a 15 minute period at almost 4 times a ms &amp;#8211; so would be a bit of a speed bump but probably not too bad.&lt;/p&gt;</comment>
                            <comment id="13986006" author="stack" created="Wed, 30 Apr 2014 20:12:22 +0000"  >&lt;p&gt;Sorry, missed your comments lads. Thanks for clarification.  Let me try and make a test to catch the hole so I know I&apos;m putting plug in right place (smile).&lt;/p&gt;</comment>
                            <comment id="13986343" author="jeffreyz" created="Thu, 1 May 2014 04:49:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; Is that possible that we assign the sequence number in AppendNoSync call without late binding assignment because the order of changes in the &quot;ring buffer&quot; will be preserved till real WAL sync?&lt;/p&gt;</comment>
                            <comment id="13986374" author="stack" created="Thu, 1 May 2014 05:57:41 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; I don&apos;t think so. Down in append we do this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
...
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; sequence = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.disruptor.getRingBuffer().next();
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      RingBufferTruck truck = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.disruptor.getRingBuffer().get(sequence);
      FSWALEntry entry =
        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FSWALEntry(sequence, logKey, edits, sequenceId, inMemstore, htd, info);
      truck.loadPayload(entry, scope.detach());
    } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.disruptor.getRingBuffer().publish(sequence);
    }
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So we get a slot on the ring buffer and load it up.  When ready to go, we publish to the ring.&lt;/p&gt;

&lt;p&gt;Threads contend here abouts so publishing can be happening in any order (that could be ok).&lt;/p&gt;

&lt;p&gt;(Reading the setAvailable, called when we publish, I can&apos;t tell how it works w/o running some tests; i.e. does publishing make it available for processing though there are sequences ahead of this one not yet published?. I could do that.)&lt;/p&gt;

&lt;p&gt;The ring buffer sequence number is an internal detail not related to region sequence id. Wouldn&apos;t I have to relate them doing the above (ringbuffer is regionserver scoped)?  Otherwise, I would have to synchronize &amp;#8211; i.e. block &amp;#8211; the disruptor so I could tie the disruptor id getting and the upping of the region sequence id together?  Unless I used the disruptor id as region sequence id? (would need to check that publish respected disruptor id).  Disruptor id is a long.  Say 100k writes a second, I think its 3M years till we roll over (would have to check &amp;#8211; disruptor might be using some of the higher order bits as flags).&lt;/p&gt;

&lt;p&gt;Also at flush time, don&apos;t we want all that could be in the snapshot sync&apos;d rather than just appended?  I know sync is a pretty faint guarantee but it would be better than our using a seqid of an edit not sync&apos;d?  Thinking on it, this might not be necessay.  If the flush succeeds, we probably had a sync come in in in the meantime.  Could do a sync outside of the update lock to be sure.&lt;/p&gt;

&lt;p&gt;What you think boss?  (thanks for the help here).&lt;/p&gt;</comment>
                            <comment id="13986942" author="stack" created="Thu, 1 May 2014 20:17:43 +0000"  >&lt;p&gt;Looking, the ring blocks on a sequence until published.  So the ring buffer sequence reflects the order in which the items are taken off the ring buffer on the other side by the single consumer thread.  We could exploit this fact keeping the current ring buffer sequence and then upping the region sequence id by the difference.  But the region sequence id would not be synced edits.  It would be appended edits only.  Wouldn&apos;t this make region sequence unusable for mvcc? (presuming mvcc is about being when to make sync&apos;d edits readable).&lt;/p&gt;

&lt;p&gt;Using ringbuffer sequence as the region seqid won&apos;t work though I suggest it above; they need to be disassociated since their scopes are different (HRegion and HRegionServer)... tying them as I suggest above will cause headache at region open time trying to keep the ringbuffer ahead of all current edits.&lt;/p&gt;




</comment>
                            <comment id="13987129" author="stack" created="Thu, 1 May 2014 22:55:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;Wouldn&apos;t this make region sequence unusable for mvcc?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I suppose, for the mvcc write point, it doesn&apos;t have to be a sync&apos;d region sequence id.  It just has to be the sequence it goes into the WAL.&lt;/p&gt;</comment>
                            <comment id="13987194" author="jeffreyz" created="Thu, 1 May 2014 23:58:12 +0000"  >&lt;p&gt;If we can&apos;t get sequence number in AppendNoSync phase, it seems that we have to wait for in-flight transactions complete while holding the region&apos;s updatesLock. This will impact performance.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;exploit this fact keeping the current ring buffer sequence and then upping the region sequence id by the difference&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This approach seems hard to implement. I&apos;d prefer to using lock to get sequence number when put work item in ring buffer.&lt;/p&gt;</comment>
                            <comment id="13987306" author="stack" created="Fri, 2 May 2014 04:12:33 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; Sorry for all the verbiage.  I was thinking that undoing the late binding would make your life easier uniting mvcc and region sequence id so was trying to do it.&lt;/p&gt;

&lt;p&gt;The only scheme I could come up with was one where we&apos;d exploit the differences in the ringbuffer sequence and use this upping the region sequence id.  But to do this, I&apos;d have to do a little bit of math under a synchronize block and the synchronize block would be contended on by all handlers.   I think it would undo any benefits the disruptor gains us as the nexus reconciling all incoming handlers threads.&lt;/p&gt;

&lt;p&gt;So let me make a patch that clears out an in-flight region edits before we take the sequence id for the flush.&lt;/p&gt;
</comment>
                            <comment id="14212901" author="syuanjiang" created="Fri, 14 Nov 2014 21:53:08 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;  Just to make sure - your &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11135&quot; title=&quot;Change region sequenceid generation so happens earlier in the append cycle rather than just before added to file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11135&quot;&gt;&lt;del&gt;HBASE-11135&lt;/del&gt;&lt;/a&gt; fixed the issue#1.  Is it correct?&lt;/p&gt;</comment>
                            <comment id="14215409" author="syuanjiang" created="Mon, 17 Nov 2014 23:32:52 +0000"  >&lt;p&gt;This patch fix the issue in HRegion#replayRecoveredEdits().  &lt;/p&gt;

&lt;p&gt;Problem: &lt;br/&gt;
HRegion#replayRecoveredEdits() returns the &apos;currentEditSeqId&apos;.  In some situation that coprocessorHost could skip some log entries.  If those log entries are at the tail of the logs, the returned &apos;currentEditSeqId&apos; would not be updated (due to the code would skip the update).  This might cause data loss due to &quot;region open with a smaller sequence number and Master may record a larger flushed sequence Id.  If the region fails again, some WALEdits maybe skipped during recovery.&quot;&lt;/p&gt;

&lt;p&gt;Fix:&lt;br/&gt;
Move the currentEditSeqId update ahead of the skip code.  &lt;/p&gt;

&lt;p&gt;I also optimized a code to determine whether flush the log: once flush boolean is set to true, we should not keep checking whether to flush (because we should flush).&lt;/p&gt;</comment>
                            <comment id="14215573" author="hadoopqa" created="Tue, 18 Nov 2014 01:35:59 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12682024/HBASE-11099.v1-2.0.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12682024/HBASE-11099.v1-2.0.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12682024&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11724//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14215623" author="syuanjiang" created="Tue, 18 Nov 2014 02:15:21 +0000"  >&lt;p&gt;The warnings from javadoc are NOT from this patch:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[WARNING] Javadoc Warnings
[WARNING] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:54: warning: Unsafe is internal proprietary API and may be removed in a future release
[WARNING] import sun.misc.Unsafe;
[WARNING] ^

[WARNING] Javadoc Warnings
[WARNING] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java:603: warning - @param argument &quot;regionserver&quot; is not a parameter name.

[WARNING] Javadoc Warnings
[WARNING] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TableOutputFormat.java:92: warning - @param argument &quot;&amp;lt;KEY&amp;gt;&quot; is not a type parameter name.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14215625" author="yuzhihong@gmail.com" created="Tue, 18 Nov 2014 02:16:30 +0000"  >&lt;p&gt;Patch looks good to me.&lt;/p&gt;</comment>
                            <comment id="14215628" author="jeffreyz" created="Tue, 18 Nov 2014 02:19:01 +0000"  >&lt;p&gt;+1. Looks good to me as well.&lt;/p&gt;</comment>
                            <comment id="14220159" author="yuzhihong@gmail.com" created="Thu, 20 Nov 2014 22:46:37 +0000"  >&lt;p&gt;Integrated to branch-1 and master.&lt;/p&gt;

&lt;p&gt;Thanks for the patch, Stephen.&lt;/p&gt;</comment>
                            <comment id="14220284" author="stack" created="Fri, 21 Nov 2014 00:19:49 +0000"  >
&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=syuanjiang&quot; class=&quot;user-hover&quot; rel=&quot;syuanjiang&quot;&gt;Stephen Yuan Jiang&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;stack Just to make sure - your &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11135&quot; title=&quot;Change region sequenceid generation so happens earlier in the append cycle rather than just before added to file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11135&quot;&gt;&lt;del&gt;HBASE-11135&lt;/del&gt;&lt;/a&gt; fixed the issue#1. Is it correct?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sorry for the delay.  Yes. That was the intent.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; Above you and Enis say this a 0.98 issue too?  We should apply there also?  Also, in what scenario do you see &quot;...If coprocessor skip some tail WALEdits&quot;? Is this speculation or something from phoenix or so? Thanks.&lt;/p&gt;
</comment>
                            <comment id="14220286" author="hudson" created="Fri, 21 Nov 2014 00:20:32 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #5803 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5803/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5803/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11099&quot; title=&quot;Two situations where we could open a region with smaller sequence number&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11099&quot;&gt;&lt;del&gt;HBASE-11099&lt;/del&gt;&lt;/a&gt; Two situations where we could open a region with smaller sequence number (Stephen Jiang) (tedyu: rev d2ff1269f99083bebb4e27698e7df59c13698e50)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14220326" author="hudson" created="Fri, 21 Nov 2014 00:52:25 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.0 #486 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/486/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/486/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11099&quot; title=&quot;Two situations where we could open a region with smaller sequence number&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11099&quot;&gt;&lt;del&gt;HBASE-11099&lt;/del&gt;&lt;/a&gt; Two situations where we could open a region with smaller sequence number (Stephen Jiang) (tedyu: rev 3b4688f9ee0fca0f3a65e245f3caa7e47699cad1)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14220334" author="jeffreyz" created="Fri, 21 Nov 2014 00:58:55 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Is this speculation or something from phoenix or so?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Currently it&apos;s a possible scenario by checking the code&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;this a 0.98 issue too?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, that&apos;s a 0.98 issue too. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; This is a low risk fix. It&apos;s better to get it in 0.98 as well. Thanks.&lt;/p&gt;
</comment>
                            <comment id="14221686" author="apurtell" created="Sat, 22 Nov 2014 01:12:58 +0000"  >&lt;p&gt;+1 for 0.98. Reopening. Apologies that I got behind with this. If you provide a 0.98 patch I will commit it&lt;/p&gt;</comment>
                            <comment id="14224099" author="syuanjiang" created="Tue, 25 Nov 2014 05:54:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu&quot; class=&quot;user-hover&quot; rel=&quot;tedyu&quot;&gt;Ted Yu&lt;/a&gt;, the patch for 0.98 is attached to this JIRA.&lt;/p&gt;</comment>
                            <comment id="14232557" author="enis" created="Wed, 3 Dec 2014 04:17:15 +0000"  >&lt;p&gt;Committed the patch to 0.98 as well. Thanks again Stephen. &lt;/p&gt;</comment>
                            <comment id="14232649" author="hudson" created="Wed, 3 Dec 2014 06:20:41 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98 #711 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/711/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/711/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11099&quot; title=&quot;Two situations where we could open a region with smaller sequence number&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11099&quot;&gt;&lt;del&gt;HBASE-11099&lt;/del&gt;&lt;/a&gt; Two situations where we could open a region with smaller sequence number (Stephen Jiang) (enis: rev 1c856e0774afd8e09ef68436cf57fc0aa61e974e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14232669" author="hudson" created="Wed, 3 Dec 2014 06:37:28 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #678 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/678/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/678/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11099&quot; title=&quot;Two situations where we could open a region with smaller sequence number&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11099&quot;&gt;&lt;del&gt;HBASE-11099&lt;/del&gt;&lt;/a&gt; Two situations where we could open a region with smaller sequence number (Stephen Jiang) (enis: rev 1c856e0774afd8e09ef68436cf57fc0aa61e974e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14331594" author="enis" created="Sat, 21 Feb 2015 23:45:08 +0000"  >&lt;p&gt;Closing this issue after 0.99.2 release.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12764150">HBASE-12782</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12712974">HBASE-11135</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12683488" name="HBASE-11099.v1-0.98.patch" size="1968" author="syuanjiang" created="Tue, 25 Nov 2014 05:53:14 +0000"/>
                            <attachment id="12682024" name="HBASE-11099.v1-2.0.patch" size="2385" author="syuanjiang" created="Mon, 17 Nov 2014 23:32:52 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12711882">HBASE-11109</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 30 Apr 2014 01:47:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>389685</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1v4fz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>389927</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>