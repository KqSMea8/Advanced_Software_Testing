<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:16:21 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10701/HBASE-10701.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10701] Cache invalidation improvements from client side</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10701</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Running the integration test in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10572&quot; title=&quot;Create an IntegrationTest for region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10572&quot;&gt;&lt;del&gt;HBASE-10572&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10355&quot; title=&quot;Failover RPC&amp;#39;s from client using region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10355&quot;&gt;&lt;del&gt;HBASE-10355&lt;/del&gt;&lt;/a&gt;, it seems that we need some changes for cache invalidation of meta entries from the client side in backup RPCs. &lt;/p&gt;

&lt;p&gt;Mainly the RPC&apos;s made for replicas should not invalidate the cache for all the replicas (for example on RegionMovedException, connection error etc). &lt;/p&gt;</description>
                <environment></environment>
        <key id="12699502">HBASE-10701</key>
            <summary>Cache invalidation improvements from client side</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12682280">HBASE-10070</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="enis">Enis Soztutar</assignee>
                                    <reporter username="enis">Enis Soztutar</reporter>
                        <labels>
                    </labels>
                <created>Fri, 7 Mar 2014 20:52:56 +0000</created>
                <updated>Sat, 21 Feb 2015 23:32:19 +0000</updated>
                            <resolved>Tue, 8 Apr 2014 15:24:22 +0000</resolved>
                                                    <fixVersion>0.99.0</fixVersion>
                    <fixVersion>hbase-10070</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13924331" author="enis" created="Fri, 7 Mar 2014 20:54:59 +0000"  >&lt;p&gt;Attaching a v1 patch, which contains the fix. But give me some more time, because I am still debugging some other related issues. &lt;/p&gt;</comment>
                            <comment id="13930790" author="enis" created="Tue, 11 Mar 2014 19:03:44 +0000"  >&lt;p&gt;Attaching a secondary patch, which fixes three interrelated issues. Fortunately, with this patch, the test &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10572&quot; title=&quot;Create an IntegrationTest for region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10572&quot;&gt;&lt;del&gt;HBASE-10572&lt;/del&gt;&lt;/a&gt; is able to run on an 8 node cluster for 100min with CM. &lt;/p&gt;

&lt;p&gt;The changes include: &lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Individual RPC&apos;s for replicas can receive exceptions (RegionMovedException, etc) and also connection exceptions. Now the cache invalidation is done so that only the cache entry for the replica location will be cleared instead of the whole cached meta row.&lt;/li&gt;
	&lt;li&gt;When a server is killed, it&apos;s locations are removed from the cache. But after some time, only the primary region info will be left in the cache, and unless we go and look at the meta again, we won&apos;t know about the region replicas. So no secondary RPC&apos;s will be done unless the primary RPC timesout. I fixed it so that individual locations in RegionLocations are not set to null, instead individual HRL.serverName&apos;s are set to null. This enables the RPC layer to know about the replicas, but the locations might still be null which will trigger a meta lookup. There are still some failures in the AP code path that I am investigating.&lt;/li&gt;
	&lt;li&gt;RpcRetryingCallerWithReadReplicas used to schedule the RPC&apos;s to primary and secondaries, and wait for the first result regardless of whether it is an exception or success. In case of a close connection, one of the RPC&apos;s will immediately return with an DoNotRetryEx, and will fail the whole get() operation, although we should be able to read from the other replicas perfectly fine. I changed the code path so that it waits for the first successful operation, a cancellation or interrupt, or for all operations to fail with DoNotRetryEx or RetriesExhaustedEx.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; could you please take a close look? &lt;/p&gt;</comment>
                            <comment id="13930807" author="nkeywal" created="Tue, 11 Mar 2014 19:13:52 +0000"  >&lt;p&gt;yes. Will do that for tomorrow.&lt;/p&gt;</comment>
                            <comment id="13932309" author="nkeywal" created="Wed, 12 Mar 2014 20:29:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;Bytes.toString(regionName));&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Should be a &quot;Bytes.toStringBinary&quot;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;RegionLocations&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Seems ok to me.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;MetaReader&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception parseEx) {
      &lt;span class=&quot;code-comment&quot;&gt;// Ignore. This is used with tableName passed as regionName.
&lt;/span&gt;    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is scary. We&apos;re wild on catching here, and this denotes a design issue (may be an old one?)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;AsyncProcess / ConnectionManager&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Are we sure that  locateRegionInMeta will not return a location with a null serverName?&lt;br/&gt;
AsyncProcess doesn&apos;t retry if the location is null because it expects that there is already a retry there.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;RpcRetryingCallerWithReadReplicas &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;cite&gt;long start = System.nanoTime();&lt;/cite&gt;&lt;br/&gt;
This is not used&lt;/p&gt;

&lt;p&gt;&lt;cite&gt;if (exceptions == null) exceptions = new ArrayList&amp;lt;ExecutionException&amp;gt;(rl.size());&lt;/cite&gt;&lt;br/&gt;
the condition is always true here&lt;/p&gt;

&lt;p&gt;&lt;cite&gt;Result result = null;&lt;/cite&gt;&lt;br/&gt;
The scope could be narrowed.&lt;/p&gt;

&lt;p&gt;&lt;cite&gt;// the primary call failed with RetriesExhaustedException or DoNotRetryIOException&lt;/cite&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;In case of a close connection&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This should not be the case. This is something we should retry (and we do iirc). But may be you were speaking about another close?&lt;br/&gt;
Note that I&apos;m not against waiting until the bitter end. But if there is a coding/logic error by the client/customer, (usually caught by DoNotRetryIOException), we will go on all servers instead of only once, that&apos;s why I preferred the first approach in the original implementation. DoNotRetryIOException means &quot;logic error&quot; usually...&lt;/p&gt;

</comment>
                            <comment id="13932364" author="enis" created="Wed, 12 Mar 2014 21:00:13 +0000"  >&lt;p&gt;Thanks Nicolas for taking a look. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This is scary. We&apos;re wild on catching here, and this denotes a design issue (may be an old one?)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We are cathing exception only raised by parse. The old design issue is that we have the tableNameOrRegionName nonsense passed as the argument here from HBaseAdmin. We are sending the table name to be parsed as regionName. I did not want to change the API there, since it is unrelated. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Are we sure that locateRegionInMeta will not return a location with a null serverName?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;MetaCache CAN return HRL&apos;s with null serverNames with this patch. This won&apos;t happen from the results from meta. So locateRegionInMeta() call MIGHT return HRL&apos;s with null server names if it comes from cache. When we invalidate the cache entries from a server (on connection error for example), the cache then forgets about that replica, which means that we won&apos;t schedule backup RPC&apos;s to that replica at all. We can change the cache HRL nulling behavior as it is, but keep an int for max replicaId in the cache if you think that would be better design.  &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;the condition is always true here&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is inside a while loop.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;DoNotRetryIOException means &quot;logic error&quot; usually...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I see. If in everycase a DoNotRetryIOException, there is a logic error, I&apos;ll also rethrow this from primary without scheduling replicas. But you agree with the RetriesExhausted to be tried on every server no matter what, right ? &lt;/p&gt;</comment>
                            <comment id="13933004" author="nkeywal" created="Thu, 13 Mar 2014 08:41:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;So locateRegionInMeta() call MIGHT return HRL&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hum, then we can have an issue here I think&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; RegionLocations findDestLocation(
      TableName tableName, Row row, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; checkPrimary) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (row == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;code-quote&quot;&gt;&quot;#&quot;&lt;/span&gt; + id + &lt;span class=&quot;code-quote&quot;&gt;&quot;, row cannot be &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;&quot;&lt;/span&gt;);
    RegionLocations loc = hConnection.locateRegionAll(tableName, row.getRow());
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (loc == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
        || (checkPrimary &amp;amp;&amp;amp; (loc.isEmpty()
        || loc.getDefaultRegionLocation() == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
        || loc.getDefaultRegionLocation().getServerName() == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;))) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;#&quot;&lt;/span&gt; + id + &lt;span class=&quot;code-quote&quot;&gt;&quot;, no location found, aborting submit &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;&quot;&lt;/span&gt; +
          &lt;span class=&quot;code-quote&quot;&gt;&quot; tableName=&quot;&lt;/span&gt; + tableName + &lt;span class=&quot;code-quote&quot;&gt;&quot; rowkey=&quot;&lt;/span&gt; + Arrays.toString(row.getRow()));
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; loc;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The cache might return something with a null server name, w/o retrying to go to meta. The caller will get the exception, and will think &quot;after a lot of retry we can&apos;t get the location, so we&apos;re bad, so we stop&quot;&lt;br/&gt;
I&apos;m not totally sure I&apos;m right, because we&apos;re not looking for the secondary replicas here.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It is inside a while loop.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not the first one for the main replica &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But you agree with the RetriesExhausted to be tried on every server no matter what, right ? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It so extreme that I don&apos;t really know. I suppose that whatever you do it&apos;s going to be difficult at the end &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. I&apos;m +1 whatever the final choice here.&lt;/p&gt;</comment>
                            <comment id="13934669" author="enis" created="Fri, 14 Mar 2014 06:11:34 +0000"  >&lt;p&gt;Thanks Nicolas for the careful review. &lt;/p&gt;

&lt;p&gt;I&apos;ve changed the patch so that I dropped the approach or using HRL&apos;s with null ServerNames. Instead we still set the HRL item as null inside RegionLocations. RegionLocations now, can contain null elements at the tail of the array as well. This enables the cache to know about how many replicas there are, but the locations might still be unknown. &lt;/p&gt;

&lt;p&gt;I&apos;ve been testing this with&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
hbase org.apache.hadoop.hbase.test.IntegrationTestTimeBoundedRequestsWithRegionReplicas -Dhbase.IntegrationTestTimeBoundedRequestsWithRegionReplicas.runtime=600000 -DIntegrationTestTimeBoundedRequestsWithRegionReplicas.num_write_threads=30 -DIntegrationTestTimeBoundedRequestsWithRegionReplicas.region_replication=3 -DIntegrationTestTimeBoundedRequestsWithRegionReplicas.num_read_threads=30 -Dhbase.ipc.client.allowsInterrupt=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;it seems the issues are fixed. However, I notice that the test most of the time dies with OOM, cannot create native thread, because the number of threads grow unbounded (north of 4K). &lt;br/&gt;
Tried setting -Dhbase.hconnection.threads.max=512 with no results so far. &lt;/p&gt;

&lt;p&gt;One other issue (probably related) was that the RPC&apos;s would not start for a long time and timeout the gets (10-20 secs) because the thread pool executor does not schedule the tasks in the CompletionService from RpcRetryingCallerWithReadReplicas. Do you have any opinion around this? Should we create a secondary pool for the backup requests? If we address the thread growing problem, probably this will be fixed as well. &lt;/p&gt;

&lt;p&gt;The v3 patch also addresses your comments, except for the DoNotRetryEx. We&apos;ll have to get this running consistently before addressing that I think. &lt;/p&gt;</comment>
                            <comment id="13939840" author="devaraj" created="Tue, 18 Mar 2014 21:38:06 +0000"  >&lt;p&gt;I have been playing with this patch as part of working on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10634&quot; title=&quot;Multiget doesn&amp;#39;t fully work&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10634&quot;&gt;&lt;del&gt;HBASE-10634&lt;/del&gt;&lt;/a&gt;. I reviewed it as well (though not that deep). +1 for committing to the branch and doing the other fixes (to do with thread scheduling) as followup. &lt;/p&gt;</comment>
                            <comment id="13939875" author="enis" created="Tue, 18 Mar 2014 22:05:01 +0000"  >&lt;p&gt;Thanks Devaraj for the review. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;It so extreme that I don&apos;t really know. I suppose that whatever you do it&apos;s going to be difficult at the end . I&apos;m +1 whatever the final choice here.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think it is safer to send even the DoNotRetryIOException to replicas. If it becomes a problem to wait for all results from replicas, we can fix it later. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;However, I notice that the test most of the time dies with OOM, cannot create native thread, because the number of threads grow unbounded&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;One cause for the # threads to jump was that, meta&apos;s own location is not cached, resulting in a zk request for every region location cache miss. In the test we are doing 12K req/s from a single client, and with CM, we do a LOT of zk requests causing multi second slowdowns because of zk contention. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10785&quot; title=&quot;Metas own location should be cached&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10785&quot;&gt;&lt;del&gt;HBASE-10785&lt;/del&gt;&lt;/a&gt; attacks this issue. &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; I&apos;ll commit v3 if you are ok with it. &lt;/p&gt;</comment>
                            <comment id="13942234" author="enis" created="Thu, 20 Mar 2014 20:25:57 +0000"  >&lt;p&gt;While testing this more, we&apos;ve encountered some problems on the write side when region locations are changing (with region replicas) via the balancer. This was because we were not guaranteeing that HCI.locateRegionInMeta() will always return a result containing the HRL for the replicaId sent with the call. A simple fix to check whether the cached RegionLocations object contains that replicaId ensures that we do not return cached results and go to meta, if the location for asked replicaId is null in cache. Patch v4 fixes this. &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2014-03-19 12:57:49,532|beaver.machine|INFO|2014-03-19 12:57:49,529 ERROR HBaseWriterThread_24 client.AsyncProcess: Failed to get region location
2014-03-19 12:57:49,533|beaver.machine|INFO|java.io.IOException: #58, no location found, aborting submit &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; tableName=IntegrationTestTimeBoundedRequestsWithRegionReplicas rowkey=[48, 98, 100, 52, 102, 48, 100, 51, 54, 50, 102, 101, 102, 48, 49, 48, 49, 53, 48, 54, 102, 98, 98, 99, 99, 50, 97, 54, 100, 55, 50, 50, 45, 51, 56, 54, 51, 54, 57]
2014-03-19 12:57:49,533|beaver.machine|INFO|at org.apache.hadoop.hbase.client.AsyncProcess.findDestLocation(AsyncProcess.java:419)
2014-03-19 12:57:49,534|beaver.machine|INFO|at org.apache.hadoop.hbase.client.AsyncProcess.submit(AsyncProcess.java:341)
2014-03-19 12:57:49,534|beaver.machine|INFO|at org.apache.hadoop.hbase.client.AsyncProcess.submit(AsyncProcess.java:294)
2014-03-19 12:57:49,534|beaver.machine|INFO|at org.apache.hadoop.hbase.client.HTable.backgroundFlushCommits(HTable.java:1020)
2014-03-19 12:57:49,535|beaver.machine|INFO|at org.apache.hadoop.hbase.client.HTable.flushCommits(HTable.java:1294)
2014-03-19 12:57:49,535|beaver.machine|INFO|at org.apache.hadoop.hbase.client.HTable.put(HTable.java:955)
2014-03-19 12:57:49,535|beaver.machine|INFO|at org.apache.hadoop.hbase.util.MultiThreadedWriter$HBaseWriterThread.insert(MultiThreadedWriter.java:143)
2014-03-19 12:57:49,536|beaver.machine|INFO|at org.apache.hadoop.hbase.util.MultiThreadedWriter$HBaseWriterThread.run(MultiThreadedWriter.java:108)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13943628" author="nkeywal" created="Fri, 21 Mar 2014 22:04:29 +0000"  >&lt;p&gt;You have not uploaded the v4?&lt;br/&gt;
But I&apos;m ok with the principle mentions on the v3&lt;/p&gt;</comment>
                            <comment id="13943732" author="enis" created="Fri, 21 Mar 2014 23:47:43 +0000"  >&lt;p&gt;Good catch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; v4 attached. &lt;/p&gt;</comment>
                            <comment id="13961952" author="nkeywal" created="Mon, 7 Apr 2014 15:51:16 +0000"  >&lt;p&gt;I reviewed v4&lt;br/&gt;
I&apos;m +1, just a nit that can be fixed on commit:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          Future&amp;lt;Result&amp;gt; f = cs.take();
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (f != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; f.get(); &lt;span class=&quot;code-comment&quot;&gt;// great we got an answer
&lt;/span&gt;          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In the secondaries part, I don&apos;t think that cs.take can return null.&lt;/p&gt;</comment>
                            <comment id="13963074" author="enis" created="Tue, 8 Apr 2014 15:23:49 +0000"  >&lt;p&gt;Thanks Nicolas! I&apos;ve fixed the nit in v5. Gonna commit this one. &lt;/p&gt;</comment>
                            <comment id="13963075" author="enis" created="Tue, 8 Apr 2014 15:24:22 +0000"  >&lt;p&gt;Committed to branch hbase-10070. &lt;/p&gt;</comment>
                            <comment id="14046629" author="enis" created="Sat, 28 Jun 2014 01:47:52 +0000"  >&lt;p&gt;Attaching rebased patch for master that is committed&lt;/p&gt;</comment>
                            <comment id="14046677" author="enis" created="Sat, 28 Jun 2014 02:08:50 +0000"  >&lt;p&gt;Committed to master as part of hbase-10070 branch merge&lt;/p&gt;</comment>
                            <comment id="14046740" author="hudson" created="Sat, 28 Jun 2014 06:13:52 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5245 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5245/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5245/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10701&quot; title=&quot;Cache invalidation improvements from client side&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10701&quot;&gt;&lt;del&gt;HBASE-10701&lt;/del&gt;&lt;/a&gt; Cache invalidation improvements from client side (enis: rev ad05de172f4df735c56f83b0d590724603b3c2e9)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/RpcRetryingCallerWithReadReplicas.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/MultiThreadedReader.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClusterConnection.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/BoundedCompletionService.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/RegionLocations.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionAdapter.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/MetaCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/client/CoprocessorHConnection.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriterBase.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestReplicaWithCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/TestRegionLocations.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14330942" author="enis" created="Sat, 21 Feb 2015 23:32:19 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12697844">HBASE-10634</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12702475">HBASE-10794</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12702258">HBASE-10785</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12702998">HBASE-10810</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12652967" name="0029-HBASE-10701-Cache-invalidation-improvements-from-cli.patch" size="61598" author="enis" created="Sat, 28 Jun 2014 01:47:51 +0000"/>
                            <attachment id="12636144" name="hbase-10701_v1.patch" size="46752" author="enis" created="Fri, 21 Mar 2014 23:47:43 +0000"/>
                            <attachment id="12633457" name="hbase-10701_v1.patch" size="46752" author="enis" created="Fri, 7 Mar 2014 20:54:59 +0000"/>
                            <attachment id="12633974" name="hbase-10701_v2.patch" size="65757" author="enis" created="Tue, 11 Mar 2014 19:03:44 +0000"/>
                            <attachment id="12634659" name="hbase-10701_v3.patch" size="65250" author="enis" created="Fri, 14 Mar 2014 06:11:34 +0000"/>
                            <attachment id="12636145" name="hbase-10701_v4.patch" size="65400" author="enis" created="Fri, 21 Mar 2014 23:47:59 +0000"/>
                            <attachment id="12639201" name="hbase-10701_v5.patch" size="85049" author="enis" created="Tue, 8 Apr 2014 15:23:49 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Mar 2014 19:13:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>377849</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1t3wf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>378141</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>