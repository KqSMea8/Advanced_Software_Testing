<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:12:34 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3725/HBASE-3725.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3725] HBase increments from old value after delete and write to disk</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3725</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Deleted row values are sometimes used for starting points on new increments.&lt;/p&gt;

&lt;p&gt;To reproduce:&lt;br/&gt;
Create a row &quot;r&quot;. Set column &quot;x&quot; to some default value.&lt;br/&gt;
Force hbase to write that value to the file system (such as restarting the cluster).&lt;br/&gt;
Delete the row.&lt;br/&gt;
Call table.incrementColumnValue with &quot;some_value&quot;&lt;br/&gt;
Get the row.&lt;br/&gt;
The returned value in the column was incremented from the old value before the row was deleted instead of being initialized to &quot;some_value&quot;.&lt;/p&gt;

&lt;p&gt;Code to reproduce:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.conf.Configuration;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HBaseConfiguration;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HColumnDescriptor;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HTableDescriptor;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.Delete;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.Get;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.HBaseAdmin;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.HTableInterface;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.HTablePool;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.Increment;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.Result;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.util.Bytes;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HBaseTestIncrement
{
	&lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tableName  = &lt;span class=&quot;code-quote&quot;&gt;&quot;testIncrement&quot;&lt;/span&gt;;

	&lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] infoCF = Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;info&quot;&lt;/span&gt;);

	&lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] rowKey = Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;test-rowKey&quot;&lt;/span&gt;);

	&lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] newInc = Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;&quot;&lt;/span&gt;);
	&lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] oldInc = Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;old&quot;&lt;/span&gt;);

	/**
	 * This code reproduces a bug with increment column values in hbase
	 * Usage: First run part one by passing &apos;1&apos; as the first arg
	 *        Then restart the hbase cluster so it writes everything to disk
	 *	  Run part two by passing &apos;2&apos; as the first arg
	 *
	 * This will result in the old deleted data being found and used &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the increment calls
	 *
	 * @param args
	 * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
	 */
	&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
	{
		&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt;.equals(args[0]))
			partOne();
		&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;code-quote&quot;&gt;&quot;2&quot;&lt;/span&gt;.equals(args[0]))
			partTwo();
		&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-quote&quot;&gt;&quot;both&quot;&lt;/span&gt;.equals(args[0]))
		{
			partOne();
			partTwo();
		}
	}

	/**
	 * Creates a table and increments a column value 10 times by 10 each time.
	 * Results in a value of 100 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the column
	 *
	 * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
	 */
	&lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void partOne()&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
	{

		Configuration conf = HBaseConfiguration.create();


		HBaseAdmin admin = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HBaseAdmin(conf);
		HTableDescriptor tableDesc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HTableDescriptor(tableName);
		tableDesc.addFamily(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HColumnDescriptor(infoCF));
		&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(admin.tableExists(tableName))
		{
			admin.disableTable(tableName);
			admin.deleteTable(tableName);
		}
		admin.createTable(tableDesc);

		HTablePool pool = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HTablePool(conf, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MAX_VALUE);
		HTableInterface table = pool.getTable(Bytes.toBytes(tableName));

		&lt;span class=&quot;code-comment&quot;&gt;//Increment unitialized column
&lt;/span&gt;		&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; j = 0; j &amp;lt; 10; j++)
		{
			table.incrementColumnValue(rowKey, infoCF, oldInc, (&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;)10);
			Increment inc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Increment(rowKey);
			inc.addColumn(infoCF, newInc, (&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;)10);
			table.increment(inc);
		}

		Get get = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Get(rowKey);
		Result r = table.get(get);
		&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;initial values: &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &quot;&lt;/span&gt; + Bytes.toLong(r.getValue(infoCF, newInc)) + &lt;span class=&quot;code-quote&quot;&gt;&quot; old &quot;&lt;/span&gt; + Bytes.toLong(r.getValue(infoCF, oldInc)));

	}

	/**
	 * First deletes the data then increments the column 10 times by 1 each time
	 *
	 * Should result in a value of 10 but it doesn&apos;t, it results in a values of 110
	 *
	 * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
	 */
	&lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void partTwo()&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
	{
		Configuration conf = HBaseConfiguration.create();

		HTablePool pool = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HTablePool(conf, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MAX_VALUE);
		HTableInterface table = pool.getTable(Bytes.toBytes(tableName));
		
		Delete delete = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete(rowKey);
		table.delete(delete);


		&lt;span class=&quot;code-comment&quot;&gt;//Increment columns
&lt;/span&gt;		&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; j = 0; j &amp;lt; 10; j++)
		{
			table.incrementColumnValue(rowKey, infoCF, oldInc, (&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;)1);
			Increment inc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Increment(rowKey);
			inc.addColumn(infoCF, newInc, (&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;)1);
			table.increment(inc);
		}


		Get get = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Get(rowKey);
		Result r = table.get(get);
		&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;after delete values: &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &quot;&lt;/span&gt; + Bytes.toLong(r.getValue(infoCF, newInc)) + &lt;span class=&quot;code-quote&quot;&gt;&quot; old &quot;&lt;/span&gt; + Bytes.toLong(r.getValue(infoCF, oldInc)));

	}
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12503153">HBASE-3725</key>
            <summary>HBase increments from old value after delete and write to disk</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="10003">Resolved</resolution>
                                        <assignee username="xingshi">ShiXing</assignee>
                                    <reporter username="nvcook42">Nathaniel Cook</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Apr 2011 16:59:10 +0000</created>
                <updated>Wed, 16 Nov 2016 20:41:32 +0000</updated>
                            <resolved>Wed, 16 Nov 2016 20:41:03 +0000</resolved>
                                    <version>0.90.1</version>
                                    <fixVersion>0.92.3</fixVersion>
                                    <component>io</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>3</votes>
                                    <watches>20</watches>
                                                                <comments>
                            <comment id="13014750" author="stack" created="Fri, 1 Apr 2011 17:06:53 +0000"  >&lt;p&gt;Good one Nathaniel.  Any chance of a patch, preferrably one that includes your nice test above?&lt;/p&gt;</comment>
                            <comment id="13015670" author="nvcook42" created="Mon, 4 Apr 2011 22:45:04 +0000"  >&lt;p&gt;Here is a patch with a simple unit test for this bug.&lt;/p&gt;

&lt;p&gt;As far as a fix for the bug any help would be appreciated. I don&apos;t know enough about HBase&apos;s internals to even know where to begin.&lt;/p&gt;</comment>
                            <comment id="13015683" author="streamy" created="Mon, 4 Apr 2011 23:46:56 +0000"  >&lt;p&gt;Hey Nathaniel.  Thanks for posting the unit test!&lt;/p&gt;

&lt;p&gt;I will take a look at this sometime this week and try to get a fix out for it.&lt;/p&gt;</comment>
                            <comment id="13026367" author="streamy" created="Thu, 28 Apr 2011 16:38:49 +0000"  >&lt;p&gt;Here is a small unit test which replicates the broken behavior using both the old incrementColumnValue as well as the new Increment (the bug exists in both).&lt;/p&gt;

&lt;p&gt;The fix for this is complicated.  The issue is that we check the MemStore first and then we check the StoreFiles.  Currently no information read from the MemStore is carried into the query of the StoreFiles.&lt;/p&gt;

&lt;p&gt;I&apos;ll keep working on this since it is a correctness issue, hopefully the solution won&apos;t be super messy.&lt;/p&gt;

&lt;p&gt;Thanks again for finding this Nathaniel!&lt;/p&gt;</comment>
                            <comment id="13026379" author="streamy" created="Thu, 28 Apr 2011 17:14:25 +0000"  >&lt;p&gt;This fixes the problem in the only simple way I could think of.&lt;/p&gt;

&lt;p&gt;A new configuration option is added &quot;hbase.hregion.increment.supportdeletes&quot; which defaults to true (because it is required for &quot;correctness&quot;).&lt;/p&gt;

&lt;p&gt;When this option is true, then when the scan against StoreFiles is done, it will also include the MemStore.  This should ensure correctness for cases where delete markers are present in the MemStore that need to apply to KVs in the StoreFiles.&lt;/p&gt;

&lt;p&gt;I made this a configuration option because it makes increment operations less optimal, so for increment workloads that do not need to support deletes, they can keep the option turned off and avoid the double scan of the MemStore.&lt;/p&gt;

&lt;p&gt;A potential optimal and correct solution to this could be to use the old Get delete tracker which would retain delete information across files (for in-order file processing rather than one mega merge).  Some work is going into re-integrating those, so if they do make it back in the HBase, we could utilize them here.&lt;/p&gt;

&lt;p&gt;This should suffice for now.&lt;/p&gt;</comment>
                            <comment id="13026380" author="streamy" created="Thu, 28 Apr 2011 17:14:37 +0000"  >&lt;p&gt;Please review.&lt;/p&gt;</comment>
                            <comment id="13047604" author="stack" created="Fri, 10 Jun 2011 22:46:02 +0000"  >&lt;p&gt;Moving out of 0.92.0. Pull it back in if you think different.&lt;/p&gt;</comment>
                            <comment id="13232940" author="pvaibhav" created="Mon, 19 Mar 2012 21:36:31 +0000"  >&lt;p&gt;We encountered the exact same issue in @GumGum production environment. We are running 0.90.5. I hope this gets fixed ASAP.&lt;/p&gt;</comment>
                            <comment id="13403165" author="shixing" created="Thu, 28 Jun 2012 15:27:26 +0000"  >&lt;p&gt;Is there any progress?&lt;/p&gt;</comment>
                            <comment id="13403170" author="shixing" created="Thu, 28 Jun 2012 15:36:03 +0000"  >&lt;p&gt;Sorry for mistake of Ctrl+Enter.&lt;/p&gt;

&lt;p&gt;I think the fixup could just change the calls of getLastIncrement() to get(), I see that in 0.94 the code is alreay remove the getLastIncrement() function.&lt;/p&gt;</comment>
                            <comment id="13403210" author="stack" created="Thu, 28 Jun 2012 16:48:37 +0000"  >&lt;p&gt;@ShiXing Any chance of a patch.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13403680" author="shixing" created="Fri, 29 Jun 2012 03:28:36 +0000"  >&lt;p&gt;remove the getLastIncrement function.&lt;/p&gt;</comment>
                            <comment id="13403705" author="shixing" created="Fri, 29 Jun 2012 05:32:45 +0000"  >&lt;p&gt;change the method name.&lt;/p&gt;</comment>
                            <comment id="13403706" author="hadoopqa" created="Fri, 29 Jun 2012 05:43:56 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12533939/HBASE-3725-0.92-V2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12533939/HBASE-3725-0.92-V2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2292//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2292//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13403719" author="shixing" created="Fri, 29 Jun 2012 06:12:36 +0000"  >&lt;p&gt;If the Delete and next Increment occured the same millionsecond, the Increment will not take effect for followed Increment, because the Delete will lay over the Increment.&lt;/p&gt;</comment>
                            <comment id="13403724" author="hadoopqa" created="Fri, 29 Jun 2012 06:23:29 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12533945/HBASE-3725-0.92-V3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12533945/HBASE-3725-0.92-V3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2293//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2293//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13405298" author="stack" created="Mon, 2 Jul 2012 20:05:26 +0000"  >&lt;p&gt;Is this a fix for 0.92 only ShiXing?&lt;/p&gt;

&lt;p&gt;Doing a get instead of a getLastIncrement is good because we&apos;ll handle deletes.  Does it slow down increments doing a get rather than getLastIncrement?&lt;/p&gt;</comment>
                            <comment id="13406928" author="xingshi" created="Thu, 5 Jul 2012 09:14:19 +0000"  >
&lt;blockquote&gt;&lt;p&gt;Is this a fix for 0.92 only ShiXing?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yes&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Doing a get instead of a getLastIncrement is good because we&apos;ll handle deletes. Does it slow down increments doing a get rather than getLastIncrement?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think it will slow down increments a little. I have not test the performance. But the correctness is affected.&lt;br/&gt;
In test case, if there is a put , a flush, and a delete, the increment will read out the data in the StoreFile by flushing , because the getLastIncrement will read the memstore first, and return empty because there is no row just one delete, and then read the StoreFile without merge with delete. You can find the bug by my test case or described as Description of this issue.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
junit.framework.AssertionFailedError: expected:&amp;lt;10&amp;gt; but was:&amp;lt;20&amp;gt;
	at junit.framework.Assert.fail(Assert.java:50)
	at junit.framework.Assert.failNotEquals(Assert.java:287)
	at junit.framework.Assert.assertEquals(Assert.java:67)
	at junit.framework.Assert.assertEquals(Assert.java:134)
	at junit.framework.Assert.assertEquals(Assert.java:140)
	at org.apache.hadoop.hbase.regionserver.TestHRegion.testIncrementWithFlushAndDelete(TestHRegion.java:3446)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:243)
	at junit.framework.TestSuite.run(TestSuite.java:238)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13406929" author="xingshi" created="Thu, 5 Jul 2012 09:20:10 +0000"  >&lt;blockquote&gt;&lt;p&gt;But the correctness is affected.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I mean the 0.92 trunk code for increment will make data wrong for some case. Because once the increment row&apos;s memstore is flushed, if there is no Delete, it will be no affected, if there is a Delete, the data will be wrong undoubtly.&lt;/p&gt;</comment>
                            <comment id="13408151" author="zhihyu@ebaysf.com" created="Fri, 6 Jul 2012 17:01:31 +0000"  >&lt;p&gt;Without the patch, new test failed:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Failed tests:   testIncrementWithFlushAndDelete(org.apache.hadoop.hbase.regionserver.TestHRegion): expected:&amp;lt;10&amp;gt; but was:&amp;lt;20&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The test passed with patch.&lt;/p&gt;

&lt;p&gt;+1 on this correctness fix.&lt;/p&gt;

&lt;p&gt;@Xing:&lt;br/&gt;
Can you prepare patch for trunk and run it through Hadoop QA ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13409194" author="xingshi" created="Mon, 9 Jul 2012 05:41:03 +0000"  >&lt;p&gt;pls review it.&lt;/p&gt;</comment>
                            <comment id="13409195" author="hadoopqa" created="Mon, 9 Jul 2012 05:43:51 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12535627/HBASE-3725-0.92-V4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12535627/HBASE-3725-0.92-V4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2351//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2351//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13409205" author="xingshi" created="Mon, 9 Jul 2012 06:07:52 +0000"  >&lt;p&gt;The trunk does not have this bug, for the HRegion#getLastIncrement() has been discarded already.&lt;/p&gt;</comment>
                            <comment id="13409206" author="lhofhansl" created="Mon, 9 Jul 2012 06:14:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3443&quot; title=&quot;ICV optimization to look in memstore first and then store files (HBASE-3082) does not work when deletes are in the mix&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3443&quot;&gt;&lt;del&gt;HBASE-3443&lt;/del&gt;&lt;/a&gt; fixes this for 0.94 and 0.96.&lt;/p&gt;</comment>
                            <comment id="13409210" author="lhofhansl" created="Mon, 9 Jul 2012 06:16:48 +0000"  >&lt;p&gt;0.92 does not have the lazy seek optimizations, so the performance implication of this would be significant.&lt;/p&gt;</comment>
                            <comment id="13409213" author="xingshi" created="Mon, 9 Jul 2012 06:21:52 +0000"  >&lt;p&gt;Mean the performance is important than the correctness? &lt;br/&gt;
I think &quot;Correctness should always be first&quot;.&lt;/p&gt;</comment>
                            <comment id="13409910" author="lhofhansl" created="Mon, 9 Jul 2012 22:12:43 +0000"  >&lt;p&gt;I am not disagreeing. Just a note of caution. We waited with fixing this in 0.94 until we had lazy seek.&lt;/p&gt;</comment>
                            <comment id="13411518" author="stack" created="Wed, 11 Jul 2012 14:01:49 +0000"  >&lt;p&gt;@ShiXing I&apos;m reluctant to commit this to 0.92 if it slows increments radically though it is &apos;correct&apos;.  While its correct, I think it rare folks will be doing deletes on increments.  Do you have any idea how much it slows increments?  Thanks.&lt;/p&gt;</comment>
                            <comment id="13418024" author="xingshi" created="Thu, 19 Jul 2012 03:14:46 +0000"  >&lt;p&gt;@stack, I generate a region with 3 store files. The increment slows from 1810 tps to 1020 tps, it slows 43.6%, &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;I think we can fix the correctness by recreate the InternalScan when we can&apos;t get the data from memstore, we will still get the data from memstore for the delete not just from store files.&lt;/p&gt;</comment>
                            <comment id="13418032" author="xingshi" created="Thu, 19 Jul 2012 03:38:33 +0000"  >&lt;p&gt;In V5, if the increment does not got the data it will got the data from store file and memstore, compared to the orig implement(just from store file), I think it will not slow the increment, it will only takes more time for the memstore.&lt;/p&gt;</comment>
                            <comment id="13418087" author="hadoopqa" created="Thu, 19 Jul 2012 05:39:14 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12537128/HBASE-3725-0.92-V5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12537128/HBASE-3725-0.92-V5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2408//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2408//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13418448" author="zhihyu@ebaysf.com" created="Thu, 19 Jul 2012 17:04:13 +0000"  >&lt;p&gt;@ShiXing:&lt;br/&gt;
Can you give us performance number based on your latest patch ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13418892" author="xingshi" created="Fri, 20 Jul 2012 02:50:53 +0000"  >&lt;p&gt;@Ted&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I generate a region with 3 store files. The increment slows from 1810 tps to 1020 tps, it slows 43.6%, .&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The tps is increment the same rowkey.&lt;/p&gt;


&lt;p&gt;The performance depends on how frequently the memstore flushed to the store file. If I also do the same test case, the latest patch&apos;s performance is same as the orig, because the increment rowkey is always in the memstore, and we do not need to read the store file. &lt;/p&gt;

&lt;p&gt;The difference is only for the rowKey that can&apos;t get the value from memstore, it need do a more read from memstore , compared to the 0.92 trunk: read only from store file.&lt;/p&gt;

&lt;p&gt;You must know, the orig&apos;s high performance is just benefit by only read from the memstore.&lt;/p&gt;</comment>
                            <comment id="13418904" author="zhihyu@ebaysf.com" created="Fri, 20 Jul 2012 03:34:10 +0000"  >&lt;p&gt;Looking at existing code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;KeyValue&amp;gt; getLastIncrement(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Get get) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    InternalScan iscan = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InternalScan(get);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;iscan was assigned at the beginning. Looks like the assignment in else block is redundant.&lt;/p&gt;

&lt;p&gt;TestHRegion#testIncrementWithFlushAndDelete passed without that assignment.&lt;/p&gt;</comment>
                            <comment id="13418933" author="xingshi" created="Fri, 20 Jul 2012 05:43:50 +0000"  >&lt;p&gt;@Ted, the reassignment is because there is no interface to set the iscan back to both memstore and filestore, because at the begining, the iscan is set memstore&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-comment&quot;&gt;// memstore scan
&lt;/span&gt;    iscan.checkOnlyMemStore();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13418954" author="xingshi" created="Fri, 20 Jul 2012 06:21:18 +0000"  >&lt;p&gt;toTed&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;TestHRegion#testIncrementWithFlushAndDelete passed without that assignment.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Because the iscan is also read from memstore after I remove the code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
List&amp;lt;KeyValue&amp;gt; fileResults = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;KeyValue&amp;gt;();
- iscan.checkOnlyStoreFiles();
scanner = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
scanner = getScanner(iscan);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And there is no result in memstore, so increment will treat it as 0, it has the same effect as delete.&lt;/p&gt;

&lt;p&gt;I add this case in TestHRegion#testIncrementWithFlushAndDelete in V6.&lt;/p&gt;</comment>
                            <comment id="13419046" author="zhihyu@ebaysf.com" created="Fri, 20 Jul 2012 10:34:07 +0000"  >&lt;p&gt;How about renaming leftResults as remainingResults ?&lt;/p&gt;

&lt;p&gt;Please prepare patch for trunk. &lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13419255" author="zhihyu@ebaysf.com" created="Fri, 20 Jul 2012 15:25:26 +0000"  >&lt;p&gt;In trunk, getLastIncrement() call has been replaced with:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          List&amp;lt;KeyValue&amp;gt; results = get(get, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13445660" author="yuzhihong@gmail.com" created="Fri, 31 Aug 2012 04:57:06 +0000"  >&lt;p&gt;We need patches for all branches before integration.&lt;/p&gt;</comment>
                            <comment id="13445668" author="lhofhansl" created="Fri, 31 Aug 2012 05:07:28 +0000"  >&lt;p&gt;@Ted: This is fixed in 0.94+ (including trunk)&lt;br/&gt;
(0.94+ has lazy-seek, which made the special handling for increments - which causes the issue at hand - obsolete).&lt;/p&gt;</comment>
                            <comment id="15671560" author="esteban" created="Wed, 16 Nov 2016 20:41:04 +0000"  >&lt;p&gt;Resolving per last comment from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12533934" name="HBASE-3725-0.92-V1.patch" size="7043" author="shixing" created="Fri, 29 Jun 2012 03:28:36 +0000"/>
                            <attachment id="12533939" name="HBASE-3725-0.92-V2.patch" size="7050" author="shixing" created="Fri, 29 Jun 2012 05:32:45 +0000"/>
                            <attachment id="12533945" name="HBASE-3725-0.92-V3.patch" size="7072" author="shixing" created="Fri, 29 Jun 2012 06:12:36 +0000"/>
                            <attachment id="12535627" name="HBASE-3725-0.92-V4.patch" size="7097" author="xingshi" created="Mon, 9 Jul 2012 05:41:03 +0000"/>
                            <attachment id="12537128" name="HBASE-3725-0.92-V5.patch" size="3669" author="xingshi" created="Thu, 19 Jul 2012 03:14:46 +0000"/>
                            <attachment id="12537305" name="HBASE-3725-0.92-V6.patch" size="5625" author="xingshi" created="Fri, 20 Jul 2012 06:21:18 +0000"/>
                            <attachment id="12477669" name="HBASE-3725-Test-v1.patch" size="2393" author="streamy" created="Thu, 28 Apr 2011 16:38:49 +0000"/>
                            <attachment id="12477671" name="HBASE-3725-v3.patch" size="4473" author="streamy" created="Thu, 28 Apr 2011 17:14:25 +0000"/>
                            <attachment id="12475440" name="HBASE-3725.patch" size="2267" author="nvcook42" created="Mon, 4 Apr 2011 22:45:04 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 1 Apr 2011 17:06:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26997</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02bqf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11502</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>