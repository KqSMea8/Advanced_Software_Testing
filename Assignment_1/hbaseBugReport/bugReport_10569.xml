<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:15:06 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10569/HBASE-10569.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10569] Co-locate meta and master</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10569</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I was thinking simplifying/improving the region assignments. The first step is to co-locate the meta and the master as many people agreed on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12696009">HBASE-10569</key>
            <summary>Co-locate meta and master</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jxiang">Jimmy Xiang</assignee>
                                    <reporter username="jxiang">Jimmy Xiang</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Feb 2014 17:00:16 +0000</created>
                <updated>Fri, 13 May 2016 09:06:48 +0000</updated>
                            <resolved>Tue, 25 Mar 2014 20:10:44 +0000</resolved>
                                                    <fixVersion>0.99.0</fixVersion>
                                    <component>master</component>
                    <component>Region Assignment</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>35</watches>
                                                                                                            <comments>
                            <comment id="13905749" author="eclark" created="Wed, 19 Feb 2014 17:45:35 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13905851" author="enis" created="Wed, 19 Feb 2014 18:50:51 +0000"  >&lt;p&gt;I think this would be a good incremental step towards a more sane master implementation. We can alternatively decide to not co-locate meta, but make meta read only for region servers and clients, only to be written by master. RS operations will be carried through master (RS sends RPC to master, and master does the meta update). &lt;/p&gt;

&lt;p&gt;If co-locating, are you thinking of opening the region (and rest of RS machinery in master), or move some of the assignment logic to the RS who hosts meta?    &lt;/p&gt;</comment>
                            <comment id="13905883" author="jxiang" created="Wed, 19 Feb 2014 19:03:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;If co-locating, are you thinking of opening the region (and rest of RS machinery in master), or move some of the assignment logic to the RS who hosts meta?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The first one. I was thinking to make a master also a region server. So that all are region servers. By configuration, some region servers can host the master processes.&lt;/p&gt;</comment>
                            <comment id="13933578" author="jxiang" created="Thu, 13 Mar 2014 17:26:34 +0000"  >&lt;p&gt;Attached a patch that passed unit tests, integration tests (including ITBLL), and some live cluster tests. Will put it on RB soon when RB is up.&lt;/p&gt;

&lt;p&gt;Here is what I have done in this patch:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Moved RPC related code out of HRegionServer and HMaster so that they are smaller for easier change/maintenance.&lt;/li&gt;
	&lt;li&gt;Make HMaster extends HRegionServer so that HMaster is also a HRegionServer, removed duplicate code/parameters.&lt;/li&gt;
	&lt;li&gt;Due to 2, HMaster#getMetrics is renamed to getMasterMetrics to avoid naming conflict with HRegionServer#getMetrics. The same has been done to HMaster#getCoprocessors, #getCoprocessorHost.&lt;/li&gt;
	&lt;li&gt;Added HRegionServer#getRpcServices and HMaster#getMasterRpcServices to expose the RPC functionalities.&lt;/li&gt;
	&lt;li&gt;Changed references related to 3 and 4 (a lot, especially in tests).&lt;/li&gt;
	&lt;li&gt;HMaster and HRegionServer share one RPC server and one InfoServer.&lt;/li&gt;
	&lt;li&gt;RpcServiceInterface is changed a little. Method #startThreads and #openServer are removed since backup master doesn&#8217;t hold the RPC server any more. A parameter HMaster#serviceStarted is introduced to indicate if a master is active so as ServerNotRunningYetException can be thrown before a master is active.&lt;/li&gt;
	&lt;li&gt;Master recovery in case of ZK connection loss is removed since it doesn&#8217;t recover listeners added in HRegionServer. We can get this feature back if needed. The other reason I didn&#8217;t try to get it back is because we are going to use raft to choose active master instead of relying on ZK.&lt;/li&gt;
	&lt;li&gt;HRegionServer on the active HMaster communicates with the active HMaster directly instead of going through the RPC. Shortcut helps.&lt;/li&gt;
	&lt;li&gt;Master(active/backup) web UI contains info about the corresponding region server.&lt;/li&gt;
	&lt;li&gt;Backup master moves users regions away (and meta/namespace region to the master if already assigned somewhere else) after becoming active.&lt;/li&gt;
	&lt;li&gt;Integration testing doesn&#8217;t restart the master as a region server, or restart the region server that holds the meta. One reason is because the startup script can&#8217;t tell if a region server should be master.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Here is a list of things to be done (in separate issues):&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Need to make sure the master listens to the old ports (RPC + webUI) too, so as to support rolling upgrade from old versions (0.96+), and be backward compatible.&lt;/li&gt;
	&lt;li&gt;Need to consolidate&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; chores/threads/handlers in master/regionserver, so that the active master manager in the backup master has a high priority so that it can grab the ZK node faster, before we move to raft.&lt;/li&gt;
	&lt;li&gt;Clean up MetaServerShutdownHandler and HMaster#assignMeta in next major release when rolling upgrade is not an issue any more. This should be done much later.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13933581" author="jxiang" created="Thu, 13 Mar 2014 17:28:33 +0000"  >&lt;p&gt;The patch contains several bug fixes. I will create separate issues (already created some actually) so that I can push the fixes to 0.96 and 0.98.&lt;/p&gt;</comment>
                            <comment id="13933621" author="yuzhihong@gmail.com" created="Thu, 13 Mar 2014 17:50:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;Backup master moves users regions away (and meta/namespace region to the master if already assigned somewhere else) after becoming active.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you elaborate a bit more about what &apos;moves users regions away&apos; means ?&lt;/p&gt;

&lt;p&gt;nit: items are under bullets but referenced by B, C, etc&lt;br/&gt;
It would be easier to read if items are labeled alphabetically.&lt;/p&gt;</comment>
                            <comment id="13933649" author="jxiang" created="Thu, 13 Mar 2014 18:01:45 +0000"  >&lt;p&gt;Fixed. Thanks.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can you elaborate a bit more about what &apos;moves users regions away&apos; means ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Since a backup master is also a region server, it could hold many user regions. After it becomes the active master, we try to move these user regions to other region servers so that the active master holds just the meta and the namespace regions. The purpose is to reduce the load on the active master.  We could add other regions to the active master later on.&lt;/p&gt;
</comment>
                            <comment id="13933659" author="yuzhihong@gmail.com" created="Thu, 13 Mar 2014 18:05:43 +0000"  >&lt;blockquote&gt;&lt;p&gt;the active master holds just the meta and the namespace regions&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;What about ACL and visibility regions ?&lt;/p&gt;</comment>
                            <comment id="13933679" author="jxiang" created="Thu, 13 Mar 2014 18:14:18 +0000"  >&lt;p&gt;Yes, we can put them on master too.&lt;/p&gt;</comment>
                            <comment id="13933881" author="jxiang" created="Thu, 13 Mar 2014 18:54:21 +0000"  >&lt;p&gt;Patch v1 is on RB now: &lt;a href=&quot;https://reviews.apache.org/r/19198/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/19198/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13933897" author="hadoopqa" created="Thu, 13 Mar 2014 19:01:01 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12634484/hbase-10569_v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12634484/hbase-10569_v1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12634484&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 176 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 hadoop1.0&lt;/font&gt;.  The patch failed to compile against the hadoop 1.0 profile.&lt;br/&gt;
    Here is snippet of errors:&lt;/p&gt;
    &lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:testCompile (&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;-testCompile) on project hbase-server: Compilation failure
[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterNoCluster.java:[87,24] cannot find symbol
[ERROR] symbol  : method setMiniClusterMode(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
[ERROR] location: class org.apache.hadoop.metrics2.lib.DefaultMetricsSystem
[ERROR] -&amp;gt; [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:testCompile (&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;-testCompile) on project hbase-server: Compilation failure
/home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterNoCluster.java:[87,24] cannot find symbol
symbol  : method setMiniClusterMode(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
location: class org.apache.hadoop.metrics2.lib.DefaultMetricsSystem

	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:213)
--
Caused by: org.apache.maven.plugin.CompilationFailureException: Compilation failure
/home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterNoCluster.java:[87,24] cannot find symbol
symbol  : method setMiniClusterMode(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
location: class org.apache.hadoop.metrics2.lib.DefaultMetricsSystem

	at org.apache.maven.plugin.AbstractCompilerMojo.execute(AbstractCompilerMojo.java:729)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8974//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8974//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13933913" author="jxiang" created="Thu, 13 Mar 2014 19:13:43 +0000"  >&lt;p&gt;We are not going to support hadoop 1.0 any more, right?  &lt;a href=&quot;http://search-hadoop.com/m/DHED4OxD4C/Next+releases+of+HBase+will+drop+Hadoop-1.x+support&amp;amp;subj=+ANNOUNCE+Next+releases+of+HBase+will+drop+Hadoop+1+x+support&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search-hadoop.com/m/DHED4OxD4C/Next+releases+of+HBase+will+drop+Hadoop-1.x+support&amp;amp;subj=+ANNOUNCE+Next+releases+of+HBase+will+drop+Hadoop+1+x+support&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Can we fix the pre-commit test?&lt;/p&gt;</comment>
                            <comment id="13934025" author="enis" created="Thu, 13 Mar 2014 20:44:20 +0000"  >&lt;p&gt;Ted has a fix for it in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10691&quot; title=&quot;test-patch.sh should continue even if compilation against hadoop 1.0 / 1.1 fails&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10691&quot;&gt;&lt;del&gt;HBASE-10691&lt;/del&gt;&lt;/a&gt;, but I think it is good to keep the hadoop1 compile around for some more time, since we are still backporting bug fixes etc to 0.98 and 0.96. Maybe we can make it so that the pre-commit test will continue, and just report that the compilation failed as an FYI. &lt;/p&gt;</comment>
                            <comment id="13934032" author="jxiang" created="Thu, 13 Mar 2014 20:50:34 +0000"  >&lt;p&gt;I see. That&apos;s a good idea. Thanks.&lt;/p&gt;</comment>
                            <comment id="13934194" author="stack" created="Thu, 13 Mar 2014 22:08:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;# Due to 2, HMaster#getMetrics is renamed to getMasterMetrics to avoid naming conflict with HRegionServer#getMetrics. The same has been done to HMaster#getCoprocessors, #getCoprocessorHost.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Make it symmetrical?  s/getMetrics/getRegionServerMetrics/&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Added HRegionServer#getRpcServices and HMaster#getMasterRpcServices to expose the RPC functionalities.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why expose these?  Were they exposed before?  When I ask the master for its rpc engine, will it be the same as the regionservers?  (It sounds like they will be the same going by #6).  If so, should the method be getRpcServices whether on Master or on HRegionServrer (add it to the Server Interface?).&lt;/p&gt;

&lt;p&gt; Do you mean RpcServiceInterface or RpcServerInterface?  If the latter, change it all you want.  What is there currently is a bit of a mess.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Master recovery in case of ZK connection loss is removed since it doesn&#8217;t recover listeners added in HRegionServer. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This was a bad idea in the first place?  Or rather, it improved our &apos;usability&apos; when a single Master only in that Master would &apos;come back to life&apos;....but if backup Masters, it was racing the backup Master? (IIRC).&lt;/p&gt;

&lt;p&gt;Let me look at the patch.&lt;/p&gt;

&lt;p&gt;This is great Jimmy.&lt;/p&gt;
</comment>
                            <comment id="13934521" author="jxiang" created="Fri, 14 Mar 2014 03:29:50 +0000"  >&lt;p&gt;Thanks for reviewing it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Make it symmetrical? s/getMetrics/getRegionServerMetrics/&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, will do it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why expose these? Were they exposed before?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The reason is that HRegionServer doesn&apos;t implement the regionserver RPC interface any more. To access the RPC functionalities directly, we need to expose it. Before that, HRegionServer implements the RPC interface, so there is no such issue. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When I ask the master for its rpc engine, will it be the same as the regionservers?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, it is the same. Actually, here we are not trying to get the RPC engine.  We are just trying to get the RPC functions bypass the RPC.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;add it to the Server Interface?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Probably not apply. Perhaps the method name is confusing. I was meant to get the RPC interface.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do you mean RpcServiceInterface or RpcServerInterface?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You are right, the RpcServerInterface.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This was a bad idea in the first place? Or rather, it improved our &apos;usability&apos; when a single Master only in that Master would &apos;come back to life&apos;....but if backup Masters, it was racing the backup Master? (IIRC).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think it is a good idea. But we are going to move away from ZK for leader selection. So I didn&apos;t fix this part.&lt;/p&gt;</comment>
                            <comment id="13934548" author="stack" created="Fri, 14 Mar 2014 04:06:36 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt; ACK&apos;ing our comments.  Sounds good to me.&lt;/p&gt;</comment>
                            <comment id="13942686" author="hadoopqa" created="Fri, 21 Mar 2014 02:24:42 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12635924/hbase-10569_v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12635924/hbase-10569_v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12635924&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 183 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 8 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                t.getMessage().contains(&quot;org/apache/hadoop/hdfs/protocol/FSConstants$SafeModeAction&quot;)) {&lt;br/&gt;
+      for(HTableDescriptor htd: master.listTableDescriptorsByNamespace(request.getNamespaceName())) {&lt;br/&gt;
+      Threads.setDaemonThreadRunning(this.healthCheckChore.getThread(), getName() + &quot;.healthChecker&quot;,&lt;br/&gt;
+      Threads.setDaemonThreadRunning(this.nonceManagerChore.getThread(), getName() + &quot;.nonceCleaner&quot;,&lt;br/&gt;
+      final RegionActionResult.Builder builder, List&amp;lt;CellScannable&amp;gt; cellsToReturn, long nonceGroup) {&lt;br/&gt;
+      boolean closed = regionServer.closeRegion(encodedRegionName, false, zk, versionOfClosingNode, sn);&lt;br/&gt;
+            Boolean closing = regionServer.regionsInTransitionInRS.get(region.getEncodedNameAsBytes());&lt;br/&gt;
+          regionServer.nonceManager.reportOperationFromWal(nonceGroup, nonce, entry.getKey().getWriteTime());&lt;br/&gt;
+    MasterCoprocessorHost cpHost = util.getMiniHBaseCluster().getMaster().getMasterCoprocessorHost();&lt;br/&gt;
+        for (HRegionInfo r : ProtobufUtil.getOnlineRegions(t.getRegionServer().getRSRpcServices())) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.wal.TestLogRolling.testLogRollOnDatanodeDeath(TestLogRolling.java:368)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9056//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13943687" author="jxiang" created="Fri, 21 Mar 2014 22:52:14 +0000"  >&lt;p&gt;In patch v3, I reverted the change to MasterServices. ActiveMasterManager doesn&apos;t have a thread now. The thread creation is moved to HMaster. Reverted the change in master web UI about the master info port so that it will be easier to support rolling restart.&lt;/p&gt;</comment>
                            <comment id="13943785" author="hadoopqa" created="Sat, 22 Mar 2014 00:28:05 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12636132/hbase-10569_v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12636132/hbase-10569_v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12636132&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 183 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9073//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9073//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13944454" author="jxiang" created="Sun, 23 Mar 2014 15:47:25 +0000"  >&lt;p&gt;Attached v3.1, rebased to trunk latest.&lt;/p&gt;</comment>
                            <comment id="13944490" author="hadoopqa" created="Sun, 23 Mar 2014 17:36:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12636254/hbase-10569_v3.1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12636254/hbase-10569_v3.1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12636254&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 183 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +              t.getMessage().contains(&quot;org/apache/hadoop/hdfs/protocol/FSConstants$SafeModeAction&quot;)) {&lt;br/&gt;
+      for(HTableDescriptor htd: master.listTableDescriptorsByNamespace(request.getNamespaceName())) {&lt;br/&gt;
+      Threads.setDaemonThreadRunning(this.healthCheckChore.getThread(), getName() + &quot;.healthChecker&quot;,&lt;br/&gt;
+      Threads.setDaemonThreadRunning(this.nonceManagerChore.getThread(), getName() + &quot;.nonceCleaner&quot;,&lt;br/&gt;
+      final RegionActionResult.Builder builder, List&amp;lt;CellScannable&amp;gt; cellsToReturn, long nonceGroup) {&lt;br/&gt;
+      boolean closed = regionServer.closeRegion(encodedRegionName, false, zk, versionOfClosingNode, sn);&lt;br/&gt;
+            Boolean closing = regionServer.regionsInTransitionInRS.get(region.getEncodedNameAsBytes());&lt;br/&gt;
+          regionServer.nonceManager.reportOperationFromWal(nonceGroup, nonce, entry.getKey().getWriteTime());&lt;br/&gt;
+    MasterCoprocessorHost cpHost = util.getMiniHBaseCluster().getMaster().getMasterCoprocessorHost();&lt;br/&gt;
+        for (HRegionInfo r : ProtobufUtil.getOnlineRegions(t.getRegionServer().getRSRpcServices())) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9077//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13945807" author="stack" created="Mon, 24 Mar 2014 22:41:58 +0000"  >&lt;p&gt;I&apos;m +1 on this going into trunk.  Jimmy is working on ensuring rolling restart works in other issues.  Any objections?  This thing needs a fat release note Jimmy.&lt;/p&gt;</comment>
                            <comment id="13947081" author="jxiang" created="Tue, 25 Mar 2014 20:10:44 +0000"  >&lt;p&gt;Integrated into trunk. Thanks Stack a lot for the review.&lt;/p&gt;</comment>
                            <comment id="13947496" author="hudson" created="Wed, 26 Mar 2014 03:05:59 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #5040 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5040/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5040/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10569&quot; title=&quot;Co-locate meta and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10569&quot;&gt;&lt;del&gt;HBASE-10569&lt;/del&gt;&lt;/a&gt; Co-locate meta and master - ADDENDUM (jxiang: rev 1581513)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMasterCommandLine.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10569&quot; title=&quot;Co-locate meta and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10569&quot;&gt;&lt;del&gt;HBASE-10569&lt;/del&gt;&lt;/a&gt; Co-locate meta and master (jxiang: rev 1581479)&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/catalog/CatalogTracker.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionAdapter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-it/src/test/java/org/apache/hadoop/hbase/DistributedHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/actions/Action.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/actions/RestartRsHoldingMetaAction.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/BackupMasterStatusTmpl.jamon&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/RegionServerListTmpl.jamon&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl.jamon&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/client/CoprocessorHConnection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServerInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/ActiveMasterManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterDumpServlet.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterStatusServlet.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MetricsMasterWrapperImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStates.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/ClusterLoadState.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/CreateTableHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/DeleteTableHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/DisableTableHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/EnableTableHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/ModifyTableHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/TableAddFamilyHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/TableDeleteFamilyHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/TableModifyFamilyHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/monitoring/StateDumpServlet.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/AnnotationReadingPriorityFunction.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServerCommandLine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSDumpServlet.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionMergeTransaction.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RpcSchedulerFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SimpleRpcSchedulerFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/JVMClusterUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/resources/hbase-webapps/master/zk.jsp&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/MiniHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/MockRegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/TestDrainingServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/TestGlobalMemStoreSize.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/TestNamespace.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/TestRegionRebalancing.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/catalog/TestMetaReaderEditor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/HConnectionTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestClientScannerRPCTimeout.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultiParallel.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestScannersFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassLoading.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestHTableWrapper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithRemove.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/fs/TestBlockReorder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFilesSplitRecovery.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/MockRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/Mocking.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestActiveMasterManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterFailover.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterMetricsWrapper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterNoCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterRestartAfterDisablingTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterShutdown.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterStatusServlet.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestRollingRestart.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestTableLockManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestZKBasedOpenCloseRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/balancer/BalancerTestBase.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/balancer/TestBaseLoadBalancer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/cleaner/TestSnapshotFromMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/OOMERegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestClusterId.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestEndToEndSplitTransaction.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestPriorityRpc.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQosFunction.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRSKilledWhenInitializing.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRSStatusServlet.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerNoMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogFiltering.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestNamespaceCommands.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/snapshot/SnapshotTestingUtils.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13948729" author="enis" created="Thu, 27 Mar 2014 01:11:34 +0000"  >&lt;p&gt;Did minor edit to release notes. Nice work Jimmy! &lt;/p&gt;</comment>
                            <comment id="13949426" author="hudson" created="Thu, 27 Mar 2014 15:02:29 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5044 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5044/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5044/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10840&quot; title=&quot;Fix findbug warn induced by HBASE-10569&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10840&quot;&gt;&lt;del&gt;HBASE-10840&lt;/del&gt;&lt;/a&gt; Fix findbug warn induced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10569&quot; title=&quot;Co-locate meta and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10569&quot;&gt;&lt;del&gt;HBASE-10569&lt;/del&gt;&lt;/a&gt;.(Anoop) (anoopsamjohn: rev 1582242)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13949612" author="lhofhansl" created="Thu, 27 Mar 2014 17:09:46 +0000"  >&lt;p&gt;Just noticed this issue now.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Active master serves table META, namespace, and ACL in a secure installation.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;So when we failover the master we&apos;ll force a move of meta. Won&apos;t that lead to bigger &quot;blib&quot; than before.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Backup masters are regionservers too. They serve regions, while trying to be the next active master. Once a backup master becomes the active one, it will serve META and namespace table. Load balancer will move user regions to other regionservers. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Seems like this will wreak havoc to data locality.&lt;/p&gt;

&lt;p&gt;Master failover used to be a light weight event. I fear this makes it much more heavy weight.&lt;/p&gt;</comment>
                            <comment id="13949729" author="jxiang" created="Thu, 27 Mar 2014 18:13:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;So when we failover the master we&apos;ll force a move of meta. Won&apos;t that lead to bigger &quot;blib&quot; than before.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Namespace and ACL are small tables cached in ZK/RS. For META, yes, it&apos;s a bigger &quot;blib&quot;. If we remove ZK from the assignment in the future, when the master is failing over, nobody can update the meta. In this case, the meta info cached in the client side won&apos;t change.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Seems like this will wreak havoc to data locality.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10815&quot; title=&quot;Master regionserver should be rolling-upgradable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10815&quot;&gt;&lt;del&gt;HBASE-10815&lt;/del&gt;&lt;/a&gt;, we will introduce a configuration so that we can exclude backup masters from serving regions. That should help.&lt;/p&gt;</comment>
                            <comment id="13961582" author="toffer" created="Mon, 7 Apr 2014 00:17:38 +0000"  >&lt;p&gt;Sorry late seeing this patch. Would this patch prevent us from ever splitting the meta in the future? HDFS is moving towards separating namenode responsibilities to have better scalability, just concerned we are doing the reverse (consolidation) and will make scaling harder to do down the road?   &lt;/p&gt;</comment>
                            <comment id="13961590" author="jxiang" created="Mon, 7 Apr 2014 00:38:53 +0000"  >&lt;p&gt;We can still split the meta. A master can host several regions, right?&lt;/p&gt;</comment>
                            <comment id="13961596" author="toffer" created="Mon, 7 Apr 2014 00:56:13 +0000"  >&lt;p&gt;Sorry just to clarify, the regions also have to be servable by different servers this way we have a much stronger case for horizontal scalability.&lt;/p&gt;</comment>
                            <comment id="13961628" author="lhofhansl" created="Mon, 7 Apr 2014 03:24:56 +0000"  >&lt;p&gt;I share the concern. Part of the benefit of splitting META is that we server portions of it in different RegionServers.&lt;br/&gt;
Also, seeing the other fallouts from this (eager assignment of Region to the master, moving META during a HMaster failover - which was lightweight before)... I am no longer sure that this is a good idea at all.&lt;/p&gt;</comment>
                            <comment id="13961979" author="jxiang" created="Mon, 7 Apr 2014 16:27:50 +0000"  >&lt;p&gt;Meta regions of course can be assigned to other region servers too. As to Lars&apos; concern, I was thinking to make it a load balancer decision about where to put meta regions. So it can be changed easily.&lt;/p&gt;</comment>
                            <comment id="13962019" author="jxiang" created="Mon, 7 Apr 2014 17:02:59 +0000"  >&lt;p&gt;I filed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10923&quot; title=&quot;Control where to put meta region&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10923&quot;&gt;&lt;del&gt;HBASE-10923&lt;/del&gt;&lt;/a&gt; to make it configurable as to where to assign the meta region.&lt;/p&gt;</comment>
                            <comment id="13962169" author="stack" created="Mon, 7 Apr 2014 19:35:28 +0000"  >&lt;p&gt;Is this issue misnamed?  Should it be &quot;One process to do both regionserver and master duties&quot; or some such?&lt;/p&gt;

&lt;p&gt;Colocating master and meta has gotten push back both by Francis and Lars just recently but also earlier up in rb (&lt;a href=&quot;https://reviews.apache.org/r/19198/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/19198/&lt;/a&gt; &amp;#8211; see tail of first review comment).&lt;/p&gt;

&lt;p&gt;Yes, we need to be able to split meta....&lt;/p&gt;</comment>
                            <comment id="13962185" author="sershe" created="Mon, 7 Apr 2014 19:51:11 +0000"  >&lt;p&gt;We can have split meta in this case with distributed master? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13963672" author="stack" created="Wed, 9 Apr 2014 00:50:15 +0000"  >&lt;p&gt;So, chatted with Jimmy and Matteo and intend doubling-down on this issues&apos; original description; i.e. colocating meta and master; no meta if no master and vice versa so ignore my suggestions we change the subject of this issue.&lt;/p&gt;

&lt;p&gt;See one-pager here for more argument why we think this the way to go.  Includes answers for above concerns: &lt;a href=&quot;https://docs.google.com/document/d/1xC-bCzAAKO59Xo3XN-Cl6p-5CM_4DMoR-WpnkmYZgpw/edit#heading=h.99evfnn62059&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.google.com/document/d/1xC-bCzAAKO59Xo3XN-Cl6p-5CM_4DMoR-WpnkmYZgpw/edit#heading=h.99evfnn62059&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13964443" author="lhofhansl" created="Wed, 9 Apr 2014 17:41:41 +0000"  >&lt;p&gt;Thanks for writing this up. If the active HMaster only holds META that should be fine, it&apos;d be moved/recovered quickly. Local writes are great, no cross machine coordination needed.&lt;/p&gt;</comment>
                            <comment id="13969283" author="toffer" created="Tue, 15 Apr 2014 07:04:04 +0000"  >&lt;p&gt;Thanks for the writeup. Left some comments, mainly concerned about splittability, as it seems the main draw of this approach is local writes to the meta which seems to be at odds with meta splittability?&lt;/p&gt;</comment>
                            <comment id="13969780" author="apurtell" created="Tue, 15 Apr 2014 17:26:19 +0000"  >&lt;p&gt;Please capture the Google document and its comments on this JIRA, all discussions should eventually appear on ASF resources. Thanks!&lt;/p&gt;</comment>
                            <comment id="13969871" author="stack" created="Tue, 15 Apr 2014 18:34:28 +0000"  >&lt;p&gt;I attached the file.  Comments are missing.  Need to go to Google Doc for that or I can copy them here.&lt;/p&gt;</comment>
                            <comment id="13970083" author="apurtell" created="Tue, 15 Apr 2014 21:36:02 +0000"  >&lt;p&gt;Thanks. I can export the doc + comments as DOCX and attach when the discussion there is done. &lt;/p&gt;</comment>
                            <comment id="13991158" author="jxiang" created="Tue, 6 May 2014 21:21:19 +0000"  >&lt;p&gt;Added a doc to clarify some about master/rs and deployment impact related to this issue.&lt;/p&gt;</comment>
                            <comment id="13992044" author="enis" created="Wed, 7 May 2014 17:55:18 +0000"  >&lt;p&gt;Thanks Jimmy for the doc. Sorry I was not in the hackaton, so missed the discussions there.  A couple of questions, &lt;br/&gt;
1) Will this break rolling upgrades from 0.98 -&amp;gt; 0.99? We want to keep 0.98 to 1.0 rolling restart support. &lt;br/&gt;
2) if we are also allowing to completely disable this feature (as in the other jira), will there still be benefit for this?&lt;/p&gt;</comment>
                            <comment id="13996641" author="toffer" created="Tue, 13 May 2014 17:05:55 +0000"  >&lt;p&gt;Thanks for the doc. Itd be great if we could have the list of use cases we are trying to solve. So we have that motivate the design decisions. &lt;/p&gt;

&lt;p&gt;During the discussion and my chat with Matteo and Jimmy here is what I got:&lt;/p&gt;

&lt;p&gt;1. A method to guarantee security acl changes are fully propagated when a acl change is requested&lt;br/&gt;
2. Same as #1 but for quota&lt;br/&gt;
3. Remove master daemon to simplify deployment/ops&lt;br/&gt;
4. Have a designated set of servers system tables will be hosted on. To isolate it from user region workloads. &lt;/p&gt;

&lt;p&gt;Feel free to add if I missed anything. &lt;/p&gt;

&lt;p&gt;#3 and #4 directly motivates this patch. Tho it seeems there was an agreement to still hqve designated hosts as masters?&lt;/p&gt;

&lt;p&gt;It seems to me #1 and #2 are use cases for a synchronous coordination frameowrk (consensus discussion).  Which may or may not require system table colocation. Having fault tolerant coordination as a first class primitive is sorely missing. And I believe enable us avoid design choices which would impede horizontal scalability. &lt;/p&gt;
</comment>
                            <comment id="13996691" author="mbertozzi" created="Tue, 13 May 2014 17:50:50 +0000"  >&lt;p&gt;I think the main motivation is the colocation of all the components that are usually involved in a single &quot;transaction&quot;. The main example of this is the Assignment, which involve: Master, META, ZooKeeper.&lt;/p&gt;

&lt;p&gt;#1 and #2 are part of a generic notification system, which will be used to propagate ACLs, Visibility, Quotas. (In theory the base of this system is also the one behind the ZK-less Assignment)&lt;/p&gt;

&lt;p&gt;For the Horizontal scalability, I think that we are going to have Multiple Master each one operating on its subsection of &quot;meta&quot; (and the notification system). This means that you will have concurrent assignments on different masters. &lt;br/&gt;
The best case is where you can fit a full table (regions metadata) on a single master, the other case is where your table is split on multiple master which means that operation that requires to work on the full set of regions e.g. delete, disable, enable need some sort of coordination to provide the full consistency that you&apos;ll get with a full table that fits on a single master. &lt;/p&gt;</comment>
                            <comment id="13997130" author="stack" created="Wed, 14 May 2014 00:52:37 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Will this break rolling upgrades from 0.98 -&amp;gt; 0.99? We want to keep 0.98 to 1.0 rolling restart support. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It is required we can rolling upgrade from 0.98 to 1.0 (do we have that in our 1.0 scope doc?  If not, lets do so).  This feature should not preclude.  At hackathon discussion was a means of maintaining the current topology &amp;#8211; i.e. Masters do mastering and nothing else, BU Masters sit idle &amp;#8211; because at least for vendors who are not at a major version juncture when hbase 1.0 ships, they&apos;ll probably want to keep the old layout.  I think that as long as we can do a rolling upgrade and we broadcast it loud enough in the release notes, a master&apos;s role changing going from 0.98 to 0.99 such that it hosts regions would be fine (in apache hbase).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;if we are also allowing to completely disable this feature (as in the other jira), will there still be benefit for this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think it on by default in 1.0 apache hbase.  If not then, if others think differently, on by default in apache hbase 2.0.&lt;/p&gt;

&lt;p&gt;I updated the attached doc. to address some of the comments.  I also put there as something to keep in mind Francis&apos;s requirement that hbase master be able to do 1M regions (host and assign fast) very soon and 50M regions not too long after that.&lt;/p&gt;</comment>
                            <comment id="13997138" author="stack" created="Wed, 14 May 2014 01:00:22 +0000"  >&lt;p&gt;Sorry, assigned  myself by mistack.&lt;/p&gt;</comment>
                            <comment id="13997217" author="enis" created="Wed, 14 May 2014 02:48:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;It is required we can rolling upgrade from 0.98 to 1.0 (do we have that in our 1.0 scope doc? If not, lets do so).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I though unless we break it, it should be de facto from release to release. Opened &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11164&quot; title=&quot;Document and test rolling updates from 0.98 -&amp;gt; 1.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11164&quot;&gt;&lt;del&gt;HBASE-11164&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;At hackathon discussion was a means of maintaining the current topology &#8211; i.e. Masters do mastering and nothing else, BU Masters sit idle&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is why I was arguing that backup masters should default to hosting no regions unless explicitly specified. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;because at least for vendors who are not at a major version juncture when hbase 1.0 ships, they&apos;ll probably want to keep the old layout.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed, that is what we are going to do. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I think it on by default in 1.0 apache hbase. If not then, if others think differently, on by default in apache hbase 2.0.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;My concern is that if we cannot immediately get the benefits of co-locating, and the vendors or some big deployments won&apos;t turn this on, what is the benefit of having this complexity. We should not do this for saving on RPC&apos;s, but actually getting rid of master in-memory state. If we have the state in meta and only in meta, then we won&apos;t need colocation requirements or meta-as-a-single-region. &lt;/p&gt;</comment>
                            <comment id="13997248" author="stack" created="Wed, 14 May 2014 03:54:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;...what is the benefit of having this complexity.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Complex because we need to be able to support both topologies? (The patch is taking us toward a simpler deploy and a master state that is easier to reason about; these is also some nice refactoring of the megalithic  master and regionserver classes).&lt;/p&gt;

&lt;p&gt;I could buy the argument that for 1.0 we should just go w/ the old topology and do clean switch to new layout in 2.0.  I would like it to be on sooner than this but we are short on testing as it is so one less option, is likely the way to go.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We should not do this for saving on RPC&apos;s, but actually getting rid of master in-memory state.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is not about saving RPCs.  It is not about getting rid of master-in-memory state either.  If anything, it is about more of the cluster state being owned by master.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If we have the state in meta and only in meta, then we won&apos;t need colocation requirements or meta-as-a-single-region.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not sure how this would work.  meta is dumb.  You need an agent of some kind.   I&apos;d like to hear more E.&lt;/p&gt;

&lt;p&gt;This issue has gotten a bit messy (&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; called it first in attached doc saying we seem to be talking about what this issue is not about).  It is raising loads of good stuff that we need to break out and make sure it all gets covered (I opened &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11165&quot; title=&quot;Scaling so cluster can host 1M regions and beyond (50M regions?)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11165&quot;&gt;HBASE-11165&lt;/a&gt; at Francis prompting).  I could give this a pass and add links to our 1.0 issue.&lt;/p&gt;</comment>
                            <comment id="13997647" author="jxiang" created="Wed, 14 May 2014 15:30:59 +0000"  >&lt;p&gt;Totally agree with what Stack and Matteo said.&lt;/p&gt;

&lt;p&gt;As to &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;&apos;s question:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;2) if we are also allowing to completely disable this feature (as in the other jira), will there still be benefit for this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Big features usually come in with an option to disable it at first. This is a basic idea to introduce great features with smooth migration paths for users at the beginning, right?&lt;/p&gt;</comment>
                            <comment id="13997755" author="stack" created="Wed, 14 May 2014 16:53:37 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt; Should we default on co-located master and meta for apache hbase 1.0 (nice new &apos;feature&apos;?)  If defaulted on, it&apos;ll be tested.  We (and vendors) can also test old topology still works.  We should probably ask out on list.....&lt;/p&gt;</comment>
                            <comment id="13997854" author="jmhsieh" created="Wed, 14 May 2014 18:24:28 +0000"  >&lt;p&gt;I thought that is what we agreed upon old topology default for 1.0 and new topology default for trunk/2.0 during the pow-wow.&lt;/p&gt;

&lt;p&gt;My vote is to keep the old topology for hbase 1.0, but have the option to go new in 1.0.  For 2.0/trunk, we default to the new topology.  The old topology is well understood operationally for deploys.  Though straightforward for us devs, I think having a brand new deployment style with gotcha&apos;s we haven&apos;t figured out at scale with yet is risky for what we want to be a super stable release.&lt;/p&gt;</comment>
                            <comment id="13998302" author="jxiang" created="Thu, 15 May 2014 00:13:17 +0000"  >&lt;p&gt;The default is on now. &lt;/p&gt;</comment>
                            <comment id="13998368" author="enis" created="Thu, 15 May 2014 01:42:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think having a brand new deployment style with gotcha&apos;s we haven&apos;t figured out at scale with yet is risky for what we want to be a super stable release.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 for that. It was also one of my concerns for 1.0. &lt;/p&gt;</comment>
                            <comment id="13998479" author="stack" created="Thu, 15 May 2014 06:11:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;I thought that is what we agreed upon old topology default for 1.0 and new topology default for trunk/2.0 during the pow-wow.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Point of order: If I read it right, you can only do &apos;agreement&apos; on mailing list (&quot;Community decisions must be reached on the mailing list. &quot; &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;).&lt;/p&gt;

&lt;p&gt;At the powwow we raised this issue, yeah.  We said stuff like it probably more palatable, as noted above, that &quot;...for 1.0 we should just go w/ the old topology and do clean switch to new layout in 2.0...&quot; and that we needed to bring this issue to the 1.0 RM&apos;s attention. I&apos;d be in favor of keeping our current default for 1.0 apache hbase but would be fine if folks want to flip the option so master carrying regions is not on by default.&lt;/p&gt;

&lt;p&gt;1. &lt;a href=&quot;https://blogs.apache.org/comdev/entry/how_apache_projects_use_consensus&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://blogs.apache.org/comdev/entry/how_apache_projects_use_consensus&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13998559" author="toffer" created="Thu, 15 May 2014 07:59:11 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I think the main motivation is the colocation of all the components that are usually involved in a single &quot;transaction&quot;. The &lt;br/&gt;
main example of this is the Assignment, which involve: Master, META, ZooKeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I see but the notion of consolidation is counter-intuitive if we want hbase to be horizontally scalable. See the-node-that-must-not-be-named as an example.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;#1 and #2 are part of a generic notification system, which will be used to propagate ACLs, Visibility, Quotas. (In theory the base of this system is also the one behind the ZK-less Assignment)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We should be able to implement a notification system without #1 and #2? Would be good to have a doc describing and motivatiing why we need the dependency. And why it is better than a generic version of the current approach.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For the Horizontal scalability, I think that we are going to have Multiple Master each one operating on its subsection of &quot;meta&quot; (and the notification system). This means that you will have concurrent assignments on different masters.&lt;br/&gt;
The best case is where you can fit a full table (regions metadata) on a single master, the other case is where your table is split on multiple master which means that operation that requires to work on the full set of regions e.g. delete, disable, enable need some sort of coordination to provide the full consistency that you&apos;ll get with a full table that fits on a single master.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep, instead avoiding distributed coordination tasks we should make distributed operations a first class operation.&lt;/p&gt;</comment>
                            <comment id="13998795" author="jmhsieh" created="Thu, 15 May 2014 14:13:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;Point of order: If I read it right, you can only do &apos;agreement&apos; on mailing list (&quot;Community decisions must be reached on the mailing list. &quot; &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for the reminder.  Duly noted.&lt;/p&gt;</comment>
                            <comment id="14000339" author="mantonov" created="Fri, 16 May 2014 21:27:38 +0000"  >&lt;p&gt;Regarding some discussion about hosting META on master&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if we want to run cluster with 1M or 50M regions (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11165&quot; title=&quot;Scaling so cluster can host 1M regions and beyond (50M regions?)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11165&quot;&gt;HBASE-11165&lt;/a&gt;), we may (will?) have to host META regions on multiple servers&lt;/li&gt;
	&lt;li&gt;on the zk-less assignments (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11059&quot; title=&quot;ZK-less region assignment&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11059&quot;&gt;&lt;del&gt;HBASE-11059&lt;/del&gt;&lt;/a&gt;), short-circuit atomic updates of meta were mentioned (making use of the fact that meta is local to master).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That said, how do we now define that - is hosting meta on master the very-nice-to-have optimization, or is that pre-requisite for cluster to function?&lt;/p&gt;
</comment>
                            <comment id="14152590" author="jxiang" created="Tue, 30 Sep 2014 00:20:59 +0000"  >&lt;p&gt;Updated the release notes because &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12034&quot; title=&quot;If I kill single RS in branch-1, all regions end up on Master!&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12034&quot;&gt;&lt;del&gt;HBASE-12034&lt;/del&gt;&lt;/a&gt; changed the behavior a little bit.&lt;/p&gt;</comment>
                            <comment id="14310324" author="hudson" created="Sat, 7 Feb 2015 00:46:31 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6100 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6100/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6100/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12956&quot; title=&quot;Binding to 0.0.0.0 is broken after HBASE-10569&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12956&quot;&gt;&lt;del&gt;HBASE-12956&lt;/del&gt;&lt;/a&gt; Binding to 0.0.0.0 is broken after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10569&quot; title=&quot;Co-locate meta and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10569&quot;&gt;&lt;del&gt;HBASE-10569&lt;/del&gt;&lt;/a&gt; (enis: rev 3b56d2a0bc36f9dcb901bb709b8d9ae58df955ff)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestHBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14310351" author="hudson" created="Sat, 7 Feb 2015 00:56:51 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.0 #718 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/718/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/718/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12956&quot; title=&quot;Binding to 0.0.0.0 is broken after HBASE-10569&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12956&quot;&gt;&lt;del&gt;HBASE-12956&lt;/del&gt;&lt;/a&gt; Binding to 0.0.0.0 is broken after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10569&quot; title=&quot;Co-locate meta and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10569&quot;&gt;&lt;del&gt;HBASE-10569&lt;/del&gt;&lt;/a&gt; (enis: rev 15140bf48491d92dae2d514f2cc84c09205d87b7)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestHBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14310366" author="hudson" created="Sat, 7 Feb 2015 01:05:11 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.1 #152 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/152/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/152/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12956&quot; title=&quot;Binding to 0.0.0.0 is broken after HBASE-10569&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12956&quot;&gt;&lt;del&gt;HBASE-12956&lt;/del&gt;&lt;/a&gt; Binding to 0.0.0.0 is broken after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10569&quot; title=&quot;Co-locate meta and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10569&quot;&gt;&lt;del&gt;HBASE-10569&lt;/del&gt;&lt;/a&gt; (enis: rev fc7f53f240b3a5a83333a1819b0ec2f0f7d8e3aa)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestHBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14331340" author="enis" created="Sat, 21 Feb 2015 23:35:33 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12713302">HBASE-11146</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12544478">HBASE-5487</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12742891">HBASE-12034</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12706986">HBASE-10923</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12905983">HBASE-14644</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12640309" name="Co-locateMetaAndMasterHBASE-10569.pdf" size="204643" author="stack" created="Tue, 15 Apr 2014 18:33:33 +0000"/>
                            <attachment id="12634484" name="hbase-10569_v1.patch" size="669530" author="jxiang" created="Thu, 13 Mar 2014 17:18:40 +0000"/>
                            <attachment id="12635924" name="hbase-10569_v2.patch" size="690291" author="jxiang" created="Fri, 21 Mar 2014 00:28:05 +0000"/>
                            <attachment id="12636254" name="hbase-10569_v3.1.patch" size="676211" author="jxiang" created="Sun, 23 Mar 2014 15:47:25 +0000"/>
                            <attachment id="12636132" name="hbase-10569_v3.patch" size="675974" author="jxiang" created="Fri, 21 Mar 2014 22:47:32 +0000"/>
                            <attachment id="12643649" name="master_rs.pdf" size="74219" author="jxiang" created="Tue, 6 May 2014 22:41:50 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12703241">HBASE-10815</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 19 Feb 2014 17:45:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>374486</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1sj8f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>374786</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>With this patch, HMaster is also a HRegionServer.  Active master can serve some small tables per configuration (by default, it doesn&amp;#39;t). Backup masters don&amp;#39;t serve any region.&lt;br/&gt;
&lt;br/&gt;
HMaster and HRegionServer share the same RPC server. That&amp;#39;s transparent to clients since the master information is in ZK. The master and the regionserver also shares the same web UI server.&lt;br/&gt;
&lt;br/&gt;
There is no protocol, or API change. So this feature is backward compatible, and rolling upgradable. In case it&amp;#39;s needed, some configurations (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10815&quot; title=&quot;Master regionserver should be rolling-upgradable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10815&quot;&gt;&lt;strike&gt;HBASE-10815&lt;/strike&gt;&lt;/a&gt;) will be added so that (1) we can have two web UI servers in the master (and backup masters), one for the master, and the other for the region server; (2) we can leave backup masters alone and don&amp;#39;t put any regions on them. So that things are the same as before.&lt;br/&gt;
&lt;br/&gt;
With this patch, the following configurations are removed (and not used any more):&lt;br/&gt;
&lt;br/&gt;
hbase.master.dns.interface&lt;br/&gt;
hbase.master.dns.nameserver&lt;br/&gt;
hbase.master.port&lt;br/&gt;
hbase.master.ipc.address&lt;br/&gt;
hbase.master.zksession.recover.timeout&lt;br/&gt;
fail.fast.expired.active.master&lt;br/&gt;
hbase.master.handler.count&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>