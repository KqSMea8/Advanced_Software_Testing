<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:45:37 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-581/HBASE-581.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-581] Allow adding filters to TableInputFormat (At same time, ensure TIF is subclassable)</title>
                <link>https://issues.apache.org/jira/browse/HBASE-581</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description></description>
                <environment></environment>
        <key id="12394003">HBASE-581</key>
            <summary>Allow adding filters to TableInputFormat (At same time, ensure TIF is subclassable)</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Tue, 15 Apr 2008 16:08:53 +0000</created>
                <updated>Fri, 22 Aug 2008 21:13:13 +0000</updated>
                            <resolved>Thu, 24 Apr 2008 19:45:11 +0000</resolved>
                                                    <fixVersion>0.2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12590163" author="dr-alves" created="Thu, 17 Apr 2008 19:18:08 +0000"  >&lt;p&gt;Hi.&lt;br/&gt;
The main reason I couldn&apos;t subclass TIF is that HTable instance in TIF is package protected.&lt;br/&gt;
I then implemented an inner FilteredTableRecordReader that &lt;b&gt;can&lt;/b&gt; receive a RowFilterInterface as argument, as this is not mandatory (the filter can be null) this could be a nice addition even to the HBase TIF, receiveing the filter class (and someway it&apos;s contructor arguments) by configuration. Even if this is not possible just allowing to set the record reader instance in TIF would make Overriding getRecordReader (and the TableSplit casts) unecessary.&lt;/p&gt;</comment>
                            <comment id="12590178" author="stack" created="Thu, 17 Apr 2008 19:40:07 +0000"  >&lt;p&gt;Any chance of your making a patch David &amp;#8211; if only to help the discussion along?&lt;/p&gt;</comment>
                            <comment id="12590183" author="dr-alves" created="Thu, 17 Apr 2008 19:52:14 +0000"  >&lt;p&gt;Sure. I&apos;ll submit it as soon as I can.&lt;/p&gt;</comment>
                            <comment id="12591671" author="dr-alves" created="Wed, 23 Apr 2008 16:18:48 +0000"  >&lt;p&gt;On another subject getSplits always returns the same number independent of &quot;mapred.map.tasks&quot;. Which means applications will always have the same number of maps as of splits which can overload hbase (in my experience 10 maps that use TIF on just two nodes completely overload Hbase, meaning not only that the M/R job will fail but also that regionservers go down). &lt;br/&gt;
So getSplits() should take &quot;mapred.map.tasks&quot; into account right?&lt;/p&gt;

</comment>
                            <comment id="12591710" author="stack" created="Wed, 23 Apr 2008 17:56:48 +0000"  >&lt;p&gt;It could.  Or at a minimum should be overrideable (If its not, should be fixed as part of this issue).&lt;/p&gt;</comment>
                            <comment id="12591712" author="stack" created="Wed, 23 Apr 2008 17:59:00 +0000"  >&lt;p&gt;Hey, David, where&apos;s the patch (smile).  Also, you are talking about TRUNK, right when you say it falls over with ten maps?  I can run 8 and probably more MR maps against a single node without it falling over.  Maybe our boxes are just bigger than yours?&lt;/p&gt;</comment>
                            <comment id="12591714" author="dr-alves" created="Wed, 23 Apr 2008 18:09:52 +0000"  >&lt;p&gt;Yes I&apos;m talking about TRUNK, as I have 10 regions (for a given table) they always return 10 maps wich completely kills my setup, maybe your boxes are better. &lt;br/&gt;
Anyhow and before I submit the extension/row filter patch I&apos;m just finishing up the patch that solves the splits question . the getSplits() method will return splits equal to the lesser of numSplits/startKeys.lenght and will divide the splits in the most even groups possible making the first splits bigger in the case they are uneven.&lt;/p&gt;</comment>
                            <comment id="12591715" author="dr-alves" created="Wed, 23 Apr 2008 18:16:55 +0000"  >&lt;p&gt;btw any ideas on how should we pass the filter arguments through job conf? its kind of complicated (multiple filters have different arguments and regexprowfilter has complex arguments) maybe we should only solve the extesion problem for now? if you agree I&apos;ll submit the patch right now. &lt;/p&gt;</comment>
                            <comment id="12591725" author="stack" created="Wed, 23 Apr 2008 18:42:18 +0000"  >&lt;p&gt;Yeah, now you mention it, filters are ornery.  Coming up w/ some means of specifying via config. what filter and its args is probably not going to happen.  Making TIF subclassable is probably the ways to go here.&lt;/p&gt;</comment>
                            <comment id="12591734" author="clint.morgan" created="Wed, 23 Apr 2008 18:58:07 +0000"  >&lt;p&gt;Can you put binary data in a Configuration? If so then we could use Writable to get the filter&apos;s bytes. Otherwise, write the filter to HDFS, and pass along the path in the JobConf?&lt;/p&gt;</comment>
                            <comment id="12591736" author="dr-alves" created="Wed, 23 Apr 2008 19:03:58 +0000"  >&lt;p&gt;Actually in my case I use Base64 conversion to pass the filters that are built dinamically in JobConf, but subclassing should solve the problem for now.&lt;/p&gt;</comment>
                            <comment id="12591737" author="stack" created="Wed, 23 Apr 2008 19:04:48 +0000"  >&lt;p&gt;You could, but it&apos;d be a little perverse loading binary data into the Configuation.&lt;/p&gt;

&lt;p&gt;I was thinking the filter would just be bundled up in the job jar so its available on CLASSPATH (or user would add it to the cluster CLASSPATH).&lt;/p&gt;</comment>
                            <comment id="12591770" author="dr-alves" created="Wed, 23 Apr 2008 20:05:32 +0000"  >&lt;p&gt;My first patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. Solves the extension issue (table, tablename, and cols are protected as well as the TableRecordReader to allow for extension) and the number os splits issue (now the number of splits is the lesser of numSplits and startKeys.lenght, splits can cover more that one region and are created the most evenly possible). TestTableIndex is failing (updated yesterday) but I&apos;m almost sure it&apos;s not because of my changes .&lt;/p&gt;</comment>
                            <comment id="12591772" author="dr-alves" created="Wed, 23 Apr 2008 20:06:17 +0000"  >&lt;p&gt;tif patch.&lt;/p&gt;</comment>
                            <comment id="12591920" author="stack" created="Thu, 24 Apr 2008 05:15:03 +0000"  >&lt;p&gt;Your patch looks good David.  Here&apos;s a v2 with some mild formatting.  It also changes the data members back to private and adds accessors instead &amp;#8211; would this work for you?  Regards the getSplits, the way you&apos;ve redone the method, if numSplits is &amp;lt; number of regions, then you do best effort at divvying up the regions so some splits will have more than one region?  It works in your testing?  Add javadoc explaining how numSplits now is actually acted on in getSplits and then upload a new patch and we&apos;ll get it committed.  Thanks.&lt;/p&gt;</comment>
                            <comment id="12591955" author="dr-alves" created="Thu, 24 Apr 2008 09:02:26 +0000"  >&lt;p&gt;Thanks stack. No problem about the acessors. The patch fully works in my tests, actually it makes my setup work (crawl and index) on my modest boxes &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I&apos;ll apply your patch and add the javadoc. Do you use a different eclipse formatter (I formatted with official java standards)?&lt;/p&gt;</comment>
                            <comment id="12592046" author="dr-alves" created="Thu, 24 Apr 2008 13:02:28 +0000"  >&lt;p&gt;Corrected javadoc.&lt;/p&gt;</comment>
                            <comment id="12592047" author="dr-alves" created="Thu, 24 Apr 2008 13:06:55 +0000"  >&lt;p&gt;Corrected javadoc some more.&lt;/p&gt;</comment>
                            <comment id="12592074" author="dr-alves" created="Thu, 24 Apr 2008 14:17:27 +0000"  >&lt;p&gt;The extension problem is not correctly solved. I&apos;m trying to use it and it is not friendly to say the least. I&apos;m in the process of improving it.&lt;/p&gt;</comment>
                            <comment id="12592099" author="jimk" created="Thu, 24 Apr 2008 15:13:50 +0000"  >&lt;p&gt;David,&lt;/p&gt;

&lt;p&gt;With respect to formatting, please see &lt;a href=&quot;http://wiki.apache.org/hadoop/Hbase/HowToContribute&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/Hbase/HowToContribute&lt;/a&gt; about 1/2 way down the page.&lt;/p&gt;</comment>
                            <comment id="12592100" author="dr-alves" created="Thu, 24 Apr 2008 15:16:51 +0000"  >&lt;p&gt;Some thoughts before I submit the patch:&lt;br/&gt;
TIF should support filters&lt;br/&gt;
extensions of TIF might not need to get the columns, and table name from jobConf exactly like current tif does&lt;/p&gt;

&lt;p&gt;In light of this I extracted an abstract class that supports filters from tableinputformat (which still exists and has the same API).&lt;br/&gt;
Subclasses just have to provide the table and the input columns (and optionally the rowFilter).&lt;br/&gt;
Also table record reader was altered to be extensible and tif chaged to support other tablerecordreaders&lt;br/&gt;
finally in order to sublass the tif to add for example a filter one just has to do the following:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;code&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;class myTIFSubClass {&lt;/p&gt;

&lt;p&gt;@Override&lt;br/&gt;
public void configure(JobConf job) &lt;/p&gt;
{
       Text myTableName = ...;
       Text[] myCols = ....;
       RowFilterInterface myFilter = ...;
       super.setHTable(new HTable(new HBaseConfiguration(job), new Text(
                    myTableName))
        super.setInputColumns(myCols);
        super.setRowFilter(myFilter);
    }

&lt;p&gt;}&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;/code&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;what do you think? shall I submit the patch?&lt;/p&gt;</comment>
                            <comment id="12592121" author="stack" created="Thu, 24 Apr 2008 16:24:07 +0000"  >&lt;p&gt;At a minimum, the way that the current TIF specifies columns &amp;#8211; a long string that you do a split on spaces &amp;#8211; is a little imperfect.&lt;/p&gt;

&lt;p&gt;What are you thinking?  Changing TIF so its subclassable and providing a new more flexible abstract TIF?  That sounds good to me (Suggest you add example of how to use into the class javadoc).&lt;/p&gt;</comment>
                            <comment id="12592128" author="dr-alves" created="Thu, 24 Apr 2008 16:46:03 +0000"  >&lt;p&gt;I think I finished if. The patch has an abstract parent TIF that contains a default TableRecordReader and receives a table, the columns, and optionally a rowfilter by accessors. Subclasses should only use whatever means to set the necessary fields.&lt;br/&gt;
I just have one doubt whether I should make the abstract class implement JobConfigurable or expect the subclasses to do so.&lt;br/&gt;
I&apos;ll include the example sub class in the javadoc as suggested.&lt;/p&gt;</comment>
                            <comment id="12592135" author="dr-alves" created="Thu, 24 Apr 2008 17:12:23 +0000"  >&lt;p&gt;Added a new abstract parent class.&lt;br/&gt;
Corrected javadoc.&lt;/p&gt;</comment>
                            <comment id="12592157" author="stack" created="Thu, 24 Apr 2008 19:43:43 +0000"  >&lt;p&gt;Just have this issue be about TIF, not TOF.&lt;/p&gt;</comment>
                            <comment id="12592158" author="stack" created="Thu, 24 Apr 2008 19:45:11 +0000"  >&lt;p&gt;Applied patch to TRUNK (after minor formatting changes).  Thanks for the patch David!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12380795" name="tif-0.patch" size="5390" author="dr-alves" created="Wed, 23 Apr 2008 20:06:17 +0000"/>
                            <attachment id="12380824" name="tif-v2.patch" size="5960" author="stack" created="Thu, 24 Apr 2008 05:15:03 +0000"/>
                            <attachment id="12380839" name="tif-v3.patch" size="6551" author="dr-alves" created="Thu, 24 Apr 2008 13:02:28 +0000"/>
                            <attachment id="12380840" name="tif-v4.patch" size="6704" author="dr-alves" created="Thu, 24 Apr 2008 13:06:55 +0000"/>
                            <attachment id="12380858" name="tif-v5.patch" size="17580" author="dr-alves" created="Thu, 24 Apr 2008 17:12:23 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 17 Apr 2008 19:18:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31769</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 35 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h86n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98588</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>