<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:43:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13472/HBASE-13472.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13472] Polish IN_MEMORY table behavior</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13472</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;For a long time we&apos;ve been able to support a mode of operation that keeps as much table data as possible in memory, so HBase can be used as an &apos;in-memory&apos; DB with fully durable WAL and write-behind persistence of table data. However:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;There are a set of relevant schema options (IN_MEMORY, CACHE_ON_WRITE, PREFETCH_BLOCKS_ON_OPEN, block encoding), so set up isn&apos;t simple. We should have a shortcut that sets all this up in one place. I&apos;m thinking a utility class with static helpers that configure a table descriptor with all of the needed bits. (Other ideas?)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;We don&apos;t have a safety valve. An in-memory table can become too large, where it falls out of blockcache and performs poorly without warning because it&apos;s become too big. Consider table quota support with an option for region size limits as % of total heap consumed by regions for a given table. Warn at soft limit. Refuse writes if over hard limit.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Follow on work can investigate options hooking up to offheap work. That&apos;s not in scope here.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12821038">HBASE-13472</key>
            <summary>Polish IN_MEMORY table behavior</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Wed, 15 Apr 2015 01:37:31 +0000</created>
                <updated>Mon, 27 Apr 2015 04:48:06 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="14495545" author="apurtell" created="Wed, 15 Apr 2015 02:02:47 +0000"  >&lt;p&gt;On trunk we could go so far as to make IN_MEMORY a synonym for other attributes. &lt;/p&gt;</comment>
                            <comment id="14495659" author="lhofhansl" created="Wed, 15 Apr 2015 04:47:35 +0000"  >&lt;p&gt;I thought we had three arenas in the block cache: in memory, promoted (block has been touched again after first access), and &quot;normal&quot; after first load.&lt;/p&gt;</comment>
                            <comment id="14495738" author="apurtell" created="Wed, 15 Apr 2015 06:32:13 +0000"  >&lt;p&gt;Thanks for the clarification&lt;/p&gt;</comment>
                            <comment id="14496458" author="apurtell" created="Wed, 15 Apr 2015 16:15:21 +0000"  >&lt;p&gt;Also, as part of this work, let&apos;s measure benefit of IN_MEMORY data placement with block preload. One easy comparison would be number of IOPS (with histogram of disk op latencies as appendix) with this mode versus normal operation, HFile access and WAL considered separately. Let&apos;s make sure we have coverage for these metrics. I seem to recall removing unused HFile metrics related to this, we don&apos;t need to reintroduce them, could just be a patch for the experiment. &lt;/p&gt;

&lt;p&gt;For quantifying client visible effects, consider YCSB2 (&lt;a href=&quot;https://github.com/apurtell/YCSB2/tree/new_hbase_client&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apurtell/YCSB2/tree/new_hbase_client&lt;/a&gt;, perhaps with improvements to this client as well, as it is still under development)&lt;/p&gt;</comment>
                            <comment id="14497544" author="lhofhansl" created="Thu, 16 Apr 2015 04:34:16 +0000"  >&lt;p&gt;That&apos;ll be interesting. We kinda have to measure the likelihood of some block ending up in the cache. If there&apos;s enough heap, blocks will always end up in the block cache (IN_MEMORY or not).&lt;/p&gt;</comment>
                            <comment id="14513525" author="anoop.hbase" created="Mon, 27 Apr 2015 04:48:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;Consider table quota support with an option for region size limits as % of total heap consumed by regions for a given table. Warn at soft limit. Refuse writes if over hard limit.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ya.. I was thinking about this as a work after the offheaping Jira. When we can have HBase RS with more and more cache, we would need better tuning of the size shares for different tables.  So Quotas can help here.&lt;/p&gt;

&lt;p&gt;We have L1 and L2 cache now (In 2 modes).  I was thinking whether we can extend this.  We have L1 cache in on heap and L2 in Offheap (BC) and a L3 in BC file mode (SSDs). Out of scope of this Jira.  Just noting down here as here we speak about keeping more data in cache. We would need quota control and table level priority control....  cc &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 15 Apr 2015 04:47:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 33 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2d9hb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>