<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:25:21 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11657/HBASE-11657.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11657] Put HTable region methods in an interface</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11657</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Most of the HTable methods are now abstracted by HTableInterface, with the notable exception of the following methods that pertain to region metadata:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HRegionLocation getRegionLocation(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; row)
HRegionLocation getRegionLocation(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] row)
HRegionLocation getRegionLocation(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] row, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; reload)
&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [][] getStartKeys()
&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][] getEndKeys()
Pair&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][],&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][]&amp;gt; getStartEndKeys()
void clearRegionCache()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and a default scope method which maybe should be bundled with the others:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
List&amp;lt;RegionLocations&amp;gt; listRegionLocations()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since the consensus seems to be that these would muddy HTableInterface with non-core functionality, where should it go?  MapReduce looks up the region boundaries, so it needs to be exposed somewhere.&lt;/p&gt;

&lt;p&gt;Let me throw out a straw man to start the conversation.  I propose:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.hadoop.hbase.client.HRegionInterface
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Have HTable implement this interface.  Also add these methods to HConnection:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HRegionInterface getTableRegion(TableName tableName)
HRegionInterface getTableRegion(TableName tableName, ExecutorService pool)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, thoughts?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12731745">HBASE-11657</key>
            <summary>Put HTable region methods in an interface</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="carterpage">Carter</assignee>
                                    <reporter username="carterpage">Carter</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Aug 2014 14:38:08 +0000</created>
                <updated>Sat, 21 Feb 2015 23:34:22 +0000</updated>
                            <resolved>Tue, 19 Aug 2014 23:19:26 +0000</resolved>
                                    <version>0.99.0</version>
                                    <fixVersion>0.99.0</fixVersion>
                    <fixVersion>2.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                <comments>
                            <comment id="14084756" author="ndimiduk" created="Mon, 4 Aug 2014 15:11:59 +0000"  >&lt;p&gt;For another straw man, how about extracting these from HTable and non-DDL methods from Admin, making a location services class? Call it &lt;tt&gt;MetaClient&lt;/tt&gt; or &lt;tt&gt;LocationServices&lt;/tt&gt; or something.&lt;/p&gt;</comment>
                            <comment id="14084768" author="lhofhansl" created="Mon, 4 Aug 2014 15:24:18 +0000"  >&lt;p&gt;We had discussed adding these to HTableInterface before and decided that the region methods would leak implementation detailse. As such they do not really belong into the interface. But if we need them there, we can add them, IMHO.&lt;/p&gt;

&lt;p&gt;I do like the &lt;tt&gt;LocationService&lt;/tt&gt; idea.&lt;/p&gt;</comment>
                            <comment id="14084909" author="apurtell" created="Mon, 4 Aug 2014 17:14:37 +0000"  >&lt;p&gt;&lt;tt&gt;LocationServices&lt;/tt&gt; sounds good, so did the OP&apos;s proposed name of &lt;tt&gt;HRegionInterface&lt;/tt&gt;, but the direction of new APIs in a few issues is to drop the &apos;H&apos;, so the former is better I think.&lt;/p&gt;

&lt;p&gt;Are we going to locate more than regions with this API? Such as master service endpoints? REST gateways? Thrift gateways?&lt;/p&gt;</comment>
                            <comment id="14084920" author="mantonov" created="Mon, 4 Aug 2014 17:21:53 +0000"  >&lt;p&gt;As yet another straw man..methods like getRegionLocation() are also in HConneciton interface, but marked as deprecated. Shall they be removed from there too?&lt;/p&gt;

&lt;p&gt;Also just my 2 cents.. Like the idea of separate class focused on region lookups. As I think about inheritance though, making HTable implement HRegion seems a little bit strange to me?&lt;/p&gt;

&lt;p&gt;LocationService name sound a bit too generic to me, or would it be meant for all sorts of lookups (meta location, master location, regions location etc?) &lt;/p&gt;</comment>
                            <comment id="14084929" author="stack" created="Mon, 4 Aug 2014 17:28:36 +0000"  >&lt;p&gt;Suggest keeping narrow scope for this new Interface addition so RegionLocation?  LocationServices sounds like a good idea especially as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; would have it as general lookup entry point.  &apos;H&apos; prefix is from another era &amp;#8211; we don&apos;t do that anymore &amp;#8211; and the Interface suffix gets added when we are in a naming hole with no other way out (Wondering why we didn&apos;t call HTableInterface Table?).&lt;/p&gt;</comment>
                            <comment id="14084937" author="carterpage" created="Mon, 4 Aug 2014 17:31:52 +0000"  >&lt;p&gt;Okay, these are the region-related methods I spot in Admin.  I think these should move to the third, new interface:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
void closeRegion(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] regionname, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; serverName)
&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; closeRegionWithEncodedRegionName(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; encodedRegionName, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; serverName)
void closeRegion(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ServerName sn, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; HRegionInfo hri)
List&amp;lt;HRegionInfo&amp;gt; getOnlineRegions(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ServerName sn)
void move(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] encodedRegionName, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] destServerName)
void assign(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] regionName)
void unassign(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] regionName, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; force)
void offline(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] regionName)
&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; setBalancerRunning(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; on, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; synchronous)
&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; balancer()
void mergeRegions(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] encodedNameOfRegionA, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] encodedNameOfRegionB, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; forcible)
void stopRegionServer(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; hostnamePort)
List&amp;lt;HRegionInfo&amp;gt; getTableRegions(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; TableName tableName)
&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][] rollHLogWriter(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; serverName)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then there are a bunch of methods that take &lt;em&gt;tableNameOrRegionName&lt;/em&gt; as a parameter:  (Suggestions?)&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
flush
compact
majorCompact
split
getCompactionState
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are also a handful of DDL methods that also do region-y things.  For example:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
void createTable(HTableDescriptor desc, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] startKey, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] endKey, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; numRegions)
void createTable(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; HTableDescriptor desc, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][] splitKeys)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And there are a handful of operational methods, which seem like they should be in Admin, but are not DDL-related.  I think these should stay in Admin:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ClusterStatus getClusterStatus()
void stopMaster()
void shutdown()
&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] getMasterCoprocessors()
CoprocessorRpcChannel coprocessorService()
void execProcedure(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; signature, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; instance, Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; props)

all the snapshot methods
the catalog janitor methods
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thoughts on the revised strawman?&lt;/p&gt;</comment>
                            <comment id="14085094" author="stack" created="Mon, 4 Aug 2014 18:58:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carterpage&quot; class=&quot;user-hover&quot; rel=&quot;carterpage&quot;&gt;Carter&lt;/a&gt; Now you would expand scope of the new Interface to include all Region operations?  Not just obtaining region location?  Thats a bigger change.  Do you need that in hbase 1.0 API? Such a fat Interface we&apos;d call Region?  We&apos;d not want HTable implementing this fatter Interface that does admin ops too right?  This fat Region Interface could implement the narrower RegionLocation Interface?&lt;/p&gt;

&lt;p&gt;On the ops that take a region name or a table name, we&apos;d like to fix it so its explicit which you are doing rather than have the one method do both operations.&lt;/p&gt;

&lt;p&gt;createTable* seems at home in the Admin Interface (IMO)  Ditto on shutdown, snapshot, etc.&lt;/p&gt;</comment>
                            <comment id="14085111" author="carterpage" created="Mon, 4 Aug 2014 19:06:07 +0000"  >&lt;p&gt;How about I start with the first change &amp;#8211; moving region stuff out of HTable into a new interface called RegionLocation (or just Region?).&lt;/p&gt;

&lt;p&gt;Once that&apos;s done, I open a new JIRA where I move over the obvious region stuff from Admin.  Then another one to split the &lt;em&gt;tableNameOrRegionName&lt;/em&gt; methods into multiple strongly-typed methods.&lt;/p&gt;

&lt;p&gt;Does that work for everyone?  Thoughts on &lt;em&gt;RegionLocation&lt;/em&gt; vs &lt;em&gt;Region&lt;/em&gt;?&lt;/p&gt;</comment>
                            <comment id="14085127" author="stack" created="Mon, 4 Aug 2014 19:14:10 +0000"  >&lt;p&gt;+1 on RegionLocation. A fat Region Interface could implement this RegionLocation.  HTableInterface can cleanly implement RegionLocation w/o pulling in other baggage.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;Once that&apos;s done, I open a new JIRA where I move over the obvious region stuff from Admin. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1 on new Issue for this discussion.  Need to be careful disrupting API this close to 1.0.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Then another one to split the tableNameOrRegionName methods into multiple strongly-typed methods.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This would work.  Might be case of deprecating the old in favor of the new methods.  The old would be retained in hbase 1.0 so folks rolling up from 0.98 or earlier aren&apos;t broke.&lt;/p&gt;</comment>
                            <comment id="14085139" author="mantonov" created="Mon, 4 Aug 2014 19:18:31 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carterpage&quot; class=&quot;user-hover&quot; rel=&quot;carterpage&quot;&gt;Carter&lt;/a&gt; I think RegionLocation is good if it&apos;d be only limited to lookup methods currently sitting in HTable, no flush, compact etc?&lt;/p&gt;

&lt;p&gt;Also on above, methods like stopRegionServer() aren&apos;t related to regions themselves, are they?&lt;/p&gt;

&lt;p&gt;Another thought I have in mind - let&apos;s make it specific whether this interface would be used equally on client side and inside the server (as I&apos;m now working on abstracting client from ZK, I&apos;&apos;m trying to define more precisely where the code is meant to run).&lt;/p&gt;</comment>
                            <comment id="14085189" author="carterpage" created="Mon, 4 Aug 2014 19:54:24 +0000"  >&lt;p&gt;Two more questions before I start:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;There is an existing RegionLocations class in the client.  We&apos;re okay with any potential confusion of RegionLocations vs RegionLocation?&lt;/li&gt;
	&lt;li&gt;Do we want to deprecate #getRegionLocation(String) and point users to getRegionLocation(byte[])?&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="14085302" author="mantonov" created="Mon, 4 Aug 2014 21:21:15 +0000"  >&lt;p&gt;Maybe name it RegionLocator or RegionLocationHelper in this case? RegionLocation indeed sound more like a holder for individual region location info.&lt;/p&gt;</comment>
                            <comment id="14086335" author="carterpage" created="Tue, 5 Aug 2014 14:52:37 +0000"  >&lt;p&gt;RegionLocator it is.&lt;/p&gt;</comment>
                            <comment id="14086383" author="hadoopqa" created="Tue, 5 Aug 2014 15:34:08 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12659895/HBASE_11657.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12659895/HBASE_11657.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12659895&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.procedure.TestProcedureManager&lt;br/&gt;
                  org.apache.hadoop.hbase.ipc.TestIPC&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestClockSkewDetection&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10299//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14086430" author="carterpage" created="Tue, 5 Aug 2014 16:02:32 +0000"  >&lt;p&gt;No deltas between tests I ran on master and the patch.&lt;/p&gt;

&lt;p&gt;No new test since this is simply an interface.  I&apos;ll refactor other tests to use the interface in the future.&lt;/p&gt;

&lt;p&gt;I have a general question for the group.  Why is &lt;em&gt;getRegionLocation&lt;/em&gt; okay, but this one is deprecated?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Deprecated
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;HRegionLocation&amp;gt; getRegionsInRange(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] startKey, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] endKey, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; reload)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Does this seem like an appropriate method now in RegionLocator?  If this remains deprecated, what&apos;s the correct alternative for clients that use it?&lt;/p&gt;</comment>
                            <comment id="14086617" author="mantonov" created="Tue, 5 Aug 2014 18:57:31 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carterpage&quot; class=&quot;user-hover&quot; rel=&quot;carterpage&quot;&gt;Carter&lt;/a&gt; - few comments:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;copyright notice to RegionLocator doesn&apos;t look right, also missing class javadoc and audience annotation (private?)&lt;/li&gt;
	&lt;li&gt;instead having 2 getRegionLocation methods, one of which always use cached info, and the other one - optionally, seems like we can just have 1 method, which take row key and boolean - reloadCache or not?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14086624" author="stack" created="Tue, 5 Aug 2014 19:03:24 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; We have to preserve current api if we are to commit this patch to branch-1.  FYI.&lt;/p&gt;</comment>
                            <comment id="14086653" author="mantonov" created="Tue, 5 Aug 2014 19:51:02 +0000"  >&lt;p&gt;@stack yeah, I was just thinking as we&apos;re adding new interface and making HTable extend it, may be for API compatibility it&apos;d suffice if we just have one method with (rowkey, whetherToReloadCache) in the RegionLocator interface, and in HTable still use both version, but the one without this boolean flag won&apos;t have Override annotation? What do you think? Maybe I&apos;m missing something.&lt;/p&gt;</comment>
                            <comment id="14086790" author="carterpage" created="Tue, 5 Aug 2014 21:25:27 +0000"  >&lt;p&gt;Not sure I agree on having only one method.  I agree with the general principle of reducing methods.  For example, overloads that take String, byte[], and TableName for a table name are messy and not helpful.&lt;/p&gt;

&lt;p&gt;In this case, however, I assume users will want to use getRegionLocation(byte[]) the majority of time, and forcing a reload would be less frequent.  I think it makes it simpler for the user when common defaults are hidden, hence providing the two methods &amp;#8211; one for most cases and one for explicit behavior overrides.&lt;/p&gt;

&lt;p&gt;If however, users typically call getRegionLocation(byte[], boolean) more often, then I agree it would make sense to only have that one in the interface, but I&apos;m guessing that&apos;s not the case.&lt;/p&gt;</comment>
                            <comment id="14086793" author="carterpage" created="Tue, 5 Aug 2014 21:27:16 +0000"  >&lt;p&gt;Please take another look.&lt;/p&gt;</comment>
                            <comment id="14086853" author="mantonov" created="Tue, 5 Aug 2014 21:55:20 +0000"  >&lt;p&gt;Yes, the reasoning about most used vs. rarely used method makes sense. Do you think it makes sense to mark the interface less carved in stone as &lt;/p&gt;
{public, stable}
&lt;p&gt;? May be public, evolving or unstable?&lt;/p&gt;</comment>
                            <comment id="14086942" author="hadoopqa" created="Tue, 5 Aug 2014 23:00:44 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12659957/HBASE_11657_v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12659957/HBASE_11657_v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12659957&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestRegionReplicas&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestTableSnapshotInputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestRestartCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestReplicasClient&lt;br/&gt;
                  org.apache.hadoop.hbase.TestIOFencing&lt;br/&gt;
                  org.apache.hadoop.hbase.TestRegionRebalancing&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterOperationsForRegionReplicas&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10305//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14087693" author="carterpage" created="Wed, 6 Aug 2014 14:03:30 +0000"  >&lt;p&gt;Good point.  Stability changed to &quot;Evolving&quot;.  Patch v3 submitted.&lt;/p&gt;</comment>
                            <comment id="14087792" author="hadoopqa" created="Wed, 6 Aug 2014 15:33:32 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12660139/HBASE_11657_v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12660139/HBASE_11657_v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12660139&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestRestartCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestReplicasClient&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicas&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterOperationsForRegionReplicas&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10315//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14091633" author="stack" created="Sat, 9 Aug 2014 03:48:45 +0000"  >&lt;p&gt;Retry. More tests should pass this time through since fixup.&lt;/p&gt;</comment>
                            <comment id="14091639" author="stack" created="Sat, 9 Aug 2014 04:05:12 +0000"  >&lt;p&gt;It makes sense to me going to a RegionLocator Interface to obtain (H)RegionLocation s.&lt;/p&gt;

&lt;p&gt;The Interface seems a little unhinged not having methods that specify the associated table but hanging the Interface off HTable takes care of that.&lt;/p&gt;

&lt;p&gt;The &apos;@since 0.99&apos; is good.&lt;/p&gt;

&lt;p&gt;The other methods are an awkward fit in this new Interface &amp;#8211; getStartKeys, etc. &amp;#8211; but they are bastard children anyways and rather than do a StartKeys interface, lets let them hang in here for now at least.&lt;/p&gt;

&lt;p&gt;In HConnection it should be getRegionLocator rather than getRegionLocation?&lt;/p&gt;

&lt;p&gt;nit: &apos;of teh &apos; should be &apos;of the&apos;&lt;/p&gt;

&lt;p&gt;Whats this mean boss: &quot;RegionLocator needs to be unmanaged...&quot;  We have to close or return the locator?&lt;/p&gt;

&lt;p&gt;Otherwise patch is great.  +1 I can fix above minors on commit if you&apos;d like, just say.&lt;/p&gt;</comment>
                            <comment id="14091679" author="hadoopqa" created="Sat, 9 Aug 2014 06:38:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12660796/HBASE_11657_v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12660796/HBASE_11657_v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12660796&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10367//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14092970" author="carterpage" created="Mon, 11 Aug 2014 16:50:45 +0000"  >&lt;p&gt;Please take another look.&lt;/p&gt;

&lt;p&gt;For the managed connection check, I&apos;m just following the same pattern for the #getTable(TableName) factory method to keep it consistent.&lt;/p&gt;</comment>
                            <comment id="14093602" author="enis" created="Tue, 12 Aug 2014 01:14:56 +0000"  >&lt;p&gt;Carter, I really like this jira. Let me take a deeper look at the patch and the rest of the comments. &lt;/p&gt;</comment>
                            <comment id="14094194" author="hadoopqa" created="Tue, 12 Aug 2014 15:50:04 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12661013/HBASE_11657_v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12661013/HBASE_11657_v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12661013&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes&lt;br/&gt;
                  org.apache.hadoop.hbase.TestRegionRebalancing&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10400//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14095812" author="carterpage" created="Wed, 13 Aug 2014 17:58:38 +0000"  >&lt;p&gt;The three test failures seem unrelated to the patch.  I don&apos;t get the first two failures on the patch against the latest master, and the TestRegionRebalancing appears flaky.&lt;/p&gt;

&lt;p&gt;Anything else we need on this patch?&lt;/p&gt;</comment>
                            <comment id="14096178" author="enis" created="Wed, 13 Aug 2014 21:48:38 +0000"  >&lt;p&gt;A couple of comments: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;RegionLocator -&amp;gt; I like the name.&lt;/li&gt;
	&lt;li&gt;Should RegionLocator extend Closeable?&lt;/li&gt;
	&lt;li&gt;clearRegionCache() seems like an overkill for exposing.&lt;/li&gt;
	&lt;li&gt;HRegionLocation and RegionLocations have been made InterfaceAudience.Private in 0.99. The main idea was to make start-end keys are byte[] ranges the main public API, but not the regions / region locations themselves. I know that some advanced users have been using HRL for some time, but I am not keen to make it a public API. What do you guys think?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14096609" author="stack" created="Thu, 14 Aug 2014 06:03:16 +0000"  >&lt;p&gt;Yeah, we&apos;ve been trying to shutdown notions of &apos;region&apos; showing through in API.&lt;/p&gt;

&lt;p&gt;We don&apos;t want to break API for 1.0. Mark new Interface Private audience too instead of evolving as it is currently (IIRC)?&lt;/p&gt;</comment>
                            <comment id="14096975" author="carterpage" created="Thu, 14 Aug 2014 13:57:49 +0000"  >&lt;p&gt;How should the interfaces and MapReduce play together?  I know certain classes like TableInputFormatBase look at HRegionLocation.  If that&apos;s not something that should still be exposed, then to maintain appropriate encapsulation of HBase from MR we&apos;ll have to explore an alternative.  Any ideas?&lt;/p&gt;</comment>
                            <comment id="14097209" author="ndimiduk" created="Thu, 14 Aug 2014 17:00:23 +0000"  >&lt;p&gt;The MapReduce classes are considered &quot;internal API&quot;. A user doesn&apos;t need to know where a region lives in order to submit a MR job.&lt;/p&gt;</comment>
                            <comment id="14097215" author="ndimiduk" created="Thu, 14 Aug 2014 17:03:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should RegionLocator extend Closeable?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think so yes. This is consistent with Admin also being closable, despite being retrieved from the closable HConnection.&lt;/p&gt;</comment>
                            <comment id="14097731" author="carterpage" created="Thu, 14 Aug 2014 21:46:36 +0000"  >&lt;p&gt;I&apos;ll add Closeable to the interface, makes sense.&lt;/p&gt;

&lt;p&gt;While the user doesn&apos;t need to know where a region lives in order to submit an MR job, it currently needs the user to pass the means to get that region location by means of &lt;tt&gt;TableInputFormatBase#setHTable(HTable)&lt;/tt&gt;.  This prompts two questions:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Doesn&apos;t the existence of this public method break the interface abstraction that v1 is trying to establish?&lt;/li&gt;
	&lt;li&gt;If so, what replaces it?&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="14097745" author="enis" created="Thu, 14 Aug 2014 21:51:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;How should the interfaces and MapReduce play together? I know certain classes like TableInputFormatBase look at HRegionLocation.  If that&apos;s not something that should still be exposed, then to maintain appropriate encapsulation of HBase from MR we&apos;ll have to explore an alternative&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;For MR, we usually have one input split == one region, however, the region boundaries can always change after they are obtained or the job starts. However, for MR and other partitioning purposes, I think we will want to keep the getStartEndKeys() API that is byte[] ranges. Maybe we can couple that with a &lt;/p&gt;

&lt;p&gt;map of &lt;br/&gt;
byte[] - byte[] range -&amp;gt; list of locations (ServerNames)  &lt;br/&gt;
API which will be our public facing partitioning / location API. We can keep HRL private this way. &lt;/p&gt;</comment>
                            <comment id="14100876" author="carterpage" created="Mon, 18 Aug 2014 17:15:54 +0000"  >&lt;p&gt;That would certainly solve the problem with &lt;tt&gt;TableInputFormatBase&lt;/tt&gt;.  We should also probably add a &lt;em&gt;getTableName&lt;/em&gt; method to &lt;tt&gt;RegionLocator&lt;/tt&gt;, regardless.  Then passing the RL interface instead of a raw HTable object would provide everything that it needs for sharding the MR.&lt;/p&gt;

&lt;p&gt;A more philosophical question is, why is &lt;tt&gt;HRegionLocation&lt;/tt&gt; InterfaceAudience.Private to begin with?  It is a POJO that wraps &lt;tt&gt;HRegionInfo&lt;/tt&gt; (InterfaceAudience.Public), &lt;tt&gt;ServerName&lt;/tt&gt; (InterfaceAudience.Public), and &lt;em&gt;seqNum&lt;/em&gt; (an immutable long).  It seems to me that either the internal fields should be private too, or HRegionLocation should be public.  Unless there is some correlation of that information that shouldn&apos;t be exposed.  Thoughts, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14101086" author="enis" created="Mon, 18 Aug 2014 19:02:04 +0000"  >&lt;p&gt;I&apos;ve made HRL private in an earlier patch that introduced RegionLocations class. The idea was to make regions transparent to users because they can change, not specific to HRL per se. With the introduction of RegionLocations and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10070&quot; title=&quot;HBase read high-availability using timeline-consistent region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10070&quot;&gt;&lt;del&gt;HBASE-10070&lt;/del&gt;&lt;/a&gt; work, there can be more than one location for a region together with different replica_ids associated with regions. I did not want to expose those as the public API, but we can revisit that decision if we want.  &lt;/p&gt;</comment>
                            <comment id="14101189" author="carterpage" created="Mon, 18 Aug 2014 20:07:01 +0000"  >&lt;p&gt;I mainly wanted to make sure that the same person who made HRL private is okay with whatever we come up with for this interface.  Since you are one and the same person, I am less concerned.  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I double-checked and there is actually still a problem with the (byte[]/byte[]) -&amp;gt; list&amp;lt;servernames&amp;gt;.  In short TabletInputFormatBase wants the following from the HTable that is being passed to it:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;The hostname and port of the regionserver for a row (handled by ServerName)&lt;/li&gt;
	&lt;li&gt;The name of the table (we can add getTableName to RegionLocator)&lt;/li&gt;
	&lt;li&gt;The region name itself, which it uses to lookup the region size in the RegionSizeCalculator (handled by HRegionInfo)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I see the following alternatives:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Make HRL public.  It contains ServerName and HRegionInfo, which are both required by the current implementation of TableInputFormatBase.&lt;/li&gt;
	&lt;li&gt;Return ServerName and region name in some new POJO&lt;/li&gt;
	&lt;li&gt;Find a new way to do what TableInputFormatBase wants to accomplish&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Sorry to open up this can of worms, but that&apos;s part of the fun of retrofitting an interface.&lt;/p&gt;</comment>
                            <comment id="14101532" author="enis" created="Mon, 18 Aug 2014 23:39:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;Sorry to open up this can of worms, but that&apos;s part of the fun of retrofitting an interface.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed. It is good exercise in API design. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Make HRL public. It contains ServerName and HRegionInfo, which are both required by the current implementation of TableInputFormatBase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think this should be ok. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Return ServerName and region name in some new POJO&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;What we want to hide is not HRL per se, but the region name concept. In this case, making HRL public seems better. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Find a new way to do what TableInputFormatBase wants to accomplish&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think RegionSizeCalculator should be made to work over ranges similar to the MR API, but it can be another jira. What I am afraid more is whether there maybe more users of HRL (other than MR) that we do not know about. Since InterfaceAudience is fairly recent and it is not a hard check, there may be a lot of users depending on it.  If this is the case (which I honestly do not know), then we should better made HRL public and be done with it. For RegionLocations, we may need an immutable version. &lt;/p&gt;</comment>
                            <comment id="14102434" author="carterpage" created="Tue, 19 Aug 2014 16:37:54 +0000"  >&lt;p&gt;Submitted new patch in v5.  Made HRL interface.public, removed &lt;tt&gt;clearRegionCache()&lt;/tt&gt;, added &lt;tt&gt;TableName getName()&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="14102569" author="stack" created="Tue, 19 Aug 2014 18:04:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;For RegionLocations, we may need an immutable version.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds good.&lt;/p&gt;

&lt;p&gt;Looking at patch, would I ever have to clean up a RegionLocator... call close on it when done?  Otherwise +1&lt;/p&gt;
</comment>
                            <comment id="14102582" author="carterpage" created="Tue, 19 Aug 2014 18:13:36 +0000"  >&lt;p&gt;Of course.  Added &quot;extends Closeable&quot; to interface.&lt;/p&gt;</comment>
                            <comment id="14102613" author="stack" created="Tue, 19 Aug 2014 18:37:28 +0000"  >&lt;p&gt;+1 on v6 (Waiting on Pope @enis to give his blessing before commit)&lt;/p&gt;</comment>
                            <comment id="14103005" author="enis" created="Tue, 19 Aug 2014 22:59:44 +0000"  >&lt;p&gt;+1. May the force be with you. &lt;/p&gt;</comment>
                            <comment id="14103021" author="stack" created="Tue, 19 Aug 2014 23:19:26 +0000"  >&lt;p&gt;Committed to master and branch-1.  Nice work lads.&lt;/p&gt;</comment>
                            <comment id="14103145" author="hudson" created="Wed, 20 Aug 2014 00:32:30 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.0 #113 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/113/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/113/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11657&quot; title=&quot;Put HTable region methods in an interface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11657&quot;&gt;&lt;del&gt;HBASE-11657&lt;/del&gt;&lt;/a&gt; Put HTable region methods in an interface (Carter Page) (stack: rev acf691111411c91bc2a813a99db2f948f7066174)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/HConnection.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HRegionLocation.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/HConnectionTestingUtility.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/client/CoprocessorHConnection.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/RegionLocator.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionAdapter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14103220" author="hudson" created="Wed, 20 Aug 2014 01:44:47 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #5412 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5412/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5412/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11657&quot; title=&quot;Put HTable region methods in an interface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11657&quot;&gt;&lt;del&gt;HBASE-11657&lt;/del&gt;&lt;/a&gt; Put HTable region methods in an interface (Carter Page) (stack: rev c08f850d405445b9af4d3a401ce23c8626d07975)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/RegionLocator.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/client/CoprocessorHConnection.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HRegionLocation.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/HConnection.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/HConnectionTestingUtility.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionManager.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionAdapter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14331204" author="enis" created="Sat, 21 Feb 2015 23:34:22 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12659895" name="HBASE_11657.patch" size="11090" author="carterpage" created="Tue, 5 Aug 2014 14:52:16 +0000"/>
                            <attachment id="12659957" name="HBASE_11657_v2.patch" size="11647" author="carterpage" created="Tue, 5 Aug 2014 21:27:00 +0000"/>
                            <attachment id="12660796" name="HBASE_11657_v3.patch" size="11649" author="stack" created="Sat, 9 Aug 2014 03:48:45 +0000"/>
                            <attachment id="12660139" name="HBASE_11657_v3.patch" size="11649" author="carterpage" created="Wed, 6 Aug 2014 14:02:52 +0000"/>
                            <attachment id="12661013" name="HBASE_11657_v4.patch" size="13888" author="carterpage" created="Mon, 11 Aug 2014 16:49:32 +0000"/>
                            <attachment id="12662774" name="HBASE_11657_v5.patch" size="14735" author="carterpage" created="Tue, 19 Aug 2014 16:36:52 +0000"/>
                            <attachment id="12662802" name="HBASE_11657_v6.patch" size="14780" author="carterpage" created="Tue, 19 Aug 2014 18:13:17 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 4 Aug 2014 15:11:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>409774</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1yi4n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>409766</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Add a RegionLocator Interface. Encapsulates &amp;#39;region&amp;#39; operations.  Implemented by HTable and you can get one from an HConnection.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>