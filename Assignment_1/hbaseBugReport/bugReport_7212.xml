<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:43:39 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7212/HBASE-7212.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7212] Globally Barriered Procedure mechanism</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7212</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This is a simplified version of what was proposed in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6573&quot; title=&quot;Distributed Three-Phase Commit framework.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6573&quot;&gt;&lt;del&gt;HBASE-6573&lt;/del&gt;&lt;/a&gt;.  Instead of claiming to be a 2pc or 3pc implementation (which implies logging at each actor, and recovery operations) this is just provides a best effort global barrier mechanism called a Procedure.  &lt;/p&gt;

&lt;p&gt;Users need only to implement a methods to acquireBarrier, to act when insideBarrier, and to releaseBarrier that use the ExternalException cooperative error checking mechanism.&lt;/p&gt;

&lt;p&gt;Globally consistent snapshots require the ability to quiesce writes to a set of region servers before a the snapshot operation is executed.  Also if any node fails, it needs to be able to notify them so that they abort.&lt;/p&gt;

&lt;p&gt;The first cut of other online snapshots don&apos;t need the fully barrier but may still use this for its error propagation mechanisms.&lt;/p&gt;

&lt;p&gt;This version removes the extra layer incurred in the previous implementation due to the use of generics, separates the coordinator and members, and reduces the amount of inheritance used in favor of composition.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12617370">HBASE-7212</key>
            <summary>Globally Barriered Procedure mechanism</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12619005">HBASE-7290</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jmhsieh">Jonathan Hsieh</assignee>
                                    <reporter username="jmhsieh">Jonathan Hsieh</reporter>
                        <labels>
                    </labels>
                <created>Thu, 22 Nov 2012 19:08:26 +0000</created>
                <updated>Mon, 23 Sep 2013 18:30:35 +0000</updated>
                            <resolved>Sat, 29 Dec 2012 06:18:52 +0000</resolved>
                                    <version>hbase-6055</version>
                                    <fixVersion>0.95.0</fixVersion>
                                    <component>snapshots</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="13505160" author="jmhsieh" created="Wed, 28 Nov 2012 01:54:28 +0000"  >&lt;p&gt;Attached a quick deck with a summary of the design and semantics of this mechanism.&lt;/p&gt;</comment>
                            <comment id="13505187" author="jmhsieh" created="Wed, 28 Nov 2012 02:52:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/8240/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/8240/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13505189" author="jmhsieh" created="Wed, 28 Nov 2012 02:53:23 +0000"  >&lt;p&gt;Include a patch that includes all work on top of the jesse&apos;s snapshots branch, and then the actual patch under review.&lt;/p&gt;</comment>
                            <comment id="13505194" author="hadoopqa" created="Wed, 28 Nov 2012 03:04:54 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12555109/hbase-7212.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12555109/hbase-7212.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 13 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3414//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3414//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13508096" author="stack" created="Sat, 1 Dec 2012 22:58:05 +0000"  >&lt;p&gt;Doc looks great.&lt;/p&gt;

&lt;p&gt;Do you have to write it yourself?  Anything already available that you could use?  Say we used the zk curator client, it has a few barriers implemented already: &lt;a href=&quot;https://github.com/Netflix/curator/wiki/Recipes&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Netflix/curator/wiki/Recipes&lt;/a&gt;  If we were using curator say, could you use these receipes as building blocks so you didn&apos;t have to write this yourself? (This feature has to be backportable to 0.94?)&lt;/p&gt;

&lt;p&gt;Reading the diagram, I&quot;m not sure what receivedreached is.  Or sendReached.  sendReached is the coordinator saying all participants responded/are participating?&lt;/p&gt;

&lt;p&gt;On your barrier you say &quot;...but does not support ACID semantics&quot; and thats ok because the &apos;transactions&apos; we&apos;ll be running over this mechanism do not require it?  Because they can proceed and complete in any order and result will come off the same?&lt;/p&gt;

&lt;p&gt;You say &quot;....Does not recover on failures&quot; ... because the operation just FAILs.  Right?&lt;/p&gt;

&lt;p&gt;Only one of these precedures can be ongoingn at any one time?  Is that right?&lt;/p&gt;

&lt;p&gt;How do I read these set of slides?  There is a &apos;Barrier Procedure Coordination&apos; and then there is &apos;Procedure Coordination&apos;?  So, the PC makes use of a BPC?  BPC is the skeleton you hang PC on?&lt;/p&gt;

&lt;p&gt;Why you say this &apos;If we aren&#8217;t doing proper 2PC do we need all this infrastructure?&apos;?  Are you making a case for our not needing 2PC given what is being implemented?&lt;/p&gt;

&lt;p&gt;Coordinator can be any client?  Does not have to be master?&lt;/p&gt;

&lt;p&gt;What is ProcedureCoordinateComms?&lt;/p&gt;

&lt;p&gt;Does this barrier acquistion have any relation to zk barrier receipe?  &lt;a href=&quot;http://zookeeper.apache.org/doc/trunk/recipes.html#sc_recipes_eventHandles&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zookeeper.apache.org/doc/trunk/recipes.html#sc_recipes_eventHandles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What is &apos;class&apos; in the zk node hierarchy?  Class of procedure?&lt;/p&gt;

&lt;p&gt;Procedure looks good to me.&lt;/p&gt;</comment>
                            <comment id="13508125" author="jmhsieh" created="Sun, 2 Dec 2012 01:08:05 +0000"  >&lt;p&gt;Thanks for taking a look.  I&apos;ll get another rev out with cleaned up documentation in a day or two.  Answers below.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do you have to write it yourself? Anything already available that you could use? Say we used the zk curator client, it has a few barriers implemented already: &lt;a href=&quot;https://github.com/Netflix/curator/wiki/Recipes&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Netflix/curator/wiki/Recipes&lt;/a&gt; If we were using curator say, could you use these receipes as building blocks so you didn&apos;t have to write this yourself? (This feature has to be backportable to 0.94?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is a simplified version of Jesse&apos;s patch.  I just gave curator a quick it is similar to the double barrier (&lt;a href=&quot;https://github.com/Netflix/curator/wiki/Double-barrier&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Netflix/curator/wiki/Double-barrier&lt;/a&gt;). If it is implemented as the recipe you pointed out, I think we&apos;d still need to add in the ability for cancellation/abort to come from any of the members.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Reading the diagram, I&quot;m not sure what receivedreached is. Or sendReached. sendReached is the coordinator saying all participants responded/are participating?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes &amp;#8211; reached is sent when the coordinator figures out that it has &quot;reached&quot; the global barrier point because all members have taken their part of the global barrier.&lt;/p&gt;

&lt;p&gt;Basically, zk is being used for its async notifications and as the RPC mechanism.  Arrows into the ZK column are calls writing to ZK, arrows out of ZK are callbacks being called at the target.  So the red coordinator writes to zk via sendStart, zk node creation triggers a startNewOpearion callback on the the blue member1, and similarly on the the green member2.  These names are short hand for the names in the review was posted &amp;#8211; now sendStart -&amp;gt; sendBarrierStart, sendReached -&amp;gt; sendBarrierReached, startNewOperation -&amp;gt; Subprocedure&apos;s consturctor + acquireBarrier,  receiveReached -&amp;gt; receiveReachedGlobalBarrier &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On your barrier you say &quot;...but does not support ACID semantics&quot; and thats ok because the &apos;transactions&apos; we&apos;ll be running over this mechanism do not require it? Because they can proceed and complete in any order and result will come off the same?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Previously, this code was called TwoPhaseCommit (2pc).  While it had two phases, the code did not implement true two phase commit.  The purpose of this explicit comparison is to make clear 2pc&apos;s purpose (distributed ACID guarantees), to point out that we don&apos;t have 2pc here, to point out that we don&apos;t need 2pc here, and to point out that we just need a global barrier.  &lt;/p&gt;

&lt;p&gt;The online snapshot coordination does not need all of what 2pc provides. The first cut will  have &quot;only on a sunny day&quot; semantics &amp;#8211; e.g. it will only succeed if everything succeeds and if anything fails along the way whole attempt will be aborted.  This is ok because the durable work that snapshots does goes into tmp dir (/hbase/.snapshots/.tmp/xxx) that is &quot;commited&quot; at the end atomically via HDFS dir rename, and that durable intermediate operation (e.g. new files from forcing a hlog roll or hlog flush) don&apos;t need to be undone to remain correct.  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You say &quot;....Does not recover on failures&quot; ... because the operation just FAILs. Right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yup.  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Only one of these precedures can be ongoingn at any one time? Is that right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;True for this first cut implementation, but not a fundamental limitation.  This actually gets enforced at the snapshot manager level which may be visible in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7208&quot; title=&quot;Transition Offline Snapshots to ForeignExceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7208&quot;&gt;&lt;del&gt;HBASE-7208&lt;/del&gt;&lt;/a&gt; and definitely in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6866&quot; title=&quot;Timestamp consistent snapshots&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6866&quot;&gt;HBASE-6866&lt;/a&gt; when that gets posted.    I believe as implemented if we picked a different class we could have multiple different kinds of procedure concurrently running on a different znode dir hierarchy.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;How do I read these set of slides? There is a &apos;Barrier Procedure Coordination&apos; and then there is &apos;Procedure Coordination&apos;? So, the PC makes use of a BPC? BPC is the skeleton you hang PC on?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;All those are synonymous &amp;#8211; I&apos;ve bee using procedure as a shorthand.  The code implements one framework for a globally barriered procedure, and I&apos;ve just tried to call it &apos;procedure&apos; and &apos;subprocedure&apos; everywhere (though from review I missed spots where it was called task, operation, or commit).  This &apos;procedure&apos; takes care of the global barrier coordination and cross process error propagation.  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why you say this &apos;If we aren&#8217;t doing proper 2PC do we need all this infrastructure?&apos;? Are you making a case for our not needing 2PC given what is being implemented?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I could probably remove that line &amp;#8211; I&apos;m now convinced why we need what this code does.  &lt;/p&gt;

&lt;p&gt;The main questions I had when I was initially understanding the previous implementation was &quot;Is this 2pc?&quot; and &quot;Do we need 2pc?&quot;.  The answers are: what we have implemented here has two phases but is &lt;b&gt;not&lt;/b&gt; true two-phase commit.  2pc, as defined in the literature (&lt;a href=&quot;http://www.cs.berkeley.edu/~brewer/cs262/Aries.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.cs.berkeley.edu/~brewer/cs262/Aries.pdf&lt;/a&gt;), requires that once the coordinator says something is committed, any failures at a member or coordinator must be recover by failing forward and completing it.  The key point here is that while we will need a global barrier for one of the snapshot flavors (global), it don&apos;t need full 2PC because 1) the we don&apos;t need to undo work (like a log roll or flush) if some sub part of the first phase (our acquire/2pc&apos;s prepare) fails, and because 2) we don&apos;t need to recover failing forward if anything fails in the second phase (our release/2pc&apos;s commit).  In the latter case we just fail and delete .snapshot/.tmp reminants in the fs, and carry on with extra flushed/rolled hlogs.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Coordinator can be any client? Does not have to be master?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It could be anywhere, but currently for snapshots the coordinator lives on the master.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What is ProcedureCoordinateComms?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is actually a layer that separate the zk code (the rpc communications or comms code) from specific execution (snapshotting specific code).  I could probably remove it, but the abstraction allows for testing the core pieces without zk.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Does this barrier acquistion have any relation to zk barrier receipe? &lt;a href=&quot;http://zookeeper.apache.org/doc/trunk/recipes.html#sc_recipes_eventHandles&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zookeeper.apache.org/doc/trunk/recipes.html#sc_recipes_eventHandles&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.  It is very similar to the double barrier.  The main thing different here is this code allows for any member or coordinator to abort/cancel the whole shebang while the recipe doesn&apos;t seem to.  From the recipe it seems that we could be a little bit more clever about how we use our znodes.  (we might have one extra set).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What is &apos;class&apos; in the zk node hierarchy? Class of procedure?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The online-snapshots is a &apos;class&apos; (e.g. all online snapshots) while a procedure name is an actual name for a particular snapshotting request (snapshot121201, snapshot121202 etc).  Off the top of my head I can&apos;t think of any other HBase processes that are ok with the procedure mechanism&apos;s semantics (other operations like enabling, disabling, schema change, splitting, merging probably want 2pc and its recovery requirements).  I think this extra znode dir could probably get removed.&lt;/p&gt;</comment>
                            <comment id="13508128" author="apurtell" created="Sun, 2 Dec 2012 01:52:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;The main questions I had when I was initially understanding the previous implementation was &quot;Is this 2pc?&quot; and &quot;Do we need 2pc?&quot;. The answers are: what we have implemented here has two phases but is not true two-phase commit. 2pc, as defined in the literature (&lt;a href=&quot;http://www.cs.berkeley.edu/~brewer/cs262/Aries.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.cs.berkeley.edu/~brewer/cs262/Aries.pdf&lt;/a&gt;), requires that once the coordinator says something is committed, any failures at a member or coordinator must be recover by failing forward and completing it. The key point here is that while we will need a global barrier for one of the snapshot flavors (global), it don&apos;t need full 2PC because 1) the we don&apos;t need to undo work (like a log roll or flush) if some sub part of the first phase (our acquire/2pc&apos;s prepare) fails, and because 2) we don&apos;t need to recover failing forward if anything fails in the second phase (our release/2pc&apos;s commit). In the latter case we just fail and delete .snapshot/.tmp reminants in the fs, and carry on with extra flushed/rolled hlogs.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1 &lt;/p&gt;

&lt;p&gt;This makes a good case. I like the &quot;keep it as simple as possible and only do as much as we actually need to&quot; approach.&lt;/p&gt;

&lt;p&gt;Edit: Moved unrelated comment to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7254&quot; title=&quot;Refactor AccessController ZK-mediated permissions cache into a generic mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7254&quot;&gt;&lt;del&gt;HBASE-7254&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13509344" author="stack" created="Mon, 3 Dec 2012 23:52:15 +0000"  >&lt;p&gt;On curator double-barrier, it would seem there is no &apos;abort&apos; as you say.  They do have timeouts on barrier enter and leave.  Would that be enough See &lt;a href=&quot;http://www.jarvana.com/jarvana/view/com/netflix/curator/curator-recipes/0.6.4/curator-recipes-0.6.4-javadoc.jar!/com/netflix/curator/framework/recipes/barriers/DistributedDoubleBarrier.html#leave(&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.jarvana.com/jarvana/view/com/netflix/curator/curator-recipes/0.6.4/curator-recipes-0.6.4-javadoc.jar!/com/netflix/curator/framework/recipes/barriers/DistributedDoubleBarrier.html#leave(&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Rather than &apos;abort&apos;, you could just timeout?  That might be simpler still?  i.e. your &quot;Need to be able to force failure after a specified &lt;br/&gt;
timeout elapses&quot;&lt;/p&gt;

&lt;p&gt;double-barrier does not seem to be enough though. There needs to be a means of telling cluster members to go for a particular snapshot barrier.  To this end, I suppose all members need to be watching a snapshot dir and when a new snapshot appears, all try to &apos;enter&apos; its barrier?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Yes &amp;#8211; reached is sent when the coordinator figures out that it has &quot;reached&quot; the global barrier point because all members have taken their part of the global barrier.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is it true that you do not want members to start &apos;snapshotting&apos; until ALL participants have &apos;entered&apos; the barrier?  Does it matter if they start doing their work soon as they &apos;enter&apos; the barrier (using curator/zk receipe terms).  Reading on, it seems like its fine if members just go about their merry way....working on their part of snapshot.  If not all members complete, the coordinator will clean up the incomplete.&lt;/p&gt;

&lt;p&gt;What do you think of the terms in the zk receipe: i.e. rather than &apos;reach&apos; a barrier, &apos;enter&apos; it?&lt;/p&gt;

&lt;p&gt;Some of the answers you give above should go into doc of this feature.  They are quality.&lt;/p&gt;

&lt;p&gt;I buy your argument for going w/ the more basic barrier rather than 2pc function for snapshots (Yeah, 2pc would be useful for other distributed ops like table enable/disable w/ us &apos;failing forward&apos; an interrupted table enable or disable)&lt;/p&gt;

&lt;p&gt;On &apos;Comms&apos;, it was just unclear to me what it was.  Makes sense now.&lt;/p&gt;</comment>
                            <comment id="13509425" author="enis" created="Tue, 4 Dec 2012 01:53:09 +0000"  >&lt;p&gt;What happens when the coordinator dies (in this case hmaster). Does the new HMaster discover the prev procedure and abort? &lt;/p&gt;</comment>
                            <comment id="13509463" author="jmhsieh" created="Tue, 4 Dec 2012 02:56:47 +0000"  >&lt;p&gt;I need to take a look at the source implementation of the curator double barrier and examples of its use to do a better job of comparing. Based on the api and the zk recipes, I&apos;m going to make some assumptions here.&lt;/p&gt;

&lt;p&gt;As another analogy, it seems that our procedure mechanism is similar to a monitor (synchronized in java) that guarantees enter/acquire and leave/release of the barrier parts, while the curator one is lower level and leaves it to the implementer to enforce that invariant.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Rather than &apos;abort&apos;, you could just timeout? That might be simpler still? i.e. your &quot;Need to be able to force failure after a specified timeout elapses&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So in this patch, the time-based abort trigger and a potential user-induced cancellation uses the same mechanism to notify all members (and the coordinator) that the procedure has aborted.  &lt;/p&gt;

&lt;p&gt;I&apos;m speculating but with think one assumption with this mechanism has vs the double barrier&apos;s is that we assume that the actions on the members may be slow (one implementation waits for a memstore flush per region) and may need to be interrupted before completion.  The curator double barrier api doesn&apos;t have such a mechanism and we may have to wait for all operations to complete before we can abort them.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;double-barrier does not seem to be enough though. There needs to be a means of telling cluster members to go for a particular snapshot barrier. To this end, I suppose all members need to be watching a snapshot dir and when a new snapshot appears, all try to &apos;enter&apos; its barrier?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I believe that would be the case if we used curator.  I don&apos;t think we can&apos;t use it &amp;#8211; and the factoring out of the *Comms/*Rpcs would potentially allow us to move that in a future rev.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;s it true that you do not want members to start &apos;snapshotting&apos; until ALL participants have &apos;entered&apos; the barrier? Does it matter if they start doing their work soon as they &apos;enter&apos; the barrier (using curator/zk receipe terms). Reading on, it seems like its fine if members just go about their merry way....working on their part of snapshot. If not all members complete, the coordinator will clean up the incomplete.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;At the end of the day, the full barrier is only required for the snapshot that completely blocks all writes to get a truly consistent snapshot.  The weaker snapshots (either the timestamp based or log roll based) won&apos;t give those guarantees and doesn&apos;t actually need the full barrier.  For the first cut however, I&apos;m probably going to use it since it handles the error propagation and cross process cancellation.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What do you think of the terms in the zk receipe: i.e. rather than &apos;reach&apos; a barrier, &apos;enter&apos; it?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m fine with it &amp;#8211; I&apos;ll change the terms acquire -&amp;gt; enter, reached -&amp;gt; leave in the next rev I post.  (in the v3 version I still need to clean up the nomenclature in the tests).&lt;/p&gt;

&lt;p&gt;I&apos;ll do another rev of the docs to make it consistent with the changes being made.&lt;/p&gt;

</comment>
                            <comment id="13509465" author="jmhsieh" created="Tue, 4 Dec 2012 03:01:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;What happens when the coordinator dies (in this case hmaster). Does the new HMaster discover the prev procedure and abort?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The new HMaster will delete all znodes associated with the procedure class (all znodes associated with snapshotting procedures), all members still using them should timeout and fail, and new operations need to be issued.  For snapshots in particular, there isn&apos;t really a chance for a partial snapshot being present when taking one because all the snapshot work is done in a temp dir and atomically put into place with a dir rename op after the coordinator realizes all the members have released/leave&apos;d successfully.   There will be junk in these tmp dirs left over but they get cleaned up on the next take snapshot attempt, or when the new master starts.&lt;/p&gt;
</comment>
                            <comment id="13536054" author="jmhsieh" created="Wed, 19 Dec 2012 15:46:27 +0000"  >&lt;p&gt;pre patch and patch applied to the 12/18 snapshots branch.&lt;/p&gt;</comment>
                            <comment id="13536060" author="hadoopqa" created="Wed, 19 Dec 2012 15:54:03 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12561715/pre-hbase-7212.v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12561715/pre-hbase-7212.v5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 75 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3613//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3613//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13539447" author="yuzhihong@gmail.com" created="Wed, 26 Dec 2012 00:40:52 +0000"  >&lt;p&gt;I encountered some error submitting review comments on review board.&lt;br/&gt;
The following two new methods can be declared package private:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void waitForLatch(CountDownLatch latch, ForeignExceptionSnare monitor,
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Procedure createProcedure(ForeignExceptionDispatcher fed, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; procName, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] procArgs,
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can we use MapMaker from Guava so that we don&apos;t need to introduce WeakValueMapping class ?&lt;br/&gt;
See CorpocessorHost.java for an example.&lt;/p&gt;</comment>
                            <comment id="13539605" author="jmhsieh" created="Wed, 26 Dec 2012 17:18:15 +0000"  >&lt;p&gt;waitForLatch got moved out of the ErrorHandling patch over to here &amp;#8211; but this is used in follow on patches with code that resides in different packages. &lt;/p&gt;

&lt;p&gt;I agree with createProcedure, I&apos;ve made it package protected. (there was some concern about mokito limitations)&lt;/p&gt;

&lt;p&gt;Thanks for the pointer to guava&apos;s MapMaker and the example in CoprocessorHost. I&apos;ve moved over to that api and removed WeakValueMapping.&lt;/p&gt;
</comment>
                            <comment id="13540608" author="jmhsieh" created="Fri, 28 Dec 2012 21:49:32 +0000"  >&lt;p&gt;v8 is what I plan on committing to the online-snapshot branch.&lt;/p&gt;</comment>
                            <comment id="13540615" author="hadoopqa" created="Fri, 28 Dec 2012 22:33:30 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12562609/pre-hbase-7212.v8.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12562609/pre-hbase-7212.v8.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 78 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3741//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3741//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13540788" author="jmhsieh" created="Sat, 29 Dec 2012 06:18:52 +0000"  >&lt;p&gt;I&apos;ve committed this to the online-snapshot branch.  &lt;/p&gt;

&lt;p&gt;As a reminder this branch is here.  &lt;br/&gt;
&lt;a href=&quot;https://github.com/jmhsieh/hbase/tree/snapshots&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/jmhsieh/hbase/tree/snapshots&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The offline branch is here:&lt;br/&gt;
&lt;a href=&quot;https://github.com/jesse/hbase/tree/snapshots&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/jesse/hbase/tree/snapshots&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/jmhsieh/hbase/tree/hbase-6055&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/jmhsieh/hbase/tree/hbase-6055&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13540789" author="jmhsieh" created="Sat, 29 Dec 2012 06:21:14 +0000"  >&lt;p&gt;Thanks for the reviews nick, matteo, stack, jesse, and ted.&lt;/p&gt;

&lt;p&gt;If there are other concerns I&apos;ll file them as follow-ons that will block merge to trunk.&lt;/p&gt;</comment>
                            <comment id="13775030" author="stack" created="Mon, 23 Sep 2013 18:30:35 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12618471">HBASE-7254</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12617261">HBASE-7206</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12608718">HBASE-6866</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12555103" name="121127-global-barrier-proc.pdf" size="449975" author="jmhsieh" created="Wed, 28 Nov 2012 01:54:28 +0000"/>
                            <attachment id="12555109" name="hbase-7212.patch" size="181017" author="jmhsieh" created="Wed, 28 Nov 2012 02:53:23 +0000"/>
                            <attachment id="12561714" name="hbase-7212.v5.patch" size="185525" author="jmhsieh" created="Wed, 19 Dec 2012 15:46:27 +0000"/>
                            <attachment id="12562608" name="hbase-7212.v8.patch" size="178945" author="jmhsieh" created="Fri, 28 Dec 2012 21:49:32 +0000"/>
                            <attachment id="12555108" name="pre-hbase-7212.patch" size="945635" author="jmhsieh" created="Wed, 28 Nov 2012 02:53:23 +0000"/>
                            <attachment id="12561715" name="pre-hbase-7212.v5.patch" size="1168629" author="jmhsieh" created="Wed, 19 Dec 2012 15:46:27 +0000"/>
                            <attachment id="12562609" name="pre-hbase-7212.v8.patch" size="1177960" author="jmhsieh" created="Fri, 28 Dec 2012 21:49:32 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 28 Nov 2012 03:04:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>259589</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0lrxz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>125178</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>