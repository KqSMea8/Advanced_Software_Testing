<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:47:38 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13888/HBASE-13888.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13888] Fix refill bug from HBASE-13686</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13888</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;As I report the RateLimiter fail to limit in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13686&quot; title=&quot;Fail to limit rate in RateLimiter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13686&quot;&gt;&lt;del&gt;HBASE-13686&lt;/del&gt;&lt;/a&gt;, then &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ashish+singhi&quot; class=&quot;user-hover&quot; rel=&quot;ashish singhi&quot;&gt;Ashish Singhi&lt;/a&gt; fix that problem by support two kinds of RateLimiter:  AverageIntervalRateLimiter and FixedIntervalRateLimiter. But in my use of the code, I found a new bug about refill() in AverageIntervalRateLimiter.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; delta = (limit * (now - nextRefillTime)) / &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.getTimeUnitInMillis();
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (delta &amp;gt; 0) {
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.nextRefillTime = now;
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.min(limit, available + delta);
    }   
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When delta &amp;gt; 0, refill maybe return available + delta. Then in the canExecute(), avail will add refillAmount again. So the new avail maybe 2 * avail + delta.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; refillAmount = refill(limit, avail);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (refillAmount == 0 &amp;amp;&amp;amp; avail &amp;lt; amount) {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
    }   
    &lt;span class=&quot;code-comment&quot;&gt;// check &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; positive overflow
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (avail &amp;lt;= &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.MAX_VALUE - refillAmount) {
      avail = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.max(0, &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.min(avail + refillAmount, limit));
    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
      avail = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.max(0, limit);
    } 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I will add more unit tests for RateLimiter in the next days.&lt;/p&gt;

&lt;p&gt;Review Board: &lt;a href=&quot;https://reviews.apache.org/r/35384/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/35384/&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12837136">HBASE-13888</key>
            <summary>Fix refill bug from HBASE-13686</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="zghaobac">Guanghao Zhang</assignee>
                                    <reporter username="zghaobac">Guanghao Zhang</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 Jun 2015 13:31:28 +0000</created>
                <updated>Fri, 18 Dec 2015 07:14:08 +0000</updated>
                            <resolved>Tue, 16 Jun 2015 01:33:10 +0000</resolved>
                                    <version>2.0.0</version>
                    <version>1.2.0</version>
                    <version>1.1.1</version>
                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.2.0</fixVersion>
                    <fixVersion>1.1.2</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="14581954" author="yuzhihong@gmail.com" created="Thu, 11 Jun 2015 14:07:40 +0000"  >&lt;p&gt;Any chance of a unit test that shows the problem ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="14583363" author="zghaobac" created="Fri, 12 Jun 2015 13:08:06 +0000"  >&lt;p&gt;Yeah. I add some ut for RateLimiter in the v2 patch. It will test the refill() and canExecute() of RateLimiter.  In the previous tests, it always have small limit, i.e. 10 per sec.  It was hard to trigger &quot;return Math.min(limit, available + delta);&quot; return available+delta. So I add some ut for refill and bigger limit like 100, 200, 500 in ut.&lt;/p&gt;</comment>
                            <comment id="14583464" author="yuzhihong@gmail.com" created="Fri, 12 Jun 2015 14:32:51 +0000"  >&lt;p&gt;There&apos;re two pairs of new tests. Each pair consists of test for each RateLimiter.&lt;/p&gt;

&lt;p&gt;From brief look, the tests in the pair seem to be the same, except for RateLimiter class.&lt;br/&gt;
Can you extract the body of the test so that there is more code sharing ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="14584445" author="zghaobac" created="Sat, 13 Jun 2015 04:56:12 +0000"  >&lt;p&gt;AverageIntervalRateLimiter and FixedIntervalRateLimiter have different refill strategy, so the unit tests of them was different.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
assertEquals(200, testCanExecuteByRate(limiter, 200, TimeUnit.SECONDS)); &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; AverageIntervalRateLimiter
&lt;/span&gt;assertEquals(100, testCanExecuteByRate(limiter, 200, TimeUnit.SECONDS)); &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; FixedIntervalRateLimiter&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For FixedIntervalRateLimiter, set 60 limit per sec, it will only refill all limit on 1 sec, 2 sec, and so on.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-comment&quot;&gt;// after 0.5 sec, refill should &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 0
&lt;/span&gt;    limiter.setNextRefillTime(limiter.getNextRefillTime() - 500);
    assertEquals(0, limiter.refill(limiter.getLimit(), limiter.getAvailable()));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But for AverageIntervalRateLimiter, set 60 limit per sec, it will refill 1 resource every 1/60 sec.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-comment&quot;&gt;// after 0.5 sec, refill should &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 30
&lt;/span&gt;    limiter.setNextRefillTime(limiter.getNextRefillTime() - 500);
    assertEquals(30, limiter.refill(limiter.getLimit(), limiter.getAvailable()));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14584450" author="yuzhihong@gmail.com" created="Sat, 13 Jun 2015 05:14:09 +0000"  >&lt;p&gt;+1 on v2 if tests pass.&lt;/p&gt;</comment>
                            <comment id="14584496" author="hadoopqa" created="Sat, 13 Jun 2015 07:58:27 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12739231/HBASE-13888-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12739231/HBASE-13888-v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 293506c7cdef3e866c75a7b92558a423eb804d11.&lt;br/&gt;
  ATTACHMENT ID: 12739231&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestRegionRebalancing&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): 	at org.apache.hadoop.hbase.client.TestCloneSnapshotFromClient.testCloneSnapshot(TestCloneSnapshotFromClient.java:169)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestCloneSnapshotFromClient.testCloneSnapshotCrossNamespace(TestCloneSnapshotFromClient.java:186)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestFastFail.testFastFail(TestFastFail.java:107)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestFromClientSide.testScanMetrics(TestFromClientSide.java:5053)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14395//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14395//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14395//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14395//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14395//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14395//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14395//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14395//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14584564" author="zghaobac" created="Sat, 13 Jun 2015 10:54:05 +0000"  >&lt;p&gt;The fail tests look like not related to this patch. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mbertozzi&quot; class=&quot;user-hover&quot; rel=&quot;mbertozzi&quot;&gt;Matteo Bertozzi&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ashish+singhi&quot; class=&quot;user-hover&quot; rel=&quot;ashish singhi&quot;&gt;Ashish Singhi&lt;/a&gt;, can you help to review this patch? Thanks&lt;/p&gt;</comment>
                            <comment id="14584580" author="ashish singhi" created="Sat, 13 Jun 2015 12:09:22 +0000"  >&lt;p&gt;Sorry for the delay I was out of the town for last two days.&lt;br/&gt;
I am not very clear with your bug scenario, can you explain me in short what you want to achieve which is failing ?&lt;/p&gt;

&lt;p&gt;Regarding the AverageIntervalRateLimiter#refill bug which you are pointing is not correct to me.&lt;br/&gt;
I see that you have written a test case for that,&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Test
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testRefillOfAverageIntervalRateLimiter() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException {
    RateLimiter limiter = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AverageIntervalRateLimiter();
    limiter.set(60, TimeUnit.SECONDS);
    assertEquals(60, limiter.getAvailable());
    &lt;span class=&quot;code-comment&quot;&gt;// first refill, will &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the number same with limit
&lt;/span&gt;    assertEquals(60, limiter.refill(limiter.getLimit(), limiter.getAvailable()));

    limiter.consume(60);
    &lt;span class=&quot;code-comment&quot;&gt;// after 0.2 sec, refill should &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 12
&lt;/span&gt;    limiter.setNextRefillTime(limiter.getNextRefillTime() - 200);
    assertEquals(12, limiter.refill(limiter.getLimit(), limiter.getAvailable()));

    &lt;span class=&quot;code-comment&quot;&gt;// after 0.5 sec, refill should &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 30
&lt;/span&gt;    limiter.setNextRefillTime(limiter.getNextRefillTime() - 500);
    assertEquals(30, limiter.refill(limiter.getLimit(), limiter.getAvailable()));

    &lt;span class=&quot;code-comment&quot;&gt;// after 1 sec, refill should &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 60
&lt;/span&gt;    limiter.setNextRefillTime(limiter.getNextRefillTime() - 1000);
    assertEquals(60, limiter.refill(limiter.getLimit(), limiter.getAvailable()));

    &lt;span class=&quot;code-comment&quot;&gt;// after more than 1 sec, refill should &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; at max 60
&lt;/span&gt;    limiter.setNextRefillTime(limiter.getNextRefillTime() - 3000);
    assertEquals(60, limiter.refill(limiter.getLimit(), limiter.getAvailable()));
    limiter.setNextRefillTime(limiter.getNextRefillTime() - 5000);
    assertEquals(60, limiter.refill(limiter.getLimit(), limiter.getAvailable()));
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;here you are not consuming any resource and updating the refill time is not at all correct which means without consuming any resource by user refill time is getting updated how is this possible in real world scenario !!?&lt;/p&gt;

&lt;p&gt;If we add code to consume all 60 resources before we update the next refill time then the test will pass without your source code modification also.&lt;/p&gt;

&lt;p&gt;Regarding &lt;tt&gt;testCanExecuteOfAverageIntervalRateLimiter&lt;/tt&gt; I did not understand what are you testing here, can you explain ?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="14584583" author="ashish singhi" created="Sat, 13 Jun 2015 12:15:30 +0000"  >&lt;p&gt;In the above comment, &lt;tt&gt;limiter.consume(60)&lt;/tt&gt; line in the code snippet is my local change that is what I was pointing at the end if we add this then the test will pass without any source code change here.&lt;/p&gt;</comment>
                            <comment id="14584599" author="zghaobac" created="Sat, 13 Jun 2015 13:22:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;I am not very clear with your bug scenario, can you explain me in short what you want to achieve which is failing ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In my test, the client&apos;s qps is about 500, when quota set is bigger than 35, the quota will not work. As I output the log and found that after 30 ms, client have 15 request, then avail will be 35 - 15 = 20. then the refill will return Math.min(35, 20 + 1), because delta &amp;gt; 0. refillAmount is 21, then avail = Math.max(0, Math.min(avail + refillAmount, limit)); so avail will be 35, again. Every 30 ms, this is a cycle, so the limiter can not work.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;here you are not consuming any resource and updating the refill time is not at all correct which means without consuming any resource by user refill time is getting updated how is this possible in real world scenario !!?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is for the test. In your code, refill() will return how many resources need to refill. So I just test if it is correct. Because how many resources need to refill is only related to how long since last refill.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If we add code to consume all 60 resources before we update the next refill time then the test will pass without your source code modification also.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you add limiter.consume(30) to test the code?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Regarding testCanExecuteOfAverageIntervalRateLimiter I did not understand what are you testing here, can you explain ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;As the above test case, the limiter can not work when limit is bigger than 35 per sec. So I want test if it work correctly when limit is 100, 200, 500 per sec. The key point of test if it work is to test how many times of the canExecute() can return true. &lt;/p&gt;</comment>
                            <comment id="14584613" author="ashish singhi" created="Sat, 13 Jun 2015 14:21:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;when quota set is bigger than 35, the quota will not work. As I output the log and found that after 30 ms, client have 15 request, then avail will be 35 - 15 = 20. then the refill will return Math.min(35, 20 + 1), because delta &amp;gt; 0. refillAmount is 21, then avail = Math.max(0, Math.min(avail + refillAmount, limit)); so avail will be 35, again. Every 30 ms, this is a cycle, so the limiter can not work.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok I got it. Left couple of comments on the RB.&lt;/p&gt;</comment>
                            <comment id="14585079" author="zghaobac" created="Sun, 14 Jun 2015 14:22:31 +0000"  >&lt;p&gt;Thank you very much. I update the code by your review comments and add a new v3 patch.&lt;/p&gt;</comment>
                            <comment id="14585116" author="ashish singhi" created="Sun, 14 Jun 2015 16:49:36 +0000"  >&lt;p&gt;Looks like RB is not updated with v3.&lt;br/&gt;
Any ways I&apos;m +1(non-binding) on v3.&lt;br/&gt;
Nice find and thanks for the patch.&lt;/p&gt;</comment>
                            <comment id="14585119" author="hadoopqa" created="Sun, 14 Jun 2015 16:53:53 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12739490/HBASE-13888-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12739490/HBASE-13888-v3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 682b8ab8a542a903e5807053282693e3a96bad2d.&lt;br/&gt;
  ATTACHMENT ID: 12739490&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestRegionRebalancing&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14404//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14404//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14404//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14404//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14404//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14404//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14404//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14404//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14585426" author="zghaobac" created="Mon, 15 Jun 2015 04:53:54 +0000"  >&lt;p&gt;Review Board Updated: &lt;a href=&quot;https://reviews.apache.org/r/35384/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/35384/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14587300" author="yuzhihong@gmail.com" created="Tue, 16 Jun 2015 01:33:10 +0000"  >&lt;p&gt;Thanks for the patch, Guanghao&lt;/p&gt;

&lt;p&gt;Thanks for the review, Ashish.&lt;/p&gt;</comment>
                            <comment id="14587400" author="hudson" created="Tue, 16 Jun 2015 03:30:47 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.1 #543 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/543/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/543/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13888&quot; title=&quot;Fix refill bug from HBASE-13686&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13888&quot;&gt;&lt;del&gt;HBASE-13888&lt;/del&gt;&lt;/a&gt; Fix refill bug from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13686&quot; title=&quot;Fail to limit rate in RateLimiter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13686&quot;&gt;&lt;del&gt;HBASE-13686&lt;/del&gt;&lt;/a&gt; (Guanghao Zhang) (tedyu: rev 49700460dabf90562b6f9b4f1f5c45df98668c6c)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/quotas/TestRateLimiter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/AverageIntervalRateLimiter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/FixedIntervalRateLimiter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/RateLimiter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14587431" author="hudson" created="Tue, 16 Jun 2015 04:17:41 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6575 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6575/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6575/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13888&quot; title=&quot;Fix refill bug from HBASE-13686&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13888&quot;&gt;&lt;del&gt;HBASE-13888&lt;/del&gt;&lt;/a&gt; Fix refill bug from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13686&quot; title=&quot;Fail to limit rate in RateLimiter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13686&quot;&gt;&lt;del&gt;HBASE-13686&lt;/del&gt;&lt;/a&gt; (Guanghao Zhang) (tedyu: rev 84a50393ee56d09abb68f54b44b64f5279bd33c9)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/RateLimiter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/FixedIntervalRateLimiter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/quotas/TestRateLimiter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/AverageIntervalRateLimiter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14587469" author="hudson" created="Tue, 16 Jun 2015 04:41:41 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.2 #14 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/14/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/14/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13888&quot; title=&quot;Fix refill bug from HBASE-13686&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13888&quot;&gt;&lt;del&gt;HBASE-13888&lt;/del&gt;&lt;/a&gt; Fix refill bug from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13686&quot; title=&quot;Fail to limit rate in RateLimiter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13686&quot;&gt;&lt;del&gt;HBASE-13686&lt;/del&gt;&lt;/a&gt; (Guanghao Zhang) (tedyu: rev e8821d1806d9455038cd9e80ddcaba68f49f3b77)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/FixedIntervalRateLimiter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/quotas/TestRateLimiter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/AverageIntervalRateLimiter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/RateLimiter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12739046" name="HBASE-13888-v1.patch" size="750" author="zghaobac" created="Thu, 11 Jun 2015 13:33:00 +0000"/>
                            <attachment id="12739231" name="HBASE-13888-v2.patch" size="6674" author="zghaobac" created="Fri, 12 Jun 2015 12:52:08 +0000"/>
                            <attachment id="12739490" name="HBASE-13888-v3.patch" size="8624" author="zghaobac" created="Sun, 14 Jun 2015 14:16:00 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 11 Jun 2015 14:07:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 26 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2fxhz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>