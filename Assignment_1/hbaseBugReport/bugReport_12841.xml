<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:36:59 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12841/HBASE-12841.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12841] ClientBackoffPolicies should support immediate rejection of submitted ops</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12841</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The ClientBackoffPolicy interface currently has a single method:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; ClientBackoffPolicy {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getBackoffTime(ServerName serverName, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] region, ServerStatistics stats);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A backoff policy can only specify the amount of delay to inject before submitting the request(s) to a given server. &lt;/p&gt;

&lt;p&gt;How that works in the current implementation is we will submit runnables to AsyncProcess that sleep for the specified delay period before proceeding. This consumes task slots that could otherwise be performing useful work. AsyncProcess limits the number of outstanding tasks per region to &quot;hbase.client.max.perregion.tasks&quot; (default 1) and per server &quot;hbase.client.max.perserver.tasks&quot; (default 2). Tasks will be accepted and queued up to &quot;hbase.client.max.total.tasks&quot; (default 100), after which we start globally blocking submissions by waiting on a monitor.&lt;/p&gt;

&lt;p&gt;Sophisticated applications could benefit from an alternate strategy that immediately rejects new work. Rather then returning a backoff interval, the policy could return a value from 0.0 to 1.0, or as percentage from 0 to 100, expressing the likelihood of task rejection. Immediately rejected tasks won&apos;t consume task slots nor &quot;stall&quot; by sleeping. Overall the client will be less likely to hit the global limit. Applications using APIs like Table#batch or Table#batchCallback will get control back faster, can determine what operations were failed by pushback, and deal intelligently with request ordering and resubmission/retry concerns. In network queuing this strategy is known as Random Early Drop (or Random Early Detection).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12766969">HBASE-12841</key>
            <summary>ClientBackoffPolicies should support immediate rejection of submitted ops</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Jan 2015 23:58:52 +0000</created>
                <updated>Thu, 22 Jan 2015 19:00:53 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14287986" author="apurtell" created="Thu, 22 Jan 2015 19:00:53 +0000"  >&lt;p&gt;Discussing this while walking around downtown SF with &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jesse_yates&quot; class=&quot;user-hover&quot; rel=&quot;jesse_yates&quot;&gt;Jesse Yates&lt;/a&gt;, he had a good simplifying suggestion: Rather than probabilistically decide to drop any random request, leading to ordering issues the application would need to deal with, as mentioned above, decide to reject all new ops to the overloaded server. Let me expand on this a bit: We would do so for a calculated duration. This would be very similar to how client backoff policies work today, but instead of submitting a DelayingRunner, we simply reject all ops. We could simply throw RegionTooBusyExceptions up to the application based on this local decision. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12537840">HBASE-5162</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 47 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i24a5b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>