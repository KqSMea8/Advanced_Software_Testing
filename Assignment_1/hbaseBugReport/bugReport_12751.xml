<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:36:05 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12751/HBASE-12751.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12751] Allow RowLock to be reader writer</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12751</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Right now every write operation grabs a row lock. This is to prevent values from changing during a read modify write operation (increment or check and put). However it limits parallelism in several different scenarios.&lt;/p&gt;

&lt;p&gt;If there are several puts to the same row but different columns or stores then this is very limiting.&lt;/p&gt;

&lt;p&gt;If there are puts to the same column then mvcc number should ensure a consistent ordering. So locking is not needed.&lt;/p&gt;

&lt;p&gt;However locking for check and put or increment is still needed.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12763496">HBASE-12751</key>
            <summary>Allow RowLock to be reader writer</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="eclark">Elliott Clark</reporter>
                        <labels>
                    </labels>
                <created>Tue, 23 Dec 2014 17:00:12 +0000</created>
                <updated>Tue, 9 Feb 2016 05:05:29 +0000</updated>
                            <resolved>Thu, 19 Nov 2015 23:15:51 +0000</resolved>
                                    <version>2.0.0</version>
                    <version>1.3.0</version>
                                    <fixVersion>2.0.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>18</watches>
                                                                                                            <comments>
                            <comment id="14259554" author="lhofhansl" created="Sun, 28 Dec 2014 02:46:32 +0000"  >&lt;p&gt;Interesting. Are you saying we do not need the rowlock at all?&lt;/p&gt;</comment>
                            <comment id="14263468" author="eclark" created="Sat, 3 Jan 2015 08:35:07 +0000"  >&lt;p&gt;Yeah that&apos;s my thought. Puts for the same cell are already ordered by sequence number. So it shouldn&apos;t matter the order that they are applied to the memstore as long as the memstore correctly orders them there. There will be a slight change in behavior. Right now it&apos;s not possible for two puts to come in and have timestamps generated on the regionserver that don&apos;t order the same as the sequence id. However as long as the memstore correctly orders cells by timestamp then by sequence id it shouldn&apos;t be a behavioral change. We&apos;ve never made any guarantees about the relationship of TS to seqid since TS is user setable.&lt;/p&gt;

&lt;p&gt;Cells that are the same row but totally different cells can&apos;t have ordering issues. So they aren&apos;t an issue however right now they are paying the same cost as if they could. It&apos;s a reasonable trade off in order to keep the number of bytes that need to be compared to get a lock down.&lt;/p&gt;

&lt;p&gt;However any check and mutate type action still needs to be able to say that nothing else changes the value concurrently. For that a write lock is needed.&lt;/p&gt;

&lt;p&gt;Seems like row locks were initially put in to be exposed to the client (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-798&quot; title=&quot;Provide Client API to explicitly lock and unlock rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-798&quot;&gt;&lt;del&gt;HBASE-798&lt;/del&gt;&lt;/a&gt;). That was a bad idea because of region movement. And so it was removed. However by that time incrementColumnValue had been committed and that needed row locks; so did check and put and the later check and mutate.&lt;/p&gt;</comment>
                            <comment id="14263999" author="lhofhansl" created="Sun, 4 Jan 2015 20:48:13 +0000"  >&lt;p&gt;Makes sense. Read lock for puts, write lock for checkAndXXX/Increment/Append/etc, should be an easy change to make (famous last words...)&lt;/p&gt;

&lt;p&gt;How about mutateRows? Seems even there read locks should be sufficient. (In any case we could start with that taking write locks until we convince ourselves otherwise.)&lt;/p&gt;</comment>
                            <comment id="14265014" author="eclark" created="Mon, 5 Jan 2015 19:57:59 +0000"  >&lt;p&gt;Assigning to a college who&apos;s working on a version of this.&lt;/p&gt;</comment>
                            <comment id="14368054" author="nkedel" created="Wed, 18 Mar 2015 22:29:34 +0000"  >&lt;p&gt;Workflow failure, sorry &amp;#8211; clicked submit patch before adding attachment.&lt;/p&gt;</comment>
                            <comment id="14368062" author="lhofhansl" created="Wed, 18 Mar 2015 22:36:55 +0000"  >&lt;p&gt;The patch does not actually use readlock anywhere, right? (maybe you forgot to add true to the call to getRowLockInternal)&lt;/p&gt;</comment>
                            <comment id="14368150" author="nkedel" created="Wed, 18 Mar 2015 23:41:05 +0000"  >&lt;p&gt;Good catch, yes thanks.  I&apos;d had isPutMutation and removed it; looking now at whether it&apos;s safe to put true vs adding an isDeleteMutation and putting &quot;isPutMutation || isDeleteMutation&quot;&lt;/p&gt;</comment>
                            <comment id="14368151" author="hadoopqa" created="Wed, 18 Mar 2015 23:41:34 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12705454/HBASE-12751.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12705454/HBASE-12751.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f9a17edc252a88c5a1a2c7764e3f9f65623e0ced.&lt;br/&gt;
  ATTACHMENT ID: 12705454&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1919 checkstyle errors (more than the master&apos;s current 1917 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +  protected RowLock getRowLockInternal(byte[] row, boolean waitForLock, boolean readLock) throws IOException {&lt;br/&gt;
+        // Row is already locked by a read lock, and we&apos;re asking for a read lock; reuse the current context.&lt;br/&gt;
+    public RowLock getRowLockInternal(final byte[] row, boolean waitForLock, boolean readLock) throws IOException {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.http.TestHttpServerLifecycle.testStartedServerIsAlive(TestHttpServerLifecycle.java:71)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13302//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14368186" author="nkedel" created="Thu, 19 Mar 2015 00:06:50 +0000"  >&lt;p&gt;Fix line-length style bugs&lt;br/&gt;
Actually call read lock in doMiniBatchMutation&lt;br/&gt;
Reviewed code to ensure that a request for a read lock in a thread already in a write lock behaves as expected in remaining in a write lock.&lt;/p&gt;</comment>
                            <comment id="14368305" author="hadoopqa" created="Thu, 19 Mar 2015 01:29:37 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12705479/HBASE-12751-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12705479/HBASE-12751-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f9a17edc252a88c5a1a2c7764e3f9f65623e0ced.&lt;br/&gt;
  ATTACHMENT ID: 12705479&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.http.TestHttpServerLifecycle.testStartedServerIsAlive(TestHttpServerLifecycle.java:71)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13304//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14375405" author="nkedel" created="Mon, 23 Mar 2015 05:08:50 +0000"  >&lt;p&gt;Re-queuing &lt;/p&gt;</comment>
                            <comment id="14375472" author="hadoopqa" created="Mon, 23 Mar 2015 07:13:06 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12706449/HBASE-12751-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12706449/HBASE-12751-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 845f5de121e92a99b41b30dc86cb3f2898e0254f.&lt;br/&gt;
  ATTACHMENT ID: 12706449&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.TestAcidGuarantees.testMixedAtomicity(TestAcidGuarantees.java:362)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13363//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14376453" author="nkedel" created="Mon, 23 Mar 2015 19:28:22 +0000"  >&lt;p&gt;org.apache.hadoop.hbase.TestAcidGuarantees appears to have non-deterministic freezing behaviors when running locally.  Could this be related to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13295&quot; title=&quot;TestInfoServers hang&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13295&quot;&gt;&lt;del&gt;HBASE-13295&lt;/del&gt;&lt;/a&gt; ?&lt;/p&gt;</comment>
                            <comment id="14376459" author="eclark" created="Mon, 23 Mar 2015 19:31:39 +0000"  >&lt;p&gt;Doubtful. That one has been pretty stable. How is it on master without your patch?&lt;/p&gt;</comment>
                            <comment id="14377157" author="eclark" created="Tue, 24 Mar 2015 02:32:57 +0000"  >&lt;p&gt;So &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkedel&quot; class=&quot;user-hover&quot; rel=&quot;nkedel&quot;&gt;Nate Edel&lt;/a&gt; and I have been debugging this today. The test that&apos;s failing is a real test failure. However it&apos;s do to the late binding sequence id work that went in a while ago.&lt;/p&gt;

&lt;p&gt;The issue is that if we allow two WALEdits for the same row to be outstanding then it&apos;s possible that the pre-created sequence number (1M + a incrementing long) will not sort in the same way as the sequence id inside of the waledit. This late binding is currently pretty intwined with the FSHLog.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; or &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; or &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; any thoughts on how to fix this cleanly? My only thought was to move memstore insertion after hlog.append.&lt;/p&gt;</comment>
                            <comment id="14377226" author="lhofhansl" created="Tue, 24 Mar 2015 03:48:30 +0000"  >&lt;p&gt;Is this from the disruptor code?&lt;/p&gt;</comment>
                            <comment id="14377358" author="stack" created="Tue, 24 Mar 2015 06:11:17 +0000"  >&lt;p&gt;Say more &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt;. Sort in the memstore? But the mvcc that is +1B shouldn&apos;t be seen because it beyond read point? (Sounds like a &apos;fun&apos; debug session &amp;#8211; nice one)&lt;/p&gt;</comment>
                            <comment id="14378104" author="eclark" created="Tue, 24 Mar 2015 16:31:46 +0000"  >&lt;p&gt;Sure so all the fun happens in HRegion#doMiniBatchMutation.&lt;/p&gt;

&lt;p&gt;I&apos;ll talk about line numbers and current implementation though they might change so I&apos;ve linked what I currently see.&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;NormalFlow&quot;&gt;&lt;/a&gt;Normal Flow&lt;/h2&gt;
&lt;ul&gt;
	&lt;li&gt;on line &lt;a href=&quot;https://github.com/apache/hbase/blob/a75a2ace4f52daa1eb415f085dfad920b30c3349/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java#L3039&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;3039&lt;/a&gt; row locks for all the mutations possible are obtained. In the current code this means that only one set of mutations for a row can continue at a time. However if we change that to reduce contention on rows things break farther down.&lt;/li&gt;
	&lt;li&gt;on line &lt;a href=&quot;https://github.com/apache/hbase/blob/a75a2ace4f52daa1eb415f085dfad920b30c3349/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java#L3109&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;3109&lt;/a&gt; a pre-assigned read point is assigned 1M + some sequence This sequence is independent of the actual sequence id. It is entirely possible for this sequence to be assigned to edits in a different order than they will actually be applied to the wal log.&lt;/li&gt;
	&lt;li&gt;on line &lt;a href=&quot;https://github.com/apache/hbase/blob/a75a2ace4f52daa1eb415f085dfad920b30c3349/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java#L3141&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;3141&lt;/a&gt; the mutations are added to the memstore and the memstore adds them to CellSkipListSet which uses KVComparator.COMPARATOR to sort mutations. They sort in the pretty normal order of rk, family, qual, timestamp, mvcc number. Since the sequence Id here is 1M + some these edits sort before anything that&apos;s committed.&lt;/li&gt;
	&lt;li&gt;Each edit that&apos;s applied to the memstore is also added to the memstoreCells ArrayList.&lt;/li&gt;
	&lt;li&gt;the list of edits applied is packaged into a wal edit.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/apache/hbase/blob/a75a2ace4f52daa1eb415f085dfad920b30c3349/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java#L3181&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;3182&lt;/a&gt; this waledit is then appended to the wal&lt;/li&gt;
	&lt;li&gt;inside of FSHlog &lt;a href=&quot;https://github.com/apache/hbase/blob/a75a2ace4f52daa1eb415f085dfad920b30c3349/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java#L1191&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;1191&lt;/a&gt; an FSWalEntry is created and added to the ring buffer.&lt;/li&gt;
	&lt;li&gt;at some point the ring buffer calls &lt;a href=&quot;https://github.com/apache/hbase/blob/a75a2ace4f52daa1eb415f085dfad920b30c3349/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java#L1920&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;1920&lt;/a&gt; the event handler&apos;s FSHlog.RingBufferEventHandler#onEvent method.&lt;/li&gt;
	&lt;li&gt;this event handler notices that the event is an append and so it calls &lt;a href=&quot;https://github.com/apache/hbase/blob/a75a2ace4f52daa1eb415f085dfad920b30c3349/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java#L2026&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;2026&lt;/a&gt; FSHlog.RingBufferEventHandler#append.&lt;/li&gt;
	&lt;li&gt;inside that function at &lt;a href=&quot;https://github.com/apache/hbase/blob/a75a2ace4f52daa1eb415f085dfad920b30c3349/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java#L2037&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;2037&lt;/a&gt; we call FSWalEntry#stampRegionSequenceId&lt;/li&gt;
	&lt;li&gt;FSWalEntry#stampRegionSequenceId goes through every mutation that is in the memstore arraylist and changes their sequence id. &lt;a href=&quot;https://github.com/apache/hbase/blob/a75a2ace4f52daa1eb415f085dfad920b30c3349/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSWALEntry.java#L127&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;127&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;The mutations in the memstore&apos;s CellSkipListSet get a new sequence id. However the comparator is only run on insert so any change in the sequence number that would change order isn&apos;t reflected in the order that CellSkipListSet will return key values.&lt;/li&gt;
	&lt;li&gt;HRegion#doMiniBatchMutation releases the row locks and continues on.&lt;/li&gt;
	&lt;li&gt;the WAL is synced and everything is returned as success.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;&lt;a name=&quot;TheIssue&quot;&gt;&lt;/a&gt;The Issue&lt;/h2&gt;

&lt;p&gt;The sequence id from MultiVersionConsistencyControl#getPreAssignedWriteNumber is completely independent of the sequence id that the ring buffer hands out. Right now we luck out and never have to deal with this because all edits to the same row are serialized by the row locks. However if we change it so that more than one edit for a row can be in the memstore&apos;s map with a pre-assigned sequence id then this all breaks. Consider the following event for two puts coming in at the same time for the same row, cf, qual, and timestamp but different values (assuming that row locks are reader/writer and normal puts only need readers):&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Put #1 comes in gets reader lock&lt;/li&gt;
	&lt;li&gt;Put #2 comes in gets reader lock&lt;/li&gt;
	&lt;li&gt;Put #1 gets initial sequence id of 1M&lt;/li&gt;
	&lt;li&gt;Put #2 gets initial sequence id of 1M+1&lt;/li&gt;
	&lt;li&gt;Put #1 inserts into memstore.&lt;/li&gt;
	&lt;li&gt;Put #2 inserts into memstore.&lt;/li&gt;
	&lt;li&gt;Memstore is now ordered like this [ Put#2, Put#1 ] because 1M+1 sorts before 1M&lt;/li&gt;
	&lt;li&gt;Put #2 appends to the FSWal. With this Put #2 gets real sequence id of 1&lt;/li&gt;
	&lt;li&gt;Put #1 appends to the FSWal. With this Put #1 gets real sequence id of 2&lt;/li&gt;
	&lt;li&gt;Put#1 and Put#2 are sync&apos;d and the read point is advanced to 2&lt;/li&gt;
	&lt;li&gt;the memstore is still sorted like [ Put#2, Put#1 ] even though their real sequence id&apos;s say they should be sorted the other way.&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="14378131" author="stack" created="Tue, 24 Mar 2015 16:46:53 +0000"  >&lt;p&gt;Excellent, excellent stuff (this whole issue and this finding)&lt;/p&gt;

&lt;p&gt;So, first response is same as yours: Add to memstore after WAL; the edits can&apos;t be &apos;seen&apos; yet anyways because they are beyond the read point.... But our current ordering of memstore first was about perf so would need to look at this.&lt;/p&gt;

&lt;p&gt;Other things are going on here though FYI, our &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; is looking at WAL perf in the layer below DFS client and is having some radical thoughts... so this is right time to raise reorder on the append pipeline; longer time between syncs means more grouping... higher throughput.&lt;/p&gt;

&lt;p&gt;You looking at the rerdering then &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14378258" author="eclark" created="Tue, 24 Mar 2015 17:51:37 +0000"  >&lt;p&gt;Yeah I&apos;ll look at the re-ordering now that &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkedel&quot; class=&quot;user-hover&quot; rel=&quot;nkedel&quot;&gt;Nate Edel&lt;/a&gt; has done the hard work of creating the initial patch.&lt;/p&gt;</comment>
                            <comment id="14378517" author="enis" created="Tue, 24 Mar 2015 20:24:15 +0000"  >&lt;p&gt;Makes sense. From my notes from 1 year ago: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Different strategies for transactions depending on the type: &lt;/p&gt;

&lt;p&gt; Read-only    (get, scan)&lt;br/&gt;
 Write-only    (put)&lt;br/&gt;
 Read-Write  (increment, append, row processor)&lt;/p&gt;

&lt;p&gt;Current transaction models&lt;br/&gt;
Current model for write only transactions&lt;br/&gt;
1. lock the rows &lt;br/&gt;
2. update latest timestamps&lt;br/&gt;
3. get mvcc number&lt;br/&gt;
  3.1. sync writeQueue&lt;br/&gt;
  3.2. increment write number&lt;br/&gt;
  3.3. add trx to the writeQueue&lt;br/&gt;
4. Insert to memstore (with mvcc number)&lt;br/&gt;
5. AppendNoSync() to WAL&lt;br/&gt;
  5.1. obtain seq_num&lt;br/&gt;
  5.2. append entry to pendingWrites (our own linked list buffer)&lt;br/&gt;
6. Release row locks&lt;br/&gt;
7. sync WAL&lt;br/&gt;
  7.1. hlogflush (append pending writes to hdfs buffer)&lt;br/&gt;
  7.2. increase sync point&lt;br/&gt;
8. Complete memstore insert&lt;br/&gt;
  8.1. sync writeQueue&lt;br/&gt;
  8.2. mark write completed.&lt;br/&gt;
  8.3. advanceMvcc number as much as possible (from the writeQueue). Notify all waiters&lt;br/&gt;
  8.4. wait for mvcc read number to advance past our mvcc write number&lt;/p&gt;

&lt;p&gt;Current model for read only transactions&lt;br/&gt;
1. Obtain mvcc read number&lt;br/&gt;
2. Perform scans with that mvcc number &lt;/p&gt;

&lt;p&gt;Current model for read-write transactions (increment)&lt;br/&gt;
1. lock the row &lt;br/&gt;
2. get an mvcc number, wait for all transaction to finish before this number &lt;br/&gt;
3. get mvcc number&lt;br/&gt;
4. Do the reads for the transaction, compute writes for the transaction. Always use current time &lt;br/&gt;
5. Insert to a temporary memstore&lt;br/&gt;
6. AppendNoSync() to WAL&lt;br/&gt;
7. Insert to memstore&lt;br/&gt;
8. Release row locks&lt;br/&gt;
9. sync WAL&lt;br/&gt;
10. Complete memstore insert&lt;/p&gt;

&lt;p&gt;Current model for read-write transactions (processRowsWithLocks)&lt;br/&gt;
1. lock the rows&lt;br/&gt;
2. Do the reads for the transaction, compute writes for the transaction (RowProcessor)&lt;br/&gt;
3. get mvcc write number&lt;br/&gt;
4. Insert to memstore&lt;br/&gt;
5. AppendNoSync() to WAL&lt;br/&gt;
6. Release row locks&lt;br/&gt;
7. sync WAL&lt;br/&gt;
8. Complete memstore insert&lt;/p&gt;

&lt;p&gt;Note, there is no waiting for all trx to finish after acquiring row locks (bug?)&lt;/p&gt;


&lt;p&gt;Observations: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Write-only trxs do not need the row lock. Pure writes can be serialized with mvcc or seq_num&#8217;s.&lt;/li&gt;
	&lt;li&gt;Read-only trxs should be kept as is for performance (use mvcc)&lt;/li&gt;
	&lt;li&gt;Read-write trxs can conflict with other read-write trx / or write trasactions&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;We do not need row locks for conflict resolution for write-only transactions, but we still need locking for conflicts between read-write and read-write/write only transactions. Doing shared locks should help with this. We are optimizing for write-only transactions at the expense of read-write transactions (which today have to wait for ALL transactions that started before its start time to finish). &lt;/p&gt;</comment>
                            <comment id="14378539" author="enis" created="Tue, 24 Mar 2015 20:32:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;You looking at the rerdering then Elliott Clark?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;My first POC patch at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8763&quot; title=&quot;Combine MVCC and SeqId&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8763&quot;&gt;&lt;del&gt;HBASE-8763&lt;/del&gt;&lt;/a&gt; does the reorder. I believe the approach over there is still viable. However, I was not able to do a proper perf analysis of the approach though. Jeff took over the patch to not change the ordering (which is a bigger change definitely). After the disruptor, we had to do the mock-append as a workaround.&lt;/p&gt;</comment>
                            <comment id="14482900" author="eclark" created="Tue, 7 Apr 2015 09:27:19 +0000"  >&lt;p&gt;Latest patch on phabricator. This will likely fail most tests.&lt;/p&gt;

&lt;p&gt;Just putting this up to show some progress and get some early feedback. It removes on atomic long, and one allocation on every write so it should be a win (testing needed here).&lt;/p&gt;</comment>
                            <comment id="14482961" author="hadoopqa" created="Tue, 7 Apr 2015 10:30:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723578/HBASE-12751-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723578/HBASE-12751-v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 57f9c821287a3780384bcb37d764f13300c93a8d.&lt;br/&gt;
  ATTACHMENT ID: 12723578&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 82 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1928 checkstyle errors (more than the master&apos;s current 1921 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      final WALEdit edits, final AtomicLong sequenceId, final boolean inMemstore) throws IOException {&lt;br/&gt;
+    if (!this.getEdit().isReplay() &amp;amp;&amp;amp; !CollectionUtils.isEmpty(getEdit().getCells()) &amp;amp;&amp;amp; inMemstore) {&lt;br/&gt;
+    long txid = log.append(htd, info, getWalKey(System.currentTimeMillis()), edit, sequenceId, true);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestResettingCounters&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13596//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13596//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13596//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13596//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13596//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13596//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13596//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13596//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13596//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13596//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14483007" author="hadoopqa" created="Tue, 7 Apr 2015 11:02:29 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723583/HBASE-12751-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723583/HBASE-12751-v3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 57f9c821287a3780384bcb37d764f13300c93a8d.&lt;br/&gt;
  ATTACHMENT ID: 12723583&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 90 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1928 checkstyle errors (more than the master&apos;s current 1921 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      final WALEdit edits, final AtomicLong sequenceId, final boolean inMemstore) throws IOException {&lt;br/&gt;
+    if (!this.getEdit().isReplay() &amp;amp;&amp;amp; !CollectionUtils.isEmpty(getEdit().getCells()) &amp;amp;&amp;amp; inMemstore) {&lt;br/&gt;
+    long txid = log.append(htd, info, getWalKey(System.currentTimeMillis()), edit, sequenceId, true);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestResettingCounters&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13597//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13597//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13597//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13597//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13597//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13597//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13597//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13597//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13597//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13597//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14483381" author="stack" created="Tue, 7 Apr 2015 15:38:09 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jleach&quot; class=&quot;user-hover&quot; rel=&quot;jleach&quot;&gt;John Leach&lt;/a&gt; FYI&lt;/p&gt;

&lt;p&gt;Skimmed.&lt;/p&gt;

&lt;p&gt;When we come back from an append, the WALEdit has its seqid? Good.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;3092	        doRollBackMemstore = true; // If we have a failure, we need to clean what we wrote&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Dang, I suppose we still need above....  pity couldn&apos;t push the insert to memstore out past the sync.. so could do without the rollback stuff.&lt;/p&gt;

&lt;p&gt;Fix step numbering order in processRowsWithLocks&lt;/p&gt;

&lt;p&gt;This looks like nice ironing out of some of the chicanery we have going on in our write path.&lt;/p&gt;</comment>
                            <comment id="14483469" author="eclark" created="Tue, 7 Apr 2015 16:42:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;When we come back from an append, the WALEdit has its seqid? Good.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not always but normally the append happens fast enough that it&apos;s instant. However walkey.getSequenceId has a count down latch. So getting the mvccNum waits to make sure that the cells are at least appended.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Dang, I suppose we still need above.... pity couldn&apos;t push the insert to memstore out past the sync.. so could do without the rollback stuff.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That would be pretty radical. Let me think on that for a little bit.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This looks like nice ironing out of some of the chicanery we have going on in our write path.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think there is still some more to iron out around the Mvcc write entry.&lt;/p&gt;</comment>
                            <comment id="14483700" author="hadoopqa" created="Tue, 7 Apr 2015 18:24:59 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723666/HBASE-12751-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723666/HBASE-12751-v4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 57f9c821287a3780384bcb37d764f13300c93a8d.&lt;br/&gt;
  ATTACHMENT ID: 12723666&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 90 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1930 checkstyle errors (more than the master&apos;s current 1921 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      final WALEdit edits, final AtomicLong sequenceId, final boolean inMemstore) throws IOException {&lt;br/&gt;
+    if (!this.getEdit().isReplay() &amp;amp;&amp;amp; !CollectionUtils.isEmpty(getEdit().getCells()) &amp;amp;&amp;amp; inMemstore) {&lt;br/&gt;
+    long txid = log.append(htd, info, getWalKey(System.currentTimeMillis()), edit, sequenceId, true);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestKeepDeletes&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestSplitTransaction&lt;br/&gt;
                  org.apache.hadoop.hbase.filter.TestFilter&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestScanner&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestStoreFileRefresherChore&lt;br/&gt;
                  org.apache.hadoop.hbase.filter.TestMultipleColumnPrefixFilter&lt;br/&gt;
                  org.apache.hadoop.hbase.filter.TestColumnPrefixFilter&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestColumnSeeking&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestWideScanner&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestMinVersions&lt;br/&gt;
                  org.apache.hadoop.hbase.procedure.TestProcedureManager&lt;br/&gt;
                  org.apache.hadoop.hbase.filter.TestDependentColumnFilter&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionMergeTransaction&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestIntraRowPagination&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13598//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13598//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13598//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13598//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13598//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13598//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13598//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13598//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13598//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13598//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14494327" author="eclark" created="Tue, 14 Apr 2015 16:14:57 +0000"  >&lt;p&gt;Letting HadoopQA chew on this one.&lt;/p&gt;

&lt;p&gt;This is the final merge of mvcc and sequenceid. Previously they were disjoint sets 1billion apart. However now it&apos;s a late binding mvcc and sequence id.&lt;/p&gt;

&lt;p&gt;The patch is a bit rough and the work done is a bit ugly. Pushing mvcc into WalKey is ugly as sin. However it&apos;s the best way I could think of to transit the mvcc down into fshlog.&lt;/p&gt;</comment>
                            <comment id="14494440" author="hadoopqa" created="Tue, 14 Apr 2015 17:26:31 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12725267/HBASE-12751-v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12725267/HBASE-12751-v5.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 4f151444b58ae85b93f76254961358932e0ffb9b.&lt;br/&gt;
  ATTACHMENT ID: 12725267&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 94 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1928 checkstyle errors (more than the master&apos;s current 1910 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                this.htableDescriptor.getTableName(), WALKey.NO_SEQUENCE_ID, nonceGroup, nonce, mvcc);&lt;br/&gt;
+      final WALEdit edits, final AtomicLong sequenceId, final boolean inMemstore) throws IOException {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, final MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+    long txid = log.append(htd, info, getWalKey(System.currentTimeMillis()), edit, sequenceId, true);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestScanner&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestLogRollingNoCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALActionsListener&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13700//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13700//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13700//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13700//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13700//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13700//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13700//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13700//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13700//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13700//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14522810" author="eclark" created="Fri, 1 May 2015 06:00:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; asked for a progress patch so that other can see what the current shape is.&lt;/p&gt;

&lt;p&gt;I&apos;ve uploaded the latest version to phabricator too.&lt;br/&gt;
This passes small tests last time I looked. It still needs work to remove the sequenceId field on HRegion. After that it should be pretty close.&lt;/p&gt;

&lt;p&gt;The biggest question mark for me is making sure that I haven&apos;t broken DLR.&lt;/p&gt;</comment>
                            <comment id="14522856" author="eclark" created="Fri, 1 May 2015 07:03:09 +0000"  >&lt;p&gt;Here&apos;s with no sequenceId atomic long on HRegion at all.&lt;/p&gt;

&lt;p&gt;It&apos;s failing on one small test for read replicas.&lt;/p&gt;</comment>
                            <comment id="14522899" author="hadoopqa" created="Fri, 1 May 2015 07:50:04 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12729721/HBASE-12751-v6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12729721/HBASE-12751-v6.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 1d26d2640734b919d9bf266326e211be0478c711.&lt;br/&gt;
  ATTACHMENT ID: 12729721&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 98 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;br/&gt;
                      getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1920 checkstyle errors (more than the master&apos;s current 1898 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                this.htableDescriptor.getTableName(), WALKey.NO_SEQUENCE_ID, nonceGroup, nonce, mvcc);&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, final MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+                                                final WALProtos.BulkLoadDescriptor descriptor) throws IOException {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestStoreFileRefresherChore&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13908//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13908//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13908//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13908//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13908//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13908//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13908//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13908//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13908//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13908//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14522951" author="hadoopqa" created="Fri, 1 May 2015 08:45:38 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12729726/HBASE-12751-v7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12729726/HBASE-12751-v7.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 1d26d2640734b919d9bf266326e211be0478c711.&lt;br/&gt;
  ATTACHMENT ID: 12729726&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 102 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;br/&gt;
                      getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1920 checkstyle errors (more than the master&apos;s current 1898 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                this.htableDescriptor.getTableName(), WALKey.NO_SEQUENCE_ID, nonceGroup, nonce, mvcc);&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, final MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+                                                final WALProtos.BulkLoadDescriptor descriptor) throws IOException {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestStoreFileRefresherChore&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13910//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13910//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13910//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13910//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13910//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13910//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13910//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13910//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13910//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13910//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14523470" author="stack" created="Fri, 1 May 2015 17:12:47 +0000"  >&lt;p&gt;The patch looks really nice; a radical simplification. Let me study more. Am also working on DLR tests at moment so we&apos;ll be able to see if this breaks it.&lt;/p&gt;</comment>
                            <comment id="14533203" author="hadoopqa" created="Thu, 7 May 2015 18:57:31 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12731208/HBASE-12751-v8.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12731208/HBASE-12751-v8.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 11b76732c0ec80a2cccbe7937440bd107e577c8b.&lt;br/&gt;
  ATTACHMENT ID: 12731208&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 102 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;br/&gt;
                      getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1918 checkstyle errors (more than the master&apos;s current 1896 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                this.htableDescriptor.getTableName(), WALKey.NO_SEQUENCE_ID, nonceGroup, nonce, mvcc);&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, final MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+                                                final WALProtos.BulkLoadDescriptor descriptor) throws IOException {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDistributedLogReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestMultiParallel&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestFSHLog&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestProcessBasedCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestWALRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportExport&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplayCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestSecureWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestWALObserver&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHLogRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestAtomicOperation&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegion&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 9 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.TestHRegionReplayEvents.testRegionReplicaSecondaryCannotFlush(TestHRegionReplayEvents.java:216)&lt;br/&gt;
	at org.apache.hadoop.hbase.io.encoding.TestDataBlockEncoders.testSeekingOnSample(TestDataBlockEncoders.java:206)&lt;br/&gt;
	at org.apache.hadoop.hbase.io.encoding.TestChangingEncoding.testChangingEncodingWithCompaction(TestChangingEncoding.java:215)&lt;br/&gt;
	at org.apache.camel.test.spring.CamelSpringTestContextLoader.loadBeanDefinitions(CamelSpringTestContextLoader.java:185)&lt;br/&gt;
	at org.apache.camel.test.spring.CamelSpringTestContextLoader.loadContext(CamelSpringTestContextLoader.java:83)&lt;br/&gt;
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:69)&lt;br/&gt;
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:95)&lt;br/&gt;
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:122)&lt;br/&gt;
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)&lt;br/&gt;
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)&lt;br/&gt;
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:321)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:211)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:288)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:284)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)&lt;br/&gt;
	at org.apache.hadoop.hbase.io.encoding.TestEncodedSeekers.testEncodedSeeker(TestEncodedSeekers.java:119)&lt;br/&gt;
	at org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite.testNotCachingDataBlocksDuringCompactionInternals(TestCacheOnWrite.java:454)&lt;br/&gt;
	at org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite.testNotCachingDataBlocksDuringCompaction(TestCacheOnWrite.java:479)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13979//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13979//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13979//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13979//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13979//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13979//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13979//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13979//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13979//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13979//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14538221" author="eclark" created="Mon, 11 May 2015 17:27:17 +0000"  >&lt;p&gt;Passes TestHRegion. Still not passing on part of test atomic operation.&lt;/p&gt;</comment>
                            <comment id="14538532" author="hadoopqa" created="Mon, 11 May 2015 19:49:34 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12731955/HBASE-12751-v9.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12731955/HBASE-12751-v9.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 671ae8f150ceeb24fcc99743c865fccfb772b130.&lt;br/&gt;
  ATTACHMENT ID: 12731955&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 102 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;br/&gt;
                      getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1918 checkstyle errors (more than the master&apos;s current 1896 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                this.htableDescriptor.getTableName(), WALKey.NO_SEQUENCE_ID, nonceGroup, nonce, mvcc);&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, final MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+                                                final WALProtos.BulkLoadDescriptor descriptor) throws IOException {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestWALRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionReplayEvents&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestDefaultWALProviderWithHLogKey&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestSecureWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestWALFactory&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplayCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestBoundedRegionGroupingProvider&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHLogRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestDefaultWALProvider&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestFSHLog&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestAtomicOperation&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestWALObserver&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 8 zombie test(s): 	at org.apache.hadoop.hbase.client.TestScannerTimeout.test3686a(TestScannerTimeout.java:193)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestMultiParallel.testBatchWithPut(TestMultiParallel.java:340)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestCloneSnapshotFromClient.testCloneSnapshot(TestCloneSnapshotFromClient.java:171)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestCloneSnapshotFromClient.testCloneSnapshotCrossNamespace(TestCloneSnapshotFromClient.java:185)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestFromClientSide.testGetClosestRowBefore(TestFromClientSide.java:4185)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14009//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14009//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14009//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14009//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14009//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14009//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14009//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14009//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14009//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14009//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14538580" author="eclark" created="Mon, 11 May 2015 20:20:51 +0000"  >&lt;p&gt;So the test for TestAtomic was explicitly calling the wrong lock method. That&apos;s what was causing the test failures.&lt;/p&gt;

&lt;p&gt;That passes now. Leaving just WAL tests failing.&lt;/p&gt;</comment>
                            <comment id="14538904" author="hadoopqa" created="Mon, 11 May 2015 23:51:59 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12732000/HBASE-12751-v10.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12732000/HBASE-12751-v10.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit fa6dc9c44e28aa608d5204db814e8442b95eb125.&lt;br/&gt;
  ATTACHMENT ID: 12732000&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 98 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;br/&gt;
                      getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1918 checkstyle errors (more than the master&apos;s current 1896 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                this.htableDescriptor.getTableName(), WALKey.NO_SEQUENCE_ID, nonceGroup, nonce, mvcc);&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, final MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+                                                final WALProtos.BulkLoadDescriptor descriptor) throws IOException {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.wal.TestDefaultWALProviderWithHLogKey&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestFSHLog&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestWALRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestBoundedRegionGroupingProvider&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplayCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestSecureWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionReplayEvents&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestWALObserver&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHLogRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestDefaultWALProvider&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestWALFactory&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 9 zombie test(s): 	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabels.testVisibilityLabelsOnRSRestart(TestVisibilityLabels.java:365)&lt;br/&gt;
	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService.testAddVisibilityLabelsOnRSRestart(TestVisibilityLabelsWithDefaultVisLabelService.java:122)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestAtomicOperation.testPutAndCheckAndPutInParallel(TestAtomicOperation.java:558)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14013//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14013//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14013//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14013//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14013//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14013//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14013//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14013//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14013//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14013//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14553386" author="eclark" created="Thu, 21 May 2015 00:08:28 +0000"  >&lt;p&gt;Still plugging away. One more test passes however it&apos;s not done yet.&lt;/p&gt;</comment>
                            <comment id="14553554" author="hadoopqa" created="Thu, 21 May 2015 03:11:12 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12734282/HBASE-12751-v11.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12734282/HBASE-12751-v11.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 3a1e101dcd4cf0e7149c0d8b1c13f96adf04278e.&lt;br/&gt;
  ATTACHMENT ID: 12734282&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 98 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;br/&gt;
                      getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1915 checkstyle errors (more than the master&apos;s current 1894 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                this.htableDescriptor.getTableName(), WALKey.NO_SEQUENCE_ID, nonceGroup, nonce, mvcc);&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, final MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+                                                final WALProtos.BulkLoadDescriptor descriptor) throws IOException {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestWALRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestWALObserver&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHLogRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestProcessBasedCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestDefaultWALProvider&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportExport&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestBoundedRegionGroupingProvider&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionReplayEvents&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplayCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestDefaultWALProviderWithHLogKey&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestWALFactory&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestSecureWALReplay&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 7 zombie test(s): 	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestCorruptedRegionStoreFile.testLosingFileDuringScan(TestCorruptedRegionStoreFile.java:141)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14133//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14133//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14133//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14133//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14133//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14133//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14133//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14133//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14133//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14133//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14581148" author="eclark" created="Wed, 10 Jun 2015 22:01:58 +0000"  >&lt;p&gt;Rebased. Lets see how many things are broken since the last time I looked at this.&lt;/p&gt;</comment>
                            <comment id="14581249" author="hadoopqa" created="Wed, 10 Jun 2015 23:47:48 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12738930/HBASE-12751-v12.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12738930/HBASE-12751-v12.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 0f93986015122a517e1a0c949e159bf8fb218092.&lt;br/&gt;
  ATTACHMENT ID: 12738930&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 98 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;br/&gt;
                      getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1931 checkstyle errors (more than the master&apos;s current 1912 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                this.htableDescriptor.getTableName(), WALKey.NO_SEQUENCE_ID, nonceGroup, nonce, mvcc);&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, final MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+                                                final WALProtos.BulkLoadDescriptor descriptor) throws IOException {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.TestChoreService.testForceTrigger(TestChoreService.java:398)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14374//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14374//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14374//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14374//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14374//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14374//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14374//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14374//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14625855" author="stack" created="Tue, 14 Jul 2015 05:41:00 +0000"  >&lt;p&gt;Took another look at patch. Nice cleanup. How is order in memstore for sure matching the append order to WAL now? What we need to get this in? You need a bit of testing on this end? Just say and I can try some stuff...&lt;/p&gt;
</comment>
                            <comment id="14634072" author="eclark" created="Mon, 20 Jul 2015 21:00:44 +0000"  >&lt;p&gt;Attaching the rebased patch.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;How is order in memstore for sure matching the append order to WAL now?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;All edits are queued in the wal before they are put in the memstore. After they are queued the first thing that&apos;s done is to assign a sequence number. The insert to memstore waits on that number to be added to the wal edit.&lt;br/&gt;
Once that number is found it&apos;s used by the memstore for ordering. Our comparitor on the map does that.&lt;/p&gt;</comment>
                            <comment id="14634150" author="lhofhansl" created="Mon, 20 Jul 2015 22:07:53 +0000"  >&lt;p&gt;What if we write without WAL? Does that matter?&lt;/p&gt;</comment>
                            <comment id="14634153" author="eclark" created="Mon, 20 Jul 2015 22:10:14 +0000"  >&lt;p&gt;An edit that&apos;s skipping the wal will still queue an empty edit to the wal, just not wait on it to append or sync. ( that&apos;s the same as what&apos;s there now just in a different order )&lt;/p&gt;</comment>
                            <comment id="14635386" author="eclark" created="Tue, 21 Jul 2015 16:50:31 +0000"  >&lt;p&gt;I&apos;m going to re-write the row lock method. It&apos;s gotten a little messy, might as well clean it up while I&apos;m messing around.&lt;/p&gt;</comment>
                            <comment id="14637309" author="eclark" created="Wed, 22 Jul 2015 18:02:03 +0000"  >&lt;p&gt;So here&apos;s a new patch with a cleaner row locking. It uses the java provided re-entrant lock for reader writer.&lt;br/&gt;
It passes the few unit tests that I&apos;ve been using for spot checking. Lets see how this looks on hadoop qa.&lt;/p&gt;</comment>
                            <comment id="14637314" author="eclark" created="Wed, 22 Jul 2015 18:03:16 +0000"  >&lt;p&gt;Targeting 1.3 but we can always re-schedule if this takes longer than anticipated.&lt;/p&gt;</comment>
                            <comment id="14637558" author="eclark" created="Wed, 22 Jul 2015 20:22:21 +0000"  >&lt;p&gt;Do we want to make the locking fair? or should normal puts be able to starve check and mutates?&lt;br/&gt;
Fairness will increase the size of the read write lock. However it will keep things from starving.&lt;/p&gt;</comment>
                            <comment id="14637636" author="hadoopqa" created="Wed, 22 Jul 2015 21:12:13 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12746596/HBASE-12751-v14.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12746596/HBASE-12751-v14.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 5ec5552be0534dbf4b07ef6607741ae6f9ab0495.&lt;br/&gt;
  ATTACHMENT ID: 12746596&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 98 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;br/&gt;
                      getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1889 checkstyle errors (more than the master&apos;s current 1870 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                this.htableDescriptor.getTableName(), WALKey.NO_SEQUENCE_ID, nonceGroup, nonce, mvcc);&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.wal.TestDefaultWALProviderWithHLogKey&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestWALRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestBoundedRegionGroupingProvider&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplayCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestSecureWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionReplayEvents&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestWALObserver&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHLogRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestDefaultWALProvider&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegion&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestWALFactory&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 9 zombie test(s): 	at org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface.testHBase3758(TestRegionObserverInterface.java:424)&lt;br/&gt;
	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService.testAddLabels(TestVisibilityLabelsWithDefaultVisLabelService.java:110)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.wal.TestLogRolling.testLogRollOnPipelineRestart(TestLogRolling.java:427)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;br/&gt;
	at org.apache.hadoop.hbase.coprocessor.TestClassLoading.testClassLoadingFromRelativeLibDirInJar(TestClassLoading.java:379)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14861//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14861//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14861//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14861//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14861//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14861//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14861//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14861//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14861//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14861//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14637933" author="hadoopqa" created="Wed, 22 Jul 2015 23:43:12 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12746627/HBASE-12751-v15.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12746627/HBASE-12751-v15.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 493f36c899bc990de0400fbf777a2bf29c5c60e3.&lt;br/&gt;
  ATTACHMENT ID: 12746627&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 98 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;br/&gt;
                      getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1886 checkstyle errors (more than the master&apos;s current 1867 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                this.htableDescriptor.getTableName(), WALKey.NO_SEQUENCE_ID, nonceGroup, nonce, mvcc);&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestBoundedRegionGroupingProvider&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestDefaultWALProviderWithHLogKey&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestDefaultWALProvider&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionReplayEvents&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestWALObserver&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestWALRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHLogRecordReader&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestWALFactory&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplayCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestSecureWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 4 zombie test(s): 	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService.testListLabelsWithRegEx(TestVisibilityLabelsWithDefaultVisLabelService.java:220)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14865//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14865//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14865//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14865//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14865//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14865//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14865//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14865//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14865//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14865//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14865//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14865//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14637957" author="eclark" created="Thu, 23 Jul 2015 00:08:43 +0000"  >&lt;p&gt;Getting there with test failures.&lt;/p&gt;

&lt;p&gt;People were really digging into sequence id a lot on tests.&lt;/p&gt;</comment>
                            <comment id="14638087" author="hadoopqa" created="Thu, 23 Jul 2015 03:02:02 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12746677/HBASE-12751-v16.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12746677/HBASE-12751-v16.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 493f36c899bc990de0400fbf777a2bf29c5c60e3.&lt;br/&gt;
  ATTACHMENT ID: 12746677&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 102 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;br/&gt;
                      getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1887 checkstyle errors (more than the master&apos;s current 1867 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                this.htableDescriptor.getTableName(), WALKey.NO_SEQUENCE_ID, nonceGroup, nonce, mvcc);&lt;br/&gt;
+  public HLogKey(final byte[] encodedRegionName, final TableName tablename, final long now, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+  public WALKey(final byte[] encodedRegionName, final TableName tablename, final long now, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.snapshot.TestExportSnapshot&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionObserverBypass&lt;br/&gt;
                  org.apache.hadoop.hbase.TestMovedRegionsCleaner&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager&lt;br/&gt;
                  org.apache.hadoop.hbase.TestPartialResultsFromClientSide&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.quotas.TestQuotaAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestMultiTableSnapshotInputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestMobRestoreFlushSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestMobFlushSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithAbort&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionReplayEvents&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestMobExportSnapshot&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestSecureExportSnapshot&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestMobSecureExportSnapshot&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestFlushSnapshotFromClient&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 9 zombie test(s): 	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabels.testLabelsWithAppend(TestVisibilityLabels.java:620)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;br/&gt;
	at org.apache.hadoop.hbase.quotas.TestQuotaThrottle.testUserTableReadAndWriteThrottle(TestQuotaThrottle.java:206)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat.testMRIncrementalLoad(TestHFileOutputFormat.java:378)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14869//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14869//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14869//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14869//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14869//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14869//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14869//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14869//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14869//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14869//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14869//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14869//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14638576" author="stack" created="Thu, 23 Jul 2015 09:49:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;People were really digging into sequence id a lot on tests.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Crew on your side &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt;? Some notes: &lt;a href=&quot;https://docs.google.com/document/d/16beczDie-KU1uSpJvd0GoUlQbPtQBL93rOOPqnE5Ma0/edit#&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.google.com/document/d/16beczDie-KU1uSpJvd0GoUlQbPtQBL93rOOPqnE5Ma0/edit#&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do we want to make the locking fair?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think so as a means of evening out the latencies.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;All edits are queued in the wal before they are put in the memstore... Our comparitor on the map does that.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Let me look at the patch again. The above description sounds like how it mostly worked previous. Let me see.... Thanks E.&lt;/p&gt;


</comment>
                            <comment id="14639243" author="eclark" created="Thu, 23 Jul 2015 17:43:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;Let me look at the patch again. The above description sounds like how it mostly worked previous. Let me see.... Thanks E.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah it&apos;s pretty similar. The patch is just adding to the wal append/sync queue earlier. That allows a creating the sequence id/mvcc number for real. Because the edits are already in the queue for the wal we know for sure that their ordering is the same as the sequence number.&lt;/p&gt;

&lt;p&gt;The bonus nice thing from this re-ordering is that adding to the memstore and the append are running in parallel.&lt;/p&gt;</comment>
                            <comment id="14641350" author="hadoopqa" created="Sat, 25 Jul 2015 02:17:21 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12747127/HBASE-12751-v17.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12747127/HBASE-12751-v17.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit dad4cad30e5b0c69694ee90908ad8e74c592d821.&lt;br/&gt;
  ATTACHMENT ID: 12747127&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 106 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;br/&gt;
                      getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 25 javac compiler warnings (more than the master&apos;s current 24 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 4 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1885 checkstyle errors (more than the master&apos;s current 1866 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                this.htableDescriptor.getTableName(), WALKey.NO_SEQUENCE_ID, nonceGroup, nonce, mvcc);&lt;br/&gt;
+  public HLogKey(final byte[] encodedRegionName, final TableName tablename, final long now, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+  public WALKey(final byte[] encodedRegionName, final TableName tablename, final long now, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long txid = log.append(htd, hri, new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc),&lt;br/&gt;
+        new WALKey(info.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+        new WALKey(hri.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+            final WALKey logkey = new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 7 zombie test(s): 	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService.testAddLabels(TestVisibilityLabelsWithDefaultVisLabelService.java:110)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat2.testWritingPEData(TestHFileOutputFormat2.java:335)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat.testMRIncrementalLoad(TestHFileOutputFormat.java:378)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScanBase.testScan(TestTableInputFormatScanBase.java:243)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan1.testScanEmptyToEmpty(TestTableInputFormatScan1.java:45)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestCellCounter.testCellCounteEndTimeRange(TestCellCounter.java:179)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.MultiTableInputFormatTestBase.testScan(MultiTableInputFormatTestBase.java:255)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.MultiTableInputFormatTestBase.testScanEmptyToEmpty(MultiTableInputFormatTestBase.java:196)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14889//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14889//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14889//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14889//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14889//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14889//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14889//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14889//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14889//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14889//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14641799" author="stack" created="Sun, 26 Jul 2015 00:04:04 +0000"  >&lt;p&gt;Should we read at with the same mvcc in these two locations below (could edit we write the WAL disagree with the file sequenceid we write out)?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  97      RegionEventDescriptor regionEventDesc = ProtobufUtil.toRegionEventDescriptor(
  98 -      RegionEventDescriptor.EventType.REGION_CLOSE, getRegionInfo(), getSequenceId().get(),
  99 +      RegionEventDescriptor.EventType.REGION_CLOSE, getRegionInfo(), mvcc.memstoreRead.get(),
 100        getRegionServerServices().getServerName(), storeFiles);
 101 -    WALUtil.writeRegionEventMarker(wal, getTableDesc(), getRegionInfo(), regionEventDesc,
 102 -      getSequenceId());
 103 +    WALUtil.writeRegionEventMarker(wal, getTableDesc(), getRegionInfo(), regionEventDesc);
 104 &#8226;
 105      &lt;span class=&quot;code-comment&quot;&gt;// Store SeqId in HDFS when a region closes
&lt;/span&gt; 106      &lt;span class=&quot;code-comment&quot;&gt;// checking region folder exists is due to many tests which delete the table folder &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; a
&lt;/span&gt; 107      &lt;span class=&quot;code-comment&quot;&gt;// table is still online
&lt;/span&gt; 108      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.fs.getFileSystem().exists(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.fs.getRegionDir())) {
 109        WALSplitter.writeRegionSequenceIdFile(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.fs.getFileSystem(), &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.fs.getRegionDir(),
 110 -        getSequenceId().get(), 0);
 111 +        mvcc.memstoreReadPoint(), 0);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... and later on so log matches the condition check.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;That allows a creating the sequence id/mvcc number for real.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So mvcc has its own running sequenceid-like thing now and it runs independent of sequenceid. Previous we were just using WAL sequenceid everywhere (though we had that +1B hackery going on). It took some work to get us down to one sequence only. The patch adds back another. If just fixing the ordering problem (ordering in memstore vs WAL), could we just add to MemStore in the WAL appender/ringbuffer consuming thread? Would that be too slow? You&apos;d have to rollback still if failure but less moving parts?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;mvcc.completeMemstoreInsert(mvcc.beginMemstoreInsert());&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The above seems odd. Make a method on mvcc to do the above? Could return the current read point (going by what is needed  later in the patch)&lt;/p&gt;

&lt;p&gt;And the mvcc initialize semantic has changed? It used to be advanceMemstoreReadPointIfNeeded but now we override initialize and call it often. It is a bit hard to follow what initialize does now given it is called frequently.&lt;/p&gt;

&lt;p&gt;Why does WALKey take an mvcc? And then, how comes you can get mvcc from WALKey? I&apos;d think WALKey would be made once on construction.... and would not be concerned with stuff like mvccs and writeEntries. Or if it was, that it&apos;d be internal to WALKey implementation (You&apos;d not be able to get mvcc from WALKey). WALKey has an mvcc but then you can call setWriteEntry? Would be cool if WALKey knew nought of mvccs.&lt;/p&gt;

&lt;p&gt;In the below:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
115	      we = mvcc.beginMemstoreInsert();
116	      regionSequenceId = we.getWriteNumber();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... is this the region sequenceid? Or is it the mvcc number?&lt;/p&gt;






</comment>
                            <comment id="14642106" author="eclark" created="Sun, 26 Jul 2015 21:47:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;So mvcc has its own running sequenceid-like thing now and it runs independent of sequenceid&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;All sequence id numbers are the mvcc number of the edit. Anything that doesn&apos;t apply a wal edit get&apos;s a sequence id by creating a mvcc write number and waiting for it to be completed.&lt;/p&gt;</comment>
                            <comment id="14642109" author="stack" created="Sun, 26 Jul 2015 21:58:40 +0000"  >&lt;p&gt;Studying the patch more, I have better idea what is going on. It seems mvcc is carrying what was sequenceid in HRegion now so my comment above on two counters is off. Also deleted a comment that wasn&apos;t helping.&lt;/p&gt;

&lt;p&gt;Would it be better if mvcc didn&apos;t know anything about memstore? Should we be asking mvcc to advance memstore...&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    mvcc.advanceMemstore(key.getWriteEntry());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;... though I see that mvcc used to know about memstore so this is nit (I just saw we used to have completeMemstoreInsertWithSeqNum)&lt;/p&gt;

&lt;p&gt;We dropped an optimization when we let go of the below and instead just say true for getRowLock.. Or was it something that just didn&apos;t work? (Or looks like the semantic changed from waitFor to whether a read or write lock?)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; shouldBlock = numReadyToWrite == 0;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For sure memstoreCells (removed) is same as...&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; j=0; j&amp;lt;familyMaps.length;j++) {
          &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(List&amp;lt;Cell&amp;gt; cells:familyMaps[j].values()) {
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;No chance that what is passed to Store to add gets filtered or ends up being subset for any reason?&lt;/p&gt;

&lt;p&gt;The comment below no longer applies? It is dropped in the patch.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-comment&quot;&gt;// there may be some in-flight transactions, but they won&apos;t be made visible since they are
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// either greater than flush seq number or they were already dropped via flush.
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// TODO: If we are using FlushAllStoresPolicy, then &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; can make edits visible from other
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// stores &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; they are still in flight because the flush commit marker will not contain
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// flushes from ALL stores.
&lt;/span&gt;        getMVCC().advanceMemstoreReadPointIfNeeded(flush.getFlushSequenceNumber());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In mvcc it is memstoreRead for the read point. The name seems to say it applies to memstore only. It does not apply to hfiles? HFiles carry sequenceids on edits and in metadata.&lt;/p&gt;

&lt;p&gt;Will be back to do final 1/3rd of patch.&lt;/p&gt;


</comment>
                            <comment id="14642275" author="eclark" created="Mon, 27 Jul 2015 05:19:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;Would it be better if mvcc didn&apos;t know anything about memstore? Should we be asking mvcc to advance memstore...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah that&apos;s pretty bad wording. Something like advanceReadPoint? Some other wording for sure.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We dropped an optimization when we let go of the below and instead just say true for getRowLock.. Or was it something that just didn&apos;t work? (Or looks like the semantic changed from waitFor to whether a read or write lock?)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The hope is that since we won&apos;t be blocking for any normal puts there is no need for the added complexity.&lt;/p&gt;</comment>
                            <comment id="14646352" author="eclark" created="Wed, 29 Jul 2015 16:25:27 +0000"  >&lt;p&gt;Here&apos;s renaming MVCC&apos;s methods to more closely show that they are all about read and write points and less about the memstore.&lt;/p&gt;

&lt;p&gt;Also some code formatting.&lt;/p&gt;</comment>
                            <comment id="14646354" author="eclark" created="Wed, 29 Jul 2015 16:26:28 +0000"  >&lt;p&gt;I&apos;m still working on the last two test failures. Everything seems fine except for the regionservers won&apos;t go down. That causes the cluster to stay up and the test to timeout.&lt;/p&gt;</comment>
                            <comment id="14646636" author="hadoopqa" created="Wed, 29 Jul 2015 19:28:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12747804/HBASE-12751-v18.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12747804/HBASE-12751-v18.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 05de2ec5801fbba4577fb363f858a6e6f282c104.&lt;br/&gt;
  ATTACHMENT ID: 12747804&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 106 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 27 javac compiler warnings (more than the master&apos;s current 26 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 4 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1872 checkstyle errors (more than the master&apos;s current 1864 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long txid = log.append(htd, hri, new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc),&lt;br/&gt;
+        new WALKey(info.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+        new WALKey(hri.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+            final WALKey logkey = new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 4 zombie test(s): 	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;br/&gt;
	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService.testAddLabels(TestVisibilityLabelsWithDefaultVisLabelService.java:110)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14925//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14925//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14925//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14925//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14925//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14925//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14925//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14925//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14925//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14925//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14697974" author="stack" created="Fri, 14 Aug 2015 23:59:33 +0000"  >&lt;p&gt;We want to get this in &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt;? I can take it from here if you want? (You&apos;ve done the hard part)&lt;/p&gt;</comment>
                            <comment id="14697978" author="eclark" created="Sat, 15 Aug 2015 00:04:59 +0000"  >&lt;p&gt;Yeah I totally want to get this in. I have just been a little more focused on 1.2 lately. Any help would be greatly appreciated.&lt;/p&gt;</comment>
                            <comment id="14697979" author="eclark" created="Sat, 15 Aug 2015 00:07:01 +0000"  >&lt;p&gt;Rebased and update &lt;a href=&quot;https://reviews.facebook.net/D32079&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D32079&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everything should be good.&lt;/p&gt;</comment>
                            <comment id="14698133" author="hadoopqa" created="Sat, 15 Aug 2015 05:53:09 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12750630/HBASE-12751-v19.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12750630/HBASE-12751-v19.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit ecba08829da149aca11929b5b88a6df880e0da35.&lt;br/&gt;
  ATTACHMENT ID: 12750630&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 106 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 27 javac compiler warnings (more than the master&apos;s current 26 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1865 checkstyle errors (more than the master&apos;s current 1857 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long txid = log.append(htd, hri, new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc),&lt;br/&gt;
+        new WALKey(info.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+        new WALKey(hri.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+            final WALKey logkey = new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestTableSnapshotInputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat2&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesUseSecurityEndPoint&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTSVWithTTLs&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestTableInputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.TestMetaTableAccessor&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHashTable&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestTimeRangeMapRed&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 22 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestRowCounter.testRowCounterColumnWithColonInQualifier(TestRowCounter.java:125)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompactionAfterWALSync(TestIOFencing.java:240)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestCopyTable.testCopyTable(TestCopyTable.java:123)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat.testMRIncrementalLoad(TestHFileOutputFormat.java:372)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TableSnapshotInputFormatTestBase.testWithMapReduce(TableSnapshotInputFormatTestBase.java:106)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TableSnapshotInputFormatTestBase.testWithMapReduceAndOfflineHBaseMultiRegion(TableSnapshotInputFormatTestBase.java:101)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestTimeRangeMapRed.testTimeRangeMapRed(TestTimeRangeMapRed.java:163)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestHRegion.testFlushCacheWhileScanning(TestHRegion.java:3665)&lt;br/&gt;
	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService.testListLabelsWithRegEx(TestVisibilityLabelsWithDefaultVisLabelService.java:220)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestImportExport.testSimpleCase(TestImportExport.java:180)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestCellCounter.testCellCounteEndTimeRange(TestCellCounter.java:179)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles.testSimpleLoad(TestLoadIncrementalHFiles.java:105)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15108//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15108//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15108//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15108//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15108//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15108//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15108//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15108//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15108//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15108//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14702101" author="stack" created="Tue, 18 Aug 2015 22:28:52 +0000"  >&lt;p&gt;Reviewing latest version:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Seems weird that the region doesn&apos;t own its sequenceid. Notion is that now the mvcc instance owns the sequenceid and that there is an mvcc instance per region. Thats fine. Just need to draw it out some. For example here in mvcc class javadoc it say:

 Manages the read/write consistency. This provides...

Should be &apos;&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the region&apos;?

I did not realize that the append-to-WAL was in more than just the WAL append method but it is also up here in processRowsWithLocks and elsewhere...That is a little crazy. Any chance at unification in a follow-on in your opinion? They differ by a little only and the steps are pretty involved....

Lots of good clean up in here. Better method namings in mvcc class.

We run through all edits twice, once to set OperationStatus.SUCCESS and then later to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; postPut/postDelete on CP. Could these be combined? CP only looks at current batch so should be ok.

Need to work on &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; where edits may get into the WAL then we fail memstore update or sync. They are in WAL... the edits might get replayed or replicated though client may have gotten message they were rejected. Not an issue introduced here...


When would sequenceid be non-&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; in below:

        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (cell.getSequenceId() == 0) {
          CellUtil.setSequenceId(cell, mvccNum);
        }

Maybe &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; should be an exception so we can find cases where &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; is set already? Perhaps in DLR when replay? Later we set sequenceid &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; these.

How is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; addressed?

        &lt;span class=&quot;code-comment&quot;&gt;// TODO: If we are using FlushAllStoresPolicy, then &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; can make edits visible from other
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// stores &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; they are still in flight because the flush commit marker will not contain
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// flushes from ALL stores.
&lt;/span&gt;
The comment is removed without comment. It looks like still a prob?

Why &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; currentSeqId = mvcc.readPoint.get(); and not mvcc.getReadPoint?

Ain&apos;t &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; done already &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; you higher up when you come in &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; a region operation?

    &lt;span class=&quot;code-comment&quot;&gt;// Make sure the row is inside of &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; region before getting the lock &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; it.
&lt;/span&gt;    checkRow(row, &lt;span class=&quot;code-quote&quot;&gt;&quot;row lock&quot;&lt;/span&gt;);

Would be good to avoid another set of compares.


  &lt;span class=&quot;code-comment&quot;&gt;// TODO(eclark): Should &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; be an array of fixed size to
&lt;/span&gt;  &lt;span class=&quot;code-comment&quot;&gt;// reduce the number of allocations on the write path?
&lt;/span&gt;  &lt;span class=&quot;code-comment&quot;&gt;// This could be equal to the number of handlers + a small number.
&lt;/span&gt;

  Sounds right. If more than outstanding handlers, something is wrong.

So, mvcc write number can be incremented in a few places &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; various reasons... but looking in FSWALEntry#stampRegionSequenceId, order in WAL and into memstore should be good.

writeCompactionMarker and writeRegionEventMarker in WALUtil are hard to follow -- the intrinsic sequence manipulation. Makes sense &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; you dig but &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; stuff is complicated (not you... just is)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let me see why all the test failures.&lt;/p&gt;

&lt;p&gt;I think we should get this in.  Good cleanup, some optimization, and a couple of good bug fixes including a dataloss.&lt;/p&gt;</comment>
                            <comment id="14702170" author="stack" created="Tue, 18 Aug 2015 23:36:06 +0000"  >&lt;p&gt;Retry in case it crazy hadoopqa. Running local too.&lt;/p&gt;</comment>
                            <comment id="14702198" author="eclark" created="Wed, 19 Aug 2015 00:07:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should be &apos;for the region&apos;?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;Any chance at unification in a follow-on in your opinion?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Totally. There are still some weird things in the write path that need to be polished up.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We run through all edits twice, once to set OperationStatus.SUCCESS and then later to do postPut/postDelete on CP. Could these be combined?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I would think that it&apos;s ok. Though I don&apos;t have much experience with CP use cases.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;How is this addressed?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s not and I shouldn&apos;t have removed it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why this long currentSeqId = mvcc.readPoint.get(); and not mvcc.getReadPoint?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I should make it getReadPoint.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Ain&apos;t this done already for you higher up when you come in for a region operation?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That was there before. At FB we&apos;re still seeing an error every once in a while about row out of range for replication traffic. It would be great to remove it or make it happen less frequently.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;writeCompactionMarker and writeRegionEventMarker in WALUtil are hard to follow&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah they haven&apos;t had enough attention from me on cleaning that code up. It was mostly done by a quick pass where the rest of the mvcc stuff got some more love.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;Let me see why all the test failures.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;What I&apos;ve been seeing is a deadlock on taking down a regionserver.  Running only one method in the class that errors out means that everything passes.&lt;/p&gt;
</comment>
                            <comment id="14702403" author="hadoopqa" created="Wed, 19 Aug 2015 03:49:58 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12751157/HBASE-12751-v19%20%281%29.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12751157/HBASE-12751-v19%20%281%29.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 1bb9e3ae966853db8c4138b4abbe14636d7592db.&lt;br/&gt;
  ATTACHMENT ID: 12751157&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 106 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 27 javac compiler warnings (more than the master&apos;s current 26 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 4 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1860 checkstyle errors (more than the master&apos;s current 1852 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConsistencyControl mvcc) {&lt;br/&gt;
+      long txid = log.append(htd, hri, new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc),&lt;br/&gt;
+        new WALKey(info.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+        new WALKey(hri.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+            final WALKey logkey = new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapred.TestTableInputFormat&lt;br/&gt;
                  &lt;span class=&quot;error&quot;&gt;&amp;#91;7&amp;#93;&lt;/span&gt;&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestMobExportSnapshot&lt;br/&gt;
                  org.apache.hadoop.hbase.TestAcidGuarantees&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestMultiTableSnapshotInputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestSnapshotClientRetries&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestMiniClusterLoadEncoded&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestProcessBasedCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestExportSnapshot&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestHBaseFsckEncryption&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestSecureExportSnapshot&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestTableSnapshotInputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.TestNamespace&lt;br/&gt;
                  org.apache.hadoop.hbase.io.encoding.TestLoadAndSwitchEncodeOnDisk&lt;br/&gt;
                  org.apache.hadoop.hbase.namespace.TestNamespaceAuditor&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableSnapshotInputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestCoprocessorScanPolicy&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestMultiSlaveReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestMasterReplication&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15155//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15155//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15155//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15155//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15155//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15155//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15155//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15155//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15155//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15155//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14702413" author="stack" created="Wed, 19 Aug 2015 04:09:46 +0000"  >&lt;p&gt;&quot;java.lang.OutOfMemoryError: unable to create new native thread&quot;&lt;/p&gt;

&lt;p&gt;Running this patch locally, near all above pass... TestImportExport and TestRowCounter fail...&lt;/p&gt;

&lt;p&gt;Let me put up new patch that addresses feedback and the above red lines back from hadoopqa.&lt;/p&gt;</comment>
                            <comment id="14702521" author="stack" created="Wed, 19 Aug 2015 05:38:50 +0000"  >&lt;p&gt;Version of patch that addresses warnings and most of the comments made above. Will address rest in follow-on. Parking here in meantime. The failures seem to be in trunk. Locally I get the OOME. Looking.&lt;/p&gt;</comment>
                            <comment id="14702789" author="hadoopqa" created="Wed, 19 Aug 2015 09:58:22 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12751213/HBASE-12751-v20.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12751213/HBASE-12751-v20.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 1bb9e3ae966853db8c4138b4abbe14636d7592db.&lt;br/&gt;
  ATTACHMENT ID: 12751213&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 81 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 8 zombie test(s): 	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService.testListLabels(TestVisibilityLabelsWithDefaultVisLabelService.java:198)&lt;br/&gt;
	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes.testDeleteColumnWithSpecificTimeStampUsingMultipleVersionsUnMatchingVisExpression(TestVisibilityLabelsWithDeletes.java:992)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileScanning(TestHRegion.java:3799)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15162//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15162//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15162//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15162//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15162//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15162//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15162//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15162//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14703178" author="stack" created="Wed, 19 Aug 2015 15:24:15 +0000"  >&lt;p&gt;The &apos;Anti-Pattern&apos; fail is incorrect for this patch; this patch actually fixes an instance of this issue. The grep must be turning up this.&lt;/p&gt;

&lt;p&gt;Less fails. Let me rerun to see if we&apos;ve settled on a small set of fails... will then dig in.&lt;/p&gt;</comment>
                            <comment id="14703746" author="hadoopqa" created="Wed, 19 Aug 2015 21:06:04 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12751285/HBASE-12751-v20.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12751285/HBASE-12751-v20.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 16f8d277088987dc8d4bb1614d05ce712bfc245d.&lt;br/&gt;
  ATTACHMENT ID: 12751285&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 81 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestPerTableCFReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestBoundedRegionGroupingProvider&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillMasterRSCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpointNoMaster&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillSlaveRS&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestMasterReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionMergeTransactionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionFavoredNodes&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestMultiSlaveReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.zookeeper.TestZKLeaderManager&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterRestartAfterDisablingTable&lt;br/&gt;
                  org.apache.hadoop.hbase.TestGlobalMemStoreSize&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestWALFiltering&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationSmallTests&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationSyncUpTool&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationWithTags&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestTruncateTableProcedure&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationChangingPeerRegionservers&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestDefaultWALProviderWithHLogKey&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;br/&gt;
                  org.apache.hadoop.hbase.snapshot.TestMobRestoreFlushSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestCreateTableProcedure&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestWALFactory&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestServerCrashProcedure&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationDisableInactivePeer&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestAddColumnFamilyProcedure&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestMultiTableSnapshotInputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestEnableTableProcedure&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterFailoverBalancerPersistence&lt;br/&gt;
                  org.apache.hadoop.hbase.TestStochasticBalancerJmxMetrics&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 16 zombie test(s): 	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabels.testVisibilityLabelsWithComplexLabels(TestVisibilityLabels.java:216)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapred.TestTableInputFormat.testTableRecordReaderScannerFail(TestTableInputFormat.java:281)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.TestMultiSlaveReplication.testMultiSlaveReplication(TestMultiSlaveReplication.java:129)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileScanning(TestHRegion.java:3799)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15169//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15169//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15169//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15169//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15169//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15169//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15169//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15169//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14709755" author="eclark" created="Mon, 24 Aug 2015 18:10:09 +0000"  >&lt;p&gt;Rebase after the mvcc rename (OUCH).&lt;br/&gt;
Also changed to mvcc.getReadPoint();&lt;/p&gt;</comment>
                            <comment id="14710173" author="hadoopqa" created="Mon, 24 Aug 2015 22:30:08 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12752051/HBASE-12751-v21.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12752051/HBASE-12751-v21.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 9334a47d4570f8adfc003f0fb2c5969a88c3bba0.&lt;br/&gt;
  ATTACHMENT ID: 12752051&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 106 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 27 javac compiler warnings (more than the master&apos;s current 26 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1856 checkstyle errors (more than the master&apos;s current 1849 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConcurrencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConcurrencyControl mvcc) {&lt;br/&gt;
+      long txid = log.append(htd, hri, new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc),&lt;br/&gt;
+        new WALKey(info.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+        new WALKey(hri.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+            final WALKey logkey = new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestProcessBasedCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportExport&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerObserver&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileScanning(TestHRegion.java:3799)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15224//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15224//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15224//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15224//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15224//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15224//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15224//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15224//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15224//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15224//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14712217" author="stack" created="Wed, 26 Aug 2015 00:06:15 +0000"  >&lt;p&gt;Fix WARNINGs. Retry.&lt;/p&gt;</comment>
                            <comment id="14712255" author="hadoopqa" created="Wed, 26 Aug 2015 00:40:20 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12752357/12751v22.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12752357/12751v22.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 506726ed2832b069602c6b7e2ccd5ec9a81013a6.&lt;br/&gt;
  ATTACHMENT ID: 12752357&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 81 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The patch appears to cause mvn compile goal to fail with Hadoop version 2.4.0.&lt;/p&gt;

&lt;p&gt;    Compilation errors resume:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; COMPILATION ERROR : &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;1302,12&amp;#93;&lt;/span&gt; method append in interface org.apache.hadoop.hbase.wal.WAL cannot be applied to given types;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;1398,12&amp;#93;&lt;/span&gt; method append in interface org.apache.hadoop.hbase.wal.WAL cannot be applied to given types;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;1610,12&amp;#93;&lt;/span&gt; method append in interface org.apache.hadoop.hbase.wal.WAL cannot be applied to given types;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.2:testCompile (default-testCompile) on project hbase-server: Compilation failure: Compilation failure:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;1302,12&amp;#93;&lt;/span&gt; method append in interface org.apache.hadoop.hbase.wal.WAL cannot be applied to given types;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; required: org.apache.hadoop.hbase.HTableDescriptor,org.apache.hadoop.hbase.HRegionInfo,org.apache.hadoop.hbase.wal.WALKey,org.apache.hadoop.hbase.regionserver.wal.WALEdit,boolean&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; found: org.apache.hadoop.hbase.HTableDescriptor,org.apache.hadoop.hbase.HRegionInfo,org.apache.hadoop.hbase.regionserver.wal.HLogKey,org.apache.hadoop.hbase.regionserver.wal.WALEdit,java.util.concurrent.atomic.AtomicLong,boolean,&amp;lt;nulltype&amp;gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; reason: actual and formal argument lists differ in length&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;1398,12&amp;#93;&lt;/span&gt; method append in interface org.apache.hadoop.hbase.wal.WAL cannot be applied to given types;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; required: org.apache.hadoop.hbase.HTableDescriptor,org.apache.hadoop.hbase.HRegionInfo,org.apache.hadoop.hbase.wal.WALKey,org.apache.hadoop.hbase.regionserver.wal.WALEdit,boolean&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; found: org.apache.hadoop.hbase.HTableDescriptor,org.apache.hadoop.hbase.HRegionInfo,org.apache.hadoop.hbase.regionserver.wal.HLogKey,org.apache.hadoop.hbase.regionserver.wal.WALEdit,java.util.concurrent.atomic.AtomicLong,boolean,&amp;lt;nulltype&amp;gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; reason: actual and formal argument lists differ in length&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;1610,12&amp;#93;&lt;/span&gt; method append in interface org.apache.hadoop.hbase.wal.WAL cannot be applied to given types;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; required: org.apache.hadoop.hbase.HTableDescriptor,org.apache.hadoop.hbase.HRegionInfo,org.apache.hadoop.hbase.wal.WALKey,org.apache.hadoop.hbase.regionserver.wal.WALEdit,boolean&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; found: org.apache.hadoop.hbase.HTableDescriptor,org.apache.hadoop.hbase.HRegionInfo,org.apache.hadoop.hbase.regionserver.wal.HLogKey,org.apache.hadoop.hbase.regionserver.wal.WALEdit,java.util.concurrent.atomic.AtomicLong,boolean,&amp;lt;nulltype&amp;gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; reason: actual and formal argument lists differ in length&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; To see the full stack trace of the errors, re-run Maven with the -e switch.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Re-run Maven using the -X switch to enable full debug logging.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; For more information about the errors and possible solutions, please read the following articles:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; After correcting the problems, you can resume the build with the command&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt;   mvn &amp;lt;goals&amp;gt; -rf :hbase-server&lt;/p&gt;


&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15259//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15259//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14714499" author="stack" created="Wed, 26 Aug 2015 16:44:56 +0000"  >&lt;p&gt;v23 failed compile here: &lt;a href=&quot;https://builds.apache.org/view/H-L/view/HBase/job/PreCommit-HBASE-Build/15270/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/view/H-L/view/HBase/job/PreCommit-HBASE-Build/15270/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I tried the script local and it &apos;works&apos;. Retry&lt;/p&gt;</comment>
                            <comment id="14715295" author="stack" created="Wed, 26 Aug 2015 18:30:07 +0000"  >&lt;p&gt;v23 is building now over on hadoopqa.&lt;/p&gt;

&lt;p&gt;It failed TestPerColumnFamilyFlush and this fails local for me too. Looking.&lt;/p&gt;</comment>
                            <comment id="14715350" author="hadoopqa" created="Wed, 26 Aug 2015 19:06:42 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12752522/12751v23.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12752522/12751v23.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit aca8c3b74b09646c72c4e0fe26a4b2103da0d288.&lt;br/&gt;
  ATTACHMENT ID: 12752522&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 84 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConcurrencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConcurrencyControl mvcc) {&lt;br/&gt;
+      long txid = log.append(htd, hri, new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc),&lt;br/&gt;
+        new WALKey(info.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+        new WALKey(hri.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+            final WALKey logkey = new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestStochasticBalancerJmxMetrics&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): 	at org.apache.camel.component.jetty.JettySuspendWhileInProgressTest.testJettySuspendWhileInProgress(JettySuspendWhileInProgressTest.java:55)&lt;br/&gt;
	at org.apache.hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd.testEndToEnd(TestFuzzyRowFilterEndToEnd.java:143)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15276//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15276//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15276//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15276//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15276//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15276//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15276//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15276//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14715473" author="hadoopqa" created="Wed, 26 Aug 2015 20:40:13 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12752522/12751v23.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12752522/12751v23.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit aca8c3b74b09646c72c4e0fe26a4b2103da0d288.&lt;br/&gt;
  ATTACHMENT ID: 12752522&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 84 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConcurrencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConcurrencyControl mvcc) {&lt;br/&gt;
+      long txid = log.append(htd, hri, new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc),&lt;br/&gt;
+        new WALKey(info.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+        new WALKey(hri.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+            final WALKey logkey = new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mob.TestDefaultMobStoreFlusher&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillMasterRS&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestReplicationSink&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationChangingPeerRegionservers&lt;br/&gt;
                  org.apache.hadoop.hbase.zookeeper.TestZooKeeperACL&lt;br/&gt;
                  org.apache.hadoop.hbase.mob.mapreduce.TestMobSweeper&lt;br/&gt;
                  org.apache.hadoop.hbase.mob.compactions.TestPartitionedMobCompactor&lt;br/&gt;
                  org.apache.hadoop.hbase.TestZooKeeper&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;br/&gt;
                  org.apache.hadoop.hbase.mob.TestExpiredMobFileCleaner&lt;br/&gt;
                  org.apache.hadoop.hbase.io.encoding.TestChangingEncoding&lt;br/&gt;
                  org.apache.hadoop.hbase.TestServerSideScanMetricsFromClientSide&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpointNoMaster&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestMultiSlaveReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 28 zombie test(s): 	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;br/&gt;
	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithACL.testLabelsTableOpsWithDifferentUsers(TestVisibilityLabelsWithACL.java:233)&lt;br/&gt;
	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService.testListLabelsWithRegEx(TestVisibilityLabelsWithDefaultVisLabelService.java:220)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15275//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15275//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15275//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15275//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15275//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15275//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15275//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15275//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14717003" author="stack" created="Thu, 27 Aug 2015 16:34:03 +0000"  >&lt;p&gt;See if there is a pattern to the erratic output dropped here by hadoopqa&lt;/p&gt;</comment>
                            <comment id="14717019" author="hadoopqa" created="Thu, 27 Aug 2015 16:41:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12752796/12751v23.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12752796/12751v23.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 8f95318f6252c1c0b7a073619525eae6d991f47b.&lt;br/&gt;
  ATTACHMENT ID: 12752796&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 84 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The patch appears to cause mvn compile goal to fail with Hadoop version 2.4.0.&lt;/p&gt;

&lt;p&gt;    Compilation errors resume:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Error invoking method &apos;get(java.lang.Integer)&apos; in java.util.ArrayList at META-INF/LICENSE.vm&lt;span class=&quot;error&quot;&gt;&amp;#91;line 1619, column 22&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Failed to execute goal org.apache.maven.plugins:maven-remote-resources-plugin:1.5:process (default) on project hbase-assembly: Error rendering velocity resource. Error invoking method &apos;get(java.lang.Integer)&apos; in java.util.ArrayList at META-INF/LICENSE.vm&lt;span class=&quot;error&quot;&gt;&amp;#91;line 1619, column 22&amp;#93;&lt;/span&gt;: InvocationTargetException: Index: 0, Size: 0 -&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; To see the full stack trace of the errors, re-run Maven with the -e switch.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Re-run Maven using the -X switch to enable full debug logging.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; For more information about the errors and possible solutions, please read the following articles:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; After correcting the problems, you can resume the build with the command&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt;   mvn &amp;lt;goals&amp;gt; -rf :hbase-assembly&lt;/p&gt;


&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15297//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15297//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14717609" author="stack" created="Thu, 27 Aug 2015 21:58:25 +0000"  >&lt;p&gt;Retry. I tried some of these tests and they pass locally.&lt;/p&gt;</comment>
                            <comment id="14717884" author="hadoopqa" created="Fri, 28 Aug 2015 01:34:44 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12752867/12751v23.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12752867/12751v23.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 8f95318f6252c1c0b7a073619525eae6d991f47b.&lt;br/&gt;
  ATTACHMENT ID: 12752867&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 84 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConcurrencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConcurrencyControl mvcc) {&lt;br/&gt;
+      long txid = log.append(htd, hri, new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc),&lt;br/&gt;
+        new WALKey(info.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+        new WALKey(hri.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+            final WALKey logkey = new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestStochasticBalancerJmxMetrics&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestWALProcedureStoreOnHDFS&lt;br/&gt;
                  org.apache.hadoop.hbase.security.access.TestNamespaceCommands&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 10 zombie test(s): 	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;br/&gt;
	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService.testListLabelsWithRegEx(TestVisibilityLabelsWithDefaultVisLabelService.java:220)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15307//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15307//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15307//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15307//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15307//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15307//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15307//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15307//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14731451" author="stack" created="Fri, 4 Sep 2015 21:23:23 +0000"  >&lt;p&gt;Pure rebase. Needs work to better integrate with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14317&quot; title=&quot;Stuck FSHLog: bad disk (HDFS-8960) and can&amp;#39;t roll WAL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14317&quot;&gt;&lt;del&gt;HBASE-14317&lt;/del&gt;&lt;/a&gt; changes.&lt;/p&gt;</comment>
                            <comment id="14731555" author="hadoopqa" created="Fri, 4 Sep 2015 22:46:37 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12754273/12751.rebased.v25.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12754273/12751.rebased.v25.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 2969093b5b39cb950d8710cfffa7e55484d40259.&lt;br/&gt;
  ATTACHMENT ID: 12754273&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 87 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1840 checkstyle errors (more than the master&apos;s current 1834 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConcurrencyControl mvcc) {&lt;br/&gt;
+      long logSeqNum, final long now, List&amp;lt;UUID&amp;gt; clusterIds, long nonceGroup, long nonce, MultiVersionConcurrencyControl mvcc) {&lt;br/&gt;
+      long txid = log.append(htd, hri, new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc),&lt;br/&gt;
+        new WALKey(info.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+        new WALKey(hri.getEncodedNameAsBytes(), htd.getTableName(), System.currentTimeMillis(), mvcc),&lt;br/&gt;
+            final WALKey logkey = new WALKey(hri.getEncodedNameAsBytes(), hri.getTable(), now, mvcc);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestRegionObserverStacking&lt;br/&gt;
                  org.apache.hadoop.hbase.filter.TestFilter&lt;br/&gt;
                  org.apache.hadoop.hbase.filter.TestInvocationRecordFilter&lt;br/&gt;
                  org.apache.hadoop.hbase.io.encoding.TestSeekBeforeWithReverseScan&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestKeepDeletes&lt;br/&gt;
                  org.apache.hadoop.hbase.filter.TestDependentColumnFilter&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestDefaultCompactSelection&lt;br/&gt;
                  org.apache.hadoop.hbase.filter.TestMultipleColumnPrefixFilter&lt;br/&gt;
                  org.apache.hadoop.hbase.io.hfile.TestScannerSelectionUsingKeyRange&lt;br/&gt;
                  org.apache.hadoop.hbase.filter.TestColumnPrefixFilter&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestSplitTransaction&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestResettingCounters&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestMinVersions&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestScanner&lt;br/&gt;
                  org.apache.hadoop.hbase.mob.mapreduce.TestMobSweepMapper&lt;br/&gt;
                  org.apache.hadoop.hbase.io.encoding.TestPrefixTree&lt;br/&gt;
                  org.apache.hadoop.hbase.procedure.TestProcedureManager&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestWideScanner&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestCatalogJanitor&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestIntraRowPagination&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestColumnSeeking&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestCoprocessorInterface&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestBlocksScanned&lt;br/&gt;
                  org.apache.hadoop.hbase.mob.TestMobFileCache&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionInfo&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionMergeTransaction&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestScanWithBloomError&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestBulkLoad&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.camel.component.yammer.YammerMultipleUsersRouteTest.testConsumeAllUsers(YammerMultipleUsersRouteTest.java:36)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15422//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15422//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15422//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15422//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15422//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15422//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15422//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15422//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15422//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15422//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14735474" author="stack" created="Tue, 8 Sep 2015 19:38:18 +0000"  >&lt;p&gt;Fix up warnings and the NPE that was causing test failures.&lt;/p&gt;</comment>
                            <comment id="14735503" author="hadoopqa" created="Tue, 8 Sep 2015 20:02:28 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12754714/12751.rebased.v26.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12754714/12751.rebased.v26.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e95358a7fc3f554dcbb351c8b7295cafc01e8c23.&lt;br/&gt;
  ATTACHMENT ID: 12754714&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 90 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to cause Findbugs (version 2.0.3) to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn post-site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15471//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15471//testReport/&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15471//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15471//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15471//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15471//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14735685" author="stack" created="Tue, 8 Sep 2015 21:48:09 +0000"  >&lt;p&gt;I removed H6 from precommit set because failed again with can&apos;t find mvn.&lt;/p&gt;

&lt;p&gt;Retry.&lt;/p&gt;</comment>
                            <comment id="14735833" author="stack" created="Tue, 8 Sep 2015 23:36:24 +0000"  >&lt;p&gt;A new version. The Increment and Append methods had diverged. Align them more. Make them the same in way they do mvcc.&lt;/p&gt;</comment>
                            <comment id="14735842" author="hadoopqa" created="Tue, 8 Sep 2015 23:39:41 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12754745/12751.rebased.v26.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12754745/12751.rebased.v26.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e95358a7fc3f554dcbb351c8b7295cafc01e8c23.&lt;br/&gt;
  ATTACHMENT ID: 12754745&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 90 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestFullLogReconstruction&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestWALObserver&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15475//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15475//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15475//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15475//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15475//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15475//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15475//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15475//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14735897" author="stack" created="Wed, 9 Sep 2015 00:32:44 +0000"  >&lt;p&gt;Added comments and javadoc.&lt;/p&gt;

&lt;p&gt;Sequenceid is a better here but still tough to track. Comments to help. Need to remove deprecated HLogKey, Writable read/write Object... etc... and would have then a fighting chance at cleaning this up some.&lt;/p&gt;</comment>
                            <comment id="14735990" author="hadoopqa" created="Wed, 9 Sep 2015 01:52:33 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12754767/12751.rebased.v27.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12754767/12751.rebased.v27.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e95358a7fc3f554dcbb351c8b7295cafc01e8c23.&lt;br/&gt;
  ATTACHMENT ID: 12754767&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 90 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +              txid = this.wal.append(this.htableDescriptor, getRegionInfo(), walKey, walEdits, true);&lt;br/&gt;
+                if (i &amp;lt; (edits.size() - 1) &amp;amp;&amp;amp; !CellUtil.matchingQualifier(cell, edits.get(i + 1))) idx++;&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestWALObserver&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHMobStore&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestTags&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestStore&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestWALReplayCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestFSErrorsExposed&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestSecureWALReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestFailedAppendAndSync&lt;br/&gt;
                  org.apache.hadoop.hbase.TestFullLogReconstruction&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRecoveredEdits&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 12 zombie test(s): 	at org.apache.hadoop.hbase.client.TestScannerTimeout.test3686b(TestScannerTimeout.java:212)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestBlockEvictionFromClient.testScanWithCompactionInternals(TestBlockEvictionFromClient.java:854)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestBlockEvictionFromClient.testScanWithCompaction(TestBlockEvictionFromClient.java:799)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestMultiParallel.testBatchWithPut(TestMultiParallel.java:342)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestReplicasClient.testSmallScanWithReplicas(TestReplicasClient.java:606)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestHRegion.testFlushCacheWhileScanning(TestHRegion.java:3756)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitWalDataLoss.test(TestSplitWalDataLoss.java:141)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestMobCloneSnapshotFromClient.testCloneLinksAfterDelete(TestMobCloneSnapshotFromClient.java:215)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:228)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15478//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15478//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15478//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15478//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15478//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15478//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15478//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15478//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14736028" author="hadoopqa" created="Wed, 9 Sep 2015 02:40:09 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12754775/12751.rebased.v29.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12754775/12751.rebased.v29.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e95358a7fc3f554dcbb351c8b7295cafc01e8c23.&lt;br/&gt;
  ATTACHMENT ID: 12754775&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 90 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +              txid = this.wal.append(this.htableDescriptor, getRegionInfo(), walKey, walEdits, true);&lt;br/&gt;
+                if (i &amp;lt; (edits.size() - 1) &amp;amp;&amp;amp; !CellUtil.matchingQualifier(cell, edits.get(i + 1))) idx++;&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestFullLogReconstruction&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestWALObserver&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15479//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15479//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15479//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15479//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15479//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15479//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15479//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15479//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14736087" author="stack" created="Wed, 9 Sep 2015 03:26:59 +0000"  >&lt;p&gt;v31 fixes the failing tests (issue around HRegion initialization when log replays going on....)&lt;/p&gt;</comment>
                            <comment id="14736175" author="stack" created="Wed, 9 Sep 2015 05:04:01 +0000"  >&lt;p&gt;I put it up on rb: &lt;a href=&quot;https://reviews.apache.org/r/38205/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/38205/&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; FYI&lt;/p&gt;</comment>
                            <comment id="14736227" author="hadoopqa" created="Wed, 9 Sep 2015 05:45:49 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12754809/12751.rebased.v31.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12754809/12751.rebased.v31.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e95358a7fc3f554dcbb351c8b7295cafc01e8c23.&lt;br/&gt;
  ATTACHMENT ID: 12754809&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 93 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestStore&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15484//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15484//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15484//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15484//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15484//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15484//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15484//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15484//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14736303" author="stack" created="Wed, 9 Sep 2015 06:42:52 +0000"  >&lt;p&gt;More initialization of mvcc issues. Fix.&lt;/p&gt;</comment>
                            <comment id="14736883" author="stack" created="Wed, 9 Sep 2015 13:56:50 +0000"  >&lt;p&gt;Retry. Trunk was broke because of a previous commit.&lt;/p&gt;</comment>
                            <comment id="14737230" author="hadoopqa" created="Wed, 9 Sep 2015 17:15:44 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12754911/12751.rebased.v32.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12754911/12751.rebased.v32.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 27d3ab43efeabe2a0e1173858b6994b17b5c355b.&lt;br/&gt;
  ATTACHMENT ID: 12754911&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 122 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestTags&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestFSErrorsExposed&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestFailedAppendAndSync&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 8 zombie test(s): 	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:228)&lt;br/&gt;
	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService.testAddLabels(TestVisibilityLabelsWithDefaultVisLabelService.java:110)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileScanning(TestHRegion.java:3890)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15500//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15500//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15500//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15500//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15500//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15500//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15500//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15500//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14737412" author="eclark" created="Wed, 9 Sep 2015 19:03:31 +0000"  >&lt;p&gt;not sure how TestTags and TestPerColumnFamilyFlush got broken but everything else seems related.&lt;/p&gt;</comment>
                            <comment id="14737531" author="stack" created="Wed, 9 Sep 2015 20:31:10 +0000"  >&lt;p&gt;TestTags is simple fix (I broke tag handling).&lt;/p&gt;

&lt;p&gt;All rest are likely related, yeah. Thanks for that (smile). We used to block on SyncFuture and if sync failed, we&apos;d clean them all up &amp;#8211; we had a list. Now we are waiting on latch in WALKey#getWriteEntry too... to get WriteEntry. Let me see...&lt;/p&gt;</comment>
                            <comment id="14737618" author="stack" created="Wed, 9 Sep 2015 21:37:47 +0000"  >&lt;p&gt;Disable a DLR test (this patch seems to break DLR but we are removing it...). Handle case where an append runs into a stale exception; stamp the sequence id anyways to at least count down the WALKey latch. Finally, I mangled tag handling in previous patch trying to align increment and append.... in HRegion.&lt;/p&gt;

&lt;p&gt;Outstanding is TestRegionReplicaFailover... &lt;/p&gt;</comment>
                            <comment id="14737931" author="hadoopqa" created="Thu, 10 Sep 2015 01:06:42 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12755006/12751.rebased.v33.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12755006/12751.rebased.v33.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit a11bb2a933ad799546e7179fdf6ce75e3e22d44b.&lt;br/&gt;
  ATTACHMENT ID: 12755006&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 96 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15511//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15511//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15511//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15511//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15511//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15511//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15511//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15511//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14739678" author="stack" created="Thu, 10 Sep 2015 21:54:02 +0000"  >&lt;p&gt;TestRegionReplicaFailover was a nice parameterized test that was doing DLS and then DLR. DLR is broke by this patch. I&apos;ve not spent the time to figure why since DLR is being pulled.&lt;/p&gt;</comment>
                            <comment id="14740036" author="hadoopqa" created="Fri, 11 Sep 2015 02:24:30 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12755243/12751.rebased.v34.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12755243/12751.rebased.v34.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit bf26088d7be4386864148516b151dfb0a858c416.&lt;br/&gt;
  ATTACHMENT ID: 12755243&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 99 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 8 zombie test(s): 	at org.apache.hadoop.hbase.replication.TestReplicationSmallTests.testVerifyRepJob(TestReplicationSmallTests.java:461)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.TestReplicationSyncUpTool.testSyncUpTool(TestReplicationSyncUpTool.java:148)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager.test(TestReplicationWALReaderManager.java:184)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint.testRegionReplicaReplicationPeerIsCreatedForModifyTable(TestRegionReplicaReplicationEndpoint.java:159)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15539//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15539//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15539//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15539//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15539//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15539//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15539//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15539//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14740157" author="stack" created="Fri, 11 Sep 2015 04:27:36 +0000"  >&lt;p&gt;Last patch had same issue as &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14401&quot; title=&quot;Stamp failed appends with sequenceid too.... Cleans up latches&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14401&quot;&gt;&lt;del&gt;HBASE-14401&lt;/del&gt;&lt;/a&gt; where I was throwing exception on append after a failed append instead of just passing on it...&lt;/p&gt;</comment>
                            <comment id="14740426" author="hadoopqa" created="Fri, 11 Sep 2015 08:52:03 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12755323/12751.rebased.v35.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12755323/12751.rebased.v35.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit fda317cebb5d306cabf1899e05cedb0225b2b62b.&lt;br/&gt;
  ATTACHMENT ID: 12755323&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 99 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestProcessBasedCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportExport&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 4 zombie test(s): 	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService.testListLabelsWithRegEx(TestVisibilityLabelsWithDefaultVisLabelService.java:220)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15552//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15552//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15552//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15552//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15552//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15552//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15552//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15552//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14740974" author="stack" created="Fri, 11 Sep 2015 15:25:41 +0000"  >&lt;p&gt;The failures look unrelated and common. Retry.&lt;/p&gt;</comment>
                            <comment id="14741287" author="hadoopqa" created="Fri, 11 Sep 2015 18:22:47 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12755418/12751.rebased.v35.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12755418/12751.rebased.v35.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit c438052cc2280121727d4ae0883f0b76cad5816a.&lt;br/&gt;
  ATTACHMENT ID: 12755418&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 99 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): 	at org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint.testRegionReplicaReplicationIgnoresDisabledTables(TestRegionReplicaReplicationEndpoint.java:350)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint.testRegionReplicaReplicationIgnoresDroppedTables(TestRegionReplicaReplicationEndpoint.java:336)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.TestMasterReplication.testCyclicReplication3(TestMasterReplication.java:220)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.TestPerTableCFReplication.testPerTableCFReplication(TestPerTableCFReplication.java:334)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager.test(TestReplicationWALReaderManager.java:184)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15564//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15564//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15564//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15564//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15564//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15564//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15564//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15564//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14741504" author="stack" created="Fri, 11 Sep 2015 20:38:49 +0000"  >&lt;p&gt;All this fails:&lt;/p&gt;

&lt;p&gt;2015-09-11 13:08:01.896 Vim&lt;span class=&quot;error&quot;&gt;&amp;#91;4556:17136812&amp;#93;&lt;/span&gt; Can&apos;t allocate a new block for a pasteboard. Creation of a new Pasteboard will fail.&lt;br/&gt;
kalashnikov:hbase.git stack$ python dev-support/findHangingTests.py &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15564//consoleText&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15564//consoleText&lt;/a&gt;&lt;br/&gt;
Fetching the console output from the URL&lt;br/&gt;
Printing hanging tests&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.replication.TestMasterReplication&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.regionserver.TestServerCustomProtocol&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.handler.TestCreateTableHandler&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.TestIOFencing&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.snapshot.TestFlushSnapshotFromClient&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.io.hfile.TestScannerSelectionUsingTTL&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.procedure.TestServerCrashProcedure&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.snapshot.TestSnapshotFileCache&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.TestMasterFailover&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.regionserver.TestMultiColumnScanner&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer2&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.regionserver.compactions.TestCompactionWithThroughputController&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.TestMasterShutdown&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDistributedLogReplay&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.snapshot.TestExportSnapshot&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.regionserver.TestRegionReplicas&lt;br/&gt;
Printing Failing tests&lt;br/&gt;
Failing test : org.apache.hadoop.hbase.client.TestFastFail&lt;br/&gt;
Failing test : org.apache.hadoop.hbase.master.procedure.TestWALProcedureStoreOnHDFS&lt;/p&gt;
</comment>
                            <comment id="14741913" author="hadoopqa" created="Sat, 12 Sep 2015 05:49:28 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12755538/12751.rebased.v35.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12755538/12751.rebased.v35.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 36675c81fb2803418191e44c7eb9560a92a23411.&lt;br/&gt;
  ATTACHMENT ID: 12755538&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 99 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15571//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15571//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14742106" author="stack" created="Sat, 12 Sep 2015 16:05:23 +0000"  >&lt;p&gt;Rebase&lt;/p&gt;</comment>
                            <comment id="14742193" author="hadoopqa" created="Sat, 12 Sep 2015 19:06:09 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12755563/12751v36.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12755563/12751v36.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 36675c81fb2803418191e44c7eb9560a92a23411.&lt;br/&gt;
  ATTACHMENT ID: 12755563&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 99 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): 	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService.testAddLabels(TestVisibilityLabelsWithDefaultVisLabelService.java:110)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileScanning(TestHRegion.java:3890)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:229)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15574//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15574//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15574//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15574//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15574//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15574//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15574//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15574//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14746893" author="stack" created="Wed, 16 Sep 2015 05:21:52 +0000"  >&lt;p&gt;Retry&lt;/p&gt;</comment>
                            <comment id="14746899" author="stack" created="Wed, 16 Sep 2015 05:28:14 +0000"  >&lt;p&gt;Missed an import.&lt;/p&gt;</comment>
                            <comment id="14746902" author="hadoopqa" created="Wed, 16 Sep 2015 05:33:03 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12756168/12751.v37.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12756168/12751.v37.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit fe2c4f630d3b5f3346c9ee9f95c256186c9e6907.&lt;br/&gt;
  ATTACHMENT ID: 12756168&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 99 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The patch appears to cause mvn compile goal to fail with Hadoop version 2.4.0.&lt;/p&gt;

&lt;p&gt;    Compilation errors resume:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; COMPILATION ERROR : &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationWALReaderManager.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;82,17&amp;#93;&lt;/span&gt; cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationWALReaderManager.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;82,45&amp;#93;&lt;/span&gt; cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.2:testCompile (default-testCompile) on project hbase-server: Compilation failure: Compilation failure:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationWALReaderManager.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;82,17&amp;#93;&lt;/span&gt; cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; symbol:   class AtomicLong&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; location: class org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationWALReaderManager.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;82,45&amp;#93;&lt;/span&gt; cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; symbol:   class AtomicLong&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; location: class org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; To see the full stack trace of the errors, re-run Maven with the -e switch.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Re-run Maven using the -X switch to enable full debug logging.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; For more information about the errors and possible solutions, please read the following articles:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; After correcting the problems, you can resume the build with the command&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt;   mvn &amp;lt;goals&amp;gt; -rf :hbase-server&lt;/p&gt;


&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15615//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15615//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14747145" author="hadoopqa" created="Wed, 16 Sep 2015 08:36:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12756170/12751.v38.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12756170/12751.v38.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit d2e338181800ae3cef55ddca491901b65259dc7f.&lt;br/&gt;
  ATTACHMENT ID: 12756170&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 99 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15616//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15616//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15616//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15616//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15616//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15616//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15616//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15616//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14790723" author="stack" created="Wed, 16 Sep 2015 16:52:54 +0000"  >&lt;p&gt;kalashnikov:hbase.git stack$ python ./dev-support/findHangingTests.py  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15616//consoleText&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15616//consoleText&lt;/a&gt;&lt;br/&gt;
Fetching the console output from the URL&lt;br/&gt;
Printing hanging tests&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.TestIOFencing&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.procedure.TestServerCrashProcedure&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDistributedLogReplay&lt;br/&gt;
Printing Failing tests&lt;br/&gt;
Failing test : org.apache.hadoop.hbase.client.TestReplicasClient&lt;/p&gt;

&lt;p&gt;Let me look into these.&lt;/p&gt;</comment>
                            <comment id="14791603" author="stack" created="Thu, 17 Sep 2015 05:28:37 +0000"  >&lt;p&gt;Dang. The hangs are legit and reproducible. Will be back after try and figure the why.&lt;/p&gt;</comment>
                            <comment id="14901693" author="stack" created="Tue, 22 Sep 2015 00:50:15 +0000"  >&lt;p&gt;The TestIOFencing failure is because test is parameterized and the DLR run was hanging. Fixed.&lt;/p&gt;

&lt;p&gt;I removed TestVisibilityLabelsWithDistributedLogReplay because this patch breaks DLR and DLR is deprecated as-is.&lt;/p&gt;

&lt;p&gt;The TestDistributedLogSplitting and TestServerCrashProcedure are both hung up in MVCC waiting on write number to progress. The accounting must be wrong. Let me see.... If I do the below hack, tests pass...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
index a8ffa8d..e70e7bd 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
@@ -2099,7 +2099,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HRegion &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; HeapSize, PropagatingConfigurationObserver, Regi
                 writeFlushRequestMarkerToWAL(wal, writeFlushWalMarker));
             &lt;span class=&quot;code-comment&quot;&gt;// TODO: Lets see &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we hang here, &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; there is a scenario where an outstanding reader
&lt;/span&gt;             &lt;span class=&quot;code-comment&quot;&gt;// with a read point is in advance of &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; write point.
&lt;/span&gt;-            mvcc.completeAndWait(writeEntry);
+            mvcc.complete(writeEntry);
             writeEntry = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
             &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PrepareFlushResult(flushResult, myseqid);
           } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
@@ -2254,7 +2254,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HRegion &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; HeapSize, PropagatingConfigurationObserver, Regi
       &lt;span class=&quot;code-comment&quot;&gt;// uncommitted transactions from being written into HFiles.
&lt;/span&gt;       &lt;span class=&quot;code-comment&quot;&gt;// We have to block before we start the flush, otherwise keys that
&lt;/span&gt;       &lt;span class=&quot;code-comment&quot;&gt;// were removed via a rollbackMemstore could be written to Hfiles.
&lt;/span&gt;-      mvcc.completeAndWait(writeEntry);
+      mvcc.complete(writeEntry);
       &lt;span class=&quot;code-comment&quot;&gt;// set writeEntry to &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; to prevent mvcc.complete from being called again inside &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt;
&lt;/span&gt;       &lt;span class=&quot;code-comment&quot;&gt;// block
&lt;/span&gt;       writeEntry = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
@@ -3158,7 +3158,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HRegion &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; HeapSize, PropagatingConfigurationObserver, Regi
       &lt;span class=&quot;code-comment&quot;&gt;// STEP 8. Advance mvcc. This will make &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; put visible to scanners and getters.
&lt;/span&gt;       &lt;span class=&quot;code-comment&quot;&gt;// ------------------------------------------------------------------
&lt;/span&gt;       &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (writeEntry != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
-        mvcc.completeAndWait(writeEntry);
+        mvcc.complete(writeEntry);
         writeEntry = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
       } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (isInReplay) {
         &lt;span class=&quot;code-comment&quot;&gt;// ensure that the sequence id of the region is at least as big as orig log seq id
&lt;/span&gt;@@ -3203,7 +3203,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HRegion &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; HeapSize, PropagatingConfigurationObserver, Regi
         }
         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (writeEntry != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) mvcc.complete(writeEntry);
       } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (writeEntry != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
-        mvcc.completeAndWait(writeEntry);
+        mvcc.complete(writeEntry);
       }

       &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (locked) {
@@ -6856,7 +6856,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HRegion &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; HeapSize, PropagatingConfigurationObserver, Regi
         }
         &lt;span class=&quot;code-comment&quot;&gt;// 13. Roll mvcc forward
&lt;/span&gt;         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (writeEntry != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
-          mvcc.completeAndWait(writeEntry);
+          mvcc.complete(writeEntry);
         }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;TestReplicasClient seems broke in a different way altogether. Digging.&lt;/p&gt;</comment>
                            <comment id="14901873" author="stack" created="Tue, 22 Sep 2015 03:49:32 +0000"  >&lt;p&gt;Nvm. TestServerCrashProcedure and TestDistributedLogsplitting were also doing DLR. That leaves TestReplicasClient. It actually passes locally. It just runs a long time. Lets see how we do now.&lt;/p&gt;</comment>
                            <comment id="14901956" author="hadoopqa" created="Tue, 22 Sep 2015 05:15:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12761563/12751.v39.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12761563/12751.v39.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 45d67435adc9195325bfccc78b7e1a0202a446e5.&lt;br/&gt;
  ATTACHMENT ID: 12761563&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 110 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15660//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15660//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15660//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15660//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15660//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15660//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15660//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15660//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15660//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15660//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14901960" author="stack" created="Tue, 22 Sep 2015 05:20:11 +0000"  >&lt;p&gt;No hanging tests.&lt;/p&gt;

&lt;p&gt;All tests passed:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Rat check: Summary of files. Unapproved: 0 unknown: 0 generated: 0 approved: 36 licence.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; ------------------------------------------------------------------------&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Reactor Summary:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase ...................................... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;2.014s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Checkstyle ......................... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.050s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Resource Bundle .................... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.052s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Annotations ........................ SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.091s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Protocol ........................... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.102s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Common ............................. SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.228s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Procedure .......................... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.064s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Client ............................. SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.285s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Hadoop Compatibility ............... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.108s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Hadoop Two Compatibility ........... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.098s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Prefix Tree ........................ SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.099s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Server ............................. SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;1.057s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Testing Util ....................... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.036s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Thrift ............................. SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.096s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Shell .............................. SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.193s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Integration Tests .................. SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.102s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Examples ........................... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.100s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Rest ............................... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.107s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - External Block Cache ............... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.037s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Assembly ........................... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.064s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Shaded ............................. SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.036s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Shaded - Client .................... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.032s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Shaded - Server .................... SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.069s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Apache HBase - Spark .............................. SUCCESS &lt;span class=&quot;error&quot;&gt;&amp;#91;0.082s&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; ------------------------------------------------------------------------&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; BUILD SUCCESS&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; ------------------------------------------------------------------------&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Total time: 8.680s&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Finished at: Tue Sep 22 05:10:06 UTC 2015&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Final Memory: 39M/1290M&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; ------------------------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Looks like its the javadoc issue and no tests included?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; commit?&lt;/p&gt;</comment>
                            <comment id="14901964" author="stack" created="Tue, 22 Sep 2015 05:24:30 +0000"  >&lt;p&gt;The javadoc WARNINGs are from the REST patch that just went in. Fix them here anyways. Try again.&lt;/p&gt;</comment>
                            <comment id="14901978" author="eclark" created="Tue, 22 Sep 2015 05:45:33 +0000"  >&lt;p&gt;+1 commit it.&lt;/p&gt;</comment>
                            <comment id="14902291" author="hadoopqa" created="Tue, 22 Sep 2015 09:27:17 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12761569/12751.v40.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12761569/12751.v40.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 45d67435adc9195325bfccc78b7e1a0202a446e5.&lt;br/&gt;
  ATTACHMENT ID: 12761569&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 110 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15664//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15664//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15664//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15664//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15664//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15664//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15664//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15664//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14902858" author="stack" created="Tue, 22 Sep 2015 16:00:32 +0000"  >&lt;p&gt;Has these as hanging:&lt;/p&gt;

&lt;p&gt;kalashnikov:hbase.git stack$ python ./dev-support/findHangingTests.py &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15664//consoleText&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15664//consoleText&lt;/a&gt;&lt;br/&gt;
Fetching the console output from the URL&lt;br/&gt;
Printing hanging tests&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.client.TestMobCloneSnapshotFromClient&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.client.TestReplicasClient&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.regionserver.TestHRegion&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.namespace.TestNamespaceAuditor&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.TestAcidGuarantees&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.TestZooKeeper&lt;br/&gt;
Printing Failing tests&lt;/p&gt;

&lt;p&gt;Trying all tests locally and they pass.  Looking at failures up in jenkins.....&lt;/p&gt;

&lt;p&gt;For TestZooKeeper... it is an interesting one... seems unrelated though:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2015-09-22 08:54:42,962 INFO  [RS:0;asf906:46174] regionserver.HRegionServer(1099): stopping server asf906.gq1.ygridcore.net,46174,1442912078095; zookeeper connection closed.
2015-09-22 08:54:42,962 INFO  [RS:0;asf906:46174] regionserver.HRegionServer(1102): RS:0;asf906:46174 exiting
2015-09-22 08:54:42,962 ERROR [SyncThread:0] server.NIOServerCnxn(178): Unexpected Exception: 
java.nio.channels.CancelledKeyException
	at sun.nio.ch.SelectionKeyImpl.ensureValid(SelectionKeyImpl.java:73)
	at sun.nio.ch.SelectionKeyImpl.interestOps(SelectionKeyImpl.java:77)
	at org.apache.zookeeper.server.NIOServerCnxn.sendBuffer(NIOServerCnxn.java:151)
	at org.apache.zookeeper.server.NIOServerCnxn.sendResponse(NIOServerCnxn.java:1081)
	at org.apache.zookeeper.server.NIOServerCnxn.process(NIOServerCnxn.java:1118)
	at org.apache.zookeeper.server.WatchManager.triggerWatch(WatchManager.java:120)
	at org.apache.zookeeper.server.WatchManager.triggerWatch(WatchManager.java:92)
	at org.apache.zookeeper.server.DataTree.deleteNode(DataTree.java:591)
	at org.apache.zookeeper.server.DataTree.processTxn(DataTree.java:802)
	at org.apache.zookeeper.server.ZKDatabase.processTxn(ZKDatabase.java:329)
	at org.apache.zookeeper.server.ZooKeeperServer.processTxn(ZooKeeperServer.java:994)
	at org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:116)
	at org.apache.zookeeper.server.SyncRequestProcessor.flush(SyncRequestProcessor.java:200)
	at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:131)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I went through all the others and nothing untoward. Let me retry.&lt;/p&gt;</comment>
                            <comment id="14903274" author="stack" created="Tue, 22 Sep 2015 19:24:39 +0000"  >&lt;p&gt;Looks like needed to rebase.&lt;/p&gt;</comment>
                            <comment id="14903667" author="hadoopqa" created="Tue, 22 Sep 2015 23:42:18 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12761716/12751.v41.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12761716/12751.v41.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f697d2d312bc04072ccd64c231319e7e571d1aff.&lt;br/&gt;
  ATTACHMENT ID: 12761716&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 110 new or modified tests.&lt;/p&gt;

&lt;p&gt;		    &lt;font color=&quot;red&quot;&gt;-1 Anti-pattern&lt;/font&gt;.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getRegionInfo(), -1, new TreeMap&amp;lt;byte[], List&amp;lt;Path&amp;gt;&amp;gt;());.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.TestHRegion.testFlushCacheWhileScanning(TestHRegion.java:3756)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15678//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15678//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15678//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15678//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15678//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15678//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15678//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15678//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14903708" author="stack" created="Wed, 23 Sep 2015 00:21:10 +0000"  >&lt;p&gt;Says we are hung up here:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; prio=10 tid=0x00007f6f94009000 nid=0x1669 in &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait() [0x00007f6f9d7d3000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: WAITING (on object monitor)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
	- waiting on &amp;lt;0x00000007c7452b08&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
	at org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl.waitForRead(MultiVersionConcurrencyControl.java:207)
	- locked &amp;lt;0x00000007c7452b08&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
	at org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl.completeAndWait(MultiVersionConcurrencyControl.java:143)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalPrepareFlushCache(HRegion.java:2257)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:2061)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:2026)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:2016)
	at org.apache.hadoop.hbase.regionserver.HRegion.doClose(HRegion.java:1423)
	at org.apache.hadoop.hbase.regionserver.HRegion.close(HRegion.java:1344)
	- locked &amp;lt;0x00000007c7452b38&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
	at org.apache.hadoop.hbase.regionserver.HRegion.close(HRegion.java:1295)
	at org.apache.hadoop.hbase.HBaseTestingUtility.closeRegionAndWAL(HBaseTestingUtility.java:352)
	at org.apache.hadoop.hbase.regionserver.TestHRegion.testFlushCacheWhileScanning(TestHRegion.java:3756)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All other threads are hanging out doing nothing. There may be something to this but it hasn&apos;t shown up during runs of this patch up to this.&lt;/p&gt;

&lt;p&gt;I ran this patch on rig. 5 out of 6 runs completed. One failed because of aTestHCM issue I&apos;ve been watching.&lt;/p&gt;



&lt;p&gt;Going to commit.&lt;/p&gt;</comment>
                            <comment id="14903923" author="hudson" created="Wed, 23 Sep 2015 04:12:27 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6831 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6831/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6831/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12751&quot; title=&quot;Allow RowLock to be reader writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12751&quot;&gt;&lt;del&gt;HBASE-12751&lt;/del&gt;&lt;/a&gt; Allow RowLock to be reader writer (stack: rev 2c83d8a263ee7c6751448bcc72868da86757f7f2)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiVersionConcurrencyControlBasic.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestWALReaderOnSecureWAL.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/WALPerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestReplicasClient.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBulkLoad.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionReplicaFailover.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestWALFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestDefaultWALProviderWithHLogKey.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/FaultyFSLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestSecureWAL.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALSplitter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestPerColumnFamilyFlush.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestWALRecordReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestSplitLogManager.java&lt;/li&gt;
	&lt;li&gt;hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/NamespacesModel.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFileRefresherChore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALActionsListener.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationWALReaderManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/visibility/TestVisibilityLabelsWithDistributedLogReplay.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestDefaultWALProvider.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/procedure/TestServerCrashProcedure.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestKeepDeletes.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSWALEntry.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestDefaultMemStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/HashedBytes.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ReplayHLogKey.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRollingNoCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestIOFencing.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionReplayEvents.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiVersionConcurrencyControl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/DisabledWALProvider.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WAL.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/NamespacesInstanceModel.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogKey.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestWALLockup.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestFullLogReconstruction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestFSHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRollAbort.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15011962" author="enis" created="Wed, 18 Nov 2015 21:04:44 +0000"  >&lt;p&gt;Resolve this issue? &lt;/p&gt;</comment>
                            <comment id="15014710" author="stack" created="Thu, 19 Nov 2015 23:15:51 +0000"  >&lt;p&gt;Resolved as committed to TRUNK (thanks for kick &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Backport to 1.2 and 1.3 was done in another issue linked above.&lt;/p&gt;</comment>
                            <comment id="15137443" author="stack" created="Mon, 8 Feb 2016 18:40:12 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; Who did the mvcc fixup that was in original patch. You see how &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15213&quot; title=&quot;Fix increment performance regression caused by HBASE-8763 on branch-1.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15213&quot;&gt;&lt;del&gt;HBASE-15213&lt;/del&gt;&lt;/a&gt; fingers it as fixing increment performance regression?&lt;/p&gt;</comment>
                            <comment id="15137925" author="eclark" created="Mon, 8 Feb 2016 22:52:26 +0000"  >&lt;p&gt;Yeah that was something I did to try and really only have one sequence id.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15047&quot; title=&quot;Try spin lock for MVCC completion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15047&quot;&gt;HBASE-15047&lt;/a&gt; is my thought on how to take it one step farther. No context switches for anyone.&lt;/p&gt;</comment>
                            <comment id="15138355" author="stack" created="Tue, 9 Feb 2016 05:05:29 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; Nice  side effect &lt;/p&gt;

&lt;p&gt;Regards &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15047&quot; title=&quot;Try spin lock for MVCC completion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15047&quot;&gt;HBASE-15047&lt;/a&gt;, as said before... radical.  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15082&quot; title=&quot;Fix merge of MVCC and SequenceID performance regression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15082&quot;&gt;&lt;del&gt;HBASE-15082&lt;/del&gt;&lt;/a&gt;  is in now (smile).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12754273" name="12751.rebased.v25.txt" size="227261" author="stack" created="Fri, 4 Sep 2015 21:23:23 +0000"/>
                            <attachment id="12754745" name="12751.rebased.v26.txt" size="237852" author="stack" created="Tue, 8 Sep 2015 21:48:09 +0000"/>
                            <attachment id="12754714" name="12751.rebased.v26.txt" size="237852" author="stack" created="Tue, 8 Sep 2015 19:38:18 +0000"/>
                            <attachment id="12754767" name="12751.rebased.v27.txt" size="251847" author="stack" created="Tue, 8 Sep 2015 23:36:24 +0000"/>
                            <attachment id="12754775" name="12751.rebased.v29.txt" size="253976" author="stack" created="Wed, 9 Sep 2015 00:32:44 +0000"/>
                            <attachment id="12754809" name="12751.rebased.v31.txt" size="256403" author="stack" created="Wed, 9 Sep 2015 03:26:59 +0000"/>
                            <attachment id="12754911" name="12751.rebased.v32.txt" size="259591" author="stack" created="Wed, 9 Sep 2015 13:56:50 +0000"/>
                            <attachment id="12754839" name="12751.rebased.v32.txt" size="259591" author="stack" created="Wed, 9 Sep 2015 06:42:52 +0000"/>
                            <attachment id="12755006" name="12751.rebased.v33.txt" size="258524" author="stack" created="Wed, 9 Sep 2015 21:37:47 +0000"/>
                            <attachment id="12755243" name="12751.rebased.v34.txt" size="259658" author="stack" created="Thu, 10 Sep 2015 21:54:02 +0000"/>
                            <attachment id="12755538" name="12751.rebased.v35.txt" size="258869" author="stack" created="Sat, 12 Sep 2015 05:37:41 +0000"/>
                            <attachment id="12755418" name="12751.rebased.v35.txt" size="258869" author="stack" created="Fri, 11 Sep 2015 15:25:41 +0000"/>
                            <attachment id="12755323" name="12751.rebased.v35.txt" size="258869" author="stack" created="Fri, 11 Sep 2015 04:27:36 +0000"/>
                            <attachment id="12756168" name="12751.v37.txt" size="257641" author="stack" created="Wed, 16 Sep 2015 05:21:52 +0000"/>
                            <attachment id="12756170" name="12751.v38.txt" size="257691" author="stack" created="Wed, 16 Sep 2015 05:28:14 +0000"/>
                            <attachment id="12761563" name="12751.v39.txt" size="272769" author="stack" created="Tue, 22 Sep 2015 03:49:32 +0000"/>
                            <attachment id="12761569" name="12751.v40.txt" size="274977" author="stack" created="Tue, 22 Sep 2015 05:24:30 +0000"/>
                            <attachment id="12761716" name="12751.v41.txt" size="274991" author="stack" created="Tue, 22 Sep 2015 19:24:39 +0000"/>
                            <attachment id="12752357" name="12751v22.txt" size="209618" author="stack" created="Wed, 26 Aug 2015 00:06:15 +0000"/>
                            <attachment id="12752867" name="12751v23.txt" size="211190" author="stack" created="Thu, 27 Aug 2015 21:58:25 +0000"/>
                            <attachment id="12752796" name="12751v23.txt" size="211190" author="stack" created="Thu, 27 Aug 2015 16:34:03 +0000"/>
                            <attachment id="12752522" name="12751v23.txt" size="211190" author="stack" created="Wed, 26 Aug 2015 16:44:56 +0000"/>
                            <attachment id="12752390" name="12751v23.txt" size="211190" author="stack" created="Wed, 26 Aug 2015 04:59:18 +0000"/>
                            <attachment id="12755563" name="12751v36.txt" size="258904" author="stack" created="Sat, 12 Sep 2015 16:05:23 +0000"/>
                            <attachment id="12706449" name="HBASE-12751-v1.patch" size="8172" author="nkedel" created="Mon, 23 Mar 2015 05:08:50 +0000"/>
                            <attachment id="12732000" name="HBASE-12751-v10.patch" size="146057" author="eclark" created="Mon, 11 May 2015 20:21:16 +0000"/>
                            <attachment id="12731999" name="HBASE-12751-v10.patch" size="146057" author="eclark" created="Mon, 11 May 2015 20:20:51 +0000"/>
                            <attachment id="12734282" name="HBASE-12751-v11.patch" size="147743" author="eclark" created="Thu, 21 May 2015 00:08:28 +0000"/>
                            <attachment id="12738930" name="HBASE-12751-v12.patch" size="147978" author="eclark" created="Wed, 10 Jun 2015 22:01:58 +0000"/>
                            <attachment id="12746175" name="HBASE-12751-v13.patch" size="146092" author="eclark" created="Mon, 20 Jul 2015 20:55:22 +0000"/>
                            <attachment id="12746596" name="HBASE-12751-v14.patch" size="159632" author="eclark" created="Wed, 22 Jul 2015 17:59:45 +0000"/>
                            <attachment id="12746627" name="HBASE-12751-v15.patch" size="163709" author="eclark" created="Wed, 22 Jul 2015 20:03:24 +0000"/>
                            <attachment id="12746677" name="HBASE-12751-v16.patch" size="176090" author="eclark" created="Thu, 23 Jul 2015 00:08:43 +0000"/>
                            <attachment id="12747127" name="HBASE-12751-v17.patch" size="190100" author="eclark" created="Fri, 24 Jul 2015 23:28:50 +0000"/>
                            <attachment id="12747804" name="HBASE-12751-v18.patch" size="205178" author="eclark" created="Wed, 29 Jul 2015 16:25:27 +0000"/>
                            <attachment id="12751157" name="HBASE-12751-v19 (1).patch" size="205178" author="stack" created="Tue, 18 Aug 2015 23:36:06 +0000"/>
                            <attachment id="12750630" name="HBASE-12751-v19.patch" size="205178" author="eclark" created="Sat, 15 Aug 2015 00:04:28 +0000"/>
                            <attachment id="12723578" name="HBASE-12751-v2.patch" size="68193" author="eclark" created="Tue, 7 Apr 2015 09:27:19 +0000"/>
                            <attachment id="12751285" name="HBASE-12751-v20.patch" size="214755" author="stack" created="Wed, 19 Aug 2015 15:24:15 +0000"/>
                            <attachment id="12751213" name="HBASE-12751-v20.patch" size="214755" author="stack" created="Wed, 19 Aug 2015 05:38:50 +0000"/>
                            <attachment id="12752051" name="HBASE-12751-v21.patch" size="208919" author="eclark" created="Mon, 24 Aug 2015 18:10:09 +0000"/>
                            <attachment id="12723583" name="HBASE-12751-v3.patch" size="81818" author="eclark" created="Tue, 7 Apr 2015 09:51:59 +0000"/>
                            <attachment id="12723666" name="HBASE-12751-v4.patch" size="100094" author="eclark" created="Tue, 7 Apr 2015 17:11:52 +0000"/>
                            <attachment id="12725267" name="HBASE-12751-v5.patch" size="116657" author="eclark" created="Tue, 14 Apr 2015 16:14:57 +0000"/>
                            <attachment id="12729721" name="HBASE-12751-v6.patch" size="142798" author="eclark" created="Fri, 1 May 2015 06:00:51 +0000"/>
                            <attachment id="12729726" name="HBASE-12751-v7.patch" size="146530" author="eclark" created="Fri, 1 May 2015 07:03:09 +0000"/>
                            <attachment id="12731208" name="HBASE-12751-v8.patch" size="146943" author="eclark" created="Thu, 7 May 2015 16:07:28 +0000"/>
                            <attachment id="12731955" name="HBASE-12751-v9.patch" size="148242" author="eclark" created="Mon, 11 May 2015 17:27:17 +0000"/>
                            <attachment id="12705454" name="HBASE-12751.patch" size="7771" author="nkedel" created="Wed, 18 Mar 2015 22:29:34 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12895648">HBASE-14465</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>49.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 28 Dec 2014 02:46:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            44 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i23qbb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Locks on row are now reader/writer rather than exclusive.&lt;br/&gt;
&lt;br/&gt;
Moves sequenceid out of HRegion and into MVCC class; MVCC is now in charge. A WAL append is still stamped in same way (we pass MVCC context in a few places where we previously we did not).&lt;br/&gt;
&lt;br/&gt;
MVCC methods cleaned up. Make a bit more sense now. Less of them.&lt;br/&gt;
&lt;br/&gt;
Simplifies our update of MemStore/WAL. Now we update memstore AFTER we add to WAL (but before we sync). This fixes possible dataloss when two edits came in with same coordinates; we could order the edits in memstore differently to how they arrived in the WAL.&lt;br/&gt;
&lt;br/&gt;
Marked as an incompatible change because it breaks Distributed Log Replay, a feature we&amp;#39;d determined already was unreliable and to be removed (See &lt;a href=&quot;http://search-hadoop.com/m/YGbbhTJpoal8GD1)&quot;&gt;http://search-hadoop.com/m/YGbbhTJpoal8GD1)&lt;/a&gt;.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>