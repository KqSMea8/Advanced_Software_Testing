<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:00:48 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2312/HBASE-2312.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2312] Possible data loss when RS goes into GC pause while rolling HLog</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2312</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;There is a very corner case when bad things could happen(ie data loss):&lt;/p&gt;

&lt;p&gt;1)	RS #1 is going to roll its HLog - not yet created the new one, old one will get no more writes&lt;br/&gt;
2)	RS #1 enters GC Pause of Death&lt;br/&gt;
3)	Master lists HLog files of RS#1 that is has to split as RS#1 is dead, starts splitting&lt;br/&gt;
4)	RS #1 wakes up, created the new HLog (previous one was rolled) and appends an edit - which is lost&lt;/p&gt;

&lt;p&gt;The following seems like a possible solution:&lt;/p&gt;

&lt;p&gt;1)	Master detects RS#1 is dead&lt;br/&gt;
2)	The master renames the /hbase/.logs/&amp;lt;regionserver name&amp;gt;  directory to something else (say /hbase/.logs/&amp;lt;regionserver name&amp;gt;-dead)&lt;br/&gt;
3)	Add mkdir support (as opposed to mkdirs) to HDFS - so that a file create fails if the directory doesn&apos;t exist. Dhruba tells me this is very doable.&lt;br/&gt;
4)	RS#1 comes back up and is not able create the new hlog. It restarts itself.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12458882">HBASE-2312</key>
            <summary>Possible data loss when RS goes into GC pause while rolling HLog</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nspiegelberg">Nicolas Spiegelberg</assignee>
                                    <reporter username="karthik.ranga">Karthik Ranganathan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 12 Mar 2010 01:19:51 +0000</created>
                <updated>Fri, 20 Nov 2015 12:42:10 +0000</updated>
                            <resolved>Wed, 2 Nov 2011 20:37:03 +0000</resolved>
                                    <version>0.90.0</version>
                                    <fixVersion>0.92.0</fixVersion>
                                    <component>master</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="12844321" author="tlipcon" created="Fri, 12 Mar 2010 01:23:24 +0000"  >&lt;p&gt;Dhruba and I discussed this a little bit last night at the HBase meetup.&lt;/p&gt;

&lt;p&gt;I agree that the proposed solution would work, but I don&apos;t really want to have to add another HDFS API here.&lt;/p&gt;

&lt;p&gt;What about this idea:&lt;/p&gt;

&lt;p&gt;1) RS #1 has written log.1, log.2, log.3&lt;br/&gt;
2) RS #1 is just about to write log.4 and enters gc pause before doing so&lt;br/&gt;
3) Master detects RS #1 dead&lt;br/&gt;
4) Master sees log.1, log.2, log.3. It then opens log.3 for append and also creates log.4 as a lock&lt;br/&gt;
5) RS #1 wakes up and isn&apos;t allowed to write to either log.3 or log.4 since HMaster holds both.&lt;/p&gt;

&lt;p&gt;Alternatively, we discussed the idea of just adding a file like logs/.exclusive_lock in that directory. Whoever holds append lease on that file is allowed to write to those logs. Much simpler, no rolling, etc. What do you think?&lt;/p&gt;</comment>
                            <comment id="12844334" author="karthik.ranga" created="Fri, 12 Mar 2010 01:57:55 +0000"  >&lt;p&gt;The .exclusive_lock will not work as the following two operations are not atomic:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Check if I own the lock&lt;/li&gt;
	&lt;li&gt;Create the file&lt;br/&gt;
The GC pause could hit between the two.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The other scheme - log.i - would work, but is not very clean. Right now the log names are of the format log.&amp;lt;timestamp&amp;gt;. In this scheme the master will have to list all the files, parse their names to find the current max i and then create the new file log.(i+1). Also, in your example, it is possible for the master to fail creating log.4 if the RS comes out of the GC pause - I guess it could create the next file, but doesn&apos;t feel like a clean solution. &lt;/p&gt;

&lt;p&gt;Something else we noticed when looking at the code is that HDFS would overwrite the existing file if another is created with the same name? If so, then the master can clobber log.4 created by the RS - not sure what would happen in this case.&lt;br/&gt;
Say in SequenceFile.java:838&lt;br/&gt;
fs.create(name, true, ...); // true is the overwrite flag&lt;/p&gt;
</comment>
                            <comment id="12844335" author="tlipcon" created="Fri, 12 Mar 2010 02:03:59 +0000"  >&lt;p&gt;Right, I guess the problem with just using a file as a lock is that you also need to be appending/syncing to the file to know that you still have the lock.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Something else we noticed when looking at the code is that HDFS would overwrite the existing file if another is created with the same name&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can&apos;t we modify the log code to not pass true for overwrite?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also, in your example, it is possible for the master to fail creating log.4 if the RS comes out of the GC pause&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In that case, doesn&apos;t that mean the master should give up its recovery, since the RS is back to life?&lt;/p&gt;</comment>
                            <comment id="12844772" author="tlipcon" created="Sat, 13 Mar 2010 00:19:37 +0000"  >&lt;p&gt;Just thought of another solution to this, which I think we had discussed a while back:&lt;/p&gt;

&lt;p&gt;We can change the HLog rolling process to:&lt;/p&gt;

&lt;p&gt;1) Write &quot;intend to roll HLog to new file hlog.N+1&quot; to hlog.N&lt;br/&gt;
2) Open hlog.N+1 for append&lt;br/&gt;
3) Write &quot;finished rolling&quot; to hlog.N&lt;br/&gt;
4) continue writing to hlog.N+1&lt;/p&gt;

&lt;p&gt;This at step 3, both logs are open for append, and if the HMaster steals the write lease, the region server won&apos;t be able to successfully complete the log roll.&lt;/p&gt;</comment>
                            <comment id="12845463" author="karthik.ranga" created="Mon, 15 Mar 2010 19:02:55 +0000"  >&lt;p&gt;Your last solution seems to be much better to implement - you are assuming that the HMaster opens the last log file first, right? This looks good to me. &lt;/p&gt;

&lt;p&gt;Will send out an email to hbase-dev to see if it sounds good everyone.&lt;/p&gt;
</comment>
                            <comment id="12845494" author="tlipcon" created="Mon, 15 Mar 2010 20:09:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;you are assuming that the HMaster opens the last log file first&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yea, and I think the HMaster needs to &quot;chase&quot; the regionserver - after it opens the last one, it looks for an &quot;intent to roll&quot; at the end, and if it finds it, opens the next one. It has to do this until it finds a log that doesn&apos;t end in &quot;intent to roll&quot; - otherwise we&apos;re susceptible to a really unlikely double-roll condition.&lt;/p&gt;</comment>
                            <comment id="12845526" author="karthik.ranga" created="Mon, 15 Mar 2010 21:06:43 +0000"  >&lt;p&gt;A little confused about your comment. We have the follwing sequence of actions:&lt;/p&gt;

&lt;p&gt;1) Write &quot;intend to roll HLog to new file hlog.N+1&quot; to hlog.N&lt;br/&gt;
2) Open hlog.N+1 for append&lt;br/&gt;
3) Write &quot;finished rolling&quot; to hlog.N&lt;br/&gt;
4) continue writing to hlog.N+1&lt;/p&gt;

&lt;p&gt;If the GC pause hits before 2, no new log file is created. Master will take the append lease on log.N and step 3 will fail later. No edits could have gone into the new log.&lt;br/&gt;
If the GC pause hits after 3, the new log file is the one in effect, so no issues there.&lt;br/&gt;
If the GC pause hits after 2 but before 3, the master will always see the last log file (log.N+1) right? So master will try to take the append lease on log.N+1.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Master gets the append lease on log.N+1 in which case at the most RS does step 3 and fails on 4&lt;/li&gt;
	&lt;li&gt;Master does not get the lease on log.N+1, its still waiting for it, in which case the RS logs the edits to log.N+1 and then quits. Master does not lose the edits.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What is the scenario when the master chases the RS? The only thing I can think of is that step 2 takes a long time - but presumable the detection of the RS being dead takes longer?&lt;/p&gt;</comment>
                            <comment id="12845531" author="tlipcon" created="Mon, 15 Mar 2010 21:14:13 +0000"  >&lt;p&gt;Yea, like I said I think it&apos;s really unlikely. What I&apos;m thinking is something like:&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;b&gt;RS&lt;/b&gt;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;b&gt;Master&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Writes &quot;intent to roll to hlog.2&quot;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;enters GC pause&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;-&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;detects RS dead, lists files, sees only up to hlog.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;comes back to life&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;opens hlog.2 for append&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;writes log.1 rolled, closes&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;-&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;sees intent to roll at end of hlog.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;writes some edits to hlog.2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;writes &quot;intent to roll to hlog.3&quot;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;opens hlog.3 for append&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;writes &quot;rolled&quot; to hlog.2, closes&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;-&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;opens hlog.2 for append&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;-&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;b&gt;needs to check for intent to roll at end of hlog.2&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;Like I said this is very unlikely &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12845532" author="tlipcon" created="Mon, 15 Mar 2010 21:17:38 +0000"  >&lt;p&gt;Maybe we can actually avoid this situation. If the Master sees an &quot;intent to roll&quot; record that refers to a file it didn&apos;t see in the listStatus() it knows that the region server has actually made progress since it was originally detected dead. Thus, it can abort the whole recovery operation since the RS is known to be alive again.&lt;/p&gt;</comment>
                            <comment id="12846169" author="tlipcon" created="Tue, 16 Mar 2010 22:14:39 +0000"  >&lt;p&gt;Having slept on it, I think the log chasing described above is actually avoidable. A couple different thoughts:&lt;/p&gt;

&lt;p&gt;a) as above, I think we could be careful about using listStatus() to see whether the RS makes any progress&lt;br/&gt;
b) perhaps a very simple solution is to have the regionserver call ZK&apos;s sync() method before initiating metadata ops. This will limit the RS to a single metadata transition after it has been declared dead. This should be a useful pattern throughput HBase.&lt;/p&gt;
</comment>
                            <comment id="12846482" author="karthik.ranga" created="Wed, 17 Mar 2010 17:22:18 +0000"  >&lt;p&gt;Just updating with the result of the discussion on hbase-dev: the consensus seems to be to use option #1.&lt;/p&gt;

&lt;p&gt;See the thread here for the entire discussion:&lt;br/&gt;
&lt;a href=&quot;http://www.mail-archive.com/hbase-dev@hadoop.apache.org/msg18210.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.mail-archive.com/hbase-dev@hadoop.apache.org/msg18210.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12882411" author="nspiegelberg" created="Fri, 25 Jun 2010 00:51:38 +0000"  >&lt;p&gt;need to port non-recursive create from 0.21 =&amp;gt; 0.20-append to implement this fix&lt;/p&gt;</comment>
                            <comment id="12882822" author="kannanm" created="Sat, 26 Jun 2010 08:08:57 +0000"  >&lt;blockquote&gt;
&lt;p&gt;1) Master detects RS#1 is dead&lt;br/&gt;
2) The master renames the /hbase/.logs/&amp;lt;regionserver name&amp;gt; directory to something else (say /hbase/.logs/&amp;lt;regionserver name&amp;gt;-dead)&lt;br/&gt;
3) Add mkdir support (as opposed to mkdirs) to HDFS - so that a file create fails if the directory doesn&apos;t exist. Dhruba tells me this is very doable.&lt;br/&gt;
4) RS#1 comes back up and is not able create the new hlog. It restarts itself.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So in the proposed solution, what happens if the master dies after step #2? &lt;/p&gt;

&lt;p&gt;I suppose this is something the master failover (persisting master state) has to handle. But until then are we making things worse?&lt;/p&gt;</comment>
                            <comment id="12893070" author="nspiegelberg" created="Wed, 28 Jul 2010 05:51:17 +0000"  >&lt;p&gt;Also needs &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6886&quot; title=&quot;LocalFileSystem Needs createNonRecursive API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6886&quot;&gt;&lt;del&gt;HADOOP-6886&lt;/del&gt;&lt;/a&gt; for local cluster testing to work correctly.&lt;/p&gt;</comment>
                            <comment id="12893074" author="hbasereviewboard" created="Wed, 28 Jul 2010 06:17:59 +0000"  >&lt;p&gt;Message from: &quot;Nicolas&quot; &amp;lt;nspiegelberg@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/396/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;There is a very corner case when bad things could happen(ie data loss):&lt;/p&gt;

&lt;p&gt;1) RS #1 is going to roll its HLog - not yet created the new one, old one will get no more writes&lt;br/&gt;
2) RS #1 enters GC Pause of Death&lt;br/&gt;
3) Master lists HLog files of RS#1 that is has to split as RS#1 is dead, starts splitting&lt;br/&gt;
4) RS #1 wakes up, created the new HLog (previous one was rolled) and appends an edit - which is lost&lt;/p&gt;

&lt;p&gt;Note that this fix requires a healthy dose of HDFS prerequisites: &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-617&quot; title=&quot;Support for non-recursive create() in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-617&quot;&gt;&lt;del&gt;HDFS-617&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6840&quot; title=&quot;Support non-recursive create() in FileSystem &amp;amp; SequenceFile.Writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6840&quot;&gt;&lt;del&gt;HADOOP-6840&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6886&quot; title=&quot;LocalFileSystem Needs createNonRecursive API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6886&quot;&gt;&lt;del&gt;HADOOP-6886&lt;/del&gt;&lt;/a&gt;.  I encourage you to review those as well, give feedback, and hopefully give +1s so we can push the changes through.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2312&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2312&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 979953 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/ProcessServerShutdown.java 979953 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 979953 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java 979953 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java 979953 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/396/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn test;&lt;br/&gt;
bin/start-hbase.sh&lt;br/&gt;
bin/hbase shell &amp;lt; scan &apos;.META.&apos;, get, put, etc&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Nicolas&lt;/p&gt;

</comment>
                            <comment id="12893075" author="hbasereviewboard" created="Wed, 28 Jul 2010 06:22:44 +0000"  >&lt;p&gt;Message from: &quot;Nicolas&quot; &amp;lt;nspiegelberg@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/396/#review510&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/#review510&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/396/#comment2052&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/#comment2052&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    will fix whitespace problems&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Nicolas&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12893268" author="hbasereviewboard" created="Wed, 28 Jul 2010 17:29:19 +0000"  >&lt;p&gt;Message from: &quot;Todd Lipcon&quot; &amp;lt;todd@cloudera.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/396/#review513&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/#review513&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;This looks good, except that it requires the HDFS patches to be in place to even compile. Although I think it&apos;s OK to not fix the bug in the case that we&apos;re on stock HDFS, I think we still need to be able to run, buggily.&lt;/p&gt;

&lt;p&gt;Did we determine that all of the other solutions were flawed/too complicated?&lt;/p&gt;


&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/396/#comment2061&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/#comment2061&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Check return value of rename (this is one of those stupid APIs that returns false instead of throwing)&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/396/#comment2062&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/#comment2062&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    rather than reassigning, just pass splitDir below?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/ProcessServerShutdown.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/396/#comment2064&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/#comment2064&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    extract &quot;-splitting&quot; out to a constant?&lt;br/&gt;
    Or can we move some of this common code into HLog?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/ProcessServerShutdown.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/396/#comment2063&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/#comment2063&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    maybe:&lt;br/&gt;
    assert !(logDirExists &amp;amp;&amp;amp; splitDirExists) : &quot;Both &quot; + rsLogDir + &quot; and &quot; + rsSplitDir + &quot; exist&quot;;&lt;br/&gt;
    so if the assertion failure happens it&apos;s more understandable&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Todd&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12893371" author="hbasereviewboard" created="Wed, 28 Jul 2010 21:21:18 +0000"  >&lt;p&gt;Message from: &quot;Nicolas&quot; &amp;lt;nspiegelberg@facebook.com&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-28 10:17:14, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; This looks good, except that it requires the HDFS patches to be in place to even compile. Although I think it&apos;s OK to not fix the bug in the case that we&apos;re on stock HDFS, I think we still need to be able to run, buggily.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Did we determine that all of the other solutions were flawed/too complicated?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; had some lengthy discussions that ultimately led to this route.  For 0.21 + 0.22, only &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6840&quot; title=&quot;Support non-recursive create() in FileSystem &amp;amp; SequenceFile.Writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6840&quot;&gt;&lt;del&gt;HADOOP-6840&lt;/del&gt;&lt;/a&gt; is needed.  That is a very minor change consisting of only small API additions (so, no regression needed) that Dhruba &amp;amp; I think the lack of risk will make it easy to approve.  0.20-append needs a couple more JIRAs, but that should be even less flack.  As long as we ship with 0.20-append HDFS or newer, we&apos;ll be fine.&lt;/p&gt;

&lt;p&gt;I understand that this diff is early and we will have to wait until we ship with the 0.20-append JAR before application.  Basically, I also wanted to show that the API change indeed fixes our issue painlessly.  Any +1s on &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6840&quot; title=&quot;Support non-recursive create() in FileSystem &amp;amp; SequenceFile.Writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6840&quot;&gt;&lt;del&gt;HADOOP-6840&lt;/del&gt;&lt;/a&gt; would be appreciated &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Your comment is that we should also backward-support 0.20.3?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-28 10:17:14, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java, line 650&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/396/diff/1/?file=3523#file3523line650&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/diff/1/?file=3523#file3523line650&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Check return value of rename (this is one of those stupid APIs that returns false instead of throwing)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;will do&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-28 10:17:14, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java, line 651&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/396/diff/1/?file=3523#file3523line651&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/diff/1/?file=3523#file3523line651&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     rather than reassigning, just pass splitDir below?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;there are 2 cases:&lt;br/&gt;
#1 : the master hasn&apos;t already tried to split, hits this code&lt;br/&gt;
#2 : master tries to split, dies while splitting, backup master appears&lt;/p&gt;

&lt;p&gt;In case #2, you don&apos;t need to rename the directory because an region cannot run on a directory of that name.  Therefore, the &apos;logDir&apos; is correct from the get-go and doesn&apos;t need a rename.  So, you need to either have duplicate splitLog code or update &apos;logDir&apos;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-28 10:17:14, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/master/ProcessServerShutdown.java, line 297&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/396/diff/1/?file=3524#file3524line297&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/diff/1/?file=3524#file3524line297&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     extract &quot;-splitting&quot; out to a constant?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Or can we move some of this common code into HLog?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;sure.  will do&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-28 10:17:14, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/master/ProcessServerShutdown.java, line 300&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/396/diff/1/?file=3524#file3524line300&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/diff/1/?file=3524#file3524line300&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     maybe:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     assert !(logDirExists &amp;amp;&amp;amp; splitDirExists) : &quot;Both &quot; + rsLogDir + &quot; and &quot; + rsSplitDir + &quot; exist&quot;;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     so if the assertion failure happens it&apos;s more understandable&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;will do&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Nicolas&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/396/#review513&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/#review513&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12893375" author="hbasereviewboard" created="Wed, 28 Jul 2010 21:26:16 +0000"  >&lt;p&gt;Message from: &quot;Todd Lipcon&quot; &amp;lt;todd@cloudera.com&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-28 10:17:14, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; This looks good, except that it requires the HDFS patches to be in place to even compile. Although I think it&apos;s OK to not fix the bug in the case that we&apos;re on stock HDFS, I think we still need to be able to run, buggily.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Did we determine that all of the other solutions were flawed/too complicated?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Nicolas wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; had some lengthy discussions that ultimately led to this route.  For 0.21 + 0.22, only &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6840&quot; title=&quot;Support non-recursive create() in FileSystem &amp;amp; SequenceFile.Writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6840&quot;&gt;&lt;del&gt;HADOOP-6840&lt;/del&gt;&lt;/a&gt; is needed.  That is a very minor change consisting of only small API additions (so, no regression needed) that Dhruba &amp;amp; I think the lack of risk will make it easy to approve.  0.20-append needs a couple more JIRAs, but that should be even less flack.  As long as we ship with 0.20-append HDFS or newer, we&apos;ll be fine.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I understand that this diff is early and we will have to wait until we ship with the 0.20-append JAR before application.  Basically, I also wanted to show that the API change indeed fixes our issue painlessly.  Any +1s on &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6840&quot; title=&quot;Support non-recursive create() in FileSystem &amp;amp; SequenceFile.Writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6840&quot;&gt;&lt;del&gt;HADOOP-6840&lt;/del&gt;&lt;/a&gt; would be appreciated &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Your comment is that we should also backward-support 0.20.3?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yea, I think we decided at one point that we should be able to run against a vanilla apache cluster, just that it would be &quot;at your own risk&quot; - ie that the bug fixes wouldn&apos;t necessarily work. EG this is why we do the reflection to check for the syncFs() method and warn in the case when it&apos;s not there, but continue to function.&lt;/p&gt;

&lt;p&gt;In this patch, it would actually fail to work at all, since the RPC for non-recursive create would get an error at the NN.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Todd&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/396/#review513&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/#review513&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12893382" author="hbasereviewboard" created="Wed, 28 Jul 2010 21:40:16 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-28 10:17:14, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; This looks good, except that it requires the HDFS patches to be in place to even compile. Although I think it&apos;s OK to not fix the bug in the case that we&apos;re on stock HDFS, I think we still need to be able to run, buggily.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Did we determine that all of the other solutions were flawed/too complicated?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Nicolas wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; had some lengthy discussions that ultimately led to this route.  For 0.21 + 0.22, only &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6840&quot; title=&quot;Support non-recursive create() in FileSystem &amp;amp; SequenceFile.Writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6840&quot;&gt;&lt;del&gt;HADOOP-6840&lt;/del&gt;&lt;/a&gt; is needed.  That is a very minor change consisting of only small API additions (so, no regression needed) that Dhruba &amp;amp; I think the lack of risk will make it easy to approve.  0.20-append needs a couple more JIRAs, but that should be even less flack.  As long as we ship with 0.20-append HDFS or newer, we&apos;ll be fine.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I understand that this diff is early and we will have to wait until we ship with the 0.20-append JAR before application.  Basically, I also wanted to show that the API change indeed fixes our issue painlessly.  Any +1s on &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6840&quot; title=&quot;Support non-recursive create() in FileSystem &amp;amp; SequenceFile.Writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6840&quot;&gt;&lt;del&gt;HADOOP-6840&lt;/del&gt;&lt;/a&gt; would be appreciated &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Your comment is that we should also backward-support 0.20.3?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yea, I think we decided at one point that we should be able to run against a vanilla apache cluster, just that it would be &quot;at your own risk&quot; - ie that the bug fixes wouldn&apos;t necessarily work. EG this is why we do the reflection to check for the syncFs() method and warn in the case when it&apos;s not there, but continue to function.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;In this patch, it would actually fail to work at all, since the RPC for non-recursive create would get an error at the NN.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We&apos;ll ship with a branch-0.20-append but yeah, current thinking is that we should be able to run on an hadoop 0.20.x that does not have a working sync.&lt;/p&gt;

&lt;p&gt;We&apos;ve been known to change our minds.  Start a discussion out on dev list if want to argue hbase 0.90.x requires a working sync.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/396/#review513&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/#review513&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12893390" author="hbasereviewboard" created="Wed, 28 Jul 2010 22:04:31 +0000"  >&lt;p&gt;Message from: &quot;Nicolas&quot; &amp;lt;nspiegelberg@facebook.com&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-28 10:17:14, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; This looks good, except that it requires the HDFS patches to be in place to even compile. Although I think it&apos;s OK to not fix the bug in the case that we&apos;re on stock HDFS, I think we still need to be able to run, buggily.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Did we determine that all of the other solutions were flawed/too complicated?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Nicolas wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; had some lengthy discussions that ultimately led to this route.  For 0.21 + 0.22, only &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6840&quot; title=&quot;Support non-recursive create() in FileSystem &amp;amp; SequenceFile.Writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6840&quot;&gt;&lt;del&gt;HADOOP-6840&lt;/del&gt;&lt;/a&gt; is needed.  That is a very minor change consisting of only small API additions (so, no regression needed) that Dhruba &amp;amp; I think the lack of risk will make it easy to approve.  0.20-append needs a couple more JIRAs, but that should be even less flack.  As long as we ship with 0.20-append HDFS or newer, we&apos;ll be fine.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I understand that this diff is early and we will have to wait until we ship with the 0.20-append JAR before application.  Basically, I also wanted to show that the API change indeed fixes our issue painlessly.  Any +1s on &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6840&quot; title=&quot;Support non-recursive create() in FileSystem &amp;amp; SequenceFile.Writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6840&quot;&gt;&lt;del&gt;HADOOP-6840&lt;/del&gt;&lt;/a&gt; would be appreciated &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Your comment is that we should also backward-support 0.20.3?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yea, I think we decided at one point that we should be able to run against a vanilla apache cluster, just that it would be &quot;at your own risk&quot; - ie that the bug fixes wouldn&apos;t necessarily work. EG this is why we do the reflection to check for the syncFs() method and warn in the case when it&apos;s not there, but continue to function.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;In this patch, it would actually fail to work at all, since the RPC for non-recursive create would get an error at the NN.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;We&apos;ll ship with a branch-0.20-append but yeah, current thinking is that we should be able to run on an hadoop 0.20.x that does not have a working sync.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;We&apos;ve been known to change our minds.  Start a discussion out on dev list if want to argue hbase 0.90.x requires a working sync.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;For this patch to work (or at least, not degrade) 0.20, we just need to switch on the SequenceFile() constructor.  I&apos;ll look into that.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Nicolas&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/396/#review513&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/#review513&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12895839" author="hbasereviewboard" created="Thu, 5 Aug 2010 22:09:45 +0000"  >&lt;p&gt;Message from: &quot;Nicolas&quot; &amp;lt;nspiegelberg@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/396/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-08-05 14:55:17.886769)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;updated per Todd&apos;s comments.  uses reflection for the new API, so now compiles properly with patched + unpatched clients&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;There is a very corner case when bad things could happen(ie data loss):&lt;/p&gt;

&lt;p&gt;1) RS #1 is going to roll its HLog - not yet created the new one, old one will get no more writes&lt;br/&gt;
2) RS #1 enters GC Pause of Death&lt;br/&gt;
3) Master lists HLog files of RS#1 that is has to split as RS#1 is dead, starts splitting&lt;br/&gt;
4) RS #1 wakes up, created the new HLog (previous one was rolled) and appends an edit - which is lost&lt;/p&gt;

&lt;p&gt;Note that this fix requires a healthy dose of HDFS prerequisites: &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-617&quot; title=&quot;Support for non-recursive create() in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-617&quot;&gt;&lt;del&gt;HDFS-617&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6840&quot; title=&quot;Support non-recursive create() in FileSystem &amp;amp; SequenceFile.Writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6840&quot;&gt;&lt;del&gt;HADOOP-6840&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6886&quot; title=&quot;LocalFileSystem Needs createNonRecursive API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6886&quot;&gt;&lt;del&gt;HADOOP-6886&lt;/del&gt;&lt;/a&gt;.  I encourage you to review those as well, give feedback, and hopefully give +1s so we can push the changes through.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2312&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2312&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/HConstants.java 982788 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 982788 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/ProcessServerShutdown.java 982788 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 982788 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java 982788 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java 982788 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/396/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn test;&lt;br/&gt;
bin/start-hbase.sh&lt;br/&gt;
bin/hbase shell &amp;lt; scan &apos;.META.&apos;, get, put, etc&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Nicolas&lt;/p&gt;

</comment>
                            <comment id="12896384" author="stack" created="Sun, 8 Aug 2010 16:41:46 +0000"  >&lt;p&gt;Submitting patch; v2 is up on review.hbase.org.&lt;/p&gt;</comment>
                            <comment id="12896385" author="hbasereviewboard" created="Sun, 8 Aug 2010 17:03:37 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/396/#review752&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/#review752&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;Looks good to me.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12896680" author="stack" created="Mon, 9 Aug 2010 19:52:00 +0000"  >&lt;p&gt;When I apply this patch to trunk, unit tests hang.  Are we missing something from our hadoop Nicolas?  We have 0.20.3-append-r964955-1240 committed to trunk (Thats the svn revision and patch 1240 applied).&lt;/p&gt;

&lt;p&gt;I see for example that the TestZookeeper is stuck doing this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

2010-08-09 12:45:23,964 WARN  [IPC Server handler 6 on 62023] namenode.FSNamesystem(1166): DIR* NameSystem.startFile: failed to create file /user/Stack/.logs/h135.sfo.stumble.net,62051,1281382952055-splitting/10.10.1.135%3A62051.1281382952241 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; DFSClient_-1591590456 on client 127.0.0.1, because &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; file is already being created by DFSClient_hb_m_10.10.1.135:62037 on 127.0.0.1
2010-08-09 12:45:23,965 WARN  [master] util.FSUtils(631): Waited 151520ms &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; lease recovery on hdfs:&lt;span class=&quot;code-comment&quot;&gt;//localhost:62023/user/Stack/.logs/h135.sfo.stumble.net,62051,1281382952055-splitting/10.10.1.135%3A62051.1281382952241:org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException: failed to create file /user/Stack/.logs/h135.sfo.stumble.net,62051,1281382952055-splitting/10.10.1.135%3A62051.1281382952241 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; DFSClient_-1591590456 on client 127.0.0.1, because &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; file is already being created by DFSClient_hb_m_10.10.1.135:62037 on 127.0.0.1
&lt;/span&gt;        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInternal(FSNamesystem.java:1093)
        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.appendFile(FSNamesystem.java:1181)
        at org.apache.hadoop.hdfs.server.namenode.NameNode.append(NameNode.java:396)
        at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:508)
        at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:961)
        at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:957)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAs(Subject.java:396)
        at org.apache.hadoop.ipc.Server$Handler.run(Server.java:955)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This test passes if I do not have /&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt;-2.patch  in place.&lt;/p&gt;</comment>
                            <comment id="12931190" author="stack" created="Thu, 11 Nov 2010 20:38:29 +0000"  >&lt;p&gt;Moving out of 0.90 after some discussion off-list between Nicolas and Jon.  Not having this issue in place means possible &quot;dataloss&quot; (Nicolas)... but Jon comes back &quot;It&apos;s data loss only in case where you have a GC pause of death (long enough that the RS is expired) and then I think there&apos;s one or two more edge cases that would have to be hit, and then could be data loss.&quot;&lt;/p&gt;

&lt;p&gt;Leaving the issue critical but not a blocker on 0.90.&lt;/p&gt;</comment>
                            <comment id="12971878" author="nspiegelberg" created="Wed, 15 Dec 2010 22:52:11 +0000"  >&lt;p&gt;note that we hit this issue twice this week.  raised priority for us&lt;/p&gt;</comment>
                            <comment id="12971979" author="stack" created="Thu, 16 Dec 2010 06:39:08 +0000"  >&lt;p&gt;Is patch ready to go Nicolas?&lt;/p&gt;</comment>
                            <comment id="12974029" author="hbasereviewboard" created="Wed, 22 Dec 2010 03:08:03 +0000"  >&lt;p&gt;Message from: &quot;Nicolas&quot; &amp;lt;nspiegelberg@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/396/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-12-21 19:06:32.166768)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Version for 0.90.  This version utilizes a new HDFS patch to forcibly recover a file lease (forthcoming).  TestZooKeeper will fail without this patch because it needs to wait until the soft lease expires otherwise.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;There is a very corner case when bad things could happen(ie data loss):&lt;/p&gt;

&lt;p&gt;1) RS #1 is going to roll its HLog - not yet created the new one, old one will get no more writes&lt;br/&gt;
2) RS #1 enters GC Pause of Death&lt;br/&gt;
3) Master lists HLog files of RS#1 that is has to split as RS#1 is dead, starts splitting&lt;br/&gt;
4) RS #1 wakes up, created the new HLog (previous one was rolled) and appends an edit - which is lost&lt;/p&gt;

&lt;p&gt;Note that this fix requires a healthy dose of HDFS prerequisites: &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-617&quot; title=&quot;Support for non-recursive create() in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-617&quot;&gt;&lt;del&gt;HDFS-617&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6840&quot; title=&quot;Support non-recursive create() in FileSystem &amp;amp; SequenceFile.Writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6840&quot;&gt;&lt;del&gt;HADOOP-6840&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6886&quot; title=&quot;LocalFileSystem Needs createNonRecursive API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6886&quot;&gt;&lt;del&gt;HADOOP-6886&lt;/del&gt;&lt;/a&gt;.  I encourage you to review those as well, give feedback, and hopefully give +1s so we can push the changes through.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2312&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2312&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/HConstants.java 1051398 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java 1051398 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 1051398 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java 1051398 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java 1051398 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java 1051398 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/396/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn test;&lt;br/&gt;
bin/start-hbase.sh&lt;br/&gt;
bin/hbase shell &amp;lt; scan &apos;.META.&apos;, get, put, etc&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Nicolas&lt;/p&gt;

</comment>
                            <comment id="12974396" author="hbasereviewboard" created="Wed, 22 Dec 2010 21:15:04 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/396/#review2146&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/396/#review2146&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;Below looks good.  Doesn&apos;t work w/o the hadoop issues?  I still need to review those?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="13002774" author="dhruba" created="Fri, 4 Mar 2011 18:42:59 +0000"  >&lt;p&gt;hi folks, I think we would like this to get into the trunk and 0.90 release because it is a data-loss issue. Is that possible?&lt;/p&gt;</comment>
                            <comment id="13002778" author="stack" created="Fri, 4 Mar 2011 18:54:00 +0000"  >&lt;p&gt;Looking... (I&apos;m on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3285&quot; title=&quot;Hlog recovery takes too much time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3285&quot;&gt;&lt;del&gt;HBASE-3285&lt;/del&gt;&lt;/a&gt;, which overlaps this patch).&lt;/p&gt;</comment>
                            <comment id="13002865" author="stack" created="Fri, 4 Mar 2011 23:30:15 +0000"  >&lt;p&gt;I reviewed the patch again.  The necessary createWriter method is missing.  You want to apply the listed patches to 0.20-append Dhruba (&lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6840&quot; title=&quot;Support non-recursive create() in FileSystem &amp;amp; SequenceFile.Writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6840&quot;&gt;&lt;del&gt;HADOOP-6840&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6886&quot; title=&quot;LocalFileSystem Needs createNonRecursive API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6886&quot;&gt;&lt;del&gt;HADOOP-6886&lt;/del&gt;&lt;/a&gt;)?  They look pretty big but they each seem to have append branch versions.  Are you running them at your house?  Nicolas is using reflection to look for the features presence so we can apply it (The test his patch adds fails though because of the missing functionality &amp;#8211; I can fix that on commit).&lt;/p&gt;</comment>
                            <comment id="13002866" author="stack" created="Fri, 4 Mar 2011 23:31:02 +0000"  >&lt;p&gt;Oh, &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-617&quot; title=&quot;Support for non-recursive create() in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-617&quot;&gt;&lt;del&gt;HDFS-617&lt;/del&gt;&lt;/a&gt; too.&lt;/p&gt;</comment>
                            <comment id="13002867" author="stack" created="Fri, 4 Mar 2011 23:31:40 +0000"  >&lt;p&gt;And this patch causes TestReplication to fail.  I can look into that.&lt;/p&gt;</comment>
                            <comment id="13010561" author="stack" created="Thu, 24 Mar 2011 05:14:09 +0000"  >&lt;p&gt;Moving to 0.92.  We don&apos;t have the API in HDFS to support Nicolas&apos;s patch.&lt;/p&gt;</comment>
                            <comment id="13011626" author="wjiangwen" created="Sat, 26 Mar 2011 13:06:16 +0000"  >&lt;p&gt;the possible solution.&lt;br/&gt;
follow the process to roll log&lt;br/&gt;
1. create a new log file&lt;br/&gt;
2. check is alive on zookeeper&lt;br/&gt;
3. append edits&lt;/p&gt;</comment>
                            <comment id="13134620" author="stack" created="Mon, 24 Oct 2011 23:16:30 +0000"  >&lt;p&gt;We don&apos;t have the hdfs support for this (0.20.205.0 or CDH).  Moving out to 0.94.0.&lt;/p&gt;</comment>
                            <comment id="13134629" author="nspiegelberg" created="Mon, 24 Oct 2011 23:24:20 +0000"  >&lt;p&gt;@stack: since we have proper reflection, can we not apply this jira &amp;amp; mark the test as broken?  that way, customers can have this fix if they upgrade to the proper version of HDFS instead of requiring an HBase upgrade as well&lt;/p&gt;</comment>
                            <comment id="13134736" author="stack" created="Tue, 25 Oct 2011 03:56:03 +0000"  >&lt;p&gt;Yes Nicolas.  Pulling it back in.  Let me try and apply latest version of the patch.&lt;/p&gt;</comment>
                            <comment id="13134740" author="nspiegelberg" created="Tue, 25 Oct 2011 04:05:24 +0000"  >&lt;p&gt;tried to apply this onto our internal 92 branch and noticed that the Distributed Log Splitter broke this patch.  Will work and resubmit.  I think this is critical to get into 92 because of data loss issues, however.&lt;/p&gt;</comment>
                            <comment id="13137917" author="phabricator@reviews.facebook.net" created="Fri, 28 Oct 2011 02:39:32 +0000"  >&lt;p&gt;nspiegelberg requested code review of &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;br/&gt;
Reviewers: JIRA&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; Possible data loss when RS goes into GC pause while rolling HLog&lt;/p&gt;

&lt;p&gt;  There is a very corner case when bad things could happen(ie data loss):&lt;/p&gt;

&lt;p&gt;  1)	RS #1 is going to roll its HLog - not yet created the new one, old one will get no more writes&lt;br/&gt;
  2)	RS #1 enters GC Pause of Death&lt;br/&gt;
  3)	Master lists HLog files of RS#1 that is has to split as RS#1 is dead, starts splitting&lt;br/&gt;
  4)	RS #1 wakes up, created the new HLog (previous one was rolled) and appends an edit - which is lost&lt;/p&gt;

&lt;p&gt;  The following seems like a possible solution:&lt;/p&gt;

&lt;p&gt;  1)	Master detects RS#1 is dead&lt;br/&gt;
  2)	The master renames the /hbase/.logs/&amp;lt;regionserver name&amp;gt;  directory to something else (say /hbase/.logs/&amp;lt;regionserver name&amp;gt;-dead)&lt;br/&gt;
  3)	Add mkdir support (as opposed to mkdirs) to HDFS - so that a file create fails if the directory doesn&apos;t exist. Dhruba tells me this is very doable.&lt;br/&gt;
  4)	RS#1 comes back up and is not able create the new hlog. It restarts itself.&lt;/p&gt;

&lt;p&gt;TEST PLAN&lt;br/&gt;
  EMPTY&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/p&gt;

&lt;p&gt;MANAGE HERALD DIFFERENTIAL RULES&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/view/differential/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/view/differential/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WHY DID I GET THIS EMAIL?&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/transcript/213/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/transcript/213/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tip: use the X-Herald-Rules header to filter Herald messages in your client.&lt;/p&gt;</comment>
                            <comment id="13137921" author="nspiegelberg" created="Fri, 28 Oct 2011 02:43:39 +0000"  >&lt;p&gt;Have a review up that integrates distributed log splitting. Note that it also fixes that elusive bug in TestReplication, which was the original reason we delayed checking this patch in.  The problem was that ReplicationSource would check in the alive RS folder instead of the dead RS folder to verify that it should stall and wait for Log Splitting to finish and move to the OldLogs directory.  If JD could please verify.  I think Prakash has a little more work to do here for the ProcessServerDeath case, but this is an existing bug.  We should file another JIRA for that and get this one committed &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13137987" author="phabricator@reviews.facebook.net" created="Fri, 28 Oct 2011 04:16:32 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:232 Should this assignment be exchanged with line 231 ?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:256 If fs.rename() failed, should this assignment be skipped if fs.exists(splitDir) returns false ?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:275 Should read &quot; because of:&quot;&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java:831 Where would this sentence come from ?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13137992" author="phabricator@reviews.facebook.net" created="Fri, 28 Oct 2011 04:24:32 +0000"  >&lt;p&gt;nspiegelberg has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:232 231 basically resets the interrupt flag so the next blocking call will get an InterruptException.  The other acceptable way to handle this scenario is to throw an InterruptedIOException, but we don&apos;t need the split to finish, so an IOE really isn&apos;t necessary.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:254 this needs an IOE.  patch porting problem&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java:831 from JUnit documentation&lt;/p&gt;

&lt;p&gt;    @Ignore takes an optional default parameter if you want to record why a test is being ignored&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13137997" author="phabricator@reviews.facebook.net" created="Fri, 28 Oct 2011 04:32:32 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java:831 HBase TRUNK uses 0.20.205&lt;br/&gt;
  The @Ignore can be omitted, right ?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13138002" author="phabricator@reviews.facebook.net" created="Fri, 28 Oct 2011 04:36:32 +0000"  >&lt;p&gt;stack has requested changes to the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;  Looks good.  A few minor items.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java:188 Should this define be up here?  Why not down in HLog?  (I favor keeping defines in classes they pertain to &amp;#8211; could be ugly though if we need to go cross packages to get at a define.  Master package would need to reach down into the wal package?  If so, I suppose, leave it up here in HConstants).&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:192 The former code bracketed the return.  Either put the return on same line as if or else add back the brackets I&apos;d say.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:223 Why not call server abort?  Thats the usual idiom.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:227 Why this?  And 30 seconds is a long time (Should it be configurable)?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:254 I suppose this not the end of the world.  A regionserver could add a new log I suppose but chances of failed rename and RS adding new WAL are probably fairly low.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java:126 Superfluous logging I&apos;d say.  Especially at info level.  Log when we DON&apos;T have this feature (maybe do it debug; if every file open has one of these info logs, then its going to generate lots of queries up in mailing lists, etc.  At DEBUG it won&apos;t seem as critical)&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java:831 Nice&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13138426" author="phabricator@reviews.facebook.net" created="Fri, 28 Oct 2011 15:11:32 +0000"  >&lt;p&gt;Kannan has added CCs to the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;br/&gt;
Added CCs: Kannan&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13138542" author="phabricator@reviews.facebook.net" created="Fri, 28 Oct 2011 17:11:32 +0000"  >&lt;p&gt;nspiegelberg has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:192 will fix.  fyi : this got auto-formatted by our apache template&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java:831 @tedyu this patch is for 0.92.  please read the JIRA thread before this patch&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13138554" author="yuzhihong@gmail.com" created="Fri, 28 Oct 2011 17:19:14 +0000"  >&lt;p&gt;0.92 is using hadoop 0.20.205 to build.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
zhihyu$ svn log pom.xml | head
------------------------------------------------------------------------
r1188404 | stack | 2011-10-24 14:57:04 -0700 (Mon, 24 Oct 2011) | 1 line

HBASE-4437 Update hadoop in 0.92 (0.20.205?)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13138572" author="yuzhihong@gmail.com" created="Fri, 28 Oct 2011 17:34:26 +0000"  >&lt;p&gt;I tried to run TestHLogSplit#testLogRollAfterSplitStart after commenting out @Ignore directive under 0.92 and TRUNK.&lt;br/&gt;
I got same result:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Failed tests:   testLogRollAfterSplitStart(org.apache.hadoop.hbase.regionserver.wal.TestHLogSplit): rollWriter() did not &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; any exception.

Tests run: 1, Failures: 1, Errors: 0, Skipped: 0
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13138865" author="phabricator@reviews.facebook.net" created="Fri, 28 Oct 2011 22:28:32 +0000"  >&lt;p&gt;nspiegelberg has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;  sending a new diff.  note that Phabricator has a nifty diff-compare tool for you to make it easy to see my code changes in response to your commentary  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:223 Prakash did the Exception handling part of this code, so I&apos;ll let him follow up if you need more info.  Basically, we are still in the initialization phase (we are in the server abort thread right now), where server abort should be used during normal operation.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13138908" author="phabricator@reviews.facebook.net" created="Fri, 28 Oct 2011 23:09:32 +0000"  >&lt;p&gt;khemani has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:223 Basically what Nicolas said ... setting the abort flag here will not have any immediate effect.&lt;/p&gt;

&lt;p&gt;  From HMaster code&lt;br/&gt;
    status.setStatus(&quot;Splitting logs after master startup&quot;);&lt;br/&gt;
      this.fileSystemManager.&lt;br/&gt;
    splitLogAfterStartup(this.serverManager.getOnlineServers().keySet());&lt;br/&gt;
    // Make sure root and meta assigned before proceeding.&lt;br/&gt;
    assignRootAndMeta(status);&lt;/p&gt;

&lt;p&gt;  the master thread will try to assignRootAndMeta() even if splitLogAfterStartup() returns with abort flag set. May be if HMaster.abort() had set the interrupt flag on at least the main master thread then it might have worked ...&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13138942" author="phabricator@reviews.facebook.net" created="Fri, 28 Oct 2011 23:27:32 +0000"  >&lt;p&gt;stack has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;  I don&apos;t see the new diff Nicolas.  I presume you have not uploaded it yet?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13141486" author="nspiegelberg" created="Tue, 1 Nov 2011 19:34:49 +0000"  >&lt;p&gt;It doesn&apos;t look like 0.20.0.205 has any of the HDFS/Hadoop patches that we need here.  That is supposed to be the append release, correct?  I worked with Suresh and some other HDFS committers to get this in a couple months ago.  Maybe something got lost in the notes?&lt;/p&gt;</comment>
                            <comment id="13141655" author="phabricator@reviews.facebook.net" created="Tue, 1 Nov 2011 21:55:32 +0000"  >&lt;p&gt;nspiegelberg updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;br/&gt;
Reviewers: JIRA, stack&lt;/p&gt;

&lt;p&gt;  Addressed Stack &amp;amp; Ted&apos;s change requests.  Integrated some fixes that Prakash found.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/p&gt;</comment>
                            <comment id="13141672" author="phabricator@reviews.facebook.net" created="Tue, 1 Nov 2011 22:09:32 +0000"  >&lt;p&gt;nspiegelberg updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;br/&gt;
Reviewers: JIRA, stack&lt;/p&gt;

&lt;p&gt;  Minor touchups + reinsert @Ignore since 0.20.205 doesn&apos;t have the critical patches necessary.  205.1 should however&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/p&gt;</comment>
                            <comment id="13141936" author="phabricator@reviews.facebook.net" created="Wed, 2 Nov 2011 05:34:32 +0000"  >&lt;p&gt;khemani has accepted the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;  Looks good to me.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:201-205 In the original patch the -splitting wouldn&apos;t be stripped off over here.  With the current diff, a region-server which was earlier known to be dead will get another opportunity to be treated as alive. But I don&apos;t think that will happen and this is fine.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13141943" author="phabricator@reviews.facebook.net" created="Wed, 2 Nov 2011 05:56:32 +0000"  >&lt;p&gt;stack has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;  +1 on commit.  Minor comments that should not get in way of this patch.  Attach the patch Nicolas to JIRA and then submit the patch and let the patch-build run its course.  Good stuff.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:208 trivial nit &amp;#8211; not important: FYI, I prefer the operator at EOF rather than at start; when a hanging operator, its useful as signifier of more to come (Did you format this with your apache formatter?)&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:201 Next time, this messing w/ suffix belongs out in a method.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:253 Should we throw only if &quot;hbase.hlog.split.skip.errors&quot; is NOT set?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java:84 These gymnastics belong out in a dedicated method rather than inline here in init method.  Next time.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13141944" author="phabricator@reviews.facebook.net" created="Wed, 2 Nov 2011 05:58:32 +0000"  >&lt;p&gt;stack has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;  Hmm... how do I get the nice green border around my comment like Prakash got?  Do I &apos;Resign as reviewer&apos;?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13142434" author="phabricator@reviews.facebook.net" created="Wed, 2 Nov 2011 19:17:32 +0000"  >&lt;p&gt;nspiegelberg has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;  @stack the green awesome border goes around comments where the action is &quot;Accept Diff&quot;.  It&apos;s the equivalent of &quot;ship it&quot; on Review Board.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:201-205 I think that ServerName.parseServerName() will get a parse error unless we do this.  Will the server get a chance to be treated as alive?  I&apos;m guessing something like your scenario could only happen if the same server rebooted and re-registered before we got here.  In that case, the start code will be different.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:208 yes.  this was formatted with the apache thingy&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java:253 hmmm.  Interesting question.  We&apos;ve never actually handled this case (even before distributed log splitting).  I think we should punt on this for right now and address it later.  Maybe a good idea would be to &quot;continue&quot; instead of throw an error&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13142441" author="phabricator@reviews.facebook.net" created="Wed, 2 Nov 2011 19:31:32 +0000"  >&lt;p&gt;nspiegelberg has committed the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;COMMITS&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/rHBASE1196773&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/rHBASE1196773&lt;/a&gt;&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/rHBASENINETWOBRANCH1196768&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/rHBASENINETWOBRANCH1196768&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13142571" author="phabricator@reviews.facebook.net" created="Wed, 2 Nov 2011 21:33:32 +0000"  >&lt;p&gt;stack has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;  I don&apos;t seem to have the &apos;accept patch&apos; option (Pardon my being dumb on this stuff)&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;COMMITS&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/rHBASE1196773&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/rHBASE1196773&lt;/a&gt;&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/rHBASENINETWOBRANCH1196768&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/rHBASENINETWOBRANCH1196768&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13142574" author="phabricator@reviews.facebook.net" created="Wed, 2 Nov 2011 21:37:32 +0000"  >&lt;p&gt;nspiegelberg has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling HLog&quot;.&lt;/p&gt;

&lt;p&gt;  @stack you don&apos;t have that option because the diff has already been accepted by Prakash.  Can only &apos;ship it&apos; once.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D99&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;COMMITS&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/rHBASE1196773&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/rHBASE1196773&lt;/a&gt;&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/rHBASENINETWOBRANCH1196768&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/rHBASENINETWOBRANCH1196768&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13142645" author="hudson" created="Wed, 2 Nov 2011 22:46:46 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2402 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2402/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2402/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling&lt;br/&gt;
HLog&lt;/p&gt;

&lt;p&gt;Summary:&lt;br/&gt;
There is a very corner case when bad things could happen(ie data loss):&lt;/p&gt;

&lt;p&gt;1)	RS #1 is going to roll its HLog - not yet created the new one, old one will&lt;br/&gt;
get no more writes&lt;br/&gt;
2)	RS #1 enters GC Pause of Death&lt;br/&gt;
3)	Master lists HLog files of RS#1 that is has to split as RS#1 is dead, starts&lt;br/&gt;
splitting&lt;br/&gt;
4)	RS #1 wakes up, created the new HLog (previous one was rolled) and appends an&lt;br/&gt;
edit - which is lost&lt;/p&gt;

&lt;p&gt;The following seems like a possible solution:&lt;/p&gt;

&lt;p&gt;1)	Master detects RS#1 is dead&lt;br/&gt;
2)	The master renames the /hbase/.logs/&amp;lt;regionserver name&amp;gt;  directory to&lt;br/&gt;
something else (say /hbase/.logs/&amp;lt;regionserver name&amp;gt;-dead)&lt;br/&gt;
3)	Add mkdir support (as opposed to mkdirs) to HDFS - so that a file create&lt;br/&gt;
fails if the directory doesn&apos;t exist. Dhruba tells me this is very doable.&lt;br/&gt;
4)	RS#1 comes back up and is not able create the new hlog. It restarts itself.&lt;/p&gt;

&lt;p&gt;Test Plan: EMPTY&lt;br/&gt;
Reviewers: JIRA, stack, khemani&lt;br/&gt;
Reviewed By: khemani&lt;br/&gt;
CC: tedyu, nspiegelberg, stack, Kannan, khemani, jgray&lt;br/&gt;
Differential Revision: 99&lt;/p&gt;

&lt;p&gt;nspiegelberg : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13142778" author="hudson" created="Thu, 3 Nov 2011 02:11:13 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #102 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/102/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/102/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2312&quot; title=&quot;Possible data loss when RS goes into GC pause while rolling HLog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2312&quot;&gt;&lt;del&gt;HBASE-2312&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Possible data loss when RS goes into GC pause while rolling&lt;br/&gt;
HLog&lt;/p&gt;

&lt;p&gt;Summary:&lt;br/&gt;
There is a very corner case when bad things could happen(ie data loss):&lt;/p&gt;

&lt;p&gt;1)	RS #1 is going to roll its HLog - not yet created the new one, old one will&lt;br/&gt;
get no more writes&lt;br/&gt;
2)	RS #1 enters GC Pause of Death&lt;br/&gt;
3)	Master lists HLog files of RS#1 that is has to split as RS#1 is dead, starts&lt;br/&gt;
splitting&lt;br/&gt;
4)	RS #1 wakes up, created the new HLog (previous one was rolled) and appends an&lt;br/&gt;
edit - which is lost&lt;/p&gt;

&lt;p&gt;The following seems like a possible solution:&lt;/p&gt;

&lt;p&gt;1)	Master detects RS#1 is dead&lt;br/&gt;
2)	The master renames the /hbase/.logs/&amp;lt;regionserver name&amp;gt;  directory to&lt;br/&gt;
something else (say /hbase/.logs/&amp;lt;regionserver name&amp;gt;-dead)&lt;br/&gt;
3)	Add mkdir support (as opposed to mkdirs) to HDFS - so that a file create&lt;br/&gt;
fails if the directory doesn&apos;t exist. Dhruba tells me this is very doable.&lt;br/&gt;
4)	RS#1 comes back up and is not able create the new hlog. It restarts itself.&lt;/p&gt;

&lt;p&gt;Test Plan: EMPTY&lt;br/&gt;
Reviewers: JIRA, stack, khemani&lt;br/&gt;
Reviewed By: khemani&lt;br/&gt;
CC: tedyu, nspiegelberg, stack, Kannan, khemani, jgray&lt;br/&gt;
Differential Revision: 99&lt;/p&gt;

&lt;p&gt;nspiegelberg : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13147503" author="nspiegelberg" created="Thu, 10 Nov 2011 05:42:43 +0000"  >&lt;p&gt;forgot to attach jira with the apache license grant&lt;/p&gt;</comment>
                            <comment id="15017177" author="lars_francke" created="Fri, 20 Nov 2015 12:42:10 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12461944">HBASE-2437</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12493935">HDFS-1554</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12530127">HBASE-4744</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12528760">HBASE-4674</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12465160">HBASE-2593</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                            <outwardlinks description="requires">
                                        <issuelink>
            <issuekey id="12435634">HDFS-617</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12467949">HADOOP-6840</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12470314">HADOOP-6886</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12493935">HDFS-1554</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12465156">HBASE-2592</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12501220" name="ASF.LICENSE.NOT.GRANTED--D99.1.patch" size="19693" author="phabricator@reviews.facebook.net" created="Fri, 28 Oct 2011 02:39:32 +0000"/>
                            <attachment id="12501846" name="ASF.LICENSE.NOT.GRANTED--D99.2.patch" size="19887" author="phabricator@reviews.facebook.net" created="Tue, 1 Nov 2011 21:55:32 +0000"/>
                            <attachment id="12501849" name="ASF.LICENSE.NOT.GRANTED--D99.3.patch" size="19975" author="phabricator@reviews.facebook.net" created="Tue, 1 Nov 2011 22:09:32 +0000"/>
                            <attachment id="12503169" name="HBASE-2312.patch" size="22361" author="nspiegelberg" created="Thu, 10 Nov 2011 05:42:43 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 12 Mar 2010 01:23:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26255</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05i33:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30027</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>