<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:06:05 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2946/HBASE-2946.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2946] Increment multiple columns in a row at once</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2946</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently there is no way to do multiple increments to a single row in one RPC.  This jira is about adding an HTable and HRegionInterface method to increment multiple columns within a single row at once.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12472995">HBASE-2946</key>
            <summary>Increment multiple columns in a row at once</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="streamy">Jonathan Gray</assignee>
                                    <reporter username="streamy">Jonathan Gray</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Sep 2010 02:24:04 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:25 +0000</updated>
                            <resolved>Tue, 26 Oct 2010 18:57:14 +0000</resolved>
                                                    <fixVersion>0.90.0</fixVersion>
                                    <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12904878" author="streamy" created="Wed, 1 Sep 2010 02:28:51 +0000"  >&lt;p&gt;Cross-row multi increments are over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2947&quot; title=&quot;MultiIncrement/MultiAppend (MultiGet functionality for increments and appends)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2947&quot;&gt;&lt;del&gt;HBASE-2947&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12904883" author="streamy" created="Wed, 1 Sep 2010 02:35:59 +0000"  >&lt;p&gt;There are two general approaches from an API perspective.&lt;/p&gt;

&lt;p&gt;One would be just adding another single HTable call, something like:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;long [] incrementColumns(byte [] row, byte [][] families, byte [][] qualifiers, long [] amounts)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The other would be to upgrade our increment friend to his own Increment class.  Then he&apos;d operate like Gets/Puts:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;long [] increment(new Increment(byte [] row).addColumn(family, qualifier1).addColumn(family, qualifier2))
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The latter would be more amenable to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2947&quot; title=&quot;MultiIncrement/MultiAppend (MultiGet functionality for increments and appends)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2947&quot;&gt;&lt;del&gt;HBASE-2947&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12904884" author="streamy" created="Wed, 1 Sep 2010 02:41:20 +0000"  >&lt;p&gt;Forgot the amount in the second API but you get the picture.&lt;/p&gt;

&lt;p&gt;Also, it would be nice if the multiple increments to a row would either all pass or all fail, so this would still be atomic.  Should be okay from WAL perspective but since it uses memstoreTS=0, not sure that will jive with the RWCC business.  @Ryan, thoughts on that?&lt;/p&gt;</comment>
                            <comment id="12904889" author="stack" created="Wed, 1 Sep 2010 03:32:26 +0000"  >&lt;p&gt;I like idea of an Increment class &amp;#8211; could it subclass Put?&lt;/p&gt;</comment>
                            <comment id="12904890" author="streamy" created="Wed, 1 Sep 2010 03:37:42 +0000"  >&lt;p&gt;It could I suppose.  Put is a list of KVs.  We could actually munge it into a list of KVs but otherwise it&apos;d be more like a Get with a familyMap.&lt;/p&gt;</comment>
                            <comment id="12917098" author="stack" created="Fri, 1 Oct 2010 23:36:53 +0000"  >&lt;p&gt;Moving out of 0.90.&lt;/p&gt;</comment>
                            <comment id="12924433" author="hbasereviewboard" created="Mon, 25 Oct 2010 02:30:10 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1088/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase, stack and khemani.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adds a new Increment class that allows multiple columns (each w/ own increment amount) in a single row being incremented in one call.&lt;/p&gt;

&lt;p&gt;The big wins here are being able to do multiple columns in a row in a single RPC and having it be appended/synced to the WAL in a single call.&lt;/p&gt;

&lt;p&gt;The current trade-off is that you lose atomicity to readers (ie. this does not currently use RWCC).  Eventually it could but for the current use case I am building this for, it&apos;s okay like this.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2946&quot; title=&quot;Increment multiple columns in a row at once&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2946&quot;&gt;&lt;del&gt;HBASE-2946&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2946&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2946&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java 1026930 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 1026930 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/Increment.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java 1026930 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java 1026930 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1026930 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 1026930 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 1026930 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1026930 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java 1026930 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java 1026930 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1088/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Added TestFromClientSide.testIncrement() which adds some client-side tests of Increment (and mixing w/ original icv call).  That passes and most the way through a test suite run.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;

</comment>
                            <comment id="12924441" author="hbasereviewboard" created="Mon, 25 Oct 2010 03:52:10 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-24 20:05:55, Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java, line 195&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1088/diff/2/?file=15905#file15905line195&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/diff/2/?file=15905#file15905line195&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     adding trailing spaces&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;that&apos;s my patch removing trailing spaces&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-24 20:05:55, Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java, line 201&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1088/diff/2/?file=15905#file15905line201&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/diff/2/?file=15905#file15905line201&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     adding more trailing spaces, your ide should have a feature to strip these&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;same here... i&apos;m on the right &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-24 20:05:55, Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java, line 495&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1088/diff/2/?file=15909#file15909line495&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/diff/2/?file=15909#file15909line495&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     yeah you cant compare against memstoreTS because if you have this in here you wont be able to ever increment values that were inserted into the future. you&apos;d just leave them there and continually see it in the &apos;get&apos; part and then in this code bit leave it in place and create a new KV that is masked by the future KV.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     It won&apos;t be possible for that insert to be part of an uncommitted change because of the rowlock however. So no atomic-rules will have been broken.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;i&apos;m not sure i follow.  am i doing it wrong?  this should be exactly the same as what&apos;s there.&lt;/p&gt;

&lt;p&gt;also, we are breaking the atomic-rules across the Increment.  Each column is not broken but across them it is (for reads not writes).&lt;/p&gt;

&lt;p&gt;It seems like we could use RWCC though for increments.  I think it&apos;s fine that if you&apos;re using increment you can never write data into it w/ another API (or really, with manual timestamps).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-24 20:05:55, Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java, line 377&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1088/diff/2/?file=15909#file15909line377&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/diff/2/?file=15909#file15909line377&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I&apos;m not sure how this code is optional for your new &apos;upsert&apos;, here are some use cases that I found painful:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     - when the KV is in snapshot we can create new KVs in memstore with the same TS.  This means you have a dup and before we had this new &apos;dup&apos; code it ruined counts badly.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     - the Math.max() bit it to ensure the new KV isnt being created in the past a bit and accidently duplicating  a timestamp inside the snapshot.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;what do you mean by optional?  there shouldn&apos;t be any real difference.  this code is basically the exact same code that was there but now pulled into a method that can be reused.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-24 20:05:55, Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java, line 466&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1088/diff/2/?file=15909#file15909line466&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/diff/2/?file=15909#file15909line466&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     im not sure i like the name upsert, it is too rdbms-y for me.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I need to poke more at this, but i prever the matchingRow() call, it encapsulates the getRowOffset junk, which leaks wayyy too much all over the place.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, could use those calls.  Not even sure why I changed this, wrote that part of this patch a few weeks ago.&lt;/p&gt;

&lt;p&gt;And it&apos;s an &quot;update if it exists, insert if not&quot; operation which I think of as an upsert operation.  Open to whatever tho.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1088/#review1641&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/#review1641&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12924728" author="hbasereviewboard" created="Mon, 25 Oct 2010 21:28:05 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-24 21:41:48, khemani wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/client/Increment.java, line 45&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1088/diff/2/?file=15904#file15904line45&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/diff/2/?file=15904#file15904line45&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     setWriteToWal() is missing?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yup.  will add.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-24 21:41:48, khemani wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/client/Increment.java, lines 46-47&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1088/diff/2/?file=15904#file15904line46&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/diff/2/?file=15904#file15904line46&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     why a navigable map? why not just a map?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;u can do things like tailMap[() with it.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-24 21:41:48, khemani wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java, line 3012&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1088/diff/2/?file=15907#file15907line3012&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/diff/2/?file=15907#file15907line3012&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I am not sure how it is ensured that the order of iteration over the columns in family.getValue.entrySet() is same as the order of results returned?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Also, if get finds multiple matches then will it return all of them? If yes then this will not work.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;familyMap and the map of columns to amounts are both TreeMaps ordered with Bytes.BYTES_COMPARATOR.  Results are also guaranteed to be in order.  And our Get has maxVersions=1 so we will not get multiple matches per column.&lt;/p&gt;


</comment>
                            <comment id="12924737" author="hbasereviewboard" created="Mon, 25 Oct 2010 21:44:15 +0000"  >&lt;p&gt;Message from: &quot;Ryan Rawson&quot; &amp;lt;ryanobjc@gmail.com&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-24 20:05:55, Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java, line 495&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1088/diff/2/?file=15909#file15909line495&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/diff/2/?file=15909#file15909line495&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     yeah you cant compare against memstoreTS because if you have this in here you wont be able to ever increment values that were inserted into the future. you&apos;d just leave them there and continually see it in the &apos;get&apos; part and then in this code bit leave it in place and create a new KV that is masked by the future KV.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     It won&apos;t be possible for that insert to be part of an uncommitted change because of the rowlock however. So no atomic-rules will have been broken.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;i&apos;m not sure i follow.  am i doing it wrong?  this should be exactly the same as what&apos;s there.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;also, we are breaking the atomic-rules across the Increment.  Each column is not broken but across them it is (for reads not writes).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;It seems like we could use RWCC though for increments.  I think it&apos;s fine that if you&apos;re using increment you can never write data into it w/ another API (or really, with manual timestamps).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;there is no easy way to include RWCC right now, because you have to be careful about &apos;committing&apos; the new values before removing the old ones.  This is a bit tricky because normally the RWCC &apos;commit&apos; happens at the HRegion level, and right now we are inside memstore/store.  Hopefully people won&apos;t need atomic reads of multi incremented values.  If one is doing counters this would be the case.  Javadoc should definitely yell about this.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-24 20:05:55, Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java, line 377&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1088/diff/2/?file=15909#file15909line377&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/diff/2/?file=15909#file15909line377&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I&apos;m not sure how this code is optional for your new &apos;upsert&apos;, here are some use cases that I found painful:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     - when the KV is in snapshot we can create new KVs in memstore with the same TS.  This means you have a dup and before we had this new &apos;dup&apos; code it ruined counts badly.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     - the Math.max() bit it to ensure the new KV isnt being created in the past a bit and accidently duplicating  a timestamp inside the snapshot.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;what do you mean by optional?  there shouldn&apos;t be any real difference.  this code is basically the exact same code that was there but now pulled into a method that can be reused.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The original updateColumnValue code was structured like this:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;look in snapshot&lt;/li&gt;
	&lt;li&gt;loop over kvset&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Create new KV, insert it&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;loop over kvset&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;But you only included the 2nd half.  Your new &apos;upsert&apos; only includes half the implementation of updateColumnValue. &lt;/p&gt;

&lt;p&gt;This comes up in this scenario:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;increment at TS=100&lt;/li&gt;
	&lt;li&gt;snapshot, now we have kvset={} and a KV, TS=100 in snapshot&lt;/li&gt;
	&lt;li&gt;increment at TS=100&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Without the code i have above we&apos;ll end up with 2 KVs, both of TS=100, one in kvset, one in snapshot, which then becomes a HFile. &lt;/p&gt;

&lt;p&gt;When future reads happen, if they don&apos;t see the &apos;correct&apos; KV, you will end up with lost updates.  &lt;/p&gt;

&lt;p&gt;In theory the &apos;read memstore first&apos; and &apos;order duplicate TS KVs&apos; patches should resolve this.  Lost updates reallllllly suck though.  I&apos;d probably recommend the conservative course, because I already went thru this and it sucks.  If you decide that you are willing to risk it, I might recommend this particular test case:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;increment some data at TS=X&lt;/li&gt;
	&lt;li&gt;snapshot at TS=X&lt;/li&gt;
	&lt;li&gt;increment some data at TS=X, now you have 2 * KV, TS=X&lt;/li&gt;
	&lt;li&gt;flush to hfile&lt;/li&gt;
	&lt;li&gt;increment at TS=X, ensure you dont lose any updates&lt;/li&gt;
	&lt;li&gt;snapshot/flush with TS=X in kvset-&amp;gt;snapshot-&amp;gt;hfile&lt;/li&gt;
	&lt;li&gt;compact the 2 hfiles both with TS=X in them&lt;/li&gt;
	&lt;li&gt;do read and make sure the value is what you expect.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;By using the manual environment edge you can control the currentTimeMillis() returned inside HRegion and down.&lt;/p&gt;

&lt;p&gt;This covers the worst case scenario I think, since normally one would get increments and you shouldn&apos;t get TS=X * 2 in a single HFile. &lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ryan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1088/#review1641&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/#review1641&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12924751" author="hbasereviewboard" created="Mon, 25 Oct 2010 22:08:10 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1088/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-10-25 15:06:49.931026)&lt;/p&gt;


&lt;p&gt;Review request for hbase, stack and khemani.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Changes from Ryan and Prakash reviews.&lt;/p&gt;

&lt;p&gt;We could use a nice test of this concurrent w/ snapshotting, flushing, etc... I don&apos;t have much time to do that now but would like to get this committed.  It works in general and does not change anything in the existing incrementColumnValue call, it&apos;s only the Increment that skips the snapshot check.&lt;/p&gt;

&lt;p&gt;Trying to get this committed so we can push it out to some clusters and start hammering it.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adds a new Increment class that allows multiple columns (each w/ own increment amount) in a single row being incremented in one call.&lt;/p&gt;

&lt;p&gt;The big wins here are being able to do multiple columns in a row in a single RPC and having it be appended/synced to the WAL in a single call.&lt;/p&gt;

&lt;p&gt;The current trade-off is that you lose atomicity to readers (ie. this does not currently use RWCC).  Eventually it could but for the current use case I am building this for, it&apos;s okay like this.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2946&quot; title=&quot;Increment multiple columns in a row at once&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2946&quot;&gt;&lt;del&gt;HBASE-2946&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2946&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2946&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java 1026935 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 1026935 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/Increment.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java 1026935 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java 1026935 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1026935 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 1026935 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 1026935 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1026935 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java 1026935 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java 1026935 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1088/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Added TestFromClientSide.testIncrement() which adds some client-side tests of Increment (and mixing w/ original icv call).  That passes and most the way through a test suite run.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;

</comment>
                            <comment id="12924753" author="hbasereviewboard" created="Mon, 25 Oct 2010 22:10:10 +0000"  >&lt;p&gt;Message from: &quot;Ryan Rawson&quot; &amp;lt;ryanobjc@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1088/#review1660&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/#review1660&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1088/#comment5541&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/#comment5541&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    your logic is correct, and normally this is an issue, but there is this line a few down:&lt;/p&gt;


&lt;p&gt;                now = Math.max(now, kv.getTimestamp());&lt;/p&gt;


&lt;p&gt;    I havent played with the new sorting thing, the big problem is you get lost updates via ICV if things dont go right.  &lt;/p&gt;

&lt;p&gt;    I just had a notion, when we do the &apos;get from memstore first&apos; how do we handle duplicate TSs in snapshot and kvset... looking at the memstore scanner, i see this:&lt;/p&gt;


&lt;p&gt;          return getLower(kvsetNextRow,&lt;br/&gt;
              snapshotNextRow);&lt;/p&gt;

&lt;p&gt;    and inside the implementation of getLower(), we return &apos;kvsetNextRow&apos; when the two compare to the same. So it should be ok. If it doesn&apos;t work out, the worst case scenario is probably losing 1ms worth of updates.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ryan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12925047" author="hbasereviewboard" created="Tue, 26 Oct 2010 17:14:10 +0000"  >&lt;p&gt;Message from: thekhemani@facebook.com&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1088/#review1669&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/#review1669&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1088/#comment5545&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/#comment5545&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This might not work if getLastIncrement() returns fewer counters in the result than what was queried.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;khemani&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12925064" author="hbasereviewboard" created="Tue, 26 Oct 2010 18:02:10 +0000"  >&lt;p&gt;Message from: thekhemani@facebook.com&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1088/#review1670&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1088/#review1670&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;I take back my last comment. This looks great.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;khemani&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12925089" author="streamy" created="Tue, 26 Oct 2010 18:57:14 +0000"  >&lt;p&gt;Committed.  Thanks Ryan and Prakash for the reviews!&lt;/p&gt;</comment>
                            <comment id="15017516" author="lars_francke" created="Fri, 20 Nov 2015 12:43:25 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12472997">HBASE-2947</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 1 Sep 2010 03:32:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32844</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hjzb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100499</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>