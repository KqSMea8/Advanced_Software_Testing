<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:57:20 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1906/HBASE-1906.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1906] FilterList of prefix and columnvalue not working properly with deletes and multiple values</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1906</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Attached are some unit tests from client and region that demonstrate the failing issues.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12438028">HBASE-1906</key>
            <summary>FilterList of prefix and columnvalue not working properly with deletes and multiple values</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Oct 2009 00:15:29 +0000</created>
                <updated>Fri, 12 Oct 2012 06:13:23 +0000</updated>
                            <resolved>Wed, 14 Oct 2009 19:47:20 +0000</resolved>
                                                    <fixVersion>0.20.2</fixVersion>
                    <fixVersion>0.90.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12765406" author="stack" created="Wed, 14 Oct 2009 05:43:14 +0000"  >&lt;p&gt;Just formatting clean up.  No fix yet.&lt;/p&gt;</comment>
                            <comment id="12765412" author="stack" created="Wed, 14 Oct 2009 05:54:46 +0000"  >&lt;p&gt;@jgray What seems to be happening is that we can exit the loop in HRegion#nextInternal without a call to filterRow.  W/o this call, stuff is left in when we exit via:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (filter != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; filter.filterRowKey(row, 0, row.length)) {
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!results.isEmpty() &amp;amp;&amp;amp; !Bytes.equals(currentRow, row)) {
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Its as though this test should be done first:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!Bytes.equals(currentRow, row)) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... before we see if a row should be filtered out based off row key.&lt;/p&gt;

&lt;p&gt;If filtered out by filterRowKey, then need to run filterRow on results already accumulated somehow.&lt;/p&gt;

&lt;p&gt;Will keep digging but input if any appreciated.&lt;/p&gt;

&lt;p&gt;That deletes can come out of the peek seems fine after looking at it some... &lt;/p&gt;</comment>
                            <comment id="12765665" author="stack" created="Wed, 14 Oct 2009 17:46:38 +0000"  >&lt;p&gt;Here&apos;s a fix.  Most of the patch is just formatting changes (apart from the addition of the two tests &amp;#8212; one client-side and other on HRegion).  The fix is in the HRegion#nextInternal.  I halved its size.  It was duplicating function using near-duplicate code.  Importantly, there was a code path where we could exit with results without calling filterRow.  The tests had filters that would rule out a whole row if filterRow was called.&lt;/p&gt;</comment>
                            <comment id="12765694" author="stack" created="Wed, 14 Oct 2009 18:56:13 +0000"  >&lt;p&gt;This patch passes all tests.&lt;/p&gt;</comment>
                            <comment id="12765707" author="streamy" created="Wed, 14 Oct 2009 19:33:40 +0000"  >&lt;p&gt;+1 for commit.  Reviewed patch but did not test, if all existing (and new) filter tests pass then should be okay.&lt;/p&gt;

&lt;p&gt;New HRegion.nextInternal() looks great, thanks for cleaning up that mess stack.&lt;/p&gt;</comment>
                            <comment id="12765710" author="stack" created="Wed, 14 Oct 2009 19:47:20 +0000"  >&lt;p&gt;Applied to branch and trunk.&lt;/p&gt;</comment>
                            <comment id="12766420" author="stack" created="Fri, 16 Oct 2009 05:20:33 +0000"  >&lt;p&gt;Here is some more detail on this issue.&lt;/p&gt;

&lt;p&gt;The illustrative code put up a table with 5 column families and added values.  It then set up a scanner that used a FilterList of two Filters against one of the column families.  The first filter was a prefix filter.  The second a test on the cell content.  The behavior wanted was that only rows that matched the prefix and the supplied cell value should be returned.&lt;/p&gt;

&lt;p&gt;Before the fix was applied, we would do the right thing &amp;#8211; return rows that matched on prefix and cell value &amp;#8211; but then we&apos;d tag onto the resultset part of a row; its rowid would match the prefix filter but it would not have the required cell content.   We&apos;d return all columns that sorted before the column that had the cell the filter was testing.&lt;/p&gt;

&lt;p&gt;The illustrating code then threw in deletes of the cell we were testing on but we were still returning the part row (IIRC).&lt;/p&gt;

&lt;p&gt;What was happening was that there was a code path whereby we could leave the internal next loop without calling the filter filterRow method.  This latter method, if given the chance, was knocking out rows that didn&apos;t match on both supplied filters.  Skipping out without its invocation was letting out candidate results that should have been suppressed.&lt;/p&gt;

&lt;p&gt;Here is the old code:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
1745     &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; nextInternal() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
1746       &lt;span class=&quot;code-comment&quot;&gt;// This method should probably be reorganized a bit... has gotten messy
&lt;/span&gt;1747       KeyValue kv;
1748       &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] currentRow = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
1749       &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; filterCurrentRow = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
1750       &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) {
1751         kv = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.storeHeap.peek();
1752         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (kv == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
1753           &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
1754         }
1755         &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] row = kv.getRow();
1756         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (filterCurrentRow &amp;amp;&amp;amp; Bytes.equals(currentRow, row)) {
1757           &lt;span class=&quot;code-comment&quot;&gt;// filter all columns until row changes
&lt;/span&gt;1758           &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.storeHeap.next(results);
1759           results.clear();
1760           &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
1761         }
1762         &lt;span class=&quot;code-comment&quot;&gt;// see &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; current row should be filtered based on row key
&lt;/span&gt;1763         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((filter != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; filter.filterRowKey(row, 0, row.length)) ||
1764             (oldFilter != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; oldFilter.filterRowKey(row, 0, row.length))) {
1765           &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(!results.isEmpty() &amp;amp;&amp;amp; !Bytes.equals(currentRow, row)) {
1766             &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
1767           }
1768           &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.storeHeap.next(results);
1769           results.clear();
1770           resetFilters();
1771           filterCurrentRow = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
1772           currentRow = row;
1773           &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
1774         }
1775         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(!Bytes.equals(currentRow, row)) {
1776           &lt;span class=&quot;code-comment&quot;&gt;// Continue on the next row:
&lt;/span&gt;1777           currentRow = row;
1778           filterCurrentRow = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
1779           &lt;span class=&quot;code-comment&quot;&gt;// See &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we passed stopRow
&lt;/span&gt;1780           &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(stopRow != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp;
1781               comparator.compareRows(stopRow, 0, stopRow.length,
1782                   currentRow, 0, currentRow.length) &amp;lt;= 0) {
1783             &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
1784           }
1785           &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; there are _no_ results or current row should be filtered
&lt;/span&gt;1786           &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (results.isEmpty() || filter != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; filter.filterRow()) {
1787             &lt;span class=&quot;code-comment&quot;&gt;// make sure results is empty
&lt;/span&gt;1788             results.clear();
1789             resetFilters();
1790             &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
1791           }
1792           &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
1793         }
1794         &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.storeHeap.next(results);
1795       }
1796     }
1797 
1798     &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void close() {
1799       storeHeap.close();
1800     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We would exit at #1766 without calling filter.filterRow rather than at #1792.&lt;/p&gt;

&lt;p&gt;The above method was rewritten so we don&apos;t skip out without calling filterRow.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; nextInternal() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
      &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] currentRow = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; filterCurrentRow = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) {
        KeyValue kv = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.storeHeap.peek();
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (kv == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
        &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] row = kv.getRow();
        &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; samerow = Bytes.equals(currentRow, row);
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (samerow &amp;amp;&amp;amp; filterCurrentRow) {
          &lt;span class=&quot;code-comment&quot;&gt;// Filter all columns until row changes
&lt;/span&gt;          readAndDumpCurrentResult();
          &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
        }
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!samerow) {
          &lt;span class=&quot;code-comment&quot;&gt;// Continue on the next row:
&lt;/span&gt;          currentRow = row;
          filterCurrentRow = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
          &lt;span class=&quot;code-comment&quot;&gt;// See &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we passed stopRow
&lt;/span&gt;          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.stopRow != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp;
              comparator.compareRows(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.stopRow, 0, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.stopRow.length,
                currentRow, 0, currentRow.length) &amp;lt;= 0) {
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
          }
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (hasResults()) &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
        }
        &lt;span class=&quot;code-comment&quot;&gt;// See &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; current row should be filtered based on row key
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.filter != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.filter.filterRowKey(row, 0, row.length)) {
          readAndDumpCurrentResult();
          resetFilters();
          filterCurrentRow = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
          currentRow = row;
          &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
        }
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.storeHeap.next(results);
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12766435" author="stack" created="Fri, 16 Oct 2009 06:12:48 +0000"  >&lt;p&gt;Any filter that depends on the filterRow will give odd results because this final step in the filter process may not get called if a row has more than one column.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12422064" name="1906-v2.patch" size="25699" author="stack" created="Wed, 14 Oct 2009 05:43:14 +0000"/>
                            <attachment id="12422118" name="1906-v3.patch" size="26985" author="stack" created="Wed, 14 Oct 2009 17:46:37 +0000"/>
                            <attachment id="12422127" name="1906-v4.patch" size="28207" author="stack" created="Wed, 14 Oct 2009 18:56:13 +0000"/>
                            <attachment id="12422042" name="filterlist.patch" size="26056" author="stack" created="Wed, 14 Oct 2009 00:16:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 14 Oct 2009 19:33:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26050</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 10 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08s6n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>49166</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>