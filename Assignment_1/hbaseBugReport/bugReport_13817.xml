<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:46:55 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13817/HBASE-13817.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13817] ByteBufferOuputStream - add writeInt support</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13817</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;While writing Cells to this stream, to make the CellBlock ByteBuffer, we do write length of the cell as int. We use StreamUtils to do this which will write each byte one after the other. So 4 write calls on Stream.(OutputSteam has only this support) With ByteBufferOuputStream we have the overhead of checking for size limit and possible grow with every write call. Internally this stream writes to a ByteBuffer. Again inside the ByteBuffer implementations there is position limit checks.  If we do write these length as int in one go we can reduce this overhead.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12834080">HBASE-13817</key>
            <summary>ByteBufferOuputStream - add writeInt support</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12783345">HBASE-13291</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="anoop.hbase">Anoop Sam John</assignee>
                                    <reporter username="anoop.hbase">Anoop Sam John</reporter>
                        <labels>
                    </labels>
                <created>Sun, 31 May 2015 16:29:47 +0000</created>
                <updated>Thu, 4 Jun 2015 07:17:00 +0000</updated>
                            <resolved>Thu, 4 Jun 2015 04:53:14 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                                    <component>Scanners</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="14567636" author="stack" created="Mon, 1 Jun 2015 17:46:03 +0000"  >&lt;p&gt;Can you presume this?&lt;/p&gt;

&lt;p&gt;      baos = new ByteBufferOutputStream(bufferSize, false, ByteOrder.BIG_ENDIAN);&lt;/p&gt;

&lt;p&gt;Elsewhere, don&apos;t we ask what the system is rather than assert?&lt;/p&gt;

&lt;p&gt;writeInte should be writeInt method name.&lt;/p&gt;

&lt;p&gt;Is it a good idea polluting a util with BBOS specifics as in here:&lt;/p&gt;

&lt;p&gt;188	    if (out instanceof ByteBufferOutputStream) &lt;/p&gt;
{
189	      ((ByteBufferOutputStream) out).writeInte(v);
190	    }
&lt;p&gt; else {&lt;/p&gt;

&lt;p&gt;Is there not a better place to do this specialization?&lt;/p&gt;

&lt;p&gt;Otherwise, patch looks good. Any idea of the benefit?&lt;/p&gt;
</comment>
                            <comment id="14568927" author="anoop.hbase" created="Tue, 2 Jun 2015 10:49:21 +0000"  >&lt;p&gt;We do one call to the BB to putInt. Our writes are Big endian ordered. That is why making sure that the BB we deal with in this BBOS is BIG_ENDIAN.  This is any way the default value.  You can see that the BoundedByteBufferPool is adjusted to always return BIG_ENDIAN BBs. Yes it is doing so now also.. Just making it explicit.  While creating the ByteBufferOutputStream, not passing the BB, and the BB is internally created by the BBOS, saying what is the byte order we would like to get. This is marked Public audience and so I just added an overloaded constructor.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;writeInte should be writeInt method name.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;My bad.. will correct&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Is it a good idea polluting a util with BBOS specifics as in here:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Thought this is a private audience Util and is ok.. Let me see not do this. It might code redundant code with this check in 2,3 places&lt;/p&gt;

&lt;p&gt;I did a JMH micro benchmark where I write int to BBOS. That gives ~20% gain. But this is micro benchmark so in the real world case it might be much smaller.&lt;/p&gt;
</comment>
                            <comment id="14569193" author="stack" created="Tue, 2 Jun 2015 14:47:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;Our writes are Big endian ordered. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I thought this an imposition of the system we run on rather than something we specify in our layer.&lt;/p&gt;

&lt;p&gt;Over in Bytes, we ask what the ordering is and use it:&lt;/p&gt;

&lt;p&gt;      static final boolean littleEndian =&lt;br/&gt;
        ByteOrder.nativeOrder().equals(ByteOrder.LITTLE_ENDIAN);&lt;/p&gt;

&lt;p&gt;Was wondering why you don&apos;t do similar in IPCUtil.&lt;/p&gt;

&lt;p&gt;Does bb does this internally anyways: 100	      bb.order(ByteOrder.BIG_ENDIAN);  ?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Thought this is a private audience Util and is ok.. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, that is not at issue. It was more our having the util package have to have a reference over into the io package.&lt;/p&gt;

&lt;p&gt;Looking at your patch, it is messy having the changes in two places rather than all in StreamUtils but otherwise, StreamUtils starts to reference other hbase packages. Arggghhhh.  Lets go with what you have for now. Downside is we may miss your optimization as we add Cell types. That&apos;d be a bummer. Maybe the StreamUtils#writeInt comes into the io package in hbase at some time?&lt;/p&gt;

&lt;p&gt;Thanks Anoop.&lt;/p&gt;

&lt;p&gt;20% is very nice.  Suggest you attach the jmh.&lt;/p&gt;


</comment>
                            <comment id="14569422" author="ram_krish" created="Tue, 2 Jun 2015 17:02:20 +0000"  >&lt;p&gt;May be the first version is better?  We had this in our internal branch and made this change based on some profiler info also. Just saying.  &lt;/p&gt;</comment>
                            <comment id="14569451" author="anoop.hbase" created="Tue, 2 Jun 2015 17:20:08 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Over in Bytes, we ask what the ordering is and use it:&lt;br/&gt;
static final boolean littleEndian =&lt;br/&gt;
ByteOrder.nativeOrder().equals(ByteOrder.LITTLE_ENDIAN);&lt;br/&gt;
Was wondering why you don&apos;t do similar in IPCUtil.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is different Stack.  There the usage is in Unsafe part.  There we really on Unsafe APIs to read and write and the system&apos;s byte order (native order) is what matters. That any way we can not control. We always write big endian (HFile, WAL, socket) . So if the system order is little endian, we have to reverse the bytes of int/long etc before we write.&lt;/p&gt;

&lt;p&gt;Here we are not using the Unsafe. We do BB APIs.  There the order is what matters. Which we can control using setter. The default value for this for Java NIO byte buffer impls are BigEndian only. I just added to make it double confirm. May be skip? Just add an assert alone? Any way I dont think Java will change this BB behavior in later versions.&lt;/p&gt;

&lt;p&gt;The StreamUtils writeInt API is used only from these Cell impl classes (as of now). That was one of the reason why I changed the util API in 1st version of patch.&lt;/p&gt;</comment>
                            <comment id="14571889" author="stack" created="Thu, 4 Jun 2015 00:26:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;May be skip?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;d say so. Just confuses.  Setting it though it is the default and we don&apos;t set it anywhere else we do BB messing.  Sorry for my being fixated on this.&lt;/p&gt;

&lt;p&gt;+1 after doing above. Just commit.&lt;/p&gt;

&lt;p&gt;Thanks for adding the jmh.&lt;/p&gt;</comment>
                            <comment id="14571937" author="anoop.hbase" created="Thu, 4 Jun 2015 01:08:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;May be the first version is better? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can we have a consensus? Ram is it ok to commit V2 (after Stack&apos;s comment fix).   StreamUtils is generic util API that we provided.  We get BBOS when we write to CellBlock in RPC layer.  Ya today the util API is called only in this place. Still !!!  May be later we can see whether we can move this common to some place.&lt;/p&gt;</comment>
                            <comment id="14572061" author="hadoopqa" created="Thu, 4 Jun 2015 03:49:50 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12737431/HBASE-13817_V3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12737431/HBASE-13817_V3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e8e5a9f6398f5a99f1d89be359212a7a4f1d7b05.&lt;br/&gt;
  ATTACHMENT ID: 12737431&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14275//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14275//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14275//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14275//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14275//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14275//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14275//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14275//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14572101" author="ram_krish" created="Thu, 4 Jun 2015 04:24:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can we have a consensus?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I meant this version &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13817&quot; title=&quot;ByteBufferOuputStream - add writeInt support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13817&quot;&gt;&lt;del&gt;HBASE-13817&lt;/del&gt;&lt;/a&gt;.patch of the patch.  Though it pollutes StreamUtils still it is only one place I thought. So after the latest API name change it is V3.  So I would go with V3.&lt;/p&gt;</comment>
                            <comment id="14572129" author="ram_krish" created="Thu, 4 Jun 2015 04:44:17 +0000"  >&lt;p&gt;Saw V3 again.  It is not polluting StreamUtils. Discussed and +1 on it.&lt;/p&gt;</comment>
                            <comment id="14572136" author="anoop.hbase" created="Thu, 4 Jun 2015 04:49:36 +0000"  >&lt;blockquote&gt;&lt;p&gt;TEST-org.apache.hadoop.hbase.master.TestDistributedLogSplitting.xml.&amp;lt;init&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Don&apos;t think it is related test failure.  Will commit now. Thanks for the reviews Stack and Ram.&lt;/p&gt;</comment>
                            <comment id="14572198" author="stack" created="Thu, 4 Jun 2015 05:40:28 +0000"  >&lt;p&gt;+1 on v3. Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14572304" author="hudson" created="Thu, 4 Jun 2015 07:17:00 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6545 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6545/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6545/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13817&quot; title=&quot;ByteBufferOuputStream - add writeInt support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13817&quot;&gt;&lt;del&gt;HBASE-13817&lt;/del&gt;&lt;/a&gt; ByteBufferOuputStream - add writeInt support. (anoopsamjohn: rev bb62d5b2e8db1677568723bb8d0d8ea4fd2c6f46)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBufferOutputStream.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/NoTagsKeyValue.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12736538" name="HBASE-13817.patch" size="6664" author="anoop.hbase" created="Mon, 1 Jun 2015 10:34:38 +0000"/>
                            <attachment id="12736812" name="HBASE-13817_V2.patch" size="11179" author="anoop.hbase" created="Tue, 2 Jun 2015 11:21:02 +0000"/>
                            <attachment id="12737431" name="HBASE-13817_V3.patch" size="7403" author="anoop.hbase" created="Thu, 4 Jun 2015 01:26:25 +0000"/>
                            <attachment id="12736973" name="benchmark.zip" size="4486" author="anoop.hbase" created="Tue, 2 Jun 2015 17:33:27 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 1 Jun 2015 17:46:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 28 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2ffhz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>