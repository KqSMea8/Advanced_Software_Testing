<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:39:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6699/HBASE-6699.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6699] Setting username in Connection in non-secure HBase</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6699</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We recently had a requirement where we need to log the information about various users who were using non-secure HBase cluster. &lt;br/&gt;
The user level logging is supported as part of security, but in 0.92, 0.94 security related code is separate. This jira is about adding that support in non-secure code.&lt;/p&gt;

&lt;p&gt;This feature is already there in trunk, after we merge the security related code.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12605639">HBASE-6699</key>
            <summary>Setting username in Connection in non-secure HBase</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="6">Invalid</resolution>
                                        <assignee username="v.himanshu">Himanshu Vashishtha</assignee>
                                    <reporter username="v.himanshu">Himanshu Vashishtha</reporter>
                        <labels>
                    </labels>
                <created>Fri, 31 Aug 2012 05:34:17 +0000</created>
                <updated>Wed, 19 Sep 2012 02:00:31 +0000</updated>
                            <resolved>Tue, 11 Sep 2012 23:14:32 +0000</resolved>
                                    <version>0.92.0</version>
                    <version>0.92.1</version>
                    <version>0.94.0</version>
                    <version>0.94.1</version>
                                                    <component>IPC/RPC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13445687" author="lhofhansl" created="Fri, 31 Aug 2012 05:36:18 +0000"  >&lt;p&gt;I&apos;m very interested in this as well.&lt;br/&gt;
If you have a patch ready I&apos;m happy to put this into 0.94.2. Otherwise let&apos;s try 0.94.3.&lt;/p&gt;</comment>
                            <comment id="13445689" author="v.himanshu" created="Fri, 31 Aug 2012 05:39:22 +0000"  >&lt;p&gt;Here are the two approaches:&lt;br/&gt;
1) Change the ConnectionHeader so that it &lt;b&gt;actually&lt;/b&gt; sets the User object, rather than just providing stubs to do so. This will change the Writable and then we need to do version number jugglery for compatibility.&lt;br/&gt;
2) Make a &lt;b&gt;pesudo call&lt;/b&gt; to a non-existent method while creating the connection, and let the new server handle it by setting the connection.ticket to the requester. (Credit to Todd for this suggestion)&lt;/p&gt;

&lt;p&gt;Attached is a patch with the second approach. I tested it with patched server versus unpatched client, and vice versa.&lt;/p&gt;</comment>
                            <comment id="13445692" author="v.himanshu" created="Fri, 31 Aug 2012 05:42:27 +0000"  >&lt;p&gt;Attached! LarsH is lightening fast &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13445698" author="lhofhansl" created="Fri, 31 Aug 2012 05:52:03 +0000"  >&lt;p&gt;Heh...&lt;/p&gt;

&lt;p&gt;I&apos;ll have to trust you on the RPC stuff. I don&apos;t know that code well.&lt;br/&gt;
The patch would be smaller without the comment changes (but they are fine).&lt;/p&gt;

&lt;p&gt;Maybe somebody who knows the RPC better can have a look and give a +1. Andy? Todd?&lt;/p&gt;

&lt;p&gt;Is this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
         } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+          LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Got exception &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; processing call with Id: &quot;&lt;/span&gt; +id, e);
           &lt;span class=&quot;code-comment&quot;&gt;// Since the server did not respond within the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; ping interval&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Needed for the patch?&lt;/p&gt;</comment>
                            <comment id="13445701" author="v.himanshu" created="Fri, 31 Aug 2012 05:55:40 +0000"  >&lt;p&gt;I added it as part of debugging and kept it as it might be of some use, in other cases? I can remove it if you say. &lt;br/&gt;
Yeah, let&apos;s wait for ipc experts.&lt;/p&gt;</comment>
                            <comment id="13445702" author="v.himanshu" created="Fri, 31 Aug 2012 05:57:38 +0000"  >&lt;p&gt;Yes, just used this opportunity to clean up some comments.&lt;/p&gt;</comment>
                            <comment id="13445713" author="stack" created="Fri, 31 Aug 2012 06:21:13 +0000"  >&lt;p&gt;Seems odd defining constant PSEUDO_METHOD_NAME_TO_SET_USER up in HConstants when only used down in ipc package.  Looks like something that should be defined in Invocation and you&apos;d add method to Invocation asking if its a setUser invocation.&lt;/p&gt;

&lt;p&gt;Indent if off for method callToSetUser&lt;/p&gt;

&lt;p&gt;Does the callToSetUser w/ its new Invocation and Call have to happen always?  Can it not be off and if needed, enabled by config?  Would mean Lars would be more comfortable committing if default behavior was unchanged.  Is it ok doing it this way for you lot?&lt;/p&gt;

&lt;p&gt;Why change the way the comment is done?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        &lt;span class=&quot;code-comment&quot;&gt;// See HBaseServer.Call.setResponse &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; where we write out the response.
&lt;/span&gt;-        &lt;span class=&quot;code-comment&quot;&gt;// It writes the call.id (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;), a flag &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;, then optionally the length
&lt;/span&gt;-        &lt;span class=&quot;code-comment&quot;&gt;// of the response (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;) followed by data.
&lt;/span&gt;-
+        /**
+         * See {@link HBaseServer.Call#setResponse()} &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; where we write out the
+         * response. It writes the call.id (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;), a flag &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;, then optionally
+         * the length of the response (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;) followed by data.
+         */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The javadoc commenting convention will never be interpreted as so in middle of method?&lt;/p&gt;

&lt;p&gt;Is this log right?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+          LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Got exception &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; processing call with Id: &quot;&lt;/span&gt; +id, e);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Did we used to just retry silently?  If so, now our logs will have a bunch of LOG.error?  Is LOG.error appropriate if retry (I may be off... just reading the patch, not looking at the patch context)&lt;/p&gt;

&lt;p&gt;Where in HBaseServer do we actually make the Call after getting user name?  I see us returning Void but this is an invocation just to set user name over on server?&lt;/p&gt;</comment>
                            <comment id="13445721" author="v.himanshu" created="Fri, 31 Aug 2012 06:35:32 +0000"  >&lt;p&gt;re: PSEUDO_METHOD_NAME_TO_SET_USER: We do have other references to HConstants though? For Cluster_ID?&lt;/p&gt;

&lt;p&gt;re: indent: okay.&lt;/p&gt;

&lt;p&gt;re: Config param: I am +0 on that. Will do.&lt;/p&gt;

&lt;p&gt;re: Comments: As I was reading the related code, i tried to use /**/ for multi line comments.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;LOG.error(&quot;Got exception while processing call with Id: &quot; +id, e);&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No, we just closed the connection if in this code path. This error is just to print which call made it so.&lt;/p&gt;

&lt;p&gt;re: HBaseServer: So, the username is set in RequestContext. Now, any code which wants to log can call this and get the username. For example, one can use AcessController (while using as a normal coprocessor).&lt;/p&gt;
</comment>
                            <comment id="13445722" author="stack" created="Fri, 31 Aug 2012 06:40:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;re: PSEUDO_METHOD_NAME_TO_SET_USER: We do have other references to HConstants though? For Cluster_ID?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t follow.  HConstants is a bad pattern.  Constants should be defined where they are used if possible.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;re: Comments: As I was reading the related code, i tried to use /**/ for multi line comments.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;/** */ is for javadoc.  This is not javadoc.  In general, you should try to minimize your changes.  Makes it easier getting your patches in.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;No, we just closed the connection if in this code path. This error is just to print which call made it so.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We failed silently w/ no other logging?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;re: HBaseServer: So, the username is set in RequestContext. Now, any code which wants to log can call this and get the username.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I suppose I don&apos;t get it.  In every request context or just one time?  Where is the actual request when we have this setuser trick going on?&lt;/p&gt;</comment>
                            <comment id="13445735" author="v.himanshu" created="Fri, 31 Aug 2012 07:10:50 +0000"  >&lt;p&gt;re: PSEUDO_METHOD_NAME_TO_SET_USER: Okay. Will remove it from HConstants.&lt;/p&gt;

&lt;p&gt;re Comments: Yea, I used multi line ones and it gets converted to javadoc like one. Will revert it boss.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (e &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; SocketTimeoutException &amp;amp;&amp;amp; remoteId.rpcTimeout &amp;gt; 0) {
          &lt;span class=&quot;code-comment&quot;&gt;// Clean up open calls but don&apos;t treat &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; as a fatal condition,
&lt;/span&gt;          &lt;span class=&quot;code-comment&quot;&gt;// since we expect certain responses to not make it by the specified
&lt;/span&gt;          &lt;span class=&quot;code-comment&quot;&gt;// {@link ConnectionId#rpcTimeout}.
&lt;/span&gt;          closeException = e;
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
          LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Got exception &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; processing call with Id: &quot;&lt;/span&gt; +id, e);
          &lt;span class=&quot;code-comment&quot;&gt;// Since the server did not respond within the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; ping interval
&lt;/span&gt;          &lt;span class=&quot;code-comment&quot;&gt;// time, treat &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; as a fatal condition and close &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; connection
&lt;/span&gt;          markClosed(e);
        }
&lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (remoteId.rpcTimeout &amp;gt; 0) {
          cleanupCalls(remoteId.rpcTimeout);
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We handle sockettimeout/rpctimeout; other exceptions are ignored. So, when new client issues a call to setUserNameInConnection, old server will throw a NoSuchMethodFound exception, which will be ignored by the client.&lt;/p&gt;

&lt;p&gt;re: HBaseServer:&lt;br/&gt;
Sorry for not being clear enough. This is set in the connection.ticket attribute. Next time if a call comes from this connection, this ticket is used to set the user in RequestContext. &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
              RequestContext.set(call.connection.ticket, getRemoteIp(), call.connection.protocol);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Any one interested can invoke RequestContext.getRequestUser().getUserName() or other such attrs of RequestContext. Hope it is clear now.&lt;/p&gt;

&lt;p&gt;Hmmm, I tested it with hadoop 1.0.0 jar; will be good to know if it is to be tested with others too. Main thing to see is UGI.createRemoteUser doesn&apos;t give any unexpected result.&lt;/p&gt;</comment>
                            <comment id="13446074" author="lhofhansl" created="Fri, 31 Aug 2012 15:57:57 +0000"  >&lt;p&gt;So what is the username tied to. It&apos;s not an RPC (that would be inefficient anyway).&lt;br/&gt;
If it is tied to (TCP) Connection it means by extension it is tied to the HConection that issued the request, correct?&lt;/p&gt;</comment>
                            <comment id="13446108" author="v.himanshu" created="Fri, 31 Aug 2012 16:36:44 +0000"  >&lt;p&gt;yes, the username is tied to the Connection.&lt;/p&gt;

&lt;p&gt;There is one extra rpc, to set/tie the username to the Connection, and is issued after sending the ConnectionHeader. It will be send one time whenever a connection is created (I will make it optional though, as Stack said). Its a non-blocking call to the server. &lt;br/&gt;
With the first approach I mentioned, we could have set it in the ConnectionHeader itself and avoided any extra rpc, but it will be a change in a Writable.&lt;/p&gt;</comment>
                            <comment id="13446110" author="ghelmling" created="Fri, 31 Aug 2012 16:38:26 +0000"  >&lt;p&gt;So, after the header is written, the magic invocation is passed to set the username?  That seems a little ugly.  Seems like it would be simpler to just change ConnectionHeader to actually handle User (all the bit&apos;s are there, it just always uses &quot;null&quot;), though that would change the serialization of ConnectionHeader and not be back-compatible, so maybe that&apos;s out.&lt;/p&gt;

&lt;p&gt;Getting back to the original issue, if the need is just to have username present without kerberos auth, couldn&apos;t you just use SecureRpcEngine with hbase.security.authentication set to &quot;simple&quot;?  Then you would get usernames passed through for each connection, just without kerberos auth.&lt;/p&gt;</comment>
                            <comment id="13446145" author="lhofhansl" created="Fri, 31 Aug 2012 17:22:48 +0000"  >&lt;p&gt;Since we&apos;re still discussing. Moving to 0.94.3.&lt;/p&gt;</comment>
                            <comment id="13446151" author="v.himanshu" created="Fri, 31 Aug 2012 17:29:14 +0000"  >&lt;p&gt;Good point. Though, I wonder when a non-secure client will try to connect HBase with this setting. There will be a version mismatch (3 vs 4), and it looks like SecureServer.SecureConnection.rpcHeaderRead will remain false?&lt;/p&gt;</comment>
                            <comment id="13446156" author="ghelmling" created="Fri, 31 Aug 2012 17:36:27 +0000"  >&lt;p&gt;In the case of using SecureRpcEngine, the clients also need to be configured to use SecureRpcEngine.  Clients using the default WritableRpcEngine would not be able to connect.&lt;/p&gt;

&lt;p&gt;I just wanted to point out you can use SecureRpcEngine without kerberos auth to make use of the same existing user-level logging without any code changes (if I understand correctly what you&apos;re after).&lt;/p&gt;</comment>
                            <comment id="13453534" author="v.himanshu" created="Tue, 11 Sep 2012 23:14:32 +0000"  >&lt;p&gt;Confirmed with our internal users, and they are okay with using the hollow secure setup. Marking this as Invalid; In case there are other users, I will be happy to provide a revised patch.&lt;br/&gt;
Thanks to all for the reviews and suggestions.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12543229" name="HBase-6699-v1.patch" size="8445" author="v.himanshu" created="Fri, 31 Aug 2012 05:42:27 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 31 Aug 2012 05:36:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>242510</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 14 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02vd3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14682</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>