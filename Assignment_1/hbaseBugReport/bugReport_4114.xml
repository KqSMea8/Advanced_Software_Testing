<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:16:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4114/HBASE-4114.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4114] Metrics for HFile HDFS block locality</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4114</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Normally, when we put hbase and HDFS in the same cluster ( e.g., region server runs on the datenode ), we have a reasonably good data locality, as explained by Lars. Also Work has been done by Jonathan to address the startup situation.&lt;/p&gt;

&lt;p&gt;There are scenarios where regions can be on a different machine from the machines that hold the underlying HFile blocks, at least for some period of time. This will have performance impact on whole table scan operation and map reduce job during that time.&lt;/p&gt;

&lt;p&gt;1.	After load balancer moves the region and before compaction (thus generate HFile on the new region server ) on that region, HDFS block can be remote.&lt;br/&gt;
2.	When a new machine is added, or removed, Hbase&apos;s region assignment policy is different from HDFS&apos;s block reassignment policy.&lt;br/&gt;
3.	Even if there is no much hbase activity, HDFS can load balance HFile blocks as other non-hbase applications push other data to HDFS.&lt;/p&gt;

&lt;p&gt;Lots has been or will be done in load balancer, as summarized by Ted. I am curious if HFile HDFS block locality should be used as another factor here.&lt;/p&gt;

&lt;p&gt;I have done some experiments on how HDFS block locality can impact map reduce latency. First we need to define a metrics to measure HFile data locality.&lt;/p&gt;

&lt;p&gt;Metrics defintion:&lt;/p&gt;

&lt;p&gt;For a given table, or a region server, or a region, we can define the following. The higher the value, the more local HFile is from region server&apos;s point of view.&lt;/p&gt;

&lt;p&gt;HFile locality index = ( Total number of HDFS blocks that can be retrieved locally by the region server ) / ( Total number of HDFS blocks for all HFiles )&lt;/p&gt;

&lt;p&gt;Test Results:&lt;br/&gt;
This is to show how HFile locality can impact the latency. It is based on a table with 1M rows, 36KB per row; regions are distributed in balance. The map job is RowCounter.&lt;/p&gt;

&lt;p&gt;HFile Locality Index	Map job latency ( in sec )&lt;br/&gt;
28%	                157&lt;br/&gt;
36%	                150&lt;br/&gt;
47%	                142&lt;br/&gt;
61%	                133&lt;br/&gt;
73%	                122&lt;br/&gt;
89%	                103&lt;br/&gt;
99%	                95&lt;/p&gt;

&lt;p&gt;So the first suggestion is to expose HFile locality index as a new region server metrics. It will be ideal if we can somehow measure HFile locality index on a per map job level.&lt;/p&gt;

&lt;p&gt;Regarding if/when we should include that as another factor for load balancer, that will be a different work item. It is unclear how load balancer can take various factors into account to come up with the best load balancer strategy.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12514492">HBASE-4114</key>
            <summary>Metrics for HFile HDFS block locality</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mingma">Ming Ma</assignee>
                                    <reporter username="mingma">Ming Ma</reporter>
                        <labels>
                    </labels>
                <created>Mon, 18 Jul 2011 19:49:28 +0000</created>
                <updated>Fri, 20 Nov 2015 11:52:44 +0000</updated>
                            <resolved>Wed, 10 Aug 2011 22:17:02 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                                    <component>metrics</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13068712" author="stack" created="Wed, 20 Jul 2011 23:30:45 +0000"  >&lt;p&gt;This is great stuff Ming.  Let me see if I understand your index properly:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HFile locality index = ( Total number of HDFS blocks that can be retrieved locally by the region server ) / ( Total number of HDFS blocks &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; all HFiles )
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Is that &apos;Total number of HDFS blocks that can be retrieved locally by the region server&apos;.. for all of the hfiles the current rowcounter mapreduce job is reading?&lt;/p&gt;

&lt;p&gt;And &apos;Total number of HDFS blocks for all HFiles&apos;... the current rowcounter mapreduce job is reading?&lt;/p&gt;

&lt;p&gt;Should this new fancy locality index, should it be done per region, rather than per hfile?&lt;/p&gt;

&lt;p&gt;I can imagine measuring per hfile is easier and secondly, it allows you demonstrate the importance of locality (as per above with your little latency table).&lt;/p&gt;

&lt;p&gt;How will you calculate the index?  Will it require a query against the namenode for every file under a region?  Can you get the info you need on region info or would it be background process?&lt;/p&gt;

&lt;p&gt;Good stuff.&lt;/p&gt;</comment>
                            <comment id="13068724" author="yuzhihong@gmail.com" created="Wed, 20 Jul 2011 23:46:22 +0000"  >&lt;p&gt;Maybe in phase 2, efficiently calculating locality index per region for a given region server would be useful for load balancer to determine the best region server for the underlying region.&lt;/p&gt;</comment>
                            <comment id="13070922" author="mingma" created="Tue, 26 Jul 2011 03:39:47 +0000"  >&lt;p&gt;Thanks, Stack, Ted.&lt;/p&gt;

&lt;p&gt;1. In the experiment table above, the &quot;total number of HDFS blocks that can be retrieved locally by the region server&quot; as well as &quot;total number of HDFS blocks for all HFiles&quot; are defined on the whole cluster level. The external program also calculates locality information per hfile, region as well as per region server. It uses HDFS namenode and the calculation is independent of any map reduce jobs.&lt;/p&gt;


&lt;p&gt;2. In terms of how we can calculate this metrics inside hbase, we can do in two steps. first one is to calcluate the metrics independent of map reduce jobs; the second one is to calcuate it on per map reduce job level.&lt;/p&gt;


&lt;p&gt;3. Calculate on the locality index, independent of map reduce jobs.&lt;/p&gt;

&lt;p&gt;a. It will first be calcuated on hfile level &lt;/p&gt;
{ total # of HDFS block, total # of local HDFS blocks }
&lt;p&gt;; then the data get aggregated on region level, finally get aggregated on region server level.&lt;/p&gt;

&lt;p&gt;b. Impact on namenode. There are 2 RPC calls to NN to get block info for each hfile. If we assume 100 regions per RS, 10 hfiles per region, 500 RSs, we will have 1M RPC hits to NN. Most of the time, that won&apos;t be an issue if we only calculate hfile locality index when hfile is created or region is loaded by the RS the first time. Because HDFS can still move HDFS blocks around without hbase knowing it, we still need to refresh the value periodically. &lt;/p&gt;

&lt;p&gt;c. The computation can be done in RS or HMaster. It seems RS is better in terms of design(only store knows the HDFS path for hfile location, HMaster doesn&apos;t) and extensiblity(to calculate locality index per map reduce job). The locality index can be part of HServerLoad and RegionLoad for load balancer to use. RS will rotate through all regions periodically in its main thread. The calcuation interval defined by by &quot;hbase.regionserver.msginterval&quot; might be too short for this scenario to minimize the load to NN for a large cluster ( 20 NN RPC per RS per 3 sec ).&lt;/p&gt;

&lt;p&gt;d. The locality index can be a new RS metrics. We can also put it on table.jsp for each region.&lt;/p&gt;

&lt;p&gt;e. HRegionInfo is kind of static. It doesn&apos;t change over time, however, locality index changes overtime for a given region. Maybe ClusterStatus/HServerInfo/HServerLoad/RegionLoad are better?&lt;/p&gt;


&lt;p&gt;4. Locality index calculation for scan / map reduce job.&lt;/p&gt;

&lt;p&gt;a. The original scenario is for full table scan only. If we want to provide accurate locality index for any scan / map reduce, this could be tricky given i) map reduce job can have start/end keys and filters such as time range; ii) block cache can be used and thus hfile shouldn&apos;t be accounted for if there is cache hit. iii) data volume read from HDFS block is also a factor. Reading smaller buffer is different from reading bigger buffer.&lt;/p&gt;

&lt;p&gt;b. One useful scenario is we want to find out why map jobs run slower sometimes. So it is useful the metrics is just there as part of map reduce job status page. We can estimate by using ganglia page to get the locality index value for the RSs at the time map reduce job is run.&lt;/p&gt;

&lt;p&gt;c. To provide more accurate data, we can modify TableInputFormat, a) call HBaseAdmin.getClusterStatus to get the locality index info for each region. b) calculate the intersection between scan specification and ClusterStatus based on key range as well as column family. It isn&apos;t 100% accurate, but it might be good enough.&lt;/p&gt;

&lt;p&gt;d. To be really accurate, region server needs to provide locality index for each scan operation back to the client.&lt;/p&gt;</comment>
                            <comment id="13080339" author="mingma" created="Sat, 6 Aug 2011 03:15:50 +0000"  >&lt;p&gt;Thanks, Stack, Ted.&lt;/p&gt;

&lt;p&gt;Here is the draft.&lt;/p&gt;

&lt;p&gt;1. The locality index is calculated when StoreFile is opened and cached for the duration of the object.&lt;br/&gt;
2. RS will provide a new metrics called hdfsBlockLocalityIndex based on StoreFile&apos;s cached value.&lt;br/&gt;
3. There is some static helper functions for load balancer to compute the block distribution on demand.&lt;/p&gt;</comment>
                            <comment id="13080348" author="yuzhihong@gmail.com" created="Sat, 6 Aug 2011 04:18:04 +0000"  >&lt;p&gt;Nice patch Ming. This would be very useful for enhancing load balancing.&lt;/p&gt;

&lt;p&gt;Please use two spaces for tab.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            HDFSBlocksDistribution blocksdistriforstorefile = sf.getHDFSBlockDistribution();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please use camel case for the variable name: storeFileBlocksDistribution.&lt;/p&gt;</comment>
                            <comment id="13080350" author="yuzhihong@gmail.com" created="Sat, 6 Aug 2011 04:37:52 +0000"  >&lt;p&gt;getTopBlockLocations() calls HRegion.computeHDFSBlocksDistribution() which has this code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      HTableDescriptor tableDescriptor = FSUtils.getHTableDescriptor(conf, region.getTableNameAsString());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It is an expensive call. We should look for faster alternative.&lt;/p&gt;</comment>
                            <comment id="13080351" author="yuzhihong@gmail.com" created="Sat, 6 Aug 2011 04:40:05 +0000"  >&lt;p&gt;Do you see the following test failure, Ming ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Tests in error: 
  Broken_testSync(org.apache.hadoop.hbase.regionserver.wal.TestHLog): hdfs:&lt;span class=&quot;code-comment&quot;&gt;//localhost.localdomain:10354/user/hadoop/TestHLog/hlogdir/hlog.1312605480262, entryStart=19950029, pos=20971520, end=20971520, edit=59&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13080464" author="yuzhihong@gmail.com" created="Sat, 6 Aug 2011 21:28:23 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getUniqueBlocksWeights()
+  {
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; UniqueBlockTotalWeights;
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please rename the long field uniqueBlocksTotalWeight and rename the method getUniqueBlocksTotalWeight.&lt;/p&gt;</comment>
                            <comment id="13080550" author="mingma" created="Sun, 7 Aug 2011 06:59:27 +0000"  >&lt;p&gt;Thanks, Ted.&lt;/p&gt;

&lt;p&gt;Here is the update.&lt;/p&gt;</comment>
                            <comment id="13081218" author="mingma" created="Mon, 8 Aug 2011 21:35:01 +0000"  >&lt;p&gt;More update to fix code style.&lt;/p&gt;</comment>
                            <comment id="13081255" author="mingma" created="Mon, 8 Aug 2011 22:24:27 +0000"  >&lt;p&gt;Fix copyright year for new file HDFSBlocksDistribution.java.&lt;/p&gt;</comment>
                            <comment id="13081282" author="yuzhihong@gmail.com" created="Mon, 8 Aug 2011 23:02:30 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; HTableDescriptor getTableDescriptor(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] tableName)
+    &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; TableExistsException, FileNotFoundException, IOException {
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.services.getTableDescriptors().get(Bytes.toString(tableName));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think we should handle the first two exceptions declared above.&lt;/p&gt;</comment>
                            <comment id="13081380" author="mingma" created="Tue, 9 Aug 2011 02:36:18 +0000"  >&lt;p&gt;Thanks, Ted. Here is the fix.&lt;/p&gt;</comment>
                            <comment id="13081384" author="yuzhihong@gmail.com" created="Tue, 9 Aug 2011 02:47:46 +0000"  >&lt;p&gt;+1 on patch.&lt;/p&gt;</comment>
                            <comment id="13081445" author="stack" created="Tue, 9 Aug 2011 05:27:35 +0000"  >&lt;p&gt;Very nice work Ming.  Patch looks good.  Nice tests (I didn&apos;t now you could set hostnames in minidfscluster).&lt;/p&gt;

&lt;p&gt;To be clear, we&apos;re adding a lookup of a storefiles filestatus after each open of a storefile (pity open doesn&apos;t just return this).  Thats extra loading on namenode but should be fine I think in the scheme of things (I see you did calc&apos;s above &amp;#8211; so yeah, should be fine)&lt;/p&gt;

&lt;p&gt;One method is named with a capital: MapHostNameToServerName.  This is unorthodox.  Other &quot;heresies&quot; are the new line before a function curly-bracket open, sometimes, or on loops.&lt;/p&gt;

&lt;p&gt;In HostAndWeight, what if two regionservers running on same host?  Should it be HostPortAndWeight?&lt;/p&gt;

&lt;p&gt;You should just do a return on the string in the toString:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; s = &lt;span class=&quot;code-quote&quot;&gt;&quot;number of unique hosts in the disribution=&quot;&lt;/span&gt; +
+      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.hostAndWeights.size();
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; s;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... and do we need that preamble &apos;number of unique hosts in the ...&apos; (is this string right?)&lt;/p&gt;

&lt;p&gt;Is getTopBlockLocations actually used by the balancer?  I don&apos;t see it.&lt;/p&gt;

&lt;p&gt;You might want to protect yourself against clusterstatus and master services being null in the regionserver.&lt;/p&gt;</comment>
                            <comment id="13081454" author="yuzhihong@gmail.com" created="Tue, 9 Aug 2011 05:40:08 +0000"  >&lt;p&gt;getTopBlockLocations() will be used in another JIRA which enhances load balancer.&lt;/p&gt;

&lt;p&gt;Clusterstatus and master services are passed from master to balancer. Region server isn&apos;t involved.&lt;/p&gt;

&lt;p&gt;Regards&lt;/p&gt;</comment>
                            <comment id="13081455" author="stack" created="Tue, 9 Aug 2011 05:53:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;...in the regionserver.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Should have been &apos;in the loadbalancer&apos;&lt;/p&gt;</comment>
                            <comment id="13081872" author="mingma" created="Tue, 9 Aug 2011 19:45:04 +0000"  >&lt;p&gt;Thanks, Stack. Here is the fix for everything except &quot;what if two regionservers running on same host&quot;&lt;/p&gt;

&lt;p&gt;HostAndWeight is used to capture general HDFS block distribution, these are datanode hosts; hbase isn&apos;t involved.. RS at runtime will query HostAndWeight with its own host name. If there are two RS instances on the same host, each will has its own hfiles instances&apos; HostAndWeight and aggregate them independently.&lt;/p&gt;</comment>
                            <comment id="13082715" author="stack" created="Wed, 10 Aug 2011 22:17:02 +0000"  >&lt;p&gt;Committed to TRUNK.  Thanks for the patch Ming (And the reviewing Ted)&lt;/p&gt;</comment>
                            <comment id="13082850" author="hudson" created="Thu, 11 Aug 2011 01:41:24 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2108 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2108/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2108/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4114&quot; title=&quot;Metrics for HFile HDFS block locality&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4114&quot;&gt;&lt;del&gt;HBASE-4114&lt;/del&gt;&lt;/a&gt; Metrics for HFile HDFS block locality&lt;/p&gt;

&lt;p&gt;stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HDFSBlocksDistribution.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/LoadBalancer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestFSUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/metrics/RegionServerMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13090969" author="jmhsieh" created="Thu, 25 Aug 2011 12:13:44 +0000"  >&lt;p&gt;In LoadBalancer.java, there are two private functions that seem to be dead code &amp;#8212; gettopblocklocations (Later changed to getTopBlockLocations in trunk) and getTableDescriptor.  &lt;/p&gt;

&lt;p&gt;Are they going to be used in some subsequent patch or is this just code that snuck in?&lt;/p&gt;</comment>
                            <comment id="13091035" author="yuzhihong@gmail.com" created="Thu, 25 Aug 2011 14:20:49 +0000"  >&lt;p&gt;LoadBalancer.getTableDescriptor is called by getTopBlockLocations in TRUNK.&lt;/p&gt;

&lt;p&gt;I have a patch which utilizes getTopBlockLocations in balanceCluster(). I haven&apos;t found time to test my patch yet.&lt;/p&gt;</comment>
                            <comment id="15015818" author="lars_francke" created="Fri, 20 Nov 2015 11:52:44 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12489877" name="HBASE-4114-trunk.patch" size="44767" author="mingma" created="Tue, 9 Aug 2011 19:45:04 +0000"/>
                            <attachment id="12489801" name="HBASE-4114-trunk.patch" size="44793" author="mingma" created="Tue, 9 Aug 2011 02:36:18 +0000"/>
                            <attachment id="12489759" name="HBASE-4114-trunk.patch" size="44152" author="mingma" created="Mon, 8 Aug 2011 22:24:27 +0000"/>
                            <attachment id="12489750" name="HBASE-4114-trunk.patch" size="44152" author="mingma" created="Mon, 8 Aug 2011 21:35:01 +0000"/>
                            <attachment id="12489619" name="HBASE-4114-trunk.patch" size="44402" author="mingma" created="Sun, 7 Aug 2011 06:59:27 +0000"/>
                            <attachment id="12489561" name="HBASE-4114-trunk.patch" size="44018" author="mingma" created="Sat, 6 Aug 2011 03:15:50 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 20 Jul 2011 23:30:45 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33377</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hpfz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101384</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>