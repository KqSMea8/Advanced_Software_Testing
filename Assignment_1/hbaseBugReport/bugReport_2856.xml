<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:05:19 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2856/HBASE-2856.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2856] TestAcidGuarantee broken on trunk </title>
                <link>https://issues.apache.org/jira/browse/HBASE-2856</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;TestAcidGuarantee has a test whereby it attempts to read a number of columns from a row, and every so often the first column of N is different, when it should be the same.  This is a bug deep inside the scanner whereby the first peek() of a row is done at time T then the rest of the read is done at T+1 after a flush, thus the memstoreTS data is lost, and previously &apos;uncommitted&apos; data becomes committed and flushed to disk.&lt;/p&gt;

&lt;p&gt;One possible solution is to introduce the memstoreTS (or similarly equivalent value) to the HFile thus allowing us to preserve read consistency past flushes.  Another solution involves fixing the scanners so that peek() is not destructive (and thus might return different things at different times alas).&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12469746">HBASE-2856</key>
            <summary>TestAcidGuarantee broken on trunk </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="amitanand">Amitanand Aiyer</assignee>
                                    <reporter username="ryanobjc">ryan rawson</reporter>
                        <labels>
                    </labels>
                <created>Tue, 20 Jul 2010 19:28:21 +0000</created>
                <updated>Fri, 12 Oct 2012 05:35:08 +0000</updated>
                            <resolved>Fri, 18 Nov 2011 02:21:01 +0000</resolved>
                                    <version>0.89.20100621</version>
                                    <fixVersion>0.94.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>22</watches>
                                                                                                            <comments>
                            <comment id="12892822" author="stack" created="Tue, 27 Jul 2010 15:28:30 +0000"  >&lt;p&gt;Making this a blocker.  Also disabling in TRUNK for now so tests pass for the second 0.89 release.&lt;/p&gt;</comment>
                            <comment id="12899119" author="ryanobjc" created="Mon, 16 Aug 2010 22:01:34 +0000"  >&lt;p&gt;This issue is pernicious and difficult.  I have attempted many times to nail this but there continue to be issues.&lt;/p&gt;

&lt;p&gt;Right now there are at least 2 issues:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;When a memstore is flushed to HFile the &apos;memstoreTS&apos; generation stamp is dropped.  With the way the scanners work right now, this causes some minor issue.  A row is really composed on a sequence of KeyValues, with different memstoreTS values, so you can imagine right before the flush the scanner looks sort of like so:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;                           scanner points here&lt;br/&gt;
(new gen here) |&lt;br/&gt;
K K K K K K K K K K K K K K K K K K K K K  (keys for 1 row)&lt;br/&gt;
                                    (new and old gen)&lt;/p&gt;

&lt;p&gt;The new gen have newer memstoreTS value and were ignored during the next().  So the scanner is pointing to a Key part of the way through a row.   When the memstore is pushed to a HFile, we mistakenly ignore all the skipped new gen keys, and we end up with the FIRST KeyValue from the older gen, and the subsequent columns from the newer gen, ending up with a mixed generation result, thus looking like non-atomic put.&lt;/p&gt;

&lt;p&gt;One solution to this problem is to take the top Key during a scanner reset (done after a switch between memstore -&amp;gt; hfile) and transform it into KeyValue.createFirstOnRow(). There has to be exception code for partial row fetches where the scanner gets partial row results each time (Because the row is too big).&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The second issue is that of scanner updates and multi-column families.  Right now we do code sort of like this:&lt;br/&gt;
for each store (aka: family) in region:&lt;br/&gt;
   switch memstore -&amp;gt; hfile&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For each Store/family the switch between memstore-&amp;gt;hfile is done atomically with respect to scanners, that is for a scanner they either access the old snapshot and old files or the new null snapshot and the new files.  But this atomic snapshot is done at a Store at-a-time level, meaning that concurrent scanners might see some data in one store from memstore (complete with generation timestamps) and some data in another store all from hfile (with no timestamps), thus again ending up with mixed generation row data that violates row atomicity.&lt;/p&gt;

&lt;p&gt;One possible solution to this problem is to move scanner updates to the HRegion/RegionScanner level.  This is not as easy as it sounds from a code structure point of view.  Furthermore by using larger update blocks we may be introducing performance issues surrounding scanner updates. &lt;/p&gt;


&lt;p&gt;-----------&lt;/p&gt;

&lt;p&gt;The ultimate problem here is these two problems are just the most recently identified bugs in a long list of bugs.  We can fix them in the ways described above, but what about the next series of bugs?  We are plugging leaks in a dam.  A better approach would be to build a new, better, dam, only with the knowledge we have about what previously went wrong.&lt;/p&gt;

&lt;p&gt;------------&lt;/p&gt;

&lt;p&gt;The proposal is thusly:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add a new generation timestamp (or perhaps we could call it transaction id) to every KeyValue.  This generation timestamp is also serialized and stored inside HFile.&lt;/li&gt;
	&lt;li&gt;The generation timestamp starts at 1 for brand new tables.  Every write operation increments this by 1, much like ReadWriteConsistencyControl&lt;/li&gt;
	&lt;li&gt;KeyValues with ts=0 belong to no generation and are always included in every read operation&lt;/li&gt;
	&lt;li&gt;KeyValues with ts&amp;gt;0 belong to that specific generation and the reader should include them only if their own read point is larger. The reader obtains the read point at scanner start time, and may possibly update it between rows if the implementation can do so. (As per the current RWCC algorithms)&lt;/li&gt;
	&lt;li&gt;Bulk imported hfiles have all their TS=0 (the default value)&lt;/li&gt;
	&lt;li&gt;Modifications set their ts=X as per the current RWCC algorithms.&lt;/li&gt;
	&lt;li&gt;During hfile flush the largest TS is written to the HFile metadata.&lt;/li&gt;
	&lt;li&gt;During HRegion/Store init, the largest TS is obtained from HFile metadata, and the RWCC is set to this value.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Some predicted questions:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;What about the extra space? 8 bytes is a lot.
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;With vint encoding and that the values start at 1, we should be able to shave a lot of space off.  We will also have to store a length field with 1 extra byte. 2 bytes minimum for &apos;0&apos;.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;What about vint decode speed?
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;It may not be an issue, we need to profile.  If it is, we can trade off RAM space in KeyValue to cache this.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;What about file migration? I dont want to take a long time to upgrade my cluster!
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;By creating a new metadata key, call it KEYVALUE_VERSION, the Store layer on top of HFile can parse the older KeyValues from HFile (which wont have this metadata), substituting &apos;0&apos; for the missing timestamp.&lt;/li&gt;
		&lt;li&gt;Newer HFiles will use the newer KeyValue parse code to obtain the generation timestamp.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;This is a lot of cost just to fix something that seems we should know in memory
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;Yes it isn&apos;t cheap, but this problem has proven to be difficult to solve. By addressing the issue directly we can have confidence in our design and the existing test frameworks which are failing should validate it for us.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;What about splits?
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;Each split region will &apos;take off&apos; from the maximal generation timestamp and evolve independently.  If they were to be merged together that&apos;d be ok, each region would have to close, halting all writes, then take the largest generation timestamp and continue evolving from there.  The timestamp exists to differentiate committed and non-committed data, and during a close by definition all values in the HFile would be committed.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Ok so I&apos;m paying at least 2 bytes per KeyValue, can we get better return on investment?
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;Yes!  By using the generation timestamp we can detect the situation where a previously inserted Delete is masking new Puts.  We can switch between the existing behaviour and newer behaviour at runtime and ignore the rogue Delete marker.&lt;/li&gt;
		&lt;li&gt;There may be other benefits as well. Providing a partial total order to all the KeyValue inserts and grouped by transaction would provide useful debugging info, for both HBase and client bugs.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;What about read isolation?
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;With this we can definitely implement at-scanner-open read isolation.  Due to the nature of the scanner design advancing the generation timestamp read point is more difficult, but it may be possible.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


</comment>
                            <comment id="12899544" author="ryanobjc" created="Tue, 17 Aug 2010 19:40:40 +0000"  >&lt;p&gt;one addendum to this proposal, the hadoop vint format already encodes the length in an &quot;easy to read&quot; way.  For small values &amp;lt; 120 or so the vint is encoded in 1 byte, else it may take up to 9 bytes.&lt;/p&gt;</comment>
                            <comment id="12900535" author="pranavkhaitan" created="Fri, 20 Aug 2010 00:27:24 +0000"  >&lt;p&gt;I guess we could fix this by not updating the scanners after a flush. Currently, after every flush we are notifying the scanners (called as observers) so that they update their heap. If we do not notify them about the flush, the scanner wouldn&apos;t encounter any inconsistencies. This should solve the specific problem you discussed above where flushing results in inconsistency. This seems like an easy change and maintains correctness. The only drawback is that we are holding some memstore keys for a little longer which doesn&apos;t seem too big of a problem.&lt;/p&gt;</comment>
                            <comment id="12900553" author="ryanobjc" created="Fri, 20 Aug 2010 02:04:04 +0000"  >&lt;p&gt;That sounds possible... the extra memory held could be up to 64mb *&lt;br/&gt;
block-size * # of families. Ie: a few hundred megs or even gigs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=12900535#action_12900535&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=12900535#action_12900535&lt;/a&gt;]&lt;br/&gt;
Currently, after every flush we are notifying the scanners (called as&lt;br/&gt;
observers) so that they update their heap. If we do not notify them about&lt;br/&gt;
the flush, the scanner wouldn&apos;t encounter any inconsistencies. This should&lt;br/&gt;
solve the specific problem you discussed above where flushing results in&lt;br/&gt;
inconsistency. This seems like an easy change and maintains correctness. The&lt;br/&gt;
only drawback is that we are holding some memstore keys for a little longer&lt;br/&gt;
which doesn&apos;t seem too big of a problem.&lt;br/&gt;
columns from a row, and every so often the first column of N is different,&lt;br/&gt;
when it should be the same. This is a bug deep inside the scanner whereby&lt;br/&gt;
the first peek() of a row is done at time T then the rest of the read is&lt;br/&gt;
done at T+1 after a flush, thus the memstoreTS data is lost, and previously&lt;br/&gt;
&apos;uncommitted&apos; data becomes committed and flushed to disk.&lt;br/&gt;
equivalent value) to the HFile thus allowing us to preserve read consistency&lt;br/&gt;
past flushes. Another solution involves fixing the scanners so that peek()&lt;br/&gt;
is not destructive (and thus might return different things at different&lt;br/&gt;
times alas).&lt;/p&gt;</comment>
                            <comment id="12900924" author="stack" created="Fri, 20 Aug 2010 23:48:37 +0000"  >&lt;p&gt;@Ryan Thanks for writing this up.   Useful.  My thinking is that the extra ts/version is too much to do just now as we&apos;re coming up fast on a 0.90.x.  Its a 0.92.x project I&apos;m thinking especially as I think it&apos;ll take a bit of work to implement it so migration is done at runtime.  Also, following on from the Pranav suggestion, for now, can we not just let the scanner exhaust the current row only against whatever was in memstore rather than let the scanner run to the end of the region and then when it reaches the end of the row, then let go of memstore reference?  In other words, only at row junctures update its memstore/hfile scanner set?&lt;/p&gt;</comment>
                            <comment id="12900929" author="pranavkhaitan" created="Fri, 20 Aug 2010 23:55:44 +0000"  >&lt;p&gt;@Stack, in my understanding what you are saying is happening now. The scanner keeps hold of the snapshot till it is reading the current row and only lets go of it before it starts reading the next row.&lt;/p&gt;</comment>
                            <comment id="12900932" author="stack" created="Sat, 21 Aug 2010 00:09:17 +0000"  >&lt;p&gt;@Pranav: Now I seem to recall Ryan remarks where the row boundary is unknowable; of how the only way you learn of a row boundary is AFTER you&apos;ve read the first on the next row.  At this stage you have already read into the next row so can&apos;t make the memstore/hfile switch.&lt;/p&gt;</comment>
                            <comment id="12900979" author="ryanobjc" created="Sat, 21 Aug 2010 06:15:23 +0000"  >&lt;p&gt;You guys have iet right, that you can&apos;t know the next row until you&lt;br/&gt;
are already past the first key.&lt;/p&gt;

&lt;p&gt;The problem is that we would have to hold on to the snapshot and kvset&lt;br/&gt;
until the end of the scanner when it is closed.  This will up our&lt;br/&gt;
chance of preventable OOME, but it would depend on the scanner use&lt;br/&gt;
patterns. It seems risky to me to take this approach.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure we want to change the entire nature of how scanner&lt;br/&gt;
updates work, it would require redoing the heap a bit to bubble update&lt;br/&gt;
scanner events down.  I&apos;m not sure how complex that patch would be,&lt;br/&gt;
there is no way to easily know until the work is done.  But without&lt;br/&gt;
either of those two approaches, this JIRA may have to be a 0.92 issue.&lt;/p&gt;



</comment>
                            <comment id="12901075" author="stack" created="Sat, 21 Aug 2010 18:47:47 +0000"  >&lt;p&gt;So, rather than return inconsistent data around a storefile switch, since we get rows at a time (we do &amp;#8211; right?), what if we aborted the current row when we have to swap memstore for new file?  What if we threw an exception?  Let the client fix up the scanner and make it come back in on the row we were about to serve? (We do something like this when a NSRE anyways)?&lt;/p&gt;</comment>
                            <comment id="12917073" author="ryanobjc" created="Fri, 1 Oct 2010 22:25:11 +0000"  >&lt;p&gt;to fix it once and for all requires hfile/serialization changes.&lt;/p&gt;</comment>
                            <comment id="12966344" author="nspiegelberg" created="Thu, 2 Dec 2010 23:32:41 +0000"  >&lt;p&gt;When this issue is fixed, see if we can bring sorting back into the compaction algorithm to handle odd skew due to bulk migrations.&lt;/p&gt;</comment>
                            <comment id="12968482" author="stack" created="Mon, 6 Dec 2010 23:25:17 +0000"  >&lt;p&gt;Ryan, Kannan, and myself chatted on this issue a while:&lt;/p&gt;

&lt;p&gt;+ We&apos;ll add a new insertion sequence id into the KeyValue Key.  It will be inserted after the current Timestamp and before KeyValue Type.  This new insertion sequence id will be used resolving &apos;order&apos; when all else matches in two KeyValue keys.&lt;br/&gt;
+ We&apos;d use the last two bits of the KeyValue Type for &apos;version&apos;.  We&apos;ll set bit 128 to denote KeyValue version &apos;2&apos; (what we currently have is KeyValue version &apos;1&apos;).&lt;br/&gt;
+ We&apos;d adjust our comparators so they ignored these upper bits in Type so we can compare Type 1 and Type 2 KeyValues.&lt;br/&gt;
+ A total cluster restart will be needed.  We&apos;ll up the RPC version to be sure.&lt;br/&gt;
+ Post-restart, writes will be version 2 KeyValues.&lt;br/&gt;
+ Reads may be a mix of version 2 and version 1 KeyValues while regions are made of a mix of old and new style HFiles.  This should be fine as long as comparators work properly witha mix of version 1 and version 2 KVs.&lt;br/&gt;
+ We&apos;re thinking the new insertion sequence id will be fixed-length long.  A vint/vlong will make for an awkward parse.&lt;/p&gt;</comment>
                            <comment id="12968484" author="stack" created="Mon, 6 Dec 2010 23:25:33 +0000"  >&lt;p&gt;Please add to the above if I missed anything Ryan/Kannan&lt;/p&gt;</comment>
                            <comment id="12968505" author="ryanobjc" created="Tue, 7 Dec 2010 00:22:51 +0000"  >&lt;p&gt;I think we can use HLog sequenceID as the &quot;insertion sequence ID&quot;.  &lt;/p&gt;

&lt;p&gt;This is how it will work:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;HLog append happens, resulting in sequence ID  &quot;X&quot;&lt;/li&gt;
	&lt;li&gt;Start memstoreInsert, but instead of using what is provided, use X instead.&lt;/li&gt;
	&lt;li&gt;Do the usual, stamping KVs with X&lt;/li&gt;
	&lt;li&gt;Commit and push read point forward to X when done.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Successive &quot;X&quot; values will be increasing in value.  One thing we will need to do is initialize &quot;RWCC&quot; read point to the largest HLog sequenceID on Region open (before region can take any edits).  &lt;/p&gt;
</comment>
                            <comment id="12968511" author="ryanobjc" created="Tue, 7 Dec 2010 00:32:02 +0000"  >&lt;p&gt;question was: would we overflow a long?  &lt;/p&gt;

&lt;p&gt;At 2^63, we have about 9.22 x 10^18 values available.  &lt;br/&gt;
At 50,000 operations/second, we will take about 5,849,424 years to roll over.&lt;/p&gt;

&lt;p&gt;Stack points out, what about bulk commit, this would then wrap up every bulk commit as 1 memstore/RWCC transaction, which might be the logically wrong thing to do, and also the extra time it takes to insert that much stuff into memstore could also be an issues with RWCC.  It is very important that RWCC transactions stay short or else we pile up too many handlers.&lt;/p&gt;</comment>
                            <comment id="12969105" author="stack" created="Wed, 8 Dec 2010 00:57:18 +0000"  >&lt;p&gt;Making a start.  Adding version to KV.&lt;/p&gt;</comment>
                            <comment id="12970023" author="stack" created="Fri, 10 Dec 2010 00:07:34 +0000"  >&lt;p&gt;This patch adds sequence number to KeyValue.  Also adds handling of version (version of KV is an internal detail, not let out of KV).  All current TestKeyValue tests pass but everything else is broke currently.&lt;/p&gt;

&lt;p&gt;The new KV particle is called sequence number.  Its looking like this sequence number could be the HRS sequence id.  I&apos;ve purposely not made connection between the two.  We&apos;ll start out with HRS sequence id == KV sequence number but this may change at some later time.&lt;/p&gt;

&lt;p&gt;Will next make RWCC use the KV sequence number instead of the KV data member it used keep up.&lt;/p&gt;</comment>
                            <comment id="12971197" author="ryanobjc" created="Tue, 14 Dec 2010 08:32:44 +0000"  >&lt;p&gt;I&apos;d prefer bitbashing to be in hex, not decimal, eg:&lt;/p&gt;


&lt;p&gt;  static final byte VERSION_BITS = (byte)0x40;&lt;/p&gt;

&lt;p&gt;instead of:&lt;/p&gt;

&lt;p&gt;  static final byte VERSION_BITS = (byte)64;&lt;/p&gt;

&lt;p&gt;it makes it clearer I think.  Do you really need to have a constant for the bit compliment of a different constant?  The compiler will do the optimization properly and inline constants if you do ~(some other thing thats a constant).&lt;/p&gt;</comment>
                            <comment id="12971282" author="stack" created="Tue, 14 Dec 2010 15:06:45 +0000"  >&lt;p&gt;I&apos;ll use Hex.  On the define, I think intent is clearer than doing ~SOMETHING.&lt;/p&gt;</comment>
                            <comment id="12979004" author="stack" created="Fri, 7 Jan 2011 22:52:35 +0000"  >&lt;p&gt;@Ryan Regards using seqid for the &apos;memstoreTS&apos;, what about this special case of memstoreTS == 0?  How we handle that if we move seqid?&lt;/p&gt;</comment>
                            <comment id="12979011" author="pranavkhaitan" created="Fri, 7 Jan 2011 22:55:47 +0000"  >&lt;p&gt;Thanks for your message. I am currently traveling without email access&lt;br/&gt;
and will be able to read your email by 8th Jan.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Pranav&lt;/p&gt;</comment>
                            <comment id="12979013" author="ryanobjc" created="Fri, 7 Jan 2011 22:57:45 +0000"  >&lt;p&gt;i don&apos;t think seqid ever is 0. if so, can&apos;t we just start it at 1&lt;br/&gt;
instead and be ok?&lt;/p&gt;</comment>
                            <comment id="12979802" author="ryanobjc" created="Mon, 10 Jan 2011 22:13:48 +0000"  >&lt;p&gt;one thought I had, if we are doing replication do we use seqid or do&lt;br/&gt;
we generate a new one locally at each cluster?&lt;/p&gt;

&lt;p&gt;If we allow multimaster we will probably have to generate a new one at&lt;br/&gt;
each cluster replication target. Else we might end up with a situation&lt;br/&gt;
where new incoming edits are not visible yet, due to being &amp;lt; current&lt;br/&gt;
seqid.&lt;/p&gt;</comment>
                            <comment id="12979803" author="jdcryans" created="Mon, 10 Jan 2011 22:15:31 +0000"  >&lt;p&gt;The edit is applied as a Put through HTable.&lt;/p&gt;</comment>
                            <comment id="12981025" author="stack" created="Thu, 13 Jan 2011 00:02:33 +0000"  >&lt;p&gt;Latest.  Starts moving readPoint up into HRegionScanner and out of MemStore.  Adds tests.  Adds setting sequence number into KVs whether they go via WAL or not, etc.   Not done by a long shot and probably not in a state for review.  Just adding work to date.&lt;/p&gt;</comment>
                            <comment id="12981048" author="stack" created="Thu, 13 Jan 2011 00:46:45 +0000"  >&lt;p&gt;Just had good conversation with Ryan.  We conclude that using the HLog sequence number is NOT a good idea, mostly for performance reasons.  Too many updates will be stuck waiting on the completion of edits that may have started before our update but that have yet to complete (we do not want to return to the client until all transaction started before ours &amp;#8211; but that are slower than ours to run &amp;#8211;  have completed else there is the danger of not being able to see what you have written).  Instead, we need to keep a running sequence number that is per HRegion rather than per HRegionServer as HLog sequence number is.  This new HRegion sequence number  is very much like HLog sequence number in that on open of HRegion we read in the largest and then increment from there.&lt;/p&gt;

&lt;p&gt;Let me try and explain how we arrived at this notion.&lt;/p&gt;

&lt;p&gt;We do ACID - - prevent readers reading part of an update &amp;#8211;  by only letting clients (scanners and gets) read stuff that has been fully committed.  Currently we do this by moving forward a monotonically increasing  &apos;read point&apos;.  Each update is given a write point.  The read point is moved forward to encompass all completed write points or  &apos;transactions&apos;.  Transactions complete willy-nilly but the read point will not move beyond the incomplete.&lt;/p&gt;

&lt;p&gt;Here are the coarse steps involved in a &apos;transaction&apos;:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
(0) row lock (Put, Increment, etc.)
(1) Go to WAL
(2) get &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; sequence id
(3) actually write WAL
(4) update memstore
(5) wait &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; our edit to be visible
(6) commit/move forward the read point 
(7) undo rowlock
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Up to this, the way we did &apos;ACID&apos; was around memstore only.  The readpoint is kept up inside in an instance of RWCC.  A RWCC instance is Region scoped (one is created on creation of a HRegion).  A new writepoint is created when we go to write the memstore in step (4) above and then the readpoint is moved forward to match the writepoint just before we do step (7) in the above.  Currently our RWCC transaction spans step (4) to (7) roughly.&lt;/p&gt;

&lt;p&gt;&quot;Wait to be visible&quot; in the above means wait until all transactions that have an id that is less than mine complete before I proceed to update the read point and return to the client. A transaction that started before us may not complete until after ours because of thread scheduling, hiccups, etc.  We do not want to move the read point forward until all updates previous to ours have completed else we&apos;ll be letting clients read the incomplete earlier transactions.&lt;/p&gt;

&lt;p&gt;Of note in the above, how long the WAL takes is not part of a RWCC transaction.&lt;/p&gt;

&lt;p&gt;IF we move to using HLog sequence numbers, now the transaction starts at step (1) when we go to the WAL.  We&apos;ll need to update in RWCC the writepoint at step (1).  The HLog sequence number is for all of the region server, its not just HRegion scoped.   The &apos;wait for our edit to be visible&apos; will be dependent now on the completion on edits against unrelated HRegions whose character may be completely different (e.g. the schema on HRegion A may be for increments whereas the schema on HRegion B may be for fat batches of cells.  If both are on the same regionserver, the &apos;wait for our edit to be visible&apos; may have the increments waiting on the completion of a fat batch of updates).&lt;/p&gt;

&lt;p&gt;So, the thought is instead to have a per region sequence number with the write point updated only after we emerge from the WAL append.  We keep the current &apos;transaction&apos; scope where scope is between steps (4) and (7) in the above.&lt;/p&gt;

&lt;p&gt;I&apos;m going to go implement the per region edit number unless an alternative suggested.&lt;/p&gt;</comment>
                            <comment id="12981058" author="nspiegelberg" created="Thu, 13 Jan 2011 01:02:33 +0000"  >&lt;p&gt;@stack: we briefly talked about this issue internally the other week.  I think you want a per-CF sequence ID.  We could split flushes to happen on a per-CF basis and a lot of our filtering needs to be done on a per-file basis (and consequently, per-CF).&lt;/p&gt;</comment>
                            <comment id="12981063" author="ryanobjc" created="Thu, 13 Jan 2011 01:12:45 +0000"  >&lt;p&gt;if you use a per-CF sequence ID you can only have atomic properties on&lt;br/&gt;
at most a column family.  We use the transaction id to know which ones&lt;br/&gt;
were committed and which ones were not, and if it wasn&apos;t across all&lt;br/&gt;
the CFs, we would not have atomicity across all CFs which is what we&lt;br/&gt;
DO want.&lt;/p&gt;

&lt;p&gt;even if we split flushes to happen on per-Store/CF basis, it would not&lt;br/&gt;
affect the acid guarantees we are trying to achieve with this patch.&lt;/p&gt;</comment>
                            <comment id="12981076" author="nspiegelberg" created="Thu, 13 Jan 2011 01:47:41 +0000"  >&lt;p&gt;@ryan.  sorry, I looked at this description a little too quickly.  We were talking about slightly different scenario with HMaster log split pruning.  You are correct, the region level seems to be the correct location.&lt;/p&gt;</comment>
                            <comment id="12981132" author="stack" created="Thu, 13 Jan 2011 05:12:38 +0000"  >&lt;p&gt;Thinking on the way home and after chatting more with Ryan, I&apos;m thinking that we do not want two sets of sequence numbers &amp;#8211; one at regionserver level (HLog sequence id) and then another HRegion-scoped one.  All edits are bottlenecked via the WAL &amp;#8211; give or take the skip WAL write flag and deferred flush &amp;#8211; and so arbitrarily breaking the transaction into two phases, the WAL write then the commit to memstore, seems like it gains us little; edits will stack up behind the WAL chicane anyways.&lt;/p&gt;

&lt;p&gt;Paranoia regards performance issues come from long waits in &apos;wait to be visible&apos; phase when the Transaction spanned WAL.&lt;/p&gt;

&lt;p&gt;I&apos;m thinking now that for this issue, we do it first &apos;correct&apos; &amp;#8211; e.g. use HLog sequence number throughout and start the &apos;transaction&apos; pre-WAL &amp;#8211; and then in a new issue figure the smarts that will get us over the slowness we&apos;ve seen before taking this tack.&lt;/p&gt;</comment>
                            <comment id="12981140" author="ryanobjc" created="Thu, 13 Jan 2011 06:02:48 +0000"  >&lt;p&gt;Unfortunately the paranoia re: performance is borne out by direct&lt;br/&gt;
experience.  It will be an issue, and it will be a blocker and we&lt;br/&gt;
should deal with it right now. Since fixing it might require&lt;br/&gt;
architectural level changes in how we manage these things internally.&lt;br/&gt;
including up to and including using a different ID stream for atomic&lt;br/&gt;
consistency.&lt;/p&gt;

&lt;p&gt;Backing up a bit, the basic issue is that a handler thread cannot&lt;br/&gt;
complete and return to the client until the row-transaction it was&lt;br/&gt;
working on is visible to other clients. To do otherwise risks data&lt;br/&gt;
loss for ICV and inconsistent read-your-own-write scenarios for&lt;br/&gt;
clients.  But while waiting we are tying up a handler thread, and have&lt;br/&gt;
to wait on the longest pole HLog append (which can take seconds at&lt;br/&gt;
their worst!).  You end up with a RS level stall which is pretty ugly.&lt;/p&gt;

&lt;p&gt;I dont want 2 sets of sequence numbers, but I am concerned that we&lt;br/&gt;
might need it.  Perhaps we can find a more elegant mechanism of&lt;br/&gt;
cheaply keeping track of which seqids are &apos;committed&apos; and visible and&lt;br/&gt;
which are not.  Right now we use a simple &apos;read point&apos; which acts like&lt;br/&gt;
a line in the sand.  Previous proposals called for a bitmask of the&lt;br/&gt;
last N numbers.  The problem with this is that deferred flushing&lt;br/&gt;
combined with non-deferred flushing would cause major problems, as the&lt;br/&gt;
last N we need to keep track of keeps on expanding.&lt;/p&gt;

&lt;p&gt;Perhaps a reverse bitmask where we keep track of the PREVIOUS N tx&lt;br/&gt;
that are NOT committed might make more sense.  Implementing it&lt;br/&gt;
efficiently is another question.&lt;/p&gt;</comment>
                            <comment id="12981151" author="stack" created="Thu, 13 Jan 2011 06:29:02 +0000"  >&lt;p&gt;How do the arrays of outstanding txs work?  How do you correlate a particular bit to a particular transaction?&lt;/p&gt;

&lt;p&gt;I don&apos;t get how this would be different than read point since you can&apos;t return to client till all transactions before yours have completed, right?  Or does the bit array somehow expand our vocabulary beyond binary read point?&lt;/p&gt;</comment>
                            <comment id="12981152" author="ryanobjc" created="Thu, 13 Jan 2011 06:34:45 +0000"  >&lt;p&gt;yes precisely, the bit array allows us to not just have a binary read&lt;br/&gt;
point threshold, hence we dont have to &apos;wait&apos; anymore.&lt;/p&gt;

&lt;p&gt;at the cost of space and complexity though. how to do it in a&lt;br/&gt;
manageable way is outstanding.&lt;/p&gt;</comment>
                            <comment id="12981576" author="nspiegelberg" created="Fri, 14 Jan 2011 00:27:12 +0000"  >&lt;p&gt;@ryan : I&apos;m trying to understand why you think we might need 2 seqids.  If you move the seqid from the RS level to the region level, I see a lot of benefits beyond this jira.  Log recovery, for example, wouldn&apos;t need to balance between the dead RS&apos;s seqid numbering and the new RS&apos;s numbering. &lt;/p&gt;</comment>
                            <comment id="12983351" author="stack" created="Tue, 18 Jan 2011 19:47:49 +0000"  >&lt;p&gt;Added in some work on runtime-migration of old-style KVs. &lt;/p&gt;

&lt;p&gt;Patch not yet ready for review.&lt;/p&gt;</comment>
                            <comment id="12988697" author="stack" created="Mon, 31 Jan 2011 09:08:53 +0000"  >&lt;p&gt;More self-migration fixes and tests.&lt;/p&gt;</comment>
                            <comment id="12989365" author="stack" created="Tue, 1 Feb 2011 20:13:02 +0000"  >&lt;p&gt;Chatting w/ Beno&#238;t last night, he had a good suggestion.  He suggested we NOT add extra long to the KV, that instead we just use the already existing in-memory only memstorets that is in each KV.  He suggested that on open of a storefile, that we just pick up its oldest sequence number or assign a sequence number on opening and keep that too in memory associated with the storefile.  Chatting, whenever we read in a KV from a store file, we could insert into the memstorets field the storefiles sequence number; all edits in a storefile would have the same sequence number.  When we flush, and we bring online the new storefile, it would have the flush sequence number.  We would still need to move to using sequence number instead of the incrementing number we have in RWCC and we&apos;d need to have the transaction, for correctness, span the WAL where it doesn&apos;t now, but this suggestion would save our upping the Key part of KV when persisted.&lt;/p&gt;

&lt;p&gt;Trying the above on Ryan.&lt;/p&gt;</comment>
                            <comment id="12989399" author="ryanobjc" created="Tue, 1 Feb 2011 21:46:32 +0000"  >&lt;p&gt;Don&apos;t we already have this? The comparator uses the max_seq_id to break ties between KVs...&lt;/p&gt;

&lt;p&gt;The primary issue is that we need to know which KVs are &apos;committed&apos; and which are still being created in progress. Right now we have a problem whereby the scanner stack gets a little wonky about how it handles partial next()s. By moving the memstoreTS pruning up to the HRegion scanner level, and working on entire rows at a time, this might mitigate most of the problem actually. This might get ugly with family only flushes, since in theory you might end up with a row that is not completely written but is in memstore &amp;amp; hfile at the same time. Given that the scope of a RWCC &quot;transaction&quot; is only memstore insert, I&apos;m not sure how that would happen. It&apos;s possible we could prevent it from becoming a problem with judicious use of the updateLock in HRegion though.&lt;/p&gt;

&lt;p&gt;For example, by grabbing the updateLock.writeLock().lock() during the switch over, or the flush, we could ensure that all the pending writes are now complete, then do the switch out, then we&apos;d never have a situation where a half committed write is in memstore &amp;amp; hfile at the same time.&lt;/p&gt;</comment>
                            <comment id="12989486" author="stack" created="Wed, 2 Feb 2011 01:19:02 +0000"  >&lt;p&gt;Chatting with Ryan:&lt;/p&gt;

&lt;p&gt;+ To be solved is how read/write rwcc points are respected on hfile flush; how do we not pull from hfile, items that are in the future as far as current rwcc read point is concerned (especially when cf7 of a ten cf row flushes mid-read).&lt;br/&gt;
+ Soln is that we&apos;ll move the read point forward up in region scanner on each next invocation; i.e on entrance into a new row.  We&apos;ll also only swap in new hfiles on next up in the region scanner (rather than down in store scanner as is currently done).  So, if row of 100 cfs and 1M columns, as we&apos;re reading, we&apos;ll hold the rwcc read point.  cf 48 and cf 59 might flush but we&apos;ll not swap in their new store files until we get to the end of the row (we&apos;ll be holding on to the snapshots for a little longer than we do now).&lt;br/&gt;
+ On next up in region scanner, we also need to reseek each row even though this could be a perf killer.  Our current notion of end-of-row marker is the kv that does not have a row that matches that of the row we are currently in.  Lets call this next row kv kvnext.  We park here in between next invocations.  Well, what if in between region next invocations, there is a big pause and a bunch of puts come in only the puts have same row as kvnext AND they happen to sort before the kvnext at which we are currently parked.  We have to reseek (It could be worse, a new row could have been inserted between next invocations in between kvbefore and kvnext...... if parked at kvnext we&apos;re not going to see it, not unless we do hbase-3498).&lt;br/&gt;
+ We do not think we need to add a sequence number to KV, one that is persisted out to HFile.&lt;br/&gt;
+ It looks like we do not need to use hlog&apos;s sequence number all over; we can keep up RWCCs little incrementing value.  We can also keep its memstore scope &amp;#8211; as opposed to what was being discussed above where we were going to broaden the scope to cover WAL writing.&lt;/p&gt;</comment>
                            <comment id="12989682" author="nspiegelberg" created="Wed, 2 Feb 2011 16:01:28 +0000"  >&lt;p&gt;&lt;a href=&quot;http://rhaas.blogspot.com/2011/02/mysql-vs-postgresql-part-2-vacuum-vs.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://rhaas.blogspot.com/2011/02/mysql-vs-postgresql-part-2-vacuum-vs.html&lt;/a&gt;&lt;br/&gt;
Interesting article comparing how InnoDB and PostgreSQL handle RWCC for roughly this same issue.&lt;/p&gt;</comment>
                            <comment id="12989690" author="stack" created="Wed, 2 Feb 2011 16:10:25 +0000"  >&lt;p&gt;Thanks for pointer N.&lt;/p&gt;</comment>
                            <comment id="12989732" author="stack" created="Wed, 2 Feb 2011 18:13:36 +0000"  >&lt;p&gt;That article just talks about mvcc, which is kinda what we&apos;re doing already.  Our difficulty though is managing versions across row boundaries and flushes.&lt;/p&gt;</comment>
                            <comment id="12989925" author="stack" created="Thu, 3 Feb 2011 00:43:08 +0000"  >&lt;p&gt;Regards &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2673&quot; title=&quot;Investigate consistency of intra-row scans&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2673&quot;&gt;&lt;del&gt;HBASE-2673&lt;/del&gt;&lt;/a&gt;, which is about consistent view when intra-row scanning, if we do NOT add the transactionid/sequenceid to the hfile, then we must punt on it; i.e. intra-row scanning, you will not get a consistent view.&lt;/p&gt;</comment>
                            <comment id="12990259" author="stack" created="Thu, 3 Feb 2011 19:46:43 +0000"  >&lt;p&gt;The other dimension we need to consider is bulk load &amp;#8211; especially the new multifamily bulk load.  The bulk addition needs to come in at a row boundary so we keep up a consistent row view.&lt;/p&gt;</comment>
                            <comment id="12990261" author="ryanobjc" created="Thu, 3 Feb 2011 19:50:17 +0000"  >&lt;p&gt;i dont think bulk load is an issue, since we only call update readers between rows (once we move the update readers to the HRegion.Scanner level), then it will be an atomic &apos;appearance&apos; of data. Does that sound right?&lt;/p&gt;</comment>
                            <comment id="13052784" author="stack" created="Tue, 21 Jun 2011 19:43:29 +0000"  >&lt;p&gt;Moving out of 0.92.  The work won&apos;t be done in time.&lt;/p&gt;</comment>
                            <comment id="13099214" author="amitanand" created="Wed, 7 Sep 2011 18:58:37 +0000"  >&lt;p&gt;I have created a few sub-tasks and submitted a diff for the same. Could y&apos;ll &lt;br/&gt;
have a look at it, and let me know what you think? &lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Amit&lt;/p&gt;</comment>
                            <comment id="13121380" author="jiraposter@reviews.apache.org" created="Wed, 5 Oct 2011 19:20:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;

&lt;p&gt;version v11 of the patch.&lt;/p&gt;

&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1174515 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1174515 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1174515 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1175027 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1174515 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1174515 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1174515 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1174515 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1174515 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1174515 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1175027 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1174515 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1174515 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1174515 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn test&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Amitanand&lt;/p&gt;
</comment>
                            <comment id="13121529" author="jiraposter@reviews.apache.org" created="Wed, 5 Oct 2011 22:08:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/#review2369&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#review2369&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Find inline some partial review comments (joint review with Kannan)&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Karthik&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-05 19:18:51, Amitanand Aiyer wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-05 19:18:51)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;version v11 of the patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1175027 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1175027 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;mvn test&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Amitanand&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13121530" author="jiraposter@reviews.apache.org" created="Wed, 5 Oct 2011 22:08:30 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/#review2366&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#review2366&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5451&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5451&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Rename to shouldIncludeMemstoreTS&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5434&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5434&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5435&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5435&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5436&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5436&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    whitespace&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5437&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5437&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is this constructor used anywhere? We could remove both this and the default constructor as this.memstoreRead and this.memstoreWrite should be 0 by default.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5450&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5450&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Rename to useRWCC&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5448&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5448&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    if () &lt;/p&gt;
{
      ...
    }



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5442&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5442&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Comment update - sequence id should be timestamp&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5449&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5449&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Pass hint to StoreScanner about whether rwcc is to be used or not (non-compaction versus compaction)&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Karthik&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-05 19:18:51, Amitanand Aiyer wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-05 19:18:51)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;version v11 of the patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1175027 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1175027 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;mvn test&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Amitanand&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13121583" author="jiraposter@reviews.apache.org" created="Wed, 5 Oct 2011 23:22:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/#review2365&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#review2365&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;this is some good stuff.  nice work amit.&lt;/p&gt;


&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5429&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5429&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    whitespace added in this file&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5439&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5439&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    maybe add one line of javadoc to describe why we need this method (this is a method that gets used pretty widely in the code to support this change)&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5430&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5430&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    should we be pulling this stuff from KeyValue constants instead of Bytes directly?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5431&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5431&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    debug?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5433&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5433&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    maybe move this Bytes.SIZEOF_LONG into some other constant that reflects what this is for?  KeyValue.MEMSTORE_TS_SIZE or some such thing&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5440&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5440&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    comment here&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5441&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5441&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    accidental new line w/ whitespace&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5443&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5443&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    introducing whitespace here and throughout file&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5444&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5444&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    since this is a public constructor, add a comment that this initializes to 0&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5445&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5445&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    add javadoc to the public method and maybe turn it into a setter.  i actually have a chance i&apos;d like to get in eventually that requires disabling rwcc for a specified read&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5446&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5446&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    this javadoc is stale now&lt;/p&gt;



&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5447&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    just remove&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-05 19:18:51, Amitanand Aiyer wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-05 19:18:51)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;version v11 of the patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1175027 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1175027 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;mvn test&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Amitanand&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13121588" author="jiraposter@reviews.apache.org" created="Wed, 5 Oct 2011 23:24:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/#review2374&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#review2374&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;LGTM (Caveat the feedback by the boys above).  Minors in the below to consider if making new patch.  Oh, lots of whitespace as the lads say that you might purge though no biggie.&lt;/p&gt;


&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5461&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5461&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If new version, fix this ... add parens or put it all on one line.. hard to read as is.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5462&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5462&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Add parens if you are making new patch here.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5463&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5463&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ditto&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5464&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5464&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Parens&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5465&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5465&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is this a good name?  Its come back in from the storefile metadata.  There is no memstore in this context.  No biggie.  Just saying.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-05 19:18:51, Amitanand Aiyer wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-05 19:18:51)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;version v11 of the patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1175027 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1175027 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;mvn test&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Amitanand&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13121609" author="jiraposter@reviews.apache.org" created="Wed, 5 Oct 2011 23:54:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/#review2376&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#review2376&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Rest of the diff reviewed, and comments inline. (Joint review with Kannan).&lt;/p&gt;


&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5472&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5472&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Rename to: hasMemstoreTS&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5469&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5469&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    if () {&lt;br/&gt;
    }&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5470&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5470&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove comment&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5471&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5471&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should check against the constant:&lt;br/&gt;
    Bytes.toInt(keyValueFormatVersion) == KEY_VALUE_VER_WITH_MEMSTORE&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5467&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5467&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    if () {&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    1. Discussed with Amitanand, he is planning to move this to the end of the KV (to play nice with delta encoding). &lt;br/&gt;
    2. Also planning to store this in varying-length format&lt;br/&gt;
    3. Also, if (kv.memstoreTS &amp;lt; current read point across all scanners) then we can just write a 0. This would be the case for most of the KV&apos;s except the last few written. &lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5468&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5468&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Need a:&lt;br/&gt;
    if (this.includeMemstoreTS) {&lt;br/&gt;
    }&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Karthik&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-05 19:18:51, Amitanand Aiyer wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-05 19:18:51)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;version v11 of the patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1175027 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1175027 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1174515 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;mvn test&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Amitanand&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13121667" author="yuzhihong@gmail.com" created="Thu, 6 Oct 2011 01:51:10 +0000"  >&lt;p&gt;FYI patch v11 from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4344&quot; title=&quot;Persist memstoreTS to disk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4344&quot;&gt;&lt;del&gt;HBASE-4344&lt;/del&gt;&lt;/a&gt; didn&apos;t contain 4485-v4.txt for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4485&quot; title=&quot;Eliminate window of missing Data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4485&quot;&gt;&lt;del&gt;HBASE-4485&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13124369" author="jiraposter@reviews.apache.org" created="Mon, 10 Oct 2011 18:28:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-10-10 18:27:58.815672)&lt;/p&gt;


&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;use variable length encoding to store the memstoreTS. &lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;

&lt;p&gt;version v11 of the patch.&lt;/p&gt;

&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1179910 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1179910 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1179910 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1179910 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1179910 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1179910 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1179910 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1179910 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1179910 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1179910 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1179910 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1179910 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1179910 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1179910 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn test&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Amitanand&lt;/p&gt;
</comment>
                            <comment id="13124561" author="jiraposter@reviews.apache.org" created="Mon, 10 Oct 2011 23:14:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-10-10 23:14:05.211809)&lt;/p&gt;


&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;address some of the comments given.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;

&lt;p&gt;version v11 of the patch.&lt;/p&gt;

&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1181113 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn test&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Amitanand&lt;/p&gt;
</comment>
                            <comment id="13124564" author="jiraposter@reviews.apache.org" created="Mon, 10 Oct 2011 23:18:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/#review2497&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#review2497&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5655&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5655&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    convert tab to spaces.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5656&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5656&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Would MAX_MEMSTORE_TS_KEY be a better name ?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-10 23:14:05, Amitanand Aiyer wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-10 23:14:05)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;version v11 of the patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;mvn test&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Amitanand&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13124572" author="jiraposter@reviews.apache.org" created="Mon, 10 Oct 2011 23:30:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-10-10 23:30:10.189214)&lt;/p&gt;


&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;fix whitespace issues.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;

&lt;p&gt;version v11 of the patch.&lt;/p&gt;

&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1181113 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn test&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Amitanand&lt;/p&gt;
</comment>
                            <comment id="13124575" author="jiraposter@reviews.apache.org" created="Mon, 10 Oct 2011 23:36:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-10-10 23:35:00.552025)&lt;/p&gt;


&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;rename MAX_MEMSTORE_KEY to MAX_MEMSTORE_TS_KEY&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;

&lt;p&gt;version v11 of the patch.&lt;/p&gt;

&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1181113 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn test&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Amitanand&lt;/p&gt;
</comment>
                            <comment id="13124581" author="jiraposter@reviews.apache.org" created="Mon, 10 Oct 2011 23:40:29 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-10-05 23:23:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java, line 556&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/diff/1/?file=48330#file48330line556&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff/1/?file=48330#file48330line556&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is this a good name?  Its come back in from the storefile metadata.  There is no memstore in this context.  No biggie.  Just saying.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt; any suggestions?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Amitanand&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/#review2374&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#review2374&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-10-10 23:35:00, Amitanand Aiyer wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-10 23:35:00)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;version v11 of the patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;mvn test&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Amitanand&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13124634" author="jiraposter@reviews.apache.org" created="Tue, 11 Oct 2011 01:04:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/#review2499&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#review2499&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Amit: &lt;/p&gt;

&lt;p&gt;This is looking really good.&lt;/p&gt;

&lt;p&gt;+1 on the changes. You mentioned the TestAcidGuarantees still has some issues-- so +1 pending a resolution of that.&lt;/p&gt;

&lt;p&gt;There are still some whitespace issues. Also, please find some inlined comments.&lt;/p&gt;

&lt;p&gt;regards,&lt;br/&gt;
Kannan&lt;/p&gt;


&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5658&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5658&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    1) Unfortunate that we have to create these two objects (ByteArrayInputStream &amp;amp; DataInputStream) for every KV. I suppose if this becomes an issue we could add overloads in WriteableUtils.readVLong that directly work on byte arrays instead of requiring a DataInput stream. &lt;span class=&quot;error&quot;&gt;&amp;#91;Probably not a big deal-- but just something to remember.&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;    2) Could you combine lines 582 &amp;amp; 583 by using this overload of the constructor:&lt;/p&gt;

&lt;p&gt;    public ByteArrayInputStream(byte[] buf,&lt;br/&gt;
                                int offset,&lt;br/&gt;
                                int length)&lt;/p&gt;




&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Kannan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-10 23:35:00, Amitanand Aiyer wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-10 23:35:00)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;version v11 of the patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;mvn test&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Amitanand&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13124639" author="jiraposter@reviews.apache.org" created="Tue, 11 Oct 2011 01:10:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-10-11 01:09:52.483911)&lt;/p&gt;


&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;fix the TestAcidGuarantees test.&lt;/p&gt;

&lt;p&gt;Had changed a condition from &amp;gt; 0 to == HFileWriterV2.KEY_VALUE_VER_WITH_MEMSTORE&lt;/p&gt;

&lt;p&gt;make sure it is == &lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;

&lt;p&gt;version v11 of the patch.&lt;/p&gt;

&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1181113 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1181113 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1181113 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn test&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Amitanand&lt;/p&gt;
</comment>
                            <comment id="13124643" author="jiraposter@reviews.apache.org" created="Tue, 11 Oct 2011 01:24:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/#review2500&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#review2500&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2224/#comment5659&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#comment5659&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; new revision looks good.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Kannan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-11 01:09:52, Amitanand Aiyer wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-11 01:09:52)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;version v11 of the patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1181113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;mvn test&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Amitanand&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13124645" author="yuzhihong@gmail.com" created="Tue, 11 Oct 2011 01:32:53 +0000"  >&lt;p&gt;I think we should tackle TestAcidGuarantees failure(s) next.&lt;/p&gt;</comment>
                            <comment id="13128059" author="jiraposter@reviews.apache.org" created="Sat, 15 Oct 2011 04:10:11 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-10-15 04:08:41.977544)&lt;/p&gt;


&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Fix 2 more issues that could potentially cause ACID violations&lt;/p&gt;

&lt;p&gt;(a) We only used to write maxVersions number of KV&apos;s to disk during &lt;br/&gt;
flush. &lt;/p&gt;

&lt;p&gt;  Not all KVs should be counted during this calculation. We shall&lt;br/&gt;
ignore all KV&apos;s newer than the oldest read point. So the oldest&lt;br/&gt;
Scanner can also get enough versions.&lt;/p&gt;

&lt;p&gt;(b) move the ignoring newer KV&apos;s logic to the StoreFileScanner. That&lt;br/&gt;
way, this only returns KV&apos;s that are guaranteed to be included in the&lt;br/&gt;
search.&lt;/p&gt;

&lt;p&gt;There was a condition where if two KVs were written to the same file. Both&lt;br/&gt;
identical, but only differ in memstoreTS, then we would skip the duplicate.&lt;/p&gt;

&lt;p&gt;It was possible that the first one would be ignored because it has a newer&lt;br/&gt;
memstoreTS, and we would never get to see the second one, which might be&lt;br/&gt;
the KV we want.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;

&lt;p&gt;version v11 of the patch.&lt;/p&gt;

&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /pom.xml 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ColumnCount.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ColumnTracker.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/ScanWildcardColumnTracker.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java 1183581 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1183581 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 1183581 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1183581 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1183581 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1183581 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/regionserver/TestExplicitColumnTracker.java 1183581 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java 1183581 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWildcardColumnTracker.java 1183581 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1183581 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn test&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Amitanand&lt;/p&gt;
</comment>
                            <comment id="13128657" author="yuzhihong@gmail.com" created="Mon, 17 Oct 2011 04:41:49 +0000"  >&lt;p&gt;For patch v7, boolean ignoreCount is added to checkColumn(). I think javadoc for this new parameter should be added to ColumnTracker.java&lt;br/&gt;
Javadoc for long readPointToUse of ScanQueryMatcher ctor should be added.&lt;br/&gt;
Javadoc for boolean useRWCC of StoreFileScanner ctor and getScannersForStoreFiles() should be added.&lt;br/&gt;
There is duplicate code in StoreFileScanner.next(): lines 164 to 172.&lt;/p&gt;</comment>
                            <comment id="13128687" author="jiraposter@reviews.apache.org" created="Mon, 17 Oct 2011 06:08:11 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/#review2614&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#review2614&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Amit: Did you rebase before uploading the new patch. That, unfortunately, is making it hard to isolate the changes between r6 and r7. Will review tomorrow morning.&lt;/p&gt;

&lt;p&gt;But I did read your description about the issues you mentioned. &lt;/p&gt;

&lt;p&gt;Regarding (b)-- we had already discussed in person. That makes sense.&lt;/p&gt;

&lt;p&gt;And really nice catch on (a) too!! That is indeed subtle and tricky. Super!!!&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Kannan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-15 04:08:41, Amitanand Aiyer wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-15 04:08:41)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;version v11 of the patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/pom.xml 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ColumnCount.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanWildcardColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestExplicitColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWildcardColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;mvn test&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Amitanand&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13129986" author="jiraposter@reviews.apache.org" created="Tue, 18 Oct 2011 20:07:10 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-10-17 06:06:23, Kannan Muthukkaruppan wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Amit: Did you rebase before uploading the new patch. That, unfortunately, is making it hard to isolate the changes between r6 and r7. Will review tomorrow morning.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; But I did read your description about the issues you mentioned. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Regarding (b)-- we had already discussed in person. That makes sense.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; And really nice catch on (a) too!! That is indeed subtle and tricky. Super!!!&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Looks like a lot has changed since the original revision that I based my first patch off.&lt;/p&gt;

&lt;p&gt;Please disregard v7.&lt;/p&gt;

&lt;p&gt;Let me submit these modifications as a separate diff. I have a sub-jira created for each part.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Amitanand&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/#review2614&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#review2614&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-10-15 04:08:41, Amitanand Aiyer wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-15 04:08:41)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;version v11 of the patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/pom.xml 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ColumnCount.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanWildcardColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestExplicitColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWildcardColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;mvn test&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Amitanand&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13132053" author="yuzhihong@gmail.com" created="Thu, 20 Oct 2011 21:18:58 +0000"  >&lt;p&gt;Maybe &lt;a href=&quot;https://reviews.apache.org/r/2483&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2483&lt;/a&gt; belongs to this JIRA.&lt;br/&gt;
Two new parameters are added to ScanQueryMatcher ctor: readPointToUse and ignoreDuplicates.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4536&quot; title=&quot;Allow CF to retain deleted rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4536&quot;&gt;&lt;del&gt;HBASE-4536&lt;/del&gt;&lt;/a&gt; is going to be integrated soon where we have:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ScanQueryMatcher(Scan scan, Store.ScanInfo scanInfo,
+      NavigableSet&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]&amp;gt; columns, StoreScanner.ScanType scanType,
+      &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; earliestPutTs) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think any new parameters should be reviewed before deciding where they belong.&lt;/p&gt;</comment>
                            <comment id="13136793" author="jiraposter@reviews.apache.org" created="Thu, 27 Oct 2011 05:43:32 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-10-17 06:06:23, Kannan Muthukkaruppan wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Amit: Did you rebase before uploading the new patch. That, unfortunately, is making it hard to isolate the changes between r6 and r7. Will review tomorrow morning.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; But I did read your description about the issues you mentioned. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Regarding (b)-- we had already discussed in person. That makes sense.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; And really nice catch on (a) too!! That is indeed subtle and tricky. Super!!!&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Amitanand Aiyer wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looks like a lot has changed since the original revision that I based my first patch off.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Please disregard v7.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Let me submit these modifications as a separate diff. I have a sub-jira created for each part.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Seems like we are all basically +1 on this patch upto to some point - could we commit till there? We can add the other changes as separate tasks under the same umbrella task. &lt;/p&gt;

&lt;p&gt;The other diffs are based on this diff... and they are separate issues from what this is addressing (persisting memstoreTS). Its getting confusing if we keep adding to this diff.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Karthik&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2224/#review2614&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/#review2614&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-10-15 04:08:41, Amitanand Aiyer wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2224/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-15 04:08:41)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for Ted Yu, Michael Stack, Kannan Muthukkaruppan, and Karthik Ranganathan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;address the 2856 issues by writing the memstoreTS to the disk.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;version v11 of the patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;uploading it here for easier review process.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2856&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/pom.xml 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ColumnCount.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/ScanWildcardColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestExplicitColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWildcardColumnTracker.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1183581 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2224/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2224/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;mvn test&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Amitanand&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13136844" author="stack" created="Thu, 27 Oct 2011 06:46:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;Seems like we are all basically +1 on this patch upto to some point - could we commit till there?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds good to me.  Can you do this Amit?  (i.e. cut out the bits that have the +1s?)  Good stuff.&lt;/p&gt;</comment>
                            <comment id="13147489" author="dhruba" created="Thu, 10 Nov 2011 04:49:05 +0000"  >&lt;p&gt;hi amit, what needs to be done to get this patch to the next step? Thanks.&lt;/p&gt;</comment>
                            <comment id="13148231" author="hudson" created="Fri, 11 Nov 2011 02:56:29 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2427 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2427/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2427/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3690&quot; title=&quot;Option to Exclude Bulk Import Files from Minor Compaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3690&quot;&gt;&lt;del&gt;HBASE-3690&lt;/del&gt;&lt;/a&gt; Option to Exclude Bulk Import Files from Minor Compaction&lt;/p&gt;

&lt;p&gt;Summary:&lt;br/&gt;
We ran an incremental scrape with HFileOutputFormat and&lt;br/&gt;
encountered major compaction storms. This is caused by the bug in&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3404&quot; title=&quot;Compaction Ordering for Bulk Import Files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3404&quot;&gt;&lt;del&gt;HBASE-3404&lt;/del&gt;&lt;/a&gt;. The permanent fix is a little tricky without &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;. We&lt;br/&gt;
realized that a quicker solution for avoiding these compaction storms is&lt;br/&gt;
to simply exclude bulk import files from minor compactions and let them&lt;br/&gt;
only be handled by time-based major compactions. Add with functionality&lt;br/&gt;
along with a config option to enable it.&lt;/p&gt;

&lt;p&gt;Rewrote this feature to be done on a per-bulkload basis.&lt;/p&gt;

&lt;p&gt;Test Plan:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;mvn test -Dtest=TestHFileOutputFormat&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;DiffCamp Revision:&lt;/p&gt;

&lt;p&gt;Reviewers: stack, Kannan, JIRA, dhruba&lt;/p&gt;

&lt;p&gt;Reviewed By: stack&lt;/p&gt;

&lt;p&gt;CC: dhruba, lhofhansl, nspiegelberg, stack&lt;/p&gt;

&lt;p&gt;Differential Revision: 357&lt;/p&gt;

&lt;p&gt;nspiegelberg : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/HFileOutputFormat.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHFileOutputFormat.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13152486" author="nspiegelberg" created="Fri, 18 Nov 2011 00:08:07 +0000"  >&lt;p&gt;Thanks for the patch Amit! Kannan &amp;amp; I internally reviewed this.  It looks like external reviewers are fine as well. Going to commit.&lt;/p&gt;</comment>
                            <comment id="13152494" author="lhofhansl" created="Fri, 18 Nov 2011 00:19:53 +0000"  >&lt;p&gt;v7 still has the change to surefire plugin version 2.8.&lt;/p&gt;</comment>
                            <comment id="13152497" author="yuzhihong@gmail.com" created="Fri, 18 Nov 2011 00:22:19 +0000"  >&lt;p&gt;2856-v7.txt didn&apos;t apply cleanly on TRUNK.&lt;/p&gt;

&lt;p&gt;It would be nice to see HadoopQA run TestAcidGuarantees to completion.&lt;/p&gt;</comment>
                            <comment id="13152506" author="nspiegelberg" created="Fri, 18 Nov 2011 00:37:56 +0000"  >&lt;p&gt;@Lars &amp;amp; @Ted: I will commit.  Working directly with Amit on all these issues.  The proper file to use, rebasing, the commit order, making sure unit tests pass, everything.  Hang tight &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13152586" author="amitanand" created="Fri, 18 Nov 2011 01:51:43 +0000"  >&lt;p&gt;2856-v8.txt is essentially 2856-v6.txt, after rebasing to the latest HEAD.&lt;/p&gt;</comment>
                            <comment id="13152592" author="amitanand" created="Fri, 18 Nov 2011 02:00:59 +0000"  >&lt;p&gt;2856-v9-all-inclusive includes all the 4 patches for the sub tasks&lt;br/&gt;
&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; persist memstorTS to disk&lt;br/&gt;
(ii) 4485&lt;br/&gt;
(iii) track versions corrrectly&lt;br/&gt;
(iv) rename RWCC to MVCC.&lt;/p&gt;

&lt;p&gt;This is rebased to the latest trunk HEAD. trunk@1203428&lt;/p&gt;

&lt;p&gt;Ran the unit tests on mr. and they seem to pass except TestShell (which seems to fail even without these patches).&lt;/p&gt;</comment>
                            <comment id="13152600" author="lhofhansl" created="Fri, 18 Nov 2011 02:26:57 +0000"  >&lt;p&gt;Yeah baby!&lt;/p&gt;</comment>
                            <comment id="13152699" author="hudson" created="Fri, 18 Nov 2011 07:12:04 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2454 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2454/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2454/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt; Cross Column Family Read Atomicity&lt;/p&gt;

&lt;p&gt;nspiegelberg : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/ReadWriteConsistencyControl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13153074" author="stack" created="Fri, 18 Nov 2011 19:34:28 +0000"  >&lt;p&gt;Whoopdee!  (Good on you Amit).&lt;/p&gt;</comment>
                            <comment id="13153081" author="stack" created="Fri, 18 Nov 2011 19:44:55 +0000"  >&lt;p&gt;So remaining acid issues are linked from this one?  hbase-3543, etc.?&lt;/p&gt;</comment>
                            <comment id="13153282" author="jmhsieh" created="Sat, 19 Nov 2011 00:50:59 +0000"  >&lt;p&gt;I&apos;ve been looping TestAcidGuarantee&apos;s fro about 6 hours now and it is still chugging along and has not  failed.  I&apos;m going to let it go overnight.  (I believe it used to fail within an hour)  &lt;/p&gt;

&lt;p&gt;What are thoughts on backporting this onto the 0.92 branch?   (as a separate issue..)&lt;/p&gt;</comment>
                            <comment id="13153390" author="stack" created="Sat, 19 Nov 2011 05:02:18 +0000"  >&lt;p&gt;If someone did it in next day or so, I&apos;d be up for having it committed to 0.92 in time for first RC &amp;#8211; there&apos;s one issue outstanding at mo (Thats good news this patch is not yet failing &amp;#8211; its pretty amazing really).   If its not done in next day or so, it&apos;ll miss the first RC.  Could commit it to the RC that follows (Somehow I don&apos;t think the first RC is going to make it out).&lt;/p&gt;</comment>
                            <comment id="13153391" author="lhofhansl" created="Sat, 19 Nov 2011 05:08:14 +0000"  >&lt;p&gt;+1 on backporting to 0.92 (I can&apos;t volunteer, though).&lt;/p&gt;</comment>
                            <comment id="13153396" author="stack" created="Sat, 19 Nov 2011 05:38:34 +0000"  >&lt;p&gt;I took a look.  It seems a little tricky getting this in.  There is more than just this patch involved.  I see RWCC&apos;s begin/ends that are in trunk but not in 0.92.  So we&apos;d need more than just this patch.&lt;/p&gt;</comment>
                            <comment id="13153678" author="lhofhansl" created="Sun, 20 Nov 2011 04:07:26 +0000"  >&lt;p&gt;Since this mainly clashes with my change from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4536&quot; title=&quot;Allow CF to retain deleted rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4536&quot;&gt;&lt;del&gt;HBASE-4536&lt;/del&gt;&lt;/a&gt;, I&apos;m probably best qualified to adapt the patch to 0.92. I&apos;m working on a 0.92 patch now.&lt;/p&gt;</comment>
                            <comment id="13153679" author="lhofhansl" created="Sun, 20 Nov 2011 04:10:56 +0000"  >&lt;p&gt;I extracted the trunk patch this way: svn diff -r r1203428:r1203468&lt;/p&gt;</comment>
                            <comment id="13153713" author="lhofhansl" created="Sun, 20 Nov 2011 05:53:00 +0000"  >&lt;p&gt;Turns out this relies on API introduced in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4219&quot; title=&quot;Add Per-Column Family Metrics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4219&quot;&gt;&lt;del&gt;HBASE-4219&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13153738" author="lhofhansl" created="Sun, 20 Nov 2011 06:57:35 +0000"  >&lt;p&gt;Here&apos;s a patch against 0.92. I pulled in the necessary API changes from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4219&quot; title=&quot;Add Per-Column Family Metrics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4219&quot;&gt;&lt;del&gt;HBASE-4219&lt;/del&gt;&lt;/a&gt; (but not the rest of the functionality).&lt;/p&gt;

&lt;p&gt;I could use some help verifying the patch and testing this!&lt;/p&gt;

&lt;p&gt;TestAcidGuarantees passed (but only ran it once).&lt;/p&gt;</comment>
                            <comment id="13153774" author="jmhsieh" created="Sun, 20 Nov 2011 12:39:33 +0000"  >&lt;p&gt;On trunk, TestAcidGuarantees ran for a solid day and a half (33+ hours) without failing.  &lt;/p&gt;

&lt;p&gt;larsh@ I&apos;ll loop the 0.92 version and let it run through today and report how it fared around midday monday.&lt;/p&gt;</comment>
                            <comment id="13153775" author="jmhsieh" created="Sun, 20 Nov 2011 12:39:41 +0000"  >&lt;p&gt;On trunk, TestAcidGuarantees ran for a solid day and a half (33+ hours) without failing.  &lt;/p&gt;

&lt;p&gt;larsh@ I&apos;ll loop the 0.92 version and let it run through today and report how it fared around midday monday.&lt;/p&gt;</comment>
                            <comment id="13153850" author="lhofhansl" created="Sun, 20 Nov 2011 19:15:51 +0000"  >&lt;p&gt;Thanks Jon!&lt;/p&gt;

</comment>
                            <comment id="13153852" author="lhofhansl" created="Sun, 20 Nov 2011 19:19:47 +0000"  >&lt;p&gt;@Nicolas and @Amit, could you review the 0.92 patch? It turned out to be much more manual than I had wished or expected, so it is very possible that I missed something.&lt;/p&gt;

&lt;p&gt;(I tried to upload the 0.92 patch to review board for easier verification, but apparently that does not work for branches other than trunk.)&lt;/p&gt;</comment>
                            <comment id="13153925" author="jmhsieh" created="Mon, 21 Nov 2011 00:48:01 +0000"  >&lt;p&gt;@larsh I posted it for you here.  &lt;a href=&quot;https://reviews.apache.org/r/2893/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2893/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I applied the patch, committed it and generated a git-patch via &apos;git format-patch HEAD^&apos; which has enough info to find the right branch.&lt;/p&gt;</comment>
                            <comment id="13153983" author="stack" created="Mon, 21 Nov 2011 04:40:22 +0000"  >&lt;p&gt;You fellas want this in 0.92?   I want to cut a 0.92 RC.  I have 0.92 tests passing up on jenkins a few times in a row now and all criticals and blockers are in.  Should we wait?  Or should we cut the RC and get this into the second RC (I&quot;m sure there&apos;ll be one).&lt;/p&gt;</comment>
                            <comment id="13153985" author="stack" created="Mon, 21 Nov 2011 04:52:59 +0000"  >&lt;p&gt;Do all tests pass w/ 0.92 version of this patch in place?&lt;/p&gt;</comment>
                            <comment id="13154002" author="lhofhansl" created="Mon, 21 Nov 2011 05:59:47 +0000"  >&lt;p&gt;Re: 0.92, I was going by your comment above&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If someone did it in next day or so, I&apos;d be up for having it committed to 0.92 in time for first RC.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;s not entirely clean, yet:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Results :

Failed tests:   testClosing(org.apache.hadoop.hbase.client.TestHCM)
  testFilterAcrossMultipleRegions(org.apache.hadoop.hbase.client.TestFromClientSide): expected:&amp;lt;17576&amp;gt; but was:&amp;lt;28064&amp;gt;
  testForceSplit(org.apache.hadoop.hbase.client.TestAdmin): Scanned more than expected (6000)
  testForceSplitMultiFamily(org.apache.hadoop.hbase.client.TestAdmin): Scanned more than expected (6000)
  testSplitWhileBulkLoadPhase(org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery)
  testGroupOrSplitPresplit(org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery)
  testWholesomeSplit(org.apache.hadoop.hbase.regionserver.TestSplitTransaction)
  testRollback(org.apache.hadoop.hbase.regionserver.TestSplitTransaction)
  testBasicSplit(org.apache.hadoop.hbase.regionserver.TestHRegion)

Tests in error: 
  testShutdownFixupWhenDaughterHasSplit(org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster): test timed out after 300000 milliseconds

Tests run: 1065, Failures: 9, Errors: 1, Skipped: 7
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I have no time to look at these tonight, though. But that probably points to another RC.&lt;/p&gt;

&lt;p&gt;Would sure be nice if the acid guarantees that HBase claims would be met in 0.92 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13154009" author="lhofhansl" created="Mon, 21 Nov 2011 06:26:40 +0000"  >&lt;p&gt;@Jon: Thanks for uploading to RB, btw.&lt;/p&gt;</comment>
                            <comment id="13154249" author="jmhsieh" created="Mon, 21 Nov 2011 15:39:10 +0000"  >&lt;p&gt;@lars the 0.92 version or TestAcidGuarantees ran for about 12 hours without problems. &lt;/p&gt;</comment>
                            <comment id="13154262" author="nspiegelberg" created="Mon, 21 Nov 2011 15:51:18 +0000"  >&lt;p&gt;Something to keep in mind: we have a version of this for our prod branch running on some smaller test clusters, but not yet on our actual prod clusters (since we committed it at the same time you did).  Also, note that between HFileV2 &amp;amp; this, there is no easy downgrade strategy after moving from 90 to 92.  I think that putting this in a 92 RC definitely means a extra testing effort.  However, it&apos;s been the last massive outstanding caveat for ACID semantics so it makes sense for 92 inclusion.  I&apos;m sure that other companies consider this a critical issue for their customers, so they would be up for accelerating this testing effort ahead of our schedule. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13154298" author="stack" created="Mon, 21 Nov 2011 17:17:31 +0000"  >&lt;p&gt;Lets get it in.&lt;/p&gt;

&lt;p&gt;@Lars TestHCM failed recently for me in 0.92 building locally.   Maybe its not related to this.&lt;/p&gt;

&lt;p&gt;@Jon Thanks for running 12 our proofing.&lt;/p&gt;</comment>
                            <comment id="13154332" author="lhofhansl" created="Mon, 21 Nov 2011 18:12:37 +0000"  >&lt;p&gt;testClosing is something I added as part of: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4805&quot; title=&quot;Allow better control of resource consumption in HTable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4805&quot;&gt;&lt;del&gt;HBASE-4805&lt;/del&gt;&lt;/a&gt;, I&apos;ll take a look.&lt;br/&gt;
Some of the other failing tests in there scare me. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13154399" author="lhofhansl" created="Mon, 21 Nov 2011 19:32:12 +0000"  >&lt;p&gt;This one looks bad:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;testFilterAcrossMultipleRegions(org.apache.hadoop.hbase.client.TestFromClientSid
e)  Time elapsed: 12.233 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
java.lang.AssertionError: expected:&amp;lt;17576&amp;gt; but was:&amp;lt;28064&amp;gt;
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.failNotEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:128)
	at org.junit.Assert.assertEquals(Assert.java:472)
	at org.junit.Assert.assertEquals(Assert.java:456)
	at org.apache.hadoop.hbase.client.TestFromClientSide.assertRowCount(Test
FromClientSide.java:528)
	at org.apache.hadoop.hbase.client.TestFromClientSide.testFilterAcrossMul
tipleRegions(TestFromClientSide.java:436)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Happens only with the 0.92 patch applied. It seems the scanner now finds too many cells.&lt;/p&gt;</comment>
                            <comment id="13154410" author="lhofhansl" created="Mon, 21 Nov 2011 19:47:45 +0000"  >&lt;p&gt;I looked through the entire patch again manually, but I can&apos;t figure out what would cause this failure.&lt;/p&gt;</comment>
                            <comment id="13154453" author="jmhsieh" created="Mon, 21 Nov 2011 20:24:51 +0000"  >&lt;p&gt;On the bulkload operation, the error has something to do with the split point &amp;#8211; in the test I force a split and the resulting error has something to do with the point where the start of the second daughter.&lt;/p&gt;

&lt;p&gt;@Lars &amp;#8211; since the original issue is resolved, and since this seems non-trival, maybe this should get move into a new issue?&lt;/p&gt;</comment>
                            <comment id="13154491" author="lhofhansl" created="Mon, 21 Nov 2011 20:55:26 +0000"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4838&quot; title=&quot;Port 2856 (TestAcidGuarantee is failing) to 0.92&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4838&quot;&gt;&lt;del&gt;HBASE-4838&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13155597" author="lhofhansl" created="Wed, 23 Nov 2011 01:00:41 +0000"  >&lt;p&gt;Please see new updates in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4838&quot; title=&quot;Port 2856 (TestAcidGuarantee is failing) to 0.92&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4838&quot;&gt;&lt;del&gt;HBASE-4838&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12478262">HBASE-3149</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12497404">HBASE-3498</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12546184">HBASE-5569</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12498893">HBASE-3543</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12537140">HBASE-5121</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12526531">HBASE-4570</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12532213">HBASE-4838</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12494337">HBASE-3404</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12491714">HBASE-3290</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12504421" name="2856-0.92.txt" size="94208" author="lhofhansl" created="Sun, 20 Nov 2011 06:57:35 +0000"/>
                            <attachment id="12465957" name="2856-v2.txt" size="41977" author="stack" created="Fri, 10 Dec 2010 00:07:34 +0000"/>
                            <attachment id="12468190" name="2856-v3.txt" size="79219" author="stack" created="Thu, 13 Jan 2011 00:02:33 +0000"/>
                            <attachment id="12468675" name="2856-v4.txt" size="92505" author="stack" created="Tue, 18 Jan 2011 19:47:48 +0000"/>
                            <attachment id="12469807" name="2856-v5.txt" size="113571" author="stack" created="Mon, 31 Jan 2011 09:08:53 +0000"/>
                            <attachment id="12504131" name="2856-v6.txt" size="40768" author="amitanand" created="Thu, 17 Nov 2011 23:18:20 +0000"/>
                            <attachment id="12504132" name="2856-v7.txt" size="68674" author="amitanand" created="Thu, 17 Nov 2011 23:18:37 +0000"/>
                            <attachment id="12504157" name="2856-v8.txt" size="40967" author="amitanand" created="Fri, 18 Nov 2011 01:24:28 +0000"/>
                            <attachment id="12504160" name="2856-v9-all-inclusive.txt" size="102581" author="amitanand" created="Fri, 18 Nov 2011 02:00:59 +0000"/>
                            <attachment id="12465764" name="acid.txt" size="10599" author="stack" created="Wed, 8 Dec 2010 00:57:18 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12497404">HBASE-3498</subtask>
                            <subtask id="12521633">HBASE-4343</subtask>
                            <subtask id="12521637">HBASE-4344</subtask>
                            <subtask id="12521638">HBASE-4345</subtask>
                            <subtask id="12521639">HBASE-4346</subtask>
                            <subtask id="12524490">HBASE-4474</subtask>
                            <subtask id="12524659">HBASE-4485</subtask>
                            <subtask id="12525951">HBASE-4544</subtask>
                            <subtask id="12527279">HBASE-4594</subtask>
                            <subtask id="12532213">HBASE-4838</subtask>
                            <subtask id="12677429">HBASE-9889</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 27 Jul 2010 15:28:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26500</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 4 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08qpj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>48927</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>