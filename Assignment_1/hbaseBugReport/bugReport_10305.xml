<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:12:30 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10305/HBASE-10305.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10305] Batch update performance drops as the number of regions grows</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10305</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In our use case, we use a small number (~5) of proxy programs that read from a queue and batch update to HBase. Our program is multi-threaded and HBase client will batch mutations to each RS.&lt;/p&gt;

&lt;p&gt;We found we&apos;re getting lower TPS when there are more regions. I think the reason is RS syncs HLog for each region. Suppose there is a single region, the batch update will only touch one region and therefore syncs HLog once. And suppose there are 10 regions per server, in RS#multi() it have to process update for each individual region and sync HLog 10 times.&lt;/p&gt;

&lt;p&gt;Please note that in our scenario, batched mutations usually are independent with each other and need to touch a various number of regions.&lt;/p&gt;

&lt;p&gt;We are using the 0.94 series, but I think the trunk should have the same problem after a quick look into the code.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12688002">HBASE-10305</key>
            <summary>Batch update performance drops as the number of regions grows</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stepinto">Chao Shi</reporter>
                        <labels>
                    </labels>
                <created>Thu, 9 Jan 2014 06:02:45 +0000</created>
                <updated>Fri, 10 Jan 2014 19:06:45 +0000</updated>
                            <resolved>Fri, 10 Jan 2014 08:14:26 +0000</resolved>
                                                                    <component>Performance</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13866388" author="anoop.hbase" created="Thu, 9 Jan 2014 06:52:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;Suppose there is a single region, the batch update will only touch one region and therefore syncs HLog once&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not one time always. In HRegion, the batch write will be split into mini batches. It will try to get as many row locks as possible and all such Mutations becomes one mini batch. For one mini batch, yes one time write and sync to HLog. When there are no concurrent write attempts for same rows, true , all Mutations in a batch might be getting locks in one shot and just one mini batch.&lt;/p&gt;

&lt;p&gt;So what do you suggest here?&lt;/p&gt;</comment>
                            <comment id="13866400" author="stepinto" created="Thu, 9 Jan 2014 07:06:45 +0000"  >&lt;p&gt;Hi Anoop,&lt;/p&gt;

&lt;p&gt;Thanks for your quick response and clarification.&lt;/p&gt;

&lt;p&gt;I think the root cause is the strong coupling between sync log and region operation. Is it possible to do the update for each region in memory and then sync HLog once? Looking into the code, I found it is difficult: it has to sync HLog before update MVCC and MVCC is on per-region basis.&lt;/p&gt;</comment>
                            <comment id="13866463" author="hua.xu" created="Thu, 9 Jan 2014 09:21:08 +0000"  >&lt;p&gt;you can create a new test case,which is  the batch update  without WAL,firstly. Make sure that the problem is sync hLog.&lt;/p&gt;</comment>
                            <comment id="13866481" author="anoop.hbase" created="Thu, 9 Jan 2014 09:48:45 +0000"  >&lt;p&gt;It depends on what level of write guarentee you want. There is a delayed log syncing feature already present. In that case there wont be immediate sync after a log append. Instead you can configure a time period at which this syncer thread doing a sync for till appends.&lt;br/&gt;
See the configuartion &quot;hbase.regionserver.optionallogflushinterval&quot;&lt;/p&gt;</comment>
                            <comment id="13867513" author="stepinto" created="Fri, 10 Jan 2014 05:27:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;you can create a new test case,which is the batch update without WAL,firstly. Make sure that the problem is sync hLog.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ve tried SKIP_WAL specified at client side, and the performance improves greatly. Moreover, I think I can confirm the problem by looking into the stack, where threads are stuck at waiting for log sync.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It depends on what level of write guarentee you want. There is a delayed log syncing feature already present. In that case there wont be immediate sync after a log append. Instead you can configure a time period at which this syncer thread doing a sync for till appends.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hi Anoop, I understand that delayed sync should alleviate this problem. But I think it may be misleading with the default behaviour (i.e. sync immediately). A good row-key design is to spread the workload evenly over the cluster. However, this will lead to unexpected performance degradation as data grows. (The overhead of log syncs increases linearly if a batch size is larger than the number of servers.)&lt;/p&gt;

&lt;p&gt;It seems like such behaviour is intended. So I&apos;m going to close this ticket if no one else have better suggestions.&lt;/p&gt;</comment>
                            <comment id="13867516" author="anoop.hbase" created="Fri, 10 Jan 2014 05:32:44 +0000"  >&lt;p&gt;Yes for write guarentee we have to have sync immediately. And that has to be the default behaviour IMO. &lt;br/&gt;
Better can close this issue as Not A Problem.&lt;/p&gt;</comment>
                            <comment id="13867592" author="lhofhansl" created="Fri, 10 Jan 2014 07:38:24 +0000"  >&lt;p&gt;If you have more regions for the &lt;b&gt;same&lt;/b&gt; number of a writes this is expected.&lt;/p&gt;

&lt;p&gt;Which version of 0.94 are you using? In 0.94.7 or later you have the option to defer the log flush (see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7801&quot; title=&quot;Allow a deferred sync option per Mutation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7801&quot;&gt;&lt;del&gt;HBASE-7801&lt;/del&gt;&lt;/a&gt;,  Mutation.setDurability(...)). Would that work for you?&lt;/p&gt;</comment>
                            <comment id="13867615" author="stepinto" created="Fri, 10 Jan 2014 08:14:26 +0000"  >&lt;p&gt;We&apos;re running 0.94.10. ASYNC_WAL does work for me. Thanks Lars. Close this issue.&lt;/p&gt;</comment>
                            <comment id="13867616" author="lhofhansl" created="Fri, 10 Jan 2014 08:16:34 +0000"  >&lt;p&gt;Great.&lt;br/&gt;
Maybe this should documented more prominently in the HBase book.&lt;/p&gt;</comment>
                            <comment id="13868140" author="stack" created="Fri, 10 Jan 2014 19:06:45 +0000"  >&lt;p&gt;Does &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8755&quot; title=&quot;A new write thread model for HLog to improve the overall HBase write throughput&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8755&quot;&gt;&lt;del&gt;HBASE-8755&lt;/del&gt;&lt;/a&gt; help?  It batches up the sync invocations making it so each filesystem sync satisfies more than just the one Handler API sync invocation.  You&apos;ll get to a sync cadence that should be  roughly independent of the number of times the Handler calls sync.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 9 Jan 2014 06:52:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>367009</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 49 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1r9fz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>367319</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>