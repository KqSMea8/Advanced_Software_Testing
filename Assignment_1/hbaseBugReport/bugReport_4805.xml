<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:22:10 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4805/HBASE-4805.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4805] Allow better control of resource consumption in HTable</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4805</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;From some internal discussions at Salesforce we concluded that we need better control over the resources (mostly threads) consumed by HTable when used in a AppServer with many client threads.&lt;/p&gt;

&lt;p&gt;Since HTable is not thread safe, the only options are cache them (in a custom thread local or using HTablePool) or to create them on-demand.&lt;/p&gt;

&lt;p&gt;I propose a simple change: Add a new constructor to HTable that takes an optional ExecutorService and HConnection instance. That would make HTable a pretty lightweight object and we would manage the ES and HC separately.&lt;/p&gt;

&lt;p&gt;I&apos;ll upload a patch a soon to get some feedback.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12531712">HBASE-4805</key>
            <summary>Allow better control of resource consumption in HTable</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Wed, 16 Nov 2011 23:22:59 +0000</created>
                <updated>Thu, 2 May 2013 02:29:57 +0000</updated>
                            <resolved>Fri, 18 Nov 2011 00:15:09 +0000</resolved>
                                    <version>0.92.0</version>
                    <version>0.94.0</version>
                                    <fixVersion>0.92.0</fixVersion>
                    <fixVersion>0.94.0</fixVersion>
                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                            <comments>
                            <comment id="13151771" author="lhofhansl" created="Thu, 17 Nov 2011 03:37:29 +0000"  >&lt;p&gt;Here&apos;s a patch.&lt;/p&gt;

&lt;p&gt;Did a test where I pre-create both the ExecutorService and the HConnection instance. With this it is actually faster to create a new HTable than to get one from HTablePool.&lt;/p&gt;</comment>
                            <comment id="13151772" author="lhofhansl" created="Thu, 17 Nov 2011 03:38:25 +0000"  >&lt;p&gt;I&apos;d be fine putting this in 0.92. It&apos;s not disruptive and entirely backwards compatible.&lt;/p&gt;</comment>
                            <comment id="13151778" author="stack" created="Thu, 17 Nov 2011 04:05:53 +0000"  >&lt;p&gt;I prefer the previous formatting (for the next time):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HTable(Configuration conf, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tableName)
-  &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HTable(Configuration conf, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tableName) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
     &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;(conf, Bytes.toBytes(tableName));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(and its &amp;lt; 80 chars on a line).&lt;/p&gt;

&lt;p&gt;Nice javadoc on the HTable constructor.&lt;/p&gt;

&lt;p&gt;Don&apos;t you need to javadoc that conf has to be null if you pass a connection and pool else they&apos;ll not be used?&lt;/p&gt;

&lt;p&gt;Hmmm... maybe its better to not take a conf at all?  Else it could get confusing.  Say you&apos;ll use the configuration that is in the passed HConnection?  Looking at the way this new constructor runs, I could really mess w/ you passing null Configuration and null Connection.  More checks I&apos;d say.&lt;/p&gt;

&lt;p&gt;Else patch looks good to me and +1 on getting it into 0.92.&lt;/p&gt;

</comment>
                            <comment id="13151780" author="lhofhansl" created="Thu, 17 Nov 2011 04:16:52 +0000"  >&lt;p&gt;Will undo the formatting (Eclipse did that with the HBase formatter).&lt;br/&gt;
Configuration is still used to get conf settings. (That strange null check for it was in there before - note sure what use the HTable is if null is passed for Configuration).&lt;/p&gt;

&lt;p&gt;Was thinking about getting the conf from the HConnection as well, but then it needed some more refactoring and I wanted a simple patch.&lt;/p&gt;

&lt;p&gt;Hmm... Let me see what I can come up with. The HConnection&apos;s conf and the passed conf could be different and that would be... Bad.&lt;/p&gt;</comment>
                            <comment id="13151783" author="yuzhihong@gmail.com" created="Thu, 17 Nov 2011 04:25:06 +0000"  >&lt;p&gt;I think we should also check the Configuration from HConnection at the beginning of the ctor:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (conf == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.scannerTimeout = 0;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13151789" author="yuzhihong@gmail.com" created="Thu, 17 Nov 2011 04:32:42 +0000"  >&lt;p&gt;If conf is passed and HConnection isn&apos;t null, we should check their equality by virtue of HConnectionKey.CONNECTION_PROPERTIES&lt;/p&gt;

&lt;p&gt;Maybe we can put HConnectionKey in its own class file and expose equality check by comparing conf values for the elements of HConnectionKey.CONNECTION_PROPERTIES&lt;/p&gt;

&lt;p&gt;If conf and HConnection&apos;s configuration aren&apos;t equal according to the above check, throw exception in HTable ctor.&lt;/p&gt;</comment>
                            <comment id="13151819" author="lhofhansl" created="Thu, 17 Nov 2011 05:23:13 +0000"  >&lt;p&gt;I like the idea of just passing the HConnection in that case better.&lt;/p&gt;</comment>
                            <comment id="13151845" author="lhofhansl" created="Thu, 17 Nov 2011 06:07:23 +0000"  >&lt;p&gt;How about this?&lt;br/&gt;
The idea here is that either you the system do the &quot;right thing&quot;, or you take over both HConnection and ExecutorService management.&lt;/p&gt;</comment>
                            <comment id="13151857" author="yuzhihong@gmail.com" created="Thu, 17 Nov 2011 06:32:42 +0000"  >&lt;p&gt;Patch v2 is cleaner.&lt;/p&gt;</comment>
                            <comment id="13151863" author="lhofhansl" created="Thu, 17 Nov 2011 06:40:58 +0000"  >&lt;p&gt;Getting the tests run.&lt;/p&gt;</comment>
                            <comment id="13151872" author="lhofhansl" created="Thu, 17 Nov 2011 06:56:06 +0000"  >&lt;p&gt;Oh and Stack was right on the mailing list, currently the only way to get a handle to an HCI is by calling HCM.getConnection(). HCI is not accessible to the client.&lt;/p&gt;

&lt;p&gt;Could add a public createConnection(Configuration) method to HCM to completely bypass the connection caching... It&apos;s not really needed for our purposes, but might be good for better isolation (i.e. what if somebody also uses HTable with the old constructors, the Connection might get cleaned up and closed).&lt;/p&gt;</comment>
                            <comment id="13151902" author="hadoopqa" created="Thu, 17 Nov 2011 08:34:31 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12504032/4805-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12504032/4805-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -163 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 52 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestScannerTimeout&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSide&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/278//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/278//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/278//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/278//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/278//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/278//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13152156" author="stack" created="Thu, 17 Nov 2011 17:42:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;Could add a public createConnection(Configuration) method to HCM to completely bypass the connection caching... It&apos;s not really needed for our purposes....&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ve been tempted to do this a bunch of times but have not yet had a good enough reason (recently I changed internals of HCM so could get at them from same package to help w/ mocking &amp;#8211; so I could insert a mocked HConnection under HTable).  I&apos;d say leave it as is till we have a good reason.&lt;/p&gt;

&lt;p&gt;+1 on patch&lt;/p&gt;

&lt;p&gt;Set this.connection to null after you close it when you commit the patch?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.connection != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.connection.close();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13152191" author="lhofhansl" created="Thu, 17 Nov 2011 18:23:30 +0000"  >&lt;p&gt;New patch. Fixes test failure (configuration returned from connection, is not necessarily the same that was used to retrieve the connection)&lt;/p&gt;

&lt;p&gt;Setting configuration is explicitly now in addition to connection.&lt;/p&gt;

&lt;p&gt;Also, that pointed the way towards needing truly unmanaged HConnections. Added a new createConnection(conf) method to HCM (with appropriate warnings in the Javadoc) to get an unmanaged HConnection, along with some tests.&lt;/p&gt;</comment>
                            <comment id="13152196" author="lhofhansl" created="Thu, 17 Nov 2011 18:28:58 +0000"  >&lt;p&gt;@stack... Just saw your comment now. v3 adds a createConnection to HCM along with a flag to HConnectionImplementation to declare whether it is managed or not. I think otherwise it might get to fickle if there is code that uses &quot;managed&quot; HTables mixed with code that uses &quot;unmanaged&quot; HTables.&lt;/p&gt;

&lt;p&gt;Let me know what you think. I can remove that part of the patch again, if it is too intrusive.&lt;/p&gt;

&lt;p&gt;I don&apos;t think I follow why this.connection should be set to null.&lt;/p&gt;</comment>
                            <comment id="13152218" author="stack" created="Thu, 17 Nov 2011 18:48:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t think I follow why this.connection should be set to null.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So we don&apos;t double close if HTable#close is called twice (not sure what would happen if we did call close on HConnection twice).&lt;/p&gt;

&lt;p&gt;Regards:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * Use &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; with caution, your application &amp;lt;strong&amp;gt;must&amp;lt;/strong&amp;gt; manage the
+   * connection&apos;s life cycle explicitly.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&apos;Life-cycle&apos; sounds exotic; do you mean the caller is responsible for calling close on the created HConnection?&lt;/p&gt;

&lt;p&gt;If so, amend the javadoc on commit.&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13152229" author="lhofhansl" created="Thu, 17 Nov 2011 18:54:43 +0000"  >&lt;p&gt;I see... Double close on HConnection would decrease the Connection&apos;s reference count, so I can fold this in here.&lt;br/&gt;
I&apos;ll add that, change the Javadoc and post the patch (to get a safety test run &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;/p&gt;</comment>
                            <comment id="13152231" author="lhofhansl" created="Thu, 17 Nov 2011 18:56:32 +0000"  >&lt;p&gt;Actually closing a closed HTable is no-op:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void close() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.closed) {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
    }
    ...
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.closed = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13152295" author="hadoopqa" created="Thu, 17 Nov 2011 20:27:44 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12504089/4805-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12504089/4805-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -163 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 52 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/282//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/282//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/282//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/282//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/282//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/282//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13152303" author="lhofhansl" created="Thu, 17 Nov 2011 20:41:36 +0000"  >&lt;p&gt;TestDistributedLogSplitting passes locally. So I think this good to go. I&apos;ll fix the java doc on commit.&lt;/p&gt;

&lt;p&gt;@Ted and @stack, any further comments. &lt;/p&gt;

&lt;p&gt;I&apos;m thinking maybe this should only go into trunk, because of the changes in HCM (still OK with 0.92 if nobody else is worried).&lt;/p&gt;</comment>
                            <comment id="13152412" author="yuzhihong@gmail.com" created="Thu, 17 Nov 2011 22:40:21 +0000"  >&lt;p&gt;Patch v3 looks good.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HTable(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] tableName, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; HConnection connection, 
+      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ExecutorService pool) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+    &lt;span class=&quot;code-keyword&quot;&gt;assert&lt;/span&gt; connection != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; pool != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think we should also verify that the connection isn&apos;t closed in the ctor.&lt;/p&gt;</comment>
                            <comment id="13152416" author="lhofhansl" created="Thu, 17 Nov 2011 22:48:22 +0000"  >&lt;p&gt;Ah, good call. Assert good enough? Or should it throw an exception? (asserts are disabled in production code)&lt;/p&gt;</comment>
                            <comment id="13152420" author="yuzhihong@gmail.com" created="Thu, 17 Nov 2011 22:53:28 +0000"  >&lt;p&gt;I think throwing IllegalStateException would be good if connection is closed in ctor.&lt;/p&gt;</comment>
                            <comment id="13152426" author="lhofhansl" created="Thu, 17 Nov 2011 22:59:03 +0000"  >&lt;p&gt;Used IllegalArgumentException instead (also used in validatePut(...)).&lt;/p&gt;</comment>
                            <comment id="13152435" author="yuzhihong@gmail.com" created="Thu, 17 Nov 2011 23:11:09 +0000"  >&lt;p&gt;Minor comment:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;assert&lt;/span&gt; connection != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; pool != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (connection.isClosed()) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Since assertion is not effective at runtime, we should convert the check on line 1.&lt;br/&gt;
Also, we should verify that (pool != null &amp;amp;&amp;amp; !pool.isShutdown())&lt;/p&gt;</comment>
                            <comment id="13152448" author="lhofhansl" created="Thu, 17 Nov 2011 23:24:48 +0000"  >&lt;p&gt;Agreed... Got rid of asserts.&lt;/p&gt;</comment>
                            <comment id="13152452" author="yuzhihong@gmail.com" created="Thu, 17 Nov 2011 23:31:19 +0000"  >&lt;p&gt;+1 if tests pass.&lt;/p&gt;

&lt;p&gt;Good work Lars.&lt;/p&gt;</comment>
                            <comment id="13152456" author="stack" created="Thu, 17 Nov 2011 23:33:07 +0000"  >&lt;p&gt;+1 on patch (minor nit for future, isManaged is not a good name for a boolean &amp;#8211; managed should be the name and isManaged the name of the method that tests if managed is set &amp;#8211; for future).&lt;/p&gt;</comment>
                            <comment id="13152457" author="stack" created="Thu, 17 Nov 2011 23:33:41 +0000"  >&lt;p&gt;Oh, +1 on commit to 0.92 too.&lt;/p&gt;</comment>
                            <comment id="13152492" author="lhofhansl" created="Fri, 18 Nov 2011 00:15:09 +0000"  >&lt;p&gt;Committed to 0.92 and trunk.&lt;/p&gt;</comment>
                            <comment id="13152512" author="hadoopqa" created="Fri, 18 Nov 2011 00:43:51 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12504130/4805-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12504130/4805-v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -163 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 52 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestShell&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/284//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/284//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/284//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/284//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/284//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/284//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13152555" author="hadoopqa" created="Fri, 18 Nov 2011 01:13:53 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12504136/4805-v5.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12504136/4805-v5.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -163 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 52 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestShell&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/285//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/285//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/285//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/285//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/285//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/285//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13152623" author="hudson" created="Fri, 18 Nov 2011 03:45:39 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2453 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2453/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2453/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4805&quot; title=&quot;Allow better control of resource consumption in HTable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4805&quot;&gt;&lt;del&gt;HBASE-4805&lt;/del&gt;&lt;/a&gt;  Allow better control of resource consumption in HTable (Lars H)&lt;/p&gt;

&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HConnection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/HConnectionTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestHCM.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13152661" author="hudson" created="Fri, 18 Nov 2011 05:31:24 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #142 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/142/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/142/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4805&quot; title=&quot;Allow better control of resource consumption in HTable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4805&quot;&gt;&lt;del&gt;HBASE-4805&lt;/del&gt;&lt;/a&gt;  Allow better control of resource consumption in HTable (Lars H)&lt;/p&gt;

&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/client/HConnection.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/client/HConnectionTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/client/TestHCM.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13188541" author="krystian" created="Wed, 18 Jan 2012 16:44:45 +0000"  >&lt;p&gt;Do you plan to backport it to 0.90.x branch as well or I should rather wait for 0.92.x+?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Krystian&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12533914">HBASE-4956</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12531405">HBASE-4787</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12534135">HBASE-4970</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12534123">HBASE-4968</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12536075">HBASE-5084</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12603384">HBASE-6580</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12504032" name="4805-v2.txt" size="5445" author="lhofhansl" created="Thu, 17 Nov 2011 06:07:22 +0000"/>
                            <attachment id="12504089" name="4805-v3.txt" size="12027" author="lhofhansl" created="Thu, 17 Nov 2011 18:23:30 +0000"/>
                            <attachment id="12504130" name="4805-v4.txt" size="12117" author="lhofhansl" created="Thu, 17 Nov 2011 22:59:03 +0000"/>
                            <attachment id="12504136" name="4805-v5.txt" size="12218" author="lhofhansl" created="Thu, 17 Nov 2011 23:24:48 +0000"/>
                            <attachment id="12504019" name="4805.txt" size="4775" author="lhofhansl" created="Thu, 17 Nov 2011 03:37:29 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12535501">HBASE-5058</subtask>
                            <subtask id="12537849">HBASE-5164</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 17 Nov 2011 04:05:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>217448</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 48 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02gxr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12345</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>