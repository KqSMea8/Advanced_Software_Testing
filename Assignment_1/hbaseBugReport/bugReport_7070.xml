<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:42:24 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7070/HBASE-7070.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7070] Scanner may retry forever  after HBASE-5974</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7070</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;After the patch of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5974&quot; title=&quot;Scanner retry behavior with RPC timeout on next() seems incorrect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5974&quot;&gt;&lt;del&gt;HBASE-5974&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
Suppose The process is as the following:&lt;br/&gt;
1.A next request is very large, so first time it is failed because of timeout&lt;br/&gt;
2.The second time it is failed again because of CallSequenceOutOfOrderException&lt;br/&gt;
3.We will retry this next request again after reset scanner, so it is also very large and failed again because of timeout&lt;br/&gt;
4.CallSequenceOutOfOrderException again&lt;br/&gt;
5.Repeated the above forever...&lt;/p&gt;

&lt;p&gt;See the comment in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5974&quot; title=&quot;Scanner retry behavior with RPC timeout on next() seems incorrect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5974&quot;&gt;&lt;del&gt;HBASE-5974&lt;/del&gt;&lt;/a&gt; for more&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5974?focusedCommentId=13486658&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13486658&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5974?focusedCommentId=13486658&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13486658&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12614004">HBASE-7070</key>
            <summary>Scanner may retry forever  after HBASE-5974</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="zjushch">chunhui shen</assignee>
                                    <reporter username="zjushch">chunhui shen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 30 Oct 2012 08:18:51 +0000</created>
                <updated>Wed, 15 Oct 2014 14:24:59 +0000</updated>
                            <resolved>Fri, 2 Nov 2012 19:15:51 +0000</resolved>
                                    <version>0.95.2</version>
                                    <fixVersion>0.95.0</fixVersion>
                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13486730" author="zjushch" created="Tue, 30 Oct 2012 08:26:18 +0000"  >&lt;p&gt;A simple patch which add the retry number limit in the ClientScanner&lt;/p&gt;</comment>
                            <comment id="13486746" author="anoopsamjohn" created="Tue, 30 Oct 2012 08:53:55 +0000"  >&lt;p&gt;This will limit the number of retries in case of a NSRE exception also. Now when NSRE comes it will try for infinite times? Can you pls verify that scenario also Chunhui? Good catch of the issue. Thanks&lt;/p&gt;</comment>
                            <comment id="13486759" author="ram_krish" created="Tue, 30 Oct 2012 09:13:56 +0000"  >&lt;p&gt;Yes.  I agree with Anoop and also now we are making the clientscanner also retryable.&lt;/p&gt;</comment>
                            <comment id="13486775" author="zjushch" created="Tue, 30 Oct 2012 09:58:46 +0000"  >&lt;blockquote&gt;&lt;p&gt;Now when NSRE comes it will try for infinite times?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It won&apos;t happen,&lt;br/&gt;
See ScannerCallable#call()&lt;br/&gt;
openScanner() throws NSRE&lt;br/&gt;
and it is caught by ServerCallable#withRetries()&lt;br/&gt;
and at last ServerCallable throws RetriesExhaustedException&lt;br/&gt;
and RetriesExhaustedException won&apos;t be caught by ClientScanner&lt;/p&gt;</comment>
                            <comment id="13486808" author="anoopsamjohn" created="Tue, 30 Oct 2012 11:05:35 +0000"  >&lt;p&gt;You checked with the test case throwing NSRE?&lt;br/&gt;
The next() call also can throw NSRE&lt;/p&gt;</comment>
                            <comment id="13487002" author="zhihyu@ebaysf.com" created="Tue, 30 Oct 2012 16:46:05 +0000"  >&lt;p&gt;Nice finding, Chunhui.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.numRetries = conf.getInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER,
+                    HConstants.DEFAULT_HBASE_CLIENT_RETRIES_NUMBER);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The variable, numRetries, sounds like it keeps the current number of retries. Suggest renaming it as maxRetries.&lt;/p&gt;

&lt;p&gt;Can you include a test as you suggested in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5974&quot; title=&quot;Scanner retry behavior with RPC timeout on next() seems incorrect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5974&quot;&gt;&lt;del&gt;HBASE-5974&lt;/del&gt;&lt;/a&gt; ?&lt;/p&gt;</comment>
                            <comment id="13487445" author="zjushch" created="Wed, 31 Oct 2012 01:48:36 +0000"  >&lt;blockquote&gt;&lt;p&gt;The next() call also can throw NSRE&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, it will throw NSRE, then we will reset scanner,  and then openscanner() throws NSRE, &lt;br/&gt;
so it won&apos;t happen that next() throws infinite NSRE.&lt;/p&gt;</comment>
                            <comment id="13487500" author="stack" created="Wed, 31 Oct 2012 04:03:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjushch&quot; class=&quot;user-hover&quot; rel=&quot;zjushch&quot;&gt;chunhui shen&lt;/a&gt; Yes.  Good catch.&lt;/p&gt;

&lt;p&gt;I don&apos;t like that we are adding new max retry loop up in ClientScanner.  We have enough retrying and loops of retries already in the client.&lt;/p&gt;

&lt;p&gt;The case you describe is a little pathological.  Is it every going to succeed?  Not how you paint it.  Should we retry if OutOfOrderException only, and retry once only rather than some maximum retries number?&lt;/p&gt;

&lt;p&gt;Good stuff.&lt;/p&gt;</comment>
                            <comment id="13487504" author="zjushch" created="Wed, 31 Oct 2012 04:11:08 +0000"  >&lt;p&gt;As ted&apos;s comment, patchV2 modify the test case to produce the problem and rename the variable to maxRetries&lt;/p&gt;</comment>
                            <comment id="13487515" author="yuzhihong@gmail.com" created="Wed, 31 Oct 2012 04:37:18 +0000"  >&lt;p&gt;2 * CLIENT_RETRIES_NUMBER appears twice in the patch, consider introducing a constant for it.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    assertTrue(&lt;span class=&quot;code-quote&quot;&gt;&quot;Expected &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; number=&quot;&lt;/span&gt; + CLIENT_RETRIES_NUMBER + &lt;span class=&quot;code-quote&quot;&gt;&quot;, actual =&quot;&lt;/span&gt;
+        + RegionServerWithScanTimeout.tryNumber,
+        RegionServerWithScanTimeout.tryNumber &amp;lt;= 2 * CLIENT_RETRIES_NUMBER);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Expected try number is 2 * CLIENT_RETRIES_NUMBER, not CLIENT_RETRIES_NUMBER.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException ioe) {
+      &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; the exception after max retry number&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Add a log in the catch block ?&lt;/p&gt;</comment>
                            <comment id="13487528" author="zjushch" created="Wed, 31 Oct 2012 05:04:22 +0000"  >&lt;p&gt;Attaching patchV3&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We have enough retrying and loops of retries already in the client&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Retry in ClientScanner is different with ServerCallable#withRetries, the former will reset scanner and the latter only send next request again.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should we retry if OutOfOrderException only, and retry once only rather than some maximum retries number?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think retrying once is same with some maximum retries number, or else we don&apos;t do the retry for OutOfOrderException..&lt;/p&gt;


&lt;p&gt;@ted&lt;br/&gt;
2 * CLIENT_RETRIES_NUMBER is only used to simulate the infinite retry number, so we expect maximal try number = CLIENT_RETRIES_NUMBER, and I has amended it&lt;br/&gt;
in assertTrue from RegionServerWithScanTimeout.tryNumber &amp;lt;= 2*CLIENT_RETRIES_NUMBER to RegionServerWithScanTimeout.tryNumber &amp;lt;= CLIENT_RETRIES_NUMBER&lt;/p&gt;</comment>
                            <comment id="13487539" author="stack" created="Wed, 31 Oct 2012 05:18:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think retrying once is same with some maximum retries number, or else we don&apos;t do the retry for OutOfOrderException..&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;CLIENT_RETRIES_NUMBER is overloaded.  Lets not reuse it here doing yet more retries on top of retry counting.&lt;/p&gt;

&lt;p&gt;I think we retry once if OutOfOrderException given Anoop has done all the work getting it in.  I&apos;d say we only do it once because unlikely we&apos;ll succeed if we just did sockettimeout twice because it is too big.  Just a suggestion&lt;/p&gt;

&lt;p&gt;Thanks for doing this Chunhui.&lt;/p&gt;</comment>
                            <comment id="13487550" author="zjushch" created="Wed, 31 Oct 2012 05:35:24 +0000"  >&lt;p&gt;Attaching patchV5:&lt;br/&gt;
retry only once if OutOfOrderScannerNextException as Stack&apos;s comment&lt;/p&gt;</comment>
                            <comment id="13487563" author="anoopsamjohn" created="Wed, 31 Oct 2012 05:50:38 +0000"  >&lt;p&gt;tries++; We can move inside instanceof OutOfOrderScannerNextException check?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (e &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; OutOfOrderScannerNextException) {
+              &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(tries &amp;gt;= 2) 
+                &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DoNotRetryIOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Failed after attempts=&quot;&lt;/span&gt; + tries
+                  + &lt;span class=&quot;code-quote&quot;&gt;&quot;, it could be cause by rpc timeout&quot;&lt;/span&gt;, e);
+              tries++;
+            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;      

&lt;p&gt;Thanks Chunhui for your work on this ..&lt;/p&gt;</comment>
                            <comment id="13487569" author="stack" created="Wed, 31 Oct 2012 05:58:23 +0000"  >&lt;p&gt;Should it be a flag that gets set when we are retrying because of a OutOfOrderScannerNextException?  The flag, called retryAfterOutOfOrderException or some such then stays set while we retry.  If we get a OutOfOrderScannerNextException again, we fail with an exception saying failed after retry.  If next succeeds, flag is cleared.&lt;/p&gt;

&lt;p&gt;When you have it like this counting attempts, it is a little confusing I think.&lt;/p&gt;

&lt;p&gt;We will go around and around if we are getting socket timeouts?&lt;/p&gt;

</comment>
                            <comment id="13487578" author="anoopsamjohn" created="Wed, 31 Oct 2012 06:27:32 +0000"  >&lt;p&gt;+1 for flag. Looks easy to understand then&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;We will go around and around if we are getting socket timeouts?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If we get socket timeouts all the time, there will be 10 retries (defualt)&lt;br/&gt;
At server side some of the calls will get OutOfOrderScannerNextException.&lt;/p&gt;</comment>
                            <comment id="13487595" author="zjushch" created="Wed, 31 Oct 2012 07:11:34 +0000"  >&lt;p&gt;Using retry flag for in OutOfOrderScannerNextException patchV6&lt;/p&gt;</comment>
                            <comment id="13487837" author="hadoopqa" created="Wed, 31 Oct 2012 15:04:09 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12551498/HBASE-7070v6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12551498/HBASE-7070v6.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 85 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3200//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13489673" author="stack" created="Fri, 2 Nov 2012 19:15:51 +0000"  >&lt;p&gt;Nice fix Chunhui.  Thank you.  Committed to trunk.&lt;/p&gt;</comment>
                            <comment id="13490227" author="hudson" created="Sun, 4 Nov 2012 17:31:43 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #248 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/248/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/248/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7070&quot; title=&quot;Scanner may retry forever  after HBASE-5974&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7070&quot;&gt;&lt;del&gt;HBASE-7070&lt;/del&gt;&lt;/a&gt; Scanner may retry forever after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5974&quot; title=&quot;Scanner retry behavior with RPC timeout on next() seems incorrect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5974&quot;&gt;&lt;del&gt;HBASE-5974&lt;/del&gt;&lt;/a&gt; (Revision 1405107)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestClientScannerRPCTimeout.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13775432" author="stack" created="Mon, 23 Sep 2013 18:31:30 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12748238">HBASE-12266</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12551322" name="HBASE-7070.patch" size="2073" author="zjushch" created="Tue, 30 Oct 2012 08:26:18 +0000"/>
                            <attachment id="12551476" name="HBASE-7070v2.patch" size="5314" author="zjushch" created="Wed, 31 Oct 2012 04:11:08 +0000"/>
                            <attachment id="12551484" name="HBASE-7070v3.patch" size="6000" author="zjushch" created="Wed, 31 Oct 2012 05:04:22 +0000"/>
                            <attachment id="12551487" name="HBASE-7070v4.patch" size="6005" author="zjushch" created="Wed, 31 Oct 2012 05:26:34 +0000"/>
                            <attachment id="12551488" name="HBASE-7070v5.patch" size="5813" author="zjushch" created="Wed, 31 Oct 2012 05:35:24 +0000"/>
                            <attachment id="12551498" name="HBASE-7070v6.patch" size="5517" author="zjushch" created="Wed, 31 Oct 2012 07:11:34 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 30 Oct 2012 08:53:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>253118</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dbmn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>75813</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>