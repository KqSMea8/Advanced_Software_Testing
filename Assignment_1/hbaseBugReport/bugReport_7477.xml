<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:46:08 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7477/HBASE-7477.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7477] Remove Proxy instance from HBase RPC</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7477</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently, we use HBaseRPC.getProxy() to get an Invoker object to serialize the RPC parameters. This is pretty inefficient as it uses reflection to lookup the current method name.&lt;/p&gt;

&lt;p&gt;The aim is to break up the proxy into an actual proxy implementation so that:&lt;br/&gt;
1. we can make it more efficient by eliminating reflection&lt;br/&gt;
2. can re-write some parts of the protocol to make it even better&lt;/p&gt;</description>
                <environment></environment>
        <key id="12625730">HBASE-7477</key>
            <summary>Remove Proxy instance from HBase RPC</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12613973">HBASE-7067</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="karthik.ranga">Karthik Ranganathan</reporter>
                        <labels>
                    </labels>
                <created>Wed, 2 Jan 2013 21:31:03 +0000</created>
                <updated>Tue, 30 Apr 2013 22:32:11 +0000</updated>
                            <resolved>Tue, 30 Apr 2013 22:32:11 +0000</resolved>
                                    <version>0.89-fb</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13547461" author="stack" created="Wed, 9 Jan 2013 00:22:35 +0000"  >&lt;p&gt;Tell us more what you are thinking Karthik&lt;/p&gt;

&lt;p&gt;I&apos;m looking at it now.&lt;/p&gt;

&lt;p&gt;In trunk we have protobuf Service to put in place of the reflection.  This is autogen&apos;d code that in essence keeps a dictionary (a ServiceDescriptor) that it searches to figure what particular method invocation to make (the autogenerated code makes up a nice, fast lookups).  The pb Service &apos;fit&apos; is not perfect though &amp;#8211; it drags along some other stuff we do not want and it is missing a means of passing &quot;extra&quot; stuff unless we do some hackery &amp;#8211; so reluctant to take it on though it does away with reflection.&lt;/p&gt;

&lt;p&gt;Good on you K.&lt;/p&gt;</comment>
                            <comment id="13547491" author="stack" created="Wed, 9 Jan 2013 00:56:38 +0000"  >&lt;p&gt;Note to self (comes of a review of what would be involved pulling the proxy stuff out of hbase with Elliott):&lt;/p&gt;

&lt;p&gt;+ we&apos;d need a means of hooking up a generic &quot;callMethod&quot; that took a Method and params with a protocol Interface &amp;#8211; what proxy does for us now.  The protobuf Service can do this for us also but w/o reflection.&lt;br/&gt;
+ What we have currently where we have protobuf engine pollution in the HBaseClient &amp;#8211; though this latter class is supposed to be engine agnostic &amp;#8211; is ugly and hard to follow.&lt;/p&gt;

&lt;p&gt;Given the above, protobuf Service starts to look better.  It has kinks but would enforce a strong pattern &amp;#8211; and we are most of the way there already with our use of the Service#BlockingInterface.&lt;/p&gt;</comment>
                            <comment id="13547696" author="stack" created="Wed, 9 Jan 2013 06:42:49 +0000"  >&lt;p&gt;More experimenting making engine return a pb Service (follow on from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6521&quot; title=&quot;Address the handling of multiple versions of a protocol&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6521&quot;&gt;&lt;del&gt;HBASE-6521&lt;/del&gt;&lt;/a&gt; and from chat Elliott and I were having earlier today).&lt;/p&gt;

&lt;p&gt;The attached patch tries to keep the current engine model only instead of getProxy and stopProxy it has a start and stop that returns a pb Service instance instead.&lt;/p&gt;

&lt;p&gt;But it won&apos;t work as is.  pb Service won&apos;t let us go this route.  pb Service would have us jettison all of this engine stuff too and just deal in Stub creations.&lt;/p&gt;

&lt;p&gt;Putting aside for now.&lt;/p&gt;</comment>
                            <comment id="13548711" author="karthik.ranga" created="Wed, 9 Jan 2013 17:33:39 +0000"  >
&lt;p&gt;&amp;lt;&amp;lt; The pb Service &apos;fit&apos; is not perfect though &#8211; it drags along some other stuff we do not want and it is missing a means of passing &quot;extra&quot; stuff unless we do some hackery &#8211; so reluctant to take it on though it does away with reflection. &amp;gt;&amp;gt;&lt;br/&gt;
Couldn&apos;t agree more. My thought was that HBase only exposes simple API&apos;s like get, put, delete and scan. Each of these in turn takes in 1 object (Get/Put/Delete/Scan), and a couple of filters. The serialization of the latter objects already seems to be versioned. So protobufs might be expensive for just eliminating reflection, but it might help with the automatic versioning for future enhancements. I think you said the same thing here: &amp;lt;&amp;lt; Given the above, protobuf Service starts to look better. It has kinks but would enforce a strong pattern &#8211; and we are most of the way there already with our use of the Service#BlockingInterface. &amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;I can do better than just explaining - can put up an initial patch that works for gets only. Will upload it next, but the changes are actually not very invasive. Here is an outline of steps:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Replace the proxy with a HRegionInterfaceSerializerV1. It implements the RPC serialization when the method calls are made.&lt;/li&gt;
	&lt;li&gt;On the server side, you would have the HRegionInterfaceDeserializerV1 object. You would use the method name to call the right function in this object, which deserializes the params. In the current incarnation, every method would do the same thing (read the params count, param classes, etc).&lt;/li&gt;
	&lt;li&gt;Change the ser and deser objects to v2, bump up RPC version, substitute the method names for byte codes and make the serialization/deserialization of the params specific to the method that is called.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;IMO, if you look at my next diff (where I reconstructed the HBase RPC protocol), its pretty verbose and inefficient. It roughly does the following:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Get the class name, method name, num params, param classes by reflection&lt;/li&gt;
	&lt;li&gt;write the class name (twice most of the time)&lt;/li&gt;
	&lt;li&gt;write the num params&lt;/li&gt;
	&lt;li&gt;write the types of each param&lt;/li&gt;
	&lt;li&gt;then serialize each param&lt;br/&gt;
This makes coding nice, but hurts at the runtime perf.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13548717" author="karthik.ranga" created="Wed, 9 Jan 2013 17:37:00 +0000"  >&lt;p&gt;In this patch, HRegionInterfaceProxyImpl is the serializer that eliminates the proxy. This eliminates a decent chunk of CPU on the HBase client and entirely shifted the bottleneck to the server side. Was able to push the max get ops/sec to around 196K with this on the client and other server side changes. Will write up about this in detail sometime.&lt;/p&gt;</comment>
                            <comment id="13548821" author="devaraj" created="Wed, 9 Jan 2013 18:53:28 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=karthik.ranga&quot; class=&quot;user-hover&quot; rel=&quot;karthik.ranga&quot;&gt;Karthik Ranganathan&lt;/a&gt;, very interesting. Do you have the results (the max ops/sec) without the patch handy.&lt;/p&gt;</comment>
                            <comment id="13548839" author="karthik.ranga" created="Wed, 9 Jan 2013 19:07:49 +0000"  >&lt;p&gt;Yes was able to get it to 170-185K with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7100&quot; title=&quot;Allow multiple connections from HBaseClient to each remote endpoint&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7100&quot;&gt;&lt;del&gt;HBASE-7100&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7163&quot; title=&quot;Low-hanging perf  improvements in HBase client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7163&quot;&gt;&lt;del&gt;HBASE-7163&lt;/del&gt;&lt;/a&gt; without this, and the client was the bottleneck. Now, its at 196K and the server seems to be the bottleneck.&lt;/p&gt;</comment>
                            <comment id="13550519" author="stack" created="Thu, 10 Jan 2013 22:34:40 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=karthik.ranga&quot; class=&quot;user-hover&quot; rel=&quot;karthik.ranga&quot;&gt;Karthik Ranganathan&lt;/a&gt; Mighty Karthik.  Patch looks legit.  Its radical writing it all out by hand but this by-hand is going on anyways just in different places through the code.  So why mess about w/ this Proxy stuff?  Trying to think of downsides but its only the same serialization issues you&apos;d have with or without proxying (only it&apos;ll be clearer what is going on when proxy is removed).&lt;/p&gt;

&lt;p&gt;I&apos;m going to mark this a 0.89 issue if that is ok w/ you.  I&apos;m going to open a new issue for turn proxy removing.  We have diverged too much; we don&apos;t have Writables any more and our &apos;protocols&apos; have all different signatures from you (we don&apos;t have versioning nor protocol signature either as of a few days ago).  Also, rather than have to hand code the protocol serialization/deserialization, we have the option of just exploiting the code generated by pb Service.&lt;/p&gt;

&lt;p&gt;Our big take away from this issue is that the proxying has a cost.  A few of us digging in rpc of late have been questioning the need for proxy at all.  That it has a cost too becomes another mark against it.  We&apos;ll look into removing it in trunk too over in another trunk-focused issue.&lt;/p&gt;

&lt;p&gt;Good on you boss.&lt;/p&gt;

&lt;p&gt;Hint, Gary Helmling has found that the caching of clients is useless code, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7460&quot; title=&quot;Cleanup client connection layers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7460&quot;&gt;&lt;del&gt;HBASE-7460&lt;/del&gt;&lt;/a&gt;.  You might want to cut this out too while you have your butcher&apos;s apron on.&lt;/p&gt;</comment>
                            <comment id="13551205" author="karthik.ranga" created="Fri, 11 Jan 2013 15:54:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; Totally, feel free to open a new one for trunk.&lt;/p&gt;

&lt;p&gt;Will definitely check out &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7460&quot; title=&quot;Cleanup client connection layers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7460&quot;&gt;&lt;del&gt;HBASE-7460&lt;/del&gt;&lt;/a&gt;. One other change that has happened in the past (which makes this easier) is that we have done away with proxy objects per conf on the client side - it used to be a singleton. Now with this patch, its just a straight up object instance.&lt;/p&gt;</comment>
                            <comment id="13646078" author="stack" created="Tue, 30 Apr 2013 22:32:11 +0000"  >&lt;p&gt;Resolving as duplicate; being implemented by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8214&quot; title=&quot;Remove proxy and engine, rely directly on pb generated Service&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8214&quot;&gt;&lt;del&gt;HBASE-8214&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12639599">HBASE-8214</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12601670">HBASE-6521</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12563893" name="7477experiment.txt" size="11404" author="stack" created="Wed, 9 Jan 2013 06:42:49 +0000"/>
                            <attachment id="12563967" name="HBASE-7477.patch" size="24581" author="karthik.ranga" created="Wed, 9 Jan 2013 17:37:00 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 9 Jan 2013 00:22:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>302281</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 33 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i16zvr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>248948</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>