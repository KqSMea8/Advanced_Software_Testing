<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:15:47 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4084/HBASE-4084.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4084] Auto-Split runs only if there are many store files per region</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4084</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently, MemStoreFlusher.flushRegion() is the driver of auto-splitting. It only decides to auto-split a region if there are too many store files per region. Since it&apos;s not guaranteed that the number of store files per region always grows above the &quot;too many&quot; count before compaction reduces the count, there is no guarantee that auto-split will ever happen. In my test setup, compaction seems to always win the race and I haven&apos;t noticed auto-splitting happen once.&lt;/p&gt;

&lt;p&gt;It appears that the intention is to have split be mutually exclusive with compaction, and to have flushing be mutually exclusive with regions badly in need of compaction, but that resulted in auto-splitting being nested in a too-restrictive spot.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure what the right fix is. Having one method that is essentially requestSplitOrCompact would probably help readability, and could be the ultimate solution if it replaces other calls of requestCompaction().&lt;/p&gt;</description>
                <environment></environment>
        <key id="12513708">HBASE-4084</key>
            <summary>Auto-Split runs only if there are many store files per region</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="heitmann">John Heitmann</reporter>
                        <labels>
                    </labels>
                <created>Mon, 11 Jul 2011 19:04:29 +0000</created>
                <updated>Tue, 28 Aug 2012 21:13:40 +0000</updated>
                            <resolved>Tue, 28 Aug 2012 21:13:40 +0000</resolved>
                                    <version>0.94.0</version>
                                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13063476" author="streamy" created="Mon, 11 Jul 2011 19:15:14 +0000"  >&lt;p&gt;I thought splits were triggered following a compaction not a flush?&lt;/p&gt;</comment>
                            <comment id="13063486" author="heitmann" created="Mon, 11 Jul 2011 19:35:05 +0000"  >&lt;p&gt;Here is a shortened skeleton of flush leading to a split (from MemStoreFlusher):&lt;/p&gt;


&lt;p&gt;  private boolean flushRegion(final FlushRegionEntry fqe) {&lt;br/&gt;
    if (!isMetaRegion(region) &amp;amp;&amp;amp; isTooManyStoreFiles(region)) {&lt;br/&gt;
      if (... waited too long for compaction to clean things up? ...) &lt;/p&gt;
{
        log(&quot;Waited too long for compaction to clean things up&quot;)
      }
&lt;p&gt; else {&lt;br/&gt;
        if (!this.server.compactSplitThread.requestSplit(region)) &lt;/p&gt;
{
          this.server.compactSplitThread.requestCompaction(region, getName());
        }
&lt;p&gt;        // Put back on the queue.  Have it come back out of the queue&lt;br/&gt;
        // after a delay of this.blockingWaitTime / 100 ms.&lt;br/&gt;
        this.flushQueue.add(fqe.requeue(this.blockingWaitTime / 100));&lt;br/&gt;
        // Tell a lie, it&apos;s not flushed but it&apos;s ok&lt;br/&gt;
        return true;&lt;br/&gt;
      }&lt;br/&gt;
    }&lt;br/&gt;
    return flushRegion(region, false);&lt;br/&gt;
  }&lt;/p&gt;


&lt;p&gt;I don&apos;t see any other place split is called other than manual splitting, but I could easily be missing something. I&apos;ve been tracing this through by finding callers of CompactSplitThread.requestSplit().&lt;/p&gt;</comment>
                            <comment id="13063490" author="heitmann" created="Mon, 11 Jul 2011 19:39:05 +0000"  >&lt;p&gt;Let&apos;s try that again with formatting:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; flushRegion(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; FlushRegionEntry fqe) {
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!isMetaRegion(region) &amp;amp;&amp;amp; isTooManyStoreFiles(region)) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (... waited too &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; compaction to clean things up? ...) {
      log(&lt;span class=&quot;code-quote&quot;&gt;&quot;Waited too &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; compaction to clean things up&quot;&lt;/span&gt;)
    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.server.compactSplitThread.requestSplit(region)) {
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.server.compactSplitThread.requestCompaction(region, getName());
      }
      &lt;span class=&quot;code-comment&quot;&gt;// Put back on the queue. Have it come back out of the queue
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// after a delay of &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.blockingWaitTime / 100 ms.
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.flushQueue.add(fqe.requeue(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.blockingWaitTime / 100));
      &lt;span class=&quot;code-comment&quot;&gt;// Tell a lie, it&apos;s not flushed but it&apos;s ok
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
    }
  }
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; flushRegion(region, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13063492" author="yuzhihong@gmail.com" created="Mon, 11 Jul 2011 19:46:31 +0000"  >&lt;p&gt;I think &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4081&quot; title=&quot;Issues with HRegion.compactStores methods&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4081&quot;&gt;&lt;del&gt;HBASE-4081&lt;/del&gt;&lt;/a&gt; is related to this ticket.&lt;br/&gt;
There was suggestion of removing the call to s.CheckSplit() in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4081&quot; title=&quot;Issues with HRegion.compactStores methods&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4081&quot;&gt;&lt;del&gt;HBASE-4081&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13443544" author="lhofhansl" created="Tue, 28 Aug 2012 21:13:40 +0000"  >&lt;p&gt;Looked at the current code. A split request is now created in both the Flush and the Compaction cases.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 11 Jul 2011 19:15:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27164</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 16 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hpaf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101359</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>