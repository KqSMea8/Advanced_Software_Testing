<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:36:49 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12823/HBASE-12823.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12823] Visibility label security at limited localized level</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12823</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently, if visibility label security is enabled for a HBase instance, after VisibilityController is configured, the cell level visibility label filtering will kick in across the HBase instance.&lt;/p&gt;

&lt;p&gt;Cell level visibility label filtering has non-negligible performance impact.&lt;/p&gt;

&lt;p&gt;On the other hand, in many use cases, only a small portion of the overall data needs visibility label protection.&lt;/p&gt;

&lt;p&gt;If we can support  visibility label security at a limited and localized level, we will broaden the use cases and the adoption of this feature.&lt;/p&gt;

&lt;p&gt;We should be able to support visibility label security at per table or per column family level. This is quite common in many other HBase features.&lt;/p&gt;

&lt;p&gt;Cell level visibility label filtering will only be enabled and kick in for the tables or column families that the user designates.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12765832">HBASE-12823</key>
            <summary>Visibility label security at limited localized level</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jinghe">Jerry He</reporter>
                        <labels>
                    </labels>
                <created>Thu, 8 Jan 2015 19:10:44 +0000</created>
                <updated>Sat, 17 Jan 2015 07:34:11 +0000</updated>
                                            <version>1.0.0</version>
                    <version>2.0.0</version>
                    <version>0.98.10</version>
                                    <fixVersion>2.0.0</fixVersion>
                                    <component>security</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="14269888" author="busbey" created="Thu, 8 Jan 2015 19:19:51 +0000"  >&lt;p&gt;do we have some measurements of the performance impact on tables that aren&apos;t using visibility labels?&lt;/p&gt;</comment>
                            <comment id="14269936" author="jinghe" created="Thu, 8 Jan 2015 19:42:41 +0000"  >&lt;p&gt;Hi, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; and others had discussions on performance and some result in the original &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6222&quot; title=&quot;Add per-KeyValue Security&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6222&quot;&gt;&lt;del&gt;HBASE-6222&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
The performance impact will also depends on the types of user access patterns, queries and the presence and absence of other user filters.&lt;/p&gt;</comment>
                            <comment id="14270046" author="busbey" created="Thu, 8 Jan 2015 21:04:10 +0000"  >&lt;p&gt;I&apos;m just wondering if those numbers are still accurate, given the eventual optimizations that went in to the hfile for when tags are or are not present.&lt;/p&gt;</comment>
                            <comment id="14270243" author="jinghe" created="Thu, 8 Jan 2015 23:56:12 +0000"  >&lt;p&gt;Hi, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We sure can try to qualify the performance impact with new numbers &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;br/&gt;
Any suggestions and ideas on how we approach this JIRA is definitely welcomed as well.&lt;br/&gt;
I will also try to outline some thoughts.&lt;/p&gt;</comment>
                            <comment id="14274470" author="apurtell" created="Tue, 13 Jan 2015 00:21:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;Cell level visibility label filtering has non-negligible performance impact.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Intuitively we can expect some impact but can we have data that quantifies &quot;non-negligible&quot;? Thanks.&lt;/p&gt;</comment>
                            <comment id="14274664" author="anoop.hbase" created="Tue, 13 Jan 2015 03:58:28 +0000"  >&lt;p&gt;Having an offline talk with &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerryhe&quot; class=&quot;user-hover&quot; rel=&quot;jerryhe&quot;&gt;Jerry He&lt;/a&gt;, one scenario is that many tables in the cluster but only one or 2 having vis labelled data.    On scan the VC will install a new Filter to Scan which goes through the tags in every cell.  (Well if there are no tags, negligible impact, but there are some other tags...)   For those tables where vis labelled data need not be stored, no need for any extra overhead.&lt;br/&gt;
We allow CPs can be installed at table level also. &lt;br/&gt;
A solution for above scenario is to install VC as Master CP but not as region CP at cluster level.  Add VC to only those table for which we need to store vis labelled data.  (Also VC need to configured as RS CP as we have replication rewrite and if no replication scenario just leave it)&lt;br/&gt;
Only thing missing from code now is we need VC to be installed on labels table itself. If we are not installing VC at cluster level (but only per table level) the labels table will not get this..&lt;br/&gt;
This can be fixed with a simple change to add VC cp into labels table when we create it in VC#postStartMaster.&lt;br/&gt;
Is this better and enough for now &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerryhe&quot; class=&quot;user-hover&quot; rel=&quot;jerryhe&quot;&gt;Jerry He&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14277505" author="jinghe" created="Wed, 14 Jan 2015 19:23:02 +0000"  >&lt;p&gt;Thanks for the comments.&lt;/p&gt;

&lt;p&gt;I will look more into the performance related to security labels and tags.&lt;/p&gt;

&lt;p&gt;Regarding Anoop&apos;s suggestion, there is one thing that may be a security concern.  You security experts can chime in.&lt;br/&gt;
If VC is controlled by table attribute, then it can be altered by user with ACL (A or C) on the table.&lt;br/&gt;
It is possible that users with ACL (A or C) permission on TableA are not allowed to access data in TableA or bypass the visibility protection?&lt;/p&gt;</comment>
                            <comment id="14278175" author="busbey" created="Thu, 15 Jan 2015 03:10:12 +0000"  >&lt;p&gt;You might have cases where someone has A/C but not R on a table (like a DBA who can tune parameters on the table but isn&apos;t allowed to actually inspect the data). In practice I haven&apos;t seen this very often in key/value store deployments.&lt;/p&gt;

&lt;p&gt;If we&apos;re going to allow someone with table-level A to bypass visibility protections in that table, then we need a way to force enforcement at the global level. My knee-jerk reaction is that someone with table level alter (and not global) should definitely not be able to bypass visibility protection, but I think if end users can effectively opt-out of table/cf level configuration then it&apos;s fine to have it as an option.&lt;/p&gt;</comment>
                            <comment id="14278286" author="apurtell" created="Thu, 15 Jan 2015 05:44:28 +0000"  >&lt;p&gt;&amp;gt; It is possible that users with ACL (A or C) permission on TableA are not allowed to access data in TableA or bypass the visibility protection?&lt;/p&gt;

&lt;p&gt;The bits are independent so A doesn&apos;t grant R or W. However, A and C both grant the privilege to alter table attributes*. If the VisibilityController is installed as a table coprocessor then it could be deactivated. This is less a problem of design for us and much more a violation of the trust implicitly placed in that user when they were granted A or C permissions on the table by their organization. It would also be a problem of subpar site configuration, in my opinion. I would not recommend either AccessController nor VisibilityController be installed as table coprocessors. They should always be installed as system coprocessors. If we agree on this point we can document it as recommended configuration in the security section of the online manual. &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;- and grant themselves additional perm bits on the scopes where they have A or C perms.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14280940" author="jinghe" created="Fri, 16 Jan 2015 22:46:30 +0000"  >&lt;p&gt;Thanks for the comments. &lt;br/&gt;
Based on the comments, it sounds like an approach we can go with and a clear documentation stating the risks and safeguards?&lt;/p&gt;

&lt;p&gt;Thinking a little more. I wonder if the following is doable or desirable. &lt;/p&gt;

&lt;p&gt;Introduce a couple of enable/disable API (and commands) that basically control if the VC would be applied on the table and CF level. &lt;/p&gt;

&lt;p&gt;e.g.  &lt;br/&gt;
&amp;gt; disable_VC  &apos;table1&apos;,  &apos;cf1&apos;&lt;/p&gt;

&lt;p&gt;The enabled (or disabled) table/CF list is persisted to the hbase:labels table (and cached by VC), similar to the way how the table/CF info is maintained for ACL.&lt;br/&gt;
VC is still system level.&lt;br/&gt;
But VC has all the info it needs to skip and optimize based on whether a particular table or CF is enabled for visibility label filtering.&lt;br/&gt;
The enable/disable can only be invoked by super user and user having system auth.&lt;br/&gt;
This way we will have a relatively independent, self-contained visibility security framework.&lt;br/&gt;
We can decide if the default behavior for each table/CF is &apos;enable&apos; or &apos;disable&apos;.&lt;/p&gt;</comment>
                            <comment id="14281249" author="ram_krish" created="Sat, 17 Jan 2015 07:34:11 +0000"  >&lt;p&gt;Chiming in very late here. &lt;br/&gt;
Reading the different comments, the super user behaviour and the user&apos;s granted with the A and C permission for a table but with R permission of the table would anyway have the access to change the behaviour of the table. &lt;br/&gt;
So an user with A or C permission could set the parameter on the table descriptor (or via column descriptor) to enable this. The VC would have access to this information and decide whether to act on the visibility labels or not?  So a table with no VC would just ignore the visibility in the mutations or throw exception. Going with region level VC would still work out. Going with a patch may help us to find if any pros and cons in moving the VC to table level.  Any way to associate VC to a table we may need shell support and API support, right?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 8 Jan 2015 19:19:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 47 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2439z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>