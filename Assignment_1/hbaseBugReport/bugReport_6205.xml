<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:34:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6205/HBASE-6205.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6205] Support an option to keep data of dropped table for some time</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6205</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;User may drop table accidentally because of error code or other uncertain reasons.&lt;/p&gt;

&lt;p&gt;Unfortunately, it happens in our environment because one user make a mistake between production cluster and testing cluster.&lt;/p&gt;

&lt;p&gt;So, I just give a suggestion, do we need to support an option to keep data of dropped table for some time, e.g. 1 day&lt;/p&gt;

&lt;p&gt;In the patch:&lt;br/&gt;
We make a new dir named .trashtables in the rood dir.&lt;br/&gt;
In the DeleteTableHandler, we move files in dropped table&apos;s dir to trash table dir instead of deleting them directly.&lt;br/&gt;
And Create new class TrashCleaner which will clean dropped tables if it is time out with a period check.&lt;br/&gt;
Default keep time for dropped tables is 1 day, and check period is 1 hour.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12560469">HBASE-6205</key>
            <summary>Support an option to keep data of dropped table for some time</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="7">Later</resolution>
                                        <assignee username="zjushch">chunhui shen</assignee>
                                    <reporter username="zjushch">chunhui shen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 13 Jun 2012 09:32:56 +0000</created>
                <updated>Wed, 16 Nov 2016 21:50:30 +0000</updated>
                            <resolved>Wed, 16 Nov 2016 21:41:09 +0000</resolved>
                                    <version>2.0.0</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>18</watches>
                                                                <comments>
                            <comment id="13294297" author="zjushch" created="Wed, 13 Jun 2012 09:39:03 +0000"  >&lt;p&gt;In the patch:&lt;/p&gt;

&lt;p&gt;Move regions to trash table dir when dropping tables, and clear these regions after time out.&lt;br/&gt;
Default keep time: 1 day&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.keepTime = conf.getLong(&lt;span class=&quot;code-quote&quot;&gt;&quot;hbase.master.trashtable.keeptime&quot;&lt;/span&gt;,
+        24 * 3600 * 1000l);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13294664" author="apurtell" created="Wed, 13 Jun 2012 21:22:30 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13294776" author="zjushch" created="Thu, 14 Jun 2012 02:34:25 +0000"  >&lt;p&gt;Updating patch v2&lt;/p&gt;</comment>
                            <comment id="13294817" author="yuzhihong@gmail.com" created="Thu, 14 Jun 2012 05:54:12 +0000"  >&lt;p&gt;Nice feature.&lt;/p&gt;

&lt;p&gt;Shall we consider the possibility that there may be more than one attempt to delete the same table ? This could be due to e.g. region server failure, etc.&lt;br/&gt;
In that case we would have more than one directory for the table, each with different timestamp prefix.&lt;br/&gt;
It would be nice for this feature to group regions for the same table under one parent directory.&lt;/p&gt;

&lt;p&gt;Further, trash is able to hold more than one table. Can we name related classes Trash instead of TrashTable ?&lt;/p&gt;

&lt;p&gt;The regions in trash would occupy disk space. It would be nice to show on master UI how much space is currently consumed by trash, what tables are in trash.&lt;/p&gt;

&lt;p&gt;It would also be nice to prompt user if he/she is creating a table with the same name as one of the tables in trash.&lt;/p&gt;

&lt;p&gt;The above can be done in follow-up JIRAs. However we should prepare for enhancement from the beginning.&lt;/p&gt;

&lt;p&gt;Please put patch on review board when you think it has paved the way for future enhancement.&lt;/p&gt;</comment>
                            <comment id="13294831" author="zjushch" created="Thu, 14 Jun 2012 06:22:49 +0000"  >&lt;p&gt;@Ted&lt;br/&gt;
Thanks for the suggestion.&lt;/p&gt;

&lt;p&gt;I would improve it as the comments and put patch on review board&lt;/p&gt;</comment>
                            <comment id="13294833" author="hadoopqa" created="Thu, 14 Jun 2012 06:26:02 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12532035/HBASE-6205v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12532035/HBASE-6205v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 6 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestTrashTableCleaner&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2167//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2167//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2167//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2167//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2167//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2167//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2167//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2167//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13294864" author="zjushch" created="Thu, 14 Jun 2012 07:39:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;how much space is currently consumed by trash&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We should consume size of each file recursively, is it too expensive?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;prompt user if he/she is creating a table with the same name as one of the tables in trash&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think this feature is used for HBase administrator. It could be invisible to general users. In fact, we need use tool like add_table.rb to recover dropped table.&lt;/p&gt;
</comment>
                            <comment id="13294872" author="zjushch" created="Thu, 14 Jun 2012 07:49:00 +0000"  >&lt;p&gt;Updating the patch v3 (change the name)&lt;/p&gt;</comment>
                            <comment id="13294901" author="hadoopqa" created="Thu, 14 Jun 2012 08:39:27 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12532048/HBASE-6205v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12532048/HBASE-6205v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 6 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2170//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2170//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2170//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2170//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2170//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2170//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2170//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2170//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13295036" author="yuzhihong@gmail.com" created="Thu, 14 Jun 2012 13:59:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;prompt user if he/she is creating a table with the same name as one of the tables in trash&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think the above is needed, especially if the table being created has different schema from the deleted table (which had the same name).&lt;/p&gt;</comment>
                            <comment id="13295198" author="stack" created="Thu, 14 Jun 2012 18:07:58 +0000"  >&lt;p&gt;@Chunhui Why a special hbase trash dir?  Why not just use the trash facility of hdfs?  It already has configurable retention period?&lt;/p&gt;</comment>
                            <comment id="13295423" author="zjushch" created="Fri, 15 Jun 2012 01:57:33 +0000"  >&lt;p&gt;@stack&lt;br/&gt;
In my memory, trash facility of hdfs is only used for shell commend, if we called fs.delete() through code, could it work also? Sorry, I&apos;m not sure about this.&lt;/p&gt;

&lt;p&gt;Anyway, we would delete files after compaction or old logs, and needn&apos;t to reserve them. &lt;/p&gt;</comment>
                            <comment id="13295428" author="zjushch" created="Fri, 15 Jun 2012 02:23:57 +0000"  >&lt;p&gt;review board&lt;br/&gt;
&lt;a href=&quot;https://review.cloudera.org/r/2153/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://review.cloudera.org/r/2153/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13295808" author="zhihyu@ebaysf.com" created="Fri, 15 Jun 2012 17:56:27 +0000"  >&lt;p&gt;@Stack:&lt;br/&gt;
Did Chunhui answer your question ?&lt;/p&gt;</comment>
                            <comment id="13396960" author="zhihyu@ebaysf.com" created="Tue, 19 Jun 2012 18:14:37 +0000"  >&lt;p&gt;@Andrew:&lt;br/&gt;
What do you think of the patch ?&lt;/p&gt;</comment>
                            <comment id="13397284" author="zjushch" created="Wed, 20 Jun 2012 06:06:54 +0000"  >&lt;p&gt;Updating patch v4 as Ted&apos;s comments in review board&lt;/p&gt;</comment>
                            <comment id="13397305" author="hadoopqa" created="Wed, 20 Jun 2012 07:00:46 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12532653/HBASE-6205v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12532653/HBASE-6205v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 7 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2198//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2198//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2198//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2198//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2198//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2198//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2198//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2198//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13398171" author="zjushch" created="Thu, 21 Jun 2012 03:37:01 +0000"  >&lt;p&gt;Updating patch:&lt;br/&gt;
Add warning when user creates a table whose name is the same as one that was recently put into trash&lt;br/&gt;
And other comments provided by Ted in review board&lt;/p&gt;</comment>
                            <comment id="13398175" author="zhihyu@ebaysf.com" created="Thu, 21 Jun 2012 03:55:28 +0000"  >&lt;p&gt;From &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2206/console:&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2206/console:&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
svn: This client is too old to work with working copy &apos;.&apos;.  You need
to get a newer Subversion client, or to downgrade &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; working copy.
See http:&lt;span class=&quot;code-comment&quot;&gt;//subversion.tigris.org/faq.html#working-copy-format-change
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; details.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You need to run test suite yourself.&lt;/p&gt;</comment>
                            <comment id="13398544" author="jesse_yates" created="Thu, 21 Jun 2012 16:28:43 +0000"  >&lt;p&gt;I don&apos;t know if this feature needs to be so far reaching. We already are getting preservation of the hfiles on delete via &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5547&quot; title=&quot;Don&amp;#39;t delete HFiles when in &amp;quot;backup mode&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5547&quot;&gt;&lt;del&gt;HBASE-5547&lt;/del&gt;&lt;/a&gt; and as stack says, HDFS supports a /trash directory with configurable deletion period  (&lt;a href=&quot;http://hadoop.apache.org/common/docs/r1.0.3/hdfs_design.html#Space+Reclamation&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hadoop.apache.org/common/docs/r1.0.3/hdfs_design.html#Space+Reclamation&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;It would make more sense that when we delete the table that we just store a list of the current files in the table in a single file added to /trash, so we know which files to include and which to exclude when recovering the table. This solves the issues of periodic cleanup, minimizing possible locations of old hfiles and still lets you reasonably recover a table.&lt;/p&gt;

&lt;p&gt;On the other hand, I would argue that this feature is a bit excessive. This isn&apos;t a feature traditional tables support and is a bit excessive IMO. You should be &lt;em&gt;very&lt;/em&gt; careful when dropping tables and not just do things willy-nilly on production (in particular, you can make sure all production runs via (possibly generated) scripts so you can validate and not &apos;accidentally&apos; drop tables moving from dev to production). The traditional though here is that you can recover if you are fast enough from the local fs (in this case hdfs /trash) or from a backup (everyone takes those periodically, right?). Am I missing something?&lt;/p&gt;

&lt;p&gt;+1 on making this configurable.&lt;/p&gt;</comment>
                            <comment id="13400738" author="zhihyu@ebaysf.com" created="Mon, 25 Jun 2012 18:07:30 +0000"  >&lt;p&gt;From &lt;a href=&quot;http://www.oracle.com/technetwork/database/features/availability/flashback-overview-082751.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.oracle.com/technetwork/database/features/availability/flashback-overview-082751.html&lt;/a&gt; (Jon Hsieh referred to):&lt;/p&gt;

&lt;p&gt;Flashback Drop: recover an accidentally dropped table. It restores the dropped table, and all of its indexes, constraints, and triggers, from the Recycle Bin (a logical container of all dropped objects).&lt;/p&gt;</comment>
                            <comment id="13400752" author="jesse_yates" created="Mon, 25 Jun 2012 18:22:56 +0000"  >&lt;p&gt;Is it possible to do an hbase-flashback by just rebuilding from the files in hdfs /trash? The main thing I&apos;m concerned with is having the deleted files end up in a bunch of places.&lt;/p&gt;</comment>
                            <comment id="13400756" author="enis" created="Mon, 25 Jun 2012 18:30:03 +0000"  >&lt;p&gt;+1 on using the hdfs trash, it has all the properties we need (configurable, easy to use, and works). We just need a way to reconstruct the table.&lt;/p&gt;</comment>
                            <comment id="13400764" author="jxiang" created="Mon, 25 Jun 2012 18:37:51 +0000"  >&lt;p&gt;hbck can be used to get the table back after all the data files are recovered from hdfs trash.&lt;/p&gt;</comment>
                            <comment id="13400944" author="devaraj" created="Mon, 25 Jun 2012 22:00:55 +0000"  >&lt;p&gt;Would this work:&lt;br/&gt;
1. Have the delete command simply disable the table (flag with disable_delete or something and record it in ZK)&lt;br/&gt;
2. Have the master periodically check for disable_delete table flags and if a table was disabled for more than 24 hours (say), then the master deletes the table&lt;br/&gt;
3. If (1) was done in error, then an &apos;undelete&apos; command could simply reenable the table within the 24 hour period &amp;amp; delete the ZK entry (of course these operations needs to be done carefully to avoid races).&lt;/p&gt;</comment>
                            <comment id="13400946" author="enis" created="Mon, 25 Jun 2012 22:01:48 +0000"  >&lt;p&gt;After an offline conversation with Ted, and Jitendra, it seems that hdfs trash works only for shell. One other concern is that trash is not exposed as hadoop filesystem feature, so we have to use the shell-equivalent commands to accomplish this, and it will work only on hdfs, not other file systems. &lt;/p&gt;

&lt;p&gt;The question of whether to implement an hbase-thrash boils down to whether we want this to work with file systems other than hdfs, and have more control on the retention policy.&lt;/p&gt;</comment>
                            <comment id="13400958" author="zhihyu@ebaysf.com" created="Mon, 25 Jun 2012 22:10:02 +0000"  >&lt;p&gt;Over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2315&quot; title=&quot;BookKeeper for write-ahead logging&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2315&quot;&gt;&lt;del&gt;HBASE-2315&lt;/del&gt;&lt;/a&gt;, Flavio proposed basing WAL on Bookkeeper.&lt;br/&gt;
Before WAL can have separate file system other than that used by HFiles, we should accommodate more file system choices beyond hdfs.&lt;/p&gt;</comment>
                            <comment id="13400983" author="jmhsieh" created="Mon, 25 Jun 2012 22:33:06 +0000"  >&lt;p&gt;Seems related to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5547&quot; title=&quot;Don&amp;#39;t delete HFiles when in &amp;quot;backup mode&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5547&quot;&gt;&lt;del&gt;HBASE-5547&lt;/del&gt;&lt;/a&gt;.  Would it make sense to try to unify the two?&lt;/p&gt;

&lt;p&gt;This seems to specifically implement what was seemingly decided against here. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5547?focusedCommentId=13241018&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13241018&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5547?focusedCommentId=13241018&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13241018&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13401193" author="zjushch" created="Tue, 26 Jun 2012 06:07:17 +0000"  >&lt;p&gt;1.Trash facility of hdfs is only used for shell command, if we called fs.delete() through code, it won&apos;t work, correct me if wrong&lt;/p&gt;

&lt;p&gt;2.Deleting HFiles when in &quot;backup mode&quot; will reserver all the compacted old files, but we won&apos;t need so more in general time&lt;/p&gt;

&lt;p&gt;3.Should we start &quot;backup mode&quot; actively? If so, how do we ensure reserve dropped table&apos;s files if we don&apos;t start &quot;backup mode&quot;.&lt;/p&gt;

&lt;p&gt;4.We shouldn&apos;t depend on that developer won&apos;t make mistake, HBase Administrator need one solution to recover dropped table&apos;s data.&lt;/p&gt;

&lt;p&gt;5.This featue is configurable, we could close it if no necessary&lt;/p&gt;

&lt;p&gt;The above is why we suggest this feature, &lt;br/&gt;
Pardon me if wrong.&lt;br/&gt;
Thanks all for providing suggestion.&lt;/p&gt;</comment>
                            <comment id="13401228" author="anoopsamjohn" created="Tue, 26 Jun 2012 07:57:41 +0000"  >&lt;p&gt;How about trying Devaraj&apos;s idea? If we do this way, need to see will it have some impacts on tools like HBCK.&lt;/p&gt;</comment>
                            <comment id="13401239" author="zjushch" created="Tue, 26 Jun 2012 08:28:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;How about trying Devaraj&apos;s idea? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If user dropped the table, and create the table with the same name, is it will something wrong?&lt;/p&gt;

&lt;p&gt;Another problem, if we set table disable_delete, could user see this table?&lt;/p&gt;</comment>
                            <comment id="13401245" author="ram_krish" created="Tue, 26 Jun 2012 08:39:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;if we set table disable_delete, could user see this table?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think here the user should be able to see until the table is really deleted. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;create the table with the same name, is it will something wrong?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If drop is done completely then we should allow the table creation with same name.  Maybe till then we should not allow.  Just my thoughts on this.  &lt;/p&gt;</comment>
                            <comment id="13401544" author="devaraj" created="Tue, 26 Jun 2012 17:27:18 +0000"  >&lt;p&gt;Yeah, agree with Ramkrishna on the points.. I&apos;d expect little impact on the hbck tool but haven&apos;t thought about it deeply enough (ideally, the hbck tool shouldn&apos;t need to change - it should treat disable_delete tables the same way as it treats disabled tables today).&lt;/p&gt;</comment>
                            <comment id="13401950" author="lhofhansl" created="Wed, 27 Jun 2012 04:01:45 +0000"  >&lt;p&gt;Agree with Jon that &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5547&quot; title=&quot;Don&amp;#39;t delete HFiles when in &amp;quot;backup mode&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5547&quot;&gt;&lt;del&gt;HBASE-5547&lt;/del&gt;&lt;/a&gt; should subsume this, especially considering my latest proposal there.&lt;/p&gt;</comment>
                            <comment id="13402404" author="jesse_yates" created="Wed, 27 Jun 2012 17:57:34 +0000"  >&lt;p&gt;@Lars &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5547&quot; title=&quot;Don&amp;#39;t delete HFiles when in &amp;quot;backup mode&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5547&quot;&gt;&lt;del&gt;HBASE-5547&lt;/del&gt;&lt;/a&gt; might not fully subsume this - conceptually we could have our own trash directory that just has a bunch of references files the original HFiles (like what I&apos;m doing with snapshots in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6055&quot; title=&quot;Offline Snapshots in HBase 0.96&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6055&quot;&gt;&lt;del&gt;HBASE-6055&lt;/del&gt;&lt;/a&gt;). You would need to hack Reference.java a little bit to support full file references (or just use what I wrote: &lt;a href=&quot;https://github.com/jyates/hbase/blob/timestamp-snapshots-r0/hbase-server/src/main/java/org/apache/hadoop/hbase/io/Reference.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/jyates/hbase/blob/timestamp-snapshots-r0/hbase-server/src/main/java/org/apache/hadoop/hbase/io/Reference.java&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;This way you don&apos;t end up doing any actual file copying, but still can keep track of the files.&lt;/p&gt;</comment>
                            <comment id="13402436" author="enis" created="Wed, 27 Jun 2012 18:29:38 +0000"  >&lt;p&gt;Considering this, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5547&quot; title=&quot;Don&amp;#39;t delete HFiles when in &amp;quot;backup mode&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5547&quot;&gt;&lt;del&gt;HBASE-5547&lt;/del&gt;&lt;/a&gt;, and snapshots, it seems that we can decouple file management, and region-file association. We can build a very lightweight file manager, and remove all file deletion code from RS code. &lt;/p&gt;

&lt;p&gt;As in the bigtable design, we can keep the current hfile&apos;s (and WAL&apos;s) of the regions in META, and RS flushes, or rolls the log, adds the file reference at META. Then for a snapshot or a backup, we just need a point-in-time snapshot of the META table. A master thread can periodically scan the META, and META snapshots and the hdfs directories, and delete the files with 0 reference based on a policy. And deleting the table will just take a META snapshot for the table, and delete the META entries afterwards. This META snapshot will be kept for a while (similar to the normal snapshot retention). WDYT, how crazy is this? &lt;/p&gt;</comment>
                            <comment id="13402442" author="zhihyu@ebaysf.com" created="Wed, 27 Jun 2012 18:34:33 +0000"  >&lt;p&gt;Interesting idea.&lt;br/&gt;
.META. scanning is not atomic. How about storing this information in zookeeper ?&lt;/p&gt;</comment>
                            <comment id="13402453" author="apurtell" created="Wed, 27 Jun 2012 18:43:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;.META. scanning is not atomic. How about storing this information in zookeeper ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We could use ZK for coordination but would also need to store back after to .META., so we can repopulate ZK in cold boot scenarios. So... both?&lt;/p&gt;</comment>
                            <comment id="13402586" author="lhofhansl" created="Wed, 27 Jun 2012 21:58:46 +0000"  >&lt;p&gt;Sounds like an awful amount of work for this feature.&lt;/p&gt;

&lt;p&gt;How about this: When a table is dropped we just delay that action by configurable amount of time (say 5 mins), during that time the drop action can be canceled.&lt;br/&gt;
Could just store tables to be dropped in a system table.&lt;/p&gt;</comment>
                            <comment id="13408330" author="mbertozzi" created="Fri, 6 Jul 2012 21:05:13 +0000"  >&lt;p&gt;Do we really need almost 3 + 1 identical features?&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;backup mode (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5547&quot; title=&quot;Don&amp;#39;t delete HFiles when in &amp;quot;backup mode&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5547&quot;&gt;&lt;del&gt;HBASE-5547&lt;/del&gt;&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;snapshots (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6055&quot; title=&quot;Offline Snapshots in HBase 0.96&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6055&quot;&gt;&lt;del&gt;HBASE-6055&lt;/del&gt;&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;keep data for some time before delete (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6205&quot; title=&quot;Support an option to keep data of dropped table for some time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6205&quot;&gt;&lt;del&gt;HBASE-6205&lt;/del&gt;&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;HDFS trash (why is shell only?)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Can&apos;t we just do everything with the snapshots? maybe marking the snapshot with some tag like User-Snapshot, Backup-Snapshot, Delete-Snapshot?&lt;br/&gt;
The table backup can be done by taking a snapshot end exporting it to another cluster.&lt;br/&gt;
The delete can create a snapshot and you should be able to restore it.&lt;/p&gt;

&lt;p&gt;Maybe we can have some properties to say:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase.droptable.snapshot (true|false) take an automatic snapshot on drop table&lt;/li&gt;
	&lt;li&gt;hbase.droptable.snapshot.lifetime (sec) keep the drop table snapshot for X seconds.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13408620" author="stack" created="Sat, 7 Jul 2012 10:47:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;Unfortunately, it happens in our environment because one user make a mistake between production cluster and testing cluster.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Would a better approach be giving production and test environment&apos;s different access permissions.&lt;/p&gt;

&lt;p&gt;If not, if tester has access to both, IMO more safeguards will never fully protect against this error happening.&lt;/p&gt;</comment>
                            <comment id="13410692" author="jesse_yates" created="Tue, 10 Jul 2012 18:45:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;If not, if tester has access to both, IMO more safeguards will never fully protect against this error happening.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;True, but we can be really good about it.&lt;/p&gt;

&lt;p&gt;By combining a timeout before actually deleting a table (so you can do a quick restore) with a snapshot of the deleted table and a further timeout before the snapshot is cleaned (similar to the log-cleaner stuff now) - giving you a slower restore from saved state - you can minimize impact on the cluster and still keep most of the data safe. Unless you accidentally delete a table and then walk away for a week, you will probably be fine. &lt;/p&gt;</comment>
                            <comment id="13467182" author="stack" created="Mon, 1 Oct 2012 20:57:38 +0000"  >&lt;p&gt;Moving out of 0.96&lt;/p&gt;</comment>
                            <comment id="13648897" author="jdcryans" created="Fri, 3 May 2013 23:21:42 +0000"  >&lt;p&gt;Patch available status went stale, unmarking.&lt;/p&gt;</comment>
                            <comment id="15671727" author="esteban" created="Wed, 16 Nov 2016 21:41:09 +0000"  >&lt;p&gt;Resolving for later, We already have the archive and snapshots and we could take care of this after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14439&quot; title=&quot;New/Improved Filesystem Abstractions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14439&quot;&gt;HBASE-14439&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310360">
                    <name>Dependent</name>
                                                                <inwardlinks description="Dependent">
                                        <issuelink>
            <issuekey id="12864383">HBASE-14439</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12545774">HBASE-5547</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12531942" name="HBASE-6205.patch" size="17615" author="zjushch" created="Wed, 13 Jun 2012 09:39:03 +0000"/>
                            <attachment id="12532035" name="HBASE-6205v2.patch" size="19001" author="zjushch" created="Thu, 14 Jun 2012 02:34:25 +0000"/>
                            <attachment id="12532048" name="HBASE-6205v3.patch" size="19280" author="zjushch" created="Thu, 14 Jun 2012 07:48:59 +0000"/>
                            <attachment id="12532653" name="HBASE-6205v4.patch" size="19323" author="zjushch" created="Wed, 20 Jun 2012 06:06:54 +0000"/>
                            <attachment id="12532819" name="HBASE-6205v5.patch" size="21170" author="zjushch" created="Thu, 21 Jun 2012 03:37:01 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 13 Jun 2012 21:22:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>239572</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00rbj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2358</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>