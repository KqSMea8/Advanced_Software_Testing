<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:20:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4612/HBASE-4612.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4612] Allow ColumnPrefixFilter to support multiple prefixes</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4612</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;When having a lot of columns grouped by name I&apos;ve found that it would be very useful to be able to scan them using multiple prefixes, allowing to fetch specific groups in one scan, without fetching the entire row. This is impossible to achieve using a FilterList, so I&apos;ve added such support to the existing ColmnPrefixFilter while keeping backward compatibility.&lt;br/&gt;
The attached patch is based on 0.90.4, I noticed that the 0.92 branch has a new method to support instantiating filters using Thrift. I&apos;m not sure how the serialization works there so I didn&apos;t implement that, but the rest of my code should work in 0.92 as well.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12527600">HBASE-4612</key>
            <summary>Allow ColumnPrefixFilter to support multiple prefixes</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="erank">Eran Kutner</assignee>
                                    <reporter username="erank">Eran Kutner</reporter>
                        <labels>
                    </labels>
                <created>Tue, 18 Oct 2011 14:29:24 +0000</created>
                <updated>Fri, 12 Oct 2012 05:35:09 +0000</updated>
                            <resolved>Wed, 21 Mar 2012 19:23:25 +0000</resolved>
                                    <version>0.90.4</version>
                                    <fixVersion>0.94.0</fixVersion>
                                    <component>Filters</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13129955" author="streamy" created="Tue, 18 Oct 2011 19:09:14 +0000"  >&lt;p&gt;Hey Eran.  Thanks for the contribution!  A few comments..&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;There&apos;s no explanation of the behavior anywhere.  In the constructors and addPrefix() methods, you should document that this creates an OR condition across all of the prefixes, correct?&lt;/li&gt;
	&lt;li&gt;No need to instantiate a new comparator all the time (use Bytes.BYTES_COMPARATOR)&lt;/li&gt;
	&lt;li&gt;Something seems odd when you keep adding to the end of a List and then sort.  How about a TreeSet?  You can easily ignore dupes that way.&lt;/li&gt;
	&lt;li&gt;There&apos;s no input verification so, for example, you could pass a null to the constructor or an empty byte[][] and have some strange behavior.  Like it will instantiate okay but then you&apos;ll get server-side NPEs or IOOB.&lt;/li&gt;
	&lt;li&gt;this.prefixes.size() == 0 -&amp;gt; this.prefixes.isEmpty()&lt;/li&gt;
	&lt;li&gt;your comment at the top of filterColumn, i wouldn&apos;t exactly call it a workaround, but it&apos;s a good comment.  looking at the logic, it seems like correct behavior would be that it can be called with current == size() but it would be a bug if current &amp;gt; size(), right?  should you add an assert or throw an exception?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13130016" author="yuzhihong@gmail.com" created="Tue, 18 Oct 2011 20:55:32 +0000"  >&lt;p&gt;Improvements go to TRUNK.&lt;br/&gt;
@Eran:&lt;br/&gt;
Please prepare patch for TRUNK and run test suite.&lt;/p&gt;

&lt;p&gt;Nice work.&lt;/p&gt;</comment>
                            <comment id="13130020" author="erank" created="Tue, 18 Oct 2011 21:01:31 +0000"  >&lt;p&gt;Hi Jonathan, thanks for the feedback! See answers inline:&lt;/p&gt;

&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;There&apos;s no explanation of the behavior anywhere. In the constructors and addPrefix() methods, you should document that this creates an OR condition across all of the prefixes, correct?&lt;/p&gt;&lt;/blockquote&gt; - good point, added some more explanations.&lt;br/&gt;
&lt;blockquote&gt;&lt;p&gt;No need to instantiate a new comparator all the time (use Bytes.BYTES_COMPARATOR)&lt;/p&gt;&lt;/blockquote&gt; - Didn&apos;t know it existed. Changed.&lt;br/&gt;
&lt;blockquote&gt;&lt;p&gt;Something seems odd when you keep adding to the end of a List and then sort. How about a TreeSet? You can easily ignore dupes that way.&lt;/p&gt;&lt;/blockquote&gt; - This is intentional. Sorting is done only during initialization but accessing a ArrayList, which is actually based on an array, is much more efficient than accessing a tree, so I sacrifice the aesthetics of the code for better runtime performance.&lt;br/&gt;
&lt;blockquote&gt;&lt;p&gt;There&apos;s no input verification so, for example, you could pass a null to the constructor or an empty byte[][] and have some strange behavior. Like it will instantiate okay but then you&apos;ll get server-side NPEs or IOOB.&lt;/p&gt;&lt;/blockquote&gt; - it&apos;s a good point but I&apos;ve looked and no other filter is validating its input either. I can throw a InvalidArgumentException but don&apos;t know if it&apos;s a good idea considering it&apos;s not the norm.&lt;br/&gt;
&lt;blockquote&gt;&lt;p&gt;this.prefixes.size() == 0 -&amp;gt; this.prefixes.isEmpty()&lt;/p&gt;&lt;/blockquote&gt; - ok, changed.&lt;br/&gt;
&lt;blockquote&gt;&lt;p&gt;your comment at the top of filterColumn, i wouldn&apos;t exactly call it a workaround, but it&apos;s a good comment. looking at the logic, it seems like correct behavior would be that it can be called with current == size() but it would be a bug if current &amp;gt; size(), right? should you add an assert or throw an exception?&lt;/p&gt;&lt;/blockquote&gt; - well it is kind of a workaround, because as an individual filter I expect not be called again after returning NEXT_ROW, however, when used with FilterList the filter does get called again which puts it in an ilegal state, so it has to explicitly handle that case. That is also why it can&apos;t throw an exception in that scenario, because it seems to be happening normally when used with FilterList. as for &quot;current&quot; it has to be smaller than size() or it would be outside the bounds of the array.&lt;/p&gt;
</comment>
                            <comment id="13130023" author="erank" created="Tue, 18 Oct 2011 21:07:39 +0000"  >&lt;p&gt;@Ted:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Improvements go to TRUNK.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I know but see my initial comment regarding the new Thrift initialization method, I&apos;m just not sure how it&apos;s supposed to work or what am I supposed to do there.&lt;/p&gt;</comment>
                            <comment id="13130033" author="yuzhihong@gmail.com" created="Tue, 18 Oct 2011 21:24:32 +0000"  >&lt;p&gt;As far as &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4176&quot; title=&quot;Exposing HBase Filters to the Thrift API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4176&quot;&gt;&lt;del&gt;HBASE-4176&lt;/del&gt;&lt;/a&gt; is concerned, take a look at this in TRUNK:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; Filter createFilterFromArguments(ArrayList&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; []&amp;gt; filterArguments) {
    Preconditions.checkArgument(filterArguments.size() == 1,
                                &lt;span class=&quot;code-quote&quot;&gt;&quot;Expected 1 but got: %s&quot;&lt;/span&gt;, filterArguments.size());
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] columnPrefix = ParseFilter.removeQuotesFromByteArray(filterArguments.get(0));
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ColumnPrefixFilter(columnPrefix);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can relax the check above and call filterArguments.toArray() so that the new ctor can be used.&lt;/p&gt;</comment>
                            <comment id="13133586" author="erank" created="Sun, 23 Oct 2011 07:12:31 +0000"  >&lt;p&gt;OK, I uploaded a patch for trunk, hopefully what I&apos;ve done with the createFilterFromArguments method makes sense.&lt;/p&gt;</comment>
                            <comment id="13133611" author="yuzhihong@gmail.com" created="Sun, 23 Oct 2011 10:51:53 +0000"  >&lt;p&gt;+1 on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4612&quot; title=&quot;Allow ColumnPrefixFilter to support multiple prefixes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4612&quot;&gt;&lt;del&gt;HBASE-4612&lt;/del&gt;&lt;/a&gt;.patch, assuming test suite passes.&lt;/p&gt;

&lt;p&gt;Nice work Eran.&lt;/p&gt;</comment>
                            <comment id="13217964" author="lhofhansl" created="Tue, 28 Feb 2012 06:56:08 +0000"  >&lt;p&gt;We have MultipleColumnPrefixFilter (in trunk at least), which does exactly what is described here.&lt;br/&gt;
Is this different?&lt;/p&gt;</comment>
                            <comment id="13234905" author="lhofhansl" created="Wed, 21 Mar 2012 19:23:25 +0000"  >&lt;p&gt;I am closing this, because we already have MultipleColumnPrefixFilter.&lt;br/&gt;
Please reopen if I misunderstood.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12499596" name="HBASE-4612-0.90.patch" size="6820" author="erank" created="Tue, 18 Oct 2011 20:47:11 +0000"/>
                            <attachment id="12500359" name="HBASE-4612.patch" size="7592" author="erank" created="Sun, 23 Oct 2011 07:07:50 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 18 Oct 2011 19:09:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>88844</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 39 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08qmn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>48914</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>