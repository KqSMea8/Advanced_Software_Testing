<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:04:44 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2782/HBASE-2782.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2782] QOS for META table access</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2782</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I&apos;d like to brainstorm some ideas on how we can prioritize reads and writes to META above reads and writes to other tables. I&apos;ve noticed that if the regionserver hosting META is under heavy load, then lots of other operations take much longer than they should. For example, I&apos;m currently running 120 threads of YCSB across 3 client nodes hitting a 5-node cluster. Doing a full scan of META (only 600 rows) takes upwards of 30 seconds in the shell, since all of the handler threads are tied up and there&apos;s a long RPC queue. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12467764">HBASE-2782</key>
            <summary>QOS for META table access</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ryanobjc">ryan rawson</assignee>
                                    <reporter username="tlipcon">Todd Lipcon</reporter>
                        <labels>
                    </labels>
                <created>Thu, 24 Jun 2010 01:37:00 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:14 +0000</updated>
                            <resolved>Fri, 1 Oct 2010 22:19:48 +0000</resolved>
                                    <version>0.89.20100621</version>
                                    <fixVersion>0.90.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="12881999" author="tlipcon" created="Thu, 24 Jun 2010 01:41:26 +0000"  >&lt;p&gt;Here are a couple quick ideas off the top of my head:&lt;/p&gt;

&lt;p&gt;1) use a priority queue inside the RPC server, and allow the constructor of the server to specify a Comparator&amp;lt;Invocation&amp;gt; to decide which things to go first. We can then introspect the RPCs while they&apos;re in the queue to put META requests first.&lt;/p&gt;

&lt;p&gt;2) allow an RPC server to specify a Function&amp;lt;Invocation,Long&amp;gt; which returns a priority level for any incoming RPC. This would allow not just ordering like comparator above, but also the ability to reserve pools of handlers for different RPC tiers. (eg we can say any request to META has a priority 1000, anything to normal tables is &amp;lt; 500, and we will always reserve a thread pool of 5 handlers for META access)&lt;/p&gt;

&lt;p&gt;3) give region servers TWO rpc ports, with separate handler pools - probably a big mess since we have assumptions that we only have one RPC port per server. But this is what HDFS is doing now and seems to work.&lt;/p&gt;

&lt;p&gt;I kind of like option 2 above, and it doesn&apos;t seem like it would be incredibly difficult.&lt;/p&gt;</comment>
                            <comment id="12882042" author="streamy" created="Thu, 24 Jun 2010 05:02:27 +0000"  >&lt;p&gt;This specialness of META and that ideally it should be distributed is why I&apos;d like to eventually move it (or a mirror of it) into zk.&lt;/p&gt;</comment>
                            <comment id="12882110" author="apurtell" created="Thu, 24 Jun 2010 10:05:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;&#160;This specialness of META and that ideally it should be distributed is why I&apos;d like to eventually move it (or a mirror of it) into zk.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1&lt;/p&gt;



</comment>
                            <comment id="12882158" author="tlipcon" created="Thu, 24 Jun 2010 13:53:51 +0000"  >&lt;p&gt;Ehh, I&apos;m still unconvinced. Moving META to ZK means extra work for things like snapshots, backups, etc, where currently we can use the same mechanisms for user tables as for meta tables. Plus these issues that we see on META are issues that we&apos;ll also see on user tables. For example, right now it&apos;s very easy for a MR job to completely monopolize the capacity of a cluster to the point that interactive queries start having 30sec+ latencies. Really good QoS is hard, but I think a simple solution like above can get us a lot of benefit for not much work. Especially if we can make the QoS policy pluggable, maybe someone will just write a really good one and contribute it back.&lt;/p&gt;

&lt;p&gt;Multi-tenancy is a huge problem we haven&apos;t even begun to tackle, and QoS is just a tiny bit of it, but my point is that we need to solve this problem regardless of what happens to META.&lt;/p&gt;</comment>
                            <comment id="12882165" author="streamy" created="Thu, 24 Jun 2010 14:30:44 +0000"  >&lt;p&gt;Hmm, not sure I see the issues with moving META to ZK as snapshots and backups (these things do not really exist today).  I also think mirroring META into ZK but retaining a table for persistence could make good sense and also solve those issues, but let&apos;s not totally sidetrack this jira.&lt;/p&gt;

&lt;p&gt;I agree completely that we need to do work around QoS and what you&apos;re proposing makes sense for META in the short-term and helps build towards QoS of user tables.  I&apos;m still +1 on this jira but think we should not limit this to a special-casing for META.&lt;/p&gt;</comment>
                            <comment id="12882167" author="tlipcon" created="Thu, 24 Jun 2010 14:37:19 +0000"  >&lt;p&gt;Agree, not going to sidetrack. I&apos;ll bring up my gripes re snapshot/backup/etc in the &quot;move meta to ZK&quot; jira if/when it gets filed &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Also agree that we should not special-case meta in the framework. After sleeping on it, I continue to like option 2. All that we should have to do for initial cut is:&lt;br/&gt;
1) Define an interface like CallPrioritizer that takes a call object (method name/params) and provides a PrioritizedCall object (probably just wrapper for Long plus the original call object)&lt;br/&gt;
2) Internal to RPC, change callQueue over to a priority queue, where we compare by the call priorities. If no callprioritizer is specified, we just prioritize on insertion time like we do now.&lt;br/&gt;
3) Provide default implementation which prioritizes meta requests above user requests. Make it a configurable class so people can experiment with fancier QOS. If this turns out to work well, we turn it on by default, otherwise we leave the &quot;in-order execution&quot; as is by default.&lt;/p&gt;

&lt;p&gt;Then we can do other stuff like &quot;reserved handler pools&quot; or other ways of guaranteeing execution of high priority requests in a followup JIRA.&lt;/p&gt;</comment>
                            <comment id="12909134" author="ryanobjc" created="Tue, 14 Sep 2010 07:33:20 +0000"  >&lt;p&gt;i have a working patch for this, it makes an amazing difference!  I tested it on a version of hbase with that META deadlock and it cleared it right up &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I&apos;ll post a patch soon&lt;/p&gt;</comment>
                            <comment id="12909530" author="stack" created="Tue, 14 Sep 2010 23:50:34 +0000"  >&lt;p&gt;This patch changes the api for rpc.   It likely messes up Gary&apos;s work on making rpc pluggable; i.e. secure and non-secure rpc.  Let me ask him what he thinks of this.&lt;/p&gt;


&lt;p&gt;Whats this change mean?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private static final int MAX_QUEUE_SIZE_PER_HANDLER = 100;&lt;br/&gt;
+  private static final int MAX_QUEUE_SIZE_PER_HANDLER = 1000;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;QoSFunction has to be in  HRS?  We&apos;ve been doing work to break up the massive classes.&lt;/p&gt;

&lt;p&gt;How about a unit test?&lt;/p&gt;

</comment>
                            <comment id="12909532" author="ryanobjc" created="Tue, 14 Sep 2010 23:57:18 +0000"  >&lt;p&gt;Where else would QoSFunction go?  It has to know intimate details about the regionserver, in order to discern if a scan belongs to a META table or not.&lt;/p&gt;

&lt;p&gt;I tweaked the queue size per handler so that i would have less blocking, although I&apos;m not sure how good of an idea this is.  I can revert on commit.&lt;/p&gt;

&lt;p&gt;There are only 2 API changes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add new parameters for high priority RPC pools and levels&lt;/li&gt;
	&lt;li&gt;Add new setter for QosFunction&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;that is about it IIRC... its all internal elsewise?&lt;/p&gt;</comment>
                            <comment id="12909544" author="tlipcon" created="Wed, 15 Sep 2010 00:46:35 +0000"  >&lt;p&gt;Yea, -1 on increasing the queue size - those calls can eat a lot of memory, eg if they&apos;re bulk puts.&lt;/p&gt;

&lt;p&gt;Over in Hadoop land they solved the pooling issue by having the NN listen on multiple ports, where each port is dedicated to a different &quot;priority level&quot;. It&apos;s sort of nice since you can do network-level QoS as well to help things out, plus you don&apos;t have the issue of having to read a call in order to know if it&apos;s high priority. The downside of course is that you expose many more ports. Thoughts?&lt;/p&gt;</comment>
                            <comment id="12909894" author="ryanobjc" created="Wed, 15 Sep 2010 21:10:58 +0000"  >&lt;p&gt;lets go with the working code we have now... it isnt perfect but it improves things substantially.&lt;/p&gt;</comment>
                            <comment id="12914766" author="stack" created="Sat, 25 Sep 2010 06:31:25 +0000"  >&lt;p&gt;Shall we close this issue since the patch was committed and then open another for Todd&apos;s idea of another port to handle priority messages?&lt;/p&gt;</comment>
                            <comment id="12917069" author="ryanobjc" created="Fri, 1 Oct 2010 22:22:24 +0000"  >&lt;p&gt;Ports for QOS: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3069&quot; title=&quot;Use ports for QOS &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3069&quot;&gt;&lt;del&gt;HBASE-3069&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15017468" author="lars_francke" created="Fri, 20 Nov 2015 12:43:14 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12473415">HBASE-2964</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12474143">HADOOP-6952</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12434907">HDFS-599</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12473830">HBASE-2981</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12454590" name="HBASE-2782.txt" size="23013" author="ryanobjc" created="Tue, 14 Sep 2010 21:15:18 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 24 Jun 2010 05:02:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32765</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hj7z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100376</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>