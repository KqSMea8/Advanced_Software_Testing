<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:51:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1186/HBASE-1186.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1186] Memory-aware Maps with LRU eviction for Cell Cache</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1186</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Caching is key for 0.20.  We need a set of memory-aware data structures to manage our caches.&lt;/p&gt;

&lt;p&gt;I propose two initial classes:  LruHashMap and LruBlockMap&lt;/p&gt;

&lt;p&gt;&lt;b&gt;LruHashMap&lt;/b&gt; is currently being used over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-80&quot; title=&quot;[hbase] Add a cache of &amp;#39;hot&amp;#39; cells&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-80&quot;&gt;&lt;del&gt;HBASE-80&lt;/del&gt;&lt;/a&gt; for the Cell cache.  Erik Holstad has done extensive testing and benchmarking and will post results over in this issue.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Memory-aware&lt;/li&gt;
	&lt;li&gt;Fixed size&lt;/li&gt;
	&lt;li&gt;LRU eviction&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;b&gt;LruBlockMap&lt;/b&gt; can be used for the block caching of the new file format in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-61&quot; title=&quot;[hbase] Create an HBase-specific MapFile implementation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-61&quot;&gt;&lt;del&gt;HBASE-61&lt;/del&gt;&lt;/a&gt;.  It should try to use all available memory, but must contend with Memcaches so is resizable to deal with heap pressure.  Adding high priority blocks (evicted last) gives us in-memory functionality as described in bigtable paper.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Memory-aware&lt;/li&gt;
	&lt;li&gt;Fully resizable&lt;/li&gt;
	&lt;li&gt;LRU eviction (with some additions)&lt;/li&gt;
	&lt;li&gt;High priority blocks&lt;/li&gt;
	&lt;li&gt;&lt;em&gt;Optional: Scan resistant algorithm&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Part of this issue is also solving how we will determine the size of cached objects.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12414124">HBASE-1186</key>
            <summary>Memory-aware Maps with LRU eviction for Cell Cache</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="streamy">Jonathan Gray</assignee>
                                    <reporter username="streamy">Jonathan Gray</reporter>
                        <labels>
                    </labels>
                <created>Thu, 5 Feb 2009 17:56:02 +0000</created>
                <updated>Thu, 2 May 2013 02:29:19 +0000</updated>
                            <resolved>Thu, 26 Mar 2009 01:47:45 +0000</resolved>
                                                    <fixVersion>0.20.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12671270" author="erikholstad@gmail.com" created="Fri, 6 Feb 2009 19:42:20 +0000"  >&lt;p&gt;Adding the code for the current implementation of the LruHashMap.&lt;br/&gt;
Same code as &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-80&quot; title=&quot;[hbase] Add a cache of &amp;#39;hot&amp;#39; cells&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-80&quot;&gt;&lt;del&gt;HBASE-80&lt;/del&gt;&lt;/a&gt; right now.&lt;/p&gt;</comment>
                            <comment id="12671395" author="streamy" created="Sat, 7 Feb 2009 02:29:50 +0000"  >&lt;p&gt;Stripped down, partially tested.&lt;/p&gt;</comment>
                            <comment id="12671521" author="stack" created="Sat, 7 Feb 2009 20:25:49 +0000"  >&lt;p&gt;You think we should go to bother of trying to elicit if 32-bit vs. 64-bit?  (There is probably a canonical way but perhaps looking at bytes in an Integer would be a flag)?  When HeapSize is classloaded, it could run static methods to figure 32-bit vs. 64-bit and then adjust the defines in this class accordingly?  Then have methods on HeapSize that implementers call to size themselves for the different architectures?  Maybe thats something for later, for the embedded hbase (smile)?  Lets just go w/ 64-bit for now.&lt;/p&gt;

&lt;p&gt;Let me know if you want me to run some tests on profiler to check your sizings.&lt;/p&gt;

&lt;p&gt;For next version of LruHashMap, fix spacing &amp;#8211; its two spaces by default and no tabs  &amp;#8211; and add apache license.&lt;/p&gt;

&lt;p&gt;Why do you have transient datamembers?  Are your Maps meant to be (java) serializable?&lt;/p&gt;

&lt;p&gt;Make most of the data members private rather than default access?&lt;/p&gt;

&lt;p&gt;So, maxMemUsage is passed in?  It&apos;ll be some percentage of the heap?&lt;/p&gt;

&lt;p&gt;We&apos;re not soft referencing it because of your testing showing soft references are not LRU?&lt;/p&gt;

&lt;p&gt;It&apos;ll be really interesting watching this thing at core of a concurrent app.  There are no synchronizes anywhere.  Whats the plan for that?&lt;/p&gt;

&lt;p&gt;Good stuff&lt;/p&gt;
</comment>
                            <comment id="12671535" author="streamy" created="Sat, 7 Feb 2009 22:57:48 +0000"  >&lt;p&gt;I didn&apos;t have time to finish work on this yesterday.  I just posted up what I had finished before I left, it&apos;s definitely not done yet.&lt;/p&gt;

&lt;p&gt;Will properly format it, etc well before it&apos;s ready to be included.&lt;/p&gt;

&lt;p&gt;Re: 32-bit vs 64-bit there are some tests that can be used.  My current plan is to go forward with assuming 64bit and in the future we can easily add something to detect like you said.  It would then just change the size of REFERENCE which would bubble up into anything implementing HeapSize which should be using that static to compute its size.&lt;/p&gt;

&lt;p&gt;There is some stuff left over from other code in there (transient datamembers and such) that I will be taking out.  I see no need for serialization.  Same goes for making things private, have been working on the lru and heapsize elements and not so much the rest of the code.  Will clean it up next week.&lt;/p&gt;

&lt;p&gt;Currently, maxMemUsage is passed in.  This LRU is intended for cell cache which I think should be a per-regionserver setting.  This can be adapted to work for the block cache as well in any number of ways.  There are a few reasons I don&apos;t think softrefs are the way to go for block caching, definitely not the way to go for cell caching.  Next week I&apos;ll put together the proposal for why I think we should use our own LRU mechanism rather than relying on softrefs across the board.  The primary issues are how this will interact with existing memcache/heap monitoring, unpredictability of softref eviction, and the ability to implement in-memory tables very simply if we have our own lru mechanism (implemented in the way described in the bigtable paper).&lt;/p&gt;

&lt;p&gt;Same goes for synchronization.  This is an early version not ready for prime time.  Not sure what my plan is yet will post thoughts here.  Will be working on this early in the week.&lt;/p&gt;

&lt;p&gt;Thanks for the review stack.&lt;/p&gt;</comment>
                            <comment id="12671949" author="streamy" created="Mon, 9 Feb 2009 18:12:54 +0000"  >&lt;p&gt;There&apos;s a discussion that needs to happen around how we&apos;ll implement block caching.  I&apos;m going to create a new issue for that, this one will be about the LruHashMap used for the cell cache.&lt;/p&gt;</comment>
                            <comment id="12672048" author="streamy" created="Mon, 9 Feb 2009 23:09:49 +0000"  >&lt;p&gt;Apache-friendly.  Thread-safe.  Heavily commented as this will serve as the base to other memory-aware structures.&lt;/p&gt;

&lt;p&gt;Still partially untested but would like a general code review before moving forward.&lt;/p&gt;</comment>
                            <comment id="12672400" author="streamy" created="Tue, 10 Feb 2009 21:03:29 +0000"  >&lt;p&gt;A few small changes.  Now includes two functions for debugging/unit test purposes.  One returns a sorted List of entries in the LRU in order of their access time (oldest/first to evict is first).  The other returns a Set of all elements found in the hash table.&lt;/p&gt;

&lt;p&gt;The two of these data structures can be used to ensure the LRU is being updated properly and that the linked list does not become out of sync with the hash table.&lt;/p&gt;</comment>
                            <comment id="12674374" author="streamy" created="Tue, 17 Feb 2009 22:13:53 +0000"  >&lt;p&gt;Working version.  Fixes a few small bugs.&lt;/p&gt;

&lt;p&gt;This patch does not contain the unit test.  Will post another patch when that&apos;s cleaned up.&lt;/p&gt;</comment>
                            <comment id="12674396" author="streamy" created="Tue, 17 Feb 2009 23:45:03 +0000"  >&lt;p&gt;Contains unit test and changes to HeapSize interface.&lt;/p&gt;</comment>
                            <comment id="12674397" author="streamy" created="Tue, 17 Feb 2009 23:45:24 +0000"  >&lt;p&gt;Tested and ready for review/commit.&lt;/p&gt;</comment>
                            <comment id="12688063" author="apurtell" created="Sat, 21 Mar 2009 17:24:18 +0000"  >&lt;p&gt;I&apos;ve reviewed this and except for a minor collision with the patch now it looks good. I&apos;m just waiting for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1274&quot; title=&quot;TestMergeTable is broken in Hudson&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1274&quot;&gt;&lt;del&gt;HBASE-1274&lt;/del&gt;&lt;/a&gt; to be resolved first so I can claim that all local tests pass before committing this.&lt;/p&gt;</comment>
                            <comment id="12689325" author="apurtell" created="Thu, 26 Mar 2009 01:47:45 +0000"  >&lt;p&gt;Committed to trunk. Passes all local tests, including the new test case addition for this feature. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12414263">HBASE-1188</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12386393">HBASE-80</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12399707" name="HeapSize.java" size="2237" author="streamy" created="Sat, 7 Feb 2009 02:30:20 +0000"/>
                            <attachment id="12399859" name="LruHashMap.java" size="31089" author="streamy" created="Mon, 9 Feb 2009 23:09:49 +0000"/>
                            <attachment id="12399944" name="hbase-1186-v2.patch" size="35969" author="streamy" created="Tue, 10 Feb 2009 21:03:29 +0000"/>
                            <attachment id="12400358" name="hbase-1186-v3.patch" size="33429" author="streamy" created="Tue, 17 Feb 2009 22:13:53 +0000"/>
                            <attachment id="12400363" name="hbase-1186-v4.patch" size="45805" author="streamy" created="Tue, 17 Feb 2009 23:45:03 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 6 Feb 2009 19:42:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32028</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 39 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hbu7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99180</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>