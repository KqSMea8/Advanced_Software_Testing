<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:10:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10052/HBASE-10052.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10052] use HDFS advisory caching to avoid caching HFiles that are not going to be read again (because they are being compacted)</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10052</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;HBase can benefit from doing dropbehind during compaction since compacted files are not read again.  HDFS advisory caching, introduced in &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-4817&quot; title=&quot;make HDFS advisory caching configurable on a per-file basis&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-4817&quot;&gt;&lt;del&gt;HDFS-4817&lt;/del&gt;&lt;/a&gt;, can help here.  The right API here is &lt;tt&gt;DataInputStream#setDropBehind&lt;/tt&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12681658">HBASE-10052</key>
            <summary>use HDFS advisory caching to avoid caching HFiles that are not going to be read again (because they are being compacted)</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="cmccabe">Colin P. McCabe</reporter>
                        <labels>
                    </labels>
                <created>Wed, 27 Nov 2013 20:59:52 +0000</created>
                <updated>Thu, 16 Jul 2015 08:58:52 +0000</updated>
                                                            <fixVersion>2.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>15</watches>
                                                                <comments>
                            <comment id="13834194" author="apurtell" created="Wed, 27 Nov 2013 21:43:48 +0000"  >&lt;p&gt;Looks like we could do this easily with a bit of reflection.&lt;/p&gt;

&lt;p&gt;Edit: Hit enter or something, oops. Not sure what you mean about compacted files not being read again, though. We will open readers on the new file (eventually). In fact we might want to preload the blocks (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9857&quot; title=&quot;Blockcache prefetch option&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9857&quot;&gt;&lt;del&gt;HBASE-9857&lt;/del&gt;&lt;/a&gt; - just an example). Maybe you meant drop the data of the old discarded HFiles from blockcache, but the API you point out is for DataOutputStream?&lt;/p&gt;</comment>
                            <comment id="13834203" author="cmccabe" created="Wed, 27 Nov 2013 21:59:11 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=andrew.purtell%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;andrew.purtell@gmail.com&quot;&gt;Andrew Purtell&lt;/a&gt; : sorry.  I did mean DFSInputStream, since the files not being used again would be the compactees.  And yeah, reflection would be a good way to do this and support older Hadoops  (see &lt;tt&gt;CanSetDropBehind&lt;/tt&gt; interface)&lt;/p&gt;</comment>
                            <comment id="13834210" author="apurtell" created="Wed, 27 Nov 2013 22:04:09 +0000"  >&lt;p&gt;Cool &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cmccabe&quot; class=&quot;user-hover&quot; rel=&quot;cmccabe&quot;&gt;Colin P. McCabe&lt;/a&gt;, would you like to provide a patch for this, or I can take it ... ?&lt;/p&gt;</comment>
                            <comment id="13834477" author="cmccabe" created="Thu, 28 Nov 2013 02:45:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=andrew.purtell%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;andrew.purtell@gmail.com&quot;&gt;Andrew Purtell&lt;/a&gt; you can take it if you want&lt;/p&gt;</comment>
                            <comment id="13838082" author="lhofhansl" created="Tue, 3 Dec 2013 19:42:57 +0000"  >&lt;p&gt;That is a good idea. Just checked the API and since we can set this on an existing InputStream (we open all files ahead of time) we can just set it on the old files before we do a compaction.&lt;/p&gt;</comment>
                            <comment id="13838409" author="enis" created="Wed, 4 Dec 2013 00:50:43 +0000"  >&lt;p&gt;Sounds good. Any API we can use to direct hdfs to NOT cache our hfiles in the first place. We are already caching the blocks, and it is better to have hdfs to not double cache, but instead spend the memory elsewhere. Since only the HBase layer knows about block boundaries, block access patterns and block types (index, data), HBase cache should always be better in theory. &lt;/p&gt;</comment>
                            <comment id="13838543" author="cmccabe" created="Wed, 4 Dec 2013 02:58:42 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; It would be interesting to experiment with using drop-behind on HBase&apos;s block files.  However, in my experiments at least, this wasn&apos;t a performance win since HBase still relies on the OS page cache in some cases.  It&apos;s been a while since I did them, though.&lt;/p&gt;</comment>
                            <comment id="13838587" author="apurtell" created="Wed, 4 Dec 2013 04:48:02 +0000"  >&lt;p&gt;Similar to what Colin said, I&apos;ve noticed that we still get a benefit if the block remains in OS blockcache even if we&apos;ve evicted it from the HBase LRU. Happens on larger-ish memory systems. &lt;/p&gt;</comment>
                            <comment id="13838588" author="apurtell" created="Wed, 4 Dec 2013 04:50:01 +0000"  >&lt;p&gt;I&apos;ll take this on as one of the things to do before the 0.98.0 RC. If someone else would like to put up a patch, feel free to reassign though.&lt;/p&gt;</comment>
                            <comment id="13839769" author="tlipcon" created="Thu, 5 Dec 2013 03:44:50 +0000"  >&lt;p&gt;One thing to be wary of: &lt;em&gt;during&lt;/em&gt; the compaction, readers are still accessing the old files, so if you&apos;re compacting large files, this could really hurt read latency during compactions (assuming that people are relying on linux LRU in addition to hbase-internal LRU for performance).&lt;/p&gt;

&lt;p&gt;In most cases, as soon as the compaction is complete, we end up removing the input files anyway (thus removing from cache), right? Or is that no longer the case now that we have snapshots?&lt;/p&gt;</comment>
                            <comment id="13839812" author="stack" created="Thu, 5 Dec 2013 04:57:32 +0000"  >&lt;p&gt;That is how it works still &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tlipcon&quot; class=&quot;user-hover&quot; rel=&quot;tlipcon&quot;&gt;Todd Lipcon&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13839864" author="apurtell" created="Thu, 5 Dec 2013 06:30:32 +0000"  >&lt;p&gt;Hmm, ok, moving out until we have something with a quantified benefit.&lt;/p&gt;</comment>
                            <comment id="13840355" author="cmccabe" created="Thu, 5 Dec 2013 18:10:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;One thing to be wary of: during the compaction, readers are still accessing the old files, so if you&apos;re compacting large files, this could really hurt read latency during compactions (assuming that people are relying on linux LRU in addition to hbase-internal LRU for performance).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s a fair point.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In most cases, as soon as the compaction is complete, we end up removing the input files anyway (thus removing from cache), right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Unlinking a file doesn&apos;t remove that file from the buffer cache.  If the unlinked file is no longer referenced (certainly the case here), it will be removed over time, as other things evict it.  In the meantime, having those pages buffered means that something else isn&apos;t.&lt;/p&gt;

&lt;p&gt;When doing the fadvise work, I remember us coming up with a crude hack that did fadvise from HBase during compactions and seeing some performance gain.  But it seems like might be workload-dependent.&lt;/p&gt;

&lt;p&gt;It&apos;s a shame that there isn&apos;t a way to tell Linux to do a read without caching.  That&apos;s really what we want here.  Instead, we just have a way of nuking the cache for a range of the file if it exists, which is not at all the same thing.  I took a look at the Linux source tree again today, and &lt;tt&gt;FADV_NOREUSE&lt;/tt&gt; was still a no-op &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Hmm, ok, moving out until we have something with a quantified benefit.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, it would be interesting to see some test numbers.  I also wonder if we could somehow quantify how often the HBase LRU hits.&lt;/p&gt;</comment>
                            <comment id="13993417" author="xieliang007" created="Fri, 9 May 2014 05:48:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;One thing to be wary of: during the compaction, readers are still accessing the old files, so if you&apos;re compacting large files, this could really hurt read latency during compactions (assuming that people are relying on linux LRU in addition to hbase-internal LRU for performance).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Since by default we has 3 replicas in HDFS layer, the current InputStream drops caching against the only 1 picked up replica, seems not ideal considering the possible redundant caching on multi nodes if a failover or sth happened. How about providing an async function in InputStream layer, say dropFileCaches, getting all LocatedBlocks, and expose a similar interface in dn layer as well, then clear all caching in all dns for those blocks.&lt;br/&gt;
we can request this async dropFileCaches just before closing the original store files be compacted.  Just a raw idea, crazy? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14168521" author="enis" created="Sun, 12 Oct 2014 04:26:16 +0000"  >&lt;p&gt;Unscheduling from branch-1 for now. Feel free to bring back if there is a patch.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12845520">HBASE-14098</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12647143">HDFS-4817</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 27 Nov 2013 21:43:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>360922</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 9 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1q7tb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>361221</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>