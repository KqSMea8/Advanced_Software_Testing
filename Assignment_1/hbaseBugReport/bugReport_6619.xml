<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:38:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6619/HBASE-6619.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6619] Do no unregister and re-register interest ops in RPC</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6619</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;While investigating perf of HBase, Michal noticed that we could cut about 5-40% (depending on number of threads) from the total get time in the RPC on the server side if we eliminated re-registering for interest ops.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12604110">HBASE-6619</key>
            <summary>Do no unregister and re-register interest ops in RPC</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="10">Implemented</resolution>
                                        <assignee username="michalgr">Michal Gregorczyk</assignee>
                                    <reporter username="karthik.ranga">Karthik Ranganathan</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Aug 2012 19:50:18 +0000</created>
                <updated>Thu, 4 Oct 2012 22:49:03 +0000</updated>
                            <resolved>Thu, 4 Oct 2012 19:12:30 +0000</resolved>
                                                                    <component>IPC/RPC</component>
                    <component>Performance</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                <comments>
                            <comment id="13438137" author="stack" created="Mon, 20 Aug 2012 19:56:10 +0000"  >&lt;p&gt;Sounds nice.  Whats an interest op?&lt;/p&gt;</comment>
                            <comment id="13438187" author="michalgr" created="Mon, 20 Aug 2012 20:46:51 +0000"  >&lt;p&gt;It is event for which we are waiting on file descriptor. We do reads in asynchronous way. We have one thread (Listener) waiting on set of file descriptors (connections). Every time there is something to read from connection we first deregister interest in read operation on that descriptor and then pass it to another thread to do read. When read operation is done, the thread parses new data and after queueing new Call object it registers read interest on that descriptor again. It involves calling SelectionKey.interestOps(int) (which according to documentation can block, but does not have to - implementation dependent), and waking up Listener thread. After that we can read from the connection again.&lt;/p&gt;

&lt;p&gt;To improve performance we can do 2 things: &lt;br/&gt;
1. do something not to register and deregister interest in read&lt;br/&gt;
2. parse new data in handler thread, instead of thread that performs read operation.&lt;/p&gt;</comment>
                            <comment id="13438869" author="stack" created="Tue, 21 Aug 2012 17:11:33 +0000"  >&lt;p&gt;Thanks Michal for explanation.  Would be sweet improvement.&lt;/p&gt;</comment>
                            <comment id="13461142" author="phabricator@reviews.facebook.net" created="Sat, 22 Sep 2012 13:00:07 +0000"  >&lt;p&gt;mbautin has closed the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6619&quot; title=&quot;Do no unregister and re-register interest ops in RPC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6619&quot;&gt;&lt;del&gt;HBASE-6619&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;89-fb&amp;#93;&lt;/span&gt; Do no unregister and re-register interest ops in RPC&quot;.&lt;/p&gt;

&lt;p&gt;CHANGED PRIOR TO COMMIT&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D5283?vs=18369&amp;amp;id=18417#differential-review-toc&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D5283?vs=18369&amp;amp;id=18417#differential-review-toc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D5283&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D5283&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;COMMIT&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/rHBASEEIGHTNINEFBBRANCH1388798&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/rHBASEEIGHTNINEFBBRANCH1388798&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To: Karthik, michalgr&lt;br/&gt;
Cc: JIRA, Kannan, aaiyer, avf, mbautin, Liyin, gqchen&lt;/p&gt;</comment>
                            <comment id="13465970" author="stack" created="Fri, 28 Sep 2012 22:35:11 +0000"  >&lt;p&gt;Patch pulled out of 0.89fb.  Talking w/ Nicolas this morning, made a big perf difference on their clusters&lt;/p&gt;</comment>
                            <comment id="13465971" author="stack" created="Fri, 28 Sep 2012 22:35:46 +0000"  >&lt;p&gt;I&apos;ll forward port this...&lt;/p&gt;</comment>
                            <comment id="13466124" author="apurtell" created="Sat, 29 Sep 2012 06:15:11 +0000"  >&lt;p&gt;Should perf improvements like this go into 0.94 too? I&apos;d suggest yes.&lt;br/&gt;
Edit: I&apos;m volunteering if you and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; agree.&lt;/p&gt;</comment>
                            <comment id="13466300" author="lhofhansl" created="Sat, 29 Sep 2012 20:27:51 +0000"  >&lt;p&gt;Simple, low-risk perf improvements should go into 0.94.&lt;/p&gt;

&lt;p&gt;I have to digest the patch, but it looks good upon coarse inspection.&lt;/p&gt;</comment>
                            <comment id="13466306" author="lhofhansl" created="Sat, 29 Sep 2012 20:43:48 +0000"  >&lt;p&gt;Patch looks good. I like delaying parsing to the actual reading. We&apos;re getting way too many context switches otherwise (unless I misunderstand the existing code).&lt;br/&gt;
The only question I have: Why not use an ExecutorService again, instead of the manual round robin done by the patch?&lt;/p&gt;</comment>
                            <comment id="13466567" author="michalgr" created="Sun, 30 Sep 2012 20:53:04 +0000"  >&lt;p&gt;I am not sure if I got the question right.&lt;br/&gt;
Previously thread pool was used to read from connections. New task was submitted every time Listener thread noticed that there is some data to read.&lt;br/&gt;
With this patch, round robin is used to distribute new (just accepted) connections among Readers (threads introduced in this patch). Each of them uses its own selector and reads all requests from connections that were registered with its selector (without delegating reads to pool of threads). This change removes need for registering and deregistering interest in read events (previously Listener had to unset read interest before submitting read task, and task had to set it once again when finished reading).&lt;br/&gt;
So purposes of ExecutorService and round robin are different.&lt;br/&gt;
Does it answer your question ?&lt;/p&gt;</comment>
                            <comment id="13466569" author="lhofhansl" created="Sun, 30 Sep 2012 21:00:49 +0000"  >&lt;p&gt;I see. Thanks for explaining Michal.&lt;/p&gt;

&lt;p&gt;Let&apos;s make a trunk patch so that we can get a HadoopQA run.&lt;/p&gt;</comment>
                            <comment id="13469600" author="lhofhansl" created="Thu, 4 Oct 2012 19:00:10 +0000"  >&lt;p&gt;Actually this change (or a version of it) is in 0.94 and 0.96 already.&lt;/p&gt;</comment>
                            <comment id="13469673" author="lhofhansl" created="Thu, 4 Oct 2012 20:47:57 +0000"  >&lt;p&gt;Was that an issue for the .89fb branch? If so, I&apos;m sorry I closed it (and obviously feel free to reopen and retarget).&lt;/p&gt;</comment>
                            <comment id="13469802" author="karthik.ranga" created="Thu, 4 Oct 2012 22:49:03 +0000"  >&lt;p&gt;No this is fine, its already committed into 89-fb.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12547063" name="0001-jira-HBASE-6619-89-fb-Do-no-unregister-and-re-regist.patch" size="24247" author="stack" created="Fri, 28 Sep 2012 22:35:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 20 Aug 2012 19:56:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>240716</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 11 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0152f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4590</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>