<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:49:07 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-953/HBASE-953.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-953] Enable BLOCKCACHE by default [WAS -&gt; Reevaluate HBASE-288 block caching work....?]</title>
                <link>https://issues.apache.org/jira/browse/HBASE-953</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Go back and take another look at the Tom White work.  We&apos;ve gotten boost in writing and scanning because of J-D work.  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-288&quot; title=&quot;Add in-memory caching of data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-288&quot;&gt;&lt;del&gt;HBASE-288&lt;/del&gt;&lt;/a&gt; looks like it boosts sequential reads and perhaps random read a little.  Take another look.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12407144">HBASE-953</key>
            <summary>Enable BLOCKCACHE by default [WAS -&gt; Reevaluate HBASE-288 block caching work....?]</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Fri, 24 Oct 2008 04:27:08 +0000</created>
                <updated>Sun, 13 Sep 2009 22:26:29 +0000</updated>
                            <resolved>Mon, 27 Oct 2008 18:37:32 +0000</resolved>
                                                    <fixVersion>0.19.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12642568" author="stack" created="Fri, 24 Oct 2008 23:22:45 +0000"  >&lt;p&gt;Enabling cache, in PE tests I see 4X improvement in sequential read test.  My guess is that scan speed will improve again too and that compactions should go the faster also.  Downside is that I&apos;m OOME&apos;ing running random read test.  Digging in some, we&apos;re creating lots of instances of the BlockFSDataStream.  Each instance has its own ReferenceMap.  Each ReferenceMap has 1-3 entries when blocksize is 64MB.  References are cleared only when we put or get.  I&apos;m thinking this is not enough; that caches are not being cleared fast enough.  Trying to dig in more.&lt;/p&gt;</comment>
                            <comment id="12642569" author="stack" created="Fri, 24 Oct 2008 23:26:16 +0000"  >&lt;p&gt;PE random read also ran a good big slower.&lt;/p&gt;</comment>
                            <comment id="12642587" author="stack" created="Sat, 25 Oct 2008 02:19:23 +0000"  >&lt;p&gt;Using SoftSorteMap instead of commons ReferenceMap seems to do better.  Still not good enough though; I get &quot;OOME: GC Time and OutOfMemoryError&quot; which doesn&apos;t exactly kill it.. it hobbles along.  I see random reading we&apos;re getting 90% cache hits if run after a sequential read which means cache has been warmed but the random reads should be going faster than they are.  They&apos;re slowed by all the GCing I&apos;m seeing (I have gc logging enabled).  Trying w/ 1.6.0_10 JVM.  Was using 1.7.  If random reads were just as fast as without block reads, it would be worth enabling by default because of the faster sequential reads, scans and compactions.&lt;/p&gt;</comment>
                            <comment id="12642590" author="rafan" created="Sat, 25 Oct 2008 03:51:01 +0000"  >&lt;p&gt;I have been using 1.6.0_04 with concurrent sweep GC. Under modest random read workload, w/ block caching, it&apos;s faster.&lt;/p&gt;</comment>
                            <comment id="12642593" author="stack" created="Sat, 25 Oct 2008 04:29:31 +0000"  >&lt;p&gt;Rong-en: Thanks for the tip.  I&apos;ll try some loading tests using it.  It might be better with soft references.&lt;/p&gt;

&lt;p&gt;With 1.6.0_10, with 8 concurrent clients, random reads completed.  Trying again with single client.. but also thinking on it on way home, smaller blocks make more sense.  I cut it down to 16k as suggested by jgray&lt;/p&gt;</comment>
                            <comment id="12642599" author="rafan" created="Sat, 25 Oct 2008 07:01:46 +0000"  >&lt;p&gt;So, you are talking about using smaller block size in block cache or hdfs block size?&lt;/p&gt;</comment>
                            <comment id="12642626" author="stack" created="Sat, 25 Oct 2008 15:47:05 +0000"  >&lt;p&gt;Rong-en: I&apos;m looking to enable BLOCKCACHE in HColumnDescriptor as the default.  Currently its off.  The size I&apos;m playing with is this one: hbase.hstore.blockCache.blockSize&lt;/p&gt;

&lt;p&gt;I ran with 1.6.0_10 JDK and 16k blocksize and all single-client runs ran as well as an overnight 16 concurrent client test.  All passed.  Running some more tests to see if I can make an OOME happen.&lt;/p&gt;</comment>
                            <comment id="12642641" author="stack" created="Sat, 25 Oct 2008 17:13:24 +0000"  >&lt;p&gt;1.6.0_10 works fine. &lt;/p&gt;

&lt;p&gt;java version &quot;1.7.0-ea&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.7.0-ea-b31)&lt;br/&gt;
Java HotSpot(TM) Server VM (build 14.0-b01, mixed mode)&lt;/p&gt;

&lt;p&gt;Will OOME.  Stuck doing full GCs.  Works if I enable the JVM flag which says don&apos;t OOME if too many full GCs.&lt;/p&gt;</comment>
                            <comment id="12642660" author="stack" created="Sat, 25 Oct 2008 21:38:40 +0000"  >&lt;p&gt;Commit comment below&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HBASE-953 Enable BLOCKCACHE by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; [WAS -&amp;gt; Reevaluate HBASE-288 block caching work....?]
Change that makes BLOCKCACHE on by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; but caching blocks of 16k rather than 64k.
Means that upgrading, users must update their hbase-&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;.xml to pick up the smaller
value &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; OOME issues.  This patch may introduce OOME issues anyways.  Need to watch
out &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; it (Was find on 1.6.0_10 but on an early 1.7.0 was easy to OOME).  

This patch removes commons-collections.jar.  Was only added &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; its ReferenceMap which
is replaced in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; patch by a version of what used to be called SoftSortedMap (renamed
as SoftValueSortedMap); the ReferenceMap replacement is SoftValueMap.  Use our own
because I want to be able to watch evictions &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; issues with OOMEs and RM is all &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt;
when it runs the ReferenceQueue clean up (RM also had features we don&apos;t need).

M conf/hbase-&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;.xml
  Update hbase.hstore.blockCache.blockSize; make 16k instaed of 64k.
D  lib/commons-collections-3.2.jar
  Removed. Not used.
A  src/test/org/apache/hadoop/hbase/util/SoftValueSortedMapTest.java
  Rename of SoftSortedMapTest.
D src/test/org/apache/hadoop/hbase/util/SoftSortedMapTest.java
  Removed
M  src/java/org/apache/hadoop/hbase/HColumnDescriptor.java
  Enable blockcaching as &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;.
M  src/java/org/apache/hadoop/hbase/io/BlockFSInputStream.java
  Use SoftValueMap instead of ReferenceMap.
A  src/java/org/apache/hadoop/hbase/util/ReferenceQueueUtil.java
  ReferenceQueue utility class.
A src/java/org/apache/hadoop/hbase/util/SoftValueMap.java
  Like SoftValueSortedMap but not sorted (based on it).
A src/java/org/apache/hadoop/hbase/util/SoftValue.java
  Added.  Was internal class of SoftSortedMap.
A src/java/org/apache/hadoop/hbase/util/SoftValueSortedMap.java
  Rename of SoftSortedMap.
A src/java/org/apache/hadoop/hbase/util/SoftSortedMap.java
  Like SoftValueSortedMap but a plain Map.
M  src/java/org/apache/hadoop/hbase/client/HConnectionManager.java
  SoftSortedMap was renamed SoftValueSortedMap.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12642664" author="stack" created="Sat, 25 Oct 2008 23:00:28 +0000"  >&lt;p&gt;Passes all tests locally.  I&apos;ll keep running loading tests over the weekend but I&apos;d like to commit this.  Any chance of a review?&lt;/p&gt;</comment>
                            <comment id="12642978" author="jdcryans" created="Mon, 27 Oct 2008 17:52:17 +0000"  >&lt;p&gt;Review: there are some long lines in HCM but +1 if corrected.&lt;/p&gt;</comment>
                            <comment id="12642979" author="stack" created="Mon, 27 Oct 2008 17:58:58 +0000"  >&lt;p&gt;Tried with jdk1.7.0b38 (as opposed to the b31 used above) and it held up.  Lots of full GC&apos;s but weathered the PE tests w/o OOME.  J-D gave my patch a review and said fine except for some line-lengths which I&apos;ve fixed.&lt;/p&gt;</comment>
                            <comment id="12643004" author="stack" created="Mon, 27 Oct 2008 18:37:32 +0000"  >&lt;p&gt;Committed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12407320">HBASE-965</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12392828" name="blockcache.patch" size="31212" author="stack" created="Sat, 25 Oct 2008 21:38:40 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 25 Oct 2008 03:51:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31919</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 8 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hagn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98957</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>