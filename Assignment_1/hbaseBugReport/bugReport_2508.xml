<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:02:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2508/HBASE-2508.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2508] Use AtomicInteger for lockIdGenerator in HRegion</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2508</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently lockIdGenerator is an int. In obtainRowLock(), retry is needed in case of lockId collisions.&lt;/p&gt;

&lt;p&gt;We can declare lockIdGenerator as AtomicInteger and use incrementAndGet() to get the next lock Id.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12463504">HBASE-2508</key>
            <summary>Use AtomicInteger for lockIdGenerator in HRegion</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="6">Invalid</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ted_yu">Ted Yu</reporter>
                        <labels>
                    </labels>
                <created>Sat, 1 May 2010 20:57:58 +0000</created>
                <updated>Sun, 2 May 2010 22:07:16 +0000</updated>
                            <resolved>Sun, 2 May 2010 22:07:16 +0000</resolved>
                                    <version>0.20.3</version>
                                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12863068" author="ted_yu" created="Sat, 1 May 2010 23:39:36 +0000"  >&lt;p&gt;Using AtomicLong would be a better choice - region server may run arbitrarily long.&lt;/p&gt;</comment>
                            <comment id="12863074" author="ryanobjc" created="Sun, 2 May 2010 01:11:03 +0000"  >&lt;p&gt;even though a regionserver may run arbitrarily long, i dont think we will be wrapping around an int during the length of a long - the maximal length of a row lock is on the order of 60 seconds (the timeout in HRS lease expiry for locks).  Otherwise a lock lasts for the time it takes to sync to a hlog.  If we are taking arbitrarily long to sync in HLog we have other problems on our hands.&lt;/p&gt;

&lt;p&gt;Also there is no reason to use an AtomicInteger, the access to this variable are mediated by a sync lock, that is good enough.&lt;/p&gt;</comment>
                            <comment id="12863187" author="ted_yu" created="Sun, 2 May 2010 19:30:32 +0000"  >&lt;p&gt;lockIdGenerator isn&apos;t declared volatile.&lt;/p&gt;

&lt;p&gt;Also, when lockIds.put(lockId, prev) is called to put back old value in case of collision, there would be momentary inconsistency between lockId and low.&lt;/p&gt;</comment>
                            <comment id="12863203" author="ryanobjc" created="Sun, 2 May 2010 22:06:28 +0000"  >&lt;p&gt;lockIdGenerator does not need to be volatile.  It is always accessed under the pervue of the synchronized(lockedRows) lock.  &lt;/p&gt;

&lt;p&gt;Again, all access to the lockIds datastructure is done under the purvue of the synchronized(lockedRows) monitor lock.  There is no momentary inconsistency because all access to this data structure is done under a lock thus ensuring that the change is atomic as far as other threads are concerned.&lt;/p&gt;</comment>
                            <comment id="12863204" author="ryanobjc" created="Sun, 2 May 2010 22:07:16 +0000"  >&lt;p&gt;as per how the JMM does things and the described locking and lack of evidence to why what we have now is bad, I am closing this. It&apos;s really not an issue. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 2 May 2010 01:11:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32618</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 33 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hhzz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100178</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>