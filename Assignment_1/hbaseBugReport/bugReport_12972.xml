<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:38:18 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12972/HBASE-12972.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12972] Region, a supportable public/evolving subset of HRegion</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12972</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;On &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12566&quot; title=&quot;HRegion should have an InterfaceAudience of LimitedPrivate(PHOENIX)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12566&quot;&gt;&lt;del&gt;HBASE-12566&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; proposed:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Maybe we can have a &lt;tt&gt;Region&lt;/tt&gt; interface that is to &lt;tt&gt;HRegion&lt;/tt&gt; is what &lt;tt&gt;Store&lt;/tt&gt; is to &lt;tt&gt;HStore&lt;/tt&gt;. Store marked with &lt;tt&gt;@InterfaceAudience.Private&lt;/tt&gt; but used in some coprocessor hooks.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;By example, now coprocessors have to reach into HRegion in order to participate in row and region locking protocols, this is one area where the functionality is legitimate for coprocessors but not for users, so an in-between interface make sense.&lt;/p&gt;

&lt;p&gt;In addition we should promote &lt;tt&gt;Store&lt;/tt&gt;&apos;s interface audience to LimitedPrivate(COPROC).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12772493">HBASE-12972</key>
            <summary>Region, a supportable public/evolving subset of HRegion</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="apurtell">Andrew Purtell</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Wed, 4 Feb 2015 21:05:28 +0000</created>
                <updated>Wed, 3 Jun 2015 15:29:06 +0000</updated>
                            <resolved>Tue, 31 Mar 2015 01:40:44 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                <comments>
                            <comment id="14305976" author="ndimiduk" created="Wed, 4 Feb 2015 21:15:47 +0000"  >&lt;p&gt;Yes please!&lt;/p&gt;</comment>
                            <comment id="14306196" author="stack" created="Wed, 4 Feb 2015 23:21:08 +0000"  >&lt;p&gt;Could Region implement the bulk of the Table Interface?&lt;/p&gt;</comment>
                            <comment id="14306650" author="lhofhansl" created="Thu, 5 Feb 2015 05:14:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=giacomotaylor&quot; class=&quot;user-hover&quot; rel=&quot;giacomotaylor&quot;&gt;James Taylor&lt;/a&gt;, let&apos;s figure out what Phoenix needs. That would be a good starting point.&lt;/p&gt;</comment>
                            <comment id="14307510" author="apurtell" created="Thu, 5 Feb 2015 16:33:15 +0000"  >&lt;p&gt;I&apos;ll take this on for .11. API wars, woohoo&lt;/p&gt;</comment>
                            <comment id="14307511" author="apurtell" created="Thu, 5 Feb 2015 16:35:30 +0000"  >&lt;p&gt;I had a look at how Phoenix is using HRegion, see &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1636&quot; title=&quot;Substitute HRegionInfo for HRegion where possible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1636&quot;&gt;&lt;del&gt;PHOENIX-1636&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1637&quot; title=&quot;Use supported region locking protocols when available&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1637&quot;&gt;&lt;del&gt;PHOENIX-1637&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1638&quot; title=&quot;Avoid batched mutations via direct use of HRegion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1638&quot;&gt;PHOENIX-1638&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I like Stack&apos;s suggestion above, and add access to row locks and region read locks (&lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1637&quot; title=&quot;Use supported region locking protocols when available&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1637&quot;&gt;&lt;del&gt;PHOENIX-1637&lt;/del&gt;&lt;/a&gt;). What else?&lt;/p&gt;</comment>
                            <comment id="14308211" author="apurtell" created="Thu, 5 Feb 2015 23:09:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, want to fold what to do about &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12975&quot; title=&quot;Supportable SplitTransaction and RegionMergeTransaction interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12975&quot;&gt;&lt;del&gt;HBASE-12975&lt;/del&gt;&lt;/a&gt; in here, after it&apos;s hashed out over there?&lt;/p&gt;</comment>
                            <comment id="14308289" author="lhofhansl" created="Thu, 5 Feb 2015 23:55:16 +0000"  >&lt;p&gt;Either way &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
They are related in principle but probably not in code.&lt;/p&gt;</comment>
                            <comment id="14308461" author="apurtell" created="Fri, 6 Feb 2015 02:09:32 +0000"  >&lt;p&gt;Well I was thinking code, so if you don&apos;t want to plug a factory or something like that in here then that&apos;s fine. &lt;/p&gt;</comment>
                            <comment id="14308536" author="lhofhansl" created="Fri, 6 Feb 2015 03:19:12 +0000"  >&lt;p&gt;A factory for Region interfaces and/or SplitTransactions? If we can combine this all the better.&lt;/p&gt;</comment>
                            <comment id="14329961" author="apurtell" created="Sat, 21 Feb 2015 03:12:30 +0000"  >&lt;p&gt;I&apos;ve started work on this. The first patch will be for 0.98 since there is no version of Phoenix (yet) ported to 1.0 or master.&lt;/p&gt;

&lt;p&gt;I did look at master for a bit. Unfortunately there are some aspects of the Table interface that don&apos;t play nicely with HRegion code: close() and getScanner() are different. The former isn&apos;t a big deal but when RegionScanner needed to implement ResultScanner I stopped there. Not that we can&apos;t do it, but what I&apos;ve decided to do instead is lift the minimum up out of HRegion into Region to support coprocessors in the HBase tree and Phoenix together.&lt;/p&gt;

&lt;p&gt;I&apos;m treating introduction of the Region interface as a singularity of sorts for coprocessors: neither source nor binary compatibility will be maintained. I don&apos;t see the harm in a singularity, HRegion isn&apos;t supported, that&apos;s the point of this work... to replace it with something that is. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; However, after there is a first workable patch if it&apos;s not too onerous to make addtional changes that keep source or binary compatibility then we can do that. &lt;/p&gt;</comment>
                            <comment id="14334558" author="apurtell" created="Tue, 24 Feb 2015 07:57:22 +0000"  >&lt;p&gt;Dropping a WIP patch against 0.98.&lt;/p&gt;

&lt;p&gt;Reviewboard: &lt;a href=&quot;https://reviews.apache.org/r/31346/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/31346/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This change set introduces the Region interface and lifts methods from HRegion into it that should be public and available to sophisticated internal users like coprocessors, based on examination of bundled coprocessor, RegionServer level RPC handling, and unit test code, and Apache Phoenix internals. All HRegion methods related to flushing, compaction, and splitting are specifically excluded so far. Region is used instead of HRegion in coprocessor APIs such as RegionObserver and RegionServerObserver and related APIs like RowMutationProcessor and RegionServerServices.&lt;/p&gt;

&lt;p&gt;What&apos;s next is figuring out what to do about flush and split requests, and SplitTransaction.&lt;/p&gt;

&lt;p&gt;This is a patch against 0.98 but the changes to branch-1 will be similar, and forward porting to master should only have a few modest differences.&lt;/p&gt;</comment>
                            <comment id="14335394" author="apurtell" created="Tue, 24 Feb 2015 20:27:44 +0000"  >&lt;p&gt;I posted a companion WIP patch for Phoenix 4.x to &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1681&quot; title=&quot;Use the new Region interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1681&quot;&gt;&lt;del&gt;PHOENIX-1681&lt;/del&gt;&lt;/a&gt; for those interested.&lt;/p&gt;</comment>
                            <comment id="14335821" author="apurtell" created="Wed, 25 Feb 2015 01:49:23 +0000"  >&lt;p&gt;Updated WIP patch. &lt;/p&gt;

&lt;p&gt;Made SplitTransaction and RegionMergeTransaction into interfaces. I have this as a separate commit in a work branch so can roll back, split out, or change independent of the previous work.&lt;/p&gt;</comment>
                            <comment id="14335966" author="stack" created="Wed, 25 Feb 2015 04:13:39 +0000"  >&lt;p&gt;Skimmed. Looks great. For 2.0? If so, commit and do cleanup in follow ups?&lt;/p&gt;

&lt;p&gt;On Region, you don&apos;t need public qualifiers in interface (lars francke cleaned up our interfaces removing them everywhere).  Worth moving metrics to a distinct Interface?  Could this die now: getClosestRowBefore ?&lt;/p&gt;

&lt;p&gt;RegionMergeFactory related change?&lt;/p&gt;

&lt;p&gt;Otherwise, its great.&lt;/p&gt;</comment>
                            <comment id="14335982" author="apurtell" created="Wed, 25 Feb 2015 04:32:13 +0000"  >&lt;p&gt;No, the intent is for 0.98+. None of the touched interfaces are supported yet, all are annotated private. I&apos;d like to put something in place that is LimitedPrivate for coprocessors and Phoenix specifically. We could do 1.x and higher but no harm earlier given the interface scopes now as mentioned. &lt;/p&gt;</comment>
                            <comment id="14335983" author="apurtell" created="Wed, 25 Feb 2015 04:33:16 +0000"  >&lt;p&gt;I will remove the &apos;public&apos; keywords from the interfaces. &lt;/p&gt;</comment>
                            <comment id="14335984" author="stack" created="Wed, 25 Feb 2015 04:34:09 +0000"  >&lt;p&gt;Ok. Then, lets do some review on it... stick up on RB?&lt;/p&gt;</comment>
                            <comment id="14335988" author="apurtell" created="Wed, 25 Feb 2015 04:36:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/31346/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/31346/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14335989" author="apurtell" created="Wed, 25 Feb 2015 04:36:33 +0000"  >&lt;p&gt;Have at it! &lt;/p&gt;</comment>
                            <comment id="14336909" author="apurtell" created="Wed, 25 Feb 2015 18:22:33 +0000"  >&lt;p&gt;Clean up new interfaces per &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&apos;s suggestion&lt;/p&gt;</comment>
                            <comment id="14338592" author="busbey" created="Thu, 26 Feb 2015 15:51:02 +0000"  >&lt;p&gt;Looks like the current patch makes changes that won&apos;t allow it in 1.0.z (non-binary compat changes to existing LimitedPrivate.Evolving, adding new features to LimitedPrivate.Evolving).&lt;/p&gt;

&lt;p&gt;Can we aim for 0.98.y, 1.1.z, 2.y.z, or would folks prefer feedback to make it compat?&lt;/p&gt;
</comment>
                            <comment id="14338752" author="apurtell" created="Thu, 26 Feb 2015 17:34:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;Looks like the current patch makes changes that won&apos;t allow it in 1.0.z (non-binary compat changes to existing LimitedPrivate.Evolving, adding new features to LimitedPrivate.Evolving).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Please point these changes out where you find them. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can we aim for 0.98.y, 1.1.z, 2.y.z, or would folks prefer feedback to make it compat?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well we should have a supportable &apos;Region&apos; interface for Phoenix 1.0, which implies in HBase 1.0.x at least. Otherwise they are going to need to continue to work directly with HRegion and SplitTransaction, and other things I would really like to -1 over there but can&apos;t if there is no realistic alternative.&lt;/p&gt;

&lt;p&gt;I did say this above:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&apos;m treating introduction of the Region interface as a singularity of sorts for coprocessors: neither source nor binary compatibility will be maintained. I don&apos;t see the harm in a singularity, HRegion isn&apos;t supported, that&apos;s the point of this work... to replace it with something that is. However, after there is a first workable patch if it&apos;s not too onerous to make addtional changes that keep source or binary compatibility then we can do that. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Let&apos;s discuss.&lt;/p&gt;</comment>
                            <comment id="14338776" author="busbey" created="Thu, 26 Feb 2015 17:46:44 +0000"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&apos;m treating introduction of the Region interface as a singularity of sorts for coprocessors: neither source nor binary compatibility will be maintained. I don&apos;t see the harm in a singularity, HRegion isn&apos;t supported, that&apos;s the point of this work... to replace it with something that is. However, after there is a first workable patch if it&apos;s not too onerous to make addtional changes that keep source or binary compatibility then we can do that.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Let&apos;s discuss.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We just started having a compatibility statement, so I&apos;d really like to avoid breaking it right away. What&apos;s the timeline for Phoenix 1.0? Do we have time to get a HBase 1.1.0 out?&lt;/p&gt;

&lt;p&gt;I haven&apos;t seen a discussion of how we interpret the &quot;add new feature&quot; part of semver, so my apologies if I&apos;ve missed it. My own interpretation is that the addition of an API like Region qualifies, since a user that built on it wouldn&apos;t be able to go back to the 1.0.0 release without things breaking.&lt;/p&gt;

&lt;p&gt;What if we marked Region LimitedPrivate / Unstable in 1.0.z? We say that those things may break in patch releases, so someone following our compatibility guidelines wouldn&apos;t have an expectation that they can rely on it and still go back to 1.0.0. We could mark it Evolving (or Stable or whatever you please) in 1.1.0+.&lt;/p&gt;

&lt;p&gt;With that change, we could do similar overloading and runtime checking to that done in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10378&quot; title=&quot;Divide HLog interface into User and Implementor specific interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10378&quot;&gt;&lt;del&gt;HBASE-10378&lt;/del&gt;&lt;/a&gt; to make sure we keep our compat promises.&lt;/p&gt;</comment>
                            <comment id="14338793" author="apurtell" created="Thu, 26 Feb 2015 17:53:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;I haven&apos;t seen a discussion of how we interpret the &quot;add new feature&quot; part of semver, so my apologies if I&apos;ve missed it. My own interpretation is that the addition of an API like Region qualifies, since a user that built on it wouldn&apos;t be able to go back to the 1.0.0 release without things breaking.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That sucks but is valid. &lt;/p&gt;

&lt;p&gt;However, HRegion is Private. This is enabling something that technically shouldn&apos;t have been done in the first place. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What if we marked Region LimitedPrivate / Unstable in 1.0.z? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then why would someone use it? Region is supposed to be the supportable version of HRegion. Unstable provides only effectively the same guarantees as inappropriate use of Private interfaces.&lt;/p&gt;

&lt;p&gt;We can strongly suggest Phoenix drop its local mutable indexing feature as a mistake until HBase can support it, in 1.1 or 2.0 or whatever, but I don&apos;t think they will go for that. So, it&apos;s likely that use of Private interfaces will continue without having something like Region in place on the occasion of the port of Phoenix to HBase 1.0. If that&apos;s the case then this work is moot now, we can table it until we are nearing a 1.1 or 2.0 release.&lt;/p&gt;</comment>
                            <comment id="14338812" author="apurtell" created="Thu, 26 Feb 2015 18:03:45 +0000"  >&lt;p&gt;Also, we haven&apos;t really gotten to the hard part yet, where we show folks like &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rajeshbabu&quot; class=&quot;user-hover&quot; rel=&quot;rajeshbabu&quot;&gt;Rajeshbabu Chintaguntla&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jesse_yates&quot; class=&quot;user-hover&quot; rel=&quot;jesse_yates&quot;&gt;Jesse Yates&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jamestaylor&quot; class=&quot;user-hover&quot; rel=&quot;jamestaylor&quot;&gt;James Taylor&lt;/a&gt;, and others on Phoenix the new opaque SplitTransaction and RegionMergeTransaction interfaces and ask them if local mutable indexes can be reimplemented without diving into the details. You can see the trouble spots in Phoenix by applying the the latest patch on &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1681&quot; title=&quot;Use the new Region interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1681&quot;&gt;&lt;del&gt;PHOENIX-1681&lt;/del&gt;&lt;/a&gt; to the Phoenix 4.0 branch, then grep for wherever the new private implementation classes SplitTransactionImpl and RegionMergeTransactionImpl are referenced or extended.  &lt;/p&gt;</comment>
                            <comment id="14338922" author="rajeshbabu" created="Thu, 26 Feb 2015 19:03:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; The new interfaces for SplitTransaction, RegionMergeTransaction in the patch may not fully helpful for reimplementing the local indexes split/merge without diving into the details. I think we can handle the SplitTransaction,RegionMergeTransaction changes in separate JIRA(may be &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12975&quot; title=&quot;Supportable SplitTransaction and RegionMergeTransaction interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12975&quot;&gt;&lt;del&gt;HBASE-12975&lt;/del&gt;&lt;/a&gt; here).&lt;/p&gt;

&lt;p&gt;To support local index regions split/merge I think splittransaction should be changed so that it should also split more than one region atomically and the steps should be changed like this.&lt;br/&gt;
1) We should be able pass/add one or more regions to SplitTransaction.&lt;br/&gt;
2) run steps before PONR(or commit) for all the regions.&lt;br/&gt;
3) commit split mutations of all the regions&lt;br/&gt;
4) run steps after PONR(or commit) for all the regions&lt;br/&gt;
5) Any failures before PONR rollback the regions completed steps before PONR.&lt;br/&gt;
This way in case of one region it should work as usual how it works currently.&lt;/p&gt;

&lt;p&gt;Apart from  this before actual split execution starts we should give provision to add more regions to split through coprocessors. So this way we need not touch any internals.&lt;/p&gt;

&lt;p&gt;Similar way we can change for regions merge as well.&lt;/p&gt;
</comment>
                            <comment id="14338987" author="apurtell" created="Thu, 26 Feb 2015 19:37:35 +0000"  >&lt;p&gt;We can definitely split out the SplitTransaction and RegionMergeTransaction changes &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rajeshbabu&quot; class=&quot;user-hover&quot; rel=&quot;rajeshbabu&quot;&gt;Rajeshbabu Chintaguntla&lt;/a&gt; , my only concern there is then the Region interface changes aren&apos;t sufficient to remove HRegion reference/use in Phoenix. &lt;/p&gt;

&lt;p&gt;I don&apos;t think we should allow users of the transactions to reach inside and direct what happens when. On the other hand we could provide APIs for registering callbacks for when different phases happen, and can take that a step further and allow callbacks to trigger an abort by throwing an exception. &lt;/p&gt;

&lt;p&gt;As for specifying what region(s) to run a transaction on, can you use the new factories? Create a factory, call its create() method with the desired regions(s) to get a transaction instance), and then run it? &lt;/p&gt;</comment>
                            <comment id="14339608" author="apurtell" created="Fri, 27 Feb 2015 02:15:53 +0000"  >&lt;p&gt;Yes let&apos;s move the SplitTransaction and RegionMergeTransaction changes proposed here to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12975&quot; title=&quot;Supportable SplitTransaction and RegionMergeTransaction interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12975&quot;&gt;&lt;del&gt;HBASE-12975&lt;/del&gt;&lt;/a&gt;. I have copied the tail of the discussion here over there. Will update the patch here accordingly. &lt;/p&gt;</comment>
                            <comment id="14339612" author="apurtell" created="Fri, 27 Feb 2015 02:19:55 +0000"  >&lt;p&gt;Updated patch&lt;/p&gt;</comment>
                            <comment id="14339615" author="apurtell" created="Fri, 27 Feb 2015 02:21:09 +0000"  >&lt;p&gt;Patches for master and branch-1 coming tomorrow.&lt;/p&gt;</comment>
                            <comment id="14339642" author="ghelmling" created="Fri, 27 Feb 2015 02:45:12 +0000"  >&lt;p&gt;I agree with the goal of introducing a stable Region interface that just exposes what we can support.  But I don&apos;t think we can introduce this by changing the existing method signatures in RegionObserver / RegionServerObserver in 1.0.x.  Won&apos;t that break every existing coprocessor that overrides those methods?  &lt;/p&gt;

&lt;p&gt;Maybe we could at least deprecate the existing methods while adding the new versions.  BaseRegionObserver could implement the new methods by delegating to the old methods.  So existing coprocessors that implement the old methods and derive from BaseRegionObserver would still work.  New coprocessors overriding the new methods would also work.&lt;/p&gt;</comment>
                            <comment id="14339648" author="apurtell" created="Fri, 27 Feb 2015 02:50:02 +0000"  >&lt;p&gt;No it looks like the worst offense (extending / overriding SplitTransaction) can be handled on its own and this will need to be deferred until 1.1 or 2.0, preferably the former. &lt;/p&gt;</comment>
                            <comment id="14339652" author="apurtell" created="Fri, 27 Feb 2015 02:55:08 +0000"  >&lt;p&gt;I updated fix versions and as mentioned before will have patches for the respective branches tomorrow for review. &lt;/p&gt;</comment>
                            <comment id="14339692" author="busbey" created="Fri, 27 Feb 2015 04:07:23 +0000"  >&lt;p&gt;We can make the changes to the Coprocessors in a way that is backwards compatible. See &lt;a href=&quot;https://github.com/apache/hbase/blob/branch-1/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java#L573&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;CoprocessHost#useLegacyMethod&lt;/a&gt;, &lt;a href=&quot;https://github.com/apache/hbase/blob/branch-1/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java#L631&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;CoprocesorHost#legacyWarning&lt;/a&gt;, and their use in &lt;a href=&quot;https://github.com/apache/hbase/blob/branch-1/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java#L131&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;RegionCoprocessorHost&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14339717" author="apurtell" created="Fri, 27 Feb 2015 04:45:42 +0000"  >&lt;p&gt;That&apos;s reasonable. The reason the current patch doesn&apos;t do that is I&apos;d like to avoid carrying a ton of legacy around. Every  RegionObserver and RegionServerObserver and RegionServerServices method that references the HRegion type will have to stay with deprecation and will get a new twin. That&apos;s a lot of cruft. Better to make a clean break?&lt;/p&gt;</comment>
                            <comment id="14339741" author="busbey" created="Fri, 27 Feb 2015 05:15:41 +0000"  >&lt;p&gt;AFAICT, these are all LimitedPrivate / Evolving so breaking is fine by me now that we&apos;re limiting to 1.1.0+&lt;/p&gt;</comment>
                            <comment id="14340450" author="apurtell" created="Fri, 27 Feb 2015 17:53:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jamestaylor&quot; class=&quot;user-hover&quot; rel=&quot;jamestaylor&quot;&gt;James Taylor&lt;/a&gt; Would something like this be fine?&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Phoenix 4.x -&amp;gt; HBase 0.98.x&lt;/li&gt;
	&lt;li&gt;Phoenix 5.0.x -&amp;gt; HBase 1.0.x&lt;/li&gt;
	&lt;li&gt;Phoenix 5.1.x -&amp;gt; HBase 1.1.x (not compatible with HBase 1.0.x or earlier)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14340455" author="jamestaylor" created="Fri, 27 Feb 2015 17:57:06 +0000"  >&lt;p&gt;We should discuss a bit, but depending on timing of HBase 1.1 release, we may want to start our Phoenix support from there. Thanks for doing this too, Andrew - this is super valuable.&lt;/p&gt;</comment>
                            <comment id="14340460" author="busbey" created="Fri, 27 Feb 2015 17:59:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;We should discuss a bit, but depending on timing of HBase 1.1 release,&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll start this conversation on dev@hbase.&lt;/p&gt;</comment>
                            <comment id="14340502" author="apurtell" created="Fri, 27 Feb 2015 18:19:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;We should discuss a bit, but depending on timing of HBase 1.1 release, we may want to start our Phoenix support from there.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That would make some things easier, but what about released versions of HBase 1.0.x? Will a lack of support for those be an issue? I expanded on this a bit at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12975?focusedCommentId=14340495&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14340495&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-12975?focusedCommentId=14340495&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14340495&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="14349455" author="apurtell" created="Thu, 5 Mar 2015 20:59:46 +0000"  >&lt;p&gt;A quick update. I have been working on a patch for master. It&apos;s become a multi day effort as where drawing the line on what should be in Region vs HRegion is a trade off between getting good encapsulation in Region and a bunch of casting where code wants HRegion internals. I&apos;m working on keeping casts to a minimum. I should have something today.&lt;/p&gt;</comment>
                            <comment id="14359770" author="apurtell" created="Fri, 13 Mar 2015 01:42:58 +0000"  >&lt;p&gt;Attached patch for master.&lt;/p&gt;

&lt;p&gt;Review: &lt;a href=&quot;https://reviews.apache.org/r/32016/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/32016/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14359819" author="hadoopqa" created="Fri, 13 Mar 2015 02:33:01 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12704323/HBASE-12972.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12704323/HBASE-12972.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 3509cc21349cdc54d9aa22f5534207920e8100ff.&lt;br/&gt;
  ATTACHMENT ID: 12704323&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 343 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 8 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +            LOG.trace(&quot;High priority because region=&quot; + region.getRegionInfo().getRegionNameAsString());&lt;br/&gt;
+            LOG.info(getName() + &quot; requesting flush for region &quot; + r.getRegionInfo().getRegionNameAsString() +&lt;br/&gt;
+    Region region = TEST_UTIL.getRSForFirstRegionInTable(tableName).getFromOnlineRegions(regionName);&lt;br/&gt;
+    testRegionWithFamilies(family1).bulkLoadHFiles(new ArrayList&amp;lt;Pair&amp;lt;byte[], String&amp;gt;&amp;gt;(), false, null);&lt;br/&gt;
+  private Region initHRegion(HTableDescriptor htd, byte[] startKey, byte[] stopKey, int replicaId) throws IOException {&lt;br/&gt;
+  private void putData(Region region, int startRow, int numRows, byte[] qf, byte[]... families) throws IOException {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestInterfaceAudienceAnnotations&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13222//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14360875" author="apurtell" created="Fri, 13 Mar 2015 18:29:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;TestInterfaceAudienceAnnotations&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s a minor nit, will fix. Will also look at the javadoc warnings reported to see if they are related to this change.&lt;/p&gt;

&lt;p&gt;Should not preclude review at this point.&lt;/p&gt;

</comment>
                            <comment id="14367464" author="stack" created="Wed, 18 Mar 2015 16:59:07 +0000"  >&lt;p&gt;I went through patch in rb. Do an edit and lets commit. Can do fine tuning in followups. Nice work &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14367670" author="apurtell" created="Wed, 18 Mar 2015 18:56:41 +0000"  >&lt;p&gt;Thanks for the ton of feedback &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;. I&apos;m working on a new rev and will post it here and to RB shortly.&lt;/p&gt;</comment>
                            <comment id="14367922" author="apurtell" created="Wed, 18 Mar 2015 21:11:59 +0000"  >&lt;p&gt;Updated patch incorporating all review feedback to date. Also updated RB.&lt;/p&gt;</comment>
                            <comment id="14368128" author="hadoopqa" created="Wed, 18 Mar 2015 23:25:16 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12705439/HBASE-12972.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12705439/HBASE-12972.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f9a17edc252a88c5a1a2c7764e3f9f65623e0ced.&lt;br/&gt;
  ATTACHMENT ID: 12705439&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 355 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 7 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1919 checkstyle errors (more than the master&apos;s current 1917 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +            LOG.trace(&quot;High priority because region=&quot; + region.getRegionInfo().getRegionNameAsString());&lt;br/&gt;
+            .abort(&quot;Exception during region &quot; + getRegionInfo().getRegionNameAsString() + &quot; initialization.&quot;);&lt;br/&gt;
+            LOG.info(getName() + &quot; requesting flush for region &quot; + r.getRegionInfo().getRegionNameAsString() +&lt;br/&gt;
+    Region region = TEST_UTIL.getRSForFirstRegionInTable(tableName).getFromOnlineRegions(regionName);&lt;br/&gt;
+    testRegionWithFamilies(family1).bulkLoadHFiles(new ArrayList&amp;lt;Pair&amp;lt;byte[], String&amp;gt;&amp;gt;(), false, null);&lt;br/&gt;
+  private Region initHRegion(HTableDescriptor htd, byte[] startKey, byte[] stopKey, int replicaId) throws IOException {&lt;br/&gt;
+  private void putData(Region region, int startRow, int numRows, byte[] qf, byte[]... families) throws IOException {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestIOFencing&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint.testRegionReplicaReplication(TestRegionReplicaReplicationEndpoint.java:195)&lt;br/&gt;
	at org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint.testRegionReplicaReplicationWith3Replicas(TestRegionReplicaReplicationEndpoint.java:255)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13299//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14368143" author="apurtell" created="Wed, 18 Mar 2015 23:36:57 +0000"  >&lt;p&gt;I will fix the long lines.&lt;/p&gt;

&lt;p&gt;I don&apos;t think the test failures are related but will run the indicated units a few times with and without the patch and fix as indicated.&lt;/p&gt;</comment>
                            <comment id="14368542" author="apurtell" created="Thu, 19 Mar 2015 05:37:59 +0000"  >&lt;p&gt;I fixed the overly long lines.&lt;/p&gt;

&lt;p&gt;All tests were passing before but with the latest rebase I am seeing the test failures flagged above locally too. Will update the patch when fixed.&lt;/p&gt;</comment>
                            <comment id="14370058" author="enis" created="Thu, 19 Mar 2015 20:33:40 +0000"  >&lt;p&gt;What is the plan for branch-1 for this? Over at Phoenix, I am creating the branches for supporting 4.4+ to be released with HBase-0.98 and HBase-1.0 support. However, if we have the same patch in branch-1, we might need yet another branch in Phoenix. &lt;br/&gt;
I was thinking about committing this to master, but omit the changes to coprocessor interfaces in branch-1 and 0.98. I think for both 0.98 and branch-1, we do not want to cause more pain to coprocessor writes (and Phoenix) if possible. Is it possible that we only get the changes which introduce the new interface, but do not change the existing observer signatures ?&lt;/p&gt;</comment>
                            <comment id="14370076" author="apurtell" created="Thu, 19 Mar 2015 20:43:02 +0000"  >&lt;p&gt;Per previous discussion, I have no plans for either 0.98 or branch-1.0. We can file a backport JIRA to discuss additional backport work after the commit to master and branch-1 for 1.1+&lt;/p&gt;</comment>
                            <comment id="14370086" author="apurtell" created="Thu, 19 Mar 2015 20:48:52 +0000"  >&lt;p&gt;This absolutely must go into branch-1 for 1.1+. Omitting coprocessor API changes would completely defeat the purpose of the work, might as well resolve as Won&apos;t Fix. This isn&apos;t about causing &quot;pain&quot; or not, this is about an existing coprocessor application using &lt;em&gt;unsupportable&lt;/em&gt; internal APIs. I would think Phoenix and everybody else would welcome supportable APIs at the earliest possible convenience. Why is this only coming up now? Have I been wasting my time for two weeks?&lt;/p&gt;

&lt;p&gt;Any thoughts here &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jamestaylor&quot; class=&quot;user-hover&quot; rel=&quot;jamestaylor&quot;&gt;James Taylor&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14370228" author="apurtell" created="Thu, 19 Mar 2015 22:12:57 +0000"  >&lt;p&gt;Just FYI, the unit tests need debugging before this is committable but I&apos;m going to context switch to other work pending further feedback on this issue.&lt;/p&gt;</comment>
                            <comment id="14370360" author="apurtell" created="Thu, 19 Mar 2015 23:38:33 +0000"  >&lt;p&gt;I would &lt;b&gt;really&lt;/b&gt; rather not do it, because it involves most methods in RegionObserver, RegionServerObserver, RegionServerServices, but it is possible to keep the methods that accept HRegion objects, deprecate them, and print warnings if they are used. This would mean the master patch stays as is but the branch-1 port would have up to a doubling of methods in some interfaces. As &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; pointed out in a comment above see &lt;a href=&quot;https://github.com/apache/hbase/blob/branch-1/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java#L573&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;CoprocessorHost#useLegacyMethod&lt;/a&gt;, &lt;a href=&quot;https://github.com/apache/hbase/blob/branch-1/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java#L631&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;CoprocesorHost#legacyWarning&lt;/a&gt;, and their use in &lt;a href=&quot;https://github.com/apache/hbase/blob/branch-1/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java#L131&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;RegionCoprocessorHost&lt;/a&gt;. We&apos;d do the same in RegionObserver and extend their use to more methods in RegionServerObserver. I advocated for a clean break from 1.1+ but we can do that only in 2.0 and higher. But please consider the amount of deprecated API this leaves around throughout all of 1.x as proposed, and it only pushes the day of reckoning down the road until whenever we do a 2.0. Related, until we have a 2.0 projects like Phoenix would have no reason to change. The way I read the above pushing this out to 2.0 is exactly so Phoenix won&apos;t have to deal with this change until 2.0. Do I have that wrong? Remember, HRegion is private, we said it will always be private, there&apos;s no appropriate use of these internals now that we have decided that. We can and might break private interfaces at any time, we might break Phoenix this way, and there would seem no legitimate technical objection on the basis that a change to a private interface breaks Phoenix. This &lt;b&gt;just&lt;/b&gt; happened in 0.98.12 with a change to KeyValueScanner, &lt;em&gt;another&lt;/em&gt; use of private interfaces I would like to address after htis and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12975&quot; title=&quot;Supportable SplitTransaction and RegionMergeTransaction interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12975&quot;&gt;&lt;del&gt;HBASE-12975&lt;/del&gt;&lt;/a&gt; are committed.&lt;/p&gt;</comment>
                            <comment id="14370406" author="stack" created="Thu, 19 Mar 2015 23:58:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;However, if we have the same patch in branch-1, we might need yet another branch in Phoenix. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I thought that this patch in branch-1 was the idea and that the &apos;yet another branch&apos; would actually be the Phoenix master branch and the way forward for all future Phoenix releases; no more need to do a release per hbase version because Andrew&apos;s work made it so Phoenix no longer needed to muck in our internals.&lt;/p&gt;

&lt;p&gt;I spent a bunch of time reviewing Andrew&apos;s work because I had this understanding (I&apos;ve +1&apos;d it for 1.1).&lt;/p&gt;</comment>
                            <comment id="14370421" author="jamestaylor" created="Fri, 20 Mar 2015 00:13:30 +0000"  >&lt;p&gt;I&apos;m +1 on Andrew&apos;s patch for 1.1 too. If that patch can be backported to your branch for 1.0 too, all the better. If not, then that&apos;s fine too - we&apos;ll deal with our branches on the Phoenix side of the world. It&apos;s most important to get Phoenix on HBase APIs that are more stable and to do that ASAP.&lt;/p&gt;</comment>
                            <comment id="14370572" author="busbey" created="Fri, 20 Mar 2015 02:15:59 +0000"  >&lt;p&gt;My understanding of the push for branch-1 was as above: to get Phoenix off of internal APIs. Users of the coprocessor APIs should always be aware that they&apos;re on difficult terrain. That&apos;s the trade off for the advantages of being in our internals. If our compatibility promises don&apos;t provide enough of a warning for that, then we should try to do better at education.&lt;/p&gt;

&lt;p&gt;I&apos;m all for stability in APIs, but it&apos;s untenable to keep IA.Private pieces in those parts of the API that are relied on for projects like Phoenix. As a community, we are pretty good at recognizing when something might break downstream folks; but all of that diligence goes out the window when something is labeled IA.Private.&lt;/p&gt;

&lt;p&gt;I added the utilities for backwards compatible changes to coprocessors that Andrew mentions specifically to avoid impacting Phoenix with the WAL refactoring. It is a very blunt instrument. So long as Phoenix is set to move to the API changes in 1.1, then I agree with Andrew that the maintenance burden of keeping the old API in place isn&apos;t worth the benefit.&lt;/p&gt;</comment>
                            <comment id="14370751" author="lhofhansl" created="Fri, 20 Mar 2015 05:15:49 +0000"  >&lt;p&gt;+1 to have this in 1.1 or later.&lt;br/&gt;
-1 on making this change in 1.0.x&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, what&apos;s your motivation for not having this in 1.1+? Did you mean 0.98 and branch-1.0 in the above?&lt;/p&gt;</comment>
                            <comment id="14370832" author="enis" created="Fri, 20 Mar 2015 06:25:30 +0000"  >&lt;p&gt;Not trying to cause a stir definitely just trying to reduce down the work. I am -1 for this for 1.0.x branch as it is against the compat guides. For 1.1, the motivation is for Phoenix to not have a branch for 0.98, a branch for 1.0 and a branch for 1.1. Phoenix already have coprocessors defined with HRegion as parameters and since the observers already come with HRegion parametsr, it is not a matter of depending on HRegion internals, but my understanding is that all of the coprocessors will break to compile. If Phoenix community wants 4.x releases supporting 0.98, 1.0 and 1.1, then it will be three branches rather than 2. Phoenix might as well decide to either only support 1.1, or have 3 branches or not support 1.1 in 4.x releases. That is up for discussion in phoenix-dev I guess. Agreed that this is a Phoenix issue, but we are mainly doing this for Phoenix, so we should keep that into account. &lt;/p&gt;</comment>
                            <comment id="14370897" author="jamestaylor" created="Fri, 20 Mar 2015 07:25:21 +0000"  >&lt;p&gt;I think this change benefits not just Phoenix, but any application using these coprocessor interfaces.&lt;/p&gt;

&lt;p&gt;As far as the Phoenix code base, the coprocessors classes are pretty isolated and do not change very often. They&apos;re used more as entry points that invoke common core classes (which is where the bulk of changes occur). I don&apos;t think the burden would be high if Phoenix had to have another branch.&lt;/p&gt;</comment>
                            <comment id="14372100" author="enis" created="Fri, 20 Mar 2015 21:02:30 +0000"  >&lt;p&gt;It seems due to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11544&quot; title=&quot;[Ergonomics] hbase.client.scanner.caching is dogged and will try to return batch even if it means OOME&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11544&quot;&gt;&lt;del&gt;HBASE-11544&lt;/del&gt;&lt;/a&gt;, we already have to have shim/branch between 1.0 and 1.1 support in Phoenix anyway (see &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1763&quot; title=&quot;Support building with HBase-1.1.0 &quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1763&quot;&gt;&lt;del&gt;PHOENIX-1763&lt;/del&gt;&lt;/a&gt;). Please consider my earlier reservations lifted. No easy way to get away without branching/shim. &lt;/p&gt;</comment>
                            <comment id="14372176" author="apurtell" created="Fri, 20 Mar 2015 21:42:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;It seems due to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11544&quot; title=&quot;[Ergonomics] hbase.client.scanner.caching is dogged and will try to return batch even if it means OOME&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11544&quot;&gt;&lt;del&gt;HBASE-11544&lt;/del&gt;&lt;/a&gt;, we already have to have shim/branch between 1.0 and 1.1 support in Phoenix anyway (see &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1763&quot; title=&quot;Support building with HBase-1.1.0 &quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1763&quot;&gt;&lt;del&gt;PHOENIX-1763&lt;/del&gt;&lt;/a&gt;). Please consider my earlier reservations lifted. No easy way to get away without branching/shim&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is depressing... &lt;br/&gt;
Over on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13303&quot; title=&quot;Fix size calculation of results on the region server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13303&quot;&gt;&lt;del&gt;HBASE-13303&lt;/del&gt;&lt;/a&gt; we are putting in a stop-gap measure for sizestepping the scanner result size estimation issues. However, to do it right I think we should have newer released servers (even in 0.98) sending back NextState in PB, and newer released clients able to understand it, therefore assured to always do the right thing. But if this means porting back &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11544&quot; title=&quot;[Ergonomics] hbase.client.scanner.caching is dogged and will try to return batch even if it means OOME&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11544&quot;&gt;&lt;del&gt;HBASE-11544&lt;/del&gt;&lt;/a&gt;, then we&apos;d have another point in the 0.98 line where all Phoenix versions released prior to the change will fail to compile. &lt;/p&gt;

&lt;p&gt;Anyway, with regards to this issue let me get it to a committable state.&lt;/p&gt;</comment>
                            <comment id="14377112" author="apurtell" created="Tue, 24 Mar 2015 02:08:53 +0000"  >&lt;p&gt;Updated patch that fixes test issues and identified long lines. Fixed the javadoc warnings introduced by Region and RegionObserver changes in previous patches.&lt;/p&gt;</comment>
                            <comment id="14380599" author="apurtell" created="Wed, 25 Mar 2015 19:37:45 +0000"  >&lt;p&gt;Hello Jenkins...&lt;/p&gt;</comment>
                            <comment id="14380772" author="apurtell" created="Wed, 25 Mar 2015 21:07:21 +0000"  >&lt;p&gt;Rebased patch on latest trunk&lt;/p&gt;</comment>
                            <comment id="14380867" author="apurtell" created="Wed, 25 Mar 2015 22:01:30 +0000"  >&lt;p&gt;If you&apos;re curious what &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12972&quot; title=&quot;Region, a supportable public/evolving subset of HRegion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12972&quot;&gt;&lt;del&gt;HBASE-12972&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12975&quot; title=&quot;Supportable SplitTransaction and RegionMergeTransaction interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12975&quot;&gt;&lt;del&gt;HBASE-12975&lt;/del&gt;&lt;/a&gt; look like together, see &lt;a href=&quot;https://github.com/apurtell/hbase/tree/HBASE-12972+12975&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apurtell/hbase/tree/HBASE-12972+12975&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="14381030" author="hadoopqa" created="Wed, 25 Mar 2015 23:32:26 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12707327/HBASE-12972.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12707327/HBASE-12972.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 2e31e834a67be8a88afaaca7691eadaf55f84b49.&lt;br/&gt;
  ATTACHMENT ID: 12707327&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 355 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13429//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14383197" author="apurtell" created="Fri, 27 Mar 2015 01:53:56 +0000"  >&lt;p&gt;Any concerns if I commit this tomorrow to branch-1 and master (not branch-1.0 or 0.98)?&lt;/p&gt;</comment>
                            <comment id="14383210" author="busbey" created="Fri, 27 Mar 2015 02:06:27 +0000"  >&lt;p&gt;good by me. apologies that I haven&apos;t been able to give more feedback.&lt;/p&gt;</comment>
                            <comment id="14384330" author="apurtell" created="Fri, 27 Mar 2015 18:36:22 +0000"  >&lt;p&gt;I&apos;m going to commit this tonight unless objection.&lt;/p&gt;</comment>
                            <comment id="14385117" author="anoop.hbase" created="Sat, 28 Mar 2015 04:18:15 +0000"  >&lt;p&gt;Had a pass over it. LGTM..  Only thing which looks bit ugly is the type casting happening in many places.. But no other go !&lt;/p&gt;</comment>
                            <comment id="14387169" author="apurtell" created="Mon, 30 Mar 2015 18:37:12 +0000"  >&lt;p&gt;I was held up with test failures in branch-1 on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12975&quot; title=&quot;Supportable SplitTransaction and RegionMergeTransaction interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12975&quot;&gt;&lt;del&gt;HBASE-12975&lt;/del&gt;&lt;/a&gt;, but there are no problems with this change on its own. I need to fix up for new commits to trunk. Let me put up master and branch-1 patches here for Jenkins and then proceed. &lt;/p&gt;</comment>
                            <comment id="14387249" author="apurtell" created="Mon, 30 Mar 2015 19:14:42 +0000"  >&lt;p&gt;Attached refreshed patches&lt;/p&gt;</comment>
                            <comment id="14387446" author="hadoopqa" created="Mon, 30 Mar 2015 21:29:59 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12708220/HBASE-12972-branch-1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12708220/HBASE-12972-branch-1.patch&lt;/a&gt;&lt;br/&gt;
  against branch-1 branch at commit 3815a33e3400cee73f63e205afac8f1a2d9c174f.&lt;br/&gt;
  ATTACHMENT ID: 12708220&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 359 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13489//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13489//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13489//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13489//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13489//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13489//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13489//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13489//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14387792" author="apurtell" created="Tue, 31 Mar 2015 01:40:44 +0000"  >&lt;p&gt;Committed to branch-1 and master&lt;/p&gt;</comment>
                            <comment id="14387927" author="hudson" created="Tue, 31 Mar 2015 04:01:33 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.1 #339 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/339/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/339/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12972&quot; title=&quot;Region, a supportable public/evolving subset of HRegion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12972&quot;&gt;&lt;del&gt;HBASE-12972&lt;/del&gt;&lt;/a&gt; Region, a supportable public/evolving subset of HRegion (apurtell: rev af1715933edc2fe9b912e6fdb8abc2d39e4d2609)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestEncryptionRandomKeying.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestTableLockManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestEncryptionKeyRotation.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotManifest.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestRegionReplicaReplicationEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestScannerSelectionUsingTTL.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionMergeTransaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestRegionPlacement.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/MockRegionServerServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/FavoredNodesForRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestForceCacheImportantBlocks.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/HMerge.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestGlobalMemStoreSize.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/DefaultVisibilityLabelServiceImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/flush/RegionServerFlushTableProcedureManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/MockRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/SecureBulkLoadEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot/RegionServerSnapshotManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionServerObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestWALFiltering.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFastFail.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestGetLastFlushedSequenceId.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRowTooBig.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestMultiSlaveReplication.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StorefileRefresherChore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/MiniHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestPerColumnFamilyFlush.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHCM.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHeapMemoryManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionMergeTransaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/ZkSplitLogWorkerCoordination.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionReplicaFailover.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestMergeTable.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/visibility/TestVisibilityLabels.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestIOFencing.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SplitRequest.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestColumnSeeking.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/visibility/ExpAsStringVisibilityLabelServiceImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestDefaultMemStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBulkLoad.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/encoding/TestPrefixTree.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ConstantSizeRegionSplitPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassLoading.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverScannerOpenHook.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerOnlineConfigChange.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportTSVWithOperationAttributes.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/NoOpScanPolicyObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/Merge.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksScanned.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/tool/WriteSinkCoprocessor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/Server.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactionState.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestCompactionWithThroughputController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/CloseRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-examples/src/main/java/org/apache/hadoop/hbase/coprocessor/example/BulkDeleteEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestKeepDeletes.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestEndToEndSplitTransaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionMergeRequest.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestFSHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationEndpointNullResponse.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/ZKSplitTransactionCoordination.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsckEncryption.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Region.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/Stoppable.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestClientPushback.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationEndpointWithErrors.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/OnlineRegions.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMajorCompaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFileRefresherChore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportTSVWithTTLs.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/fs/TestBlockReorder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CompactionRequestor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionReplayEvents.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/migration/NamespaceUpgrade.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionReplicas.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/IncreasingToUpperBoundRegionSplitPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/backup/TestHFileArchiving.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/FlushRequester.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/snapshot/SnapshotTestingUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestRegionReplicaReplicationEndpointNoMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMinorCompaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStateStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionSplitPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot/FlushSnapshotSubprocedure.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/flush/FlushTableSubprocedure.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestInvocationRecordFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/FlushRequestListener.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestResettingCounters.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HeapMemoryManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestAssignmentListener.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestOpenedRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestReversibleScanners.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/SplitTransactionCoordination.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestScannerSelectionUsingKeyRange.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionFavoredNodes.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionSplitPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterFailover.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FinishRegionRecoveringHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/RegionListTmpl.jamon&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerNoMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksRead.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionServerObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/AnnotationReadingPriorityFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/backup/example/TestZooKeeperTableArchiveClient.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14387945" author="hudson" created="Tue, 31 Mar 2015 04:18:34 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #6324 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6324/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6324/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12972&quot; title=&quot;Region, a supportable public/evolving subset of HRegion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12972&quot;&gt;&lt;del&gt;HBASE-12972&lt;/del&gt;&lt;/a&gt; Region, a supportable public/evolving subset of HRegion (apurtell: rev f1f4b6618334767d0da0f47965309b21676e7e9f)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/flush/FlushTableSubprocedure.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/encoding/TestPrefixTree.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerNoMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionMergeRequest.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestGetLastFlushedSequenceId.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/NoOpScanPolicyObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestWALFiltering.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionReplicaFailover.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/visibility/ExpAsStringVisibilityLabelServiceImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestForceCacheImportantBlocks.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactionState.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HeapMemoryManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksScanned.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestEndToEndSplitTransaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestRegionReplicaReplicationEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestMultiSlaveReplication.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsckEncryption.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestRegionReplicaReplicationEndpointNoMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FinishRegionRecoveringHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StorefileRefresherChore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportTSVWithOperationAttributes.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestInvocationRecordFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/RegionListTmpl.jamon&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/AnnotationReadingPriorityFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestRegionPlacement.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/OnlineRegions.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestClientPushback.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestResettingCounters.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHeapMemoryManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionReplicas.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/RegionServerQuotaManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ConstantSizeRegionSplitPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionMergeTransaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/tool/WriteSinkCoprocessor.java&lt;/li&gt;
	&lt;li&gt;hbase-examples/src/main/java/org/apache/hadoop/hbase/coprocessor/example/BulkDeleteEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestMergeTable.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMajorCompaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionFavoredNodes.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/DefaultVisibilityLabelServiceImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionReplayEvents.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestColumnSeeking.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStateStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/backup/TestHFileArchiving.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestFSHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestDefaultMemStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionSplitPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHCM.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionSplitPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestCompactionWithThroughputController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/FlushRequester.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/security/visibility/TestVisibilityLabels.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/MockRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/Server.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/Merge.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CompactionRequestor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotManifest.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestEncryptionRandomKeying.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/Stoppable.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/MiniHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionServerObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/FlushRequestListener.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/HMerge.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestTableLockManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFileRefresherChore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SplitRequest.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/fs/TestBlockReorder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestScannerSelectionUsingKeyRange.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/SecureBulkLoadEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/flush/RegionServerFlushTableProcedureManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionMergeTransaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/FavoredNodesForRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestKeepDeletes.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Region.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/snapshot/SnapshotTestingUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot/RegionServerSnapshotManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/CloseRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationEndpointWithErrors.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestPerColumnFamilyFlush.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/IncreasingToUpperBoundRegionSplitPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestScannerSelectionUsingTTL.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassLoading.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportTSVWithTTLs.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestAssignmentListener.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerOnlineConfigChange.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/MockRegionServerServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationEndpointNullResponse.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRowTooBig.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/namespace/TestNamespaceAuditor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterFailover.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestGlobalMemStoreSize.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMinorCompaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBulkLoad.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestIOFencing.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot/FlushSnapshotSubprocedure.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/ZkSplitLogWorkerCoordination.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksRead.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionServerObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverScannerOpenHook.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/backup/example/TestZooKeeperTableArchiveClient.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestReversibleScanners.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestEncryptionKeyRotation.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14388930" author="busbey" created="Tue, 31 Mar 2015 17:46:13 +0000"  >&lt;p&gt;yay! can we get a release note that points downstream folks to the new interface?&lt;/p&gt;</comment>
                            <comment id="14389124" author="ndimiduk" created="Tue, 31 Mar 2015 18:37:06 +0000"  >&lt;p&gt;Awesome, this is really helpful. Nice work on the 0.5mb patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14389164" author="enis" created="Tue, 31 Mar 2015 18:45:51 +0000"  >&lt;p&gt;Cool. Are you gonna work on &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1681&quot; title=&quot;Use the new Region interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1681&quot;&gt;&lt;del&gt;PHOENIX-1681&lt;/del&gt;&lt;/a&gt;? I can pick it up as well if you don&apos;t have the time.   &lt;/p&gt;</comment>
                            <comment id="14389814" author="apurtell" created="Wed, 1 Apr 2015 01:11:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;Are you gonna work on &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1681&quot; title=&quot;Use the new Region interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1681&quot;&gt;&lt;del&gt;PHOENIX-1681&lt;/del&gt;&lt;/a&gt;? I can pick it up as well if you don&apos;t have the time.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sure, I can work on it. Let&apos;s follow up on the Phoenix JIRA.&lt;/p&gt;</comment>
                            <comment id="14392252" author="hudson" created="Thu, 2 Apr 2015 07:01:04 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.1 #349 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/349/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/349/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13384&quot; title=&quot;Fix Javadoc warnings introduced by HBASE-12972&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13384&quot;&gt;&lt;del&gt;HBASE-13384&lt;/del&gt;&lt;/a&gt; Fix Javadoc warnings introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12972&quot; title=&quot;Region, a supportable public/evolving subset of HRegion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12972&quot;&gt;&lt;del&gt;HBASE-12972&lt;/del&gt;&lt;/a&gt; (apurtell: rev b75a4c8ef01e0e68e4f7b1e1f43884ef38ccacad)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Region.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14392313" author="hudson" created="Thu, 2 Apr 2015 07:49:27 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6334 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6334/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6334/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13384&quot; title=&quot;Fix Javadoc warnings introduced by HBASE-12972&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13384&quot;&gt;&lt;del&gt;HBASE-13384&lt;/del&gt;&lt;/a&gt; Fix Javadoc warnings introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12972&quot; title=&quot;Region, a supportable public/evolving subset of HRegion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12972&quot;&gt;&lt;del&gt;HBASE-12972&lt;/del&gt;&lt;/a&gt; (apurtell: rev d3ed23ecf4670569270ce7f907bca50a39927495)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Region.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14571121" author="ndimiduk" created="Wed, 3 Jun 2015 15:29:06 +0000"  >&lt;p&gt;Closing issues released in 1.1.0.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12777254">PHOENIX-1681</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12772489">PHOENIX-1638</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12777254">PHOENIX-1681</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12772495">HBASE-12973</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12759488">PHOENIX-1501</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12757548">HBASE-12566</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12772592">HBASE-12975</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12701251" name="HBASE-12972-0.98.patch" size="437263" author="apurtell" created="Fri, 27 Feb 2015 02:19:55 +0000"/>
                            <attachment id="12708220" name="HBASE-12972-branch-1.patch" size="582168" author="apurtell" created="Mon, 30 Mar 2015 19:14:26 +0000"/>
                            <attachment id="12708219" name="HBASE-12972.patch" size="596822" author="apurtell" created="Mon, 30 Mar 2015 19:14:26 +0000"/>
                            <attachment id="12707327" name="HBASE-12972.patch" size="596301" author="apurtell" created="Wed, 25 Mar 2015 21:07:21 +0000"/>
                            <attachment id="12706806" name="HBASE-12972.patch" size="596301" author="apurtell" created="Tue, 24 Mar 2015 02:08:53 +0000"/>
                            <attachment id="12705439" name="HBASE-12972.patch" size="594334" author="apurtell" created="Wed, 18 Mar 2015 21:11:59 +0000"/>
                            <attachment id="12704323" name="HBASE-12972.patch" size="538899" author="apurtell" created="Fri, 13 Mar 2015 01:42:58 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 4 Feb 2015 21:15:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 28 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i257bb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>