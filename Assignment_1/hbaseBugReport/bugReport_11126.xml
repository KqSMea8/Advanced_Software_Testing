<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:20:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11126/HBASE-11126.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11126] Add RegionObserver pre hooks that operate under row lock</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11126</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The coprocessor hooks were placed outside of row locks. This was meant to sidestep performance issues arising from significant work done within hook invocations. However as the security code increases in sophistication we are now running into concurrency issues trying to use them as a result of that early decision. Since the initial introduction of coprocessor upcalls there has been some significant refactoring done around them and concurrency control in core has become more complex. This is potentially an issue for many coprocessor users.&lt;/p&gt;

&lt;p&gt;We should do either:&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Move all existing RegionObserver pre* hooks to execute under row lock.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Introduce a new set of RegionObserver pre* hooks that execute under row lock, named to indicate such.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The second option is less likely to lead to surprises.&lt;/p&gt;

&lt;p&gt;All RegionObserver hook Javadoc should be updated with advice to the coprocessor implementor not to take their own row locks in the hook. If the current thread happens to already have a row lock and they try to take a lock on another row, there is a deadlock risk.&lt;/p&gt;

&lt;p&gt;As always a drawback of adding hooks is the potential for performance impact. We should benchmark the impact and decide if the second option above is a viable choice or if the first option is required.&lt;/p&gt;

&lt;p&gt;Finally, we should introduce a higher level interface for managing the registration of &apos;user&apos; code for execution from the low level hooks. I filed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11125&quot; title=&quot;Introduce a higher level interface for registering interest in coprocessor upcalls&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11125&quot;&gt;HBASE-11125&lt;/a&gt; to discuss this further.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12712875">HBASE-11126</key>
            <summary>Add RegionObserver pre hooks that operate under row lock</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 May 2014 16:09:00 +0000</created>
                <updated>Sat, 21 Feb 2015 23:29:40 +0000</updated>
                            <resolved>Tue, 3 Jun 2014 20:09:07 +0000</resolved>
                                    <version>0.99.0</version>
                    <version>0.98.3</version>
                                    <fixVersion>0.99.0</fixVersion>
                    <fixVersion>0.98.4</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13996063" author="ram_krish" created="Tue, 13 May 2014 05:26:10 +0000"  >&lt;p&gt;Can i take this up?  this is needed for visibility deletes. &lt;/p&gt;</comment>
                            <comment id="13996067" author="ram_krish" created="Tue, 13 May 2014 05:30:52 +0000"  >&lt;p&gt;As mail notification is not happening, will assign it to me.  Reassign if you think otherwise @apurtell.&lt;/p&gt;</comment>
                            <comment id="13997289" author="apurtell" created="Wed, 14 May 2014 05:20:35 +0000"  >&lt;p&gt;Thanks for taking this Ram!&lt;/p&gt;</comment>
                            <comment id="13997292" author="apurtell" created="Wed, 14 May 2014 05:22:28 +0000"  >&lt;p&gt;Maybe we can split the difference between the options. &lt;/p&gt;

&lt;p&gt;How about we attempt to move all existing RegionObserver pre* hooks to execute under row lock? Wherever that will not be clean or even possible, then we create a new hook that does. This way we can try to limit the number of new hooks we are introducing. &lt;/p&gt;</comment>
                            <comment id="13999697" author="anoop.hbase" created="Fri, 16 May 2014 08:48:36 +0000"  >&lt;p&gt;preGetClosestRowBefore&lt;br/&gt;
preGetOp&lt;br/&gt;
preExist&lt;br/&gt;
prePut&lt;br/&gt;
preDelete&lt;br/&gt;
preCheckAndPut&lt;br/&gt;
preCheckAndDelete&lt;br/&gt;
preAppend&lt;br/&gt;
preIncrement&lt;br/&gt;
These are pre hooks on row based ops.&lt;br/&gt;
In case of Put/Delete we have preBatchMutatate() hook which will be called after obtaining rowlock. Also the read ops dont have row locking.&lt;br/&gt;
So we will need hooks after row locking in&lt;br/&gt;
preCheckAndPut&lt;br/&gt;
preCheckAndDelete&lt;br/&gt;
preAppend&lt;br/&gt;
preIncrement&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;How about we attempt to move all existing RegionObserver pre* hooks to execute under row lock?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That wont be a correct way IMHO. We know that any costly operation doing in such a pre hook will not be desirable.  So I think we should not change the CP behaviour. Atleast in 98. So the option would be to come up with new hooks.&lt;/p&gt;</comment>
                            <comment id="14001557" author="ram_krish" created="Mon, 19 May 2014 10:10:00 +0000"  >&lt;p&gt;Option of introducing new hook is the best.  But still I was thinking should we change the behaviour of the existing hooks in the trunk?&lt;br/&gt;
Only preCheckAndPut, preCheckAndDelete, preIncrement and preAppend needs change.  One doubt I had in mind was that should we have a new hook before preBatchMutate like preDeleteWithRowLock() atleast in cases were we need to have control on how the delete works. May be the name could be something else too not with preXXXWithRowLock().&lt;/p&gt;</comment>
                            <comment id="14002810" author="anoop.hbase" created="Tue, 20 May 2014 05:04:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;should we have a new hook before preBatchMutate like preDeleteWithRowLock() &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;IMO no need.  preBatchMutate() hook can be used.&lt;/p&gt;</comment>
                            <comment id="14005624" author="ram_krish" created="Thu, 22 May 2014 05:17:37 +0000"  >&lt;p&gt;Adds a set of new hooks for &lt;br/&gt;
Append, Increment, checkAndPut and checkAndDelete.&lt;br/&gt;
that operates after getting the row lock and the mvcc has completed so that any CP operation that happens will have the updated view.&lt;br/&gt;
Also adds another hook in before preparingDeleteTimeStamps. (only a prehook).&lt;br/&gt;
This is because it will be needed in Visibility deletes use case where the deleteColumn with latest version would be needed to be updated with the actual latest timestamp based on matching visibility expression.&lt;br/&gt;
Internally we had a discussion to pass the RowLock also to the new hooks as param.  But later thought even if needed could be passed to the Context object and doing that way could avoid any BC related issue.  &lt;/p&gt;</comment>
                            <comment id="14007037" author="ram_krish" created="Fri, 23 May 2014 10:50:26 +0000"  >&lt;p&gt;Latest patch.  Creates a hook only for the delete Version with latest time stamp case so that the normal flows are not affected.  &lt;/p&gt;

&lt;p&gt;The get() operations makes it time consuming so adding another hook here is not going to make things worse anyway.&lt;/p&gt;</comment>
                            <comment id="14008072" author="ram_krish" created="Sat, 24 May 2014 08:28:26 +0000"  >&lt;p&gt;Patch that passes the Get also to the new hook and renames the hook accordingly. &lt;/p&gt;</comment>
                            <comment id="14009310" author="hadoopqa" created="Tue, 27 May 2014 06:04:06 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12646663/HBASE-11126_new_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12646663/HBASE-11126_new_3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12646663&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9596//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9596//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14009484" author="hadoopqa" created="Tue, 27 May 2014 08:11:54 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12646845/HBASE-11126.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12646845/HBASE-11126.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12646845&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 32 release audit warnings (more than the trunk&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9598//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14009603" author="ram_krish" created="Tue, 27 May 2014 11:58:26 +0000"  >&lt;p&gt;This ready for commit. @apurtell?&lt;/p&gt;</comment>
                            <comment id="14009866" author="apurtell" created="Tue, 27 May 2014 16:33:28 +0000"  >&lt;p&gt;Patch is looking good.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -587,6 +587,25 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; RegionObserver &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Coprocessor {
   void preDelete(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ObserverContext&amp;lt;RegionCoprocessorEnvironment&amp;gt; c, 
       &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Delete delete, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; WALEdit edit, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Durability durability)
     &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
+/**
+ * Called before the client updates the timestamp &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; delete Columns with latest timestamp.
+ * &amp;lt;p&amp;gt;
+ * Call CoprocessorEnvironment#bypass to skip &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; actions
+ * &amp;lt;p&amp;gt;
+ * Call CoprocessorEnvironment#complete to skip any subsequent chained
+ * coprocessors
+ * @param c the environment provided by the region server
+ * @param mutation - the parent mutation associated with &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; delete cell
+ * @param cell - The deleteColumn with latest version cell
+ * @param byteNow - timestamp bytes
+ * @param family - family bytes
+ * @param get - the get formed using the current cell&apos;s row.
+ * Note that the get does not specify the family and qualifier
+ * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
+ */
+  void preGetForDeleteVersion(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ObserverContext&amp;lt;RegionCoprocessorEnvironment&amp;gt; c,
+      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Mutation mutation, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Cell cell, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] byteNow, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] family,
+      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Get get) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;preGetForDeleteVersion needs a better name. What are you doing with this new hook? &lt;/p&gt;

&lt;p&gt;In the Javadoc did you mean &quot;Called before the &lt;b&gt;server&lt;/b&gt; ... &quot;&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -5064,12 +5090,18 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HRegion &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; HeapSize { &lt;span class=&quot;code-comment&quot;&gt;// , Writable{
&lt;/span&gt;       rowLock = getRowLock(row);
       &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
         lock(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updatesLock.readLock());
-        &lt;span class=&quot;code-comment&quot;&gt;// wait &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; all prior MVCC transactions to finish - &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; we hold the row lock
&lt;/span&gt;-        &lt;span class=&quot;code-comment&quot;&gt;// (so that we are guaranteed to see the latest state)
&lt;/span&gt;-        mvcc.completeMemstoreInsert(mvcc.beginMemstoreInsert());
-        &lt;span class=&quot;code-comment&quot;&gt;// now start my own transaction
&lt;/span&gt;-        w = mvcc.beginMemstoreInsert();
         &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+          &lt;span class=&quot;code-comment&quot;&gt;// wait &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; all prior MVCC transactions to finish - &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; we hold the row lock
&lt;/span&gt;+          &lt;span class=&quot;code-comment&quot;&gt;// (so that we are guaranteed to see the latest state)
&lt;/span&gt;+          mvcc.completeMemstoreInsert(mvcc.beginMemstoreInsert());
+          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.coprocessorHost != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+            Result r = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.coprocessorHost.preAppendAfterRowLock(append);
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(r!= &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+              &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; r;
+            }
+          }
+          &lt;span class=&quot;code-comment&quot;&gt;// now start my own transaction
&lt;/span&gt;+          w = mvcc.beginMemstoreInsert();
           &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; now = EnvironmentEdgeManager.currentTimeMillis();
           &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-object&quot;&gt;Process&lt;/span&gt; each family
&lt;/span&gt;           &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Map.Entry&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], List&amp;lt;Cell&amp;gt;&amp;gt; family : append.getFamilyCellMap().entrySet()) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Why are you moving completeMemstoreInsert and beginMemstoreInsert into the inner try? &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -5254,12 +5286,18 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HRegion &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; HeapSize { &lt;span class=&quot;code-comment&quot;&gt;// , Writable{
&lt;/span&gt;       RowLock rowLock = getRowLock(row);
       &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
         lock(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updatesLock.readLock());
-        &lt;span class=&quot;code-comment&quot;&gt;// wait &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; all prior MVCC transactions to finish - &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; we hold the row lock
&lt;/span&gt;-        &lt;span class=&quot;code-comment&quot;&gt;// (so that we are guaranteed to see the latest state)
&lt;/span&gt;-        mvcc.completeMemstoreInsert(mvcc.beginMemstoreInsert());
-        &lt;span class=&quot;code-comment&quot;&gt;// now start my own transaction
&lt;/span&gt;-        w = mvcc.beginMemstoreInsert();
         &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+          &lt;span class=&quot;code-comment&quot;&gt;// wait &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; all prior MVCC transactions to finish - &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; we hold the row lock
&lt;/span&gt;+          &lt;span class=&quot;code-comment&quot;&gt;// (so that we are guaranteed to see the latest state)
&lt;/span&gt;+          mvcc.completeMemstoreInsert(mvcc.beginMemstoreInsert());
+          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.coprocessorHost != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+            Result r = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.coprocessorHost.preIncrementAfterRowLock(increment);
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (r != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+              &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; r;
+            }
+          }
+          &lt;span class=&quot;code-comment&quot;&gt;// now start my own transaction
&lt;/span&gt;+          w = mvcc.beginMemstoreInsert();
           &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; now = EnvironmentEdgeManager.currentTimeMillis();
           &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-object&quot;&gt;Process&lt;/span&gt; each family
&lt;/span&gt;           &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Map.Entry&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [], List&amp;lt;Cell&amp;gt;&amp;gt; family:
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ditto.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java
index 2e7b022..e0363b2 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java
@@ -1730,7 +1730,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class RSRpcServices &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; HBaseRPCErrorHandler,
             ProtobufUtil.toComparator(condition.getComparator());
           &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (region.getCoprocessorHost() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
             processed = region.getCoprocessorHost().preCheckAndPut(
-              row, family, qualifier, compareOp, comparator, put);
+                row, family, qualifier, compareOp, comparator, put);
           }
           &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (processed == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
             &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; result = region.checkAndMutate(row, family,
@@ -1758,7 +1758,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class RSRpcServices &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; HBaseRPCErrorHandler,
             ProtobufUtil.toComparator(condition.getComparator());
           &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (region.getCoprocessorHost() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
             processed = region.getCoprocessorHost().preCheckAndDelete(
-              row, family, qualifier, compareOp, comparator, delete);
+                row, family, qualifier, compareOp, comparator, delete);
           }
           &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (processed == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
             &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; result = region.checkAndMutate(row, family,
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Whitespace only changes, please remove.&lt;/p&gt;</comment>
                            <comment id="14010760" author="ram_krish" created="Wed, 28 May 2014 04:37:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;preGetForDeleteVersion needs a better name. What are you doing with this new hook?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I would suggest prePrepareTimeStampForDeleteVersion?  &lt;br/&gt;
This hook will be needed in case of Visibility Deletes handling.  In case of cells&lt;br/&gt;
C1(r, f, cq) at TS = 101 , Vis expression = A&amp;amp;B&lt;br/&gt;
C1(r, f, cq) at  TS = 102, Vis expression = A&lt;br/&gt;
C1(r, f, cq) at  TS = 103, Vis expression = A&amp;amp;C&lt;br/&gt;
If suppose a delete column with latest version is specified and the cell visibility is A, then this should delete the latest version of the Cell with A as the visibility expression which is TS = 102.  Currently the server on seeing a delete column with latest version would just update the Delete Cell with 103.  Now this can be done under preDelete() but again the problem of not obtaining the row lock would come into picture.  Hence this change may be needed.  Also I think we could add isReplay or not flag before calling this hook.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;In the Javadoc did you mean &quot;Called before the server ... &quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes.. Good catch.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Why are you moving completeMemstoreInsert and beginMemstoreInsert into the inner try?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;if the code was added in the &apos;try&apos; block before the current &apos;try&apos; block in the patch, then if we just return out from the new hooks then the update lock obtained would not be released.  Hence moved them to the try block.&lt;br/&gt;
Will update the patch and post a new one ASAP.&lt;/p&gt;
</comment>
                            <comment id="14010773" author="anoop.hbase" created="Wed, 28 May 2014 04:56:46 +0000"  >&lt;blockquote&gt;&lt;p&gt;Also I think we could add isReplay or not flag before calling this hook.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In case of replay the KV&apos;s TS wont be latestTS. So actually it wont get called.  May be you can add a check isReplay before calling method prepareDeleteTimestamps itself.&lt;/p&gt;
</comment>
                            <comment id="14010781" author="ram_krish" created="Wed, 28 May 2014 05:04:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;In case of replay the KV&apos;s TS wont be latestTS. So actually it wont get called.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ya.  That was a case when we don&apos;t update the delete cells with LONG.MIN_VALUE in case we don&apos;t find matching KVs with visibility expression.&lt;br/&gt;
I thought better to handle it in this patch also so that we are sure that the CP hooks are not called.  Adding before prepareDeleteTimestamps() is also fine with me.&lt;/p&gt;</comment>
                            <comment id="14010792" author="anoop.hbase" created="Wed, 28 May 2014 05:12:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;Adding before prepareDeleteTimestamps() is also fine with me.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 for this.&lt;/p&gt;</comment>
                            <comment id="14011196" author="ram_krish" created="Wed, 28 May 2014 15:27:36 +0000"  >&lt;p&gt;The patch naming convention went wrong in this.  Latest patch.&lt;/p&gt;</comment>
                            <comment id="14011315" author="ram_krish" created="Wed, 28 May 2014 17:03:12 +0000"  >&lt;p&gt;After discussion with Anoop the new hooks is moved after the Get is formed and this would help to use the kvCount logic without explicitly passing the kvCount to the CP.&lt;/p&gt;</comment>
                            <comment id="14011321" author="hadoopqa" created="Wed, 28 May 2014 17:09:25 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12647144/HBASE-11126_4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12647144/HBASE-11126_4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12647144&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 32 release audit warnings (more than the trunk&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9622//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14013146" author="apurtell" created="Fri, 30 May 2014 00:30:59 +0000"  >&lt;p&gt;Looking at the 11126_4 patch.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  void updateDeleteLatestVersionTimeStamp(KeyValue kv, Get get, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; count, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] byteNow)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This could be a static method.&lt;/p&gt;

&lt;p&gt;Minor javadoc nit, the added NOTEs should be preceded by a &amp;lt;p&amp;gt; or they won&apos;t appear in a new paragraph in the rendered javadoc as what is likely intended. &lt;/p&gt;

&lt;p&gt;MIssing unit test updates.&lt;/p&gt;</comment>
                            <comment id="14013277" author="ram_krish" created="Fri, 30 May 2014 04:09:21 +0000"  >&lt;p&gt;Thanks Andy.  Will update patch accordingly and add the testcases for it.&lt;/p&gt;</comment>
                            <comment id="14013589" author="ram_krish" created="Fri, 30 May 2014 12:13:50 +0000"  >&lt;p&gt;Adds test cases.&lt;br/&gt;
Corrects the Javadoc as mentioned in the comment.&lt;br/&gt;
Did not change the method updateDeleteLatestVersionTimeStamp to static as the &apos;get()&apos; also needs to be changed to static and the instance variables in it.&lt;br/&gt;
The test case added includes new testcases that were not asserting the existing hooks before the patch.&lt;/p&gt;</comment>
                            <comment id="14013650" author="hadoopqa" created="Fri, 30 May 2014 13:57:35 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12647587/HBASE-11126_5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12647587/HBASE-11126_5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12647587&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      final Cell cell, final byte[] byteNow, final byte[] family, final Get get) throws IOException {&lt;br/&gt;
+  public Result preAppendAfterRowLock(ObserverContext&amp;lt;RegionCoprocessorEnvironment&amp;gt; e, Append append)&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestEncryptionKeyRotation&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9648//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14013933" author="apurtell" created="Fri, 30 May 2014 16:58:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;org.apache.hadoop.hbase.regionserver.TestEncryptionKeyRotation&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Unrelated to the changes here. (Likely that failed due to running the precommit tests on a very loaded server.)&lt;/p&gt;

&lt;p&gt;Thanks for the new tests.&lt;/p&gt;

&lt;p&gt;Please fix the long lines on commit.&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="14013947" author="anoop.hbase" created="Fri, 30 May 2014 17:07:01 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void prePrepareTimeStampForDeleteVersion(
+      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ObserverContext&amp;lt;RegionCoprocessorEnvironment&amp;gt; e, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Mutation delete,
+      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Cell cell, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] byteNow, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] family, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Get get) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When we pass cell already, no need for family again.&lt;/p&gt;

&lt;p&gt;In javadoc of RegionObserver#prePrepareTimeStampForDeleteVersion&lt;br/&gt;
&quot; * Called before the server updates the timestamp for delete Columns with latest timestamp.&quot;&lt;br/&gt;
But this hook is not called for all cases of latest TS. Only when it is a version delete.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * @param isInReplay 
    * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
    */
-  void prepareDeleteTimestamps(Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], List&amp;lt;Cell&amp;gt;&amp;gt; familyMap, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] byteNow)
-      &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+  void prepareDeleteTimestamps(Mutation mutation, Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], List&amp;lt;Cell&amp;gt;&amp;gt; familyMap, 
+      &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] byteNow) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This param is not there in method args - isInReplay&lt;/p&gt;</comment>
                            <comment id="14016198" author="ram_krish" created="Tue, 3 Jun 2014 04:12:01 +0000"  >&lt;p&gt;Final patch. This is what I would be committing. Addresses all the comments too.&lt;/p&gt;</comment>
                            <comment id="14016252" author="hadoopqa" created="Tue, 3 Jun 2014 06:08:43 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12648067/HBASE-11126_6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12648067/HBASE-11126_6.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12648067&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9673//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14016445" author="ram_krish" created="Tue, 3 Jun 2014 12:28:35 +0000"  >&lt;p&gt;Can we commit this to 0.98 ? Or shall I wait till the current RC is released as a version?&lt;/p&gt;</comment>
                            <comment id="14016837" author="ram_krish" created="Tue, 3 Jun 2014 16:13:13 +0000"  >&lt;p&gt;This is what was committed to trunk.  Corrected the javadoc warning reported in the QA run.&lt;/p&gt;</comment>
                            <comment id="14016847" author="hadoopqa" created="Tue, 3 Jun 2014 16:23:21 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12648182/HBASE-11126_7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12648182/HBASE-11126_7.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12648182&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9677//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9677//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14016853" author="hudson" created="Tue, 3 Jun 2014 16:27:17 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5171 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5171/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5171/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11126&quot; title=&quot;Add RegionObserver pre hooks that operate under row lock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11126&quot;&gt;&lt;del&gt;HBASE-11126&lt;/del&gt;&lt;/a&gt;-Add RegionObserver pre hooks that operate under row lock (Ram) (ramkrishna: rev 6a2467bbf23c97e8499ff269365a3a1eb391b23f)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14017019" author="apurtell" created="Tue, 3 Jun 2014 19:12:25 +0000"  >&lt;p&gt;Sure we can commit this to 0.98. I have cherry picked the patch from trunk. There was a tiny issue with one hunk of Javadoc. Will push the result after it tests out ok locally.&lt;/p&gt;</comment>
                            <comment id="14017068" author="apurtell" created="Tue, 3 Jun 2014 20:09:07 +0000"  >&lt;p&gt;Committed to 0.98. Coprocessor and security tests pass locally. I also ran Phoenix 4.0&apos;s unit tests and all passed except for one that isn&apos;t being set up properly but it looks like a Phoenix test classpath issue (compat jar not on classpath for MetricsWALSource)&lt;/p&gt;</comment>
                            <comment id="14017238" author="hudson" created="Tue, 3 Jun 2014 22:52:17 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #309 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/309/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/309/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11126&quot; title=&quot;Add RegionObserver pre hooks that operate under row lock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11126&quot;&gt;&lt;del&gt;HBASE-11126&lt;/del&gt;&lt;/a&gt;-Add RegionObserver pre hooks that operate under row lock (Ram) (apurtell: rev 136ab4d644c8aa0888309e3960f9fd5d0af12772)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14017239" author="hudson" created="Tue, 3 Jun 2014 22:55:52 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98 #327 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/327/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/327/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11126&quot; title=&quot;Add RegionObserver pre hooks that operate under row lock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11126&quot;&gt;&lt;del&gt;HBASE-11126&lt;/del&gt;&lt;/a&gt;-Add RegionObserver pre hooks that operate under row lock (Ram) (apurtell: rev 136ab4d644c8aa0888309e3960f9fd5d0af12772)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14330593" author="enis" created="Sat, 21 Feb 2015 23:29:40 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12712874">HBASE-11125</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12712703">HBASE-11122</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12714781">HBASE-11194</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12646845" name="HBASE-11126.patch" size="30836" author="ram_krish" created="Tue, 27 May 2014 06:23:05 +0000"/>
                            <attachment id="12646180" name="HBASE-11126_1.patch" size="26894" author="ram_krish" created="Thu, 22 May 2014 05:14:34 +0000"/>
                            <attachment id="12647144" name="HBASE-11126_4.patch" size="28380" author="ram_krish" created="Wed, 28 May 2014 15:27:36 +0000"/>
                            <attachment id="12647587" name="HBASE-11126_5.patch" size="42581" author="ram_krish" created="Fri, 30 May 2014 12:13:50 +0000"/>
                            <attachment id="12648067" name="HBASE-11126_6.patch" size="42435" author="ram_krish" created="Tue, 3 Jun 2014 04:12:01 +0000"/>
                            <attachment id="12648182" name="HBASE-11126_7.patch" size="42393" author="ram_krish" created="Tue, 3 Jun 2014 16:13:13 +0000"/>
                            <attachment id="12646492" name="HBASE-11126_new_2.patch" size="30291" author="ram_krish" created="Fri, 23 May 2014 10:50:26 +0000"/>
                            <attachment id="12646663" name="HBASE-11126_new_3.patch" size="30716" author="ram_krish" created="Sat, 24 May 2014 08:28:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 May 2014 05:26:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>391191</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1vdjb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>391412</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>