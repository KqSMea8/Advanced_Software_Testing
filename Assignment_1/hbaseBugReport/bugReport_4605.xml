<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:20:24 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4605/HBASE-4605.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4605] Constraints</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4605</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;From Jesse&apos;s comment on dev:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What I would like to propose is a simple interface that people can use to implement a &apos;constraint&apos; (matching the classic database definition). This would help ease of adoption by helping HBase more easily check that box, help minimize code duplication across organizations, and lead to easier adoption.&lt;/p&gt;

&lt;p&gt;Essentially, people would implement a &apos;Constraint&apos; interface for checking keys before they are put into a table. Puts that are valid get written to the table, but if not people can will throw an exception that gets propagated back to the client explaining why the put was invalid.&lt;/p&gt;

&lt;p&gt;Constraints would be set on a per-table basis and the user would be expected to ensure the jars containing the constraint are present on the machines serving that table.&lt;/p&gt;

&lt;p&gt;Yes, people could roll their own mechanism for doing this via coprocessors each time, but this would make it easier to do so, so you only have to implement a very minimal interface and not worry about the specifics.&lt;/p&gt;&lt;/blockquote&gt;</description>
                <environment></environment>
        <key id="12527475">HBASE-4605</key>
            <summary>Constraints</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jesse_yates">Jesse Yates</assignee>
                                    <reporter username="jesse_yates">Jesse Yates</reporter>
                        <labels>
                    </labels>
                <created>Mon, 17 Oct 2011 18:22:25 +0000</created>
                <updated>Fri, 20 Nov 2015 11:55:34 +0000</updated>
                            <resolved>Fri, 16 Dec 2011 18:18:39 +0000</resolved>
                                    <version>0.94.0</version>
                                    <fixVersion>0.94.0</fixVersion>
                                    <component>Client</component>
                    <component>Coprocessors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="13129064" author="jesse_yates" created="Mon, 17 Oct 2011 18:26:32 +0000"  >&lt;p&gt;I&apos;ve been thinking about how to go about implementing this and have two ways to go about it.&lt;/p&gt;

&lt;p&gt;Method 1:&lt;br/&gt;
My idea is to write a ConstraintProcessor that is a system level CP with system wide support for setting constraints on a table. this requires add &apos;top-level&apos; configuration values that the user would set for constraints to run (which would be ordered like coprocessors), but they would just implement the &apos;Constraint&apos; interface. This means modifying HTD and the shell to enable all these&lt;/p&gt;

&lt;p&gt;This means people need to distribute the jars and set conf values similar to what they would have to do before, but we would handle making sure the implemented Constraints get run in the right place, and propagate the errors (e.g. ConstraintFailedExecption) back to the users. &lt;/p&gt;

&lt;p&gt;Pluses:&lt;br/&gt;
1) Allows users to get back multiple reasons why a put failed.&lt;br/&gt;
2) Allows a ConstraintImpl to be a subclass of any arbitrary class and not bound to some abstract constraint.&lt;br/&gt;
3) People don&apos;t have to worry about it being a coprocessor - it is notionally divorced.&lt;/p&gt;

&lt;p&gt;Minuses:&lt;br/&gt;
1) Requires changing a bunch of code in HTableDescriptor and essentially duplicating a lot the checking/setting already done for coprocessors. This can be gotten around by generalizing the mechanism for storing classes in the HTD.&lt;/p&gt;

&lt;p&gt;Method 2 (already implemented, patch coming):&lt;br/&gt;
Add superclass AbstractConstraint which only exposes a check(Put) method. It is actually a Coprocoessor which is loaded, processes the check and then returns the error to the client (wrapped in an IOException) on failure. &lt;br/&gt;
Pluses:&lt;br/&gt;
1) We don&apos;t have to implement any new mechanisms for specifying the constraint, people just have to add it as a coprocessor.&lt;br/&gt;
Minuses:&lt;br/&gt;
1) It could be confusing since with this mechanism, you just want people to think in terms of Constraints, not coprocessors&lt;br/&gt;
2) You are bound to extending the AbstractCoprocessor, not just implementing the interface&lt;br/&gt;
3) If just one constraint fails, then the put is rejected, so you can&apos;t find out all the reasons it would fail (useful if cleaning data).&lt;br/&gt;
4) It doesn&apos;t really help &apos;simplify&apos; the use of HBase. In fact, it increases the complexity.&lt;/p&gt;</comment>
                            <comment id="13129094" author="ghelmling" created="Mon, 17 Oct 2011 19:08:56 +0000"  >&lt;blockquote&gt;
&lt;p&gt;My idea is to write a ConstraintProcessor that is a system level CP with system wide support for setting constraints on a table. this requires add &apos;top-level&apos; configuration values that the user would set for constraints to run (which would be ordered like coprocessors), but they would just implement the &apos;Constraint&apos; interface. This means modifying HTD and the shell to enable all these&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I like the idea of using a system level coprocessor with a minimal extension interface for the checks to be performed.  For the actual interface, you could even use Predicate from the google guava lib, or have Constraint just be a named interface that extends Predicate&amp;lt;Put&amp;gt;.  Not critical, but plugging in to a standard interface instead of doing a one-off may enable future uses...&lt;/p&gt;

&lt;p&gt;For setting the constraint implementations to be applied per table, I agree that using table attributes is probably easiest.  But I don&apos;t see why we need to modify HTableDescriptor to enable this?  We currently have &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4554&quot; title=&quot;Allow set/unset coprocessor table attributes from shell.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4554&quot;&gt;&lt;del&gt;HBASE-4554&lt;/del&gt;&lt;/a&gt;, which is looking to enable setting table attributes for coprocessors from the shell.  It seems like we could make that sufficiently generic to enable both the coprocessors case and this with just changes to the shell code?&lt;/p&gt;</comment>
                            <comment id="13129155" author="nkeywal" created="Mon, 17 Oct 2011 20:38:35 +0000"  >&lt;p&gt;It would be a very useful features. &lt;/p&gt;

&lt;p&gt;For what it worth, I am quite fine with method 2.&lt;/p&gt;

&lt;p&gt;Some points I found useful in the SQL engines: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;capacity to disable the constraints for a connection (basically because yoy&apos;re doing a big set of operation and you want the best possible performances&lt;/li&gt;
	&lt;li&gt;capacity to disable globally (upgrade)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I also wonder how we should manage the evolution of the constraint. On an SQL db, there is only one possible set; considering the amount of data, the traditional upgrade if the traditional sql db could not be possible here; so managing evolution of constraint would make sense.&lt;/p&gt;

&lt;p&gt;A comment as well: in a SQL system, the constraints are linked to the transaction: it&apos;s checked once the transaction is committed. This is important for cross table constraint checks, as there is no transaction between tables in HBase. I would tend to believe that&apos;s mainly a question of documentation (insert in the right order), but it&apos;s something to remember anyway (especially as you want to duplicate the relationships with HBase more than with a sql db)...&lt;/p&gt;

&lt;p&gt;I don&apos;t know the status of HCatalog, but I think the HCatalog schema will be transformable as HBase constraints, adding value to the two of them...&lt;/p&gt;</comment>
                            <comment id="13129203" author="jesse_yates" created="Mon, 17 Oct 2011 21:10:37 +0000"  >&lt;p&gt;@gary:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I like the idea of using a system level coprocessor with a minimal extension interface for the checks to be performed. For the actual interface, you could even use Predicate from the google guava lib, or have Constraint just be a named interface that extends Predicate&amp;lt;Put&amp;gt;. Not critical, but plugging in to a standard interface instead of doing a one-off may enable future uses...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That is exactly what I was thinking for the &quot;top-level&quot; implementation&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;seems like we could make that sufficiently generic to enable both the coprocessors case and this with just changes to the shell code&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 &lt;/p&gt;

&lt;p&gt;Right now coprocessors have a special syntax for loading on table level, which feels kind of clunky to do by hand (specifying COPROCESSOR$). I feel like we could definitely help enable setting values with a more concrete syntax (like a setCoprocessor method that we have on the HTableDescriptor now), which should handle the numbering, etc. &lt;/p&gt;

&lt;p&gt;So using an abstract version of the stuff from 4554 would definitely help with that. I don&apos;t know if we can just the use update shell though - we would probably need to update the java connection as well.&lt;/p&gt;

&lt;p&gt;Right now the code for storing things in the conf would be fine, we just need to abstract it a little bit, so it would look something like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void addCoprocessor(name){
 addProcessingElement(&lt;span class=&quot;code-quote&quot;&gt;&quot;coprocessor$&quot;&lt;/span&gt;, name);}

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void addConstriant(name){
 addProcessingElement(&lt;span class=&quot;code-quote&quot;&gt;&quot;constriant$&quot;&lt;/span&gt;, name);}

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void addProcessingElement(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tag, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; value){
...&lt;span class=&quot;code-comment&quot;&gt;//all the checking/add currently in addCoprocessor
&lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;@keywal:&lt;/p&gt;

&lt;p&gt;Since they are just table configuration values, turning them on/off will be relatively painless. &lt;/p&gt;

&lt;p&gt;Cross-table transactions is separate can of worms and really goes against the whole design paradigm of HBase (see discussion on dev about this). This would be optimized to do single table checking, though people could implement cross table checks at serious cost (and later we can build in more optimized mechanisms if it is a common thing people do).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HCatalog schema will be transformable as HBase constraints, adding value to the two of them...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That should be super simple, it would just take a simple tool to create the corresponding constraints. I would use constraints to enforce things like data sanitation, rather than schema enforcement (its the last ditch barrier to things going into a table properly, since shipping things across the wire is expensive), which should be done client side, but it could definitely work.&lt;/p&gt;
</comment>
                            <comment id="13129393" author="apurtell" created="Tue, 18 Oct 2011 01:12:08 +0000"  >&lt;p&gt;+1 on choice #1, with generalization of argument passing to coprocessors via table attributes. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4048&quot; title=&quot;[Coprocessors] Support configuration of coprocessor at load time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4048&quot;&gt;&lt;del&gt;HBASE-4048&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4554&quot; title=&quot;Allow set/unset coprocessor table attributes from shell.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4554&quot;&gt;&lt;del&gt;HBASE-4554&lt;/del&gt;&lt;/a&gt; are a start there.&lt;/p&gt;</comment>
                            <comment id="13129443" author="jesse_yates" created="Tue, 18 Oct 2011 02:58:01 +0000"  >&lt;p&gt;Constraint implementation that is just added as a coprocessor. Not implemented as a Precondition for ease, though it could be ported over to that fairly easily. Basically, putting this up for posterity since the consensus seems to be pursuing #1 above. &lt;/p&gt;

&lt;p&gt;Also, is there a better way to pass back exceptions from coprocessors? Right now, the exception causes a retry which is a huge timeout problem&lt;/p&gt;</comment>
                            <comment id="13129456" author="yuzhihong@gmail.com" created="Tue, 18 Oct 2011 03:37:35 +0000"  >&lt;p&gt;See the following from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt; w.r.t. exceptions and coprocessors:&lt;/p&gt;

&lt;p&gt;    The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;    &quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;    block. &lt;br/&gt;
    handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;</comment>
                            <comment id="13129495" author="jesse_yates" created="Tue, 18 Oct 2011 05:15:19 +0000"  >&lt;p&gt;@Ted: yeah, I found that wrapping. However, tracing the execution back up, a simple put (or delete) ends up being called wrapped in a retry loop that tries the put every time a Throwable is received. So we end up with a RetriesExhaustedException, rather than the original exception being propagated back out.  The path down for the put was HTable.put-&amp;gt;doPut-&amp;gt;flushCommits-&amp;gt;HConnectionMananger.processBatchOfPuts, which does the retries. The end result is it takes minutes to do a commit because we are doing this checking and retrying, rather than failing out as the CP docs would imply. I feel like this could have serious impacts outside of this patch too..&lt;br/&gt;
Unless I&apos;m missing something?&lt;/p&gt;</comment>
                            <comment id="13129506" author="yuzhihong@gmail.com" created="Tue, 18 Oct 2011 05:31:27 +0000"  >&lt;p&gt;In processBatchCallback():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
                  !(results[i] &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; DoNotRetryIOException))) {
            retry = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So in your example, you can wrap NumberFormatException in DoNotRetryIOException so that the retries are skipped.&lt;/p&gt;</comment>
                            <comment id="13129516" author="jesse_yates" created="Tue, 18 Oct 2011 05:49:21 +0000"  >&lt;p&gt;oh... yeah, that would work. First time digging into the code and missed that. Thanks Ted!&lt;/p&gt;</comment>
                            <comment id="13130093" author="apurtell" created="Tue, 18 Oct 2011 22:43:43 +0000"  >&lt;p&gt;@Jesse: Can we change the title of this issue to simply &quot;Constraints&quot; ?&lt;/p&gt;</comment>
                            <comment id="13131937" author="ghelmling" created="Thu, 20 Oct 2011 19:37:24 +0000"  >&lt;p&gt;Summarizing some comments from a related thread in the dev@hbase.apache.org mailing list:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://search-hadoop.com/m/oGvg82YEzA82&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search-hadoop.com/m/oGvg82YEzA82&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adding special configuration hooks to &lt;tt&gt;HTableDescriptor&lt;/tt&gt;, say &lt;tt&gt;HTableDescriptor.addConstraint(Class c)&lt;/tt&gt;, is likely to lead to long-term clutter if we follow this strategy for each special purpose coprocessor implementation that comes up.&lt;/p&gt;

&lt;p&gt;So instead, I&apos;d suggest we invert this and make the coprocessor implementation responsible for setting it&apos;s configuration as attributes on &lt;tt&gt;HTableDescriptor&lt;/tt&gt;.  This would follow a pattern something like the following:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HTableDescriptor htd = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HTableDescriptor(...);
Constraints.add(htd, MyConstraintImpl.class);
HBaseAdmin admin = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HBaseAdmin();
admin.createTable(htd);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The important part being that the &lt;tt&gt;Constraints&lt;/tt&gt; class handles marshalling it&apos;s required configuration as attributes on &lt;tt&gt;HTableDescriptor&lt;/tt&gt;, and, in addition, is free to define those configuration helper methods however best makes sense for it&apos;s own needs.  For the example above, I&apos;m guessing this would be something like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void add(HTableDescriptor htd, &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;? &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Constraint&amp;gt;... clz)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This keeps &lt;tt&gt;HTableDescriptor&lt;/tt&gt; handling just the common needs (through the arbitrary key/value attributes), while keeping the specific configuration logic with each coprocessor implementation.&lt;/p&gt;

&lt;p&gt;There is an additional challenge, however, in how we can cleanly incorporate access to set the configurations into the HBase shell.  Ideally, you&apos;d be able to do something like (exact syntax aside):&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;hbase&amp;gt; alter &apos;mytable&apos;, METHOD =&amp;gt; &apos;Constraints.add&apos;, VALUE =&amp;gt; com.my.MyConstraint
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or maybe&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;hbase&amp;gt; alter &apos;mytable&apos;, TYPE =&amp;gt; &apos;Constraints&apos;, METHOD =&amp;gt; &apos;add&apos;, VALUE =&amp;gt; com.my.MyConstraint
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think the key problem is figuring out how the shell actually knows about the &lt;tt&gt;Constraints&lt;/tt&gt; class.  Some options are:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;use the full class name, e.g. &quot;org.apache.hadoop.hbase.coprocessor.Constraints&quot;.  This is clunky but probably simplest to do.&lt;/li&gt;
	&lt;li&gt;allowed the Constraints class to register itself via some SPI interface that the shell code can examine for possible providers.  This would probably still need the class to be statically initialized somehow.&lt;/li&gt;
	&lt;li&gt;provide a extensions dir for the shell:
	&lt;ul&gt;
		&lt;li&gt;extensions drop a simple jruby scriptlet in a file in the dir (say lib/ruby/hbase/ext)&lt;/li&gt;
		&lt;li&gt;the scriptlet does some simple registration of the available methods/commands&lt;/li&gt;
		&lt;li&gt;the shell code loads all files&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;There may be better options as well, but hopefully this can serve as the basis for some discussion.&lt;/p&gt;</comment>
                            <comment id="13136446" author="jesse_yates" created="Wed, 26 Oct 2011 21:46:37 +0000"  >&lt;p&gt;Initial stab at implementing constraints as a coprocessor to processor to process all the constraints passed to a table.&lt;/p&gt;

&lt;p&gt;Includes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adding a varargs of constraints to a table&lt;/li&gt;
	&lt;li&gt;Adding a varags of constraint and their own configuration to a table&lt;/li&gt;
	&lt;li&gt;just enabling Constraints on a table (would use any constraints currently stored in the htd)&lt;/li&gt;
	&lt;li&gt;skeleton for disabling constraints (debated feature, since also requires adding a removeCoprocessor feature to htd)&lt;/li&gt;
	&lt;li&gt;integration and unit tests.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is pretty close to what I was envisioning, it just needs a couple finishing touches (I think).&lt;/p&gt;

&lt;p&gt;What does everyone think of the impl? &lt;/p&gt;
</comment>
                            <comment id="13136461" author="yuzhihong@gmail.com" created="Wed, 26 Oct 2011 21:57:25 +0000"  >&lt;p&gt;All the new files miss license.&lt;/p&gt;</comment>
                            <comment id="13136498" author="yuzhihong@gmail.com" created="Wed, 26 Oct 2011 22:15:07 +0000"  >&lt;p&gt;@Jesse:&lt;br/&gt;
Can you publish your patch on review board ?&lt;br/&gt;
I see some nits which can be better expressed there.&lt;/p&gt;</comment>
                            <comment id="13136514" author="jesse_yates" created="Wed, 26 Oct 2011 22:28:11 +0000"  >&lt;p&gt;@Ted: its just supposed to be general design review, hence the lack of licenses (the &quot;finishing touches&quot; mentioned above). I can throw it up on RB though.&lt;/p&gt;</comment>
                            <comment id="13136531" author="jiraposter@reviews.apache.org" created="Wed, 26 Oct 2011 22:33:32 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;

&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;

&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jesse&lt;/p&gt;
</comment>
                            <comment id="13136563" author="jiraposter@reviews.apache.org" created="Wed, 26 Oct 2011 22:59:33 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review2870&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review2870&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6424&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6424&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This condition can be expressed as !constraints.isEmpty()&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6423&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6423&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Please use curly braces for line 60.&lt;br/&gt;
    This log can be combined with log on line 63.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6425&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6425&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This has been done, right ?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6426&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6426&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Contents of put should be included.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6427&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6427&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    We can either add removeCoprocessor() to HTD or, persist a flag to tell ConstraintProcessor that it is disabled.&lt;/p&gt;

&lt;p&gt;    I think the second approach may be better in our case.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6428&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6428&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should be &apos;desc HTableDescriptor to read from&apos;&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-26 22:34:35, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-26 22:34:35)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13136729" author="jesse_yates" created="Thu, 27 Oct 2011 02:42:19 +0000"  >&lt;p&gt;Also, this patch (clearly) does not include changes to the shell or book documentation. Any pointers on where to look for the former would be really helpful, as I haven&apos;t looked into the shell much before (and don&apos;t have a ton of ruby experience). However, going to be looking into that next week.&lt;/p&gt;</comment>
                            <comment id="13137329" author="yuzhihong@gmail.com" created="Thu, 27 Oct 2011 17:53:43 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4554&quot; title=&quot;Allow set/unset coprocessor table attributes from shell.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4554&quot;&gt;&lt;del&gt;HBASE-4554&lt;/del&gt;&lt;/a&gt; which can be used as example for setting coprocessor table attributes.&lt;/p&gt;</comment>
                            <comment id="13139054" author="jiraposter@reviews.apache.org" created="Sat, 29 Oct 2011 02:11:32 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review2917&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review2917&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Jessie, this looks like a pretty good start.  In addition to the individual comments, a couple of general questions:&lt;/p&gt;

&lt;p&gt;1) Should ConstraintProcessor support some standard way of mapping Constraint implementations to the families/qualifiers they should apply to?&lt;br/&gt;
2) Should we ship a base set of Constraint implementations for common cases?&lt;/p&gt;

&lt;p&gt;Even if the answer to both is &quot;yes&quot;, they could be addressed as follow-up JIRAs.  But it would be good to think through the end goal here.&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6534&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6534&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think this sentence needs updating to reference Constraints/ConstraintProcessor.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6535&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6535&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is this true?  The HTD values are stored in a HashMap, so ordering wouldn&apos;t be preserved.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6536&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6536&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should reference Constraint since BaseConstraint is just a convenience class.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6521&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6521&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should we define a base exception here that is thrown?  I&apos;m thinking something like:&lt;/p&gt;

&lt;p&gt;    ConstraintViolationException extends DoNotRetryIOException&lt;/p&gt;

&lt;p&gt;    This way we don&apos;t need to wrap in DoNotRetryIOException later and we give implementers a bit more guidance on what to do.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6522&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6522&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If we use a defined exception class for constraint violations (see comment above), I think we can omit this try/catch block.  Expected exceptions would already subclass DoNotRetryIOException, so no need to wrap it here.  Other (non-expected) Throwables would be handled higher up by RegionCoprocessorHost.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6525&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6525&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think this and the other addConstraints() method could just be named add().&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6523&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6523&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I get the idea of being able to enable/disable constraints on demand, without removing the individual constraints configured.  But why do we need this and the private addConstraintProcessor() method?  Why not move the addConstraintProcessor() implementation here and make addConstraints() call this instead?&lt;/p&gt;

&lt;p&gt;    Also, I would just name this enable().&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6524&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6524&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    In addition to being able to disable constraint checking by removing the ConstraintProcessor CP, we probably also need a removeConstraints(HTableDescriptor) method that removes the ConstraintProcessor CP and all the &quot;constraint $&quot; attributes on HTD for complete cleanup.&lt;/p&gt;

&lt;p&gt;    By the way, since the name of the class is Constraints, I think this method could just be named disable() &amp;#8211; the additional &quot;Constraints&quot; is redundant.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6530&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6530&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is this intended as a test class or as a usable implementation?  If a test class, should be under src/test/java/...&lt;/p&gt;

&lt;p&gt;    If a usable implementation, then, looking at it, I wonder how useful it is without a way of mapping constraints to individual qualifiers.  Do you think that&apos;s something ConstraintProcessor should provide in general?&lt;/p&gt;

&lt;p&gt;    It could be left up to end user implementations of Constraint to match which KeyValues they should apply to.  But then I don&apos;t think any implementations we can bundle will have much value, unless they provide for their own qualifier matching via configuration values.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6532&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6532&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This doesn&apos;t seem right.  Wouldn&apos;t most ints be stored as Bytes.toBytes(int), not as a String?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-26 22:34:35, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-26 22:34:35)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13139099" author="jiraposter@reviews.apache.org" created="Sat, 29 Oct 2011 03:57:32 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-10-26 23:01:06, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java, line 49&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53674#file53674line49&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53674#file53674line49&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This condition can be expressed as !constraints.isEmpty()&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was concerned with speed here - maybe a premature optimization and bit of assumption on my part that the check of is empty takes longer than a boolean, and that my way has minimal memory overhead&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-26 23:01:06, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java, line 77&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53674#file53674line77&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53674#file53674line77&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This has been done, right ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yup, just some cruft.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-26 23:01:06, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java, line 83&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53674#file53674line83&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53674#file53674line83&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Contents of put should be included.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-26 23:01:06, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 135&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53675#file53675line135&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53675#file53675line135&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     We can either add removeCoprocessor() to HTD or, persist a flag to tell ConstraintProcessor that it is disabled.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think the second approach may be better in our case.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;see comments on Gary&apos;s comments.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-26 23:01:06, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 140&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53675#file53675line140&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53675#file53675line140&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should be &apos;desc HTableDescriptor to read from&apos;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jesse&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review2870&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review2870&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-10-26 22:34:35, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-26 22:34:35)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13139100" author="jiraposter@reviews.apache.org" created="Sat, 29 Oct 2011 03:57:33 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-10-29 02:11:25, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Jessie, this looks like a pretty good start.  In addition to the individual comments, a couple of general questions:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; 1) Should ConstraintProcessor support some standard way of mapping Constraint implementations to the families/qualifiers they should apply to?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; 2) Should we ship a base set of Constraint implementations for common cases?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Even if the answer to both is &quot;yes&quot;, they could be addressed as follow-up JIRAs.  But it would be good to think through the end goal here.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;1) I was thinking an individual constriant could check any/all of the cf/cq being used. We can do it via (2) where we have an abstract Constraint that makes it easy to check a given cf/cq.&lt;/p&gt;

&lt;p&gt;So, no (kinda) and yes. For (2), I think it will be community usage/findings as to what people find useful - we can decide on a case-by-case basis if it is a valid contribution.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-29 02:11:25, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java, line 12&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53673#file53673line12&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53673#file53673line12&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is this true?  The HTD values are stored in a HashMap, so ordering wouldn&apos;t be preserved.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We can add order preserving, if that makes sense. I can see it for cases where you want to check the cheap constraints first and then do the expensive only if the other ones pass.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-29 02:11:25, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java, line 39&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53673#file53673line39&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53673#file53673line39&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should we define a base exception here that is thrown?  I&apos;m thinking something like:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     ConstraintViolationException extends DoNotRetryIOException&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This way we don&apos;t need to wrap in DoNotRetryIOException later and we give implementers a bit more guidance on what to do.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I wanted to let people throw whatever exception they wanted to so they can be specific as to what happened with minimal overhead. For instance, the IntegerConstraint lets the constraint just check to and then throw a NumberFormatException if it fails. However, the code for the user (the actual constraint implementation) is super concise and easy. &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-29 02:11:25, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java, line 80&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53674#file53674line80&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53674#file53674line80&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If we use a defined exception class for constraint violations (see comment above), I think we can omit this try/catch block.  Expected exceptions would already subclass DoNotRetryIOException, so no need to wrap it here.  Other (non-expected) Throwables would be handled higher up by RegionCoprocessorHost.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think that runtime exceptions on a constraint should be allowed to propagate up the CPHost  - if the constraint fails then that put should fail, but not anything else. &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-29 02:11:25, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 75&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53675#file53675line75&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53675#file53675line75&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think this and the other addConstraints() method could just be named add().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-29 02:11:25, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 124&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53675#file53675line124&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53675#file53675line124&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I get the idea of being able to enable/disable constraints on demand, without removing the individual constraints configured.  But why do we need this and the private addConstraintProcessor() method?  Why not move the addConstraintProcessor() implementation here and make addConstraints() call this instead?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Also, I would just name this enable().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1 That was some leftover cruft from development. &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-29 02:11:25, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 134&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53675#file53675line134&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53675#file53675line134&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     In addition to being able to disable constraint checking by removing the ConstraintProcessor CP, we probably also need a removeConstraints(HTableDescriptor) method that removes the ConstraintProcessor CP and all the &quot;constraint $&quot; attributes on HTD for complete cleanup.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     By the way, since the name of the class is Constraints, I think this method could just be named disable() &amp;#8211; the additional &quot;Constraints&quot; is redundant.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Just trying to be explicit with the naming.&lt;/p&gt;

&lt;p&gt;I like the idea of the remove, but we just need to make sure it gets well documented as to what happens - I could see a people being confused.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-29 02:11:25, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java, line 13&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53676#file53676line13&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53676#file53676line13&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is this intended as a test class or as a usable implementation?  If a test class, should be under src/test/java/...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If a usable implementation, then, looking at it, I wonder how useful it is without a way of mapping constraints to individual qualifiers.  Do you think that&apos;s something ConstraintProcessor should provide in general?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     It could be left up to end user implementations of Constraint to match which KeyValues they should apply to.  But then I don&apos;t think any implementations we can bundle will have much value, unless they provide for their own qualifier matching via configuration values.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Its meant to be both an example and a test util. I can move it into test, but I can see cases where people might want to just check to make sure they only store values. Yes, it a really simple use case, but it also helps people to build more complex ones&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-29 02:11:25, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java, line 23&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53676#file53676line23&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53676#file53676line23&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This doesn&apos;t seem right.  Wouldn&apos;t most ints be stored as Bytes.toBytes(int), not as a String?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, maybe. This is just an example. Depends on what people want to do...Maybe the fact that the impl can vary so widely makes the case for this to be a test class.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jesse&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review2917&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review2917&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-10-26 22:34:35, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-26 22:34:35)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13139101" author="yuzhihong@gmail.com" created="Sat, 29 Oct 2011 04:15:34 +0000"  >&lt;p&gt;To preserve order of constraints, we can embed their ordinal in HTD key prefix, such as &quot;constraint 1 $&quot;, &quot;constraint 2 $&quot;, etc.&lt;/p&gt;</comment>
                            <comment id="13139104" author="yuzhihong@gmail.com" created="Sat, 29 Oct 2011 04:20:28 +0000"  >&lt;p&gt;To enable/disable a constraint, the value (a Configuration object) for the key can carry a special entry:&lt;br/&gt;
&quot;hbase.constraint.enabled&quot; -&amp;gt; true/false&lt;/p&gt;

&lt;p&gt;This way the ordinal for the constraints would be preserved after arbitrary rounds of enabling/disabling.&lt;/p&gt;</comment>
                            <comment id="13139110" author="jesse_yates" created="Sat, 29 Oct 2011 04:43:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;To preserve order of constraints, we can embed their ordinal in HTD key prefix, such as &quot;constraint 1 $&quot;, &quot;constraint 2 $&quot;, etc.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Exactly what I was planning on doing and where I got the inspiration&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To enable/disable a constraint, the value (a Configuration object) for the key can carry a special entry:&lt;br/&gt;
&quot;hbase.constraint.enabled&quot; -&amp;gt; true/false&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was thinking I would just remove the constraint processor from the list of coprocessors. This also gives you complete control over runtime slowdown - if you want to enable constraints, you pay a price, but if not it shouldn&apos;t hurt the system speed at all. This would be a good idiom for later, CP based features to follow.&lt;br/&gt;
If we have the true/false it would require doing checking on the regionserver to see if constraints are enabled AND that the CP is loaded to have the same potential, which leads to a lot of code bloat.&lt;/p&gt;</comment>
                            <comment id="13139113" author="yuzhihong@gmail.com" created="Sat, 29 Oct 2011 05:01:06 +0000"  >&lt;p&gt;w.r.t. performance after several rounds of enabling/disabling, the following operations are both O(1):&lt;br/&gt;
1. retrieve Configuration object from HTD.values map for given Constraint&lt;br/&gt;
2. retrieve the boolean in this Configuration object for &quot;hbase.constraint.enabled&quot;&lt;/p&gt;

&lt;p&gt;There would be impact on performance if the number of constraints is high.&lt;/p&gt;</comment>
                            <comment id="13139313" author="yuzhihong@gmail.com" created="Sat, 29 Oct 2011 13:59:54 +0000"  >&lt;p&gt;Should we add method for enabling/disabling individual constraints to Constraints.java ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void enableConstraint(HTableDescriptor desc, &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;? &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Constraint&amp;gt; clazz) {
...
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void disableConstraint(HTableDescriptor desc, &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;? &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Constraint&amp;gt; clazz) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Using the above form, we cannot simply remove the constraint processor.&lt;br/&gt;
We shouldn&apos;t remove the constraint corresponding to clazz either because the constraint may have unique Configuration object associated with it.&lt;/p&gt;</comment>
                            <comment id="13139380" author="jesse_yates" created="Sat, 29 Oct 2011 17:32:08 +0000"  >&lt;blockquote&gt;
&lt;p&gt;w.r.t. performance after several rounds of enabling/disabling, the following operations are both O(1):&lt;br/&gt;
1. retrieve Configuration object from HTD.values map for given Constraint&lt;br/&gt;
2. retrieve the boolean in this Configuration object for &quot;hbase.constraint.enabled&quot;&lt;/p&gt;

&lt;p&gt;There would be impact on performance if the number of constraints is high.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was thinking you meant just using a boolean to enable/disable the entire constraint mechanism, rather than an individual constraint. It is faster to remove the ConstraintProcessor from the CP list as you save the method calls into to ConstraintProcessor to check the enabled/disabled boolean.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;Should we add method for enabling/disabling individual constraints to Constraints.java ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This starts to be a bit painful if we want to actually do enforcement of order of constraint application you have to traverse the entire map to check for values (however, if we assume that the map isn&apos;t big its not that big of a deal). However, I think, in general, that it is a good idea.&lt;/p&gt;

&lt;p&gt;I think we should also have a remove method as well as the disable method for individual constraints - this is more of a usage consideration rather than a runtime one. Say you added a constraint that was wrong -  removing it rather than disabling it is definitely necessary. &lt;/p&gt;

&lt;p&gt;Also, we should also consider having:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void setConfiguration(HTableDescriptor desc, &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;? &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Constraint&amp;gt; clazz, Configuration conf){}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That overrides the configuration set for a constraint.&lt;/p&gt;</comment>
                            <comment id="13139519" author="yuzhihong@gmail.com" created="Sun, 30 Oct 2011 01:58:47 +0000"  >&lt;p&gt;@Jesse:&lt;br/&gt;
You can decide what to put in this JIRA as long as future enhancement can be easily accommodated. &lt;/p&gt;</comment>
                            <comment id="13139709" author="jesse_yates" created="Sun, 30 Oct 2011 19:00:54 +0000"  >&lt;p&gt;@Ted: ok, fair enough. I&apos;m just trying to work through the possibilities and get feedback (thanks btw!).&lt;/p&gt;</comment>
                            <comment id="13139842" author="jiraposter@reviews.apache.org" created="Mon, 31 Oct 2011 00:50:32 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-10-31 00:48:49.738577)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Updated based on comments on the last patch and in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt; (corresponding JIRA).&lt;br/&gt;
Added feautures:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;enable&lt;/li&gt;
	&lt;li&gt;disable&lt;/li&gt;
	&lt;li&gt;remove&lt;/li&gt;
	&lt;li&gt;enable constraint&lt;/li&gt;
	&lt;li&gt;disable constraint&lt;/li&gt;
	&lt;li&gt;remove constraint&lt;/li&gt;
	&lt;li&gt;actually enforcing ordering of constraints based on add&lt;/li&gt;
	&lt;li&gt;update constraint&lt;/li&gt;
	&lt;li&gt;removal of CPs in HTD&lt;br/&gt;
Also, updated tests to cover new cases (which all pass locally).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Still TODO: tie constraints into shell&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;

&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;

&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jesse&lt;/p&gt;
</comment>
                            <comment id="13139843" author="jiraposter@reviews.apache.org" created="Mon, 31 Oct 2011 00:54:32 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review2934&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review2934&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment6568&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment6568&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whoops -  missed that one.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jesse&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-31 00:48:49, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-31 00:48:49)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13139854" author="yuzhihong@gmail.com" created="Mon, 31 Oct 2011 02:00:10 +0000"  >&lt;p&gt;In the above patch, why do we need two loops in Constraints.remove(HTableDescriptor) ?&lt;br/&gt;
Can we call desc.remove(e.getKey()) in the first loop ?&lt;/p&gt;</comment>
                            <comment id="13139858" author="yuzhihong@gmail.com" created="Mon, 31 Oct 2011 02:06:59 +0000"  >&lt;p&gt;I think the name of table should be added to the following exception:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Constraint: &quot;&lt;/span&gt; + clazz.getName()
          + &lt;span class=&quot;code-quote&quot;&gt;&quot; is not associated with &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; table.&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Constraints.getKeyValueForClass() may return null. I think we should check for null in remove(HTableDescriptor, Class):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     desc.remove(e.getKey().get());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and other methods.&lt;/p&gt;</comment>
                            <comment id="13139859" author="jesse_yates" created="Mon, 31 Oct 2011 02:08:59 +0000"  >&lt;p&gt;@Ted: concurrent modification exception - an inherent problem of using the iterator on the hash map (actually tried that first though &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)&lt;/p&gt;</comment>
                            <comment id="13139887" author="yuzhihong@gmail.com" created="Mon, 31 Oct 2011 03:28:42 +0000"  >&lt;p&gt;@Jesse:&lt;br/&gt;
I only see synchronized keyword on Constraints.add().&lt;br/&gt;
Have you tried using synchronization on other methods ?&lt;/p&gt;

&lt;p&gt;Also, HTableDescriptor.values is protected field. We can change its actual implementation to ConcurrentHashMap, etc to accommodate for the concurrency you described.&lt;/p&gt;

&lt;p&gt;If we store metadata about constraints in the Configuration object as I described @ 29/Oct/11 04:20, we utilize the available serialization mechanism.&lt;br/&gt;
The current approach deals with serialization itself. This is not as flexible as the above approach.&lt;/p&gt;</comment>
                            <comment id="13140503" author="jiraposter@reviews.apache.org" created="Mon, 31 Oct 2011 19:55:32 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-10-29 02:11:25, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Jessie, this looks like a pretty good start.  In addition to the individual comments, a couple of general questions:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; 1) Should ConstraintProcessor support some standard way of mapping Constraint implementations to the families/qualifiers they should apply to?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; 2) Should we ship a base set of Constraint implementations for common cases?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Even if the answer to both is &quot;yes&quot;, they could be addressed as follow-up JIRAs.  But it would be good to think through the end goal here.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;1) I was thinking an individual constriant could check any/all of the cf/cq being used. We can do it via (2) where we have an abstract Constraint that makes it easy to check a given cf/cq.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;So, no (kinda) and yes. For (2), I think it will be community usage/findings as to what people find useful - we can decide on a case-by-case basis if it is a valid contribution.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Okay, seems fine to me.  Just wanted to raise the questions.  &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-29 02:11:25, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java, line 80&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53674#file53674line80&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53674#file53674line80&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If we use a defined exception class for constraint violations (see comment above), I think we can omit this try/catch block.  Expected exceptions would already subclass DoNotRetryIOException, so no need to wrap it here.  Other (non-expected) Throwables would be handled higher up by RegionCoprocessorHost.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I don&apos;t think that runtime exceptions on a constraint should be allowed to propagate up the CPHost  - if the constraint fails then that put should fail, but not anything else.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Some runtime exceptions could indicate programming errors or bugs, in which case I think it&apos;s best to handle them the same way we handle unexpected errors in coprocessors &amp;#8211; by either unloading or aborting, depending on configuration.  We need to be careful for what we allow from user code running in process on region servers.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-29 02:11:25, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java, line 13&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53676#file53676line13&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53676#file53676line13&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is this intended as a test class or as a usable implementation?  If a test class, should be under src/test/java/...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If a usable implementation, then, looking at it, I wonder how useful it is without a way of mapping constraints to individual qualifiers.  Do you think that&apos;s something ConstraintProcessor should provide in general?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     It could be left up to end user implementations of Constraint to match which KeyValues they should apply to.  But then I don&apos;t think any implementations we can bundle will have much value, unless they provide for their own qualifier matching via configuration values.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Its meant to be both an example and a test util. I can move it into test, but I can see cases where people might want to just check to make sure they only store values. Yes, it a really simple use case, but it also helps people to build more complex ones&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maybe it should just go in the documentation then?  Either in package level javadoc or a section of the HBase book?  Maybe longer term we need a separate &quot;examples&quot; maven module for this and other extensions points.  But the current implementation doesn&apos;t seem useful out of the box, since it forces integers to be stored as strings...  in order to check that they&apos;re integers.  Seems odd.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-10-29 02:11:25, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java, line 39&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/1/?file=53673#file53673line39&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/1/?file=53673#file53673line39&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should we define a base exception here that is thrown?  I&apos;m thinking something like:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     ConstraintViolationException extends DoNotRetryIOException&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This way we don&apos;t need to wrap in DoNotRetryIOException later and we give implementers a bit more guidance on what to do.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I wanted to let people throw whatever exception they wanted to so they can be specific as to what happened with minimal overhead. For instance, the IntegerConstraint lets the constraint just check to and then throw a NumberFormatException if it fails. However, the code for the user (the actual constraint implementation) is super concise and easy.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I disagree here.  Treating all possible exceptions the same seems wrong.  An OutOfMemoryError is not equivalent to a NumberFormatException.  We need some structure in place for what types of errors are allowed/expected, instead of swallowing everything and assuming it&apos;s just a constraint violation.  I don&apos;t think asking the Constraint implementations to think about what errors they want to throw is much of a burden.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review2917&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review2917&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-10-31 00:48:49, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-31 00:48:49)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13145266" author="jesse_yates" created="Mon, 7 Nov 2011 07:23:53 +0000"  >&lt;p&gt;@Ted:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I only see synchronized keyword on Constraints.add().&lt;br/&gt;
Have you tried using synchronization on other methods ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No I haven&apos;t, but this was the beginnings of making the setting synchronized. However, after thinking about it, that doesn&apos;t really make all that much sense for a bunch of static setting methods. I was going to push this off onto the user.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Also, HTableDescriptor.values is protected field. We can change its actual implementation to ConcurrentHashMap, etc to accommodate for the concurrency you described.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Seems a little excessive especially since all the synchronization on HTD has been done by users when necessary in the past. My hunch is that this is rarely an issue.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If we store metadata about constraints in the Configuration object as I described @ 29/Oct/11 04:20, we utilize the available serialization mechanism.&lt;br/&gt;
The current approach deals with serialization itself. This is not as flexible as the above approach.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 Making the changes. My initial thought was to mimic how CPs are added to the table, which handle writing their own bytes. But, yeah your recommendation would be makes it much easier (and consistent).&lt;/p&gt;

&lt;p&gt;@Gary:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some runtime exceptions could indicate programming errors or bugs, in which case I think it&apos;s best to handle them the same way we handle unexpected errors in coprocessors &#8211; by either unloading or aborting, depending on configuration. We need to be careful for what we allow from user code running in process on region servers.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;AND&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I disagree here. Treating all possible exceptions the same seems wrong. An OutOfMemoryError is not equivalent to a NumberFormatException. We need some structure in place for what types of errors are allowed/expected, instead of swallowing everything and assuming it&apos;s just a constraint violation. I don&apos;t think asking the Constraint implementations to think about what errors they want to throw is much of a burden.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 having the user propagate a DoNoRetryException subclass (eg. ConstraintException) - you make a good point. Working on the best way to handle unload/total failure.&lt;/p&gt;

&lt;blockquote&gt;&lt;/blockquote&gt;
&lt;p&gt;Sometimes people do weird things (I&apos;ve seen people doing exactly what I was testing against), so while ugly, is not unheard of. An examples module would be great - I&apos;ll comment on 4336 about that. In the mean time, maybe just having an examples package (main/java/&#8230;hbase.constraint.examples) that can be updated as people find more uses for constraints? Though I&apos;m not adverse to the book either.&lt;/p&gt;</comment>
                            <comment id="13151892" author="jiraposter@reviews.apache.org" created="Thu, 17 Nov 2011 07:54:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-11-17 07:53:56.106789)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Based on Ted&apos;s suggestion of using the inherent serialization in HTD, I attempted to switch over. However, this was met with some problems of going to/from String/byte[] in the value. This lead to the large number of changes in the current patch.&lt;/p&gt;

&lt;p&gt;Essentially, I abstracted out the serialization/deserialization mechanism from the methods into two sets of guava functions (one set for keys, one for values) so we can encapsulate the serialization and in the future make it easier to change. With this encapsulation, I also updated the way CPs are stored to also use the built-in HTD serialization/deserialization mechanisms. &lt;/p&gt;

&lt;p&gt;This patch also attempts to fix the remaining issues recently brought up in 4605, namely:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Using a ConstraintException to specify an allowed constraint&lt;/li&gt;
	&lt;li&gt;Just unloading the entire ConstraintProcessor on a runtimeexception&lt;/li&gt;
	&lt;li&gt;dropping all the attempts at making Constraints (the class) thread safe&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m working on the shell stuff (been busy), but figured I would throw this up in the meantime so we can get the java stuff solid.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;

&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;

&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/PerformanceEvaluation.java ef47d0d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jesse&lt;/p&gt;
</comment>
                            <comment id="13152148" author="yuzhihong@gmail.com" created="Thu, 17 Nov 2011 17:26:03 +0000"  >&lt;p&gt;I got compilation error trying to run integration test:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.0.2:testCompile (&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;-testCompile) on project hbase: Compilation failure: Compilation failure:
[ERROR] /Users/zhihyu/trunk-hbase/src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java:[107,26] cannot find symbol
[ERROR] symbol  : class AllFailConstraint
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13152166" author="yuzhihong@gmail.com" created="Thu, 17 Nov 2011 18:03:45 +0000"  >&lt;p&gt;I went through HTableDescriptor where the serialization/deserialization logic is defined.&lt;/p&gt;

&lt;p&gt;SERIALIZE_KEY and SERIALIZE_VALUE perform the same transformation. I think they should be combined into one Function, possibly named serializer so that naming for Functions is consistent (with transformToStrings).&lt;br/&gt;
Same with DESERIALIZE_KEY and DESERIALIZE_VALUE.&lt;/p&gt;

&lt;p&gt;getValueAsBytes() is only used once. I think we can just inline what it does in getKeyValueForClass().&lt;/p&gt;</comment>
                            <comment id="13152226" author="jesse_yates" created="Thu, 17 Nov 2011 18:52:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;I got compilation error trying to run integration test:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hmmm, something was a little wonky - had test/ excluded to ignore some build issues, but that neglected all the tests I added. But FWIW it passes locally &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Throwing up the correct version momentarily&lt;/p&gt;

&lt;p&gt;Also, please ignore package-info.java - its on the TODO list and just using a placeholder for the moment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SERIALIZE_KEY and SERIALIZE_VALUE perform the same transformation. I think they should be combined into one Function, possibly named serializer so that naming for Functions is consistent (with transformToStrings).&lt;br/&gt;
Same with DESERIALIZE_KEY and DESERIALIZE_VALUE.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was thinking it would be better to split them into two different elements since we may want to change how we do the serialization for each in the future, and having the independence makes it much easier to swap and adds negligible overhead.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;getValueAsBytes() is only used once. I think we can just inline what it does in getKeyValueForClass().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1 thought it might be useful later, but we can always add it as needed. Making the fix in the latest patch.&lt;/p&gt;</comment>
                            <comment id="13152233" author="jiraposter@reviews.apache.org" created="Thu, 17 Nov 2011 18:56:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-11-17 18:56:42.730664)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adding in test classes that we accidentally dropped in last patch.&lt;/p&gt;

&lt;p&gt;Also, removing HTableDescriptor.getValueAsBytes(String) in favor of on demand, in-line conversion using static calls.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;

&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;

&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/TestIntegerConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jesse&lt;/p&gt;
</comment>
                            <comment id="13152312" author="jiraposter@reviews.apache.org" created="Thu, 17 Nov 2011 20:52:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3324&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3324&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Quick question:  the security coprocessor lives in a separate directory &amp;#8211; /security/src/... &amp;#8212; should this coprocessor live in its own as well?  &lt;/p&gt;

&lt;p&gt;These coprocessors could eventually be put into separate submodules to keep the core thinner.  &lt;/p&gt;

&lt;p&gt;This could likely be handled by follow on jira.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;jmhsieh&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-17 18:56:42, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-17 18:56:42)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestIntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13152368" author="jiraposter@reviews.apache.org" created="Thu, 17 Nov 2011 21:45:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-17 20:51:45, jmhsieh wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Quick question:  the security coprocessor lives in a separate directory &amp;#8211; /security/src/... &amp;#8212; should this coprocessor live in its own as well?  &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; These coprocessors could eventually be put into separate submodules to keep the core thinner.  &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; This could likely be handled by follow on jira.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was debating the idea of moving into it&apos;s own module. However, that feels a bit heavy weight for what is honestly just a handful of classes.&lt;/p&gt;

&lt;p&gt;There could also be the argument that constraints need to be &apos;core&apos; piece of a database (at least that is the feeling I get from many ex-SQLers). &lt;/p&gt;

&lt;p&gt;Follow on ticket would be a good place, if we decide its the right move - pulling it out wouldn&apos;t be that bad.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jesse&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3324&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3324&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-17 18:56:42, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-17 18:56:42)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestIntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13152381" author="yuzhihong@gmail.com" created="Thu, 17 Nov 2011 21:58:16 +0000"  >&lt;p&gt;I got the following for patch v5:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
testEnableDisableRemove(org.apache.hadoop.hbase.constraint.TestConstraints)  Time elapsed: 0.005 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
java.lang.NullPointerException
  at org.apache.hadoop.hbase.util.Bytes.toBytes(Bytes.java:425)
  at org.apache.hadoop.hbase.HTableDescriptor$3.apply(HTableDescriptor.java:1153)
  at org.apache.hadoop.hbase.HTableDescriptor$3.apply(HTableDescriptor.java:1150)
  at org.apache.hadoop.hbase.constraint.Constraints.getKeyValueForClass(Constraints.java:151)
  at org.apache.hadoop.hbase.constraint.Constraints.has(Constraints.java:137)
  at org.apache.hadoop.hbase.constraint.TestConstraints.testEnableDisableRemove(TestConstraints.java:121)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  testIntegerConstraint(org.apache.hadoop.hbase.constraint.TestIntegerConstraint): Unexpected exception, expected&amp;lt;java.lang.NumberFormatException&amp;gt; but was&amp;lt;org.apache.hadoop.hbase.constraint.ConstraintException&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13152390" author="jesse_yates" created="Thu, 17 Nov 2011 22:08:03 +0000"  >&lt;p&gt;Sorry about the quality of these patches Ted, something must be messed up with my IDE to not be catching some of this...&lt;/p&gt;

&lt;p&gt;Anyways, yes, your right, that is broken. Comes from the switch to throwing the ConstraintException rather allowing an exception to be thrown.&lt;/p&gt;

&lt;p&gt;Also, it looks like testEnableDisableRemove has gotten messed up from dropping the getValueAsBytes(). Fixing and reposting.&lt;/p&gt;</comment>
                            <comment id="13152400" author="jiraposter@reviews.apache.org" created="Thu, 17 Nov 2011 22:23:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-11-17 22:23:09.015159)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Fixed test bugs from last 2 sets of changes (thx Ted!).&lt;/p&gt;

&lt;p&gt;Ran tests: mvn clean test -Dtest=&lt;b&gt;Constraint&lt;/b&gt; &lt;br/&gt;
They all pass locally.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;

&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;

&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/TestIntegerConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jesse&lt;/p&gt;
</comment>
                            <comment id="13156280" author="yuzhihong@gmail.com" created="Wed, 23 Nov 2011 21:09:40 +0000"  >&lt;p&gt;@Jesse:&lt;br/&gt;
Patch v6 doesn&apos;t apply cleanly:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Hunk #13 FAILED at 1135.
1 out of 13 hunks FAILED -- saving rejects to file src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java.rej
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Do you mind uploading a patch (--no-prefix) which applies to TRUNK so that HadoopQA can run through it ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13156287" author="jesse_yates" created="Wed, 23 Nov 2011 21:17:15 +0000"  >&lt;p&gt;Yeah, sure. I actually just ran into the same issue trying to work on the shell stuff. &lt;/p&gt;

&lt;p&gt;Pushing up new version shortly.&lt;/p&gt;</comment>
                            <comment id="13156290" author="jiraposter@reviews.apache.org" created="Wed, 23 Nov 2011 21:20:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-11-23 21:19:56.263794)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Updating to current trunk to take into account changes in HTD and for Hadoop QA. Otherwise, no changes from last diff.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;

&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;

&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/TestIntegerConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jesse&lt;/p&gt;
</comment>
                            <comment id="13156318" author="yuzhihong@gmail.com" created="Wed, 23 Nov 2011 21:49:10 +0000"  >&lt;p&gt;Patch testing v7.&lt;/p&gt;</comment>
                            <comment id="13158118" author="jesse_yates" created="Mon, 28 Nov 2011 00:45:01 +0000"  >&lt;p&gt;Attaching patch.&lt;/p&gt;

&lt;p&gt;Includes java implementation and documentation.&lt;/p&gt;

&lt;p&gt;Moving shell modification to a follow-on ticket.&lt;/p&gt;</comment>
                            <comment id="13158124" author="jesse_yates" created="Mon, 28 Nov 2011 00:58:42 +0000"  >&lt;p&gt;oops, wrong file. This should be right.&lt;/p&gt;</comment>
                            <comment id="13158128" author="jesse_yates" created="Mon, 28 Nov 2011 01:09:50 +0000"  >&lt;p&gt;Forgot --no-prefix. Let&apos;s try this again.&lt;/p&gt;</comment>
                            <comment id="13158139" author="hadoopqa" created="Mon, 28 Nov 2011 01:54:37 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12505280/java_HBASE-4605_v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12505280/java_HBASE-4605_v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -162 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 69 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestRollingRestart&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestRegionSplitter&lt;br/&gt;
                  org.apache.hadoop.hbase.io.hfile.TestLruBlockCache&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/386//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/386//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/386//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/386//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/386//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/386//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13158215" author="jesse_yates" created="Mon, 28 Nov 2011 06:33:22 +0000"  >&lt;p&gt;Hmmm, so it looks like most of them failed. So far, its passing on my local machine (OSX). Could this be a build system overload issue? Or something along those lines?&lt;/p&gt;</comment>
                            <comment id="13158227" author="yuzhihong@gmail.com" created="Mon, 28 Nov 2011 06:39:02 +0000"  >&lt;p&gt;From &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/386//testReport/org.apache.hadoop.hbase/TestRegionRebalancing/org_apache_hadoop_hbase_TestRegionRebalancing/:&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/386//testReport/org.apache.hadoop.hbase/TestRegionRebalancing/org_apache_hadoop_hbase_TestRegionRebalancing/:&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.OutOfMemoryError: unable to create &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;native&lt;/span&gt; thread
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Report from HadoopQA was not reliable these days.&lt;/p&gt;</comment>
                            <comment id="13158947" author="yuzhihong@gmail.com" created="Mon, 28 Nov 2011 23:46:41 +0000"  >&lt;p&gt;About the changes to book.xml:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    Constraints could be also be used to ...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above should read &apos;Constraints could also be used to&apos;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
where that checking enabled
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above should read &apos;where integrity checking is enabled&apos;&lt;/p&gt;</comment>
                            <comment id="13159153" author="jiraposter@reviews.apache.org" created="Tue, 29 Nov 2011 08:37:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3551&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3551&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Most of what I see is just style issues, and a number of the HTableDescriptor changes seem unnecessary.  If we clean up those, and assuming the latest patch has some documentation, I think this is looking pretty good.&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment7921&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment7921&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Nice addition to have&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment7913&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment7913&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I don&apos;t see why these changes are necessary when I don&apos;t see them being used anywhere outside of HTD?  Do these additions buy us anything?  In my opinion, they&apos;re not making the code any clearer than the current Byte.toString(), etc.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment7916&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment7916&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    style nit: if body should be contained in braces&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment7914&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment7914&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Add constraints.size() to this message and you don&apos;t need the separate LOG.debug() message.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment7912&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment7912&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    style nit: for loop body should be enclosed in braces&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment7917&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment7917&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I see the usage outside of HTD now, but still don&apos;t see where this provides more utility than Bytes.toString()&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment7918&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment7918&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Be consistent with braces here&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment7915&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment7915&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    if / else bodies should be contained in braces.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment7922&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment7922&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This still seems odd to me.  I can&apos;t see storing an integer value encoded as a string, in order to be able to check for it being a valid integer.&lt;/p&gt;

&lt;p&gt;    I would think most users would be storing integer values using Bytes.toInt(), for which the checks here would not work.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment7919&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment7919&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This differs from what seems to be the latest patch in JIRA (java_&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;_v3.txt).  Are there other differences than the javadoc?&lt;/p&gt;

&lt;p&gt;    For a patch of this size, review still belongs here in review board (even with HadoopQA patch testing), so we should keep both versions in sync.  Please update the diff here with the latest patch.&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment7920&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment7920&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    brace alignment and indentation&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-23 21:19:56, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-23 21:19:56)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestIntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13159508" author="jiraposter@reviews.apache.org" created="Tue, 29 Nov 2011 20:09:40 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-29 08:36:29, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Most of what I see is just style issues, and a number of the HTableDescriptor changes seem unnecessary.  If we clean up those, and assuming the latest patch has some documentation, I think this is looking pretty good.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Uploading the latest (with some of your recommended changes) after this. Couple of concerns may still need to be worked out around IntegerConstraint and the mods to HTD. Let me know what you think.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-29 08:36:29, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/package-info.java, line 22&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/6/?file=59947#file59947line22&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/6/?file=59947#file59947line22&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This differs from what seems to be the latest patch in JIRA (java_&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;_v3.txt).  Are there other differences than the javadoc?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     For a patch of this size, review still belongs here in review board (even with HadoopQA patch testing), so we should keep both versions in sync.  Please update the diff here with the latest patch.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, this is the old version. Whats up on the ticket is just documentation. I&apos;ll put up the latest here after making the changes.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-29 08:36:29, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 250&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/6/?file=59945#file59945line250&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/6/?file=59945#file59945line250&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     if / else bodies should be contained in braces.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;done.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-29 08:36:29, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 233&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/6/?file=59945#file59945line233&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/6/?file=59945#file59945line233&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Be consistent with braces here&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Just following the requirements of java &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Done.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-29 08:36:29, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 22&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/6/?file=59945#file59945line22&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/6/?file=59945#file59945line22&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I see the usage outside of HTD now, but still don&apos;t see where this provides more utility than Bytes.toString()&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;By pulling the functionality out of the HTD we can be sure that outside classes don&apos;t have to worry about making sure they use the &apos;right&apos; (de)serialization of they keys. Right now we don&apos;t want to to anything more than just Bytes.toString(), but in the future we could make it something more complex. For example, take the case where user specified keys are prepended with a special identifier, so we can tell the difference between the two. Alternatively, we could do some cool stuff to cut down on object creation (potentially) with the key conversion or make it faster or more compact or w/e. &lt;/p&gt;


&lt;p&gt;Basically, I&apos;m just adding the encapsulation so classes outside of the HTD don&apos;t have to know about the fact that the HTD is using Bytes.toString() (and encapsulation is good, right?). This way it is obvious, to an outside class, what is going - oh, it just serializing the key. This makes the addCP code much cleaner too. &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-29 08:36:29, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java, line 86&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/6/?file=59944#file59944line86&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/6/?file=59944#file59944line86&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     style nit: for loop body should be enclosed in braces&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-29 08:36:29, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java, line 76&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/6/?file=59944#file59944line76&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/6/?file=59944#file59944line76&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Add constraints.size() to this message and you don&apos;t need the separate LOG.debug() message.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-29 08:36:29, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java, line 61&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/6/?file=59944#file59944line61&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/6/?file=59944#file59944line61&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     style nit: if body should be contained in braces&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-29 08:36:29, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java, line 32&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/6/?file=59946#file59946line32&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/6/?file=59946#file59946line32&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This still seems odd to me.  I can&apos;t see storing an integer value encoded as a string, in order to be able to check for it being a valid integer.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I would think most users would be storing integer values using Bytes.toInt(), for which the checks here would not work.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The only problem with using the Bytes deserialization checking is that even if you put a string in as bytes, it can be read out as an integer (in certain cases). Therefore, you could get a case where something that should not be an integer is allowed when it really ought not to be.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-29 08:36:29, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java, line 90&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/6/?file=59954#file59954line90&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/6/?file=59954#file59954line90&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     brace alignment and indentation&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-29 08:36:29, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java, line 1166&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/6/?file=59940#file59940line1166&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/6/?file=59940#file59940line1166&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I don&apos;t see why these changes are necessary when I don&apos;t see them being used anywhere outside of HTD?  Do these additions buy us anything?  In my opinion, they&apos;re not making the code any clearer than the current Byte.toString(), etc.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;See response below.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jesse&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3551&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3551&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-23 21:19:56, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-23 21:19:56)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestIntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13159513" author="jesse_yates" created="Tue, 29 Nov 2011 20:21:15 +0000"  >&lt;p&gt;Latest patch does &lt;em&gt;not&lt;/em&gt; have labeling of tests since I wanted to wait and see what dev@ thinks about the latest testing stuff.&lt;/p&gt;</comment>
                            <comment id="13159516" author="jiraposter@reviews.apache.org" created="Tue, 29 Nov 2011 20:21:41 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-11-29 20:19:41.250509)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Updating to incorporate Gary and Ted&apos;s latest (as of 11/29) comments.&lt;/p&gt;

&lt;p&gt;Mostly cleanup in syntax. Also pushing up latest documentation changes that we previously on the Jira.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;

&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;

&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/docbkx/book.xml 3c12169 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/TestIntegerConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jesse&lt;/p&gt;
</comment>
                            <comment id="13162559" author="jiraposter@reviews.apache.org" created="Mon, 5 Dec 2011 01:53:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3610&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3610&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Main concerns as same as previously &amp;#8211; the HTableDescriptor changes and IntegerConstraint:&lt;/p&gt;

&lt;p&gt;1) HTD changes introduce a dependency on Guava.  I thought we had eliminated all client-side dependencies on Guava?&lt;br/&gt;
2) I think serializing constraint configurations as XML would be useful, as they would then be human readable and require less care to preserve previous serialization formats on upgrade when the property implementations change.&lt;br/&gt;
3) I&apos;m still not seeing the use of IntegerConstraint as the one Constraint implementation that we ship as part of core (as opposed to it being an example for documentation).  Is there a specific use where you&apos;re targeting this?&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8047&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8047&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I still don&apos;t think this gives us true encapsulation, since the HTD.setValue() allows arbitrary byte[] for values, so there&apos;s no way of knowing if (DE)SERIALIZE_KEY was actually used.  So is this really better than Bytes.toString()?&lt;/p&gt;

&lt;p&gt;    I also thought that we had eliminated Guava as a client side dependency?  This would re-introduce it.  That seems the bigger concern unless we&apos;ve agreed to a client-side Guava dependency somewhere.&lt;/p&gt;

&lt;p&gt;    Why not handle the values as Strings and serialize the Contraint configuration objects as XML?  In this case, I think human readable is actually good.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8059&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8059&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Omit copyright line&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8058&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8058&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Omit copyright line&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8055&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8055&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should constraints apply to Increments and Deletes as well?  I don&apos;t know if they should or not, and even if they do, it doesn&apos;t need to be part of this issue.  Just something to consider.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8057&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8057&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Omit copyright line&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8056&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8056&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Copyright line not necessary in file headers.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8060&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8060&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Having HTD.getValue() convert to String here and then immediately converting back to byte[] is odd.  I think either add HTD.getValueAsBytes() returning the raw byte[] or serialize the Configuration as XML as I suggested and just handle it as a String here.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8053&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8053&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    The manual serialization of properties here seems likely to be brittle and subject to breakage on upgrade if the implementation changes (unless backwards compatibility is explicitly accounted for).&lt;/p&gt;

&lt;p&gt;    This actually seems like a decent case for using the Configuration class&apos; XML serialization support.  The output will be much larger, but more resistant to changes in the properties serialized.  Just clone the input configuration object, set the &quot;enabled&quot; and &quot;priority&quot; properties under known keys, and serialize to a string using Configuration.writeXML().&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8054&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8054&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is there a reason why this has to be included in code as a built in constraint implementation (the only one), instead of just included in documentation as an example?&lt;/p&gt;

&lt;p&gt;    As an example it makes sense to me.  As a the only built-in, it doesn&apos;t, since the way it requires integers to be stored is at odds with all current usage, as I&apos;ve previously point out.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-29 20:19:41, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-29 20:19:41)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/docbkx/book.xml 3c12169 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestIntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13162565" author="yuzhihong@gmail.com" created="Mon, 5 Dec 2011 02:26:26 +0000"  >&lt;p&gt;Thanks Gary for the detailed review.&lt;br/&gt;
For the check() API:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void check(Put p) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ConstraintException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We can abstract the input parameter as Mutation.&lt;/p&gt;

&lt;p&gt;I think we need to reach agreement on the following major issues:&lt;br/&gt;
1. introduction of dependency of Guava in client library - Jonathan Gray would strongly disagree with this practice.&lt;br/&gt;
2. whether IntegerConstraint should be included in the constraint package&lt;br/&gt;
3. constraint configuration serialization method&lt;/p&gt;

&lt;p&gt;If the current implementation for some of the above isn&apos;t critical to this feature (#1 and #2), we can defer to future JIRAs.&lt;/p&gt;

&lt;p&gt;Actually a fourth issue (raised by Suraj under the discussion of &apos;Question on Coprocessors and Atomicity&apos;) is more important: if we don&apos;t provide atomicity by holding rowlock during the check, the use cases for Constraints would decrease.&lt;br/&gt;
Issue #4 definitely doesn&apos;t have to be covered by this JIRA.&lt;/p&gt;

&lt;p&gt;The fifth issue is how IntegrationTestConstraint.java should be tagged.&lt;/p&gt;</comment>
                            <comment id="13163923" author="jiraposter@reviews.apache.org" created="Tue, 6 Dec 2011 22:28:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3653&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3653&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Answering most of the big issues on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt; since there is a clean summary there by Ted. &lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8150&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8150&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Done&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8151&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8151&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Done&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8153&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8153&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    this could definitely be an extension. +1 on future considerations.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8152&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8152&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Done&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8154&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8154&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    done&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8147&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8147&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think we pulled getValueAsBytes() from HTD since this was the only use case. Agreed that it is a bit awkward, but we figured that since this is really the only use case for it, it didn&apos;t make sense to keep that function around. &lt;/p&gt;

&lt;p&gt;    Adding this back in makes it easier to remove guava, since that ser/deser can be kept entirely under the covers. &lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8148&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8148&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    +1 on using the configuration.&lt;/p&gt;

&lt;p&gt;    Originally, this was done to ensure that the configuration could be completely open to the user, but constraining (no pun intended) the conf by a couple values is not a big deal.&lt;/p&gt;

&lt;p&gt;    However, again we are at the question of keeping it human readable or not. See top comment.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8149&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8149&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Moved to documentation.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jesse&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-29 20:19:41, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-29 20:19:41)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/docbkx/book.xml 3c12169 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/IntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/IntegrationTestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestIntegerConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13163926" author="jesse_yates" created="Tue, 6 Dec 2011 22:29:55 +0000"  >&lt;p&gt;@Gary:&lt;br/&gt;
Guava-  I didn&apos;t know about the effort to get rid of guava client side, it can be pulled if it is really a big issue. I just read through 3264 - is it the case that only the client side dependencies are used for the MR stuff? For this it works out really nicely for doing the auto-serializing (see changes to the CP stuff). We could say that the set bytes for key is at your own risk, and make strings the default.&lt;/p&gt;

&lt;p&gt;getValueAsBytes() - this was -1&apos;ed in a previous iteration as constraints was the only use case for it - wrapping it with the explicit functions seemed a decent solution.&lt;/p&gt;

&lt;p&gt;Configuration - As far as human readable, how often are people going to need to check those values? The HTD already just keeps around bytes, so people don&apos;t check those over the wire - constraints would remain in the same style.&lt;br/&gt;
How would you feel about making that configurable? I&apos;m thinking setting a debug flag in Constraints/configuration for that value.&lt;/p&gt;

&lt;p&gt;check(Put) - this could definitely be an extension. +1 on future considerations.&lt;/p&gt;

&lt;p&gt;IntegerConstraint - In the end, I can let this go. You&apos;re right that having in the docs should be enough. Also, combined with the fact that we don&apos;t have any others by default (and that removing is far harder than adding) I&apos;ll drop it into just the docs&lt;/p&gt;

&lt;p&gt;@Ted:&lt;/p&gt;

&lt;p&gt;IntegrationTestConstraint - based on the recent discussion on dev@ about testing, this should be renamed to just TestConstraint and labeled as @MediumTest. The rest should be moved to @SmallTest&lt;/p&gt;

&lt;p&gt;Atomicity - since per-row modifications are done essentially serially on the region, is this really that big of an issue? If not, then another jira isn&apos;t a necessary, but maybe something to consider going forward. Taking the row lock is going to be a big slowdown - it just depends on what the common use case is going to be.&lt;/p&gt;

&lt;p&gt;(this is reproducing a some of what was commented on RB, but is nice to have succinctly). &lt;/p&gt;</comment>
                            <comment id="13163939" author="yuzhihong@gmail.com" created="Tue, 6 Dec 2011 22:44:47 +0000"  >&lt;p&gt;Renaming IntegrationTestConstraint as described above makes sense.&lt;/p&gt;

&lt;p&gt;Thanks Jesse.&lt;/p&gt;</comment>
                            <comment id="13163944" author="zhihyu@ebaysf.com" created="Tue, 6 Dec 2011 22:53:44 +0000"  >&lt;p&gt;w.r.t. atomicity, it is outside the initial scope of this JIRA.&lt;/p&gt;</comment>
                            <comment id="13164765" author="hadoopqa" created="Wed, 7 Dec 2011 22:10:01 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12505280/java_HBASE-4605_v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12505280/java_HBASE-4605_v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -160 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 74 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/465//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/465//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/465//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/465//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/465//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/465//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13168145" author="ghelmling" created="Tue, 13 Dec 2011 05:46:19 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Guava- I didn&apos;t know about the effort to get rid of guava client side, it can be pulled if it is really a big issue. I just read through 3264 - is it the case that only the client side dependencies are used for the MR stuff? For this it works out really nicely for doing the auto-serializing (see changes to the CP stuff). We could say that the set bytes for key is at your own risk, and make strings the default.&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;getValueAsBytes() - this was -1&apos;ed in a previous iteration as constraints was the only use case for it - wrapping it with the explicit functions seemed a decent solution.&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;Configuration - As far as human readable, how often are people going to need to check those values? The HTD already just keeps around bytes, so people don&apos;t check those over the wire - constraints would remain in the same style.&lt;br/&gt;
How would you feel about making that configurable? I&apos;m thinking setting a debug flag in Constraints/configuration for that value.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Wouldn&apos;t all of these parts be solved by just serializing the Configuration as XML?  Then it&apos;s treated as a string and you don&apos;t need the HTD changes that introduce Guava, or getValueAsBytes(), and you get human readability as a nice side-effect.  I don&apos;t see any benefit to serializing Configuration as a Writable, given these issues.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;check(Put) - this could definitely be an extension. +1 on future considerations.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree that this extending constraints to cover &lt;tt&gt;Delete&lt;/tt&gt; and &lt;tt&gt;Increment&lt;/tt&gt; could be handled as additional issues.  I just wanted to raise the question.  It&apos;s worth thinking about here, since this is introducing a new client-exposed API.  But there&apos;s still time to make additions if desired prior to 0.94.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;IntegerConstraint - In the end, I can let this go. You&apos;re right that having in the docs should be enough. Also, combined with the fact that we don&apos;t have any others by default (and that removing is far harder than adding) I&apos;ll drop it into just the docs&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks, I think it&apos;s a valuable example.&lt;/p&gt;</comment>
                            <comment id="13168752" author="jiraposter@reviews.apache.org" created="Tue, 13 Dec 2011 21:39:30 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-12-13 21:38:03.559611)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Making changes as per last comments on last diff:&lt;br/&gt;
1) Removing copywrite lines&lt;br/&gt;
2) Adding test categorization&lt;br/&gt;
3) Removing guava from HTD&lt;br/&gt;
4) Serializing conf to xml&lt;br/&gt;
5) Moving integerConstraint to package-info&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;

&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;

&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/docbkx/book.xml 9617950 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jesse&lt;/p&gt;
</comment>
                            <comment id="13168760" author="jesse_yates" created="Tue, 13 Dec 2011 21:47:21 +0000"  >&lt;p&gt;For Hadoop-QA&lt;/p&gt;</comment>
                            <comment id="13168910" author="zhihyu@ebaysf.com" created="Wed, 14 Dec 2011 00:08:50 +0000"  >&lt;p&gt;The above message from QA meant that the patch must be applied with -p1.&lt;/p&gt;

&lt;p&gt;I tried to produce a patch which can be applied with -p0 but I got:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
patching file src/docbkx/book.xml
Reversed (or previously applied) patch detected!  Assume -R? [n] 
Apply anyway? [n] 
Skipping patch.
1 out of 1 hunk ignored -- saving rejects to file src/docbkx/book.xml.rej
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;@Jesse:&lt;br/&gt;
Do you mind refreshing your patch using --no-prefix ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13168926" author="jiraposter@reviews.apache.org" created="Wed, 14 Dec 2011 00:42:30 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3897&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3897&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8770&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8770&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Multiple Constraints are supported. Please update javadoc.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8772&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8772&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Priority is updated at the end.&lt;br/&gt;
    I think we should document concurrency assumption in javadoc.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8768&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8768&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can we call ByteArrayOutputStream.toString() directly ?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8769&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8769&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    The dash is not needed.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-12-13 21:38:03, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:38:03)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/docbkx/book.xml 9617950 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13168928" author="jesse_yates" created="Wed, 14 Dec 2011 00:45:12 +0000"  >&lt;p&gt;Ok, this time --no-prefix (duh).&lt;/p&gt;</comment>
                            <comment id="13169025" author="hadoopqa" created="Wed, 14 Dec 2011 02:50:16 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12507271/java_HBASE-4605_v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12507271/java_HBASE-4605_v5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -150 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 75 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestAdmin&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/501//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/501//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/501//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/501//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/501//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/501//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13169032" author="jesse_yates" created="Wed, 14 Dec 2011 03:02:33 +0000"  >&lt;p&gt;Hmm, didn&apos;t touch any of the admin code, but it looks like its another instance of the &apos;too many open files&apos; issue coming up again.&lt;/p&gt;

&lt;p&gt;No new warnings on any of the code in this patch (as far as I could tell). &lt;/p&gt;</comment>
                            <comment id="13169075" author="zhihyu@ebaysf.com" created="Wed, 14 Dec 2011 04:29:10 +0000"  >&lt;p&gt;TestHTableDescriptor misses category. &lt;/p&gt;

&lt;p&gt;Other than that I vote +1 on latest patch. &lt;/p&gt;</comment>
                            <comment id="13169532" author="zhihyu@ebaysf.com" created="Wed, 14 Dec 2011 17:51:04 +0000"  >&lt;p&gt;Patch that adds category to TestHTableDescriptor&lt;/p&gt;

&lt;p&gt;I plan to integrate v6 if there is no objection from Gary.&lt;/p&gt;</comment>
                            <comment id="13169570" author="jesse_yates" created="Wed, 14 Dec 2011 18:35:45 +0000"  >&lt;p&gt;I&apos;d like to get the comments updated as per the latest comments on RB. Otherwise, +1&lt;/p&gt;</comment>
                            <comment id="13169645" author="hadoopqa" created="Wed, 14 Dec 2011 20:04:01 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12507384/4605-v6.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12507384/4605-v6.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 24 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -150 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 75 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestInstantSchemaChange&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/506//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/506//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/506//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/506//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/506//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/506//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13169648" author="jiraposter@reviews.apache.org" created="Wed, 14 Dec 2011 20:07:30 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-12-14 00:40:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 335&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line335&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line335&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can we call ByteArrayOutputStream.toString() directly ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, because there is no assurance which encoding will be used. This way, we can be sure that it is UTF-8 encoded and conforms to the rest of the project. Also, the overhead here is just one more, short-lived pointer (not a big deal).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-14 00:40:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 196&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line196&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line196&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Priority is updated at the end.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think we should document concurrency assumption in javadoc.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Added a section to package-info talking about concurrency.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-14 00:40:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 179&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line179&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line179&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Multiple Constraints are supported. Please update javadoc.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;done.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-14 00:40:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 355&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line355&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line355&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     The dash is not needed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;done.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jesse&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3897&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3897&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-12-13 21:38:03, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:38:03)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/docbkx/book.xml 9617950 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13169668" author="jesse_yates" created="Wed, 14 Dec 2011 20:29:46 +0000"  >&lt;p&gt;Updated patch with fixed javadocs as per Ted&apos;s comments.&lt;/p&gt;</comment>
                            <comment id="13169764" author="hadoopqa" created="Wed, 14 Dec 2011 22:38:45 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12507427/java_HBASE-4605_v7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12507427/java_HBASE-4605_v7.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 75 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestInstantSchemaChange&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/508//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/508//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/508//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/508//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/508//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/508//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13169769" author="zhihyu@ebaysf.com" created="Wed, 14 Dec 2011 22:45:15 +0000"  >&lt;p&gt;Test failures were due to &apos;Too many open files&apos;&lt;/p&gt;

&lt;p&gt;Will commit tomorrow.&lt;/p&gt;</comment>
                            <comment id="13170371" author="zhihyu@ebaysf.com" created="Thu, 15 Dec 2011 17:53:53 +0000"  >&lt;p&gt;Integrated to TRUNK.&lt;/p&gt;

&lt;p&gt;Thanks for the patch Jesse.&lt;/p&gt;

&lt;p&gt;Thanks for the review Gary.&lt;/p&gt;</comment>
                            <comment id="13170720" author="hudson" created="Fri, 16 Dec 2011 02:42:11 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2548 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2548/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2548/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt; Constraints, remove .orig files accidentally added in previous commit&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt; Constraints (Jesse Yates)&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/package-info.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java.orig&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/docbkx/book.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/package-info.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/package-info.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java.orig&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13170777" author="hudson" created="Fri, 16 Dec 2011 05:02:52 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #33 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/33/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/33/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt; Constraints, remove .orig files accidentally added in previous commit&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt; Constraints (Jesse Yates)&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/package-info.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java.orig&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/docbkx/book.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/package-info.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/constraint/package-info.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java.orig&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13171462" author="stack" created="Sat, 17 Dec 2011 05:09:29 +0000"  >&lt;p&gt;Did this patch add guava as a client-side dependency in the end?&lt;/p&gt;

&lt;p&gt;Doc needs boosting for this new feature; as is, a bunch of detail on howto is missing.&lt;/p&gt;

&lt;p&gt;IMO, this patch could have baked out one RB a little longer.  Its a new feature.  I didn&apos;t realize it going in (was slow to get around to review).  I&apos;d like to have gone over it before it went in.  I could review now I suppose but feels a bit late...&lt;/p&gt;</comment>
                            <comment id="13171466" author="zhihyu@ebaysf.com" created="Sat, 17 Dec 2011 05:27:34 +0000"  >&lt;p&gt;Guava dependency has been removed. &lt;/p&gt;

&lt;p&gt;Feel free to provide your comments. I and Jesse would accommodate them. &lt;/p&gt;</comment>
                            <comment id="13171468" author="jesse_yates" created="Sat, 17 Dec 2011 06:02:41 +0000"  >&lt;p&gt;@Stack: yeah, we can definitely made mods later. As far as docs go, there is extensive information in the package-info. If you want we can also port/copy it to the book or have a comment in the book about looking at the package info.&lt;/p&gt;</comment>
                            <comment id="13171469" author="jesse_yates" created="Sat, 17 Dec 2011 06:04:06 +0000"  >&lt;p&gt;@stack: and we kept guava out still and basically went back to the original HTD + removeCoprocessor()&lt;/p&gt;</comment>
                            <comment id="13171708" author="stack" created="Sun, 18 Dec 2011 00:00:13 +0000"  >&lt;p&gt;Ok.  Thanks lads.  Good there is not extra dependency client-side (its a pain MR&apos;ing)&lt;/p&gt;

&lt;p&gt;I&apos;ll do a bit of review..... &lt;/p&gt;</comment>
                            <comment id="13172753" author="jiraposter@reviews.apache.org" created="Mon, 19 Dec 2011 23:57:30 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3980&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3980&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Very nice.  Some comments below.&lt;/p&gt;


&lt;p&gt;src/docbkx/book.xml&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8986&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8986&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This needs filling out some; how do I add a constraint.  Perhaps this is in package info?  If so, add link to it from here?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8987&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8987&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    We&apos;re adding white space here&lt;/p&gt;

&lt;p&gt;    Should there be an answering String add method?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8988&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8988&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This just removes cp from HTD list.  If loaded on a regionserver, it continues to be so?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8989&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8989&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Constraints are in a constraint package?  This sets up a precedent where each cp gets its own package?  Can&apos;t we have constraint in coprocessor package?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8990&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8990&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should have used &lt;a href=&quot;http://hadoop.apache.org/common/docs/current/api/org/apache/hadoop/conf/Configurable.html?&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hadoop.apache.org/common/docs/current/api/org/apache/hadoop/conf/Configurable.html?&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8994&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8994&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Nit: Missing &apos;of&apos;, &apos;not&apos; should be &apos;no&apos;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8995&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8995&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    &apos;not&apos; should be &apos;no&apos;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8996&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8996&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Missing &apos;should&apos;?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8997&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8997&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Nice class doc&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment8998&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment8998&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I can&apos;t have a constraint on a Delete?  Should this be a Mutation?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9003&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9003&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    key for sure is not going to be null?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9002&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9002&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Style:  Braces if on separate line.  No need of braces if &apos;if&apos; test and if statement are on same line.  In fact this could have been written:&lt;/p&gt;

&lt;p&gt;    return value == null? null: new Pair&amp;lt;String, String&amp;gt;(key, value);&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9006&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9006&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This method is about adding constraints but the body of the method seems to be about upping priority.  Should explain what priority upping has to do with constraint adding?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9007&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9007&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Ain&apos;t these really fat?  Ain&apos;t this going to bloat HTD?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9008&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9008&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This method is about Strings, not byte arrays?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9010&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9010&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is going to serialize a fat Configuration into an HTD?  If I list an HTD in shell, its going to have this Configuration pollution in it?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9012&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9012&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Incomplete sentence&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9014&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is expensive call.   Its done infrequently?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9015&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9015&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can I ask whether a constraint enabled or disabled?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9016&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9016&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Braces.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9017&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9017&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    For sure not null?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9026&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9026&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Where do I get one of these?  Which classloader to use?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9027&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9027&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should this be a priority comparator rather than a constraintcomparator?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9028&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9028&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should there be protection against constraints being unloaded?  For an administrator only?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9029&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9029&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This text could do w/ a read-through/edit (see things like the curly-brace here)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9032&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9032&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Do I have to alter the table after doing this?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9033&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9033&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Need a rolling restart&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9034&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9034&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is above missing the reenable of table after HTD editing?&lt;/p&gt;

&lt;p&gt;    This doc is excellent.   Needs a pointer from book to here.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-12-13 21:38:03, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:38:03)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/docbkx/book.xml 9617950 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13172774" author="jiraposter@reviews.apache.org" created="Tue, 20 Dec 2011 00:21:30 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3990&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3990&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Thanks for the valuable comments, Stack.&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9036&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9036&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I was thinking about this too.&lt;br/&gt;
    Since the current Constraint is for one table only, I couldn&apos;t see how deletion of certain row would break constraint.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9035&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9035&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I wish we had brought up this argument to Gary earlier.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/#comment9037&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#comment9037&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Currently this method is called by testUpdateConstraint()&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-12-13 21:38:03, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:38:03)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/docbkx/book.xml 9617950 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13172781" author="jiraposter@reviews.apache.org" created="Tue, 20 Dec 2011 00:27:30 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-12-20 00:20:28, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 278&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line278&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line278&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I wish we had brought up this argument to Gary earlier.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t see how stuffing binary data into the HTD values (which is what I argued against) is any less polluting HTD?  I think the options here are:&lt;/p&gt;

&lt;p&gt;1) store in HTD, in which case I think the current string representation is better than what we had before with the Guava dependencies&lt;br/&gt;
2) store configuration for Constraints to the side, in which case ConstraintProcessor can handle mapping configuration to the Contraint instances however it wants.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3990&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3990&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-12-13 21:38:03, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:38:03)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/docbkx/book.xml 9617950 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13172785" author="zhihyu@ebaysf.com" created="Tue, 20 Dec 2011 00:30:48 +0000"  >&lt;p&gt;I created &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5070&quot; title=&quot;Constraints implementation and javadoc changes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5070&quot;&gt;&lt;del&gt;HBASE-5070&lt;/del&gt;&lt;/a&gt; where further code changes should be made.&lt;/p&gt;</comment>
                            <comment id="13172978" author="jiraposter@reviews.apache.org" created="Tue, 20 Dec 2011 06:31:30 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 413&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line413&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line413&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This is expensive call.   Its done infrequently?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Essentially, only when we update the configuration for a constraint - adding, changing enabled or not, setting priority. The alternative was to keep around the those values just as bytes in the value, but Gary&apos;s argument for keeping them in the configuration for ease and compatibility going forward was the basis for this change. These confs are expected to be very small, so this shouldn&apos;t really be &lt;em&gt;that&lt;/em&gt; bad to write.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/package-info.java, line 43&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64474#file64474line43&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64474#file64474line43&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should there be protection against constraints being unloaded?  For an administrator only?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Are there ways we can enforce that just admins can do certain things? Also, I feel like if people are creating their own tables, they should be free to modify their own tables. Clearly this gets into the security stuff of which tables you should able to modify, which could be a bigger proposition. Thoughts?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 479&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line479&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line479&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can I ask whether a constraint enabled or disabled?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yup - see enabled(HTD, Constraint). &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 278&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line278&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line278&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Ain&apos;t these really fat?  Ain&apos;t this going to bloat HTD?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, it will bloat the HTD. Let&apos;s move this discussion down to comments on Ted&apos;s review or onto 5070.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 166&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line166&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line166&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     key for sure is not going to be null?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;it&apos;ll propagate a null pointer from the from the class-&amp;gt;key conversion before the return value here is null. What&apos;s the standard on handling the null pointer issues client side? Ok to just let that propogate up? Defensive checks? Wrapping it in some other exception? ??&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java, line 1&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64469#file64469line1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64469#file64469line1&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Constraints are in a constraint package?  This sets up a precedent where each cp gets its own package?  Can&apos;t we have constraint in coprocessor package?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Having it in its own package was part of what I would consider making constraints a &quot;top-level&quot; feature. It really depends on how we want to handle doing constraints and CP related features going forward. For instance, the security stuff is not only its own package, its going into its own module. I would argue that constraints are less key than security, but important enough to warrant its own subsection. Otherwise, we can get into a situation where we either have a ton of classes in the coprocessors package (bad) or a ton of packages - for each new feature (potentially way worse). I think we need to treat them on a case-by-case basis going forward. &lt;/p&gt;

&lt;p&gt;There are significant docs on constraints, making them not a great thing to just drop into the coprocessor folder. Maybe that can be the metric - number of lines of necessary documentation (as opposed to just all docs, to avoid people creating filler just to have its own package).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/docbkx/book.xml, line 874&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64467#file64467line874&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64467#file64467line874&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This needs filling out some; how do I add a constraint.  Perhaps this is in package info?  If so, add link to it from here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Should the link just be to the javadocs (which we could forget to update when this release gets cut) or should it just be a comment that usage is further explained in the javadocs/package-info?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java, line 480&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64468#file64468line480&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64468#file64468line480&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     We&apos;re adding white space here&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should there be an answering String add method?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We don&apos;t have an addValue for bytes, so I figured it was unnecessary.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 299&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line299&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line299&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This method is about Strings, not byte arrays?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yup, this is from an earlier impl&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 588&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line588&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line588&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should this be a priority comparator rather than a constraintcomparator?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Internally, it is comparing the priorities, but those are local to the constraints. What we really care about in the end is the order the constraints are applied, hence, constraintComparator. But priority comparator could work too.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/package-info.java, line 65&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64474#file64474line65&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64474#file64474line65&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This text could do w/ a read-through/edit (see things like the curly-brace here)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;hmmm, that line didn&apos;t make it into trunk, but giving it another once-over.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java, line 26&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64469#file64469line26&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64469#file64469line26&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should have used &lt;a href=&quot;http://hadoop.apache.org/common/docs/current/api/org/apache/hadoop/conf/Configurable.html?&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hadoop.apache.org/common/docs/current/api/org/apache/hadoop/conf/Configurable.html?&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Even more so, probably Configured? Kinda makes this class a little obsolete... I&apos;m partial to keeping it in there, just to tie the two hierarchies together - by implemnting BaseConstraint, all they need to take care of is overriding the methods specified.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 173&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line173&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line173&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This method is about adding constraints but the body of the method seems to be about upping priority.  Should explain what priority upping has to do with constraint adding?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Its in the package-info, but ok, here works too.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 317&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line317&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This is going to serialize a fat Configuration into an HTD?  If I list an HTD in shell, its going to have this Configuration pollution in it?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, but there isn&apos;t a really good way of getting them across otherwise. Follow-up should be in 5070 and to ted&apos;s comment below.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java, line 1072&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64468#file64468line1072&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64468#file64468line1072&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This just removes cp from HTD list.  If loaded on a regionserver, it continues to be so?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I believe so - you should have to disable and then renable the table for it to take effect (though it may be that you actually need to roll the RS).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-19 23:56:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 518&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line518&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line518&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     For sure not null?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yes...private method, so we should be able to expect valid elements - people shouldn&apos;t be able to mess with the values here/put bad data.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jesse&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3980&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3980&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-12-13 21:38:03, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:38:03)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/docbkx/book.xml 9617950 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13172979" author="jiraposter@reviews.apache.org" created="Tue, 20 Dec 2011 06:31:32 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-12-20 00:20:28, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java, line 73&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64470#file64470line73&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64470#file64470line73&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I was thinking about this too.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Since the current Constraint is for one table only, I couldn&apos;t see how deletion of certain row would break constraint.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If you look at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4999&quot; title=&quot;Constraints - Enhance checkAndPut to do atomic arbitrary constraint checks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4999&quot;&gt;&lt;del&gt;HBASE-4999&lt;/del&gt;&lt;/a&gt; you could, theoretically, break a constraint via a delete, since it considers the state of the underlying table. However, that is a later consideration. We already talked about moving Constraints to modifying Mutations in a later ticket. &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-12-20 00:20:28, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 278&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line278&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line278&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I wish we had brought up this argument to Gary earlier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I don&apos;t see how stuffing binary data into the HTD values (which is what I argued against) is any less polluting HTD?  I think the options here are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;1) store in HTD, in which case I think the current string representation is better than what we had before with the Guava dependencies&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;2) store configuration for Constraints to the side, in which case ConstraintProcessor can handle mapping configuration to the Contraint instances however it wants.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What do you mean by &quot;to the side&quot;? Ted mentions a centralized repo in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5070&quot; title=&quot;Constraints implementation and javadoc changes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5070&quot;&gt;&lt;del&gt;HBASE-5070&lt;/del&gt;&lt;/a&gt;. Are you thinking of essentially a system-level table for just this stuff - kind of an aux-meta table that can be used to store just arbitrary data? &lt;/p&gt;

&lt;p&gt;On one hand cool, on the other, but big are the confs really going to be in the HTD? Probably not more than a couple lines, and you may or may not want to see it, but at the very least you will always get it, as opposed to worrying about another moving part, that may or may not be there &quot;on the side&quot;.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jesse&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3990&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3990&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-12-13 21:38:03, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:38:03)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/docbkx/book.xml 9617950 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13172993" author="jiraposter@reviews.apache.org" created="Tue, 20 Dec 2011 07:17:30 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-12-20 00:20:28, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 278&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line278&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line278&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I wish we had brought up this argument to Gary earlier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I don&apos;t see how stuffing binary data into the HTD values (which is what I argued against) is any less polluting HTD?  I think the options here are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;1) store in HTD, in which case I think the current string representation is better than what we had before with the Guava dependencies&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;2) store configuration for Constraints to the side, in which case ConstraintProcessor can handle mapping configuration to the Contraint instances however it wants.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;What do you mean by &quot;to the side&quot;? Ted mentions a centralized repo in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5070&quot; title=&quot;Constraints implementation and javadoc changes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5070&quot;&gt;&lt;del&gt;HBASE-5070&lt;/del&gt;&lt;/a&gt;. Are you thinking of essentially a system-level table for just this stuff - kind of an aux-meta table that can be used to store just arbitrary data? &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;On one hand cool, on the other, but big are the confs really going to be in the HTD? Probably not more than a couple lines, and you may or may not want to see it, but at the very least you will always get it, as opposed to worrying about another moving part, that may or may not be there &quot;on the side&quot;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Adding conf as String to HTD is for sure convenient.  Just wondering what it&apos;ll look like when we describe a table.  What happens when we want to alter a table?   Maybe this a non-issue/just aesthetics.  Have you tried it?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3990&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3990&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-12-13 21:38:03, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:38:03)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/docbkx/book.xml 9617950 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13172996" author="jiraposter@reviews.apache.org" created="Tue, 20 Dec 2011 07:23:31 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-12-20 00:20:28, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java, line 278&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line278&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff/8/?file=64473#file64473line278&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I wish we had brought up this argument to Gary earlier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I don&apos;t see how stuffing binary data into the HTD values (which is what I argued against) is any less polluting HTD?  I think the options here are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;1) store in HTD, in which case I think the current string representation is better than what we had before with the Guava dependencies&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;2) store configuration for Constraints to the side, in which case ConstraintProcessor can handle mapping configuration to the Contraint instances however it wants.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse Yates wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;What do you mean by &quot;to the side&quot;? Ted mentions a centralized repo in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5070&quot; title=&quot;Constraints implementation and javadoc changes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5070&quot;&gt;&lt;del&gt;HBASE-5070&lt;/del&gt;&lt;/a&gt;. Are you thinking of essentially a system-level table for just this stuff - kind of an aux-meta table that can be used to store just arbitrary data? &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;On one hand cool, on the other, but big are the confs really going to be in the HTD? Probably not more than a couple lines, and you may or may not want to see it, but at the very least you will always get it, as opposed to worrying about another moving part, that may or may not be there &quot;on the side&quot;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding conf as String to HTD is for sure convenient.  Just wondering what it&apos;ll look like when we describe a table.  What happens when we want to alter a table?   Maybe this a non-issue/just aesthetics.  Have you tried it?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not yet - I was putting all the shell work off until 4879. Figured if it looked gross/crazy, we could handle it later. It also depends on what people are actually doing with the configuration stuff - if its not much, then this point is really moot - we can&apos;t really tell until people try it out and complain (or not smile).&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jesse&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2579/#review3990&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/#review3990&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-12-13 21:38:03, Jesse Yates wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-12-13 21:38:03)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Most of the implementation for adding constraints as a coprocessor. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Looking for general comments on style/structure, though nitpicks are ok too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Currently missing implementation for disableConstraints() since that will require adding removeCoprocessor() to HTD (also comments on if this is worth it would be good). &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4605&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/docbkx/book.xml 9617950 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 84a0d1a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/BaseConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/constraint/package-info.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/AllPassConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/CheckConfigurationConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/RuntimeFailConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/TestConstraints.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/constraint/WorksConstraint.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2579/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2579/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Adding IntegrationTestConstraint and unit tests for Constraints and IntegerConstraint. All of those pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jesse&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="14306294" author="stack" created="Thu, 5 Feb 2015 00:22:08 +0000"  >&lt;p&gt;This went into trunk here:&lt;/p&gt;

&lt;p&gt;063fa64 &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt; Constraints, remove .orig files accidentally added in previous commit&lt;br/&gt;
5166afd &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4605&quot; title=&quot;Constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4605&quot;&gt;&lt;del&gt;HBASE-4605&lt;/del&gt;&lt;/a&gt; Constraints (Jesse Yates)&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
commit 5166afddc5b93bbac5ec7f0ab4ed978471a69046
Author: Zhihong Yu &amp;lt;tedyu@apache.org&amp;gt;
Date:   Thu Dec 15 17:44:59 2011 +0000

    HBASE-4605 Constraints (Jesse Yates)


    git-svn-id: https:&lt;span class=&quot;code-comment&quot;&gt;//svn.apache.org/repos/asf/hbase/trunk@1214889 13f79535-47bb-0310-9956-ffa450edef68&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looking at tags.....&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2012-05-17 19:37:24 +0000  (tag: 0.94.0)
2012-05-01 23:08:25 +0000  (tag: 0.94.0RC3)
2012-05-30 17:57:29 +0000  (tag: 0.94.0mvnrelease)
2012-04-18 23:23:57 +0000  (tag: 0.94.0RC2)
2012-04-14 02:19:29 +0000  (tag: 0.94.0RC1)
2012-03-28 00:40:32 +0000  (tag: 0.94.0RC0)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... it looks like this feature made it into 0.94.&lt;/p&gt;

&lt;p&gt;Above done for &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=larsgeorge&quot; class=&quot;user-hover&quot; rel=&quot;larsgeorge&quot;&gt;Lars George&lt;/a&gt; who is trying to follow along and trying to figure when stuff showed up (this is missing fix versions)&lt;/p&gt;</comment>
                            <comment id="15016521" author="lars_francke" created="Fri, 20 Nov 2015 11:55:34 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12532858">HBASE-4879</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12534546">HBASE-4999</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12535769">HBASE-5070</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12507384" name="4605-v6.txt" size="74456" author="zhihyu@ebaysf.com" created="Wed, 14 Dec 2011 17:51:04 +0000"/>
                            <attachment id="12504935" name="4605.v7" size="70541" author="yuzhihong@gmail.com" created="Wed, 23 Nov 2011 21:48:48 +0000"/>
                            <attachment id="12500962" name="constraint_as_cp.txt" size="19267" author="jesse_yates" created="Wed, 26 Oct 2011 21:46:37 +0000"/>
                            <attachment id="12499492" name="java_Constraint_v2.patch" size="8289" author="jesse_yates" created="Tue, 18 Oct 2011 02:58:01 +0000"/>
                            <attachment id="12505275" name="java_HBASE-4605_v1.patch" size="81503" author="jesse_yates" created="Mon, 28 Nov 2011 00:45:01 +0000"/>
                            <attachment id="12505277" name="java_HBASE-4605_v2.patch" size="81503" author="jesse_yates" created="Mon, 28 Nov 2011 00:58:42 +0000"/>
                            <attachment id="12505280" name="java_HBASE-4605_v3.patch" size="81391" author="jesse_yates" created="Mon, 28 Nov 2011 01:09:50 +0000"/>
                            <attachment id="12507271" name="java_HBASE-4605_v5.patch" size="74296" author="jesse_yates" created="Wed, 14 Dec 2011 00:45:12 +0000"/>
                            <attachment id="12507427" name="java_HBASE-4605_v7.patch" size="76740" author="jesse_yates" created="Wed, 14 Dec 2011 20:29:46 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 17 Oct 2011 19:08:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>88663</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hrj3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101722</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>