<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:54:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14575/HBASE-14575.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14575] Relax region read lock for compactions</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14575</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Per &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt;&apos;s idea on parent issue, let&apos;s see if we can reduce the scope of critical section under which compactions hold the region read lock.&lt;/p&gt;

&lt;p&gt;Here is summary from parent issue:&lt;/p&gt;

&lt;p&gt;Another idea is we can reduce the scope of when the read lock is held during compaction. In theory the compactor only needs a region read lock while deciding what files to compact and at the time of committing the compaction. We&apos;re protected from the case of region close events because compactions are checking (every 10k bytes written) if the store has been closed in order to abort in such a case.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12903188">HBASE-14575</key>
            <summary>Relax region read lock for compactions</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12721577">HBASE-11368</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ndimiduk">Nick Dimiduk</assignee>
                                    <reporter username="ndimiduk">Nick Dimiduk</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 Oct 2015 23:47:13 +0000</created>
                <updated>Wed, 14 Sep 2016 19:05:57 +0000</updated>
                            <resolved>Wed, 2 Dec 2015 18:34:05 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.3.0</fixVersion>
                                    <component>Compaction</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="14947819" author="ndimiduk" created="Wed, 7 Oct 2015 23:49:53 +0000"  >&lt;p&gt;Following &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt;&apos;s suggestion, here&apos;s a patch that reduces the scope within which compactions hold the region lock. I&apos;m not sure if it&apos;s correct, maybe you folks can give some feedback, but it&apos;s passing &lt;tt&gt;-Dtest=TestCompaction*&lt;/tt&gt; and &lt;tt&gt;-Dtest=org.apache.hadoop.hbase.regionserver.Test*Store*&lt;/tt&gt; locally for me. Let me see about a ITBLL or similar. I also don&apos;t know if it&apos;ll actually help the reported issue, need to devise a realistic test for that.&lt;/p&gt;

&lt;p&gt;Also, I was incorrect about checking for interruption on every cell. It&apos;s actually every 10k bytes written.&lt;/p&gt;</comment>
                            <comment id="14949112" author="devaraj" created="Thu, 8 Oct 2015 18:33:04 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; the change looks easy to reason about, and it&apos;ll be great if it can be tested and validated. Maybe, have a compaction policy that basically just sleeps, and do a bulkload while the compaction is &quot;happening&quot;. To reduce the end-to-end time for the test, (maybe) tweak the various knobs to ensure the bulkload gives up sooner if it couldn&apos;t get the lock. With the patch, the bulkload should never fail...&lt;/p&gt;</comment>
                            <comment id="14955946" author="devaraj" created="Tue, 13 Oct 2015 23:38:31 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; wondering if you have any update on the testing on this. Thanks.&lt;/p&gt;</comment>
                            <comment id="14957943" author="devaraj" created="Wed, 14 Oct 2015 22:36:56 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; what&apos;s the patch about?&lt;/p&gt;</comment>
                            <comment id="14957974" author="yuzhihong@gmail.com" created="Wed, 14 Oct 2015 23:04:16 +0000"  >&lt;p&gt;Looks like Nick is busy.&lt;/p&gt;

&lt;p&gt;Patch v1 fixes a few mockito errors in the following form:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
testSplitOffStripeDropDeletes(org.apache.hadoop.hbase.regionserver.compactions.TestStripeCompactionPolicy)  Time elapsed: 0.155 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
org.mockito.exceptions.misusing.InvalidUseOfMatchersException:
Invalid use of argument matchers!
9 matchers expected, 8 recorded:
-&amp;gt; at org.apache.hadoop.hbase.regionserver.compactions.TestStripeCompactionPolicy.verifyCompaction(TestStripeCompactionPolicy.java:572)
-&amp;gt; at org.apache.hadoop.hbase.regionserver.compactions.TestStripeCompactionPolicy.verifyCompaction(TestStripeCompactionPolicy.java:572)
-&amp;gt; at org.apache.hadoop.hbase.regionserver.compactions.TestStripeCompactionPolicy.verifyCompaction(TestStripeCompactionPolicy.java:572)
-&amp;gt; at org.apache.hadoop.hbase.regionserver.compactions.TestStripeCompactionPolicy.verifyCompaction(TestStripeCompactionPolicy.java:572)
-&amp;gt; at org.apache.hadoop.hbase.regionserver.compactions.TestStripeCompactionPolicy.verifyCompaction(TestStripeCompactionPolicy.java:572)
-&amp;gt; at org.apache.hadoop.hbase.regionserver.compactions.TestStripeCompactionPolicy.dropDeletesMatcher(TestStripeCompactionPolicy.java:599)
-&amp;gt; at org.apache.hadoop.hbase.regionserver.compactions.TestStripeCompactionPolicy.dropDeletesMatcher(TestStripeCompactionPolicy.java:599)
-&amp;gt; at org.apache.hadoop.hbase.regionserver.compactions.TestStripeCompactionPolicy.verifyCompaction(TestStripeCompactionPolicy.java:572)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14958193" author="hadoopqa" created="Thu, 15 Oct 2015 02:23:10 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12766663/14575-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12766663/14575-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit ad5d02c360dcd2482d6ded87f738986cdd135050.&lt;br/&gt;
  ATTACHMENT ID: 12766663&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16017//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16017//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16017//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16017//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16017//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16017//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16017//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16017//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16017//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16017//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14975359" author="yuzhihong@gmail.com" created="Mon, 26 Oct 2015 23:43:03 +0000"  >&lt;p&gt;My recent refactor in compaction related code path made patch v1 stale.&lt;/p&gt;

&lt;p&gt;Patch v2 is rebased on latest master branch.&lt;/p&gt;</comment>
                            <comment id="14975728" author="hadoopqa" created="Tue, 27 Oct 2015 04:49:05 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12768858/14575-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12768858/14575-v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 2b860025216898bb34a8e77799dd20a9a638e9c5.&lt;br/&gt;
  ATTACHMENT ID: 12768858&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16237//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16237//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16237//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16237//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16237//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16237//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16237//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16237//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14983076" author="yuzhihong@gmail.com" created="Fri, 30 Oct 2015 18:53:05 +0000"  >&lt;p&gt;Patch v3 modifies TestHRegionServerBulkLoad by introducing custom observer which sleeps in preCompact() for 30 seconds.&lt;br/&gt;
rpc timeout is shortened to 10 seconds meanwhile.&lt;/p&gt;</comment>
                            <comment id="14983101" author="yuzhihong@gmail.com" created="Fri, 30 Oct 2015 19:10:08 +0000"  >&lt;p&gt;Without the lock scope reduction, the test fails with:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
testAtomicBulkLoad(org.apache.hadoop.hbase.regionserver.TestHRegionServerBulkLoad)  Time elapsed: 698.467 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
java.lang.RuntimeException: Deferred
	at org.apache.hadoop.hbase.regionserver.TestHRegionServerBulkLoad.runAtomicBulkloadTest(TestHRegionServerBulkLoad.java:357)
	at org.apache.hadoop.hbase.regionserver.TestHRegionServerBulkLoad.testAtomicBulkLoad(TestHRegionServerBulkLoad.java:332)
Caused by: org.apache.hadoop.hbase.client.RetriesExhaustedException:
Failed after attempts=36, exceptions:
Fri Oct 30 11:57:06 PDT 2015, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, java.net.SocketTimeoutException: callTimeout=60000, callDuration=77951: row &apos;&apos; on table &apos;atomicBulkLoad&apos; at region=atomicBulkLoad,,1446231338683.0235425b9d8c662d4839bf99e57d0072., hostname=10.22.24.71,53802,1446231335391, seqNum=2

Caused by: java.net.SocketTimeoutException: callTimeout=60000, callDuration=77951: row &apos;&apos; on table &apos;atomicBulkLoad&apos; at region=atomicBulkLoad,,1446231338683.0235425b9d8c662d4839bf99e57d0072., hostname=10.22.24.71,53802,1446231335391, seqNum=2
Caused by: org.apache.hadoop.hbase.ipc.CallTimeoutException: callId=6837, method=Scan, rpcTimeout=10000, param {region { type: REGION_NAME value: &lt;span class=&quot;code-quote&quot;&gt;&quot;atomicBulkLoad,,1446231338683.0235425b9d8c662d4839bf99e57d0072.&quot;&lt;/span&gt; } scan { column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0000&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0001&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0002&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0003&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0004&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0005&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0006&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0007&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0008&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0009&quot;&lt;/span&gt; } max_versions: 1 cache_blocks: &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; max_result_size: 2097152 caching: 2147483647 } number_of_rows: 0 close_scanner: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt; client_handles_partials: &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; client_handles_heartbeats: &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; track_scan_metrics: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14983342" author="yuzhihong@gmail.com" created="Fri, 30 Oct 2015 21:23:42 +0000"  >&lt;p&gt;Patch v4 parameterizes TestHRegionServerBulkLoad so that the customer observer sleeps 0 and 30 seconds, respectively.&lt;br/&gt;
This is to preserve the original test scenario where compaction is not slow.&lt;/p&gt;</comment>
                            <comment id="14983436" author="hadoopqa" created="Fri, 30 Oct 2015 22:03:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12769839/14575-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12769839/14575-v3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit b0ad82191cc216c65751b68cbc11280fd5d5cd47.&lt;br/&gt;
  ATTACHMENT ID: 12769839&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16318//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16318//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16318//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16318//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16318//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16318//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16318//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16318//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14983449" author="yuzhihong@gmail.com" created="Fri, 30 Oct 2015 22:07:28 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.19:test (secondPartTestsExecution) on project hbase-server: ExecutionException Error occurred in starting fork, check output in log -&amp;gt; [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e &lt;span class=&quot;code-keyword&quot;&gt;switch&lt;/span&gt;.
[ERROR] Re-run Maven using the -X &lt;span class=&quot;code-keyword&quot;&gt;switch&lt;/span&gt; to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http:&lt;span class=&quot;code-comment&quot;&gt;//cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
&lt;/span&gt;[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn &amp;lt;goals&amp;gt; -rf :hbase-server
grep: unknown devices method
We&apos;re ok: there is no zombie test
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Looks like test environment had issue.&lt;/p&gt;</comment>
                            <comment id="14983719" author="hadoopqa" created="Sat, 31 Oct 2015 01:12:16 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12769873/14575-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12769873/14575-v4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit c6d3dcdea33efa4fa745b323f6ff46b8b0711309.&lt;br/&gt;
  ATTACHMENT ID: 12769873&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16323//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16323//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16323//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16323//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16323//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16323//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16323//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16323//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14983878" author="ram_krish" created="Sat, 31 Oct 2015 07:12:02 +0000"  >&lt;p&gt;Just trying to understand the scope of this JIRA as it may be related to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13082&quot; title=&quot;Coarsen StoreScanner locks to RegionScanner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13082&quot;&gt;&lt;del&gt;HBASE-13082&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Seeing the patch I can see that the region&apos;s reentrant read write lock is passed over through out the compaction logic.&lt;br/&gt;
In the HRegion#compact() we can see that already we hold the read lock and it is getting released after the compaction is over. In this patch the same lock is again passed in the further flow and acquiring more read locks and releasing it.  May be this JIRA is not aimed at this compaction flow whereas some other thread trying to do compaction which does not go through the HRegion.compact()?  I may be wrong and missing something. &lt;br/&gt;
Or may be this patch should remove the read lock in the HRegion.compact() and only do it where ever needed. &lt;/p&gt;</comment>
                            <comment id="14983963" author="yuzhihong@gmail.com" created="Sat, 31 Oct 2015 11:48:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;this patch should remove the read lock in the HRegion.compact()&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is what the patch is doing:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
1787	    &lt;span class=&quot;code-comment&quot;&gt;// block waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the lock &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; compaction		
&lt;/span&gt;1788	    lock.readLock().lock();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above snippet was copied from browser which has plugin for patch files.&lt;br/&gt;
In the real patch, you can see &apos;-&apos; sign at the beginning of each line.&lt;/p&gt;</comment>
                            <comment id="14984073" author="stack" created="Sat, 31 Oct 2015 17:39:13 +0000"  >&lt;p&gt;The original author says of the approach  &quot;... I&apos;m not sure if it&apos;s correct...&quot; I&apos;d be interested in a paragraph on why the current author thinks this patch is (correct). Also, what testing has been done on this approach? (Testing to verify the approach is what the original fellows working on this issue were most concerned about).&lt;/p&gt;

&lt;p&gt;Giving the patch a quick review, yeah, it complicates &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13082&quot; title=&quot;Coarsen StoreScanner locks to RegionScanner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13082&quot;&gt;&lt;del&gt;HBASE-13082&lt;/del&gt;&lt;/a&gt;. It might work though given its passing the region lock... I tried to reason about it but was having trouble thinking through scenarios where a close could come in mid-compact or a bulk load. Would appreciate a write up what the current thinking is. Would help w/ this review (and I&apos;m sure would help the fellow trying to land &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13082&quot; title=&quot;Coarsen StoreScanner locks to RegionScanner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13082&quot;&gt;&lt;del&gt;HBASE-13082&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="14984739" author="ram_krish" created="Mon, 2 Nov 2015 04:46:40 +0000"  >&lt;p&gt;Thanks Ted. My bad. I missed that. True that the patch is removing the lock as intended. I think there should be minimal or no impact of this patch on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13082&quot; title=&quot;Coarsen StoreScanner locks to RegionScanner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13082&quot;&gt;&lt;del&gt;HBASE-13082&lt;/del&gt;&lt;/a&gt; as it is more to deal with the region lock and not the storeScanner lock. &lt;/p&gt;</comment>
                            <comment id="14984784" author="jinghe" created="Mon, 2 Nov 2015 05:58:58 +0000"  >&lt;p&gt;As &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; mentioned, we&apos;ve been doing a lot of checks for close (store.areWritesEnabled()) in performCompaction()&lt;br/&gt;
Maybe we could a couple of more outside of performCompaction() and in between we try to hold the region read lock?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;+    readLock.lock();   // hold region open while we create scanners over storefiles.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is probably good to do this.  But there seems to be no critical section to protect here and can be relaxed as well?&lt;/p&gt;</comment>
                            <comment id="14985149" author="ram_krish" created="Mon, 2 Nov 2015 12:36:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;readLock.lock(); // hold region open while we create scanners over storefiles.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think we can be relaxed here? Because after doing the selection while doing compaction if the region closes - we will end up in an exception for that compaction right?&lt;br/&gt;
But the lock held here&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// Do the steps necessary to complete the compaction. Hold region open &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; these operations.
&lt;/span&gt;1256	      region.lock.readLock().lock();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;may be needed because before the region could close we could finalize the compaction if it has really done the major work of reading and writing into a new file. So that even if the reigon is moving the compaction need not be done once again in the new RS. &lt;/p&gt;</comment>
                            <comment id="14986622" author="jinghe" created="Tue, 3 Nov 2015 03:58:45 +0000"  >&lt;p&gt;There is a complex logic with the writestate in HRegion:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  /*
   * Data structure of write state flags used coordinating flushes,
   * compactions and closes.
   */
  &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; class WriteState {
    &lt;span class=&quot;code-comment&quot;&gt;// Set &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; a memstore flush is happening.
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; flushing = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
    &lt;span class=&quot;code-comment&quot;&gt;// Set when a flush has been requested.
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; flushRequested = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
    &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-object&quot;&gt;Number&lt;/span&gt; of compactions running.
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; compacting = 0;
    &lt;span class=&quot;code-comment&quot;&gt;// Gets set in close. If set, cannot compact or flush again.
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; writesEnabled = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I am curious how this duplicates the region level lock we are trying to relax?  Maybe the writestate is taking care of things already?&lt;/p&gt;</comment>
                            <comment id="14986635" author="yuzhihong@gmail.com" created="Tue, 3 Nov 2015 04:07:44 +0000"  >&lt;p&gt;In HRegion#doClose(), we have :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (writestate) {
      &lt;span class=&quot;code-comment&quot;&gt;// Disable compacting and flushing by background threads &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// region.
&lt;/span&gt;      canFlush = !writestate.readOnly;
      writestate.writesEnabled = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
      LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Closing &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;code-quote&quot;&gt;&quot;: disabling compactions &amp;amp; flushes&quot;&lt;/span&gt;);
      waitForFlushesAndCompactions();
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;waitForFlushesAndCompactions() would wait for writestate.compacting to come down to 0.&lt;/p&gt;</comment>
                            <comment id="14987466" author="yuzhihong@gmail.com" created="Tue, 3 Nov 2015 15:30:26 +0000"  >&lt;p&gt;Patch v5 addresses what Jerry and Ram pointed out:&lt;br/&gt;
When creating StoreFileScanner&apos;s, region read lock is not needed.&lt;br/&gt;
This is because CompactionRequest contains StoreFile&apos;s to be compacted which wouldn&apos;t change.&lt;/p&gt;</comment>
                            <comment id="14987609" author="stack" created="Tue, 3 Nov 2015 16:58:53 +0000"  >&lt;p&gt;You saw my comments &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted_yu&quot; class=&quot;user-hover&quot; rel=&quot;ted_yu&quot;&gt;Ted Yu&lt;/a&gt;  I repeat main thrust below:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The original author says of the approach &quot;... I&apos;m not sure if it&apos;s correct...&quot; I&apos;d be interested in a paragraph on why the current author thinks this patch is (correct). Also, what testing has been done on this approach? (Testing to verify the approach is what the original fellows working on this issue were most concerned about).&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="14987615" author="yuzhihong@gmail.com" created="Tue, 3 Nov 2015 17:01:49 +0000"  >&lt;p&gt;Yes, I did see the above comment.&lt;/p&gt;

&lt;p&gt;Preparation of such paragraph is under way.&lt;/p&gt;</comment>
                            <comment id="14987797" author="hadoopqa" created="Tue, 3 Nov 2015 18:29:49 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12770335/14575-v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12770335/14575-v5.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 0eae729ffa95828462737c54c7204b34bb73182a.&lt;br/&gt;
  ATTACHMENT ID: 12770335&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.security.token.TestGenerateDelegationToken&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16364//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16364//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16364//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16364//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16364//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16364//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16364//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16364//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14989905" author="yuzhihong@gmail.com" created="Wed, 4 Nov 2015 17:00:22 +0000"  >&lt;p&gt;We are trying to remove / relax the region read lock for compaction.&lt;br/&gt;
Let&apos;s see what are the potential race conditions among the operations (user scan, region split, region close and region bulk load).&lt;/p&gt;

&lt;p&gt;user scan  ---&amp;gt; region read lock&lt;br/&gt;
region split --&amp;gt; region close first --&amp;gt; region write lock&lt;br/&gt;
region close  --&amp;gt; region write lock&lt;br/&gt;
region bulk load  --&amp;gt; region write lock&lt;/p&gt;

&lt;p&gt;read lock is compatible with read lock.  ---&amp;gt; no problem with user scan/read&lt;br/&gt;
region bulk load does not cause problem for compaction (no consistency problem, store lock will help the store file accounting).&lt;br/&gt;
They can run almost concurrently at the region level.&lt;/p&gt;

&lt;p&gt;The only remaining race condition is between the region close and compaction.&lt;br/&gt;
So we will evaluate, below, how region close intervenes with compaction if compaction does not acquire region read lock.&lt;/p&gt;

&lt;p&gt;Here are the steps for compaction:&lt;br/&gt;
1. obtain list of StoreFile&apos;s&lt;/p&gt;

&lt;p&gt;2. create StoreFileScanner&apos;s based on list from #1&lt;/p&gt;

&lt;p&gt;3. perform compaction and save resulting files under tmp dir&lt;/p&gt;

&lt;p&gt;4. swap in compacted files&lt;/p&gt;

&lt;p&gt;#1 is guarded by store lock.  This patch does not change this --&amp;gt; no worse or better&lt;/p&gt;

&lt;p&gt;For #2, we obtain smallest read point (for region) across all the Scanners (for both default compactor and stripe compactor).&lt;br/&gt;
The read points are for user scans. Region keeps the read points for all currently open user scanners.&lt;br/&gt;
Compaction needs to know the smallest read point so that during re-write of the hfiles, it can remove the mvcc points for the cells if their mvccs are older than the smallest since they are not needed anymore.&lt;br/&gt;
This will not conflict with compaction.&lt;/p&gt;

&lt;p&gt;For #3, it can be performed in parallel to other operations.&lt;br/&gt;
#4 needs region read lock - this requirement is kept in patch.&lt;/p&gt;

&lt;p&gt;Region close and compaction are guarded pretty well by the &apos;writestate&apos;.&lt;br/&gt;
In HRegion#doClose(), we have :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (writestate) {
      &lt;span class=&quot;code-comment&quot;&gt;// Disable compacting and flushing by background threads &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// region.
&lt;/span&gt;      canFlush = !writestate.readOnly;
      writestate.writesEnabled = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
      LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Closing &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;code-quote&quot;&gt;&quot;: disabling compactions &amp;amp; flushes&quot;&lt;/span&gt;);
      waitForFlushesAndCompactions();
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;waitForFlushesAndCompactions() would wait for writestate.compacting to come down to 0.&lt;/p&gt;

&lt;p&gt;and in HRegion.compact()&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (writestate) {
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (writestate.writesEnabled) {
            wasStateSet = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
            ++writestate.compacting;
          } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; msg = &lt;span class=&quot;code-quote&quot;&gt;&quot;NOT compacting region &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;code-quote&quot;&gt;&quot;. Writes disabled.&quot;&lt;/span&gt;;
            LOG.info(msg);
            status.abort(msg);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
          }
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Also in compactor.performCompaction():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
       &lt;span class=&quot;code-comment&quot;&gt;// check periodically to see &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; a system stop is requested
&lt;/span&gt;          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (closeCheckInterval &amp;gt; 0) {
            bytesWritten += len;
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (bytesWritten &amp;gt; closeCheckInterval) {
              bytesWritten = 0;
              &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!store.areWritesEnabled()) {
                progress.cancel();
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
              }
            }
          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14996404" author="ram_krish" created="Mon, 9 Nov 2015 11:51:29 +0000"  >&lt;p&gt;Going thro the code and the patch I think the writeState itself is going to help us with region close and compactions. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;#4 needs region read lock - this requirement is kept in patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You mean this step ,&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;4. swap in compacted files&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You want to guard here when there is bulk load in parallel?&lt;br/&gt;
Because with region close and compaction I don&apos;t think we need to guard them. May be one thing we can add, after holding the lock&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-comment&quot;&gt;// Do the steps necessary to complete the compaction. Hold region open &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; these operations.
&lt;/span&gt;1256	      region.lock.readLock().lock();
1257	      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
1258	        sfs = moveCompatedFilesIntoPlace(cr, newFiles, user);
1259	        writeCompactionWalRecord(filesToCompact,
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;check if the closing is true. If so just return. That would solve all the cases I think, because if compaction is in progress close cannot proceed. IF close has started then already it would have held the write lock, in that case this read lock can just return on seeing closing=true.&lt;/p&gt;</comment>
                            <comment id="14997812" author="yuzhihong@gmail.com" created="Tue, 10 Nov 2015 01:40:42 +0000"  >&lt;p&gt;Thanks for the review, Ram.&lt;br/&gt;
Let me think about your suggestion.&lt;/p&gt;

&lt;p&gt;I ran the following command on a 6 region server cluster with patch v5 (backported to branch-1.1):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
bin/hbase --config /etc/hbase/conf org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList Loop 4 8 2000000 /tmp/hbase-biglinkedlist-verify 8 --monkey slowDeterministic
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The test passed.&lt;/p&gt;</comment>
                            <comment id="14997892" author="enis" created="Tue, 10 Nov 2015 02:42:05 +0000"  >&lt;p&gt;That test scale is pretty small BTW. &lt;/p&gt;</comment>
                            <comment id="15000902" author="yuzhihong@gmail.com" created="Wed, 11 Nov 2015 19:02:44 +0000"  >&lt;p&gt;For #4. swap in compacted files, HStore#compact() calls replaceStoreFiles() where store level write lock is obtained :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  void replaceStoreFiles(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Collection&amp;lt;StoreFile&amp;gt; compactedFiles,
      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Collection&amp;lt;StoreFile&amp;gt; result) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.lock.writeLock().lock();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15000966" author="devaraj" created="Wed, 11 Nov 2015 19:44:48 +0000"  >&lt;p&gt;Don&apos;t we need region level write lock to make sure the bulk-load is atomic for the multi-cf case?&lt;/p&gt;</comment>
                            <comment id="15001204" author="jinghe" created="Wed, 11 Nov 2015 22:01:11 +0000"  >&lt;p&gt;bulk load and compaction don&apos;t conflict with against each other on the region level (for multi-family atomicy). &lt;br/&gt;
For example, if bulk load includes family1 and family2, it is ok that compaction includes only family1.  This is not ok when you do user scan.&lt;br/&gt;
Hopefully I am right on this.&lt;/p&gt;</comment>
                            <comment id="15003706" author="devaraj" created="Fri, 13 Nov 2015 08:28:25 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jinghe&quot; class=&quot;user-hover&quot; rel=&quot;jinghe&quot;&gt;Jerry He&lt;/a&gt; yeah from my read of things, seems you are right. So &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jinghe&quot; class=&quot;user-hover&quot; rel=&quot;jinghe&quot;&gt;Jerry He&lt;/a&gt; how should we proceed? The current patch from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; seems to be locking a tad more than needed, but is that a big deal. In the current codebase the rename happens without checking for closing flag. Should we just retain that &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; (as opposed to what you propose; check closing with the readlock held...).&lt;/p&gt;</comment>
                            <comment id="15003711" author="ram_krish" created="Fri, 13 Nov 2015 08:34:01 +0000"  >&lt;p&gt;Am fine with this patch. Just thought of one suggestion - if the compaction and close depends on the writeState now (close does not proceed if any compaction is in progress), so similarly if we can add a &apos;closing&apos; state to the writeState then just before starting the compaction we can check for that state and stop the compaction from even happening. The check on writeState is any way synchronized. So it will work and also we can just avoid all the region lock in this whole flow of compaction. &lt;/p&gt;</comment>
                            <comment id="15003717" author="devaraj" created="Fri, 13 Nov 2015 08:36:12 +0000"  >&lt;p&gt;I am fine with that &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15003838" author="yuzhihong@gmail.com" created="Fri, 13 Nov 2015 10:36:05 +0000"  >&lt;p&gt;In HRegion#doClose():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      writestate.writesEnabled = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
      LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Closing &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;code-quote&quot;&gt;&quot;: disabling compactions &amp;amp; flushes&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At the beginning of compact():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (writestate) {
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (writestate.writesEnabled) {
            wasStateSet = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
            ++writestate.compacting;
          } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; msg = &lt;span class=&quot;code-quote&quot;&gt;&quot;NOT compacting region &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;code-quote&quot;&gt;&quot;. Writes disabled.&quot;&lt;/span&gt;;
            LOG.info(msg);
            status.abort(msg);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think the above already achieves &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&apos;s suggestion.&lt;/p&gt;</comment>
                            <comment id="15003903" author="ram_krish" created="Fri, 13 Nov 2015 12:03:59 +0000"  >&lt;p&gt;Then it is good. So I don&apos;t think you need the region lock at all then. You can test once if it works fine. &lt;/p&gt;</comment>
                            <comment id="15006947" author="yuzhihong@gmail.com" created="Mon, 16 Nov 2015 17:21:12 +0000"  >&lt;p&gt;Here is patch v6 according to Ram&apos;s suggestion&lt;/p&gt;</comment>
                            <comment id="15007323" author="hadoopqa" created="Mon, 16 Nov 2015 21:09:46 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12772527/14575-v6.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12772527/14575-v6.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f218e499ae12805cc35ed938c1f6d07ace048a25.&lt;br/&gt;
  ATTACHMENT ID: 12772527&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16534//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16534//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16534//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16534//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16534//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16534//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16534//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16534//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15007457" author="yuzhihong@gmail.com" created="Mon, 16 Nov 2015 22:10:38 +0000"  >&lt;p&gt;Fetching &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16534/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16534/console&lt;/a&gt;&lt;br/&gt;
Printing hanging tests&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.snapshot.TestMobExportSnapshot&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.snapshot.TestSecureExportSnapshot&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.snapshot.TestMobSecureExportSnapshot&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.snapshot.TestExportSnapshot&lt;br/&gt;
Printing Failing tests&lt;/p&gt;

&lt;p&gt;The above tests passed locally.&lt;br/&gt;
Re-running test suite.&lt;/p&gt;</comment>
                            <comment id="15007645" author="yuzhihong@gmail.com" created="Mon, 16 Nov 2015 23:50:24 +0000"  >&lt;p&gt;14575-test-case.patch contains modified test.&lt;br/&gt;
Get a test run showing current behavior&lt;/p&gt;</comment>
                            <comment id="15007713" author="hadoopqa" created="Tue, 17 Nov 2015 00:46:16 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12772594/14575-v6.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12772594/14575-v6.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f218e499ae12805cc35ed938c1f6d07ace048a25.&lt;br/&gt;
  ATTACHMENT ID: 12772594&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16538//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16538//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16538//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16538//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16538//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16538//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16538//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16538//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15007722" author="yuzhihong@gmail.com" created="Tue, 17 Nov 2015 00:49:38 +0000"  >&lt;p&gt;Ran ITBLL and IntegrationTestBulkLoad with patch v6 on 6 region server cluster.&lt;br/&gt;
Both passed.&lt;/p&gt;</comment>
                            <comment id="15007879" author="hadoopqa" created="Tue, 17 Nov 2015 02:31:18 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12772613/14575-test-case.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12772613/14575-test-case.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f218e499ae12805cc35ed938c1f6d07ace048a25.&lt;br/&gt;
  ATTACHMENT ID: 12772613&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestHRegionServerBulkLoad&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16539//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16539//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16539//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16539//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16539//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16539//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16539//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16539//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15007915" author="yuzhihong@gmail.com" created="Tue, 17 Nov 2015 03:01:29 +0000"  >&lt;p&gt;From &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16539//testReport/org.apache.hadoop.hbase.regionserver/TestHRegionServerBulkLoad/testAtomicBulkLoad_1_/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16539//testReport/org.apache.hadoop.hbase.regionserver/TestHRegionServerBulkLoad/testAtomicBulkLoad_1_/&lt;/a&gt; :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.RuntimeException: Deferred
  at org.apache.hadoop.hbase.MultithreadedTestUtil$TestContext.checkException(MultithreadedTestUtil.java:78)
  at org.apache.hadoop.hbase.MultithreadedTestUtil$TestContext.stop(MultithreadedTestUtil.java:105)
  at org.apache.hadoop.hbase.regionserver.TestHRegionServerBulkLoad.runAtomicBulkloadTest(TestHRegionServerBulkLoad.java:378)
  at org.apache.hadoop.hbase.regionserver.TestHRegionServerBulkLoad.testAtomicBulkLoad(TestHRegionServerBulkLoad.java:353)
Caused by: org.apache.hadoop.hbase.client.RetriesExhaustedException: Failed after attempts=36, exceptions:
Tue Nov 17 01:33:37 UTC 2015, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, java.net.SocketTimeoutException: callTimeout=60000, callDuration=77968: row &apos;&apos; on table &apos;atomicBulkLoad&apos; at region=atomicBulkLoad,,           1447723922183.4b02772004db4147b2144c3820b9182a., hostname=pietas.apache.org,41039,1447723918534, seqNum=2

  at org.apache.hadoop.hbase.client.RpcRetryingCallerWithReadReplicas.throwEnrichedException(RpcRetryingCallerWithReadReplicas.java:269)
  at org.apache.hadoop.hbase.client.ScannerCallableWithReplicas.call(ScannerCallableWithReplicas.java:195)
  at org.apache.hadoop.hbase.client.ScannerCallableWithReplicas.call(ScannerCallableWithReplicas.java:59)
  at org.apache.hadoop.hbase.client.RpcRetryingCallerImpl.callWithoutRetries(RpcRetryingCallerImpl.java:185)
  at org.apache.hadoop.hbase.client.ClientScanner.call(ClientScanner.java:311)
  at org.apache.hadoop.hbase.client.ClientScanner.nextScanner(ClientScanner.java:286)
  at org.apache.hadoop.hbase.client.ClientScanner.initializeScannerInConstruction(ClientScanner.java:162)
  at org.apache.hadoop.hbase.client.ClientScanner.&amp;amp;lt;init&amp;gt;(ClientScanner.java:155)
  at org.apache.hadoop.hbase.client.ClientSimpleScanner.&amp;amp;lt;init&amp;gt;(ClientSimpleScanner.java:40)
  at org.apache.hadoop.hbase.client.HTable.getScanner(HTable.java:378)
  at org.apache.hadoop.hbase.regionserver.TestHRegionServerBulkLoad$AtomicScanReader.doAnAction(TestHRegionServerBulkLoad.java:283)
  at org.apache.hadoop.hbase.MultithreadedTestUtil$RepeatingTestThread.doWork(MultithreadedTestUtil.java:147)
  at org.apache.hadoop.hbase.MultithreadedTestUtil$TestThread.run(MultithreadedTestUtil.java:123)
Caused by: java.net.SocketTimeoutException: callTimeout=60000, callDuration=77968: row &apos;&apos; on table &apos;atomicBulkLoad&apos; at region=atomicBulkLoad,,1447723922183.                      4b02772004db4147b2144c3820b9182a., hostname=pietas.apache.org,41039,1447723918534, seqNum=2
  at org.apache.hadoop.hbase.client.RpcRetryingCallerImpl.callWithRetries(RpcRetryingCallerImpl.java:151)
  at org.apache.hadoop.hbase.client.ResultBoundedCompletionService$QueueingFuture.run(ResultBoundedCompletionService.java:64)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
  at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:744)
Caused by: org.apache.hadoop.hbase.ipc.CallTimeoutException: callId=6337, method=Scan, rpcTimeout=10000, param {region { type: REGION_NAME value: &lt;span class=&quot;code-quote&quot;&gt;&quot;atomicBulkLoad,,1447723922183. 4b02772004db4147b2144c3820b9182a.&quot;&lt;/span&gt; } scan { column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0000&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0001&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0002&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0003&quot;&lt;/span&gt; }   column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0004&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0005&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0006&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0007&quot;&lt;/span&gt; } column { family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0008&quot;&lt;/span&gt; } column {     family: &lt;span class=&quot;code-quote&quot;&gt;&quot;family_0009&quot;&lt;/span&gt; } max_versions: 1 cache_blocks: &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; max_result_size: 2097152 caching: 2147483647 } number_of_rows: 0 close_scanner: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt; client_handles_partials: &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;    client_handles_heartbeats: &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; track_scan_metrics: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;}
  at org.apache.hadoop.hbase.ipc.AsyncRpcClient.call(AsyncRpcClient.java:257)
  at org.apache.hadoop.hbase.ipc.AbstractRpcClient.callBlockingMethod(AbstractRpcClient.java:217)
  at org.apache.hadoop.hbase.ipc.AbstractRpcClient$BlockingRpcChannelImplementation.callBlockingMethod(AbstractRpcClient.java:295)
  at org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$BlockingStub.scan(ClientProtos.java:33872)
  at org.apache.hadoop.hbase.client.ScannerCallable.openScanner(ScannerCallable.java:390)
  at org.apache.hadoop.hbase.client.ScannerCallable.call(ScannerCallable.java:199)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15007935" author="enis" created="Tue, 17 Nov 2015 03:20:42 +0000"  >&lt;p&gt;So it the test failure related? &lt;/p&gt;

&lt;p&gt;Agreed that the sync on writeState() seems to be protecting against close(). However, before compaction selection, the bulk load can race with compaction now, no? &lt;/p&gt;</comment>
                            <comment id="15007979" author="yuzhihong@gmail.com" created="Tue, 17 Nov 2015 04:08:40 +0000"  >&lt;p&gt;Patch v6 QA run was clean.&lt;br/&gt;
The test failure above is to show what happens without patch - current behavior.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;before compaction selection, the bulk load can race with compaction&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Please see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14575?focusedCommentId=14989905&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14989905&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-14575?focusedCommentId=14989905&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14989905&lt;/a&gt; for description.&lt;/p&gt;</comment>
                            <comment id="15009708" author="jinghe" created="Tue, 17 Nov 2015 22:25:54 +0000"  >&lt;p&gt;The v6 patch is clean and bold. Based on the discussion in this JIRA, it should work.  &lt;br/&gt;
It should obviously solve the original problem, which is &apos;compaction blocking bulkload&apos;.  The added unit test would test &apos;compaction will not block bulkload&apos;.  But the test is less useful now since the risk tilts toward relaxing too much now.&lt;br/&gt;
Overall v6 patch looks good.&lt;/p&gt;</comment>
                            <comment id="15010325" author="ram_krish" created="Wed, 18 Nov 2015 06:18:15 +0000"  >&lt;blockquote&gt;&lt;p&gt;However, before compaction selection, the bulk load can race with compaction now, no?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; - can you say more on this? Probably I missed something.&lt;/p&gt;</comment>
                            <comment id="15010379" author="stack" created="Wed, 18 Nov 2015 07:05:05 +0000"  >&lt;p&gt;Can we have more test runs please given weird hanging MR tests.&lt;/p&gt;

&lt;p&gt;Is the description at &apos;Ted Yu added a comment - 04/Nov/15 09:00&apos; accurate still? If so, why is not included in the patch. This is a difficult area to keep straight. Would help if in code rather than up in a JIRA comment someplace.&lt;/p&gt;

&lt;p&gt;On:&lt;/p&gt;

&lt;p&gt;...IntegrationTestBigLinkedList Loop 4 8 2000000 /tmp/hbase-biglinkedlist-verify 8 --monkey slowDeterministic&lt;/p&gt;

&lt;p&gt;... since it not the default 25M, don&apos;t you have to provide the width arg... (otherwise, we have just one flush of 1M followed by another flush of a linked 1M... not much opportunity for stuff to mess up).&lt;/p&gt;

&lt;p&gt;I like the intentional fail running test only showing bulk load timing out. That seems to say the test is good.&lt;/p&gt;


</comment>
                            <comment id="15010381" author="stack" created="Wed, 18 Nov 2015 07:06:01 +0000"  >&lt;p&gt;Rerun of v6.&lt;/p&gt;</comment>
                            <comment id="15010625" author="hadoopqa" created="Wed, 18 Nov 2015 09:43:08 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12772931/14575-v6.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12772931/14575-v6.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 5ebd7660a94bfb18e6e05b6e46195c76c099eda2.&lt;br/&gt;
  ATTACHMENT ID: 12772931&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16566//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16566//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16566//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16566//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16566//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16566//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16566//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16566//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15011377" author="yuzhihong@gmail.com" created="Wed, 18 Nov 2015 16:49:05 +0000"  >&lt;p&gt;The description from 04/Nov/15 09:00 is mostly accurate:&lt;br/&gt;
w.r.t. #4 swap in compacted files, region lock is not needed accordingly to subsequent discussion.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;why is not included in the patch&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The explanation is pretty long. How about putting the explanation in description of this JIRA and refer to JIRA number in the patch ?&lt;/p&gt;

&lt;p&gt;I reran ITBLL with the following parameters and it passed as well (with region lock relaxation):&lt;/p&gt;

&lt;p&gt;bin/hbase --config /etc/hbase/conf org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList Loop 4 12 2000000 /tmp/hbase-biglinkedlist-verify 8 500000 --monkey slowDeterministic&lt;/p&gt;</comment>
                            <comment id="15011388" author="stack" created="Wed, 18 Nov 2015 16:53:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;The explanation is pretty long. How about putting the explanation in description of this JIRA and refer to JIRA number in the patch ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Put in the code I&apos;d say. Thats where folks will be looking for description of locking regime. Here it will just rot. Can add (with update) on commit.&lt;/p&gt;

&lt;p&gt;Your ITBLL numbers are a little odd but fine. Any exceptions in regionserver logs?&lt;/p&gt;

&lt;p&gt;I&apos;d be game for trying this patch... do it in master and in branch-1 &amp;#8211; not 1.2 &amp;#8211; so we have time to see if any issues arise.&lt;/p&gt;</comment>
                            <comment id="15011398" author="yuzhihong@gmail.com" created="Wed, 18 Nov 2015 17:01:47 +0000"  >&lt;p&gt;Browsed some region server log but didn&apos;t find exception related to compaction.&lt;/p&gt;
</comment>
                            <comment id="15011412" author="stack" created="Wed, 18 Nov 2015 17:07:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;Browsed some region server log but didn&apos;t find exception related to compaction.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds good. +1 on commit along with description of logging regime.&lt;/p&gt;</comment>
                            <comment id="15011418" author="yuzhihong@gmail.com" created="Wed, 18 Nov 2015 17:10:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;with description of logging regime&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You meant &apos;locking regime&apos;, I guess.&lt;/p&gt;</comment>
                            <comment id="15011560" author="devaraj" created="Wed, 18 Nov 2015 18:08:06 +0000"  >&lt;p&gt;Hmm.. On the unit test, I am not sure it&apos;s going to be very effective unless we make sure compaction is underway when a multi-cf bulkload is attempted. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; can you please change the test to do that.&lt;/p&gt;</comment>
                            <comment id="15011592" author="yuzhihong@gmail.com" created="Wed, 18 Nov 2015 18:22:58 +0000"  >&lt;p&gt;Patch v7 adds comment to HRegion#compact(), explaining the rationale behind the relaxation of region lock.&lt;/p&gt;

&lt;p&gt;It also increases the frequency of compaction requests in TestHRegionServerBulkLoad&lt;/p&gt;</comment>
                            <comment id="15011976" author="hadoopqa" created="Wed, 18 Nov 2015 21:12:55 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12773040/14575-v7.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12773040/14575-v7.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit b2187c31ab8294215aab46db5dcd3b0dce4fad65.&lt;br/&gt;
  ATTACHMENT ID: 12773040&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16572//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16572//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16572//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16572//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16572//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16572//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16572//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16572//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15032568" author="devaraj" created="Mon, 30 Nov 2015 22:01:31 +0000"  >&lt;p&gt;I am +1 on the patch..&lt;/p&gt;</comment>
                            <comment id="15034882" author="yuzhihong@gmail.com" created="Tue, 1 Dec 2015 23:43:21 +0000"  >&lt;p&gt;Planning to integrate to master and branch-1 if there is no further review comment.&lt;/p&gt;</comment>
                            <comment id="15035247" author="hudson" created="Wed, 2 Dec 2015 04:26:30 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-Trunk_matrix #521 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/521/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/521/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14575&quot; title=&quot;Relax region read lock for compactions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14575&quot;&gt;&lt;del&gt;HBASE-14575&lt;/del&gt;&lt;/a&gt; Relax region read lock for compactions (Nick and Ted) (tedyu: rev d8b30b892561126b02bd5d27dbe11a01f97908d1)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionServerBulkLoad.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15035939" author="hudson" created="Wed, 2 Dec 2015 15:12:58 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.3-IT #350 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3-IT/350/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3-IT/350/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14575&quot; title=&quot;Relax region read lock for compactions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14575&quot;&gt;&lt;del&gt;HBASE-14575&lt;/del&gt;&lt;/a&gt; Relax region read lock for compactions (Nick and Ted) (tedyu: rev 3b6ae17a72059e8fad9487ab5c02e47d04378e66)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionServerBulkLoad.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15036324" author="hudson" created="Wed, 2 Dec 2015 18:30:49 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.3 #410 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/410/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/410/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14575&quot; title=&quot;Relax region read lock for compactions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14575&quot;&gt;&lt;del&gt;HBASE-14575&lt;/del&gt;&lt;/a&gt; Relax region read lock for compactions (Nick and Ted) (tedyu: rev 3b6ae17a72059e8fad9487ab5c02e47d04378e66)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionServerBulkLoad.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15036333" author="yuzhihong@gmail.com" created="Wed, 2 Dec 2015 18:34:05 +0000"  >&lt;p&gt;Unit test suite results are quite clean.&lt;/p&gt;

&lt;p&gt;Thanks for the reviews.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12772613" name="14575-test-case.patch" size="5348" author="yuzhihong@gmail.com" created="Mon, 16 Nov 2015 23:50:24 +0000"/>
                            <attachment id="12766663" name="14575-v1.patch" size="36728" author="yuzhihong@gmail.com" created="Wed, 14 Oct 2015 22:02:54 +0000"/>
                            <attachment id="12768858" name="14575-v2.patch" size="39490" author="yuzhihong@gmail.com" created="Mon, 26 Oct 2015 23:43:03 +0000"/>
                            <attachment id="12769839" name="14575-v3.patch" size="43143" author="yuzhihong@gmail.com" created="Fri, 30 Oct 2015 18:53:05 +0000"/>
                            <attachment id="12769873" name="14575-v4.patch" size="44838" author="yuzhihong@gmail.com" created="Fri, 30 Oct 2015 21:23:42 +0000"/>
                            <attachment id="12770335" name="14575-v5.patch" size="44130" author="yuzhihong@gmail.com" created="Tue, 3 Nov 2015 15:30:26 +0000"/>
                            <attachment id="12772931" name="14575-v6.txt" size="6634" author="stack" created="Wed, 18 Nov 2015 07:06:01 +0000"/>
                            <attachment id="12772594" name="14575-v6.txt" size="6634" author="yuzhihong@gmail.com" created="Mon, 16 Nov 2015 21:52:24 +0000"/>
                            <attachment id="12772527" name="14575-v6.txt" size="6634" author="yuzhihong@gmail.com" created="Mon, 16 Nov 2015 17:21:12 +0000"/>
                            <attachment id="12773040" name="14575-v7.txt" size="10653" author="yuzhihong@gmail.com" created="Wed, 18 Nov 2015 18:22:58 +0000"/>
                            <attachment id="12765484" name="14575.v00.patch" size="37906" author="ndimiduk" created="Wed, 7 Oct 2015 23:49:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 8 Oct 2015 18:33:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 2 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2mq13:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>