<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:12:09 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3674/HBASE-3674.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3674] Treat ChecksumException as we would a ParseException splitting logs; else we replay split on every restart</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3674</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In short, a ChecksumException will fail log processing for a server so we skip out w/o archiving logs.  On restart, we&apos;ll then reprocess the logs &amp;#8211; hit the checksumexception anew, usually &amp;#8211; and so on.&lt;/p&gt;

&lt;p&gt;Here is the splitLog method (edited):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;Path&amp;gt; splitLog(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; FileStatus[] logfiles) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    ....
    outputSink.startWriterThreads(entryBuffers);
    
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0;
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (FileStatus log : logfiles) {
       Path logPath = log.getPath();
        &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; logLength = log.getLen();
        splitSize += logLength;
        LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Splitting hlog &quot;&lt;/span&gt; + (i++ + 1) + &lt;span class=&quot;code-quote&quot;&gt;&quot; of &quot;&lt;/span&gt; + logfiles.length
            + &lt;span class=&quot;code-quote&quot;&gt;&quot;: &quot;&lt;/span&gt; + logPath + &lt;span class=&quot;code-quote&quot;&gt;&quot;, length=&quot;&lt;/span&gt; + logLength);
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
          recoverFileLease(fs, logPath, conf);
          parseHLog(log, entryBuffers, fs, conf);
          processedLogs.add(logPath);
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (EOFException eof) {
          &lt;span class=&quot;code-comment&quot;&gt;// truncated files are expected &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; a RS crashes (see HBASE-2643)
&lt;/span&gt;          LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;EOF from hlog &quot;&lt;/span&gt; + logPath + &lt;span class=&quot;code-quote&quot;&gt;&quot;. Continuing&quot;&lt;/span&gt;);
          processedLogs.add(logPath);
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (FileNotFoundException fnfe) {
          &lt;span class=&quot;code-comment&quot;&gt;// A file may be missing &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the region server was able to archive it
&lt;/span&gt;          &lt;span class=&quot;code-comment&quot;&gt;// before shutting down. This means the edits were persisted already
&lt;/span&gt;          LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;A log was missing &quot;&lt;/span&gt; + logPath +
              &lt;span class=&quot;code-quote&quot;&gt;&quot;, probably because it was moved by the&quot;&lt;/span&gt; +
              &lt;span class=&quot;code-quote&quot;&gt;&quot; now dead region server. Continuing&quot;&lt;/span&gt;);
          processedLogs.add(logPath);
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
          &lt;span class=&quot;code-comment&quot;&gt;// If the IOE resulted from bad file format,
&lt;/span&gt;          &lt;span class=&quot;code-comment&quot;&gt;// then &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; problem is idempotent and retrying won&apos;t help
&lt;/span&gt;          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (e.getCause() &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; ParseException ||
              e.getCause() &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; ChecksumException) {
            LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;ParseException from hlog &quot;&lt;/span&gt; + logPath + &lt;span class=&quot;code-quote&quot;&gt;&quot;.  continuing&quot;&lt;/span&gt;);
            processedLogs.add(logPath);
          } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (skipErrors) {
              LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Got &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; parsing hlog &quot;&lt;/span&gt; + logPath +
                &lt;span class=&quot;code-quote&quot;&gt;&quot;. Marking as corrupted&quot;&lt;/span&gt;, e);
              corruptedLogs.add(logPath);
            } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
              &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; e;
            }
          }
        }
      }
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (fs.listStatus(srcDir).length &amp;gt; processedLogs.size()
          + corruptedLogs.size()) {
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OrphanHLogAfterSplitException(
            &lt;span class=&quot;code-quote&quot;&gt;&quot;Discovered orphan hlog after split. Maybe the &quot;&lt;/span&gt;
            + &lt;span class=&quot;code-quote&quot;&gt;&quot;HRegionServer was not dead when we started&quot;&lt;/span&gt;);
      }
      archiveLogs(srcDir, corruptedLogs, processedLogs, oldLogDir, fs, conf);      
    } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
      splits = outputSink.finishWritingAndClose();
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; splits;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice how we&apos;ll only archive logs only if we successfully split all logs.  We won&apos;t archive 31 of 35 files if we happen to get a checksum exception on file 32.&lt;/p&gt;

&lt;p&gt;I think we should treat a ChecksumException the same as a ParseException; a retry will not fix it if HDFS could not get around the ChecksumException (seems like in our case all replicas were corrupt).&lt;/p&gt;

&lt;p&gt;Here is a play-by-play from the logs:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
813572 2011-03-18 20:31:44,687 DEBUG org.apache.hadoop.hbase.regionserver.wal.HLogSplitter: Splitting hlog 34 of 35: hdfs:&lt;span class=&quot;code-comment&quot;&gt;//sv2borg170:9000/hbase/.logs/sv2borg182,60020,1300384550664/sv2borg182%3A60020.1300461329481, length=150       65662813573 2011-03-18 20:31:44,687 INFO org.apache.hadoop.hbase.util.FSUtils: Recovering file hdfs://sv2borg170:9000/hbase/.logs/sv2borg182,60020,1300384550664/sv2borg182%3A60020.1300461329481
&lt;/span&gt;....
813617 2011-03-18 20:31:46,238 INFO org.apache.hadoop.fs.FSInputChecker: Found checksum error: b[0, 512]=000000cd000000502037383661376439656265643938636463343433386132343631323633303239371d6170695f6163636573735f746f6b656e5f7374       6174735f6275636b65740000000d9fa4d5dc0000012ec9c7cbaf00ffffffff000000010000006d0000005d00000008002337626262663764626431616561366234616130656334383436653732333132643a32390764656661756c746170695f616e64726f69645f6c6f67676564       696e5f73686172655f70656e64696e675f696e69740000012ec956b02804000000000000000100000000ffffffff4e128eca0eb078d0652b0abac467fd09000000cd000000502034663166613763666165333930666332653138346233393931303132623366331d6170695f6163       636573735f746f6b656e5f73746174735f6275636b65740000000d9fa4d5dd0000012ec9c7cbaf00ffffffff000000010000006d0000005d00000008002366303734323966643036323862636530336238333938356239316237386633353a32390764656661756c746170695f61       6e64726f69645f6c6f67676564696e5f73686172655f70656e64696e675f696e69740000012ec9569f1804000000000000000100000000000000d30000004e2066663763393964303633343339666531666461633761616632613964643631331b6170695f6163636573735f746f       6b656e5f73746174735f68
813618 org.apache.hadoop.fs.ChecksumException: Checksum error: /blk_7781725413191608261:of:/hbase/.logs/sv2borg182,60020,1300384550664/sv2borg182%3A60020.1300461329481 at 15064576
813619         at org.apache.hadoop.fs.FSInputChecker.verifySum(FSInputChecker.java:277)
813620         at org.apache.hadoop.fs.FSInputChecker.readChecksumChunk(FSInputChecker.java:241)
813621         at org.apache.hadoop.fs.FSInputChecker.fill(FSInputChecker.java:176)
813622         at org.apache.hadoop.fs.FSInputChecker.read1(FSInputChecker.java:193)
813623         at org.apache.hadoop.fs.FSInputChecker.read(FSInputChecker.java:158)
813624         at org.apache.hadoop.hdfs.DFSClient$BlockReader.read(DFSClient.java:1175)
813625         at org.apache.hadoop.hdfs.DFSClient$DFSInputStream.readBuffer(DFSClient.java:1807)
813626         at org.apache.hadoop.hdfs.DFSClient$DFSInputStream.read(DFSClient.java:1859)
813627         at java.io.DataInputStream.read(DataInputStream.java:132)
813628         at java.io.DataInputStream.readFully(DataInputStream.java:178)
813629         at org.apache.hadoop.io.DataOutputBuffer$Buffer.write(DataOutputBuffer.java:63)
813630         at org.apache.hadoop.io.DataOutputBuffer.write(DataOutputBuffer.java:101)
813631         at org.apache.hadoop.io.SequenceFile$Reader.next(SequenceFile.java:1937)
813632         at org.apache.hadoop.io.SequenceFile$Reader.next(SequenceFile.java:1837)
813633         at org.apache.hadoop.io.SequenceFile$Reader.next(SequenceFile.java:1883)
813634         at org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogReader.next(SequenceFileLogReader.java:198)
813635         at org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogReader.next(SequenceFileLogReader.java:172)
813636         at org.apache.hadoop.hbase.regionserver.wal.HLogSplitter.parseHLog(HLogSplitter.java:429)
813637         at org.apache.hadoop.hbase.regionserver.wal.HLogSplitter.splitLog(HLogSplitter.java:262)
813638         at org.apache.hadoop.hbase.regionserver.wal.HLogSplitter.splitLog(HLogSplitter.java:188)
813639         at org.apache.hadoop.hbase.master.MasterFileSystem.splitLog(MasterFileSystem.java:197)
813640         at org.apache.hadoop.hbase.master.MasterFileSystem.splitLogAfterStartup(MasterFileSystem.java:181)
813641         at org.apache.hadoop.hbase.master.HMaster.finishInitialization(HMaster.java:384)
813642         at org.apache.hadoop.hbase.master.HMaster.run(HMaster.java:283)
813643 2011-03-18 20:31:46,239 WARN org.apache.hadoop.hdfs.DFSClient: Found Checksum error &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; blk_7781725413191608261_14589573 from 10.20.20.182:50010 at 15064576
813644 2011-03-18 20:31:46,240 INFO org.apache.hadoop.hdfs.DFSClient: Could not obtain block blk_7781725413191608261_14589573 from any node: java.io.IOException: No live nodes contain current block. Will get &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; block locations        from namenode and retry...
813645 2011-03-18 20:31:49,243 DEBUG org.apache.hadoop.hbase.regionserver.wal.HLogSplitter: Pushed=80624 entries from hdfs:&lt;span class=&quot;code-comment&quot;&gt;//sv2borg170:9000/hbase/.logs/sv2borg182,60020,1300384550664/sv2borg182%3A60020.1300461329481
&lt;/span&gt;....
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See code above.  On exception we&apos;ll dump edits read so far from this block, close out all writers tying off recovered.edits so far written.  We&apos;ll skip archiving these files because we only archive if all files are processed; we won&apos;t archive files 30 of 35 if we failed splitting on file 31.&lt;/p&gt;

&lt;p&gt;I think checksumexception should be treated same as a ParseException&lt;/p&gt;


</description>
                <environment></environment>
        <key id="12501846">HBASE-3674</key>
            <summary>Treat ChecksumException as we would a ParseException splitting logs; else we replay split on every restart</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Fri, 18 Mar 2011 23:49:33 +0000</created>
                <updated>Fri, 20 Nov 2015 12:42:56 +0000</updated>
                            <resolved>Tue, 22 Mar 2011 02:08:38 +0000</resolved>
                                                    <fixVersion>0.90.2</fixVersion>
                                    <component>wal</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13008686" author="stack" created="Fri, 18 Mar 2011 23:57:52 +0000"  >&lt;p&gt;Here is a first cut at a patch.&lt;/p&gt;</comment>
                            <comment id="13008688" author="stack" created="Sat, 19 Mar 2011 00:00:59 +0000"  >&lt;p&gt;Submitting patch, needs a test though.&lt;/p&gt;</comment>
                            <comment id="13009514" author="nspiegelberg" created="Tue, 22 Mar 2011 01:59:08 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13009515" author="stack" created="Tue, 22 Mar 2011 02:08:38 +0000"  >&lt;p&gt;Committed branch and trunk.  Thanks for the review Nicolas&lt;/p&gt;</comment>
                            <comment id="13009963" author="hudson" created="Wed, 23 Mar 2011 01:44:13 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1803 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/HBase-TRUNK/1803/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/HBase-TRUNK/1803/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="13022873" author="khemani" created="Thu, 21 Apr 2011 19:09:43 +0000"  >&lt;p&gt;This change got overwritten when &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1364&quot; title=&quot;[performance] Distributed splitting of regionserver commit logs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1364&quot;&gt;&lt;del&gt;HBASE-1364&lt;/del&gt;&lt;/a&gt; was integrated.&lt;/p&gt;

&lt;p&gt;The change has to be added in HLogSplitter  in the method getNextLogLine&lt;/p&gt;

&lt;p&gt;static private Entry getNextLogLine(Reader in, Path path, boolean skipErrors)&lt;br/&gt;
  throws CorruptedLogFileException, IOException {&lt;br/&gt;
    try &lt;/p&gt;
{
      return in.next();
    }
&lt;p&gt; catch (EOFException eof) &lt;/p&gt;
{
      // truncated files are expected if a RS crashes (see HBASE-2643)
      LOG.info(&quot;EOF from hlog &quot; + path + &quot;.  continuing&quot;);
      return null;
    }
&lt;p&gt; catch (IOException e) {&lt;br/&gt;
      // If the IOE resulted from bad file format,&lt;br/&gt;
      // then this problem is idempotent and retrying won&apos;t help&lt;br/&gt;
      if (e.getCause() instanceof ParseException) &lt;/p&gt;
{
        LOG.warn(&quot;ParseException from hlog &quot; + path + &quot;.  continuing&quot;);
        return null;
      }


&lt;p&gt;It might also be necessary to add this change to getReader(...) method&lt;/p&gt;

&lt;p&gt;  protected Reader getReader(FileSystem fs, FileStatus file, Configuration conf,&lt;br/&gt;
      boolean skipErrors)&lt;br/&gt;
      throws IOException, CorruptedLogFileException {&lt;br/&gt;
    Path path = file.getPath();&lt;br/&gt;
    long length = file.getLen();&lt;br/&gt;
    Reader in;&lt;/p&gt;


&lt;p&gt;    // Check for possibly empty file. With appends, currently Hadoop reports a&lt;br/&gt;
    // zero length even if the file has been sync&apos;d. Revisit if &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-376&quot; title=&quot;FileSystem.listStatus should report the current length of a file if it has been sync&amp;#39;d&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-376&quot;&gt;HDFS-376&lt;/a&gt; or&lt;br/&gt;
    // &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-878&quot; title=&quot;FileStatus should have a field &amp;quot;isUnderConstruction&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-878&quot;&gt;HDFS-878&lt;/a&gt; is committed.&lt;br/&gt;
    if (length &amp;lt;= 0) &lt;/p&gt;
{
      LOG.warn(&quot;File &quot; + path + &quot; might be still open, length is 0&quot;);
    }

&lt;p&gt;    try {&lt;br/&gt;
      recoverFileLease(fs, path, conf);&lt;br/&gt;
      try &lt;/p&gt;
{
        in = getReader(fs, path, conf);
      }
&lt;p&gt; catch (EOFException e) {&lt;br/&gt;
        if (length &amp;lt;= 0) {&lt;br/&gt;
          // TODO should we ignore an empty, not-last log file if skip.errors&lt;br/&gt;
          // is false? Either way, the caller should decide what to do. E.g.&lt;br/&gt;
          // ignore if this is the last log in sequence.&lt;br/&gt;
          // TODO is this scenario still possible if the log has been&lt;br/&gt;
          // recovered (i.e. closed)&lt;br/&gt;
          LOG.warn(&quot;Could not open &quot; + path + &quot; for reading. File is empty&quot;, e);&lt;br/&gt;
          return null;&lt;/p&gt;

</comment>
                            <comment id="13022964" author="khemani" created="Thu, 21 Apr 2011 22:41:00 +0000"  >&lt;p&gt;The patch sets the hbase.hlog.split.skip.errors to true by default. I am wondering why the CheckSumException was not ignored as originally proposed?&lt;/p&gt;

&lt;p&gt;This patch is there in the trunk. In the serialized log splitting case hbase.hlog.split.skip.errors is set to true. But in the distributed log splitting case hbase.hlog.split.skip.errors is set to false by default.&lt;/p&gt;</comment>
                            <comment id="13023042" author="tlipcon" created="Fri, 22 Apr 2011 00:04:28 +0000"  >&lt;p&gt;I actually missed when this went in. Having the default be to skip errors seems really really dangerous.... especially as a change in a release branch.&lt;/p&gt;</comment>
                            <comment id="13025008" author="stack" created="Mon, 25 Apr 2011 23:34:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;I actually missed when this went in. Having the default be to skip errors seems really really dangerous.... especially as a change in a release branch.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Default was true but we would keep going anyways; it was incorrectly implemented.  I opened &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3675&quot; title=&quot;hbase.hlog.split.skip.errors is false by default but we don&amp;#39;t act properly when its true; can make for inconsistent view&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3675&quot;&gt;HBASE-3675&lt;/a&gt; at the time.  Suggest that we continue the discussion around how dangerous changing the config is/was over there.  In here I&apos;ll just make sure the distributed splitter has same flags as the splitter it replaces.&lt;/p&gt;

&lt;p&gt;Thanks Todd for helping keeping us honest.&lt;/p&gt;</comment>
                            <comment id="13025051" author="stack" created="Tue, 26 Apr 2011 03:49:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;The patch sets the hbase.hlog.split.skip.errors to true by default. I am wondering why the CheckSumException was not ignored as originally proposed?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Prakash, there are two patches.  The first adds ignoring checksumexception.&lt;/p&gt;</comment>
                            <comment id="13025054" author="stack" created="Tue, 26 Apr 2011 03:54:48 +0000"  >&lt;p&gt;How about this Prakash?  This adds back the changes and sets default to true for the fail flag.&lt;/p&gt;</comment>
                            <comment id="13025071" author="khemani" created="Tue, 26 Apr 2011 05:01:45 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13025366" author="stack" created="Tue, 26 Apr 2011 18:32:52 +0000"  >&lt;p&gt;Committed to TRUNK.  Thanks for review Prakash.&lt;/p&gt;</comment>
                            <comment id="13027259" author="hudson" created="Sat, 30 Apr 2011 00:53:41 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1888 (See &lt;a href=&quot;https://builds.apache.org/hudson/job/HBase-TRUNK/1888/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/hudson/job/HBase-TRUNK/1888/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="15017385" author="lars_francke" created="Fri, 20 Nov 2015 12:42:56 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12477362" name="3674-distributed.txt" size="1416" author="stack" created="Tue, 26 Apr 2011 03:54:48 +0000"/>
                            <attachment id="12474261" name="3674-v2.txt" size="1159" author="stack" created="Tue, 22 Mar 2011 01:58:49 +0000"/>
                            <attachment id="12474045" name="3674.txt" size="1093" author="stack" created="Fri, 18 Mar 2011 23:57:52 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 22 Mar 2011 01:59:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26976</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hnbr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101041</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>This commit changes our &amp;quot;hbase.hlog.split.skip.errors&amp;quot; from false to true.  IMPORTANT DIFFERENCE!!!!! We&amp;#39;re going to just archive corrupted files and keep going over them rather than stop forward motion.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>