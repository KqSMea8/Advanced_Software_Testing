<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:01:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2342/HBASE-2342.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2342] Consider adding a watchdog node next to region server</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2342</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This idea has been bandied about a fair amount. The concept is to add a second java process that runs next to each region server to act as a watchdog. Several possible purposes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;monitor the RS for liveness - if it exhibits Juliet syndrome (&quot;appears dead&quot;) then we kill it agressively to prevent it from coming back to life&lt;/li&gt;
	&lt;li&gt;restart RS automatically in failure cases&lt;/li&gt;
	&lt;li&gt;potentially move the entire ZK session to the watchdog to decouple node liveness from the particular JVM liveness&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Let&apos;s discuss in this JIRA.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12459456">HBASE-2342</key>
            <summary>Consider adding a watchdog node next to region server</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tlipcon">Todd Lipcon</reporter>
                        <labels>
                    </labels>
                <created>Wed, 17 Mar 2010 23:29:30 +0000</created>
                <updated>Tue, 30 Oct 2012 22:20:44 +0000</updated>
                            <resolved>Tue, 30 Oct 2012 22:20:44 +0000</resolved>
                                                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="12846676" author="ryanobjc" created="Wed, 17 Mar 2010 23:43:11 +0000"  >&lt;p&gt;Run it as a parent process, thus ensuring via the OS level primitives that you get notification of a process death. You can also aggressively set the ZK timeout low (since it will be running in a low-GC pause process) and you can tune the detection of a Juliet pause differently.  Maybe you would accept a 30 second GC pause, it might be better than killing the processing, ensuring data loss (pre &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-200&quot; title=&quot;In HDFS, sync() not yet guarantees data available to the new readers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-200&quot;&gt;&lt;del&gt;HDFS-200&lt;/del&gt;&lt;/a&gt;) or otherwise causing unnecessary cluster churn.&lt;/p&gt;</comment>
                            <comment id="12846681" author="tlipcon" created="Wed, 17 Mar 2010 23:48:42 +0000"  >&lt;p&gt;One question is whether &lt;em&gt;both&lt;/em&gt; nodes would be ZK clients, or just the watchdog? If only the watchdog, we&apos;d have to communicate back and forth between them about any ZK stuff, which would be a big pain in my opinion.&lt;/p&gt;

&lt;p&gt;Another thought worth considering here is whether we could proactively do &quot;rolling restarts&quot; of region servers to avoid heap fragmentation in the first place. It&apos;s a bit of a pain since you&apos;d end up with a cold cache, but if we could detect when the heap was getting fragmented and do a very fast RS restart, it&apos;s worth thinking about.&lt;/p&gt;</comment>
                            <comment id="12846772" author="tlipcon" created="Thu, 18 Mar 2010 06:41:07 +0000"  >&lt;p&gt;Here&apos;s a crazy idea: JVM-TI (the JVM tool interface) allows you to hook events like GC start and GC stop. This could potentially be useful while watching the region server to understand whether the RS is &quot;just sleeping&quot; in GC or actually hosed in some way. It&apos;s also a pain in the butt because it requires native code, but worth thinking about.&lt;/p&gt;</comment>
                            <comment id="12847704" author="stack" created="Sat, 20 Mar 2010 03:34:33 +0000"  >&lt;p&gt;I like the ideas in here, in particular the interception of GC start/stop and proactive rolling restart.&lt;/p&gt;

&lt;p&gt;I agree that catching zk events in the babysitter then relaying them to the RS would be a horrorshow, especially where we are talking of all RS transitions going via zk.&lt;/p&gt;

&lt;p&gt;I wrote the hotspot gc list to see if there is a way of getting forewarning a full serial GC is imminent or if we can trigger it at preordained time.  Lets see if I get anything back orther than consult with your vendor.&lt;/p&gt;

&lt;p&gt;What about the idea that was discussed a good while back of a lightweight zk heartbeater that lived outside of the RS in native space done up in native code?  It&apos;d be immune to GC pause.  It would keep up the session with zk (only).  It&apos;d kill the RS if it lost its zk session &amp;#8211; perhaps its parent process on the RS &amp;#8211; and whereas the RS with its heavy-weight zk connection, once it&apos;d revived, it&apos;d just renew its session or, just have timeouts that were  hard to expire and carry on from where it&apos;d left off.&lt;/p&gt;

&lt;p&gt;While the above might run into long Juliet pauses, we&apos;d log them.  GC tuning would help mitigate, at least some (though it seems occasional full serial GC is unavoidlable).&lt;/p&gt;</comment>
                            <comment id="12847705" author="stack" created="Sat, 20 Mar 2010 03:44:54 +0000"  >&lt;p&gt;On the possibility of scheduling an explicit defrag of the tenured generation:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
from	Jon Masamitsu &amp;lt;Jon.Masamitsu@sun.com&amp;gt;
cc	hotspot-gc-use@openjdk.java.net
date	Fri, Mar 19, 2010 at 8:43 PM
subject	Re: Using CMS, any chance of forewarning a serial full GC is imminent?
	
&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.gc() will cause CMS to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; a full collection.  Does that
help?  As &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; as you have not turned off explicit GC&apos;s nor
set flags so that CMS does &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.gc() concurrently, you can
compact the tenured (CMS) gen that way.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12847772" author="stack" created="Sat, 20 Mar 2010 15:13:20 +0000"  >&lt;p&gt;More:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Jon Masamitsu &amp;lt;Jon.Masamitsu@sun.com&amp;gt;
date	Fri, Mar 19, 2010 at 10:11 PM
subject	Re: Using CMS, any chance of forewarning a serial full GC is imminent?
	
So it&apos;s a fragmentation issue.  If you haven&apos;t seen

http:&lt;span class=&quot;code-comment&quot;&gt;//blogs.sun.com/jonthecollector/entry/what_the_heck_s_a
&lt;/span&gt;
it might help.  Also &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; CMS in 6u20.  It has some improvements &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;
reducing fragmentation.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="12848559" author="stack" created="Tue, 23 Mar 2010 06:14:16 +0000"  >&lt;p&gt;Another reponse on the thread talks of difficulty signalling imminent stop-the-world full GC: &lt;a href=&quot;http://permalink.gmane.org/gmane.comp.java.openjdk.hotspot.gc.devel/1680&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://permalink.gmane.org/gmane.comp.java.openjdk.hotspot.gc.devel/1680&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13487300" author="tlipcon" created="Tue, 30 Oct 2012 22:20:44 +0000"  >&lt;p&gt;I think this has been obviated by other work, in particular nkeywal&apos;s work to kill the ZK node as soon as the RS dies. We can re-open this if anyone sees a good reason.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 17 Mar 2010 23:43:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32530</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 7 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dcjr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>75962</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>