<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:45:33 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7413/HBASE-7413.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7413] Convert WAL to pb</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7413</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;From &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7201&quot; title=&quot;Convert HLog / HFile metadata content to PB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7201&quot;&gt;&lt;del&gt;HBASE-7201&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12624916">HBASE-7413</key>
            <summary>Convert WAL to pb</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12540505">HBASE-5305</parent>
                                    <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sershe">Sergey Shelukhin</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Dec 2012 23:20:11 +0000</created>
                <updated>Mon, 23 Sep 2013 19:08:31 +0000</updated>
                            <resolved>Wed, 1 May 2013 17:55:37 +0000</resolved>
                                                    <fixVersion>0.95.1</fixVersion>
                                    <component>wal</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>15</watches>
                                                                <comments>
                            <comment id="13537475" author="stack" created="Thu, 20 Dec 2012 23:21:47 +0000"  >&lt;p&gt;Convertion needs to work in a manner such that we can continue to read old WALs written in old style w/ Writable.&lt;/p&gt;</comment>
                            <comment id="13630624" author="sershe" created="Fri, 12 Apr 2013 21:06:05 +0000"  >&lt;p&gt;This major and version-less. Should it be critical and 0.95?&lt;/p&gt;</comment>
                            <comment id="13630650" author="enis" created="Fri, 12 Apr 2013 21:26:42 +0000"  >&lt;p&gt;This is also non-noob I think. removed the tags. &lt;/p&gt;</comment>
                            <comment id="13630824" author="sershe" created="Sat, 13 Apr 2013 00:35:43 +0000"  >&lt;p&gt;The plan is like this: sequence file (current WAL) starts with magic.&lt;br/&gt;
New WAL will also start with a different magic and will not be a SequenceFile. All creation of SequenceFileLogReader will be thru HLogFactory, right now it just takes care of the configurable classes, in new case it will also have to tell magics apart and choose the correct reader implementation. Custom user implementations will obviously break for PB WAL.&lt;br/&gt;
PB WAL will have one PB message per HLog.Entry, writing/reading using *Delimited methods.&lt;br/&gt;
KVs will be written as byte array, and compression will work in the same way as now for them and for families.&lt;br/&gt;
On read, the entry will be converted into original HLog.Entry with key and value.&lt;/p&gt;</comment>
                            <comment id="13630829" author="sershe" created="Sat, 13 Apr 2013 00:41:01 +0000"  >&lt;p&gt;Oh. There will be header in front, also PB, so far it will only store the compression flag.&lt;/p&gt;</comment>
                            <comment id="13632221" author="sershe" created="Mon, 15 Apr 2013 21:33:46 +0000"  >&lt;p&gt;After some consideration, KVs might not just be written into a byte buffer, but actually interleaved with protobuf records. Each such KV block could have several KVs, and the protobuf structure is going to have corresponding number of &quot;WALEdit&quot; records that don&apos;t have KVs but have, for example, KVs.&lt;br/&gt;
WALEdit inside protobuf as a byte buffer will result in unnecessary copies on the write path.&lt;/p&gt;</comment>
                            <comment id="13632224" author="sershe" created="Mon, 15 Apr 2013 21:34:56 +0000"  >&lt;p&gt;Marking critical for 95.1 based on parent, feel free to unmark.&lt;/p&gt;</comment>
                            <comment id="13632244" author="yuzhihong@gmail.com" created="Mon, 15 Apr 2013 21:46:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;corresponding number of &quot;WALEdit&quot; records that don&apos;t have KVs but have, for example, KVs.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can you clarify the above a bit ?&lt;/p&gt;</comment>
                            <comment id="13632438" author="sershe" created="Tue, 16 Apr 2013 00:34:24 +0000"  >&lt;p&gt;err... nonces, not KVs&lt;/p&gt;</comment>
                            <comment id="13633153" author="stack" created="Tue, 16 Apr 2013 18:35:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt; Please post a one page on how you think it will look w/ reference to how it currently works.&lt;/p&gt;

&lt;p&gt;Stuff to consider:&lt;/p&gt;

&lt;p&gt;+ Do we have to make our own format?  Can we not reuse?&lt;br/&gt;
+ Ideally, can take a protobuf multi message off rpc w/ cellBlocks as is and just put it into the WAL w/o unmarshalling/marshalling making new types (cellBlocks have codecs now and they can be compressed &amp;#8211; would be sweet if they retained their compression/codec when in WAL &amp;#8211; would mean though that the compression/codec used would have to be associated w/ the WAL entry since it is currently only in the Connection header for the particular client server-side)&lt;/p&gt;

&lt;p&gt;If we could do away with the HLog entry key, that&apos;d be cool but it has info such as target region, replication...&lt;/p&gt;</comment>
                            <comment id="13633332" author="sershe" created="Tue, 16 Apr 2013 20:46:28 +0000"  >&lt;p&gt;The comments above add to almost a page &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Do we have to make our own format? Can we not reuse?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We use protobufs. The only additions on top of that is: we don&apos;t want to put KVs in protobuf, so we write them using writables as before; and we need magic at start to tell the new files apart from old (old ones have different magic). What do you have in mind to reuse?&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Ideally, can take a protobuf multi message off rpc w/ cellBlocks as is and just put it into the WAL w/o unmarshalling/marshalling making new types&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;WAL RPC message currently has byte buffer for KVs. That would result in extra copy of KVs... I did lift most of the Admin.proto RPC stuff, with few changes.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;(cellBlocks have codecs now and they can be compressed &#8211; would be sweet if they retained their compression/codec when in WAL &#8211; would mean though that the compression/codec used would have to be associated w/ the WAL entry since it is currently only in the Connection header for the particular client server-side)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Compression is retained.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If we could do away with the HLog entry key, that&apos;d be cool but it has info such as target region, replication...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I actually moved replication scopes from WALEdit to HLogKey, so WALEdit is just KVs. I&apos;d say if we have some reasonable way to put KVs into PB w/o overhead there should just be one structure because WALEdit and HLogKey are used together everywhere for practical purposes.&lt;br/&gt;
Another obstacle to uniting them is all the code that uses them of course &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; So this should be a separate JIRA, I did leave a TODO&lt;/p&gt;
</comment>
                            <comment id="13633381" author="eclark" created="Tue, 16 Apr 2013 21:21:58 +0000"  >&lt;p&gt;Putting KeyValues into protobufs will mean there&apos;s another copy in the write path.  How much of a pref impact are we going to take, for lots of use cases the WAL is already the pain point.&lt;/p&gt;</comment>
                            <comment id="13633643" author="stack" created="Wed, 17 Apr 2013 01:19:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;...so we write them using writables as before...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Lets not do the above.&lt;/p&gt;

&lt;p&gt;See what comes in on rpc.  Its a pb param and optionally a cellblock &lt;a href=&quot;http://hbase.apache.org/book.html#hbase.rpc&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/book.html#hbase.rpc&lt;/a&gt; Ideally, we would take what came off the wire and just put it straight into WAL w/o conversion (just say no to Writables!).&lt;/p&gt;</comment>
                            <comment id="13633702" author="sershe" created="Wed, 17 Apr 2013 03:00:36 +0000"  >&lt;p&gt;Ok, I had patch almost ready (barring some test failures), and couldn&apos;t grok Cell/CellBlock stuff from a short cursory look, so for now I went ahead with this scheme in v0 patch.&lt;br/&gt;
I will try to look more at this cell stuff tomorrow... do you have good example place to see how to use it for similar purposes in existing code?&lt;br/&gt;
Initial patch contains the changes as described above.&lt;/p&gt;

&lt;p&gt;I also moved around some PBs (hence large patch).&lt;br/&gt;
Also added compression to scopes while I was at it.&lt;br/&gt;
One unresolves questions is ill-supported HLogKey class customization. From some digging I found it was used to affect serialization in times immemorial; obviously this is not going to work anymore, so I wonder if it should just be removed.&lt;br/&gt;
Many HLog/WAL tests passed locally, let&apos;s see what jenkins says.&lt;/p&gt;</comment>
                            <comment id="13633746" author="hadoopqa" created="Wed, 17 Apr 2013 04:15:23 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12579082/HBASE-7413-v0.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12579082/HBASE-7413-v0.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 26 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5334//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13634248" author="stack" created="Wed, 17 Apr 2013 17:53:23 +0000"  >&lt;p&gt;Look in IPCUtils in the ipc package.  See how it is used.  We should figure out what is tough grokking Cell and CellBlock since if it is hard for you, it is going to be really hard for everyone else.  Basically, we want to move away from KeyValue and instead use an Interface instead.  The Interface is named Cell.  rpc then has a notion of passing lots of Cells together in CellBlocks w/ the metadata on the block kept outside in an associated protobuf.&lt;/p&gt;

&lt;p&gt;Is HLogKey a protobuf now (Haven&apos;t looked at patch)?  If so, it is customizable?  If it is not pb, should it be?&lt;/p&gt;

&lt;p&gt;In general, this area could do w/ work for sure to remove duplication, etc.  Good on you Sergey.&lt;/p&gt;

&lt;p&gt;I am still looking for my high level outline on this project with goal, and how you are going about it.  I look at rb and it points here which has stuff distributed across multiple comments coming and going; hard to follow.&lt;/p&gt;</comment>
                            <comment id="13634435" author="sershe" created="Wed, 17 Apr 2013 21:00:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;Look in IPCUtils in the ipc package. See how it is used. We should figure out what is tough grokking Cell and CellBlock since if it is hard for you, it is going to be really hard for everyone else. Basically, we want to move away from KeyValue and instead use an Interface instead. The Interface is named Cell. rpc then has a notion of passing lots of Cells together in CellBlocks w/ the metadata on the block kept outside in an associated protobuf.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hmm, nm, I was looking at it wrong. It seems to be straightforward. The usage of cells for both request and response is not very obvious &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
It does seem to result in extra copy though, when you build the cellblock, which is something we want to avoid for WAL path. Why is cell block ByteBuffer?&lt;br/&gt;
Currently the patch does similar thing, minus the fancy stuff adb the copy - write an optional protobuf field with number at the end of HLogKey (number of KVs, not size, so we don&apos;t need to serialize KVs in advance), then KVs directly to output stream.&lt;br/&gt;
We can add encoder and stuff there. It would require, aside from the task itself, adding a way to build cellblock directly into output without copy (and getting count from cellscanner in advance?), as well as redoing the way compression is currently done for HLog.Entry in general (moving it into compressor).&lt;br/&gt;
Should converting WAL to cells be separate JIRA? The format would be binary compatible, or nearly so.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Is HLogKey a protobuf now (Haven&apos;t looked at patch)? If so, it is customizable? If it is not pb, should it be?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is pb.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I am still looking for my high level outline on this project with goal, and how you are going about it. I look at rb and it points here which has stuff distributed across multiple comments coming and going; hard to follow.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Here&apos;s the summary of the v0 patch.&lt;/p&gt;

&lt;h3&gt;&lt;a name=&quot;Currentstate&quot;&gt;&lt;/a&gt;Current state&lt;/h3&gt;
&lt;p&gt;The WAL currently is a Hadoop sequence file with key being HLogKey, and value WALEdit, both writables. Hadoop sequence file contains some magic prefix, followed by metadata dictionary, and then alternating key and value writables, prefixed by sizes.&lt;br/&gt;
HLogKey contains table name, encoded region name, seqId, write time, and cluster ID for replication (only set in non-default, i.e. non original, clusters).&lt;br/&gt;
WALEdit contains KVs and replication scopes. The existing peculiarities in HLogKey and WALEdit format make it hard or impossible to make changes to them.&lt;br/&gt;
The sequence file metadata contains the indication of whether the file has compression. Compression uses dictionary encoding for table names, region names in HLogKey, as well as rows, families and qualifiers in in KVs.&lt;/p&gt;
&lt;h3&gt;&lt;a name=&quot;Goals&quot;&gt;&lt;/a&gt;Goals&lt;/h3&gt;
&lt;p&gt;Make WAL extensible without sacrificing too much perf.&lt;/p&gt;
&lt;h3&gt;&lt;a name=&quot;NewWALformat&quot;&gt;&lt;/a&gt;New WAL format&lt;/h3&gt;
&lt;p&gt;New WAL format is logically similar to old WAL format. It starts with 4-byte magic that allows us to tell the old and new file apart.&lt;br/&gt;
That is followed by extensible PB WALHeader (file metadata), written using writeDelimited. It currently contains the flag indicating whether the file has compression.&lt;br/&gt;
After that, pairs of WAL record header (&quot;HLogKey&quot; for compat with existing code) and WALEdit (with KVs only), follow. Replication scopes have been moved to HLogKey from WALEdit, so the latter only has KVs.&lt;br/&gt;
WAL record header is an extensible PB structure. Compression for this is supported as before (byte arrays can contain dictionary encoding), with additional compression for replication scope column family names (using exactly the same approach).&lt;br/&gt;
&quot;WALEdit&quot; essentially becomes just KVs. One of the fields of WAL record header is the number of KVs that WALEdit contains. &lt;br/&gt;
To avoid memory copies on KVs that are potentially large, KVs are written directly into file without the intervening protobuf step (PB talks bytes only in the form of ByteString, which is immutable in such way that memory copy cannot be avoided (unless KV itself were backed by a single ByteString w/o need to serialize, which is not such a bad idea but is out of the scope of this JIRA)).&lt;br/&gt;
KVs are written using a previously existing mechanism - VInt with length, followed by the backing byte array (which technically has nothing to do with writables, it&apos;s just raw format &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;), or compressed format.&lt;br/&gt;
Reader reads the number of KVs indicated by WAL record header field, and assumes that these are followed by the next WAL record header.&lt;/p&gt;
&lt;h3&gt;&lt;a name=&quot;SupportinglegacyWALs.&quot;&gt;&lt;/a&gt;Supporting legacy WALs.&lt;/h3&gt;
&lt;p&gt;Writing legacy WALs is no longer supported. The writer class is moved to test code. HLogKey and WALEdit writable write methods are preserved for writing WAL in backward compat test, and output a warning.&lt;br/&gt;
Reading legacy WALs is supported thru HLogFactory::createReader. This method opens the stream and tries to read PB magic. If PB magic is present, new PB reader is returned; if it&apos;s not, it falls back to old SequenceFile-based reader.&lt;br/&gt;
Both readers derive from a common class that contains some shared functionality and interface (e.g. ::hasCompression()).&lt;/p&gt;
&lt;h3&gt;&lt;a name=&quot;Futureimprovement.&quot;&gt;&lt;/a&gt;Future improvement.&lt;/h3&gt;
&lt;p&gt;Ideally, given that they are used together for all practical purposes, we want to get rid of HLogKey and WALEdit (except for backward compat-related usage) and move to the notion of WAL record as a single thing (HLog.Entry?). However refactoring that all over the place is out of the scope of this JIRA.&lt;/p&gt;
</comment>
                            <comment id="13634468" author="sershe" created="Wed, 17 Apr 2013 21:40:38 +0000"  >&lt;p&gt;1) Rebased.&lt;br/&gt;
2) Remove HLogKey configurability.&lt;br/&gt;
3) Re-added the config for output stream that I missed in v0.&lt;/p&gt;

&lt;p&gt;Summary above (with large headings &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)&lt;/p&gt;</comment>
                            <comment id="13634471" author="sershe" created="Wed, 17 Apr 2013 21:41:40 +0000"  >&lt;p&gt;Btw, r is here: &lt;a href=&quot;https://reviews.apache.org/r/10565/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/10565/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13634547" author="hadoopqa" created="Wed, 17 Apr 2013 22:43:10 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12579203/HBASE-7413-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12579203/HBASE-7413-v1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 26 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestHRegion&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionBusyWait&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5338//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13635968" author="sershe" created="Fri, 19 Apr 2013 02:28:26 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; any comment on my cell comment above? thanks&lt;/p&gt;</comment>
                            <comment id="13638450" author="sershe" created="Mon, 22 Apr 2013 21:29:48 +0000"  >&lt;p&gt;Tiny change - restore the old overwrite behavior, some unit test would fail rarely. The  tests that failed above pass locally (at least, after this change). I will run HLog perf evaluation shortly&lt;/p&gt;</comment>
                            <comment id="13638525" author="hadoopqa" created="Mon, 22 Apr 2013 22:34:20 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12579907/HBASE-7413-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12579907/HBASE-7413-v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 26 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5385//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13638571" author="stack" created="Mon, 22 Apr 2013 23:39:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;The usage of cells for both request and response is not very obvious&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why boss?  We&apos;d send Cells but return molecules?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It does seem to result in extra copy though, when you build the cellblock, which is something we want to avoid for WAL path. Why is cell block ByteBuffer?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Because we build the cell block in memory?  Yeah.  I don&apos;t see any way around it.  You have any suggestions? Hopefully w/ a good prefix encoding and maybe a compression (more copying?) it&apos;ll be worth the composition in memory before we put it on the wire.&lt;/p&gt;

&lt;p&gt;Cell block is a byte array.  Building it we need to use something that can grow, the BBOutputStream.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It would require, aside from the task itself, adding a way to build cellblock directly into output without copy (and getting count from cellscanner in advance?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not sure how to do the above.  Certain cellblock types could do this &amp;#8211; i.e. a write through of Cells &amp;#8211; but cellblocks that do prefix encoding will want to store up and flush at well defined junctures.  The count of Cells you should have before you start no?&lt;/p&gt;

&lt;p&gt;I was hoping we could go from rpc straight into the WAL with the cell blocks but this is a bit naive since we&apos;ll want cellblocks by region?&lt;/p&gt;

&lt;p&gt;If not enough Cells, probably no need to make a CellBlock.  If values area large &amp;#8211; &amp;gt; a couple of kilobytes &amp;#8211; probably worth compressing the WAL values.&lt;/p&gt;

&lt;p&gt;On the rest of the writeup, thanks for doing it.&lt;/p&gt;

&lt;p&gt;Here are some comments.&lt;/p&gt;

&lt;p&gt;Can you call it WALKey instead of HLogKey?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Replication scopes have been moved to HLogKey from WALEdit, so the latter only has KVs.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Excellent!  This I see as big improvement.&lt;/p&gt;

&lt;p&gt;Can you talk about Cells instead of KVs?  If going to all this bother, might as well go the whole hog and do Cell.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;VInt with length, followed by the backing byte array....&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Doing the above, I&apos;d argue, is only doing half of the job.  If we are going to convert WAL, lets got off KV and its current serialization.  Write the codec used into the WAL metadata and then write cellblocks (can do an implementation that writes straight to the WAL &amp;#8211; wrap the WAL outputstream in a CellOutputStream?).&lt;/p&gt;

&lt;p&gt;Writeup is great.&lt;/p&gt;

&lt;p&gt;Let me look at the patch now.&lt;/p&gt;


</comment>
                            <comment id="13639725" author="sershe" created="Tue, 23 Apr 2013 22:29:03 +0000"  >&lt;p&gt;Some responses.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Because we build the cell block in memory? Yeah. I don&apos;t see any way around it. You have any suggestions? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is where my lack of understanding kicks in &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
If CellBlock is only a mechanism to write this stuff to RPC, then why do we need to construct it in memory. We can just dump it into some stream.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Hopefully w/ a good prefix encoding and maybe a compression (more copying?) it&apos;ll be worth the composition in memory before we put it on the wire.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We can put these on the wire directly too, though.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Not sure how to do the above. Certain cellblock types could do this &#8211; i.e. a write through of Cells &#8211; but cellblocks that do prefix encoding will want to store up and flush at well defined junctures. The count of Cells you should have before you start no?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The count, yes. For the certain types, perhaps cellblock should be cellsink, and it can do whatever internally - construct in memory, write to stream, etc.?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If not enough Cells, probably no need to make a CellBlock. If values area large &#8211; &amp;gt; a couple of kilobytes &#8211; probably worth compressing the WAL values.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That will depend on what operations client performs. WAL currently is already compressed using dictionary compression (if enabled).&lt;/p&gt;</comment>
                            <comment id="13639729" author="sershe" created="Tue, 23 Apr 2013 22:31:47 +0000"  >&lt;p&gt;Btw, there&apos;s package private newCodedOutput method on ByteString which allows you to create a stream to write to w/a fixed size, and create a bytestring without copies. Caveat: size has to be known in advance, so applicability may be rather limited... And, we&apos;d have to call package-private method. We can also wrap ByteString and rip a ctor out, judging from forum responses from Google PB people the limitation is there to make sure ByteString is immutable, and that is only there for logical reasons, to prevent people from doing stupid things. So we can just do it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Granted, it would be an ugly hacky thing to do.&lt;/p&gt;</comment>
                            <comment id="13641311" author="sershe" created="Thu, 25 Apr 2013 02:18:04 +0000"  >&lt;p&gt;cells and r feedback&lt;/p&gt;</comment>
                            <comment id="13641369" author="hadoopqa" created="Thu, 25 Apr 2013 03:42:49 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12580451/HBASE-7413-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12580451/HBASE-7413-v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 26 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the trunk&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5439//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13642008" author="sershe" created="Thu, 25 Apr 2013 17:53:04 +0000"  >&lt;p&gt;Btw, this patch shouldn&apos;t include both WAL and HLog protos&lt;/p&gt;</comment>
                            <comment id="13642134" author="stack" created="Thu, 25 Apr 2013 19:59:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;If CellBlock is only a mechanism to write this stuff to RPC, then why do we need to construct it in memory. We can just dump it into some stream.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;An implementation could do that yeah.  Other implementations will want to do encoding or compression and will need to run with buffers to store up intermediary forms in between flushes.&lt;/p&gt;

&lt;p&gt;Over in RPC, our RPC as is prefixes all messages with a total length.  While this constraint is in place, we can only know the cellblock size after its creation.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We can put these on the wire directly too, though.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Writing WAL, yeah (unless you need to know size in advance), on the wire, not currently (After this refactor of rpc is done, the next refactor should be to do chunking/stream.. undo the need of the prefatory length).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The count, yes. For the certain types, perhaps cellblock should be cellsink, and it can do whatever internally - construct in memory, write to stream, etc.?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is it not now?  Or, is there something we need to do to make it a &quot;CellSink&quot;?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;That will depend on what operations client performs. WAL currently is already compressed using dictionary compression (if enabled).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not the values though?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;newCodedOutput&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We could, yeah, or not put data into pb at all (which is what rpc is trying to do)&lt;/p&gt;</comment>
                            <comment id="13642167" author="sershe" created="Thu, 25 Apr 2013 20:20:55 +0000"  >&lt;p&gt;Instead of size one can store record count. That impedes partial recovery in case of corrupt buffer (i.e. with size you can just skip over size bytes to whatever is next), but is otherwise equivalent and known in advance (in most cases if the buffer is corrupt we don&apos;t know if we can trust the size, so the recovery benefit is also speculative).&lt;/p&gt;

&lt;p&gt;For CellSink, I&apos;d say the default implementation of  the whole compressor-encoder-... pipeline should just put bytes into OutputStream, and buildCellBlock can use the pipeline and supply its baos. So that the default mode of writing cells would be stream based.&lt;br/&gt;
I guess you could say it is now, via the encoder (and this is what I used in the new patch), but then cellblock would be 2nd class citizen, IPC specific &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;As for value compression, yeah, values in WAL are not compressed.&lt;/p&gt;</comment>
                            <comment id="13642287" author="stack" created="Thu, 25 Apr 2013 22:10:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;Instead of size one can store record count. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure.  Next iteration on rpc spec.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;...just put bytes into OutputStream&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ain&apos;t that just a particular codec implementation, one that just wraps an OutputStream?  buildCellBlock is IPC specific (it is in IPCUtil); it is not a default mode. I need to build the CellBlock before I send it so i can minimally get its total size (because of how rpc currently is).&lt;/p&gt;

&lt;p&gt;Thinking on it, CellBlock doesn&apos;t &apos;exist&apos;; what exists is a byte array of Cells with metadata saying what decoder to use undoing it... (maybe I should scope CellBlock to IPC only or be more careful using the term and instead talk of CellOutputStream, etc.).&lt;/p&gt;




</comment>
                            <comment id="13642406" author="sershe" created="Fri, 26 Apr 2013 00:09:19 +0000"  >&lt;p&gt;Questions from r that may be universally interesting:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;migration. Code to read old WALs is preserved (there&apos;s even a tests for that). Anything that is not explicitly recognized as new PB WAL (via magic at the start of the file) will be read using the old reader.&lt;/li&gt;
	&lt;li&gt;perf. I ran I highly unscientific local perf test some time ago via HLogPerformanceEvaluation and it showed on par/improved perf. I will try on HDFS sometime soon.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13642423" author="stack" created="Fri, 26 Apr 2013 00:20:54 +0000"  >&lt;p&gt;Answers are good enough for me.&lt;/p&gt;

&lt;p&gt;+1 on commit to trunk and 0.95.&lt;/p&gt;</comment>
                            <comment id="13642440" author="hadoopqa" created="Fri, 26 Apr 2013 00:43:00 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12580617/HBASE-7413-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12580617/HBASE-7413-v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 26 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the trunk&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestHBaseFsck&lt;br/&gt;
                  org.apache.hadoop.hbase.backup.TestHFileArchiving&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5460//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13642488" author="yuzhihong@gmail.com" created="Fri, 26 Apr 2013 01:36:31 +0000"  >&lt;p&gt;With patch v4, here were results from two iterations using HLogPerformanceEvaluation:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2013-04-26 09:29:42,669 INFO  [&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-4] wal.HLogPerformanceEvaluation(269): &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-4 took 0.628s 15923.566ops/s
2013-04-26 09:29:42,669 INFO  [main] wal.HLogPerformanceEvaluation(269): Summary: threads=1, iterations=10000 took 0.629s 15898.251ops/s

2013-04-26 09:31:31,586 INFO  [&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-4] wal.HLogPerformanceEvaluation(269): &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-4 took 0.620s 16129.032ops/s
2013-04-26 09:31:31,586 INFO  [main] wal.HLogPerformanceEvaluation(269): Summary: threads=1, iterations=10000 took 0.622s 16077.171ops/s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Without patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2013-04-26 09:25:18,799 INFO  [&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-4] wal.HLogPerformanceEvaluation(269): &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-4 took 0.587s 17035.775ops/s
2013-04-26 09:25:18,801 INFO  [main] wal.HLogPerformanceEvaluation(269): Summary: threads=1, iterations=10000 took 0.590s 16949.152ops/s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13642535" author="yuzhihong@gmail.com" created="Fri, 26 Apr 2013 02:56:07 +0000"  >&lt;p&gt;Using the following parameters:&lt;br/&gt;
-threads 3 -families 2 -keySize 320&lt;/p&gt;

&lt;p&gt;I don&apos;t see much difference.&lt;br/&gt;
Without patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2013-04-26 10:51:20,711 INFO  [main] wal.HLogPerformanceEvaluation(269): Summary: threads=3, iterations=10000 took 0.713s 42075.738ops/s
2013-04-26 10:51:54,847 INFO  [main] wal.HLogPerformanceEvaluation(269): Summary: threads=3, iterations=10000 took 0.729s 41152.266ops/s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;With patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2013-04-26 10:47:14,104 INFO  [main] wal.HLogPerformanceEvaluation(269): Summary: threads=3, iterations=10000 took 0.914s 32822.758ops/s

2013-04-26 10:48:21,347 INFO  [main] wal.HLogPerformanceEvaluation(269): Summary: threads=3, iterations=10000 took 0.707s 42432.813ops/s

2013-04-26 10:49:08,572 INFO  [main] wal.HLogPerformanceEvaluation(269): Summary: threads=3, iterations=10000 took 0.713s 42075.738ops/s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13642538" author="sershe" created="Fri, 26 Apr 2013 02:59:40 +0000"  >&lt;p&gt;I am running some on EC2 with 20 threads, and I see the same... 2 old and 2 new runs have finished, at 143 and 145 ops/sec for old, 142 and 143 for new.&lt;/p&gt;</comment>
                            <comment id="13643053" author="sershe" created="Fri, 26 Apr 2013 17:28:47 +0000"  >&lt;p&gt;Same pattern later. I will commit sometime between today and monday if there are no objections.&lt;/p&gt;</comment>
                            <comment id="13644681" author="sershe" created="Mon, 29 Apr 2013 17:47:58 +0000"  >&lt;p&gt;There&apos;s some massive conflict with adding custom records to WAL patch... I will resolve and update the patch later today.&lt;/p&gt;</comment>
                            <comment id="13644879" author="sershe" created="Mon, 29 Apr 2013 21:24:24 +0000"  >&lt;p&gt;Rebased the patch in simplest possible way (i.e. no custom refactoring).&lt;br/&gt;
Renamed the added generated.WAL to generated.WALProtos, as it was called in my original patch, according to existing conventions.&lt;/p&gt;</comment>
                            <comment id="13644981" author="hadoopqa" created="Mon, 29 Apr 2013 22:34:21 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12581040/HBASE-7413-v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12581040/HBASE-7413-v5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 29 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the trunk&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5490//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13645112" author="sershe" created="Tue, 30 Apr 2013 00:55:33 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; does your +1 still stand? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13645702" author="stack" created="Tue, 30 Apr 2013 16:36:04 +0000"  >&lt;p&gt;Tell me what was changed in new patch &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt; so I can do a quick review.  What about the IOE out of CellScanner#advance.  This patch works around it so I suppose it is not a blocker?&lt;/p&gt;</comment>
                            <comment id="13645758" author="sershe" created="Tue, 30 Apr 2013 17:36:24 +0000"  >&lt;p&gt;Main change is renaming WAL to WALProtos. Otherwise it&apos;s basically a rebase&lt;/p&gt;</comment>
                            <comment id="13645760" author="sershe" created="Tue, 30 Apr 2013 17:37:18 +0000"  >&lt;p&gt;The exception - no, not critical for this patch, if you know where to expect RuntimeException you can work around it.&lt;br/&gt;
But I&apos;d say it&apos;s critical for converting everything to cells, because workaround is not pretty&lt;/p&gt;</comment>
                            <comment id="13645779" author="stack" created="Tue, 30 Apr 2013 17:53:42 +0000"  >&lt;p&gt;+1 on commit&lt;/p&gt;</comment>
                            <comment id="13646325" author="hudson" created="Wed, 1 May 2013 02:53:40 +0000"  >&lt;p&gt;Integrated in hbase-0.95 #170 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/170/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/170/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7413&quot; title=&quot;Convert WAL to pb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7413&quot;&gt;&lt;del&gt;HBASE-7413&lt;/del&gt;&lt;/a&gt; Convert WAL to pb (Revision 1477762)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
sershe : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/java/org/apache/hadoop/hbase/codec/KeyValueCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/AdminProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/HBaseProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/WAL.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/WALProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/protobuf/Admin.proto&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/protobuf/WAL.proto&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/protobuf/hbase.proto&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogKey.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/KeyValueCompression.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ReaderBase.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCellCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/InstrumentedSequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALActionsListener.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13646345" author="hudson" created="Wed, 1 May 2013 03:37:14 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #4088 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4088/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4088/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7413&quot; title=&quot;Convert WAL to pb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7413&quot;&gt;&lt;del&gt;HBASE-7413&lt;/del&gt;&lt;/a&gt; Convert WAL to pb (Revision 1477761)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
sershe : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/codec/KeyValueCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/AdminProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/HBaseProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/WAL.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/WALProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/Admin.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/WAL.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/hbase.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogKey.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/KeyValueCompression.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ReaderBase.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCellCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/InstrumentedSequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALActionsListener.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13646386" author="hudson" created="Wed, 1 May 2013 05:10:12 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #86 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/86/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/86/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7413&quot; title=&quot;Convert WAL to pb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7413&quot;&gt;&lt;del&gt;HBASE-7413&lt;/del&gt;&lt;/a&gt; Convert WAL to pb (Revision 1477762)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
sershe : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/java/org/apache/hadoop/hbase/codec/KeyValueCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/AdminProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/HBaseProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/WAL.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/WALProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/protobuf/Admin.proto&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/protobuf/WAL.proto&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/protobuf/hbase.proto&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogKey.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/KeyValueCompression.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ReaderBase.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCellCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/InstrumentedSequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALActionsListener.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13646416" author="hudson" created="Wed, 1 May 2013 06:31:32 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #516 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/516/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/516/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7413&quot; title=&quot;Convert WAL to pb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7413&quot;&gt;&lt;del&gt;HBASE-7413&lt;/del&gt;&lt;/a&gt; Convert WAL to pb (Revision 1477761)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
sershe : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/codec/KeyValueCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/AdminProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/HBaseProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/WAL.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/WALProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/Admin.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/WAL.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/hbase.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogKey.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/KeyValueCompression.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ReaderBase.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCellCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/InstrumentedSequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALActionsListener.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13646761" author="sershe" created="Wed, 1 May 2013 17:55:37 +0000"  >&lt;p&gt;committed &lt;/p&gt;</comment>
                            <comment id="13649967" author="enis" created="Mon, 6 May 2013 18:39:48 +0000"  >&lt;p&gt;Excellent work Sergey. Logged &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8497&quot; title=&quot;Protobuf WAL also needs a trailer &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8497&quot;&gt;&lt;del&gt;HBASE-8497&lt;/del&gt;&lt;/a&gt; for a trailer. &lt;/p&gt;</comment>
                            <comment id="13663667" author="jesse_yates" created="Wed, 22 May 2013 01:37:23 +0000"  >&lt;p&gt;How do people (e.g. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;) feel about backporting the WALCellCodec stuff to 0.94? &lt;/p&gt;

&lt;p&gt;I realize that Cells are not in 0.94, but I&apos;d really like to not have to reinvent the wheel in terms of an HLog.Writer/Reader (and also the underlying SequenceFileWriter/Reader) when wanting to write custom KVs to the WAL. This wouldn&apos;t be a functional change to the way WALs are written for 0.94, just adding a pluggable point for how we are serializing the WALEdit/HLog.Entry.&lt;/p&gt;

&lt;p&gt;Working on a patch to enable the above for 0.94 I basically got the same (albeit less expansive, as it had to cover far fewer cases, no pb-ing, etc) architecture as what seems to have been done here with the codec stuff. Only difference would be having a pluggable point for the WALCellCodec.&lt;/p&gt;

&lt;p&gt;If people aren&apos;t against it, I can work up a patch; I don&apos;t think it would be much more than a couple small changes to the current writer/reader and WALEdit (in addition to the general Codec stuff, which would just delegate to the key-value). Thoughts?&lt;/p&gt;</comment>
                            <comment id="13664284" author="lhofhansl" created="Wed, 22 May 2013 17:28:08 +0000"  >&lt;p&gt;Jesse and I looked at the portions that would need to be &quot;back ported&quot;.&lt;/p&gt;

&lt;p&gt;It is really just moving some code around into a new codec class. That seems fine to me.&lt;br/&gt;
Put up a patch, Jesse &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13668806" author="jesse_yates" created="Tue, 28 May 2013 23:28:22 +0000"  >&lt;p&gt;Linking to issue for backporting to 0.94 (rather than cluttering this jira more).&lt;/p&gt;</comment>
                            <comment id="13676641" author="hudson" created="Thu, 6 Jun 2013 03:31:38 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #161 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/161/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/161/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8636&quot; title=&quot;Backport KeyValue Codec to 0.94 (HBASE-7413)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8636&quot;&gt;&lt;del&gt;HBASE-8636&lt;/del&gt;&lt;/a&gt;: Backport KeyValue Codec to 0.94 (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7413&quot; title=&quot;Convert WAL to pb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7413&quot;&gt;&lt;del&gt;HBASE-7413&lt;/del&gt;&lt;/a&gt;) (Revision 1490079)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
jyates : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/BaseDecoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/BaseEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/Codec.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/CodecException.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/Decoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/Encoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/KeyValueCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/KeyValueCompression.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEditCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13676682" author="hudson" created="Thu, 6 Jun 2013 04:18:15 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #1007 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/1007/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/1007/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8636&quot; title=&quot;Backport KeyValue Codec to 0.94 (HBASE-7413)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8636&quot;&gt;&lt;del&gt;HBASE-8636&lt;/del&gt;&lt;/a&gt;: Backport KeyValue Codec to 0.94 (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7413&quot; title=&quot;Convert WAL to pb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7413&quot;&gt;&lt;del&gt;HBASE-7413&lt;/del&gt;&lt;/a&gt;) (Revision 1490079)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
jyates : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/BaseDecoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/BaseEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/Codec.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/CodecException.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/Decoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/Encoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/codec/KeyValueCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/KeyValueCompression.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEditCodec.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12645303">HBASE-8457</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12644513">HBASE-8430</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12649815">HBASE-8636</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12504342">HBASE-3787</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12579082" name="HBASE-7413-v0.patch" size="326093" author="sershe" created="Wed, 17 Apr 2013 03:06:25 +0000"/>
                            <attachment id="12579203" name="HBASE-7413-v1.patch" size="326622" author="sershe" created="Wed, 17 Apr 2013 21:40:38 +0000"/>
                            <attachment id="12579907" name="HBASE-7413-v2.patch" size="326621" author="sershe" created="Mon, 22 Apr 2013 21:29:48 +0000"/>
                            <attachment id="12580451" name="HBASE-7413-v3.patch" size="365033" author="sershe" created="Thu, 25 Apr 2013 02:18:04 +0000"/>
                            <attachment id="12580617" name="HBASE-7413-v4.patch" size="365019" author="sershe" created="Thu, 25 Apr 2013 23:37:23 +0000"/>
                            <attachment id="12581040" name="HBASE-7413-v5.patch" size="444237" author="sershe" created="Mon, 29 Apr 2013 21:24:24 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 12 Apr 2013 21:06:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>301432</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 28 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i16skf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>247760</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>