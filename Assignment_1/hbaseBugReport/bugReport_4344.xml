<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:18:05 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4344/HBASE-4344.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4344] Persist memstoreTS to disk</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4344</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Atomicity can be achieved in two ways &amp;#8211; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; by using  a multiversion concurrency system (MVCC), or (ii) by ensuring that &quot;new&quot; writes do not complete, until the &quot;old&quot; reads complete.&lt;/p&gt;

&lt;p&gt;Currently, Memstore uses something along the lines of MVCC (called RWCC for read-write-consistency-control). But, this mechanism is not incorporated for the key-values written to the disk, as they do not include the memstore TS.&lt;/p&gt;

&lt;p&gt;Let us make the two approaches be similar, by persisting the memstoreTS along with the key-value when it is written to the disk.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12521637">HBASE-4344</key>
            <summary>Persist memstoreTS to disk</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12469746">HBASE-2856</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="amitanand">Amitanand Aiyer</assignee>
                                    <reporter username="amitanand">Amitanand Aiyer</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 Sep 2011 18:07:31 +0000</created>
                <updated>Fri, 20 Nov 2015 11:55:32 +0000</updated>
                            <resolved>Thu, 17 Nov 2011 23:31:43 +0000</resolved>
                                                    <fixVersion>0.89.20100924</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13099186" author="amitanand" created="Wed, 7 Sep 2011 18:36:54 +0000"  >&lt;p&gt;There are three parts to the changes made here:&lt;/p&gt;

&lt;p&gt;The first one is in the write path, while writing the HFile (V2). We include the memstoreTS along with the other information already written during the KeyValue.&lt;/p&gt;

&lt;p&gt;We maintain and append to the file info the maximum memstoreTS found among all the key-values written to the disk. The presence of this information in the file info represents the fact that the Key-values written to the HFile is in the new format that includes the memstoreTS.&lt;/p&gt;

&lt;p&gt;Part 2: The reader is modified accordingly to see if the file info suggests the presence of the memstoreTS or not. If it does, then we also read the memstoreTS while preparing the KeyValues in the reader.&lt;/p&gt;

&lt;p&gt;Part 3: On Region open/initialize, we need to ensure that the RWCC is initialized with a value bigger than the max of any value found in the storeFiles. this is necessary to ensure that the writes in the storefiles are seen by future reads.&lt;/p&gt;</comment>
                            <comment id="13099244" author="stack" created="Wed, 7 Sep 2011 19:27:02 +0000"  >&lt;p&gt;Nice work Amit.&lt;/p&gt;

&lt;p&gt;So, you&apos;d just prepend the memstore to the front of the KV that is in hfile?  Is the reason you put it here rather than integrate it better by inserting, say, after the current version/timestamp because you are trying to minimize changes?&lt;/p&gt;

&lt;p&gt;Hmm... I see.  You have hfile decorate the KV bytes it picks from the file with the memstoreTS found in the metadata for hfile.&lt;/p&gt;

&lt;p&gt;Its kinda ugly the fact that hfile knows about KV internals but its not your fault this is the case &amp;#8211; it has always been so.  Your addition here making the KV from bytes plus the metainfo that has the memstoreTs requires that hfile know about KV since its doing this merge of data from two sources (hfile data and hfile metadata).&lt;/p&gt;

&lt;p&gt;Looks like you have to much logging going on.&lt;/p&gt;

&lt;p&gt;Why &apos;+      long maxMemstoreTS = -1;&apos;?  Could do with a comment.&lt;/p&gt;

&lt;p&gt;This is good &apos;+     rwcc.initialize(maxMemstoreTS + 1);&apos;&lt;/p&gt;

&lt;p&gt;You have a note to yourself:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    /* Amit: Move &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; into the HFileReaderV2
+     * 
+     */
+    b = metadataMap.get(HFileWriterV2.MAX_MEMSTORE_KEY);
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (b != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.maxMemstoreTS = Bytes.toLong(b);
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Remove the commented out line:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-comment&quot;&gt;//&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValue(kv.getBuffer(), kv.getOffset(), kv.getLength());&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What you did w/ clone is improvement in line above.&lt;/p&gt;

&lt;p&gt;So, this patch is not the prettiest I&apos;ve seen but i think it could grow on me.  You have done the difficult task of getting the memstoreTS into the filesystem BUT WITHOUT REDOING KV so change is minimally invasive.  I&apos;m in favor of this patch.  A more radical redo of KV that includes the memstoreTS can happen later.&lt;/p&gt;

&lt;p&gt;Good stuff Amit.&lt;/p&gt;</comment>
                            <comment id="13099311" author="yuzhihong@gmail.com" created="Wed, 7 Sep 2011 21:04:38 +0000"  >&lt;p&gt;In HFileReaderV2.java, the following code isn&apos;t used:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; keyValueLenSizeWithoutMemstoreTS() {
+  &lt;span class=&quot;code-comment&quot;&gt;//KEY_VALUE_LEN_SIZE
&lt;/span&gt;+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.includeMemstoreTS)
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 2 * Bytes.SIZEOF_INT + Bytes.SIZEOF_LONG;
+    &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 2 * Bytes.SIZEOF_INT;
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13104136" author="stack" created="Wed, 14 Sep 2011 01:15:12 +0000"  >&lt;p&gt;@Amit you want to revise your patch?  We&apos;re trying to branch 0.92 this friday.  Would be nice to include this fix.&lt;/p&gt;</comment>
                            <comment id="13109187" author="yuzhihong@gmail.com" created="Wed, 21 Sep 2011 01:34:58 +0000"  >&lt;p&gt;Patch version 2 is rebased for TRUNK.&lt;br/&gt;
Running test suite now.&lt;/p&gt;</comment>
                            <comment id="13109228" author="yuzhihong@gmail.com" created="Wed, 21 Sep 2011 02:39:22 +0000"  >&lt;p&gt;Got a few test failures so far:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
testHFileFormatV2(org.apache.hadoop.hbase.io.hfile.TestHFileWriterV2)  Time elapsed: 0.704 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
java.lang.AssertionError: 
        at org.junit.Assert.fail(Assert.java:91)
        at org.junit.Assert.assertTrue(Assert.java:43)
        at org.junit.Assert.assertTrue(Assert.java:54)
        at org.apache.hadoop.hbase.io.hfile.TestHFileWriterV2.testHFileFormatV2(TestHFileWriterV2.java:141)

testCacheOnWrite[5](org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite)  Time elapsed: 0.741 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
org.junit.ComparisonFailure: expected:&amp;lt;{DATA=1[367, LEAF_INDEX=172, BLOOM_CHUNK=9, INTERMEDIATE_INDEX=24]}&amp;gt; but was:&amp;lt;{DATA=1[459, LEAF_INDEX=183, BLOOM_CHUNK=9, INTERMEDIATE_INDEX=25]}&amp;gt;
        at org.junit.Assert.assertEquals(Assert.java:123)
        at org.junit.Assert.assertEquals(Assert.java:145)
        at org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite.readStoreFile(TestCacheOnWrite.java:180)
        at org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite.testCacheOnWrite(TestCacheOnWrite.java:150)

testCacheOnWrite[0](org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite)  Time elapsed: 1.129 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
org.junit.ComparisonFailure: expected:&amp;lt;{DATA=1[367, LEAF_INDEX=172, BLOOM_CHUNK=9, INTERMEDIATE_INDEX=24]}&amp;gt; but was:&amp;lt;{DATA=1[459, LEAF_INDEX=183, BLOOM_CHUNK=9, INTERMEDIATE_INDEX=25]}&amp;gt;
        at org.junit.Assert.assertEquals(Assert.java:123)
        at org.junit.Assert.assertEquals(Assert.java:145)
        at org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite.readStoreFile(TestCacheOnWrite.java:180)
        at org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite.testCacheOnWrite(TestCacheOnWrite.java:150)

testSeekBefore(org.apache.hadoop.hbase.io.hfile.TestSeekTo)  Time elapsed: 0.232 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
java.lang.IllegalStateException: blockSeek with seekBefore at the first key of the block: key=\x00\x01c\x06familyqualifier\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x04, blockOffset=0, onDiskSize=171
        at org.apache.hadoop.hbase.io.hfile.HFileReaderV2$ScannerV2.blockSeek(HFileReaderV2.java:647)
        at org.apache.hadoop.hbase.io.hfile.HFileReaderV2$ScannerV2.loadBlockAndSeekToKey(HFileReaderV2.java:577)
        at org.apache.hadoop.hbase.io.hfile.HFileReaderV2$ScannerV2.seekBefore(HFileReaderV2.java:732)
        at org.apache.hadoop.hbase.io.hfile.HFileReaderV2$ScannerV2.seekBefore(HFileReaderV2.java:687)
        at org.apache.hadoop.hbase.io.hfile.TestSeekTo.testSeekBefore(TestSeekTo.java:70)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13109252" author="yuzhihong@gmail.com" created="Wed, 21 Sep 2011 04:15:07 +0000"  >&lt;p&gt;Two more failures:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
testCacheOnWriteEvictOnClose(org.apache.hadoop.hbase.regionserver.TestStoreFile)  Time elapsed: 2.932 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
junit.framework.AssertionFailedError: expected:&amp;lt;80&amp;gt; but was:&amp;lt;81&amp;gt;
        at junit.framework.Assert.fail(Assert.java:47)
        at junit.framework.Assert.failNotEquals(Assert.java:283)
        at junit.framework.Assert.assertEquals(Assert.java:64)
        at junit.framework.Assert.assertEquals(Assert.java:130)
        at junit.framework.Assert.assertEquals(Assert.java:136)
        at org.apache.hadoop.hbase.regionserver.TestStoreFile.testCacheOnWriteEvictOnClose(TestStoreFile.java:672)

testRollback(org.apache.hadoop.hbase.regionserver.TestSplitTransaction)  Time elapsed: 7.433 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
java.lang.RuntimeException: Already used &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; rwcc. Too late to initialize
        at org.apache.hadoop.hbase.regionserver.ReadWriteConsistencyControl.initialize(ReadWriteConsistencyControl.java:77)
        at org.apache.hadoop.hbase.regionserver.HRegion.initialize(HRegion.java:415)
        at org.apache.hadoop.hbase.regionserver.HRegion.initialize(HRegion.java:366)
        at org.apache.hadoop.hbase.regionserver.SplitTransaction.rollback(SplitTransaction.java:679)
        at org.apache.hadoop.hbase.regionserver.TestSplitTransaction.testRollback(TestSplitTransaction.java:234)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13109495" author="yuzhihong@gmail.com" created="Wed, 21 Sep 2011 13:32:57 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://reviews.apache.org/r/1997/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1997/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13109877" author="lhofhansl" created="Wed, 21 Sep 2011 21:17:26 +0000"  >&lt;p&gt;TestSeekTo fails because HFileReaderV2.ScannerV2.getFirstKeyInBlock(...) does not honor includeMemstoreTS. Needs to be checked like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; ByteBuffer getFirstKeyInBlock(HFileBlock curBlock) {
      ByteBuffer buffer = curBlock.getBufferWithoutHeader();
      &lt;span class=&quot;code-comment&quot;&gt;// It is safe to manipulate &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; buffer because we own the buffer object.
&lt;/span&gt;      buffer.rewind();
+     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (((HFileReaderV2)&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.reader).includeMemstoreTS()) {
+       buffer.getLong(); &lt;span class=&quot;code-comment&quot;&gt;// skip memstoreTS
&lt;/span&gt;+     }
      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; klen = buffer.getInt();
      buffer.getInt();
      ByteBuffer keyBuff = buffer.slice();
      keyBuff.limit(klen);
      keyBuff.rewind();
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; keyBuff;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13112178" author="lhofhansl" created="Wed, 21 Sep 2011 22:38:43 +0000"  >&lt;p&gt;He Ted&apos;s patch with all the nasty casting to HFileReaderV2 removed.&lt;/p&gt;</comment>
                            <comment id="13112179" author="lhofhansl" created="Wed, 21 Sep 2011 22:39:07 +0000"  >&lt;p&gt;&lt;b&gt;Here&lt;/b&gt; is Ted&apos;s...&lt;/p&gt;</comment>
                            <comment id="13112225" author="lhofhansl" created="Wed, 21 Sep 2011 23:29:15 +0000"  >&lt;p&gt;The problem with TestStoreFile.testCacheOnWriteEvictOnClose is that KeyValue.getLength() does not necessarily reflect its actual size on disk any longer. The fix turns out to simple:&lt;br/&gt;
In TestStoreFile.writeStoreFiele:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i=numKVs;i&amp;gt;0;i--) {
      KeyValue kv = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValue(b, b, b, i, b);
      kvs.add(kv);
-      totalSize += kv.getLength();
+      totalSize += kv.getLength()+Bytes.SIZEOF_LONG;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But it shows a kind of &quot;unpleasantness&quot; of this change.&lt;/p&gt;

&lt;p&gt;I am getting a bit weary about this change. If we cannot rely KeyValue.getLength() when it comes to storage, what other problems are we going to run into?&lt;/p&gt;</comment>
                            <comment id="13112274" author="yuzhihong@gmail.com" created="Thu, 22 Sep 2011 01:06:39 +0000"  >&lt;p&gt;This is due to KeyValue not remembering whether MemstoreTS is included.&lt;br/&gt;
One trick is to distinguish existence of MemstoreTS through a special value (e.g. -1).&lt;br/&gt;
Currently we have:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; value is 0, aka DNC
&lt;/span&gt;  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; memstoreTS = 0;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We can use -1 to distinguish the absence of MemstoreTS.&lt;br/&gt;
However, getMemstoreTS() would always return 0 if memstoreTS carries -1.&lt;/p&gt;

&lt;p&gt;TestStoreFile passes with the above trick.&lt;/p&gt;</comment>
                            <comment id="13112336" author="lhofhansl" created="Thu, 22 Sep 2011 05:20:30 +0000"  >&lt;p&gt;I like that better than my &quot;fix&quot;.&lt;br/&gt;
Do all tests pass now?&lt;/p&gt;</comment>
                            <comment id="13112338" author="yuzhihong@gmail.com" created="Thu, 22 Sep 2011 05:24:58 +0000"  >&lt;p&gt;TestSplitTransaction#testRollback still fails &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13112339" author="lhofhansl" created="Thu, 22 Sep 2011 05:30:59 +0000"  >&lt;p&gt;Hmm...&lt;/p&gt;

&lt;p&gt;And I guess this&apos;ll also have possible performance implications as now fewer KVs fit into a certain number of blocks.&lt;/p&gt;</comment>
                            <comment id="13112691" author="yuzhihong@gmail.com" created="Thu, 22 Sep 2011 16:32:52 +0000"  >&lt;p&gt;Patch v5.&lt;/p&gt;</comment>
                            <comment id="13112708" author="yuzhihong@gmail.com" created="Thu, 22 Sep 2011 16:48:10 +0000"  >&lt;p&gt;This is the error for testRollback based on patch v5:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
testRollback(org.apache.hadoop.hbase.regionserver.TestSplitTransaction)  Time elapsed: 1.166 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
java.lang.ArrayIndexOutOfBoundsException
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.arraycopy(Native Method)
        at org.apache.hadoop.hbase.regionserver.MemStore.maybeCloneWithAllocator(MemStore.java:246)
        at org.apache.hadoop.hbase.regionserver.MemStore.add(MemStore.java:213)
        at org.apache.hadoop.hbase.regionserver.Store.add(Store.java:312)
        at org.apache.hadoop.hbase.regionserver.HRegion.applyFamilyMapToMemstore(HRegion.java:2079)
        at org.apache.hadoop.hbase.regionserver.HRegion.put(HRegion.java:2041)
        at org.apache.hadoop.hbase.regionserver.HRegion.put(HRegion.java:1572)
        at org.apache.hadoop.hbase.regionserver.HRegion.put(HRegion.java:1521)
        at org.apache.hadoop.hbase.HBaseTestingUtility.loadRegion(HBaseTestingUtility.java:834)
        at org.apache.hadoop.hbase.regionserver.TestSplitTransaction.testRollback(TestSplitTransaction.java:213)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13112717" author="yuzhihong@gmail.com" created="Thu, 22 Sep 2011 17:07:04 +0000"  >&lt;p&gt;Patch v6 fixes ArrayIndexOutOfBoundsException mentioned above.&lt;br/&gt;
Still need to investigate &apos;Already used this rwcc. Too late to initialize&apos; issue.&lt;/p&gt;</comment>
                            <comment id="13112736" author="lhofhansl" created="Thu, 22 Sep 2011 17:36:27 +0000"  >&lt;p&gt;Hmm... See this code in SplitTransaction.java:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; CLOSED_PARENT_REGION:
        &lt;span class=&quot;code-comment&quot;&gt;// So, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; returns a seqid but &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we just closed and then reopened, we
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// should be ok. On close, we flushed using sequenceid obtained from
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// hosting regionserver so no need to propagate the sequenceid returned
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// out of initialize below up into regionserver as we normally &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt;.
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// TODO: Verify.
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.parent.initialize();
        &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is where it fails. Moving initialization of rwcc to HRegion.initialize rather then at construction time fixes this for me.&lt;/p&gt;</comment>
                            <comment id="13112739" author="lhofhansl" created="Thu, 22 Sep 2011 17:38:45 +0000"  >&lt;p&gt;It is also interesting to note that TestSplitTransaction finishes in 3-4s without this patch but takes &amp;gt; 30s with it!!&lt;/p&gt;</comment>
                            <comment id="13112747" author="lhofhansl" created="Thu, 22 Sep 2011 17:41:27 +0000"  >&lt;p&gt;It&apos;s probably all that extra logging, but need to make sure.&lt;/p&gt;</comment>
                            <comment id="13112882" author="yuzhihong@gmail.com" created="Thu, 22 Sep 2011 20:33:59 +0000"  >&lt;p&gt;Patch version 7 passes all unit tests.&lt;br/&gt;
I used Lars&apos; patch for TestStoreFile.&lt;/p&gt;</comment>
                            <comment id="13113141" author="lhofhansl" created="Fri, 23 Sep 2011 03:47:24 +0000"  >&lt;p&gt;I ran TestSplitTransaction again with the patch but the various high volume LOG.debugs removed. It back to the original speed.&lt;/p&gt;

&lt;p&gt;So IMHO, we cannot ship this with all the LOG.debug statements, because it&apos;d be so slow that nobody could switch on debug logging to diagnose a production problem.&lt;/p&gt;</comment>
                            <comment id="13113387" author="amitanand" created="Fri, 23 Sep 2011 12:53:01 +0000"  >&lt;p&gt;@stack: Yes. I agree, this is not really cleaned up. Wanted to put it out as v1 to get feedback on the approach.&lt;/p&gt;

&lt;p&gt;One of the reasons why I went with adding the memstoreTS to HFile was indeed to minimize changes. Although, after&lt;br/&gt;
getting my feet wet, I did also consider moving along the direction of modifying the byte buffer itself to include&lt;br/&gt;
the memstoreTS. &lt;/p&gt;

&lt;p&gt;I felt like this would be simpler. The way I like to see it, memstoreTS is some &quot;system level timestamp&quot; that is &lt;br/&gt;
somewhat transparant to the client/users. Wanted to keep it that way, as the key-values that are in memstore keep&lt;br/&gt;
the timestamp separate.&lt;/p&gt;

&lt;p&gt;I agree about the fact that we are exposing the key-value internals to the HFile writer/readers. Perhaps, we should&lt;br/&gt;
get rid of it. Will be happy to do that, as a separate diff, once we get the core issue fixed.&lt;/p&gt;

&lt;p&gt;also working on a diff to see if we can use the hlog sequence id as the memstoreTS ... will put it out separately.&lt;/p&gt;</comment>
                            <comment id="13113440" author="yuzhihong@gmail.com" created="Fri, 23 Sep 2011 13:51:47 +0000"  >&lt;p&gt;Patch v8 contains a slightly different version of patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4345&quot; title=&quot;Ensure that Scanners that read from the storefiles respect MVCC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4345&quot;&gt;&lt;del&gt;HBASE-4345&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
Patch v9 pulls in the changes from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4345&quot; title=&quot;Ensure that Scanners that read from the storefiles respect MVCC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4345&quot;&gt;&lt;del&gt;HBASE-4345&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13113640" author="stack" created="Fri, 23 Sep 2011 18:31:26 +0000"  >&lt;p&gt;Patch v9 looks good to me (Ted whats difference between v8 and v9?)&lt;/p&gt;

&lt;p&gt;@Amitanand Aiyer are you good w/ v9?&lt;/p&gt;

&lt;p&gt;We should open new issues to clean hfile of kv pollution.&lt;/p&gt;

&lt;p&gt;We should reenable BROKE_TODO_FIX_TestAcidGuarantees, probably as part of this patch going in and make sure it passes. &lt;/p&gt;</comment>
                            <comment id="13113659" author="amitanand" created="Fri, 23 Sep 2011 18:54:10 +0000"  >&lt;p&gt;explictly add KEY_VALUE_VERSION to the file info to keep track of weather we are using the new format in the HFile or not.&lt;/p&gt;

&lt;p&gt;We can bump this up, if we later want to change the format in which the KV is stored. Say to accomidate a variable length encoding, or other optimisation/approaches.&lt;/p&gt;</comment>
                            <comment id="13113763" author="yuzhihong@gmail.com" created="Fri, 23 Sep 2011 21:01:35 +0000"  >&lt;p&gt;@Stack:&lt;br/&gt;
See my comment @ 23/Sep/11 13:51&lt;br/&gt;
Version 9 combines the changes from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4345&quot; title=&quot;Ensure that Scanners that read from the storefiles respect MVCC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4345&quot;&gt;&lt;del&gt;HBASE-4345&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13113766" author="yuzhihong@gmail.com" created="Fri, 23 Sep 2011 21:07:33 +0000"  >&lt;p&gt;@Amit:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    appendFileInfo(KEY_VALUE_VERSION, Bytes.toBytes(1));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think we should introduce a constant for the 1 above.&lt;/p&gt;</comment>
                            <comment id="13113797" author="yuzhihong@gmail.com" created="Fri, 23 Sep 2011 22:06:03 +0000"  >&lt;p&gt;It enables the tests from TestAcidGuarantees which pass.&lt;br/&gt;
I also introduced a constant, KEY_VALUE_VER_WITH_MEMSTORE, for my earlier comment.&lt;/p&gt;

&lt;p&gt;Will run through test suite once TRUNK build stabilizes.&lt;/p&gt;</comment>
                            <comment id="13113846" author="yuzhihong@gmail.com" created="Sat, 24 Sep 2011 00:43:49 +0000"  >&lt;p&gt;Based on a stable TRUNK tree, all tests passed, including TestAcidGuarantees.&lt;br/&gt;
More testing is planned before committing, possibly on Monday.&lt;/p&gt;</comment>
                            <comment id="13113854" author="lhofhansl" created="Sat, 24 Sep 2011 01:04:13 +0000"  >&lt;p&gt;+1&lt;br/&gt;
This is an important fix.&lt;br/&gt;
Nice team work on this one &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13114332" author="yuzhihong@gmail.com" created="Sun, 25 Sep 2011 19:11:27 +0000"  >&lt;p&gt;From Amit:&lt;br/&gt;
  Earlier, before this patch, the essential ACID violation was occuring because some updates&lt;br/&gt;
that are &lt;b&gt;newer&lt;/b&gt; than the Scan&apos;s read point got included into the return because flush+read&lt;br/&gt;
allowed them to be considered old.&lt;/p&gt;

&lt;p&gt; I don&apos;t see that problem anymore. &lt;/p&gt;

&lt;p&gt; The current violation for ACID semantics seems from the fact that some updates that &lt;b&gt;should&lt;/b&gt; be&lt;br/&gt;
included in the return (because the readPoint is further) are not being included. Looks like there&lt;br/&gt;
is some compactions going on, during the run, and I need to investigate to see if somehow the&lt;br/&gt;
updateReaders etc is not including a file that needs to be included.&lt;/p&gt;

&lt;p&gt;-------&lt;br/&gt;
So the patch is not ready for integration yet.&lt;/p&gt;</comment>
                            <comment id="13114397" author="lhofhansl" created="Sun, 25 Sep 2011 23:37:26 +0000"  >&lt;p&gt;Is there a reproducible test case for the new failure scenario?&lt;/p&gt;</comment>
                            <comment id="13114430" author="yuzhihong@gmail.com" created="Mon, 26 Sep 2011 01:34:32 +0000"  >&lt;p&gt;@Lars:&lt;br/&gt;
I encountered some test failures from TestAcidGuarantees#testMixedAtomicity&lt;/p&gt;
</comment>
                            <comment id="13115560" author="amitanand" created="Tue, 27 Sep 2011 15:13:25 +0000"  >&lt;p&gt;combine 4344-v11.txt with 4485-v4.txt&lt;/p&gt;

&lt;p&gt;Running the testsuite (in progress)&lt;/p&gt;</comment>
                            <comment id="13116684" author="stack" created="Wed, 28 Sep 2011 18:45:51 +0000"  >&lt;p&gt;Looking at v12.  Minor nits.  Can fix on commit.  Small question below.&lt;/p&gt;

&lt;p&gt;On commit we should just remove the below rather than comment them out:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-  @Ignore(&lt;span class=&quot;code-quote&quot;&gt;&quot;Currently not passing - see HBASE-2856&quot;&lt;/span&gt;)
+  &lt;span class=&quot;code-comment&quot;&gt;//@Ignore(&lt;span class=&quot;code-quote&quot;&gt;&quot;Currently not passing - see HBASE-2856&quot;&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looks like we usually just delete the &apos;@Ignore&apos;.&lt;/p&gt;

&lt;p&gt;In StoreScanner we do:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    matcher.ignoreNewerKVs();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Does this mean that we will always ignore kvs with newer readpoints?  If so, should we just strip this method altogether and the setting of boolean attribute?  Same for similar method out in hfile v2.&lt;/p&gt;

&lt;p&gt;Why should someone be able to do this?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setMaxMemstoreTS(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; maxMemstoreTS) {
+    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.maxMemstoreTS = maxMemstoreTS;
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Shouldn&apos;t we be getting this from looking at the kvs that come in when writing and then when reading, it comes up out of the hfile metadata?  A client should never be able to set it?&lt;/p&gt;

&lt;p&gt;This looks like it could be too much logging (I&apos;d think that around here we are already dumping out the file path):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 
+    LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;HFileReaderV2 trying to read from &quot;&lt;/span&gt; + path);
+    
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="13116698" author="yuzhihong@gmail.com" created="Wed, 28 Sep 2011 18:58:43 +0000"  >&lt;p&gt;Note: v12 isn&apos;t ready to be committed yet.&lt;br/&gt;
We&apos;re still trying to solve &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4485&quot; title=&quot;Eliminate window of missing Data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4485&quot;&gt;&lt;del&gt;HBASE-4485&lt;/del&gt;&lt;/a&gt; without introducing deadlock.&lt;/p&gt;</comment>
                            <comment id="13118919" author="ryanobjc" created="Sat, 1 Oct 2011 22:07:54 +0000"  >&lt;p&gt;what happened to the solution to TestAcidGuarantee w/o adding extra stuff to the disk format?&lt;/p&gt;</comment>
                            <comment id="13118928" author="stack" created="Sat, 1 Oct 2011 22:57:22 +0000"  >&lt;p&gt;@Ryan Thats what this does.  It only adds to hfile meta info, not to each key.&lt;/p&gt;</comment>
                            <comment id="13141807" author="nspiegelberg" created="Wed, 2 Nov 2011 00:45:25 +0000"  >&lt;p&gt;What is the problem holding v12 from commit?  I think we can check in this JIRA and wait to commit &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4485&quot; title=&quot;Eliminate window of missing Data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4485&quot;&gt;&lt;del&gt;HBASE-4485&lt;/del&gt;&lt;/a&gt; until the deadlock issue is solved.  In general, can we get as many of the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt; JIRAs committed while not introducing any regression?  I don&apos;t think we need to solve the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt; issue completely until we can commit anything.  Forward progress without steps back is sufficient.  Having this large array of uncommitted patch files is very unwieldy for patch management.&lt;/p&gt;</comment>
                            <comment id="13141815" author="yuzhihong@gmail.com" created="Wed, 2 Nov 2011 00:55:16 +0000"  >&lt;p&gt;I agree we should get the patch into TRUNK.&lt;/p&gt;

&lt;p&gt;@Amit:&lt;br/&gt;
Can you add variable-length-for-compactions into patch v12 and submit for PreCommit build ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13141909" author="stack" created="Wed, 2 Nov 2011 04:16:53 +0000"  >&lt;p&gt;+1 on committing v12 to TRUNK.&lt;/p&gt;</comment>
                            <comment id="13152453" author="amitanand" created="Thu, 17 Nov 2011 23:31:43 +0000"  >&lt;p&gt;included in 2856-v6.txt&lt;/p&gt;</comment>
                            <comment id="15016508" author="lars_francke" created="Fri, 20 Nov 2015 11:55:32 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12496303" name="4344-v10.txt" size="29473" author="amitanand" created="Fri, 23 Sep 2011 18:54:10 +0000"/>
                            <attachment id="12496335" name="4344-v11.txt" size="31191" author="yuzhihong@gmail.com" created="Fri, 23 Sep 2011 22:35:49 +0000"/>
                            <attachment id="12496696" name="4344-v12.txt" size="39512" author="amitanand" created="Tue, 27 Sep 2011 15:13:25 +0000"/>
                            <attachment id="12495309" name="4344-v2.txt" size="21771" author="yuzhihong@gmail.com" created="Wed, 21 Sep 2011 01:34:57 +0000"/>
                            <attachment id="12496042" name="4344-v4.txt" size="31194" author="lhofhansl" created="Wed, 21 Sep 2011 22:38:43 +0000"/>
                            <attachment id="12496132" name="4344-v5.txt" size="31993" author="yuzhihong@gmail.com" created="Thu, 22 Sep 2011 16:32:52 +0000"/>
                            <attachment id="12496145" name="4344-v6.txt" size="32695" author="yuzhihong@gmail.com" created="Thu, 22 Sep 2011 17:09:46 +0000"/>
                            <attachment id="12496173" name="4344-v7.txt" size="31975" author="yuzhihong@gmail.com" created="Thu, 22 Sep 2011 20:33:59 +0000"/>
                            <attachment id="12496251" name="4344-v8.txt" size="30902" author="amitanand" created="Fri, 23 Sep 2011 10:44:24 +0000"/>
                            <attachment id="12496272" name="4344-v9.txt" size="31029" author="yuzhihong@gmail.com" created="Fri, 23 Sep 2011 13:51:47 +0000"/>
                            <attachment id="12493358" name="patch-2" size="27069" author="amitanand" created="Wed, 7 Sep 2011 18:36:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 7 Sep 2011 19:27:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3388</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hqiv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101559</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>