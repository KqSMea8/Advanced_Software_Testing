<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:14:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-16433/HBASE-16433.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-16433] Remove AsyncRpcChannel related stuffs</title>
                <link>https://issues.apache.org/jira/browse/HBASE-16433</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;AsyncRpcChannel can not be used by protobuf stub. We should implement the async logic along with the RpcChannel interface of protobuf.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12997826">HBASE-16433</key>
            <summary>Remove AsyncRpcChannel related stuffs</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12997824">HBASE-16432</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="Apache9">Duo Zhang</assignee>
                                    <reporter username="Apache9">Duo Zhang</reporter>
                        <labels>
                    </labels>
                <created>Wed, 17 Aug 2016 07:16:43 +0000</created>
                <updated>Tue, 30 Aug 2016 09:06:58 +0000</updated>
                            <resolved>Thu, 25 Aug 2016 00:56:59 +0000</resolved>
                                    <version>2.0.0</version>
                                    <fixVersion>2.0.0</fixVersion>
                                    <component>rpc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="15424177" author="apache9" created="Wed, 17 Aug 2016 09:10:30 +0000"  >&lt;p&gt;Remove createRpcChannel method in RpcClient. The createProtobufRpcChannel is renamed to createRpcChannel. For RpcClientImpl, now just throw an UnsupportedOperationException, will implement later without netty. And also remove the leaked netty API.&lt;/p&gt;</comment>
                            <comment id="15424345" author="hadoopqa" created="Wed, 17 Aug 2016 11:47:07 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/check.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 1 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; mvndep &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 11s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Maven dependency ordering for branch &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 53s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 56s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.7.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 48s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 33s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 47s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 2s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.7.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; mvndep &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 12s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Maven dependency ordering for patch &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 11s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 52s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 52s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 1s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 1s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 51s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 31s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 30m 28s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseprotoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 27s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 45s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 51s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 59s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 6s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbase-client in the patch passed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 93m 9s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbase-server in the patch passed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 29s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 148m 27s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-08-17 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12824112/HBASE-16433.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12824112/HBASE-16433.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16433&quot; title=&quot;Remove AsyncRpcChannel related stuffs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16433&quot;&gt;&lt;del&gt;HBASE-16433&lt;/del&gt;&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux 77d5351fef18 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / d5080e8 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.7.0_101 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Multi-JDK versions &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_101 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3127/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3127/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-client hbase-server U: . &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3127/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3127/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15425153" author="stack" created="Wed, 17 Aug 2016 18:45:02 +0000"  >&lt;p&gt;To be clear, you are undoing the AsyncRpcChannel because we should adhere to the protobuf generated nonblocking APIs when doing async and AsyncRpcChannel as-is short-circuiting skipping providing the callback?&lt;/p&gt;

&lt;p&gt;Patch also undoes the leaking of netty in our API.&lt;/p&gt;

&lt;p&gt;I skimmed through it. Patch looks good to me. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jurmous&quot; class=&quot;user-hover&quot; rel=&quot;jurmous&quot;&gt;Jurriaan Mous&lt;/a&gt; &amp;#8211; any input sir? It looks like this patch preserves the work done so far making it better contained.&lt;/p&gt;

&lt;p&gt;+1 Patch looks good and moves this async forward another step. Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;&lt;/p&gt;


</comment>
                            <comment id="15425297" author="jurmous" created="Wed, 17 Aug 2016 20:25:03 +0000"  >&lt;p&gt;I implemented two ways to do the Async Calls: createProtobufRpcChannel which handles everything the protobuf way with RpcChannel and createRpcChannel which exposes a bit of the Netty internals. I wanted to have this second route so the Table impl doesn&apos;t need to do everything with wrapping in cumbersome RpcController and RpcCallback which are not developer friendly for async communication. You can see some hacking around the RpcChannel barrier with the PayloadCarryingRpcController to just pass on variables to the Rpc layers. I wanted something simpler for the Async client with a more direct connection to what is happening in the Rpc layer. &lt;/p&gt;

&lt;p&gt;I am agreeing that leaking Netty is not the way forward and I want to replace that with java native CompletableFuture which is Java 8 only. So we can pass that on from the lower RPC layers without any hacking around the Protobuf RPC layers. But it is being hold up by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15624&quot; title=&quot;Move master branch/hbase-2.0.0 to jdk-8 only&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15624&quot;&gt;&lt;del&gt;HBASE-15624&lt;/del&gt;&lt;/a&gt; and that was hold back by the just fixed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15882&quot; title=&quot;Upgrade to yetus precommit 0.3.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15882&quot;&gt;&lt;del&gt;HBASE-15882&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So my vote would be to leave the more direct way of communicating with the RPC layers with AsyncRpcChannel in but to base it on CompletableFuture as is in patch v1 in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15978&quot; title=&quot;Netty API leaked into public API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15978&quot;&gt;&lt;del&gt;HBASE-15978&lt;/del&gt;&lt;/a&gt;. Then it would also be easier to land the AsyncTableImpl so it is more visible why the AsyncRpcChannel is there.&lt;/p&gt;</comment>
                            <comment id="15425354" author="stack" created="Wed, 17 Aug 2016 20:49:04 +0000"  >&lt;p&gt;PayloadCarryingRpcController is indeed a pain (Weird sidenote is that I just discovered, it is not always present). &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt; sleeping at mo. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jurmous&quot; class=&quot;user-hover&quot; rel=&quot;jurmous&quot;&gt;Jurriaan Mous&lt;/a&gt; So you think do his suggestion of a callback on Call on the implementation we get back from the createProtobufRpcChannel call?&lt;/p&gt;</comment>
                            <comment id="15425628" author="apache9" created="Thu, 18 Aug 2016 00:05:43 +0000"  >&lt;p&gt;On a mobile phone so reply all things here, include the questions on RB.&lt;/p&gt;

&lt;p&gt;The parameter type in protobuf stub is the actual type of request and in the general call method it is Message, so this means we can not find the error at compile time. And for the RpcController, I do not think the &apos;possible null&apos; is a problem if the upper layer need it to receive something. For exapmle, I think we will always have a pcrc when doing scan because we need it to get the CellScanner, otherwise the logic is broken. For AsyncTable implementation, you always need a pcrc to check if we are in error.&lt;/p&gt;</comment>
                            <comment id="15425638" author="apache9" created="Thu, 18 Aug 2016 00:15:11 +0000"  >&lt;p&gt;I agree that the protobuf stub is not a good abstraction of event-driven code, but I do not think it is a good idea to partially bypass it. The string name mapping in the protobuf code is generated by protoc, so it is much safer than our hand-written mapping code. None or all, my suggestion. We should either implement our code on the suck but work stub, or change to use something new such as grpc as our RPC layer.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15425842" author="apache9" created="Thu, 18 Aug 2016 03:04:54 +0000"  >&lt;p&gt;So what&apos;s your options &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jurmous&quot; class=&quot;user-hover&quot; rel=&quot;jurmous&quot;&gt;Jurriaan Mous&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;I have also posted a comment on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16432&quot; title=&quot;Revisit the asynchronous ipc implementation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16432&quot;&gt;&lt;del&gt;HBASE-16432&lt;/del&gt;&lt;/a&gt; to describe my plan. The first thing we need to reach a consensus is that the AsyncTable should be implement use the protobuf async stub.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15426590" author="stack" created="Thu, 18 Aug 2016 15:02:08 +0000"  >&lt;p&gt;Makes sense putting back the pb interface as the boundary between rpc engine and user of the rpc. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jurmous&quot; class=&quot;user-hover&quot; rel=&quot;jurmous&quot;&gt;Jurriaan Mous&lt;/a&gt; has a form of this in his createProtobufRpcChannel  If we could keep netty behind this Interface, that&apos;d be cleanest (if awkward). Good by you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jurmous&quot; class=&quot;user-hover&quot; rel=&quot;jurmous&quot;&gt;Jurriaan Mous&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;On grpc, not yet or not here, not on this port. We need to finish shading project first so can change the pb version. If we were to do grpc, it should be on a different port (under the UI port since we already advertise an http service here?)&lt;/p&gt;</comment>
                            <comment id="15427476" author="apache9" created="Fri, 19 Aug 2016 01:46:43 +0000"  >&lt;blockquote&gt;
&lt;p&gt; If we could keep netty behind this Interface&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No doubt, we should use netty, netty is great.&lt;/p&gt;</comment>
                            <comment id="15427744" author="jurmous" created="Fri, 19 Aug 2016 07:18:01 +0000"  >&lt;p&gt;With the protobuf service abstraction we are doing more  object creation each time we do a call. We want in our async calls to expose a CompletableFuture, for which the request needs to be converted to a PayloadCarryingRpcController and a callback, which needs to be converted to a kind of Promise within the Netty RPC layer. With the other route without Protobuf services we can pass a CompletableFuture from back to front without passing any implementation details about Netty (or possible future grpc implementation). &lt;/p&gt;

&lt;p&gt;The Descriptors.MethodDescriptor in the AsyncRpcChannel is indeed not nice but we can abstract that away with an Enum/ a class which contains the generated MDs.&lt;/p&gt;

&lt;p&gt;I would much rather prefer that we abstract the whole protobuf services away and make all our client/table implementations immune to change to FE grpc than to leak protobuf services everywhere. A simple method that inputs anything our client needs and outputs a CompletableFuture seems to be much more change proof. Then we can slowly phase out anything Protobuf service related and we have more performant Clients because there is less conversion/object creation tax.&lt;/p&gt;</comment>
                            <comment id="15427781" author="apache9" created="Fri, 19 Aug 2016 07:50:02 +0000"  >&lt;p&gt;First you can not use the same CompletableFuture, the return type is different for a RpcClient and a Table level interface. The former one will be a protobuf message and the latter one will not. And unfortunately, CompletableFuture&apos;s chained api can not do Throwable convert so you still need to do some nest works...&lt;/p&gt;

&lt;p&gt;And if you want to let the whole protobuf services go away, at least you also need to change the RpcServer right? And if you really want to do this, my suggestion is to write a protoc extension for HBase which can generate asynchronous api with a more modern style. If not, you always need to do the method and type mapping manually and remember to change it every time when the protobuf definition changed. This is really boring and error-prone.&lt;/p&gt;

&lt;p&gt;And as stack said above, he is trying to make our protobuf upgradable. After he success, I think we could try to upgrade our pb to 3.0 and try generate grpc interfaces. At that time you could implement your RpcClient start from a more modern style asynchronous api. But now, I still suggest we should use the old pb interfaces to implement our AsyncTable. As said above, it has the ability to support all asynchronous operations although it is not the best solution.&lt;/p&gt;

&lt;p&gt;And last, Performance is not everything&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15429129" author="apache9" created="Sat, 20 Aug 2016 01:04:00 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jurmous&quot; class=&quot;user-hover&quot; rel=&quot;jurmous&quot;&gt;Jurriaan Mous&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; Any other concerns?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15430219" author="jurmous" created="Mon, 22 Aug 2016 07:09:41 +0000"  >&lt;blockquote&gt;
&lt;p&gt;First you can not use the same CompletableFuture, the return type is different for a RpcClient and a Table level interface. The former one will be a protobuf message and the latter one will not. And unfortunately, CompletableFuture&apos;s chained api can not do Throwable convert so you still need to do some nest works...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well I currently pass the Netty future from front to back so it is possible. I do this by passing a MessageConverter and IOExceptionConverter to the back. MessageConverter can also be solved within CompletableFuture as you note.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;And if you want to let the whole protobuf services go away, at least you also need to change the RpcServer right? And if you really want to do this, my suggestion is to write a protoc extension for HBase which can generate asynchronous api with a more modern style. If not, you always need to do the method and type mapping manually and remember to change it every time when the protobuf definition changed. This is really boring and error-prone.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well there is not that much manual protobuf work needed since it does not depend on the contents of the protobuf but only the MethodDescriptor. I link directly to the generated source so they fail quickly and in one place if they change and are regenerated. It is not such big of a hassle. I am not suggesting to change the whole server, just giving a quick path for async clients.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;And as stack said above, he is trying to make our protobuf upgradable. After he success, I think we could try to upgrade our pb to 3.0 and try generate grpc interfaces. At that time you could implement your RpcClient start from a more modern style asynchronous api. But now, I still suggest we should use the old pb interfaces to implement our AsyncTable. As said above, it has the ability to support all asynchronous operations although it is not the best solution.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;A newer protobuf implementation with more modern style async api would be great. Of course we need to move towards this future. But would a more convenient method for now give more pleasure than pain. I think it is making stuff easier and faster for not that big of a price. &lt;/p&gt;
</comment>
                            <comment id="15430229" author="apache9" created="Mon, 22 Aug 2016 07:18:49 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Descriptors.MethodDescriptor GET_DESCRIPTOR = ClientProtos.ClientService
	      .getDescriptor().findMethodByName(&lt;span class=&quot;code-quote&quot;&gt;&quot;Get&quot;&lt;/span&gt;);
	
	  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Descriptors.MethodDescriptor MUTATE_DESCRIPTOR = ClientProtos.ClientService
	      .getDescriptor().findMethodByName(&lt;span class=&quot;code-quote&quot;&gt;&quot;Mutate&quot;&lt;/span&gt;);
	
	  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Descriptors.MethodDescriptor MULTI_DESCRIPTOR = ClientProtos.ClientService
	      .getDescriptor().findMethodByName(&lt;span class=&quot;code-quote&quot;&gt;&quot;Multi&quot;&lt;/span&gt;);
	
	  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Descriptors.MethodDescriptor EXEC_SERVICE_DESCRIPTOR = ClientProtos
	      .ClientService.getDescriptor().findMethodByName(&lt;span class=&quot;code-quote&quot;&gt;&quot;ExecService&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I do not think this will fail at compile time if the proto file is changed. And also, you can call the get method with a protobuf message with any type and does not cause any compile error. I do not think this a good practice.&lt;/p&gt;</comment>
                            <comment id="15430250" author="apache9" created="Mon, 22 Aug 2016 07:36:23 +0000"  >&lt;p&gt;And I think we have already reached an agreement that the netty stuffs should not be exposed to user level API. And for &lt;tt&gt;CompletableFuture&lt;/tt&gt;, there are also lot of extra objection allocations since you will get a new &lt;tt&gt;CompletableFuture&lt;/tt&gt; every time when you do chaining.&lt;/p&gt;

&lt;p&gt;And to be honest, I do not think a little more object allocations is a big problem for a simple ping-pong RPC call as there are already bunch of object allocations during an RPC call and the cost of creating an RpcController is really cheap.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15430252" author="jurmous" created="Mon, 22 Aug 2016 07:42:26 +0000"  >&lt;blockquote&gt;&lt;p&gt; I do not think this will fail at compile time if the proto file is changed. And also, you can call the get method with a protobuf message with any type and does not cause any compile error. I do not think this a good practice.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ah yes. I was looking a bit too much into interface forgetting how I got them. &lt;/p&gt;

&lt;p&gt;We could also hardlink them to the generated code by depending on org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Get.class.getSimpleName().&lt;/p&gt;</comment>
                            <comment id="15430257" author="apache9" created="Mon, 22 Aug 2016 07:52:17 +0000"  >&lt;p&gt;The &lt;tt&gt;org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Get&lt;/tt&gt; refers to the Get message defined in proto file, not the get method. For example, can you find a &lt;tt&gt;Multi&lt;/tt&gt; or a &lt;tt&gt;ExecService&lt;/tt&gt; class in &lt;tt&gt;ClientProtos&lt;/tt&gt;?&lt;/p&gt;</comment>
                            <comment id="15431946" author="apache9" created="Tue, 23 Aug 2016 01:31:59 +0000"  >&lt;p&gt;So any other concerns? Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jurmous&quot; class=&quot;user-hover&quot; rel=&quot;jurmous&quot;&gt;Jurriaan Mous&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="15433892" author="apache9" created="Wed, 24 Aug 2016 00:02:12 +0000"  >&lt;p&gt;Ping. Let&apos;s make some progress?&lt;/p&gt;</comment>
                            <comment id="15433896" author="stack" created="Wed, 24 Aug 2016 00:05:54 +0000"  >&lt;p&gt;Ok adhering to the pb interface with callbacks as our first implementation &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jurmous&quot; class=&quot;user-hover&quot; rel=&quot;jurmous&quot;&gt;Jurriaan Mous&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="15434506" author="jurmous" created="Wed, 24 Aug 2016 08:44:19 +0000"  >&lt;p&gt;I currently do not have so much time to properly look into it. That is why I gave too quick answers and was seeing what I wanted to see. &lt;/p&gt;

&lt;p&gt;The descriptor names are indeed unfortunately needed with this version of the generated protobuf code. I don&apos;t like the protobuf generated services class and I can also understand that you want to standardize on one method of communicating with the RPC layer. Well the consequence is that an async client will be more complex to deal with this payload carrying rpccontrollers. I can live with it but will not love it. &lt;/p&gt;</comment>
                            <comment id="15434638" author="apache9" created="Wed, 24 Aug 2016 10:08:43 +0000"  >&lt;p&gt;I can feel the pain &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jurmous&quot; class=&quot;user-hover&quot; rel=&quot;jurmous&quot;&gt;Jurriaan Mous&lt;/a&gt; but I think we should have better boundaries on the implementation.&lt;/p&gt;

&lt;p&gt;With gRPC, there is a StreamObserver which is used to implement async operations.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/grpc/grpc-java/blob/master/stub/src/main/java/io/grpc/stub/StreamObserver.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/grpc/grpc-java/blob/master/stub/src/main/java/io/grpc/stub/StreamObserver.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Later when we change to gRPC, we could reimplement AsyncTable with the new API. But that will also be a big project.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15434660" author="apache9" created="Wed, 24 Aug 2016 10:23:55 +0000"  >&lt;p&gt;And also a ListenableFuture interface. See here&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Apache9/grpc-test/blob/master/src/main/java/com/github/apache9/HelloWorld.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Apache9/grpc-test/blob/master/src/main/java/com/github/apache9/HelloWorld.java&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15435985" author="apache9" created="Thu, 25 Aug 2016 00:10:29 +0000"  >&lt;p&gt;Will commit shortly if no objection.&lt;/p&gt;</comment>
                            <comment id="15436056" author="apache9" created="Thu, 25 Aug 2016 00:57:00 +0000"  >&lt;p&gt;Pushed to master.&lt;/p&gt;

&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jurmous&quot; class=&quot;user-hover&quot; rel=&quot;jurmous&quot;&gt;Jurriaan Mous&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; for reviewing.&lt;/p&gt;</comment>
                            <comment id="15436115" author="hudson" created="Thu, 25 Aug 2016 01:56:01 +0000"  >&lt;p&gt;FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #1476 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/1476/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/1476/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16433&quot; title=&quot;Remove AsyncRpcChannel related stuffs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16433&quot;&gt;&lt;del&gt;HBASE-16433&lt;/del&gt;&lt;/a&gt; Remove AsyncRpcChannel related stuffs (zhangduo: rev a1f760ff763bacbfcfd6eb80d5076ec35e3b27e3)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;(edit) hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncRpcClient.java&lt;/li&gt;
	&lt;li&gt;(delete) hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/Promise.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/RpcClientImpl.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncServerResponseHandler.java&lt;/li&gt;
	&lt;li&gt;(delete) hbase-client/src/main/java/org/apache/hadoop/hbase/client/ResponseFutureListener.java&lt;/li&gt;
	&lt;li&gt;(delete) hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncRpcChannelImpl.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/RpcClient.java&lt;/li&gt;
	&lt;li&gt;(delete) hbase-client/src/main/java/org/apache/hadoop/hbase/client/Future.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncRpcChannel.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/AbstractTestIPC.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncCall.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15437110" author="stack" created="Thu, 25 Aug 2016 15:49:54 +0000"  >&lt;p&gt;Thanks for the update &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jurmous&quot; class=&quot;user-hover&quot; rel=&quot;jurmous&quot;&gt;Jurriaan Mous&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;+1 on this refactor. Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                            <outwardlinks description="supercedes">
                                        <issuelink>
            <issuekey id="12976505">HBASE-15978</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12824112" name="HBASE-16433.patch" size="87436" author="Apache9" created="Wed, 17 Aug 2016 09:10:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 17 Aug 2016 11:47:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            16 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32es7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>