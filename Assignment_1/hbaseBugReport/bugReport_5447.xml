<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:27:50 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5447/HBASE-5447.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5447] Support for custom filters with PB-based RPC</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5447</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description></description>
                <environment></environment>
        <key id="12543625">HBASE-5447</key>
            <summary>Support for custom filters with PB-based RPC</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12540505">HBASE-5305</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gchanan">Gregory Chanan</assignee>
                                    <reporter username="tlipcon">Todd Lipcon</reporter>
                        <labels>
                    </labels>
                <created>Wed, 22 Feb 2012 06:48:27 +0000</created>
                <updated>Mon, 23 Sep 2013 18:30:52 +0000</updated>
                            <resolved>Thu, 13 Sep 2012 06:13:27 +0000</resolved>
                                                    <fixVersion>0.95.0</fixVersion>
                                    <component>IPC/RPC</component>
                    <component>master</component>
                    <component>migration</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13418052" author="gchanan" created="Thu, 19 Jul 2012 04:29:32 +0000"  >&lt;p&gt;Some thoughts on this issue...&lt;/p&gt;

&lt;p&gt;First off: I&apos;m not sure if this JIRA is referring to the built-in existing filters, or filters that end-users would write (or some combination of both).  So, what does &quot;custom&quot; mean here?  I&apos;m going to refer to both built-in and new filters below &amp;#8211; I think we need to make a decision for each.&lt;/p&gt;

&lt;p&gt;Today, we are using the Writable methods for each filter type in order to create the Filter on the other end of the rpc (together with the filter class name, this is enough to construct the filter).  This work but means the filters are not extensible in a forward-compatible way.  Options:&lt;/p&gt;

&lt;p&gt;1) Require a protobuf definition for each filter class&lt;br/&gt;
This would allow us to make each filter forward-compatible in the manner that all other rpcs are done.  I found 16 built-in filter classes where this would need to be done, so I don&apos;t think it&apos;s a huge undertaking.  I&apos;m even offering to do it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.  I think this is the best option for the built-in filters: most users probably don&apos;t write their own filters and we might as well make them extensible.&lt;br/&gt;
The downside is that for new filters that end-users would write, we would require them to install pb, write pb definitions, and write java conversions (convert pb filter to Filter and visa-versa) which makes writing filters for users more difficult &amp;#8211; they may not even care about forward compatibility.&lt;/p&gt;

&lt;p&gt;2) Keep the existing Writable interface (or use something similar)&lt;br/&gt;
This would require no work, but doesn&apos;t give us forward compatibility.&lt;/p&gt;

&lt;p&gt;We could do also a hybrid scheme, where users have the option to either create PB-compatible filters or Writable filters (e.g. we could have something like FilterBaseWritable and FilterBasePB), where all our builit-in filters derive from FilterBasePB and end-users who don&apos;t want to mess with PB can just derive from FilterBasePB (where they are required to implement the readFields and write methods, as today).  The downside here, of course, is more code to maintain and test for both of the filter base classes.&lt;/p&gt;

&lt;p&gt;So, to recap, the questions I think we need to answer are:&lt;br/&gt;
A) What should be done about the built-in filters (I suggest converting fully to PB)&lt;br/&gt;
B) What should be done about new filters that end-users write&lt;/p&gt;</comment>
                            <comment id="13418055" author="gchanan" created="Thu, 19 Jul 2012 04:33:21 +0000"  >&lt;p&gt;I should note &amp;#8211; there are some filters that allow combination of other filters, e.g. boolean logic ands/ors between filters.  I&apos;d need to think about if we could get that to work with a hybrid scheme.&lt;/p&gt;</comment>
                            <comment id="13418059" author="zhihyu@ebaysf.com" created="Thu, 19 Jul 2012 04:38:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;just derive from FilterBasePB (where they are required to implement the readFields and write methods, as today)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I guess there was a typo above: FilterBaseWritable should have been used.&lt;/p&gt;</comment>
                            <comment id="13418418" author="jxiang" created="Thu, 19 Jul 2012 16:31:14 +0000"  >&lt;p&gt;+1 on fully converting to PB.&lt;/p&gt;</comment>
                            <comment id="13418522" author="gchanan" created="Thu, 19 Jul 2012 18:12:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;I guess there was a typo above: FilterBaseWritable should have been used.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Correct, thanks for pointing that out.&lt;/p&gt;</comment>
                            <comment id="13418599" author="zhihyu@ebaysf.com" created="Thu, 19 Jul 2012 19:28:32 +0000"  >&lt;p&gt;Maybe using sub-tasks, we should provide some tools which help users write / validate custom PB-based filters.&lt;/p&gt;</comment>
                            <comment id="13422305" author="stack" created="Wed, 25 Jul 2012 14:27:09 +0000"  >&lt;p&gt;@Gregory I don&apos;t think there many user-made filters that are not part of core code base.  Would go along w/ your option A above.  We can help those w/ user-made filters do convertion to 0.96 when/if they show up trying to figure how to convert.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13454666" author="gchanan" created="Thu, 13 Sep 2012 05:47:17 +0000"  >&lt;p&gt;Should we close this now that &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6454&quot; title=&quot;Write PB definitions for filters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6454&quot;&gt;&lt;del&gt;HBASE-6454&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6477&quot; title=&quot;Use PB filter definitions in RPC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6477&quot;&gt;&lt;del&gt;HBASE-6477&lt;/del&gt;&lt;/a&gt; are in?  Or do we think there is more to do?&lt;/p&gt;</comment>
                            <comment id="13454678" author="stack" created="Thu, 13 Sep 2012 06:13:27 +0000"  >&lt;p&gt;Closing.  Assigned Gregory.&lt;/p&gt;

&lt;p&gt;Regards custom filters, let them come out of the woodwork.  We&apos;ll help them make the convertion to pb.&lt;/p&gt;</comment>
                            <comment id="13775157" author="stack" created="Mon, 23 Sep 2013 18:30:52 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                            <outwardlinks description="requires">
                                        <issuelink>
            <issuekey id="12600193">HBASE-6454</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12600751">HBASE-6477</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 19 Jul 2012 04:29:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>228864</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0htfj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>102030</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>