<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:17:19 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10803/HBASE-10803.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10803] &quot;mutateRow&quot; maybe fail when Region Server restarted(or killed) or Region Balance</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10803</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt; found that the operation &quot;mutateRow&quot; maybe fail if Region Server restarted(or killed) or Region Balance, but the java client didnot throw exceptions and  there was no exception in the server&apos;s log either. &lt;/p&gt;

&lt;p&gt;the client code :&lt;/p&gt;

&lt;p&gt;			HTableInterface table = connection.getTable(TABLE_NAME);&lt;br/&gt;
			Delete d = new Delete(Bytes.toBytes(rowkey), time);&lt;br/&gt;
			d.deleteColumns(FAMILY, Bytes.toBytes(id), time);&lt;br/&gt;
			Put p = new Put(Bytes.toBytes(rowkey));&lt;br/&gt;
			p.add(FAMILY_DEL, Bytes.toBytes(id), time, Bytes.toBytes(value));&lt;br/&gt;
			RowMutations rm = new RowMutations(Bytes.toBytes(rowkey));&lt;br/&gt;
			rm.add(d);&lt;br/&gt;
			rm.add(p);&lt;br/&gt;
			table.mutateRow(rm);&lt;br/&gt;
			table.close();&lt;/p&gt;

&lt;p&gt;the test data:&lt;br/&gt;
	Operator Type: put; mutateRow(delete+put) &lt;br/&gt;
	Operator Total Count:202194822  put:160866148 mutateRow:41328674&lt;br/&gt;
	All put correct, but 161 mutateRow incorrect (161 data was not mutateRowed in fact).&lt;br/&gt;
	then we checked log when the time mutateRow failed, NO EXCEPTION THROWED, found that as follow:&lt;/p&gt;

&lt;p&gt;39 failed  hbase auto region-balance&lt;br/&gt;
44 failed  hbase region server killed&lt;br/&gt;
59 failed  hbase region server restart&lt;br/&gt;
19 failed  hadoop datanode restart&lt;/p&gt;</description>
                <environment>&lt;p&gt;hbase0.96.1.1&lt;br/&gt;
hadoop2.2 &lt;br/&gt;
jdk1.7&lt;br/&gt;
5 Region Server &lt;/p&gt;</environment>
        <key id="12702613">HBASE-10803</key>
            <summary>&quot;mutateRow&quot; maybe fail when Region Server restarted(or killed) or Region Balance</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="Xiaoyin">LiJianyin</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Mar 2014 11:37:19 +0000</created>
                <updated>Sun, 23 Mar 2014 11:39:04 +0000</updated>
                                            <version>0.96.1.1</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13941887" author="stack" created="Thu, 20 Mar 2014 16:11:35 +0000"  >&lt;p&gt;Can you tell us more please &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Xiaoyin&quot; class=&quot;user-hover&quot; rel=&quot;Xiaoyin&quot;&gt;LiJianyin&lt;/a&gt;?  Is it easy reproduce?  Are the failed messages coming out on the client and we retry but then when all retries are done, we fail silently?  Thanks.&lt;/p&gt;</comment>
                            <comment id="13944318" author="xiaoyin" created="Sun, 23 Mar 2014 03:36:36 +0000"  >&lt;p&gt;I used our data from online(asyn) to test. The mothods just as bellow, maybe you can try:&lt;/p&gt;

&lt;p&gt;	public boolean addOrUpdate(String rowkey, Long mid, String value, long time){&lt;br/&gt;
		HTableInterface table = null;&lt;br/&gt;
		try&lt;/p&gt;
{
			table = connection.getTable(TABLE_NAME);
			Put p = new Put(Bytes.toBytes(rowkey));
			p.add(FAMILY, Bytes.toBytes(mid), Bytes.toBytes(value));
			table.put(p);
			table.close();
			return true;
		}
&lt;p&gt; catch (Exception e)&lt;/p&gt;
{
			logger.warn(&quot;hbase put failed!&quot;,e);
			return false;
		}
&lt;p&gt;	}&lt;br/&gt;
when the method &quot;addOrUpdate&quot; returns true, write the params (rowkey, mid, String , time) to PUT_SUCCESS_LOG; when it returns false, ignore it.&lt;br/&gt;
The addOrUpdate method about 200-500 times/s&lt;/p&gt;

&lt;p&gt;	//delete and put atomically on a single row&lt;br/&gt;
	public boolean delete(String rowkey, Long mid, String value, long time){&lt;br/&gt;
		try&lt;/p&gt;
{
			HTableInterface table = connection.getTable(TABLE_NAME);
			Delete d = new Delete(Bytes.toBytes(rowkey), time);
			d.deleteColumns(FAMILY, Bytes.toBytes(mid), time);
			Put p = new Put(Bytes.toBytes(rowkey));
			p.add(FAMILY_DEL, Bytes.toBytes(mid), time, Bytes.toBytes(value));
			RowMutations rm = new RowMutations(Bytes.toBytes(rowkey));
			rm.add(d);
			rm.add(p);
			table.mutateRow(rm);
			table.close();
			return true;
		}
&lt;p&gt; catch (Exception e)&lt;/p&gt;
{
			logger.warn(&quot;hbase delete failed!&quot;,e);
			return false;
		}
&lt;p&gt;	}&lt;br/&gt;
when the method &quot;delete&quot; returns true, write the params (rowkey, mid, String , time) to DEL_SUCCESS_LOG; when it returns false, ignore it.&lt;br/&gt;
The delete method about 50-120 times/s&lt;/p&gt;

&lt;p&gt;Both addOrUpdate and delete were running for 15+ days, the two types of method maybe operate the same rowkey and mid.&lt;/p&gt;

&lt;p&gt;Then check every record in PUT_SUCCESS_LOG and DEL_SUCCESS_LOG whether the method success. PUT_SUCCESS_LOG all right, but few of DEL_SUCCESS_LOG wrong, and the wrong time just restarting or balancing.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="13944345" author="lhofhansl" created="Sun, 23 Mar 2014 05:33:49 +0000"  >&lt;p&gt;Can you write a unit tests? When folks use specific times with deletes and then claim that deletes or puts do not work right I get very suspicious. At what time is the delete placed exactly and what about the time of the put? (I assume you know that you can place Deletes into the future and have them shadow current Put or that you can date Puts into the past. If a Put and a Delete have exactly the same timestamp the Delete will be sorted first... I.e. &quot;win&quot;)&lt;/p&gt;

&lt;p&gt;Have a look at TestAtomicOperation.testRowMutationMultiThreads. Specifically how carefully the timestamps are chosen for proper testing.&lt;/p&gt;</comment>
                            <comment id="13944407" author="xiaoyin" created="Sun, 23 Mar 2014 11:39:04 +0000"  >&lt;p&gt;Thanks, Lars Hofhansl, stack. I&apos;ll try to write  a unit tests.&lt;br/&gt;
in addition&#65306;&lt;/p&gt;

&lt;p&gt;	two column family: CF1, CF0&lt;br/&gt;
 	addOrUpdate: put-&amp;gt;CF1 with the timestamp&lt;br/&gt;
 	delete(mutateRow): delete-&amp;gt;CF1(deleteColumns) and put-&amp;gt;CF0 with the same timestamp&lt;br/&gt;
 	all timestamps are from client (System.currentTimeMillis())&lt;/p&gt;

&lt;p&gt;	so, if delete(mutateRow) success, the CF0 must have value.  but the result is not so.&lt;/p&gt;

&lt;p&gt; 	for example: (rowkey+qualifier only in DEL_SUCCESS_LOG)&lt;br/&gt;
 		in the DEL_SUCCESS_LOG:&lt;br/&gt;
			 timestamp:1394601911543  rowkey:361523835735633 qualifier:3670583952628921 value:0&lt;br/&gt;
		--result: there is no value in CF0 with the rowkey+qualifier&lt;/p&gt;

&lt;p&gt;         	another example: (the same rowkey+qualifier are both in DEL_SUCCESS_LOG and PUT_SUCCESS_LOG)&lt;br/&gt;
		in the PUT_SUCCESS_LOG:&lt;br/&gt;
			timestamp:1394601634849  rowkey:213772920506212 qualifier:3687288854440310 value:0&lt;br/&gt;
		in the DEL_SUCCESS_LOG:&lt;br/&gt;
			timestamp:1394601913327  rowkey:213772920506212 qualifier:3687288854440310 value:0&lt;br/&gt;
		--result: CF1 with the rowkey+qualifier+timestamp 1394601634849 has the value, but no value in CF0  with the rowkey+qualifier&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Mar 2014 16:11:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>380952</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 38 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1tmwn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>381231</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>