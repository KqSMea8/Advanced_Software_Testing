<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:48:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13977/HBASE-13977.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13977] Convert getKey and related APIs to Cell</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13977</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;During the course of changes for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11425&quot; title=&quot;Cell/DBB end-to-end on the read-path&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11425&quot;&gt;&lt;del&gt;HBASE-11425&lt;/del&gt;&lt;/a&gt; felt that more APIs can be converted to return Cell instead of BB like getKey, getLastKey. &lt;br/&gt;
We can also rename the getKeyValue to getCell.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12840888">HBASE-13977</key>
            <summary>Convert getKey and related APIs to Cell</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12822298">HBASE-13500</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="ram_krish">ramkrishna.s.vasudevan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 26 Jun 2015 15:35:55 +0000</created>
                <updated>Sat, 4 Jul 2015 09:42:49 +0000</updated>
                            <resolved>Fri, 3 Jul 2015 17:34:34 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14603066" author="anoop.hbase" created="Fri, 26 Jun 2015 15:44:06 +0000"  >&lt;p&gt;Thanks Ram.. These are good cleanups which was pending after the Cell work.&lt;/p&gt;</comment>
                            <comment id="14607543" author="ram_krish" created="Tue, 30 Jun 2015 05:44:52 +0000"  >&lt;p&gt;Patch for trunk. Trying QA.&lt;/p&gt;</comment>
                            <comment id="14607677" author="hadoopqa" created="Tue, 30 Jun 2015 07:15:11 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12742717/HBASE-13977.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12742717/HBASE-13977.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f8bd578b80b4e656d799c82ca1b6191e35bb0ae4.&lt;br/&gt;
  ATTACHMENT ID: 12742717&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 47 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1902 checkstyle errors (more than the master&apos;s current 1899 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestMinVersions&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestKeepDeletes&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestStoreFile&lt;br/&gt;
                  org.apache.hadoop.hbase.io.hfile.TestHFile&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14611//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14611//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14611//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14611//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14611//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14611//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14611//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14611//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14611//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14611//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14607922" author="ram_krish" created="Tue, 30 Jun 2015 08:16:17 +0000"  >&lt;p&gt;Corrects the failed test cases.  The checkstyle comment due to unused imports and the javadoc comments are also fixed.&lt;/p&gt;</comment>
                            <comment id="14608098" author="hadoopqa" created="Tue, 30 Jun 2015 10:37:38 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12742739/HBASE-13977_1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12742739/HBASE-13977_1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f8bd578b80b4e656d799c82ca1b6191e35bb0ae4.&lt;br/&gt;
  ATTACHMENT ID: 12742739&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 47 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.encoding.TestDataBlockEncoders&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14614//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14614//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14614//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14614//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14614//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14614//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14614//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14614//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14608151" author="ram_krish" created="Tue, 30 Jun 2015 11:36:24 +0000"  >&lt;p&gt;Updated patch for correcting TestDataBlockEncoders.  It was not failing in the first test run, not sure why.&lt;/p&gt;</comment>
                            <comment id="14608283" author="hadoopqa" created="Tue, 30 Jun 2015 13:41:17 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12742810/HBASE-13977_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12742810/HBASE-13977_2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f8bd578b80b4e656d799c82ca1b6191e35bb0ae4.&lt;br/&gt;
  ATTACHMENT ID: 12742810&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 47 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14619//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14619//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14619//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14619//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14619//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14619//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14619//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14619//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14608612" author="anoop.hbase" created="Tue, 30 Jun 2015 16:27:44 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] getValueArray() {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;code-quote&quot;&gt;&quot;KeyOnlyKeyValue does not work with values.&quot;&lt;/span&gt;);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Do we need to change it now? If we miss below kind of checks in some places we will land in issues&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;if (!(cell instanceof KeyValue.KeyOnlyKeyValue)) {&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;BufferedDataBlockEncoder&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Cell getKeyAsCell() {
  ByteBuffer keyBuffer = ByteBuffer.allocate(current.keyLength);
  keyBuffer.put(current.keyBuffer, 0, current.keyLength);
  keyBuffer.rewind();
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValue.KeyOnlyKeyValue(keyBuffer.array());
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;No need to go with BB create now..  Directly make the Cell out of current.keyBuffer?  Do we need to clone that (if so also byte[] copy and create KV)?&lt;/p&gt;

&lt;p&gt;Cell getLastKey -&amp;gt; to be named as getLastKeyAsCell?&lt;br/&gt;
I am ok to continue with old name also.. But then we have to have uniform naming... Some other APIs we have changed name&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
KeyValue kv = KeyValueUtil.ensureKeyValue(scanner.getCell());
halfWriter.append(kv);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We can avoid the call to ensureKeyValue()&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;firstOnRow = new KeyValue(CellUtil.cloneRow(lastKV), HConstants.LATEST_TIMESTAMP);&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Instead of cloneRow can pass lastKV.getRowArray, offset and length and make KV?&lt;/p&gt;

&lt;p&gt;Same here also&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;firstOnRow = new KeyValue(CellUtil.cloneRow(kv), HConstants.LATEST_TIMESTAMP);&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="14608682" author="ram_krish" created="Tue, 30 Jun 2015 17:13:41 +0000"  >&lt;blockquote&gt;&lt;p&gt;Do we need to change it now? If we miss below kind of checks in some places we will land in issues&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You mean change the above illegal argument exception? In places where the getValue APIs are used.  I remember that explicitly this was asked to be done in case they use the KeyOnlyKV in actual code path.  These changes are only in helper methods like toString and should be fine I think.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Cell getLastKey -&amp;gt; to be named as getLastKeyAsCell?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The getFirstKey and getMidkey have not been changed. So it is ok to continue the same name I would say.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Instead of cloneRow can pass lastKV.getRowArray, offset and length and make KV?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This we can do. But I thought its better we do it after we create those Fake keys that we created for 11425?&lt;/p&gt;</comment>
                            <comment id="14609640" author="ram_krish" created="Wed, 1 Jul 2015 06:49:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;Directly make the Cell out of current.keyBuffer? Do we need to clone that (if so also byte[] copy and create KV)?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think it is better we copy it.  Now we are using this API mainly in two places getFirstKey and getLastKey.  The getFirstKey is getting used as an instance in HalfStorefileReader (firstKey). So better to copy and use it and also it is one time operation.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Instead of cloneRow can pass lastKV.getRowArray, offset and length and make KV?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I updated and changed the patch according to the comment.  Here it makes sense because we are forming the lastKV and firstKV from the getLastKey and getFirstKey API. The getLastKey and getFirstKey has done a copy and so there is no need to do another clone and again make the KV constructor to do a copy.  &lt;br/&gt;
The IllegalArgException I have not changed in this patch. &lt;/p&gt;</comment>
                            <comment id="14611435" author="hadoopqa" created="Thu, 2 Jul 2015 04:07:27 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12743011/HBASE-13977_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12743011/HBASE-13977_3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f0e29c49a1f5f3773ba03b822805d863c149b443.&lt;br/&gt;
  ATTACHMENT ID: 12743011&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 47 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14647//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14647//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14647//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14647//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14647//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14647//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14647//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14647//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14611515" author="ram_krish" created="Thu, 2 Jul 2015 05:50:20 +0000"  >&lt;p&gt;Ping!!!&lt;/p&gt;</comment>
                            <comment id="14611559" author="stack" created="Thu, 2 Jul 2015 06:42:22 +0000"  >&lt;p&gt;What does this mean: &quot;Gets the current key in the form of a cell.&quot; That there is no value returned?&lt;/p&gt;

&lt;p&gt;In getKeyAsCell, why bother with a ByteBuffer when all you are doing is passing an array?&lt;/p&gt;

&lt;p&gt;getKeyAsCell is defined in multiple Interfaces? Can we avoid that?&lt;/p&gt;

&lt;p&gt;Here we are creating a Cell every time:&lt;/p&gt;

&lt;p&gt;          if (getComparator().compare(splitCell, getKeyAsCell()) &amp;lt;= 0) {&lt;/p&gt;

&lt;p&gt;Previous we were passing current array, no allocation and no KeyValue creation (if I am reading this right). Do we have to do this? Anything we can do better here?&lt;/p&gt;

&lt;p&gt;Ditto in next hunk of changes.&lt;/p&gt;

&lt;p&gt;Otherwise, I like these changes.&lt;/p&gt;</comment>
                            <comment id="14611800" author="ram_krish" created="Thu, 2 Jul 2015 11:12:25 +0000"  >&lt;p&gt;I went thro the changes once again&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;Gets the current key in the form of a cell.&quot; That there is no value returned?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes. only the key part. Earlier it was a BB view of the key - now it is a Cell.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;In getKeyAsCell, why bother with a ByteBuffer when all you are doing is passing an array?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ya, you are right. I changed that to just use the System.arrayCopy in BufferedDataEncoder.getKeyAsCell.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;getKeyAsCell is defined in multiple Interfaces? Can we avoid that?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;For the DBE cases I think we cannot do it now because the entire seeker is now the BuffereddataEncoder.  So we need some API in the DatablockEncoder to be used. May be another JIRA if it is possible?&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;if (getComparator().compare(splitCell, getKeyAsCell()) &amp;lt;= 0) {&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Valid point. But previously for creating a BB we were creating a BB object but now we are creating a cell every time.  But thinking in terms of BufferedBackedCell it would be better if it had been a cell. The current code is trying to do &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-         ByteBuffer bb = getKey();
-          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (getComparator().compare(splitCell, bb.array(), bb.arrayOffset(),
-              bb.limit()) &amp;lt;= 0) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;After BufferedBackedcells come - we cannot have it the above way as array() and arrayOffset() are not expected to be used.  Hence making it as cell would be encapsulate us of this inner detail.&lt;br/&gt;
I thought of using the instance level keyOnlyKv in the HFileScannerImpl - but since the HalfStorefileReader is trying to cache the firstKey we cannot use that instance level variable in HFileScanner and use that to just set the byte[] every time.  &lt;/p&gt;</comment>
                            <comment id="14611802" author="ram_krish" created="Thu, 2 Jul 2015 11:19:05 +0000"  >&lt;p&gt;Updated patch as per Stack&apos;s comments.&lt;/p&gt;</comment>
                            <comment id="14611806" author="anoop.hbase" created="Thu, 2 Jul 2015 11:23:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;In getKeyAsCell, why bother with a ByteBuffer when all you are doing is passing an array?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Same thing I also asked in comments Ram.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;No need to go with BB create now.. Directly make the Cell out of current.keyBuffer? Do we need to clone that (if so also byte[] copy and create KV)?&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="14611828" author="ram_krish" created="Thu, 2 Jul 2015 11:47:30 +0000"  >&lt;p&gt;Oh yes. I thought you were asking if we really need to do a copy. Sorry about that. &lt;/p&gt;</comment>
                            <comment id="14611963" author="stack" created="Thu, 2 Jul 2015 13:41:31 +0000"  >&lt;p&gt;Ok. +1 if hadoopqa passes and good by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14612767" author="ram_krish" created="Fri, 3 Jul 2015 02:27:49 +0000"  >&lt;p&gt;Try QA.&lt;/p&gt;</comment>
                            <comment id="14613118" author="anoop.hbase" created="Fri, 3 Jul 2015 10:44:44 +0000"  >&lt;p&gt;Most of the comments are not direct on your changes Ram..  But those changes we can do now which will help our read performance. So pls pardon me for making you to do it in this patch. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;return CellUtil.toString(getLastKey(), true)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;nit : Can pass false no?&lt;/p&gt;

&lt;p&gt;See in HFileReaderImpl&lt;br/&gt;
We have getLastKey() returning Cell representation of the last key. The the API which returns the current key is named as getKeyAsCell. We can uniform them? Make both as &apos;AsCell&apos; or just leave the old name as is. Am fine with both kind of naming.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;KeyValue kv = KeyValueUtil.ensureKeyValue(scanner.getCell());&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Avoid call to ensureKeyValue() now?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;firstOnRow = new KeyValue(lastKV.getRowArray(), lastKV.getRowOffset(), lastKV.getRowLength(),&lt;br/&gt;
1851	          HConstants.LATEST_TIMESTAMP);&lt;/p&gt;

&lt;p&gt;firstOnRow = new KeyValue(kv.getRowArray(), kv.getRowOffset(), kv.getRowLength(),&lt;br/&gt;
1867	          HConstants.LATEST_TIMESTAMP);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Can use CellUtil#createFirstOnRow now?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;// TODO this is in hot path? Optimize and avoid 2 extra object creations.&lt;br/&gt;
Cell firstKeyKV = this.getFirstKey();&lt;br/&gt;
Cell lastKeyKV = this.getLastKey();&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think we are good now and that TODO can go away.  This is great!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;KeyValue firstKeyOfPreviousRow = KeyValueUtil.createFirstOnRow(hfs.getCell()&lt;br/&gt;
430	            .getRowArray(), hfs.getCell().getRowOffset(), hfs.getCell().getRowLength());&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not your issue Ram. But we have hope for improvement here. Every call to hfs.getCell() creates an object. This should be called once and use that Cell&apos;s details to create first row.  Infact for that creation of the 1st cell in row, we can use CellUtil#createFirstOnRow API.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;byte[] boundary = existingWriters.isEmpty() ? left : CellUtil.cloneRow(cell); // make a copy&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is good. You are avoiding reference to deprecated methods. I see it many places in this patch. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;((KeyValue.KeyOnlyKeyValue)reader.getLastKey()).getKey())&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Any such unconditional type casting looks suspicious..  But ya we discussed abt this already in another Jira. As of now ok.. Let us revisit this area later.&lt;/p&gt;
</comment>
                            <comment id="14613130" author="ram_krish" created="Fri, 3 Jul 2015 11:20:28 +0000"  >&lt;p&gt;Updated patch with comments addressed.  The last one is not fixed as can be taken up in another JIRa.&lt;br/&gt;
The firstOnRow  change was not done as it had impact on the other API which was accepting KeyValue. But we changed the API from that point onwards to Cell. So now changing firstOnRow to Cell was not a problem.&lt;br/&gt;
Renamed getKeyAsCell back to getKey.&lt;/p&gt;</comment>
                            <comment id="14613138" author="anoop.hbase" created="Fri, 3 Jul 2015 11:38:45 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="14613334" author="ram_krish" created="Fri, 3 Jul 2015 17:33:07 +0000"  >&lt;p&gt;Thanks for the reviews. The git server seems to be down. Will commit it once it is up.&lt;/p&gt;</comment>
                            <comment id="14613336" author="ram_krish" created="Fri, 3 Jul 2015 17:34:34 +0000"  >&lt;p&gt;The server just came back.  Pushed to master. Thanks for the detailed reviews Anoop and Stack.&lt;/p&gt;</comment>
                            <comment id="14613637" author="hudson" created="Sat, 4 Jul 2015 09:42:49 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6626 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6626/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6626/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13977&quot; title=&quot;Convert getKey and related APIs to Cell&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13977&quot;&gt;&lt;del&gt;HBASE-13977&lt;/del&gt;&lt;/a&gt; - Convert getKey and related APIs to Cell (Ram) (ramkrishna: rev 74e82c64e5cd0b7e598997199fec432e51d8d267)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionFileSystem.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/PrefixTreeSeeker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StripeMultiFileWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileEncryption.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEditsReplaySink.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/CompressionTest.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionReplicas.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/BloomFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMajorCompaction.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestSeekTo.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12742717" name="HBASE-13977.patch" size="54352" author="ram_krish" created="Tue, 30 Jun 2015 05:44:52 +0000"/>
                            <attachment id="12742739" name="HBASE-13977_1.patch" size="57259" author="ram_krish" created="Tue, 30 Jun 2015 08:16:17 +0000"/>
                            <attachment id="12742810" name="HBASE-13977_2.patch" size="58023" author="ram_krish" created="Tue, 30 Jun 2015 11:36:24 +0000"/>
                            <attachment id="12743011" name="HBASE-13977_3.patch" size="58119" author="ram_krish" created="Wed, 1 Jul 2015 06:45:36 +0000"/>
                            <attachment id="12743435" name="HBASE-13977_4.patch" size="58229" author="ram_krish" created="Fri, 3 Jul 2015 02:27:49 +0000"/>
                            <attachment id="12743279" name="HBASE-13977_4.patch" size="58229" author="ram_krish" created="Thu, 2 Jul 2015 11:19:05 +0000"/>
                            <attachment id="12743503" name="HBASE-13977_5.patch" size="57707" author="ram_krish" created="Fri, 3 Jul 2015 11:18:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 26 Jun 2015 15:44:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 23 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2gjsf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>