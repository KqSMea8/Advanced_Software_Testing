<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:17:53 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10861/HBASE-10861.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10861] Extend ByteRange to create Mutable and Immutable ByteRange</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10861</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We would need APIs that would &lt;br/&gt;
setLimit(int limit)&lt;br/&gt;
getLimt()&lt;br/&gt;
asReadOnly()&lt;br/&gt;
These APIs would help in implementations that have Buffers offheap (for now BRs backed by DBB).&lt;br/&gt;
If anything more is needed could be added when needed.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12704225">HBASE-10861</key>
            <summary>Extend ByteRange to create Mutable and Immutable ByteRange</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="ram_krish">ramkrishna.s.vasudevan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 28 Mar 2014 11:33:48 +0000</created>
                <updated>Sat, 21 Feb 2015 23:29:52 +0000</updated>
                            <resolved>Thu, 26 Jun 2014 08:26:48 +0000</resolved>
                                                    <fixVersion>0.99.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13950877" author="hadoopqa" created="Fri, 28 Mar 2014 15:20:44 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12637379/HBASE-10861.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12637379/HBASE-10861.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12637379&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 9 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestRegionPlacement&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestImportExport.testImport94Table(TestImportExport.java:230)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9126//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13954612" author="apurtell" created="Sun, 30 Mar 2014 08:01:20 +0000"  >&lt;p&gt;Does the patch introduce new javadoc warnings?&lt;/p&gt;

&lt;p&gt;Does asReadOnlyByteRange actually return a read only ByteRange?&lt;/p&gt;</comment>
                            <comment id="13959691" author="ram_krish" created="Fri, 4 Apr 2014 06:35:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;Does the patch introduce new javadoc warnings?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Let me check&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Does asReadOnlyByteRange actually return a read only ByteRange?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Currently no. But trying to take a copy of the byte range.  In case of block cache when we deserialize a read only byte buffer is preffered.  So in case we want a read only buffer then we may have to subclass SimplePositinedByteRange and support only read methods in them.&lt;/p&gt;</comment>
                            <comment id="13961254" author="apurtell" created="Sat, 5 Apr 2014 21:49:25 +0000"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Does asReadOnlyByteRange actually return a read only ByteRange?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Currently no.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then this patch isn&apos;t doing the correct thing. If we need a read only byte range then this must be addressed. Otherwise the method name is a blatant lie and shouldn&apos;t be added. &lt;/p&gt;</comment>
                            <comment id="13961264" author="mcorgan" created="Sat, 5 Apr 2014 22:24:13 +0000"  >&lt;p&gt;maybe split the ByteRange interface into ByteRange and &quot;MutableByteRange extends ByteRange&quot;?  probably a good thing to have in general - only use MutableByteRange when necessary.&lt;/p&gt;</comment>
                            <comment id="13961718" author="ram_krish" created="Mon, 7 Apr 2014 08:55:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;maybe split the ByteRange interface into ByteRange and &quot;MutableByteRange extends ByteRange&quot;?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Makes sense +1.&lt;/p&gt;</comment>
                            <comment id="13961804" author="enis" created="Mon, 7 Apr 2014 12:23:40 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; FYI. &lt;/p&gt;</comment>
                            <comment id="13962785" author="ram_krish" created="Tue, 8 Apr 2014 11:34:24 +0000"  >&lt;p&gt;Creates SimpleImmutableByteRange and SimpleImmutablePositionedByteRange and returns a read only version of the ByteRanges.&lt;br/&gt;
When we need an implementation for Offheap we may need to create such a class SimpleOffHeapImmutableBR or in case of DBB backed ByteRange we could call the DBB.asReadOnly() and return that new BB. Anyway that is for future usage.&lt;/p&gt;</comment>
                            <comment id="13962952" author="hadoopqa" created="Tue, 8 Apr 2014 13:22:14 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12639173/HBASE-10861_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12639173/HBASE-10861_2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12639173&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9221//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13963133" author="apurtell" created="Tue, 8 Apr 2014 16:19:37 +0000"  >&lt;p&gt;It would be helpful to point out here where there are immutable byte ranges required in the current code.&lt;/p&gt;</comment>
                            <comment id="13963161" author="ram_krish" created="Tue, 8 Apr 2014 16:48:25 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; contentBlock.deserializer
            .deserialize(contentBlock.serializedData.asReadOnlyBuffer());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This code comes in SingleSizeCache.java where we try to do getBlock(). The deserailzation logic creates a read only copy of the block cache data.  I think we need to have this behaviour to have read only byte ranges also.  What do you say?&lt;/p&gt;</comment>
                            <comment id="13963904" author="mcorgan" created="Wed, 9 Apr 2014 07:27:34 +0000"  >&lt;p&gt;This is just a style/naming thing, but I&apos;m wondering if ByteRange should be the read-only interface, and we extend it with MutableByteRange to give access to the methods that modify the underlying bytes.  I think the read-only interface would be more commonly used (so the short name is nice), and a piece of code that&apos;s granted access to the MutableByteRange has the longer name as a constant reminder that is has greater responsibility to not mess up.&lt;/p&gt;

&lt;p&gt;Also wonder if the class hierarchy could be constructed so you don&apos;t need these:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  @Override
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; PositionedByteRange put(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; index, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] val) {
+    &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReadOnlyByteRangeException();
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13963911" author="anoop.hbase" created="Wed, 9 Apr 2014 07:38:11 +0000"  >&lt;p&gt;So do we have a consensus regarding the BR backed by offheap ?  In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10771&quot; title=&quot;Primitive type put/get APIs in ByteRange &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10771&quot;&gt;&lt;del&gt;HBASE-10771&lt;/del&gt;&lt;/a&gt; we had some discussion regarding that. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mcorgan&quot; class=&quot;user-hover&quot; rel=&quot;mcorgan&quot;&gt;Matt Corgan&lt;/a&gt; mind taking a look at the patch on that Jira. &lt;/p&gt;</comment>
                            <comment id="13964507" author="stack" created="Wed, 9 Apr 2014 18:23:41 +0000"  >&lt;p&gt;+1 on Matt suggested naming.  Read-only is default.  You have to go out of your way to write.&lt;/p&gt;
</comment>
                            <comment id="13965070" author="mcorgan" created="Thu, 10 Apr 2014 06:55:03 +0000"  >&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10771&quot; title=&quot;Primitive type put/get APIs in ByteRange &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10771&quot;&gt;&lt;del&gt;HBASE-10771&lt;/del&gt;&lt;/a&gt; we had some discussion regarding that. Matt Corgan mind taking a look at the patch on that Jira.&lt;/p&gt;&lt;/blockquote&gt;sure, i left some comments over there.&lt;/p&gt;

&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;So do we have a consensus regarding the BR backed by offheap ?&lt;/p&gt;&lt;/blockquote&gt;i hate advocate too strongly for it since there are so many unknowns, but I do think we need some sort of wrapper object for byte[]&apos;s and ByteBuffers.  i just think it strange that java doesn&apos;t include a wrapper for byte[]&apos;s like String wraps char[].  The biggest difference from String is that we&apos;re talking about a mutable wrapper, but I think we could get a lot of mileage out of recycling the ByteRange wrapper in performance critical spots - just need to be careful.&lt;/p&gt;</comment>
                            <comment id="13980525" author="apurtell" created="Fri, 25 Apr 2014 00:09:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;The deserailzation logic creates a read only copy of the block cache data. I think we need to have this behaviour to have read only byte ranges also.  What do you say?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not getting why we just wouldn&apos;t scribble on the block cache data.&lt;/p&gt;

&lt;p&gt;Anyway sounds like the idea is to have read only ByteRanges by default and a MutableByteRange when not, and that would be good.&lt;/p&gt;</comment>
                            <comment id="13996317" author="ram_krish" created="Tue, 13 May 2014 12:25:32 +0000"  >&lt;p&gt;Currently the code is using a mutable version every where.  So should this be by default MutableBR and when needed the immutableBR?&lt;/p&gt;</comment>
                            <comment id="13996632" author="ram_krish" created="Tue, 13 May 2014 16:59:07 +0000"  >&lt;p&gt;Patch creates AbstractByteRange and AbstractBytePositionedByteRange.  Added SimpleByteRange, SimplePositionedByteRange(Immutable) and SimpleMutableByteRange, SimplePositionedMutableByteRange(Mutable).&lt;/p&gt;

&lt;p&gt;Later we can subclass AbstractByteRange  to created BB backed ByteRanges and here again if needed we could create mutable and immutable.  though currently only immutable would be enough in my opinion.&lt;/p&gt;</comment>
                            <comment id="14005618" author="ram_krish" created="Thu, 22 May 2014 05:07:50 +0000"  >&lt;p&gt;Ping??&lt;/p&gt;</comment>
                            <comment id="14018453" author="ram_krish" created="Thu, 5 Jun 2014 03:51:53 +0000"  >&lt;p&gt;An reviews here?&lt;/p&gt;</comment>
                            <comment id="14018458" author="hadoopqa" created="Thu, 5 Jun 2014 04:03:58 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12644649/HBASE-10861_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12644649/HBASE-10861_3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12644649&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 56 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9695//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9695//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14033661" author="ram_krish" created="Tue, 17 Jun 2014 11:11:04 +0000"  >&lt;p&gt;Latest patch after updates.&lt;/p&gt;</comment>
                            <comment id="14033752" author="hadoopqa" created="Tue, 17 Jun 2014 12:57:17 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12650779/HBASE-10861_4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12650779/HBASE-10861_4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12650779&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 59 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +    byte[] thisRow = new SimpleMutableByteRange(in.getRowArray(), in.getRowOffset(), in.getRowLength())&lt;br/&gt;
+        PositionedByteRange buf1 = new SimplePositionedMutableByteRange(a, 1, expectedLengths&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; + 1);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9783//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14034806" author="ram_krish" created="Wed, 18 Jun 2014 04:44:24 +0000"  >&lt;p&gt;Any reviews here. Would help to proceed with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10772&quot; title=&quot;Use ByteRanges instead of ByteBuffers in BlockCache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10772&quot;&gt;&lt;del&gt;HBASE-10772&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10773&quot; title=&quot;Make use of ByteRanges in HFileBlock instead of ByteBuffers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10773&quot;&gt;&lt;del&gt;HBASE-10773&lt;/del&gt;&lt;/a&gt; etc.&lt;/p&gt;</comment>
                            <comment id="14035965" author="stack" created="Wed, 18 Jun 2014 17:09:58 +0000"  >&lt;p&gt;lgtm &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14036942" author="ram_krish" created="Thu, 19 Jun 2014 04:28:08 +0000"  >&lt;p&gt;Thanks for the review Stack.  Appreciate it.  Will wait for one day before committing it.&lt;/p&gt;</comment>
                            <comment id="14040441" author="ram_krish" created="Mon, 23 Jun 2014 05:36:01 +0000"  >&lt;p&gt;Will commit it today.&lt;/p&gt;</comment>
                            <comment id="14040498" author="anoop.hbase" created="Mon, 23 Jun 2014 07:56:23 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!(thatObject &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; SimpleByteRange)) {
       &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
     }
-    SimpleByteRange that = (SimpleByteRange) thatObject;
+    SimpleMutableByteRange that = (SimpleMutableByteRange) thatObject;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Code is reachable?  If we have to compare bytes in SimpleByteRange and SimpleMutableByteRange and say equal or not, we need add instance of check for SimpleMutableByteRange also. Then better have similar way of equals check in SimpleMutableByteRange also.&lt;/p&gt;

&lt;p&gt;deepCopyToNewArray, deepCopyTo, deepCopySubRangeTo -&amp;gt; These you want to be exposed APIs? I think these are used within other exposed APIs. If so consider removing them from Interface and make them as protected in AbstractByteRange &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;public void clean() throws Exception -&amp;gt; What to do within this?&lt;/p&gt;
</comment>
                            <comment id="14040515" author="ram_krish" created="Mon, 23 Jun 2014 08:15:43 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    SimpleByteRange that = (SimpleByteRange) thatObject;
+    SimpleMutableByteRange that = (SimpleMutableByteRange) thatObject;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think this change is not needed. It should be SimpleByteRange only. The equals in SimpleMutableByteRange does check with SimpleMutableByteRange.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;These you want to be exposed APIs?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;These were already part of ByteRange interface and did not add them newly.  So I think for now we will continue it as it is?&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;public void clean() throws Exception -&amp;gt; What to do within this?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;For DBB allocated byte buffers, we are calling a clean method using reflection. So in case we use an offheap backed byte range then we may need to provide a way to clean it.  Hence added it.  But that is now added only for the AbstractPositionedBR.&lt;/p&gt;</comment>
                            <comment id="14043351" author="ram_krish" created="Wed, 25 Jun 2014 11:42:03 +0000"  >&lt;p&gt;Updated patch.  For now decided not to include the clean() method. It was useful for clearing the buffers allocated offheap through reflections when needed. Anyway as these are evolving interfaces we could always add new APIs when needed.&lt;/p&gt;</comment>
                            <comment id="14043353" author="ram_krish" created="Wed, 25 Jun 2014 11:42:32 +0000"  >&lt;p&gt;Going to commit this later today.&lt;/p&gt;</comment>
                            <comment id="14043849" author="stack" created="Wed, 25 Jun 2014 18:07:49 +0000"  >&lt;p&gt;I skimmed the patch.  lgtm&lt;/p&gt;</comment>
                            <comment id="14044462" author="ram_krish" created="Thu, 26 Jun 2014 08:26:48 +0000"  >&lt;p&gt;Committed to trunk. Thanks for the review Stack and Anoop.&lt;br/&gt;
I think this would help us in making changes to use BR instead of BB.&lt;br/&gt;
Let me make new patches for the corresponding JIRAs and take up further discussions there.&lt;/p&gt;</comment>
                            <comment id="14044588" author="hudson" created="Thu, 26 Jun 2014 11:51:13 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #5238 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5238/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5238/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10861&quot; title=&quot;Extend ByteRange to create Mutable and Immutable ByteRange&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10861&quot;&gt;&lt;del&gt;HBASE-10861&lt;/del&gt;&lt;/a&gt; Extend ByteRange to create Mutable and Immutable ByteRange (ramkrishna: rev 7f2f4e80c4d67decbe2a9c2a032b70295fe4376f)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/util/byterange/ByteRangeSet.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestOrderedBlobVar.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/test/java/org/apache/hadoop/hbase/codec/prefixtree/builder/TestTokenizer.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRangeUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/SimpleMutableByteRange.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/test/java/org/apache/hadoop/hbase/util/bytes/TestByteRange.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/test/java/org/apache/hadoop/hbase/codec/prefixtree/row/data/TestRowDataExerciseFInts.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestTerminatedWrapper.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestPositionedByteRange.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/AbstractByteRange.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestOrderedBytes.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestOrderedString.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestUnion2.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestSimpleMutableByteRange.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/types/TerminatedWrapper.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestSimplePositionedMutableByteRange.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestRawString.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityController.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/test/java/org/apache/hadoop/hbase/codec/prefixtree/row/data/TestRowDataUrls.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/test/java/org/apache/hadoop/hbase/codec/prefixtree/builder/TestTreeDepth.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/encode/PrefixTreeEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReadOnlyByteRangeException.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HeapMemStoreLAB.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/types/FixedLengthWrapper.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestFixedLengthWrapper.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/decode/row/RowNodeReader.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/types/OrderedNumeric.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/SimplePositionedMutableByteRange.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/SimplePositionedByteRange.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/SimpleByteRange.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/AbstractPositionedByteRange.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestOrderedBlob.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestSimpleByteRange.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/encode/tokenize/TokenizerNode.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestStruct.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestByteRangeWithKVSerialization.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/visibility/VisibilityLabelFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/types/TestStructNullExtension.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/test/java/org/apache/hadoop/hbase/codec/prefixtree/column/data/TestColumnDataRandom.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14330619" author="enis" created="Sat, 21 Feb 2015 23:29:52 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12701842">HBASE-10771</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12637379" name="HBASE-10861.patch" size="3368" author="ram_krish" created="Fri, 28 Mar 2014 12:18:36 +0000"/>
                            <attachment id="12639173" name="HBASE-10861_2.patch" size="14665" author="ram_krish" created="Tue, 8 Apr 2014 11:34:24 +0000"/>
                            <attachment id="12644649" name="HBASE-10861_3.patch" size="114741" author="ram_krish" created="Tue, 13 May 2014 16:59:07 +0000"/>
                            <attachment id="12650779" name="HBASE-10861_4.patch" size="134036" author="ram_krish" created="Tue, 17 Jun 2014 11:10:27 +0000"/>
                            <attachment id="12651989" name="HBASE-10861_6.patch" size="133726" author="ram_krish" created="Mon, 23 Jun 2014 16:35:36 +0000"/>
                            <attachment id="12652393" name="HBASE-10861_7.patch" size="133347" author="ram_krish" created="Wed, 25 Jun 2014 11:42:03 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 28 Mar 2014 15:20:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>382559</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1twpb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>382827</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>