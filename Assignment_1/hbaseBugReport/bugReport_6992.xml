<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:41:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6992/HBASE-6992.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6992] Coprocessors semantic issues: post async operations, helper methods, ...</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6992</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Discussion ticket around coprocessor pre/post semantic.&lt;/p&gt;

&lt;p&gt;For each rpc in HMaster we have a pre/post operation that allows a coprocessor&lt;br/&gt;
to execute some code before and after the operation&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;preOperation()&lt;/li&gt;
	&lt;li&gt;my operation&lt;/li&gt;
	&lt;li&gt;postOperation()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is used for example by the AccessController to verify if the user can execute or not the operation.&lt;br/&gt;
Everything is fine, unless the master operation is asynchronous (like create/delete table)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;preOperation()&lt;/li&gt;
	&lt;li&gt;executor.submit(new OperationHandler())&lt;/li&gt;
	&lt;li&gt;postOperation()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The pre operation is still fine, since is executed before the operation and need to throw exceptions to the client in case of failures...&lt;br/&gt;
The post operation, instead, is no longer post... is just post submit. And if someone subscribe to postCreateTable() the notification can arrive before the table creation.&lt;/p&gt;

&lt;p&gt;To &quot;solve&quot; this problem, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5584&quot; title=&quot;Coprocessor hooks can be called in the respective handlers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5584&quot;&gt;&lt;del&gt;HBASE-5584&lt;/del&gt;&lt;/a&gt; added pre/post handlers and now the situation looks like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
client request              client response
      |                           |
      +------+-- submit op --+----+---         (HMaster)
           pre op         post op

(executor)                     +---- handler ----+
                           pre handler       post handler
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we&apos;ve two types of pre/post operation and the semantical correct are preOperation() and postOperationHandler()&lt;br/&gt;
since the preOperation() needs to reply to the client (e.g AccessController NotAllowException) and the postOperatioHandler() is really post operation.&lt;br/&gt;
postOperation() is not post... and preOperationHandler() can&apos;t communicate with the client.&lt;/p&gt;

&lt;p&gt;The AccessController coprocessor uses the postOperation() that is fine for the sync operation like addColumn(), deleteColumn()... but in case of failure of async operations like deleteTable() we&apos;ve removed rights that we still need.&lt;/p&gt;

&lt;p&gt;I think that we should get back just to the single pre/post operation but with the right semantic...&lt;/p&gt;

&lt;p&gt;Other then the &quot;when is executed&quot; problem, we&apos;ve also functions that can be described with other simpler functions&lt;br/&gt;
for example: modifyTable() is just a helper to avoid multiple addColumn()/deleteColumn() calls&lt;br/&gt;
but the problem here is that modifyTable() has its own pre/post operation() and if I&apos;ve implemented the pre/post addColumn I don&apos;t get notified when I call modifyTable(). This is another problem in the access controller coprocessor&lt;/p&gt;

&lt;p&gt;In this case I&apos;m not sure what the best solution can be... but in this way, adding new helper methods means breaking the coprocessors, because they don&apos;t get notified even if something is changed...&lt;/p&gt;

&lt;p&gt;Any idea, thoughts, ...?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12611713">HBASE-6992</key>
            <summary>Coprocessors semantic issues: post async operations, helper methods, ...</summary>
                <type id="13" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/genericissue.png">Brainstorming</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="mbertozzi">Matteo Bertozzi</assignee>
                                    <reporter username="mbertozzi">Matteo Bertozzi</reporter>
                        <labels>
                    </labels>
                <created>Sat, 13 Oct 2012 20:18:56 +0000</created>
                <updated>Wed, 5 Oct 2016 18:17:00 +0000</updated>
                                            <version>0.92.2</version>
                    <version>0.94.2</version>
                    <version>0.95.2</version>
                                    <fixVersion>2.0.0</fixVersion>
                                    <component>Coprocessors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13475788" author="ram_krish" created="Sun, 14 Oct 2012 07:51:57 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mbertozzi&quot; class=&quot;user-hover&quot; rel=&quot;mbertozzi&quot;&gt;Matteo Bertozzi&lt;/a&gt;&lt;br/&gt;
As you noticed the reason for introducing the pre/postOperationHandlers as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5584&quot; title=&quot;Coprocessor hooks can be called in the respective handlers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5584&quot;&gt;&lt;del&gt;HBASE-5584&lt;/del&gt;&lt;/a&gt; is first of all to have control on the async operations.&lt;br/&gt;
In our use case the create/delete coprocessors where used to create/delete another table with some modified HTD.  &lt;br/&gt;
Generally any async operations we need to wait for the successful operation and that too when we have coprocessors we need to wait for the operation to be done on the coprocessor hook tii.&lt;br/&gt;
When we tried to see the exisiting impl the reason for having pre/Post operation hook for async operations and not waiting for the operation to get completed is to not to block the RPC threads that does the operation.&lt;br/&gt;
So we thought of having other hooks that is sync with the handlers so that the RPC threads need not wait. &lt;br/&gt;
The similar case is applicable for enable/disable table also.  The new hooks now gives us the advantage of being sure that the postOpreationHandler hook will be exeucted only on success of the main operation.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;but in case of failure of async operations like deleteTable() we&apos;ve removed rights that we still need.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;But the above problem should be a problem even without the new hooks right?  &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;for example: modifyTable() is just a helper to avoid multiple addColumn()/deleteColumn() calls&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;but the problem here is that modifyTable() has its own pre/post operation()&lt;br/&gt;
This is again a general problem right?&lt;/p&gt;</comment>
                            <comment id="13481666" author="apurtell" created="Mon, 22 Oct 2012 19:10:44 +0000"  >&lt;p&gt;The basic problem is we need pre/post on the RPC path for managing interactions with the client, and pre/post on the background async processing. There is no single semantic here. Perhaps the naming can be improved, though, to make this clearer or less confusing. Suggestions?&lt;/p&gt;</comment>
                            <comment id="15243661" author="syuanjiang" created="Fri, 15 Apr 2016 21:10:22 +0000"  >&lt;p&gt;Let us revive the discussion - in terms of naming convention, I propose that we change post RPC op to postXXXAsync for any async operation (we can keep the current postXXX for sync or rename it as postXXXSync).  note: XXX is the RPC operation name such as CreateTable.  For the real processing, we change the name from preXXXHandler/postXXXHandler to preXXXAction and postXXXSuccessAction; and if we want, add postXXXFailureAction.  &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mbertozzi&quot; class=&quot;user-hover&quot; rel=&quot;mbertozzi&quot;&gt;Matteo Bertozzi&lt;/a&gt; said he was not good at naming, I am either (or worse).  More suggestion is welcomed. &lt;/p&gt;</comment>
                            <comment id="15549546" author="stack" created="Wed, 5 Oct 2016 18:17:00 +0000"  >&lt;p&gt;Boosting to critical for 2.0.0 so gets attention&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 14 Oct 2012 07:51:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>248474</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i09vf3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>55531</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>