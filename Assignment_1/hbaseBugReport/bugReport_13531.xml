<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:44:13 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13531/HBASE-13531.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13531] Flakey failures of TestAcidGuarantees#testMobScanAtomicity</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13531</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;After the merge of master from 4/18/15 with hbase-11339 branch, we encounter some atomicity violations.  We want to fix before calling merge to trunk.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12823149">HBASE-13531</key>
            <summary>Flakey failures of TestAcidGuarantees#testMobScanAtomicity</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12721032">HBASE-11339</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jingcheng.du@intel.com">Jingcheng Du</assignee>
                                    <reporter username="jmhsieh">Jonathan Hsieh</reporter>
                        <labels>
                    </labels>
                <created>Wed, 22 Apr 2015 19:45:39 +0000</created>
                <updated>Wed, 22 Jul 2015 22:48:51 +0000</updated>
                            <resolved>Tue, 19 May 2015 21:14:26 +0000</resolved>
                                    <version>hbase-11339</version>
                                    <fixVersion>hbase-11339</fixVersion>
                                    <component>regionserver</component>
                    <component>Scanners</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="14507755" author="jmhsieh" created="Wed, 22 Apr 2015 19:47:24 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jingchengdu&quot; class=&quot;user-hover&quot; rel=&quot;jingchengdu&quot;&gt;JingchengDu&lt;/a&gt; ran this it and got these results. (from here&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;)&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Each single case can pass if running them separately.&lt;/li&gt;
	&lt;li&gt;When I tried to run all the cases in TestAcidGurantees, the exception was thrown in the last case by the running order which was caused by &quot;IOException: Too many open files&quot;.&lt;/li&gt;
	&lt;li&gt;I commented one method (the number of running cases was decreased by 1. Totally 6 cases, I just ran 5 in this step), all the methods could pass.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11339?focusedCommentId=14506735&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14506735&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-11339?focusedCommentId=14506735&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14506735&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14507763" author="jmhsieh" created="Wed, 22 Apr 2015 19:53:52 +0000"  >&lt;p&gt;Here&apos;s the error I&apos;ve encountered:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2015-04-21 17:31:29,336 DEBUG [MemStoreFlusher.1] regionserver.FlushLargeStoresPolicy(100): Since none of the CFs were above the size, flushing all.
2015-04-21 17:31:29,336 INFO  [MemStoreFlusher.1] regionserver.HRegion(2089): Started memstore flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; TestAcidGuarantees,,1429662672923.ee8627968d4e49a465c60be6004b0e7d., current region memstore size 128.91 KB, and 3/3 column families&apos; memstores are being flushed.
2015-04-21 17:31:29,336 DEBUG [B.defaultRpcServer.handler=2,queue=0,port=38585] regionserver.HRegion(3715): Flush requested on TestAcidGuarantees,,1429662672923.ee8627968d4e49a465c60be6004b0e7d.
2015-04-21 17:31:29,353 ERROR [&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-5867] hbase.MultithreadedTestUtil$TestContext(84): Failed!
java.lang.RuntimeException: Failed after 3911!Expected=\xAFZ\x01{U\x97\x83\xAB\x83\x1CGot:
test_row_2/A:col0/1429662689053/Put/vlen=10/seqid=0 val= \xAFZ\x01{U\x97\x83\xAB\x83\x1C
test_row_2/A:col1/1429662689053/Put/vlen=10/seqid=0 val= \xAFZ\x01{U\x97\x83\xAB\x83\x1C
test_row_2/A:col10/1429662689053/Put/vlen=10/seqid=0 val= \xAFZ\x01{U\x97\x83\xAB\x83\x1C
...
test_row_2/A:col9/1429662689053/Put/vlen=10/seqid=0 val= \xAFZ\x01{U\x97\x83\xAB\x83\x1C
test_row_2/B:col0/1429662689053/Put/vlen=10/seqid=0 val= \xE4w\xE5\x00\xEA\x02\xBD\x87\xD4r
test_row_2/B:col1/1429662689053/Put/vlen=10/seqid=0 val= \xE4w\xE5\x00\xEA\x02\xBD\x87\xD4r
...
test_row_2/B:col9/1429662689053/Put/vlen=10/seqid=0 val= \xE4w\xE5\x00\xEA\x02\xBD\x87\xD4r
test_row_2/C:col0/1429662689053/Put/vlen=10/seqid=0 val= \xE4w\xE5\x00\xEA\x02\xBD\x87\xD4r
test_row_2/C:col1/1429662689053/Put/vlen=10/seqid=0 val= \xE4w\xE5\x00\xEA\x02\xBD\x87\xD4r
..
test_row_2/C:col9/1429662689053/Put/vlen=10/seqid=0 val= \xE4w\xE5\x00\xEA\x02\xBD\x87\xD4r

	at org.apache.hadoop.hbase.TestAcidGuarantees$AtomicScanReader.gotFailure(TestAcidGuarantees.java:260)
	at org.apache.hadoop.hbase.TestAcidGuarantees$AtomicScanReader.doAnAction(TestAcidGuarantees.java:239)
	at org.apache.hadoop.hbase.MultithreadedTestUtil$RepeatingTestThread.doWork(MultithreadedTestUtil.java:147)
	at org.apache.hadoop.hbase.MultithreadedTestUtil$TestThread.run(MultithreadedTestUtil.java:123)
2015-04-21 17:31:29,363 INFO  [main] hbase.HBaseTestingUtility(1076): Shutting down minicluster
2015-04-21 17:31:29,363 INFO  [main] client.ConnectionImplementation(1765): Closing master protocol: MasterService
... (the same stack trace/error message is repeated a few times)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14507805" author="jmhsieh" created="Wed, 22 Apr 2015 20:17:08 +0000"  >&lt;p&gt;hm.. as jingcheng mentioned, I ran only testMobScanAtomicity without the other tests and it has passed 30 times in a row without failure locally.&lt;/p&gt;</comment>
                            <comment id="14507892" author="jmhsieh" created="Wed, 22 Apr 2015 21:04:06 +0000"  >&lt;p&gt;but with the whole suite of TestAcidGuarantees tests it fails with the error similar to what I pointed out.  I didn&apos;t see the &quot;Too many open files exception&quot; &amp;#8211; investigating.&lt;/p&gt;</comment>
                            <comment id="14520286" author="jmhsieh" created="Wed, 29 Apr 2015 21:29:34 +0000"  >&lt;p&gt;This is a legit bug &amp;#8211; it shows up on IntegrationTestAcidGuarantees.  I did about 30 15 minute runs and gotten two runs that ran into acid violations (and 7 that failed due to RegionTooBusyException)&lt;/p&gt;</comment>
                            <comment id="14520491" author="jmhsieh" created="Wed, 29 Apr 2015 23:16:36 +0000"  >&lt;p&gt;This is a problem with flushes conflicting with the acid guarantees (similar to the problem one we had way back). In the two acid violation cases we have a flush procedure running causing the acid in the time frame where the acid violation occurs.&lt;/p&gt;

&lt;p&gt;From the job&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2015-04-26 21:35:40,806 ERROR [&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-57] hbase.MultithreadedTestUtil: Failed!
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From the Master.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2015-04-26 21:35:40,740 INFO  [B.defaultRpcServer.handler=26,queue=2,port=16000] master.MasterRpcServices: Client=jon/&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; procedure request &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;: flush-table-proc
2015-04-26 21:35:40,748 DEBUG [B.defaultRpcServer.handler=26,queue=2,port=16000] procedure.ProcedureCoordinator: Procedure TestAcidGuarantees was in running list but was completed.  Accepting &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; attempt.
2015-04-26 21:35:40,749 INFO  [(a1210.halxg.cloudera.com,16000,1429737786128)-proc-coordinator-pool4-thread-1] procedure.Procedure: Starting procedure &apos;TestAcidGuarantees&apos;
...
2015-04-26 21:35:40,827 INFO  [(a1210.halxg.cloudera.com,16000,1429737786128)-proc-coordinator-pool4-thread-1] procedure.Procedure: Procedure &apos;TestAcidGuarantees&apos; execution completed
2015-04-26 21:35:40,827 DEBUG [(a1210.halxg.cloudera.com,16000,1429737786128)-proc-coordinator-pool4-thread-1] procedure.Procedure: Running finish phase.
2015-04-26 21:35:40,827 DEBUG [(a1210.halxg.cloudera.com,16000,1429737786128)-proc-coordinator-pool4-thread-1] procedure.Procedure: Finished coordinator procedure - removing self from list of running procedures
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14520587" author="jmhsieh" created="Thu, 30 Apr 2015 00:23:38 +0000"  >&lt;p&gt;Another issue  &amp;#8211; zk connections are likely being leaked by the master. (a1210 is the master box, proc 16870 was the HQuoromPeer)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[jon@a1210 ~]$ sudo lsof | grep -e 16870 | grep TCP  | cut -c 80- | cut -c -65 | sort | uniq -c 
    291  TCP a1210.halxg.cloudera.com:eforward-&amp;gt;a1210.halxg.cloudera.com:
      3  TCP a1210.halxg.cloudera.com:eforward-&amp;gt;a1211.halxg.cloudera.com:
      3  TCP a1210.halxg.cloudera.com:eforward-&amp;gt;a1212.halxg.cloudera.com:
      3  TCP a1210.halxg.cloudera.com:eforward-&amp;gt;a1214.halxg.cloudera.com:
      3  TCP a1210.halxg.cloudera.com:eforward-&amp;gt;a1215.halxg.cloudera.com:
      1  TCP *:eforward (LISTEN)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14520592" author="jmhsieh" created="Thu, 30 Apr 2015 00:27:42 +0000"  >&lt;p&gt;and it looks like the master process has 291 threads that are sending on to a1210.x.x.x:2181 &amp;#8211; most of which look like this&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-quote&quot;&gt;&quot;MobFileCompactor-pool10-t1-SendThread(a1210.halxg.cloudera.com:2181)&quot;&lt;/span&gt; daemon prio=10 tid=0x00000000025f1000 nid=0x481c runnable [0x00007f03d0793000]
&lt;span class=&quot;code-quote&quot;&gt;&quot;MobFileCompactor-pool10-t1-SendThread(a1210.halxg.cloudera.com:2181)&quot;&lt;/span&gt; daemon prio=10 tid=0x0000000002679000 nid=0x480e runnable [0x00007f03d46d2000]
&lt;span class=&quot;code-quote&quot;&gt;&quot;MobFileCompactor-pool10-t1-SendThread(a1210.halxg.cloudera.com:2181)&quot;&lt;/span&gt; daemon prio=10 tid=0x0000000002adb000 nid=0x4800 runnable [0x00007f03d8a2b000]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="14521667" author="jingcheng.du@intel.com" created="Thu, 30 Apr 2015 15:39:06 +0000"  >&lt;p&gt;Hi Jon, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmhsieh&quot; class=&quot;user-hover&quot; rel=&quot;jmhsieh&quot;&gt;Jonathan Hsieh&lt;/a&gt;.&lt;br/&gt;
I pulled the latest code, and re-ran the test suite, and I could still encounter the &quot;Too many open files&quot; issues. After I enlarged the allowed number of open files in Linux, the test suite had passed.&lt;br/&gt;
In the shutdown of each mini cluster, the HFile readers are supposed to be closed, I don&apos;t know why there are still so many opened files.&lt;br/&gt;
I ran the test suite for several times, all the tests were passed.&lt;/p&gt;</comment>
                            <comment id="14521687" author="jmhsieh" created="Thu, 30 Apr 2015 15:47:12 +0000"  >&lt;p&gt;Let&apos;s hunt this down.  I&apos;m currently running tests to see if this affects all flushes on master or if this is just in the mob related flushes.  If you are seeing excessive hfile readers, then let&apos;s try to get to the bottom of that.&lt;/p&gt;

&lt;p&gt;The ZK issue is on a long running cluster likely related to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13437&quot; title=&quot;ThriftServer leaks ZooKeeper connections&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13437&quot;&gt;&lt;del&gt;HBASE-13437&lt;/del&gt;&lt;/a&gt;.  I&apos;ll push the merge into the hbase-11339 branch today and then redeploy on the testing cluster.&lt;/p&gt;</comment>
                            <comment id="14521721" author="jingcheng.du@intel.com" created="Thu, 30 Apr 2015 16:04:22 +0000"  >&lt;p&gt;Hi Jon, the excessive hfile readers are NOT supposed to be related with mob.&lt;br/&gt;
I set the useMob as false in the mob-related cases in TestAcidGuarantees, I still encounter the issues of &quot;Too many opened files&quot;.  &lt;/p&gt;</comment>
                            <comment id="14521866" author="jingcheng.du@intel.com" created="Thu, 30 Apr 2015 17:09:44 +0000"  >&lt;p&gt;It looks like the zookeeper (table lock) used by MobFileCompactor is not closed.&lt;br/&gt;
But the zookeeper used by MobFileCompactor comes from HMaster, it keeps connecting util the HMaster is shut down.&lt;br/&gt;
It&apos;s weird that the thread name is MobFileCompactor-pool10-t1-SendThread, it means the SendThread or ClientCnxn of Zookeeper is instantiated in MobFileCompactior, but it is supposed to be instantiated in HMaster.&lt;/p&gt;</comment>
                            <comment id="14522541" author="jmhsieh" created="Fri, 1 May 2015 00:21:35 +0000"  >&lt;p&gt;With this patch applied (thus never using the mob feature in TestAcidGuarantees) I had 40 clean runs in a row.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java
index dbb6156..64320ab 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java
@@ -392,7 +392,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class TestAcidGuarantees &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Tool {
     util.startMiniCluster(1);
     &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
       &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; systemTest = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
-      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; useMob = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
+      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; useMob = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;; &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
&lt;/span&gt;       runTestAtomicity(20000, 5, 5, 0, 3, systemTest, useMob);
     } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
       util.shutdownMiniCluster();
@@ -404,7 +404,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class TestAcidGuarantees &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Tool {
     util.startMiniCluster(1);
     &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
       &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; systemTest = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
-      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; useMob = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
+      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; useMob = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;; &lt;span class=&quot;code-comment&quot;&gt;//  &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
&lt;/span&gt;       runTestAtomicity(20000, 5, 0, 5, 3, systemTest, useMob);
     } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
       util.shutdownMiniCluster();
@@ -416,7 +416,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class TestAcidGuarantees &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Tool {
     util.startMiniCluster(1);
     &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
       &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; systemTest = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
-      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; useMob = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
+      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; useMob = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;; &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
&lt;/span&gt;       runTestAtomicity(20000, 5, 2, 2, 3, systemTest, useMob);
     } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
       util.shutdownMiniCluster();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, running the IT test version without useMob=false does not encounter the acid violation.   I&apos;m pretty convinced it is a legit bug and due to the mob path.&lt;/p&gt;</comment>
                            <comment id="14522970" author="jingcheng.du@intel.com" created="Fri, 1 May 2015 09:11:37 +0000"  >&lt;p&gt;Hi Jon.&lt;br/&gt;
I ran this TestAcidGuarantees for 20 times, and didn&apos;t encounter any issues, and ran the IT with useMob=true, and didn&apos;t encounter the issue either.&lt;br/&gt;
However, I have some thoughts on this issue.&lt;br/&gt;
Now HBase has a new flush policy, each region flush might only flush part of stores. For all cells (not only for mob), the following case is possible?&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;One put of row0 has two cells row0,cf0:q0,ts0=value0 and row0,cf1:q0,ts0=value0 into memstore.&lt;/li&gt;
	&lt;li&gt;Scanner is opened.&lt;/li&gt;
	&lt;li&gt;Now the memstore is flushed, only cf1 is flushed.&lt;/li&gt;
	&lt;li&gt;Now the cell row0:cf1:q0:ts0 is in store file, row0:cf0:q0:ts0 is still in memstore.&lt;/li&gt;
	&lt;li&gt;Another put of row0 has two cells row0:cf0:q0:ts0=value1 and row0:cf1:q0:ts0=value1 into memstore.&lt;/li&gt;
	&lt;li&gt;Now what can scanner see? The row0:cf0:q0:ts0=value0 had been replaced by row0:cf0:q0:ts0=value1 in memstore, but the scanner can not read it because of the readPt, but row0:cf1:q0:ts0=value0 is still visible. The ACID is violated?&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Is this possible?&lt;/p&gt;</comment>
                            <comment id="14522972" author="jingcheng.du@intel.com" created="Fri, 1 May 2015 09:13:16 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoopsamjohn&quot; class=&quot;user-hover&quot; rel=&quot;anoopsamjohn&quot;&gt;Anoop Sam John&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;, you guys have thoughts on this issue? Please advise if any. Thanks a lot.&lt;/p&gt;</comment>
                            <comment id="14522989" author="jingcheng.du@intel.com" created="Fri, 1 May 2015 09:34:57 +0000"  >&lt;p&gt;One more thing, we use the readPt when reading ref cells from the store files, but the readPt is not used when reading cells from mob files. This  could be one suspicious point. But I though about this, it was not supposed to break the acid.&lt;/p&gt;</comment>
                            <comment id="14523121" author="anoop.hbase" created="Fri, 1 May 2015 12:02:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;One more thing, we use the readPt when reading ref cells from the store files, but the readPt is not used when reading cells from mob files. This could be one suspicious point. But I though about this, it was not supposed to break the acid&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That should not be an ACID violation point as we decide the cells to be returned by scanning the ref cf cells only.  MOB CF is scanned to just retrieve the value. So this should not create an ACID issue..&lt;/p&gt;</comment>
                            <comment id="14523234" author="jingcheng.du@intel.com" created="Fri, 1 May 2015 14:14:07 +0000"  >&lt;p&gt;By the way, I ran the unit test and IT against the code in hbase-11339.&lt;/p&gt;</comment>
                            <comment id="14523235" author="jingcheng.du@intel.com" created="Fri, 1 May 2015 14:14:14 +0000"  >&lt;p&gt;By the way, I ran the unit test and IT against the code in hbase-11339.&lt;/p&gt;</comment>
                            <comment id="14523256" author="jon@cloudera.com" created="Fri, 1 May 2015 14:32:40 +0000"  >&lt;p&gt;I&apos;m working against the proposed merge from 4/18 (I need to clean up&lt;br/&gt;
and push it to the 11339 branch).  Maybe we are on different branches?&lt;/p&gt;




&lt;p&gt;&amp;#8211; &lt;br/&gt;
// Jonathan Hsieh (shay)&lt;br/&gt;
// HBase Tech Lead, Software Engineer, Cloudera&lt;br/&gt;
// jon@cloudera.com // @jmhsieh&lt;/p&gt;</comment>
                            <comment id="14523328" author="jmhsieh" created="Fri, 1 May 2015 15:28:54 +0000"  >&lt;p&gt;all the testing I&apos;ve been doing recently has been against the now pushed 0e20bbf6a3 hash (the branch after merging on 4/15/15).  I&apos;ll do another merge today.&lt;/p&gt;
</comment>
                            <comment id="14523483" author="jmhsieh" created="Fri, 1 May 2015 17:25:21 +0000"  >&lt;p&gt;To elaborate on Anoop&apos;s comment, I don&apos;t think the mob hfiles are involved &amp;#8211; the refs in the normal cells are only written once and only ever point to one mob hfile.  This would imply maybe a acid-violating race at the CF level.  &lt;/p&gt;

&lt;p&gt;Maybe something with when the cf&apos;s flushing and scanners are being created?  &lt;/p&gt;

&lt;p&gt;Cells with the same row/cf/cq/ts should have a last written wins policy.  I&apos;m a little fuzzy on how this is guaranteed in the implementation.  This is relevant because in the particular example in the early comment, the conflicting cf data both have the same ts.&lt;/p&gt;</comment>
                            <comment id="14523486" author="jmhsieh" created="Fri, 1 May 2015 17:26:15 +0000"  >&lt;p&gt;To elaborate on Anoop&apos;s comment, I don&apos;t think the mob hfiles are involved &amp;#8211; the refs in the normal cells are only written once and only ever point to one mob hfile.  This would imply maybe a acid-violating race at the CF level.  &lt;/p&gt;

&lt;p&gt;Maybe something with when the cf&apos;s flushing and scanners are being created?  &lt;/p&gt;

&lt;p&gt;Cells with the same row/cf/cq/ts should have a last written wins policy.  I&apos;m a little fuzzy on how this is guaranteed in the implementation.  This is relevant because in the particular example in the early comment, the conflicting cf data both have the same ts.&lt;/p&gt;</comment>
                            <comment id="14524590" author="jingcheng.du@intel.com" created="Sat, 2 May 2015 04:23:38 +0000"  >&lt;p&gt;Hi Jon, I saw the latest merge now.&lt;br/&gt;
I reviewed the attached patch last week, and found one commit was missed. Did you add it in this merge?&lt;/p&gt;</comment>
                            <comment id="14524876" author="jingcheng.du@intel.com" created="Sat, 2 May 2015 04:47:11 +0000"  >&lt;p&gt;Hi Jon, in the flushing, the mob file and store file are written at the same time, and the the commit sequence is firstly mob file, and store file after that. After the store file is committed, both mob file and store file are visible.&lt;br/&gt;
So I think this doesn&apos;t bring violation.&lt;br/&gt;
Speaking of race between CF, I raise the assumption, the memstore is a set which can guarantee there are not rows with the same key in the memstore at the same, I think that can break the violation, but not only for mob, but for all. Is that possible.&lt;/p&gt;</comment>
                            <comment id="14524983" author="jingcheng.du@intel.com" created="Sat, 2 May 2015 05:04:37 +0000"  >&lt;p&gt;Merged the latest code and saw that commit was included. Thanks.&lt;/p&gt;</comment>
                            <comment id="14525045" author="jingcheng.du@intel.com" created="Sat, 2 May 2015 05:17:15 +0000"  >&lt;p&gt;Hi Jon, I notice that changes in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12413&quot; title=&quot;Mismatch in the equals and hashcode methods of KeyValue&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12413&quot;&gt;&lt;del&gt;HBASE-12413&lt;/del&gt;&lt;/a&gt; is not included in this branch?&lt;br/&gt;
In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12413&quot; title=&quot;Mismatch in the equals and hashcode methods of KeyValue&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12413&quot;&gt;&lt;del&gt;HBASE-12413&lt;/del&gt;&lt;/a&gt;, we fixed the violation between hashCode and equals in KeyValue.&lt;br/&gt;
Before this is fixed, I think the ignoring the readPt in mob file can bring the violation to the scan because we allow different cells with the same key exist at the same time in memstore.&lt;/p&gt;</comment>
                            <comment id="14525047" author="jingcheng.du@intel.com" created="Sat, 2 May 2015 05:18:38 +0000"  >&lt;p&gt;Sorry Jon, re-check the code, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12413&quot; title=&quot;Mismatch in the equals and hashcode methods of KeyValue&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12413&quot;&gt;&lt;del&gt;HBASE-12413&lt;/del&gt;&lt;/a&gt; had existed in hbase-11339. This comment can be ignored. Thanks.&lt;/p&gt;</comment>
                            <comment id="14525048" author="jingcheng.du@intel.com" created="Sat, 2 May 2015 05:18:50 +0000"  >&lt;p&gt;Sorry Jon, re-check the code, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12413&quot; title=&quot;Mismatch in the equals and hashcode methods of KeyValue&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12413&quot;&gt;&lt;del&gt;HBASE-12413&lt;/del&gt;&lt;/a&gt; had existed in hbase-11339. This comment can be ignored. Thanks.&lt;/p&gt;</comment>
                            <comment id="14525436" author="jon@cloudera.com" created="Sat, 2 May 2015 19:57:40 +0000"  >&lt;p&gt;I&apos;ve been running the pre merge version quite a bit and haven&apos;t been about&lt;br/&gt;
to get it to fail. this means it maybe change between the mid April merge&lt;br/&gt;
and the previous one.   On my dev branch I have an earlier merge point in early&lt;br/&gt;
April and will loop those tests this weekend.&lt;/p&gt;




&lt;p&gt;&amp;#8211; &lt;br/&gt;
// Jonathan Hsieh (shay)&lt;br/&gt;
// HBase Tech Lead, Software Engineer, Cloudera&lt;br/&gt;
// jon@cloudera.com // @jmhsieh&lt;/p&gt;</comment>
                            <comment id="14526233" author="ram_krish" created="Mon, 4 May 2015 04:40:36 +0000"  >&lt;blockquote&gt;&lt;p&gt;Cells with the same row/cf/cq/ts should have a last written wins policy&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think while retrieving we don&apos;t have this guarentee.  When the same row/cf/cq/ts is written in the same file I think only the older one is retrieved because our scan here is going to be sequential.  And while flushing we don&apos;t check for duplicates I believe. We just write what is in memstore.&lt;/p&gt;</comment>
                            <comment id="14526240" author="jingcheng.du@intel.com" created="Mon, 4 May 2015 04:57:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;And while flushing we don&apos;t check for duplicates I believe&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In memstore, it is a CellSkipListSet, the duplicated cells cannot exist at the same time in the memstore. So in flushing, there&apos;s no need to check for the duplication I think.&lt;/p&gt;</comment>
                            <comment id="14530786" author="jingcheng.du@intel.com" created="Wed, 6 May 2015 16:02:35 +0000"  >&lt;p&gt;Hi Jon, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmhsieh&quot; class=&quot;user-hover&quot; rel=&quot;jmhsieh&quot;&gt;Jonathan Hsieh&lt;/a&gt;.&lt;br/&gt;
In the CellSkipListSet, the sequenceId is counted in comparing, so different cells with the same row key but different seqId can stay in the same CellSkipListSet.&lt;br/&gt;
So I think the violation is caused by the missed readPt when we read cells from MOB files.&lt;br/&gt;
Here is the possible scenario, all the cell has the same row key.&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;A.cell0 is added, its seqId is 0.&lt;/li&gt;
	&lt;li&gt;A scanner s0 is opend, its readPt is 0, but now start to read this cell0.&lt;/li&gt;
	&lt;li&gt;Now another cell1 is added, its seqId is 1.&lt;/li&gt;
	&lt;li&gt;Now memstore is flushed, these two cells are in the same mob file.&lt;/li&gt;
	&lt;li&gt;The s0 starts to read cell0, and find the mob file.&lt;/li&gt;
	&lt;li&gt;Seek the row key in the mob file, we don&apos;t use the readPt, so the cell1 is found.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I think this can happen. Please advise, Jon.&lt;br/&gt;
I will look into the code and fix the readPt in mob file.&lt;/p&gt;</comment>
                            <comment id="14530827" author="jmhsieh" created="Wed, 6 May 2015 16:30:37 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jingchengdu&quot; class=&quot;user-hover&quot; rel=&quot;jingchengdu&quot;&gt;JingchengDu&lt;/a&gt;,  it would be really good to craft a unit test that triggers this.  It makes it easy to verify that that is the problem and the eventual fix fixes the problem.&lt;/p&gt;</comment>
                            <comment id="14531124" author="jingcheng.du@intel.com" created="Wed, 6 May 2015 18:28:51 +0000"  >&lt;p&gt;Sure, will do that.&lt;/p&gt;</comment>
                            <comment id="14532949" author="jmhsieh" created="Thu, 7 May 2015 16:28:15 +0000"  >&lt;p&gt;I had a hunch that the per-column-flush may be responsible for this acid violation.  I tested disabling the feature and still ran into the acid violation on the mob scan test of the TestAcidGuarantees (failed on execution # 20 or so).&lt;/p&gt;</comment>
                            <comment id="14543440" author="jingcheng.du@intel.com" created="Thu, 14 May 2015 09:51:49 +0000"  >&lt;p&gt;Hi Jon, I&apos;ve created a unit test for this scenario, and it was proven that it broke ACID in this case. I&apos;ll post the patch ASAP. Thanks.&lt;/p&gt;</comment>
                            <comment id="14543472" author="jingcheng.du@intel.com" created="Thu, 14 May 2015 10:39:02 +0000"  >&lt;p&gt;Hi Jon &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmhsieh&quot; class=&quot;user-hover&quot; rel=&quot;jmhsieh&quot;&gt;Jonathan Hsieh&lt;/a&gt;. The patch is uploaded, the newly added unit test had passed. Please review and comment. Thanks a lot.&lt;/p&gt;</comment>
                            <comment id="14543667" author="anoop.hbase" created="Thu, 14 May 2015 13:29:37 +0000"  >&lt;p&gt;Ya we can apply the readPnt check on MOB file reader also.&lt;br/&gt;
But one doubt&lt;br/&gt;
We will read cells from MOB files only on demand right. First we read from ref cf files and there any way the readPoint check is there. Only if it passes, we will call get cell on MOB. &lt;br/&gt;
Or the case is like with same key (rk,cf,q,ts,type) we have 2 cells and old cell in ref cf got cleared by readPoint check but we read the new cell from MOB file?&lt;/p&gt;</comment>
                            <comment id="14544699" author="jingcheng.du@intel.com" created="Fri, 15 May 2015 00:57:43 +0000"  >&lt;p&gt;Thanks Anoop &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoopsamjohn&quot; class=&quot;user-hover&quot; rel=&quot;anoopsamjohn&quot;&gt;Anoop Sam John&lt;/a&gt;. I&apos;m thinking about the same thing, if the seqId of ref cell is cleared in compaction, what should we do to the mob cells?&lt;br/&gt;
This patch is not completed. I think we have to seek next row key and compare its seqId, if there is not a matched seqId, the latest cell is returned.&lt;/p&gt;</comment>
                            <comment id="14545050" author="ram_krish" created="Fri, 15 May 2015 07:02:19 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jingcheng.du%40intel.com&quot; class=&quot;user-hover&quot; rel=&quot;jingcheng.du@intel.com&quot;&gt;Jingcheng Du&lt;/a&gt;&lt;br/&gt;
So previously before the patch what value we were getting - value4? &lt;/p&gt;</comment>
                            <comment id="14545056" author="jingcheng.du@intel.com" created="Fri, 15 May 2015 07:07:06 +0000"  >&lt;p&gt;Upload the patch V2 to fix the readPt issue.&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;If there is a matched cell (seqId&amp;lt;=readPt), this cell is returned.&lt;/li&gt;
	&lt;li&gt;If there is not such a cell, use the latest matched cell whose seqId is larger than readPt. Because we don&apos;t reset the seqId in compactions.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="14545057" author="jingcheng.du@intel.com" created="Fri, 15 May 2015 07:07:39 +0000"  >&lt;p&gt;Yes, it&apos;s value4.&lt;/p&gt;</comment>
                            <comment id="14545174" author="anoop.hbase" created="Fri, 15 May 2015 08:50:45 +0000"  >&lt;p&gt;The logic is fine&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
result = scanner.peek();
+          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (result.getSequenceId() &amp;gt; readPt) {
+            &lt;span class=&quot;code-comment&quot;&gt;// current cell is invisible, look &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the next.
&lt;/span&gt;+            Cell candidate = scanner.next();
+            &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (candidate != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+              &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (CellComparator.compare(search, candidate, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) != 0) {
+                &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
+              }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We return result right?  So if there are no match and the break happens, we will return the 1st cell. Ideally this will never happen. Still for the correctness we should not return the 1st Cell.(null is ok?)&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Because we don&apos;t reset the seqId in compactions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;May be we can follow the same logic like when the cell seqId is less than smallest readpoint, we can reset it to 0.&lt;/p&gt;</comment>
                            <comment id="14545205" author="jingcheng.du@intel.com" created="Fri, 15 May 2015 09:26:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;May be we can follow the same logic like when the cell seqId is less than smallest readpoint, we can reset it to 0.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The smallest readPt is a region-related. The mob file compaction can not work with them. So it&apos;s hard to reset seqId to 0 in mob files.&lt;/p&gt;

&lt;p&gt;I think there&apos;re still issues in mob file compactions if we enable mvcc in mob files. It&apos;s hard to maintain the readPt consistency between the ref cell and mob cell. I have to think about this again.&lt;/p&gt;</comment>
                            <comment id="14545344" author="jingcheng.du@intel.com" created="Fri, 15 May 2015 11:26:45 +0000"  >&lt;p&gt;Upload the patch V3 to add a null check to avoid a NPE which is supposed to never happens in reading.&lt;/p&gt;</comment>
                            <comment id="14545351" author="jingcheng.du@intel.com" created="Fri, 15 May 2015 11:27:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think there&apos;re still issues in mob file compactions if we enable mvcc in mob files. It&apos;s hard to maintain the readPt consistency between the ref cell and mob cell. I have to think about this again.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I thought about this, there are no issues in the compactions. A new patch had been uploaded.&lt;/p&gt;</comment>
                            <comment id="14545447" author="jingcheng.du@intel.com" created="Fri, 15 May 2015 12:59:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;We will read cells from MOB files only on demand right. First we read from ref cf files and there any way the readPoint check is there. Only if it passes, we will call get cell on MOB. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Or the case is like with same key (rk,cf,q,ts,type) we have 2 cells and old cell in ref cf got cleared by readPoint check but we read the new cell from MOB file?&lt;br/&gt;
Hi Anoop &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoopsamjohn&quot; class=&quot;user-hover&quot; rel=&quot;anoopsamjohn&quot;&gt;Anoop Sam John&lt;/a&gt;, I think we could directly use the readPt to directly seek the cell in mob file. I have refined the patch based on the V1, and will upload it later.&lt;/p&gt;</comment>
                            <comment id="14545449" author="jingcheng.du@intel.com" created="Fri, 15 May 2015 13:00:27 +0000"  >&lt;p&gt;Wrong comment format, will send it again.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;We will read cells from MOB files only on demand right. First we read from ref cf files and there any way the readPoint check is there. Only if it passes, we will call get cell on MOB. Or the case is like with same key (rk,cf,q,ts,type) we have 2 cells and old cell in ref cf got cleared by readPoint check but we read the new cell from MOB file?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hi Anoop Anoop Sam John, I think we could directly use the readPt to directly seek the cell in mob file. I have refined the patch based on the V1, and will upload it later.&lt;/p&gt;</comment>
                            <comment id="14545451" author="jingcheng.du@intel.com" created="Fri, 15 May 2015 13:01:31 +0000"  >&lt;p&gt;Refined the patch(V4) based on V1, and upload it.&lt;/p&gt;</comment>
                            <comment id="14545520" author="jmhsieh" created="Fri, 15 May 2015 13:45:46 +0000"  >&lt;p&gt;I ran the initial version of the patch about 80 times and it passed.  Good stuff.&lt;/p&gt;

&lt;p&gt;This isn&apos;t my area of expertise so I need an extra day to understand it completely.   &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoopsamjohn&quot; class=&quot;user-hover&quot; rel=&quot;anoopsamjohn&quot;&gt;Anoop Sam John&lt;/a&gt; I won&apos;t block committing this if you are satisfied.  &lt;/p&gt;</comment>
                            <comment id="14545642" author="anoop.hbase" created="Fri, 15 May 2015 15:15:45 +0000"  >&lt;p&gt;I am +1&lt;/p&gt;

&lt;p&gt;The old methods&lt;br/&gt;
readCell(Cell search, boolean cacheMobBlocks) &lt;br/&gt;
resolve(Cell reference, boolean cacheBlocks)&lt;br/&gt;
are not used by any code path and may be we can just replace them with new ones with readPoint param? These are private classes so no issue to drop old methods.&lt;/p&gt;</comment>
                            <comment id="14545668" author="ram_krish" created="Fri, 15 May 2015 15:30:48 +0000"  >&lt;p&gt;I will check this once by tomorrow. &lt;/p&gt;</comment>
                            <comment id="14546675" author="ram_krish" created="Sat, 16 May 2015 10:32:10 +0000"  >&lt;p&gt;Patch looks good to me.&lt;br/&gt;
Will the reset of mvcc to 0 happen in cases where of compaction of mobfiles also&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (cleanSeqId &amp;amp;&amp;amp; c.getSequenceId() &amp;lt;= smallestReadPoint) {
            CellUtil.setSequenceId(c, 0);
          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14546881" author="stack" created="Sat, 16 May 2015 18:20:50 +0000"  >&lt;p&gt;Not sure if this helps but just to note that when mvcc gets zero&apos;d in hfiles is an open question whose answer may yet be never (because of DLR and replication &amp;#8211; see tail of the messy &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13389&quot; title=&quot;[REGRESSION] HBASE-12600 undoes skip-mvcc parse optimizations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13389&quot;&gt;HBASE-13389&lt;/a&gt; issue).&lt;/p&gt;</comment>
                            <comment id="14547220" author="jmhsieh" created="Sun, 17 May 2015 16:19:01 +0000"  >&lt;p&gt;I was doing a full unit test run before commit and found this consistent test failure.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jingcheng.du%40intel.com&quot; class=&quot;user-hover&quot; rel=&quot;jingcheng.du@intel.com&quot;&gt;Jingcheng Du&lt;/a&gt;, do you want to take a look?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 5.648 sec &amp;lt;&amp;lt;&amp;lt; FAILURE! - in org.apache.hadoop.hbase.mob.mapreduce.TestMobSweepReducer
testRun(org.apache.hadoop.hbase.mob.mapreduce.TestMobSweepReducer)  Time elapsed: 4.487 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
java.lang.ArrayIndexOutOfBoundsException: 0
        at org.apache.hadoop.hbase.mob.mapreduce.TestMobSweepReducer.testRun(TestMobSweepReducer.java:203)

Running org.apache.hadoop.hbase.mob.mapreduce.TestMobSweeper
Tests run: 3, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 134.159 sec &amp;lt;&amp;lt;&amp;lt; FAILURE! - in org.apache.hadoop.hbase.mob.mapreduce.TestMobSweeper
testCompactionDelaySweeperWithNamespace(org.apache.hadoop.hbase.mob.mapreduce.TestMobSweeper)  Time elapsed: 36.318 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
java.lang.AssertionError: expected:&amp;lt;1&amp;gt; but was:&amp;lt;0&amp;gt;
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.failNotEquals(Assert.java:743)
        at org.junit.Assert.assertEquals(Assert.java:118)
        at org.junit.Assert.assertEquals(Assert.java:555)
        at org.junit.Assert.assertEquals(Assert.java:542)
        at org.apache.hadoop.hbase.mob.mapreduce.TestMobSweeper.testCompactionDelaySweeperInternal(TestMobSweeper.java:255)
        at org.apache.hadoop.hbase.mob.mapreduce.TestMobSweeper.testCompactionDelaySweeperWithNamespace(TestMobSweeper.java:302)

testCompactionDelaySweeper(org.apache.hadoop.hbase.mob.mapreduce.TestMobSweeper)  Time elapsed: 34.586 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
java.lang.AssertionError: expected:&amp;lt;1&amp;gt; but was:&amp;lt;0&amp;gt;
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.failNotEquals(Assert.java:743)
        at org.junit.Assert.assertEquals(Assert.java:118)
        at org.junit.Assert.assertEquals(Assert.java:555)
        at org.junit.Assert.assertEquals(Assert.java:542)
        at org.apache.hadoop.hbase.mob.mapreduce.TestMobSweeper.testCompactionDelaySweeperInternal(TestMobSweeper.java:255)
        at org.apache.hadoop.hbase.mob.mapreduce.TestMobSweeper.testCompactionDelaySweeper(TestMobSweeper.java:282)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14547462" author="jingcheng.du@intel.com" created="Mon, 18 May 2015 02:23:01 +0000"  >&lt;p&gt;Thanks for comments &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoopsamjohn&quot; class=&quot;user-hover&quot; rel=&quot;anoopsamjohn&quot;&gt;Anoop Sam John&lt;/a&gt;.&lt;br/&gt;
These two method s are invoked by the mob compactions. I think it&apos;s better to have them in the code.&lt;/p&gt;</comment>
                            <comment id="14547463" author="jingcheng.du@intel.com" created="Mon, 18 May 2015 02:25:13 +0000"  >&lt;p&gt;The smallest readPt is region-related. In the mob compaction, it&apos;s hard to get this. I think we don&apos;t have to reset the seqId to 0 for now. This will not bring issues but one more read to the mvcc from the block. Please advise. Thanks.&lt;/p&gt;</comment>
                            <comment id="14547465" author="jingcheng.du@intel.com" created="Mon, 18 May 2015 02:34:11 +0000"  >&lt;p&gt;Sure, I&apos;m looking at it.&lt;/p&gt;</comment>
                            <comment id="14547555" author="jingcheng.du@intel.com" created="Mon, 18 May 2015 05:36:34 +0000"  >&lt;p&gt;Thanks for the comments Mr. Stack! I&apos;ll read the details of this issue.&lt;/p&gt;</comment>
                            <comment id="14547636" author="jingcheng.du@intel.com" created="Mon, 18 May 2015 07:25:58 +0000"  >&lt;p&gt;Fix the issues in unit tests, and upload the patch V5.&lt;/p&gt;</comment>
                            <comment id="14549797" author="jingcheng.du@intel.com" created="Tue, 19 May 2015 05:15:36 +0000"  >&lt;p&gt;How about the latest patch? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmhsieh&quot; class=&quot;user-hover&quot; rel=&quot;jmhsieh&quot;&gt;Jonathan Hsieh&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoopsamjohn&quot; class=&quot;user-hover&quot; rel=&quot;anoopsamjohn&quot;&gt;Anoop Sam John&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;, do you want to look at it? Thanks!&lt;/p&gt;</comment>
                            <comment id="14550146" author="anoop.hbase" created="Tue, 19 May 2015 09:53:07 +0000"  >&lt;p&gt;Looks good overall.&lt;br/&gt;
Some minor comments&lt;br/&gt;
SweepReducer - Can we close the StoreFileScanner also?&lt;br/&gt;
ReversedMobStoreScanner extend MobStoreScanner. So u can make the readPt state in MobStoreScanner to be protected so as to avoid define again and set in ReversedMobStoreScanner .&lt;br/&gt;
MobFileCache&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; MobFile openFile(FileSystem fs, Path path, MobCacheConfig cacheConf) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!isCacheEnabled) {
-      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; MobFile.create(fs, path, conf, cacheConf);
+      MobFile mobFile = MobFile.create(fs, path, conf, cacheConf);
+      mobFile.open();
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; mobFile;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Pls check and make sure the callers are closing this file after the use.&lt;/p&gt;</comment>
                            <comment id="14550158" author="jingcheng.du@intel.com" created="Tue, 19 May 2015 10:01:37 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoopsamjohn&quot; class=&quot;user-hover&quot; rel=&quot;anoopsamjohn&quot;&gt;Anoop Sam John&lt;/a&gt; for the comment!&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;SweepReducer - Can we close the StoreFileScanner also?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sure, add it back in the latest patch.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;ReversedMobStoreScanner extend MobStoreScanner. So u can make the readPt state in MobStoreScanner to be protected so as to avoid define again and set in ReversedMobStoreScanner&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Change the readPt to protected in StoreScanner, and remove the ones in MobStoreScanner and ReversedMobStoreScanner.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Pls check and make sure the callers are closing this file after the use.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Right. This is only internal used. We have guaranteed the right usages in the code.&lt;/p&gt;</comment>
                            <comment id="14550161" author="jingcheng.du@intel.com" created="Tue, 19 May 2015 10:03:36 +0000"  >&lt;p&gt;Update the patch V6 according to Anoop&apos;s comments.&lt;/p&gt;</comment>
                            <comment id="14550167" author="anoop.hbase" created="Tue, 19 May 2015 10:09:07 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="14551147" author="jmhsieh" created="Tue, 19 May 2015 20:22:32 +0000"  >&lt;p&gt;ran latest about 40 times and passed, also ran full suite and passed.  committing.  Thanks jingcheng for the fix and thanks anoop for the reviews!&lt;/p&gt;</comment>
                            <comment id="14637848" author="hudson" created="Wed, 22 Jul 2015 22:48:51 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6672 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6672/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6672/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13531&quot; title=&quot;Flakey failures of TestAcidGuarantees#testMobScanAtomicity&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13531&quot;&gt;&lt;del&gt;HBASE-13531&lt;/del&gt;&lt;/a&gt; Flakey failure of TestAcidGuarantees#testMobScanAtomicity (Jingcheng Du) (jmhsieh: rev 4da0149ee416a51132f22bc8c6c13cf1cb0a2ae1)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mob/mapreduce/SweepReducer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mob/MobUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mob/MobFileCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mob/MobFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ReversedMobStoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MobStoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMobStoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HMobStore.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12733071" name="HBASE-13531-V2.diff" size="20288" author="jingcheng.du@intel.com" created="Fri, 15 May 2015 07:07:06 +0000"/>
                            <attachment id="12733118" name="HBASE-13531-V3.diff" size="20306" author="jingcheng.du@intel.com" created="Fri, 15 May 2015 11:26:45 +0000"/>
                            <attachment id="12733136" name="HBASE-13531-V4.diff" size="18962" author="jingcheng.du@intel.com" created="Fri, 15 May 2015 13:01:31 +0000"/>
                            <attachment id="12733469" name="HBASE-13531-V5.diff" size="21142" author="jingcheng.du@intel.com" created="Mon, 18 May 2015 07:25:58 +0000"/>
                            <attachment id="12733766" name="HBASE-13531-V6.diff" size="20507" author="jingcheng.du@intel.com" created="Tue, 19 May 2015 10:03:36 +0000"/>
                            <attachment id="12732826" name="HBASE-13531.diff" size="18977" author="jingcheng.du@intel.com" created="Thu, 14 May 2015 10:39:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 30 Apr 2015 15:39:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 21 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2dmcf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>