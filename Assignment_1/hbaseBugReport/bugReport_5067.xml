<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:24:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5067/HBASE-5067.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5067] HMaster uses wrong name for address (in stand-alone mode)</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5067</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In STANDALONE mode:&lt;br/&gt;
When setting the configuration option &quot;hbase.master.dns.interface&quot; (and optional &quot;hbase.master.dns.nameserver&quot;) to non-default values,&lt;/p&gt;

&lt;p&gt;it is EXPECTED that the master node would report its fully qualified dns name when registering in ZooKeeper,&lt;br/&gt;
BUT INSTEAD, the machines hostname is taken instead.&lt;/p&gt;

&lt;p&gt;For example, my machine is called (aka &quot;its hostname is...&quot;) &quot;machine1&quot; but it&apos;s name in the network is &quot;machine1.our-dev-network.my-corp.com&quot;, so to find this machine&apos;s IP anywhere on the network i would need to query for the whole name (because trying to find &quot;machine1&quot; is ambiguous on a network).&lt;/p&gt;

&lt;p&gt;Why is this a bug, because when trying to connect to this stand-alone hbase installation from outside the machine it is running on, when querying ZK for /hbase/master we get only the &quot;machine1&quot; part, and then fail with an unresolvable address for the master (which later even gives a null pointer because of a missing null check).&lt;/p&gt;

&lt;p&gt;This is the stack trace when calling HTable&apos;s c&apos;tor:&lt;br/&gt;
java.lang.IllegalArgumentException: hostname can&apos;t be null&lt;br/&gt;
	at java.net.InetSocketAddress.&amp;lt;init&amp;gt;(InetSocketAddress.java:139) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;na:1.7.0_02&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.HServerAddress.getResolvedAddress(HServerAddress.java:108) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.HServerAddress.&amp;lt;init&amp;gt;(HServerAddress.java:64) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.zookeeper.RootRegionTracker.dataToHServerAddress(RootRegionTracker.java:82) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.zookeeper.RootRegionTracker.waitRootRegionLocation(RootRegionTracker.java:73) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:579) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:559) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegionInMeta(HConnectionManager.java:688) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:590) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:559) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegionInMeta(HConnectionManager.java:688) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:594) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:559) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HTable.&amp;lt;init&amp;gt;(HTable.java:173) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HTable.&amp;lt;init&amp;gt;(HTable.java:147) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;hbase-0.90.4.jar:0.90.4&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;==============&lt;/p&gt;

&lt;p&gt;Why this happens?&lt;br/&gt;
1. When building the HMaster object we correctly use the static &apos;getMyAddress(conf)&apos; to read the configuration options, and then to try and resolve the machine&apos;s ip. This method returns the full qualified name correctly, and this is then used to construct an &apos;HServerAddress&apos; object which is locally stored as &apos;a&apos;.&lt;br/&gt;
2. So far so good, but now, instead of using this object as the value for the master&apos;s &apos;address&apos; field the code goes on to initialize the &apos;rpcServer&apos; field. As part of this calls the static &apos;HBaseRPC.getServer&apos; method is called with, among others, the HServerAddress&apos;s BIND ADDRESS (aka the IP) that we have just built.&lt;br/&gt;
3. But now, when we finally get to setting the value for HMaster&apos;s &apos;address&apos; field, we initialize a NEW HServerAddress initialized with rpcServer.getListenerAddress() (which is basically the IP we just gave it, with a new listening port.&lt;br/&gt;
4. HServerAddress calls &apos;getAddress().getHostName()&apos; on this address object, which would return the local hostname of the machine, because the IP would be resolved locally by the machine, and not using a nameserver.&lt;/p&gt;

&lt;p&gt;So eventually, the fully qualified name computed in step 1 is NOT USED in any way, instead, all further processing is done on the IP address of the host (and its local resolving to the hostname).&lt;/p&gt;

&lt;p&gt;=======&lt;/p&gt;

&lt;p&gt;What should happen?&lt;br/&gt;
The &apos;HMaster.address&apos; field should be set to an address which is made of the fully qualified name retrieved in step 1, combined with the port retrieved from the rpcServer computed at step 2.&lt;/p&gt;

&lt;p&gt;====&lt;/p&gt;

&lt;p&gt;Notes:&lt;/p&gt;

&lt;p&gt;1. It seems that the &apos;HBaseServer&apos; c&apos;tor (which is called when &apos;HBaseRPC.getServer()&apos; static method is called) is faulty as it doesn&apos;t use the port number sent to it in effect (it sets the local &apos;port&apos; field to it, but then overrides it without ever reading it later on, with the port returned from the new &apos;Listener&apos; object. This might be a bug, but i have not checked it enough.&lt;/p&gt;

&lt;p&gt;2. The same bug with the master node could repeat itself in the region server code, but i haven&apos;t checked that at all.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12535736">HBASE-5067</key>
            <summary>HMaster uses wrong name for address (in stand-alone mode)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ehirsch">Eran Hirsch</reporter>
                        <labels>
                    </labels>
                <created>Mon, 19 Dec 2011 18:47:51 +0000</created>
                <updated>Sat, 11 Apr 2015 01:01:35 +0000</updated>
                            <resolved>Sat, 11 Apr 2015 01:01:35 +0000</resolved>
                                    <version>0.90.4</version>
                                                    <component>master</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13172536" author="stack" created="Mon, 19 Dec 2011 19:27:19 +0000"  >&lt;p&gt;Thanks for the writeup Eran.  Would you mind checking trunk to see if we have same issue there?  This all has been refactored but we may still be doing something dumb, even in the new stuff.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13173079" author="ehirsch" created="Tue, 20 Dec 2011 11:06:08 +0000"  >&lt;p&gt;To the best of my understanding, the problem is fixed in the trunk, but only to some extent.&lt;br/&gt;
It seems like the flow would work correctly, but relies on the underlying VM implementation and assumes certain things which are not strictly assumable.&lt;/p&gt;

&lt;p&gt;=====&lt;/p&gt;

&lt;p&gt;I&apos;ll explain...&lt;br/&gt;
1. the hostname is computed based on the reverse DNS like before&lt;br/&gt;
2. an InetSockedAddress is built from this hostname and stored locally as &apos;initialIsa&apos;&lt;br/&gt;
3. The RPC server now is created using, among others, &apos;initialIsa.getHostName()&apos;&lt;br/&gt;
4. The address which was binded on by the rpc server is stored as the HMaster field &apos;isa&apos;&lt;br/&gt;
5. The server name is initialized with the &apos;isa&apos; field&apos;s hostname.&lt;/p&gt;

&lt;p&gt;=========&lt;/p&gt;

&lt;p&gt;Why is this problematic?&lt;br/&gt;
------------------------&lt;br/&gt;
Because it assumes things about the socked implementation which are not strictly enforced:&lt;/p&gt;

&lt;p&gt;We first call the &apos;bind&apos; method of a ServerSocket object, with an InetSocketAddress instance.&lt;br/&gt;
Later on we call ServerSocket&apos;s &apos;getLocalSocketAddress&apos; to get this address instance back.&lt;br/&gt;
There is no way to know if the same object is returned, or maybe a new object is built based on the IP, or whatever other way the implementation chooses. Specifically to our case, You can tell this would still hold the &apos;hostname&apos; field we gave it, with our fully qualified dns name.&lt;/p&gt;

&lt;p&gt;====&lt;/p&gt;

&lt;p&gt;To conclude,&lt;br/&gt;
I think there is a semantic problem with the way the HMaster is initialzed in it&apos;s c&apos;tor:&lt;br/&gt;
1. When creating the rpcServer, we should call the method with &apos;initialIsa.getAddress().getHostAddress()&apos; (instead of &apos;initialIsa.getHostName()).&lt;br/&gt;
This would also be consistent with the comment written next to this parameter, saying that we are sending an IP (because now we are sending a DNS name).&lt;br/&gt;
2. When setting the &apos;serverName&apos; field, we need to use the local field &apos;hostname&apos; computed earlier (instead of &apos;this.isa.getHostName()).&lt;/p&gt;

&lt;p&gt;======&lt;/p&gt;

&lt;p&gt;Notes:&lt;br/&gt;
1. The same problem applies to HRegionServer which uses almost the same initialization code in its c&apos;tor. &lt;br/&gt;
2. I am not an HBase developer, so i don&apos;t know really how to add these changes myself.&lt;/p&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 19 Dec 2011 19:27:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>221420</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02bxb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11533</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>DNS, STANDALONE, MASTER</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>