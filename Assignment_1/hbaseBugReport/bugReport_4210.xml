<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:16:51 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4210/HBASE-4210.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4210] Allow coprocessor to interact with batches per region sent from a client</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4210</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently the coprocessor write hooks - &lt;/p&gt;
{pre|post}
{Put|Delete}
&lt;p&gt; - are strictly one row|cell operations.&lt;br/&gt;
It might be a good idea to allow a coprocessor to deal with batches of puts and deletes as they arrive from the client.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12519068">HBASE-4210</key>
            <summary>Allow coprocessor to interact with batches per region sent from a client</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="anoopsamjohn">Anoop Sam John</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Wed, 17 Aug 2011 04:04:54 +0000</created>
                <updated>Tue, 16 Apr 2013 03:47:21 +0000</updated>
                            <resolved>Wed, 27 Feb 2013 05:10:30 +0000</resolved>
                                    <version>0.94.6</version>
                    <version>0.95.0</version>
                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.94.6</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                        <due></due>
                            <votes>2</votes>
                                    <watches>19</watches>
                                                                <comments>
                            <comment id="13086112" author="lhofhansl" created="Wed, 17 Aug 2011 04:06:29 +0000"  >&lt;p&gt;The options for that might be &lt;/p&gt;
{pre|post}
&lt;p&gt;Batch hook, or an RpcObserver and start- and end-type hooks.&lt;/p&gt;</comment>
                            <comment id="13086155" author="apurtell" created="Wed, 17 Aug 2011 05:56:00 +0000"  >&lt;p&gt;@Lars: Can you talk a bit about the use case you are considering here? What is the motivation?&lt;/p&gt;
</comment>
                            <comment id="13088079" author="lhofhansl" created="Fri, 19 Aug 2011 23:59:45 +0000"  >&lt;p&gt;The motivation is generally the same as for batching on the client. There&apos;s cost that can be amortized over a set of KVs.&lt;br/&gt;
Another reason is that inside a region we can do atomic operations (i.e. we can actually use the rowlocks here), whereas on the client rowlocks are not reliable.&lt;/p&gt;

&lt;p&gt;I have no specific use cases at this point, though.&lt;/p&gt;</comment>
                            <comment id="13440570" author="lhofhansl" created="Thu, 23 Aug 2012 19:16:59 +0000"  >&lt;p&gt;An example is to keep a 2ndary index up to date. In that case we definitely want to make use of the batching. (and we cannot collect in the single hooks, since we have no indication about when we&apos;re done).&lt;/p&gt;</comment>
                            <comment id="13440593" author="apurtell" created="Thu, 23 Aug 2012 19:43:05 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13440832" author="lhofhansl" created="Fri, 24 Aug 2012 00:41:28 +0000"  >&lt;p&gt;Then the question: Where to hook this up. Looking at HRegion.doMiniBatchMutation, we&apos;d leak a lot of internals into the coprocessor hooks, which is bad.&lt;br/&gt;
We also do not want rebuild in array or List or Puts or Deletes again just because there might be a coprocessor hook.&lt;/p&gt;

&lt;p&gt;I guess we have the following options:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Pass BatchOperationInProgress to these coprocessor hooks (in HRegion.doMiniBatchMutation)&lt;/li&gt;
	&lt;li&gt;Pass the original set of Mutations to the batch pre hook and the same set and their results (OperationStatus[]) to post hook. This means the post hook will have to do an extra loop now, to filter out the failed mutations)&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13499868" author="asafm" created="Sun, 18 Nov 2012 18:34:49 +0000"  >&lt;p&gt;One perfect use case for this is &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3434&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3434&lt;/a&gt;. &lt;br/&gt;
You can have a co-processor hook on preIncrementValue which converts a list of Increment to a list of Put, and then have a co-processor hook on preGet which aggregates them and serve them as one result. On the preCompact hook you can aggregate them and increment the original KV.&lt;br/&gt;
Without the preMulti you are forced to write each Put to the WAL, thus not enjoying the write once to WAL on a list of Increment. All caused by the fact that you are only seeing one Increment at a time&lt;/p&gt;</comment>
                            <comment id="13540873" author="anoopsamjohn" created="Sat, 29 Dec 2012 11:50:15 +0000"  >&lt;p&gt;Oh I missed this issue till now...&lt;br/&gt;
We have implemented some thing like this while working with the secondary index.&lt;br/&gt;
I will give more details and a patch that we had...&lt;br/&gt;
We will discuss further based on that then &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
More useful CP hooks we can give...&lt;/p&gt;</comment>
                            <comment id="13541328" author="anoopsamjohn" created="Mon, 31 Dec 2012 10:15:18 +0000"  >&lt;p&gt;The problems we faced with prePut() during the analysis for the secondary index&lt;br/&gt;
1. This is not considering the mini batch nature. Hook for all the Puts called at once at the 1st step itself&lt;br/&gt;
2. Not able to know what is the TS which will be used for each of the Put(If no explicit TS in put from client side, then we calculate it at RS at some below lines)&lt;br/&gt;
....&lt;br/&gt;
Now which will be the suitable location for this new hook...!!&lt;br/&gt;
I suggest pre hook to be in doMiniBatchMutation() just before &quot;STEP 3. Write back to memstore&quot;.  This place ensures the MVCC consistency.  Row lock is already hold at this point so the CP implementation to be careful not making the system into a dead lock situation. Well we can clearly warn this in doc I guess.&lt;br/&gt;
The post hook can be before  &quot;STEP 8. Advance mvcc.&quot;&lt;/p&gt;

&lt;p&gt;As per the usecase in secondary index I am giving these suggestions&lt;/p&gt;
</comment>
                            <comment id="13541387" author="yuzhihong@gmail.com" created="Mon, 31 Dec 2012 15:13:09 +0000"  >&lt;p&gt;Todd introduced initialized variable so that we don&apos;t call preXXX hooks more than once. Please take this into account when coming up with your patch.&lt;/p&gt;

&lt;p&gt;w.r.t. potential dead lock situation, did you encounter any when implementing secondary indexing ?&lt;/p&gt;</comment>
                            <comment id="13541988" author="ram_krish" created="Wed, 2 Jan 2013 04:08:05 +0000"  >&lt;p&gt;Yes.  We encountered some dead lock situation wrt to the advancing the mvcc and the order in which the flush was happening.  Infact some dataloss also we encountered that time.  &lt;/p&gt;</comment>
                            <comment id="13543729" author="anoopsamjohn" created="Fri, 4 Jan 2013 09:21:37 +0000"  >&lt;p&gt;@Ram the issues that we found I will try to address in another Jira. That was as a result of we trying to do a cross region transaction kinda thing.&lt;br/&gt;
Here I mean the row locks dead lock. As the preposed hooks will be called after acquiring the row locks and within the CP implementation one tries to acquire another row lock, there is chance for dead lock. Well we will document this clearly warning the users. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13543732" author="anoopsamjohn" created="Fri, 4 Jan 2013 09:24:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;Todd introduced initialized variable so that we don&apos;t call preXXX hooks more than once&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes Ted I am aware of this change that had happened. But all the pre hooks for each of the Mutation will be called at 1st step itself. After that the actual mutate operation might be happening in N batches.&lt;br/&gt;
We would like to have a pre/post hooks for each of the mini batch mutation.(One call for each mini operation)&lt;br/&gt;
May be it would be better to have one pre/post hook for the entire batch operation also? -&amp;gt; As per our use case we wanted a such a hook also.&lt;/p&gt;</comment>
                            <comment id="13544586" author="lhofhansl" created="Sat, 5 Jan 2013 05:29:26 +0000"  >&lt;p&gt;preHook before STEP 3 and postHook before STEP 8 makes sense.&lt;br/&gt;
As I mentioned in my comment August 24th: What would we pass to these hooks? Recreating an array of mutations just for the hooks is too expensive, but then we need to pass batchOp or maybe bathOp.operations along with the first and last index... Leaking a lot of HBase internal (which we&apos;ll likely want to change around at some point in the future) into the coprocessor code.&lt;/p&gt;</comment>
                            <comment id="13544608" author="anoopsamjohn" created="Sat, 5 Jan 2013 06:53:40 +0000"  >&lt;p&gt;Lars yes that is what confusing me too...  Passing the index looks very odd....  As of now in our implementation we have created the a new array and pass the mutation in that batch..  Yes agree with you just for hook recreating the array and dealing with some steps is expensive &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;   I will make a simple perf test with just passing the existing array with start and end index... Just for testing and will see how much diff it will make..  This is a critical path that is my worry from beginning.. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13551386" author="apurtell" created="Fri, 11 Jan 2013 18:49:38 +0000"  >&lt;p&gt;An option here would be to allocate an internal identifier for every operation, corresponding to the user RPC, and then no matter how many units of work that is broken down internally the RPC ID would be carried through. Then there could be a CP hook at step 3 which announces processing on a given RPC (batch). The other hooks will get the ID somehow so the CP can correlate. Then finally at step 8 an upcall notifying that processing the given RPC ID is completed (or errored out).&lt;/p&gt;</comment>
                            <comment id="13553680" author="anoopsamjohn" created="Tue, 15 Jan 2013 11:20:52 +0000"  >&lt;p&gt;Andrew - You propose a solution for the issue which me and Lars were discussing? The main concern is how we can pass the mutations which are handled in a current Mini batch. Sorry I didn&apos;t get you fully here.&lt;/p&gt;</comment>
                            <comment id="13553688" author="anoopsamjohn" created="Tue, 15 Jan 2013 11:30:23 +0000"  >&lt;p&gt;@Lars&lt;br/&gt;
How about abstracting out a MiniBatchOperationInProgress object and pass to the CP? Underlying actual array will be that in BatchOperationInProgress only. This new object is kind of ByteBuffer position() and limit() way. Am I making sense?&lt;/p&gt;</comment>
                            <comment id="13555475" author="apurtell" created="Wed, 16 Jan 2013 21:25:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;The main concern is how we can pass the mutations which are handled in a current Mini batch.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, I propose you don&apos;t do that, and instead inform the CP when a batch is starting, when the batch has completed, and by inclusion of an RPC id in hook upcalls for the individual ops in the batch, what ops below to what batch RPC (by ID). &lt;/p&gt;

&lt;p&gt;This way there is no expensive construction of a large data structure.&lt;/p&gt;</comment>
                            <comment id="13555514" author="lhofhansl" created="Wed, 16 Jan 2013 22:07:53 +0000"  >&lt;p&gt;Using RPC ID to tie individual hooks together works.&lt;/p&gt;

&lt;p&gt;I also do like Anoops suggestion to pass an array of operations along with first and last. Specifically that would be batchOp.operations, firstIndex, and lastIndexExclusive. That way nothing needs to be copied and we still have the (semi) intuitive pattern that you get an array of operations along with what subset of is being handled now.&lt;/p&gt;

&lt;p&gt;The RPC ID idea is cleaner; but it is harder to use by a hook and the preHooks are actually all run before any batch.&lt;/p&gt;</comment>
                            <comment id="13555570" author="apurtell" created="Wed, 16 Jan 2013 23:00:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;The RPC ID idea is cleaner; but it is harder to use by a hook and the preHooks are actually all run before any batch.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed.&lt;/p&gt;</comment>
                            <comment id="13555823" author="anoopsamjohn" created="Thu, 17 Jan 2013 04:06:40 +0000"  >&lt;p&gt;I think the CP should know which all Mutations is getting applied each time. The batch of mutations might be running in N number of mini batches. So in every mini batch we need to know which all Mutations getting applied this time. This way only I can be make sure that I add the index for those Puts. This makes index 100% consistent.  This one can be achieved with RPC ID alone Andrew?&lt;/p&gt;</comment>
                            <comment id="13555825" author="apurtell" created="Thu, 17 Jan 2013 04:11:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;This one can be achieved with RPC ID alone Andrew?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No. &lt;/p&gt;</comment>
                            <comment id="13555827" author="anoopsamjohn" created="Thu, 17 Jan 2013 04:14:29 +0000"  >&lt;p&gt;Andrew - You agree on passing the Mutation(which are getting applied in every MiniBatch) also to CP. Waiting a +1 from CP&apos;s boss. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13555847" author="apurtell" created="Thu, 17 Jan 2013 04:43:30 +0000"  >&lt;p&gt;Thanks Anoop but I&apos;m not a boss and we&apos;re having a discussion here. Or more accurately you were having a discussion and I jumped in with a thought. Do what you think is best after considering the input, put up a patch, and let&apos;s see. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13572052" author="anoopsamjohn" created="Wed, 6 Feb 2013 01:44:30 +0000"  >&lt;p&gt;Got busy with some other works. Will come up with a patch next week.&lt;br/&gt;
Also this pre hooks for the Puts will be called after the TS for the Puts are populated in HRegion so the hooks can get the actual TS which will go in the Put. Just seen the issue raised by JD &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7774&quot; title=&quot;RegionObserver.prePut() cannot rely on the Put&amp;#39;s timestamps, can even cause data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7774&quot;&gt;&lt;del&gt;HBASE-7774&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13572142" author="ram_krish" created="Wed, 6 Feb 2013 04:32:17 +0000"  >&lt;p&gt;Yes Anoop.  The patch will be very useful for folks to understand what was done.&lt;/p&gt;</comment>
                            <comment id="13576917" author="anoopsamjohn" created="Tue, 12 Feb 2013 19:29:47 +0000"  >&lt;p&gt;Work in progress. Will attach initial version tomorrow.&lt;/p&gt;</comment>
                            <comment id="13577659" author="anoopsamjohn" created="Wed, 13 Feb 2013 15:47:36 +0000"  >&lt;p&gt;Work in progress patch. Not final. Once we all agree on the approach I will make patch for Trunk.&lt;/p&gt;</comment>
                            <comment id="13577768" author="ram_krish" created="Wed, 13 Feb 2013 17:46:56 +0000"  >&lt;p&gt;Can we avoid exposing WALedits here?  Because we now expose them in WalObserver also.&lt;br/&gt;
Should next() return boolean and hasNext() be a private implementation?&lt;/p&gt;</comment>
                            <comment id="13578135" author="anoopsamjohn" created="Thu, 14 Feb 2013 04:14:37 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should next() return boolean and hasNext() be a private implementation?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Looks fine. Just like InternalScanner#next() returns hasNext. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Can we avoid exposing WALedits here? Because we now expose them in WalObserver also.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Why I have done so is, the prePut() hook allows the CP to add/change the WALWdit. We capture the WALEdits from CP and writing. So may be some one might need it?&lt;/p&gt;</comment>
                            <comment id="13578146" author="yuzhihong@gmail.com" created="Thu, 14 Feb 2013 04:35:53 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class MiniBatchOperationInProgress&amp;lt;T&amp;gt; {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please add javadoc for the class with explanation of type parameter T.&lt;/p&gt;</comment>
                            <comment id="13578151" author="anoopsamjohn" created="Thu, 14 Feb 2013 04:44:43 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt;. Sure I will do that. This patch is not final. I have to add some more javadocs. The approach looks fine? I am trying to avoid the overheads mentioned in above comments &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210?focusedCommentId=13544586&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13544586&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4210?focusedCommentId=13544586&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13544586&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; Your comments?&lt;/p&gt;</comment>
                            <comment id="13578560" author="apurtell" created="Thu, 14 Feb 2013 18:36:23 +0000"  >&lt;p&gt;Not sure about MiniBatchOperationInProgress. You are halfway from starting with an array and ending up with the full list contract, including proper iterators. Why not have getters and setters take an index parameter? Then there would seem no need for next(), rewind(), the IllegalStateExceptions, etc.&lt;/p&gt;</comment>
                            <comment id="13578927" author="anoopsamjohn" created="Fri, 15 Feb 2013 03:31:45 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; Thanks for the review and comment.&lt;br/&gt;
Ya it looks simple for me. Oops why I have not gone with that simplest way! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
So when MiniBatchOperationInProgress contains operation index [5-10) and some one call MiniBatchOperationInProgress#getOperation(1) -&amp;gt; we can convert it into BatchOperationInProgress.operations&lt;span class=&quot;error&quot;&gt;&amp;#91;5+1&amp;#93;&lt;/span&gt;.  I read your comment correctly? This looks just fine with me. I will update the patch tonight.&lt;/p&gt;</comment>
                            <comment id="13582107" author="ram_krish" created="Wed, 20 Feb 2013 11:18:03 +0000"  >&lt;p&gt;Patch is more simpler.  Can you add testcases also? &lt;/p&gt;</comment>
                            <comment id="13582111" author="anoopsamjohn" created="Wed, 20 Feb 2013 11:27:11 +0000"  >&lt;p&gt;You mean unit test for MiniBatchOperationInProgress? I think I should change the test cases in TestRegionObserverInterface also as per the new hook. &lt;/p&gt;</comment>
                            <comment id="13582120" author="ram_krish" created="Wed, 20 Feb 2013 11:36:35 +0000"  >&lt;p&gt;Testcase that covers the new class also.  May be Unit testcase or a testcase with a wider scope.&lt;/p&gt;</comment>
                            <comment id="13582912" author="lhofhansl" created="Thu, 21 Feb 2013 04:37:46 +0000"  >&lt;p&gt;+1 on patch (both 0.94 and 0.96).&lt;/p&gt;

&lt;p&gt;MiniBatchOperationInProgress is still a bit questionable (slightly overkill. IMHO, just to hide the array offset). Also this won&apos;t allow the RegionObserver to interfere with the batch of operations (for example removing one), but I guess that would be tricky anyway.&lt;/p&gt;</comment>
                            <comment id="13582915" author="anoopsamjohn" created="Thu, 21 Feb 2013 04:45:09 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; for the review.  I will address the comments from Ram and give updated patch.(Adding test cases)&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Also this won&apos;t allow the RegionObserver to interfere with the batch of operations (for example removing one)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;May be CP can set the status so that region can ignore the Mutation?&lt;/p&gt;</comment>
                            <comment id="13582920" author="lhofhansl" created="Thu, 21 Feb 2013 04:55:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;May be CP can set the status so that region can ignore the Mutation?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ah yes, that works. Should maybe add a comment to in the RegionObserver interface.&lt;/p&gt;</comment>
                            <comment id="13582921" author="anoopsamjohn" created="Thu, 21 Feb 2013 05:04:52 +0000"  >&lt;p&gt;RegionObserver - At new pre hook and prePut/Delete hooks also we may add javadoc regarding how this Mutation can get ignored by region. I will do that part also in the next version of patch&lt;/p&gt;</comment>
                            <comment id="13585356" author="anoopsamjohn" created="Sun, 24 Feb 2013 12:21:21 +0000"  >&lt;p&gt;Trunk patch.. Let QA run..&lt;/p&gt;</comment>
                            <comment id="13585369" author="hadoopqa" created="Sun, 24 Feb 2013 13:40:50 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12570653/HBASE-4210_Trunk.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12570653/HBASE-4210_Trunk.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 3 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4515//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13585612" author="anoopsamjohn" created="Mon, 25 Feb 2013 04:07:49 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; Added some unit tests.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; Is it good to go in now?&lt;/p&gt;</comment>
                            <comment id="13586023" author="yuzhihong@gmail.com" created="Mon, 25 Feb 2013 17:27:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;:&lt;br/&gt;
What do you think ?&lt;/p&gt;</comment>
                            <comment id="13586134" author="hadoopqa" created="Mon, 25 Feb 2013 18:56:20 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12570817/HBASE-4210_Trunk-V2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12570817/HBASE-4210_Trunk-V2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestFromClientSideWithCoprocessor&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4529//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13586163" author="yuzhihong@gmail.com" created="Mon, 25 Feb 2013 19:14:06 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * @param miniBatchOp batch of Mutations getting applied to region as one batch.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;as one batch&apos; is redundant.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+ * @param &amp;lt;T&amp;gt; Pair&amp;lt;Mutation, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt; pair of Mutations and associated rowlocks .
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;associated rowlocks&apos; -&amp;gt; &apos;associated rowlock Ids&apos;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; hadPreBatchMutate() {
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; hadPostBatchMutate() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above methods can be package-private, right ?&lt;/p&gt;</comment>
                            <comment id="13586532" author="lhofhansl" created="Tue, 26 Feb 2013 00:43:48 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;SimpleRegionObserver is a test class, I think having these public is the right approach (i.e. the RegionObserver can be used from different packages).&lt;/p&gt;</comment>
                            <comment id="13586714" author="anoopsamjohn" created="Tue, 26 Feb 2013 04:03:41 +0000"  >&lt;p&gt;Will address Ted&apos;s comments about javadoc and give patch tonight(IST)&lt;br/&gt;
SimpleRegionObserver - Ya IMO also it can be public. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; fine for you?&lt;/p&gt;</comment>
                            <comment id="13586717" author="yuzhihong@gmail.com" created="Tue, 26 Feb 2013 04:08:50 +0000"  >&lt;p&gt;Should be good.&lt;/p&gt;</comment>
                            <comment id="13587204" author="anoopsamjohn" created="Tue, 26 Feb 2013 15:40:31 +0000"  >&lt;p&gt;Trunk patch applies to new 0.95 branch also.&lt;/p&gt;</comment>
                            <comment id="13587407" author="apurtell" created="Tue, 26 Feb 2013 19:07:32 +0000"  >&lt;p&gt;Trunk patch v3 looks good to me, +1&lt;/p&gt;</comment>
                            <comment id="13587437" author="yuzhihong@gmail.com" created="Tue, 26 Feb 2013 19:33:19 +0000"  >&lt;p&gt;Re-attaching trunk patch v3 for hadoop QA.&lt;/p&gt;</comment>
                            <comment id="13587441" author="yuzhihong@gmail.com" created="Tue, 26 Feb 2013 19:38:23 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;:&lt;br/&gt;
Are you Okay with 0.94 patch v5 ?&lt;/p&gt;</comment>
                            <comment id="13587514" author="hadoopqa" created="Tue, 26 Feb 2013 20:39:38 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12571037/4210_Trunk-V3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12571037/4210_Trunk-V3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestFromClientSide&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4557//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13587585" author="yuzhihong@gmail.com" created="Tue, 26 Feb 2013 21:34:40 +0000"  >&lt;p&gt;I ran the failed test with trunk patch and it passed.&lt;/p&gt;

&lt;p&gt;Integrated to 0.95 and trunk.&lt;/p&gt;

&lt;p&gt;Thanks for the patch, Anoop.&lt;/p&gt;

&lt;p&gt;Thanks for the reviews, Ram, Lars and Andy.&lt;/p&gt;</comment>
                            <comment id="13587607" author="yuzhihong@gmail.com" created="Tue, 26 Feb 2013 21:55:14 +0000"  >&lt;p&gt;0.94 test suite passed with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt;_94-V5.patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Tests run: 1275, Failures: 0, Errors: 0, Skipped: 13

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Integrated to 0.94 as well - I saw Lars&apos; +1 @ 26/Feb/13 00:43&lt;/p&gt;</comment>
                            <comment id="13587634" author="lhofhansl" created="Tue, 26 Feb 2013 22:08:40 +0000"  >&lt;p&gt;+1 on v5 for 0.94&lt;/p&gt;</comment>
                            <comment id="13587643" author="yuzhihong@gmail.com" created="Tue, 26 Feb 2013 22:11:25 +0000"  >&lt;p&gt;@Anoop:&lt;br/&gt;
Mind adding release notes for this issue ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13587674" author="hudson" created="Tue, 26 Feb 2013 22:34:13 +0000"  >&lt;p&gt;Integrated in hbase-0.95 #2 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/2/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/2/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop) (Revision 1450445)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13587845" author="sershe" created="Wed, 27 Feb 2013 01:29:55 +0000"  >&lt;p&gt;Do the files &lt;br/&gt;
	modified:   hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;br/&gt;
	modified:   hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/p&gt;

&lt;p&gt;have correct line endings? My git is acting weird with those&lt;/p&gt;</comment>
                            <comment id="13587925" author="hudson" created="Wed, 27 Feb 2013 02:30:47 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3901 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3901/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3901/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop) (Revision 1450438)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13587963" author="hudson" created="Wed, 27 Feb 2013 03:37:59 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #863 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/863/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/863/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop) (Revision 1450465)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13587974" author="enis" created="Wed, 27 Feb 2013 03:57:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;have correct line endings? My git is acting weird with those&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Those files have CRLF endings. We have to recommit them as an addendum patch with LF endings. &lt;/p&gt;</comment>
                            <comment id="13587978" author="yuzhihong@gmail.com" created="Wed, 27 Feb 2013 04:03:32 +0000"  >&lt;p&gt;Anoop is aware of this and preparing the addendum.&lt;/p&gt;</comment>
                            <comment id="13587981" author="enis" created="Wed, 27 Feb 2013 04:09:05 +0000"  >&lt;p&gt;I&apos;ve committed this addendum patch for all 3 branches. &lt;/p&gt;</comment>
                            <comment id="13587982" author="enis" created="Wed, 27 Feb 2013 04:09:50 +0000"  >&lt;p&gt;It was blocking me, so I did it anyway. Thanks Ted, Anoop. &lt;/p&gt;</comment>
                            <comment id="13587985" author="hadoopqa" created="Wed, 27 Feb 2013 04:14:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12571132/hbase-4210-addendum.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12571132/hbase-4210-addendum.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4569//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4569//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13588010" author="anoopsamjohn" created="Wed, 27 Feb 2013 05:21:40 +0000"  >&lt;p&gt;Thanks a lot Enis. I had prepared it and about to upload. Sorry for the mistake.&lt;/p&gt;</comment>
                            <comment id="13588035" author="hudson" created="Wed, 27 Feb 2013 05:55:18 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3902 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3902/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3902/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop). ADDENDUM patch for fixing line endings (Revision 1450591)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13588044" author="hudson" created="Wed, 27 Feb 2013 06:07:24 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #864 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/864/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/864/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop). ADDENDUM patch for fixing line endings (Revision 1450593)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13588046" author="enis" created="Wed, 27 Feb 2013 06:09:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;Sorry for the mistake.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No big deal chief. Keep the patches coming. &lt;/p&gt;</comment>
                            <comment id="13588053" author="hudson" created="Wed, 27 Feb 2013 06:22:57 +0000"  >&lt;p&gt;Integrated in hbase-0.95 #4 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/4/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/4/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop). ADDENDUM patch for fixing line endings (Revision 1450592)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13588278" author="hudson" created="Wed, 27 Feb 2013 12:57:25 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #422 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/422/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/422/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop). ADDENDUM patch for fixing line endings (Revision 1450591)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop) (Revision 1450438)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13588307" author="hudson" created="Wed, 27 Feb 2013 13:12:54 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #2 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/2/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/2/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop). ADDENDUM patch for fixing line endings (Revision 1450592)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop) (Revision 1450445)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13589288" author="hudson" created="Thu, 28 Feb 2013 07:32:17 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #113 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/113/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/113/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop). ADDENDUM patch for fixing line endings (Revision 1450593)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop) (Revision 1450465)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13592035" author="asafm" created="Mon, 4 Mar 2013 06:57:11 +0000"  >&lt;p&gt;Is this going to Hbase 0.94.6?&lt;/p&gt;</comment>
                            <comment id="13592063" author="anoopsamjohn" created="Mon, 4 Mar 2013 08:30:17 +0000"  >&lt;p&gt;Yes this is committed to 0.94 and will be available with next release (0.94.6)&lt;/p&gt;</comment>
                            <comment id="13593153" author="hudson" created="Tue, 5 Mar 2013 07:52:07 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #12 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/12/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/12/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop). ADDENDUM patch for fixing line endings (Revision 1450593)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4210&quot; title=&quot;Allow coprocessor to interact with batches per region sent from a client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4210&quot;&gt;&lt;del&gt;HBASE-4210&lt;/del&gt;&lt;/a&gt; Allow coprocessor to interact with batches per region sent from a client (Anoop) (Revision 1450465)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestMiniBatchOperationInProgress.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13630721" author="v.himanshu" created="Fri, 12 Apr 2013 22:55:06 +0000"  >&lt;p&gt;Sorry for coming in late here. &lt;/p&gt;

&lt;p&gt;Regarding the release note:  &lt;br/&gt;
preBatchMutate hook will be called after write to memstore and append and sync to WAL. &lt;br/&gt;
You mean postBatchMutate?&lt;/p&gt;

&lt;p&gt;If it calls postBatchMutate, do we still need postDelete/postPut for each mutation (as is currently done after the mvcc forward move statement). This looks wrong to me.&lt;/p&gt;</comment>
                            <comment id="13631616" author="anoop.hbase" created="Mon, 15 Apr 2013 09:48:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;You mean postBatchMutate?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes.. sorry I corrected it now.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If it calls postBatchMutate, do we still need postDelete/postPut for each mutation (as is currently done after the mvcc forward move statement).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The postPut/Delete will be called post MVCC as in old implementation. You mean we need to remove this? I think we should not. As per the use case either make use of pre/postBatchMutate  or pre/postPut/Delete&lt;/p&gt;</comment>
                            <comment id="13631791" author="v.himanshu" created="Mon, 15 Apr 2013 15:20:59 +0000"  >&lt;p&gt;An end user should be aware that there are two places in the flow where Pre/Post hooks are called in this flow. He should write his Observers keeping that in mind. &lt;/p&gt;

&lt;p&gt;So, this is how it looks now:&lt;br/&gt;
1) Pre Puts/Deletes&lt;br/&gt;
1.1) Take updateLock.readLock()&lt;br/&gt;
2) PreBatchMutate&lt;br/&gt;
3) Memstore, Wal, sync, mvcc.&lt;br/&gt;
4) PostBatchMutate&lt;br/&gt;
4.1) Release updateLock.readLock()&lt;br/&gt;
5) Post Puts/Deletes&lt;/p&gt;

&lt;p&gt;Why do you need the readLock while calling pre/postBatchMutateXXX? Is it necessary?&lt;/p&gt;
</comment>
                            <comment id="13631801" author="v.himanshu" created="Mon, 15 Apr 2013 15:36:22 +0000"  >&lt;p&gt;Anoop: I see you guys already discussed above that where do you need to put the hooks for batchMutate. What I am trying to grok is why updateLock.readLock is needed. This lock is a bit expensive one to hold as it used for ops like flushes, and one can call any arbitrary code in the preXXX hook. Hope that clarifies a bit &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Btw, thanks for updating the release note.&lt;/p&gt;</comment>
                            <comment id="13632541" author="anoop.hbase" created="Tue, 16 Apr 2013 03:47:21 +0000"  >&lt;p&gt;Himanshu&lt;br/&gt;
The postBatchMutate will be called before the MVCC completion step. We can not release the updateLock.readLock before the MVCC completion.&lt;br/&gt;
What we make is a way to achieve cross region atomic operation.  The postBatch writes to another region, but any reader will either see both region data or none.  That was the consideration in placing the hooks.&lt;br/&gt;
Yes you are correct, the updateLock can block the flush requests. But we can ideally not expecting too time taking ops in these hooks.  I mailing list we can see some people try making RPC calls from CP hooks (HTable#put()  etc)  It is explained in replies that this is some thing should be avoided and Andrew explained why it is an anti pattern.  May be we should document this some where? &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12630939">HBASE-7774</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12571037" name="4210_Trunk-V3.patch" size="22823" author="yuzhihong@gmail.com" created="Tue, 26 Feb 2013 19:33:19 +0000"/>
                            <attachment id="12569974" name="HBASE-4210_94-V2.patch" size="12539" author="anoopsamjohn" created="Tue, 19 Feb 2013 18:26:36 +0000"/>
                            <attachment id="12570648" name="HBASE-4210_94-V3.patch" size="22283" author="anoopsamjohn" created="Sun, 24 Feb 2013 09:45:28 +0000"/>
                            <attachment id="12570816" name="HBASE-4210_94-V4.patch" size="22250" author="anoopsamjohn" created="Mon, 25 Feb 2013 17:39:14 +0000"/>
                            <attachment id="12570990" name="HBASE-4210_94-V5.patch" size="22226" author="anoopsamjohn" created="Tue, 26 Feb 2013 15:32:17 +0000"/>
                            <attachment id="12569207" name="HBASE-4210_94.patch" size="13200" author="anoopsamjohn" created="Wed, 13 Feb 2013 15:47:36 +0000"/>
                            <attachment id="12570817" name="HBASE-4210_Trunk-V2.patch" size="22846" author="anoopsamjohn" created="Mon, 25 Feb 2013 17:44:59 +0000"/>
                            <attachment id="12570992" name="HBASE-4210_Trunk-V3.patch" size="22823" author="anoopsamjohn" created="Tue, 26 Feb 2013 15:40:31 +0000"/>
                            <attachment id="12570653" name="HBASE-4210_Trunk.patch" size="22759" author="anoopsamjohn" created="Sun, 24 Feb 2013 12:20:43 +0000"/>
                            <attachment id="12571132" name="hbase-4210-addendum.patch" size="18017" author="enis" created="Wed, 27 Feb 2013 04:09:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 17 Aug 2011 05:56:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33425</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 35 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hpwn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101459</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Adds a pre/post CP hooks to deal with batches of Puts and Deletes rather than individual Put/Delete.&lt;br/&gt;
The preBatchMutate hook will be called after aquiring locks on all the rows which are involved in a batch. &lt;br/&gt;
Also by this time the timestamps for Mutation will be applied at RS. So from this hook CP can get the batch of Mutations getting applied and their timestamps which will be getting applied&lt;br/&gt;
CP also can bypass any of the Mutation from getting applied by setting its OperationStatus as SUCCESS/FAILURE.&lt;br/&gt;
postBatchMutate hook will be called after write to memstore and append and sync to WAL.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>