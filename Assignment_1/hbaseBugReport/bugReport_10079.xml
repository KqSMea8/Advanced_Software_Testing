<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:10:17 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10079/HBASE-10079.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10079] Race in TableName cache</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10079</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Testing 0.96.1rc1.&lt;/p&gt;

&lt;p&gt;With one process incrementing a row in a table, we increment single col.  We flush or do kills/kill-9 and data is lost.  flush and kill are likely the same problem (kill would flush), kill -9 may or may not have the same root cause.&lt;/p&gt;

&lt;p&gt;5 nodes&lt;br/&gt;
hadoop 2.1.0 (a pre cdh5b1 hdfs).&lt;br/&gt;
hbase 0.96.1 rc1 &lt;/p&gt;

&lt;p&gt;Test: 250000 increments on a single row an single col with various number of client threads (IncrementBlaster).  Verify we have a count of 250000 after the run (IncrementVerifier).&lt;/p&gt;

&lt;p&gt;Run 1: No fault injection.  5 runs.  count = 250000. on multiple runs.  Correctness verified.  1638 inc/s throughput.&lt;br/&gt;
Run 2: flushes table with incrementing row.  count = 246875 !=250000.  correctness failed.  1517 inc/s throughput.  &lt;br/&gt;
Run 3: kill of rs hosting incremented row.  count = 243750 != 250000. Correctness failed.   1451 inc/s throughput.&lt;br/&gt;
Run 4: one kill -9 of rs hosting incremented row.  246878.!= 250000.  Correctness failed. 1395 inc/s (including recovery)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12682715">HBASE-10079</key>
            <summary>Race in TableName cache</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jmhsieh">Jonathan Hsieh</assignee>
                                    <reporter username="jmhsieh">Jonathan Hsieh</reporter>
                        <labels>
                    </labels>
                <created>Wed, 4 Dec 2013 16:15:15 +0000</created>
                <updated>Mon, 3 Mar 2014 19:45:05 +0000</updated>
                            <resolved>Thu, 5 Dec 2013 06:16:57 +0000</resolved>
                                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.96.1</fixVersion>
                    <fixVersion>0.99.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>18</watches>
                                                                <comments>
                            <comment id="13839042" author="jmhsieh" created="Wed, 4 Dec 2013 16:21:12 +0000"  >&lt;p&gt;Here&apos;s a link to the test programs I used to pull out this bug.  It needs to be polished and turned in to an IT test as well as a perf test probably in a separate issue.&lt;br/&gt;
&lt;a href=&quot;https://github.com/jmhsieh/hbase/tree/increval&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/jmhsieh/hbase/tree/increval&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13839085" author="jmhsieh" created="Wed, 4 Dec 2013 17:24:08 +0000"  >&lt;p&gt;In 0.96.0:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;flush: Not able to reproduce data loss&lt;/li&gt;
	&lt;li&gt;with kill: Not able to reproduce data loss. had an overcount of 1.&lt;/li&gt;
	&lt;li&gt;with kill -9:  Not able to reproduce data loss. had an overcount of 1.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The overcount of 1 is likely a different bug that I think that I&apos;ll let slide.  Likely the client thought it failed and retried, but it actually made it to the log and increments not being idempotent.&lt;/p&gt;

&lt;p&gt;So the bug is somewhere between 0.96.0 and 0.96.1rc1.&lt;/p&gt;</comment>
                            <comment id="13839099" author="sershe" created="Wed, 4 Dec 2013 17:35:16 +0000"  >&lt;p&gt;does the writer check for exceptions? can you try disabling nonces, to see if there could be collisions (although I would expect the client to receive exceptions in such cases)&lt;/p&gt;</comment>
                            <comment id="13839102" author="sershe" created="Wed, 4 Dec 2013 17:40:28 +0000"  >&lt;p&gt;hbase.regionserver.nonces.enabled is the server config setting. Although, during replay, the updates are never blocked if nonces collide. &lt;/p&gt;</comment>
                            <comment id="13839103" author="jmhsieh" created="Wed, 4 Dec 2013 17:41:06 +0000"  >&lt;p&gt;Does the increval rig with the github link in the first comment check for exceptions? No, it was a quick and dirty program to duplicate a customer issue.  &lt;/p&gt;

&lt;p&gt;I&apos;m in the process of adding flushes to the TestAtomicOperation unit tests that &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; mentioned in the mailing list.  I&apos;ll be able to bisect find the bug that way.&lt;/p&gt;</comment>
                            <comment id="13839114" author="jmhsieh" created="Wed, 4 Dec 2013 17:47:31 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6195&quot; title=&quot;Increment data will be lost when the memstore is flushed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6195&quot;&gt;&lt;del&gt;HBASE-6195&lt;/del&gt;&lt;/a&gt; was the issue that fixed the problem in 0.94 and 0.95 branches (at the time).  It added at test to TestHRegion called testParallelIncrementWithMemStoreFlush that test the situtaion.&lt;/p&gt;</comment>
                            <comment id="13839153" author="jmhsieh" created="Wed, 4 Dec 2013 18:15:01 +0000"  >&lt;p&gt;TestHRegion#testParallelIncrementWithMemStoreFlush passes on the 0.96 tip  The test actually waits for all the increments to be done before flushing (instead of while other increments are happening) so my bet is that it  doesn&apos;t actually test the race condition.&lt;/p&gt;</comment>
                            <comment id="13839233" author="jmhsieh" created="Wed, 4 Dec 2013 19:14:27 +0000"  >&lt;p&gt;I tweaked the test and wasn&apos;t able to duplicate at the unit test level.  I&apos;m looking into reverting a few patches touching memstore/flush area and testing on the cluster (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9963&quot; title=&quot;Remove the ReentrantReadWriteLock in the MemStore&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9963&quot;&gt;&lt;del&gt;HBASE-9963&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10014&quot; title=&quot;HRegion#doMiniBatchMutation rollbacks the memstore even if there is nothing to rollback.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10014&quot;&gt;&lt;del&gt;HBASE-10014&lt;/del&gt;&lt;/a&gt; seems like candidates) to see if they caused the problem.&lt;/p&gt;
</comment>
                            <comment id="13839291" author="jmhsieh" created="Wed, 4 Dec 2013 20:06:23 +0000"  >&lt;p&gt;Seems like reverting either &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9963&quot; title=&quot;Remove the ReentrantReadWriteLock in the MemStore&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9963&quot;&gt;&lt;del&gt;HBASE-9963&lt;/del&gt;&lt;/a&gt; or &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10014&quot; title=&quot;HRegion#doMiniBatchMutation rollbacks the memstore even if there is nothing to rollback.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10014&quot;&gt;&lt;del&gt;HBASE-10014&lt;/del&gt;&lt;/a&gt; gets rid of the &quot;jagged&quot; losses due to flushes.  However when testing on the tip of 0.96 with the reverts I seem to be losing some threads as the initialize becuase of some sort of race.  &lt;/p&gt;

&lt;p&gt;I&apos;m going to try from the exact point where 0.96.1rc1 was cut to see if it is an a happy place any will investigate the htable initialization problem afterwards.&lt;/p&gt;</comment>
                            <comment id="13839333" author="nkeywal" created="Wed, 4 Dec 2013 20:46:41 +0000"  >&lt;p&gt;I guess the error is in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9963&quot; title=&quot;Remove the ReentrantReadWriteLock in the MemStore&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9963&quot;&gt;&lt;del&gt;HBASE-9963&lt;/del&gt;&lt;/a&gt;. It seems there is an issue in HStore#StoreFlusherImpl#prepare: there is no lock there.&lt;/p&gt;</comment>
                            <comment id="13839334" author="jmhsieh" created="Wed, 4 Dec 2013 20:49:16 +0000"  >&lt;p&gt;Actually, the current tip of 0.96 (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9485&quot; title=&quot;TableOutputCommitter should implement recovery if we don&amp;#39;t want jobs to start from 0 on RM restart&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9485&quot;&gt;&lt;del&gt;HBASE-9485&lt;/del&gt;&lt;/a&gt;) doesn&apos;t seem to have the flush problem but does have the htable initializaiton problem.&lt;/p&gt;</comment>
                            <comment id="13839351" author="nkeywal" created="Wed, 4 Dec 2013 20:59:47 +0000"  >&lt;p&gt;That&apos;s strange. We should lock, and we don&apos;t do it in trunk or 0.96 head...&lt;/p&gt;</comment>
                            <comment id="13839431" author="hadoopqa" created="Wed, 4 Dec 2013 22:43:16 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12617058/10079.v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12617058/10079.v1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8057//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13839491" author="stack" created="Wed, 4 Dec 2013 23:45:36 +0000"  >&lt;p&gt;Patch is good.  Nice work  Jon.  Makes sense this missing lock was exposed by hbase-9963.  Pity we didn&apos;t catch it in tests previous.  Any chance of a test?&lt;/p&gt;
</comment>
                            <comment id="13839495" author="sershe" created="Wed, 4 Dec 2013 23:50:53 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13839554" author="jmhsieh" created="Thu, 5 Dec 2013 00:51:34 +0000"  >&lt;p&gt;Here&apos;s the dropped &quot;threads&quot; stack dump &amp;#8211; each one of these corresponds to a thread that didn&apos;t run.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-58&quot;&lt;/span&gt; java.lang.IllegalStateException: test was supposed to be in the cache
        at org.apache.hadoop.hbase.TableName.createTableNameIfNecessary(TableName.java:337)
        at org.apache.hadoop.hbase.TableName.valueOf(TableName.java:385)
        at org.apache.hadoop.hbase.client.HTable.&amp;lt;init&amp;gt;(HTable.java:165)
        at org.apache.hadoop.hbase.client.HTableFactory.createHTableInterface(HTableFactory.java:39)
        at org.apache.hadoop.hbase.client.HTablePool.createHTable(HTablePool.java:271)
        at org.apache.hadoop.hbase.client.HTablePool.findOrCreateTable(HTablePool.java:201)
        at org.apache.hadoop.hbase.client.HTablePool.getTable(HTablePool.java:180)
        at IncrementBlaster$1.run(IncrementBlaster.java:131)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13839634" author="jmhsieh" created="Thu, 5 Dec 2013 01:04:29 +0000"  >&lt;p&gt;I&apos;m having a hard time recreating the jagged counts.  I tried reverting patches, and before and after the patch nkeywal provided.  I think the flush problem was a red herring where I was biased by the customer problem I was recently working on.&lt;/p&gt;

&lt;p&gt;When I changed my tests to do 100000 increments the pattern I saw really jumped out.  Looking at the original numbers from this morning I see the same pattern present with the 250000 increments.  &lt;/p&gt;

&lt;p&gt;80 threads, 250000 increments == 3125 increments / thread.&lt;br/&gt;
count = 246875 != 250000 (flush)  // one thread failed to start.&lt;br/&gt;
count = 243750 != 250000 (kill)  // two threads failed to start.  &lt;br/&gt;
count = 246878 != 250000 (kill -9) // one thread failed to start and we had 3 threads that sent increments that succeeded and retried but didn&apos;t get an ack because of kill -9).&lt;/p&gt;

&lt;p&gt;The last one through me off because it wasn&apos;t regular but I think the explanation I have makes sense.&lt;/p&gt;

&lt;p&gt;I&apos;m looking into seeing if my test code is bad (is there TableName documentation I ignoredthat says  that the race in the stacktrace is my fault) or if we need to add some synchronization to this createTableNameIfNecessary method.&lt;/p&gt;
</comment>
                            <comment id="13839643" author="jmhsieh" created="Thu, 5 Dec 2013 01:17:50 +0000"  >&lt;p&gt;Hm.. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6580&quot; title=&quot;Deprecate HTablePool in favor of HConnection.getTable(...)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6580&quot;&gt;&lt;del&gt;HBASE-6580&lt;/del&gt;&lt;/a&gt; deprecates HTablePool and happened when I wasn&apos;t paying attention.&lt;/p&gt;</comment>
                            <comment id="13839677" author="jmhsieh" created="Thu, 5 Dec 2013 01:54:13 +0000"  >&lt;p&gt;Removed HTablePool code and still got a race.    &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-1&quot;&lt;/span&gt; java.lang.IllegalStateException: test was supposed to be in the cache
        at org.apache.hadoop.hbase.TableName.createTableNameIfNecessary(TableName.java:337)
        at org.apache.hadoop.hbase.TableName.valueOf(TableName.java:412)
        at org.apache.hadoop.hbase.client.HTable.&amp;lt;init&amp;gt;(HTable.java:150)
        at IncrementBlaster$1.run(IncrementBlaster.java:130)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This table cache is the root cause of the race.  The testing program has n threads which waits until a rendezvous point before creating independent HTable instances  with the same name.  It is unreasonable for separate HTable constructors that just so happen to try to open the same table to race like this.  Fix should be in the TableName cache.&lt;/p&gt;</comment>
                            <comment id="13839689" author="jmhsieh" created="Thu, 5 Dec 2013 02:01:49 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9976&quot; title=&quot;Don&amp;#39;t create duplicated TableName objects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9976&quot;&gt;&lt;del&gt;HBASE-9976&lt;/del&gt;&lt;/a&gt; introduces the TableName cache which is the root cause.&lt;/p&gt;</comment>
                            <comment id="13839739" author="apurtell" created="Thu, 5 Dec 2013 02:55:37 +0000"  >&lt;p&gt;Doesn&apos;t this need to be in 0.98.0 also?&lt;/p&gt;</comment>
                            <comment id="13839789" author="lhofhansl" created="Thu, 5 Dec 2013 04:13:21 +0000"  >&lt;p&gt;Let&apos;s add some flushes to the Increment part of TestAtomicOperation. It should have found this issue.&lt;/p&gt;

&lt;p&gt;Edit: NM. Looks like this is not a flusher issue.&lt;/p&gt;</comment>
                            <comment id="13839791" author="jmhsieh" created="Thu, 5 Dec 2013 04:20:20 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; Yes. also added 0.99&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;  I&apos;m pretty sure that the TestAtomicOperation is good and the other test metion in comments covers the case that I thought had regressed.  &lt;/p&gt;

&lt;p&gt;This is definitely a race in TableName&apos;s caching mechanism.  Our friend &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tlipcon&quot; class=&quot;user-hover&quot; rel=&quot;tlipcon&quot;&gt;Todd Lipcon&lt;/a&gt; is fairly certain it is a ByteBuffer usage problem &amp;#8211; gets on BB&apos;s mutate it.  I&apos;m trying to come up with a trace that shows the race (I think it has to do with Bytes.equals(byte[], BB) since that method actually mutates BB and then restores state afterwards.)&lt;/p&gt;</comment>
                            <comment id="13839793" author="jmhsieh" created="Thu, 5 Dec 2013 04:23:23 +0000"  >&lt;p&gt;This also jives with it not showing up on 0.96.0 and showing up on 0.96.1 &amp;#8211; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9976&quot; title=&quot;Don&amp;#39;t create duplicated TableName objects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9976&quot;&gt;&lt;del&gt;HBASE-9976&lt;/del&gt;&lt;/a&gt; was committed recently and between the release and release candidate.&lt;/p&gt;</comment>
                            <comment id="13839827" author="jmhsieh" created="Thu, 5 Dec 2013 05:09:23 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  /**
   * Check that the object does not exist already. There are two reasons &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; creating the objects
   * only once:
   * 1) With 100K regions, the table names take ~20MB.
   * 2) Equals becomes much faster as it&apos;s resolved with a reference and an &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; comparison.
   */
01  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; TableName createTableNameIfNecessary(ByteBuffer bns, ByteBuffer qns) {
02     &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (TableName tn : tableCache) {
03       &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (Bytes.equals(tn.getQualifier(), qns) &amp;amp;&amp;amp; Bytes.equals(tn.getNamespace(), bns)) {
04         &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; tn;
05       }
06     }
07 
08     TableName newTable = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TableName(bns, qns);
09     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (tableCache.add(newTable)) {  &lt;span class=&quot;code-comment&quot;&gt;// Adds the specified element &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; it is not already present
&lt;/span&gt;10      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; newTable;
11    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
12      &lt;span class=&quot;code-comment&quot;&gt;// Someone &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; added it. Let&apos;s find it.
&lt;/span&gt;13      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (TableName tn : tableCache) {
14        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (Bytes.equals(tn.getQualifier(), qns) &amp;amp;&amp;amp; Bytes.equals(tn.getNamespace(), bns)) {
15          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; tn;
16        }
17      }
18    }
19
20    &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(newTable + &lt;span class=&quot;code-quote&quot;&gt;&quot; was supposed to be in the cache&quot;&lt;/span&gt;);
21  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here&apos;s the race:&lt;/p&gt;

&lt;p&gt;We have two concurrent calls to createTableNameIfNecessary to the same namespace (which gets wrapped and becomes bns) and table qualifier (which gets wrapped and becomes qns) &amp;#8211; ns=default and &lt;br/&gt;
tn=test in my rig&apos;s case.&lt;/p&gt;

&lt;p&gt;Thread one executes to line 08.  bns and qns are consumed by the get&apos;s in the TableName(BB,BB) constructor.&lt;br/&gt;
Thread two executes to line 08.  bns and qns are consumed by the get&apos;s in the TableName(BB,BB) constructor.&lt;br/&gt;
Thread two returns true at line 09, and exits returns newTable at line 10.&lt;br/&gt;
Thread one returns false since Thread two&apos;s TableName made it in.  It jumps and continues executing at line 12&lt;br/&gt;
Thread one&apos;s at line 14&apos;s first  Bytes.equals methods compares the byte[] tn.getQualifier against qns (which is a consumed BB, and thus has no more data on get).  This essentially always will fail.  &lt;br/&gt;
Thread one loops throw, falls out, and then throws the IllegalStateException.&lt;/p&gt;

&lt;p&gt;So anytime we get to line 14, we&apos;ll fail.  &lt;/p&gt;

&lt;p&gt;Solution is to make sure the constructor dups bns and qns before extraction the byte[]&apos;s.  Patch coming.&lt;/p&gt;
</comment>
                            <comment id="13839832" author="jmhsieh" created="Thu, 5 Dec 2013 05:16:58 +0000"  >&lt;p&gt;v2 fixes the ByteBuffer usage bugs that cause the race.&lt;/p&gt;</comment>
                            <comment id="13839836" author="jmhsieh" created="Thu, 5 Dec 2013 05:20:18 +0000"  >&lt;p&gt;This was useful. Specifically the &quot;don&apos;t consume the buffer&quot; section was applicable.&lt;br/&gt;
&lt;a href=&quot;http://worldmodscode.wordpress.com/2012/12/14/the-java-bytebuffer-a-crash-course/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://worldmodscode.wordpress.com/2012/12/14/the-java-bytebuffer-a-crash-course/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13839837" author="stack" created="Thu, 5 Dec 2013 05:28:40 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Above comment on the race made for a good read.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13839847" author="jmhsieh" created="Thu, 5 Dec 2013 06:01:13 +0000"  >&lt;p&gt;Rig came back clean.  committing to 0.96/0.98/0.99.  Not relevant to 94.&lt;/p&gt;

&lt;p&gt;Thanks for those who took a look.&lt;/p&gt;</comment>
                            <comment id="13839868" author="apurtell" created="Thu, 5 Dec 2013 06:34:07 +0000"  >&lt;p&gt;Belated +1, and that test sounds like a great candidate for a new integration test.&lt;/p&gt;</comment>
                            <comment id="13839883" author="hadoopqa" created="Thu, 5 Dec 2013 06:54:08 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12617114/hbase-10079.v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12617114/hbase-10079.v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8061//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13839971" author="hudson" created="Thu, 5 Dec 2013 09:29:56 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #4712 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4712/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4712/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10079&quot; title=&quot;Race in TableName cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10079&quot;&gt;&lt;del&gt;HBASE-10079&lt;/del&gt;&lt;/a&gt; Race in TableName cache (jmhsieh: rev 1548020)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13839974" author="hudson" created="Thu, 5 Dec 2013 09:39:27 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #864 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/864/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/864/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10079&quot; title=&quot;Race in TableName cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10079&quot;&gt;&lt;del&gt;HBASE-10079&lt;/del&gt;&lt;/a&gt; Race in TableName cache (jmhsieh: rev 1548020)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13839982" author="nkeywal" created="Thu, 5 Dec 2013 09:51:41 +0000"  >&lt;p&gt;Thanks a lot for fixing my code, Jon. I created &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10087&quot; title=&quot;Store should be locked during a memstore snapshot&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10087&quot;&gt;&lt;del&gt;HBASE-10087&lt;/del&gt;&lt;/a&gt; for the memstore part.&lt;/p&gt;</comment>
                            <comment id="13840000" author="hudson" created="Thu, 5 Dec 2013 10:30:36 +0000"  >&lt;p&gt;SUCCESS: Integrated in hbase-0.96-hadoop2 #141 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.96-hadoop2/141/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.96-hadoop2/141/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10079&quot; title=&quot;Race in TableName cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10079&quot;&gt;&lt;del&gt;HBASE-10079&lt;/del&gt;&lt;/a&gt; Race in TableName cache (jmhsieh: rev 1548018)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13840344" author="hudson" created="Thu, 5 Dec 2013 18:01:07 +0000"  >&lt;p&gt;SUCCESS: Integrated in hbase-0.96 #214 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.96/214/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.96/214/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10079&quot; title=&quot;Race in TableName cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10079&quot;&gt;&lt;del&gt;HBASE-10079&lt;/del&gt;&lt;/a&gt; Race in TableName cache (jmhsieh: rev 1548018)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13840364" author="jmhsieh" created="Thu, 5 Dec 2013 18:19:36 +0000"  >&lt;p&gt;Addendum to fix introduced javaoc violation.&lt;/p&gt;</comment>
                            <comment id="13840473" author="ndimiduk" created="Thu, 5 Dec 2013 19:39:12 +0000"  >&lt;p&gt;A little late to the party: nice once &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmhsieh&quot; class=&quot;user-hover&quot; rel=&quot;jmhsieh&quot;&gt;Jonathan Hsieh&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13840485" author="tlipcon" created="Thu, 5 Dec 2013 19:47:47 +0000"  >&lt;p&gt;Is Bytes.equals used with ByteBuffer arguments in any hot paths? You&apos;ve added a new allocation here which may be costly if so. Perhaps using the version of get() which takes an index is better in that code path?&lt;/p&gt;</comment>
                            <comment id="13840529" author="nkeywal" created="Thu, 5 Dec 2013 20:23:39 +0000"  >&lt;p&gt;I had a lot of issues when I implemented this, that led me to over optimize and then to create this bug. The new version creates less objects than the 0.96.0 one at the end, so I believe it&apos;s ok for the 0.96.1. We will need more profiling sessions unfortunately. I doubt it will appear in the radar soon...&lt;/p&gt;</comment>
                            <comment id="13840552" author="jon@cloudera.com" created="Thu, 5 Dec 2013 20:51:36 +0000"  >&lt;p&gt;it was intro&apos;ed with the tablename cache and only used there. it&apos;s also a&lt;br/&gt;
stack only allocation and should be jit-able.&lt;/p&gt;




&lt;p&gt;&amp;#8211; &lt;br/&gt;
// Jonathan Hsieh (shay)&lt;br/&gt;
// Software Engineer, Cloudera&lt;br/&gt;
// jon@cloudera.com&lt;/p&gt;</comment>
                            <comment id="13840726" author="tlipcon" created="Fri, 6 Dec 2013 00:16:19 +0000"  >&lt;p&gt;If only escape analysis actually worked &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13841090" author="hudson" created="Fri, 6 Dec 2013 08:18:43 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #4713 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4713/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4713/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10079&quot; title=&quot;Race in TableName cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10079&quot;&gt;&lt;del&gt;HBASE-10079&lt;/del&gt;&lt;/a&gt; ADDENDUM javadoc fix (jmhsieh: rev 1548228)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13841098" author="hudson" created="Fri, 6 Dec 2013 08:33:31 +0000"  >&lt;p&gt;SUCCESS: Integrated in hbase-0.96 #215 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.96/215/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.96/215/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10079&quot; title=&quot;Race in TableName cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10079&quot;&gt;&lt;del&gt;HBASE-10079&lt;/del&gt;&lt;/a&gt; ADDENDUM javadoc fix (jmhsieh: rev 1548229)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13841122" author="hudson" created="Fri, 6 Dec 2013 09:19:31 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #865 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/865/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/865/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10079&quot; title=&quot;Race in TableName cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10079&quot;&gt;&lt;del&gt;HBASE-10079&lt;/del&gt;&lt;/a&gt; ADDENDUM javadoc fix (jmhsieh: rev 1548228)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13841168" author="hudson" created="Fri, 6 Dec 2013 10:42:17 +0000"  >&lt;p&gt;SUCCESS: Integrated in hbase-0.96-hadoop2 #142 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.96-hadoop2/142/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.96-hadoop2/142/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10079&quot; title=&quot;Race in TableName cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10079&quot;&gt;&lt;del&gt;HBASE-10079&lt;/del&gt;&lt;/a&gt; ADDENDUM javadoc fix (jmhsieh: rev 1548229)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13849466" author="stack" created="Mon, 16 Dec 2013 18:46:39 +0000"  >&lt;p&gt;Released in 0.96.1.  Issue closed.&lt;/p&gt;</comment>
                            <comment id="13918362" author="clehene" created="Mon, 3 Mar 2014 18:21:39 +0000"  >&lt;p&gt;Shouldn&apos;t the affects version be 0.96.0?&lt;/p&gt;</comment>
                            <comment id="13918383" author="nkeywal" created="Mon, 3 Mar 2014 18:34:53 +0000"  >&lt;p&gt;It does not affect 96.0. It was introduced during the dev on 0.96.1 and was fixed in this version before beeing delivered.&lt;/p&gt;</comment>
                            <comment id="13918497" author="clehene" created="Mon, 3 Mar 2014 19:45:05 +0000"  >&lt;p&gt;Thanks &lt;span class=&quot;error&quot;&gt;&amp;#91;~liochon&amp;#93;&lt;/span&gt;, I removed the affects version. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12560111">HBASE-6195</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12679382">HBASE-9976</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12617058" name="10079.v1.patch" size="761" author="nkeywal" created="Wed, 4 Dec 2013 20:57:56 +0000"/>
                            <attachment id="12617208" name="hbase-10079-addendum.patch" size="532" author="jmhsieh" created="Thu, 5 Dec 2013 18:19:36 +0000"/>
                            <attachment id="12617114" name="hbase-10079.v2.patch" size="3093" author="jmhsieh" created="Thu, 5 Dec 2013 05:16:58 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 4 Dec 2013 17:35:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>361972</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 41 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1qe93:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>362267</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>