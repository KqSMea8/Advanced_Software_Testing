<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:18:50 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-16890/HBASE-16890.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-16890] Analyze the performance of AsyncWAL and fix the same</title>
                <link>https://issues.apache.org/jira/browse/HBASE-16890</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Tests reveal that AsyncWAL under load in single node cluster performs slower than the Default WAL. This task is to analyze and see if we could fix it.&lt;br/&gt;
See some discussions in the tail of JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15536&quot; title=&quot;Make AsyncFSWAL as our default WAL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15536&quot;&gt;HBASE-15536&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13013981">HBASE-16890</key>
            <summary>Analyze the performance of AsyncWAL and fix the same</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12911749">HBASE-14790</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="ram_krish">ramkrishna.s.vasudevan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Oct 2016 17:47:39 +0000</created>
                <updated>Fri, 11 Nov 2016 11:36:42 +0000</updated>
                                            <version>2.0.0</version>
                                    <fixVersion>2.0.0</fixVersion>
                                    <component>wal</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="15594058" author="ram_krish" created="Fri, 21 Oct 2016 05:00:51 +0000"  >&lt;p&gt;When we try to load 15G of data but with 50 threads and we do a profile for 1 min. We could see that in AsyncWAL case we have contention in the &apos;waitingConsumePayloads&apos; ArrayDeque. But in the default case there is not much contention as you can see in the snapshots attached. &lt;/p&gt;</comment>
                            <comment id="15595488" author="ram_krish" created="Fri, 21 Oct 2016 15:55:18 +0000"  >&lt;p&gt;Tried the following&lt;br/&gt;
-.&amp;gt; Disabled WAL roll writer in both cases. That does not help in performance.&lt;br/&gt;
-&amp;gt; Ensured we avoid that one copy from CellEncoder to BAOS and then to AsyncOutput. Ya we get some improvement here but not much.&lt;br/&gt;
-&amp;gt; bq.summer.calculateChunkedSums(buf.nioBuffer(), checksumBuf.nioBuffer(0, checksumLen));&lt;br/&gt;
In the AsyncOutput case we create direct bytebuffer. The internal impl of the DataCheckSum does not handle DBB and does internal copy to onheap byte[].&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void calculateChunkedSums(ByteBuffer data, ByteBuffer checksums) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (type.size == 0) &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
    
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (data.hasArray() &amp;amp;&amp;amp; checksums.hasArray()) {
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;coming here on onheap&quot;&lt;/span&gt;);
      calculateChunkedSums(data.array(), data.arrayOffset() + data.position(), data.remaining(),
          checksums.array(), checksums.arrayOffset() + checksums.position());
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
    }

    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (NativeCrc32.isAvailable()) {
      NativeCrc32.calculateChunkedSums(bytesPerChecksum, type.id,
          checksums, data);
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
    }
    
    data.mark();
    checksums.mark();
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;coming here &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; dbb&quot;&lt;/span&gt;);
      &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] buf = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[bytesPerChecksum];
      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (data.remaining() &amp;gt; 0) {
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; n = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.min(data.remaining(), bytesPerChecksum);
        data.get(buf, 0, n);
        summer.reset();
        summer.update(buf, 0, n);
        checksums.putInt((&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)summer.getValue());
      }
    } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
      data.reset();
      checksums.reset();
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So changed to work with onheap BB. Still not yet able to reach the perf close to Default WAL. &lt;br/&gt;
Will report back.&lt;/p&gt;</comment>
                            <comment id="15595654" author="ram_krish" created="Fri, 21 Oct 2016 16:53:01 +0000"  >&lt;p&gt;This comment in FSDataOutputStreamer&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-comment&quot;&gt;// We want &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; value to be a multiple of 3 because the &lt;span class=&quot;code-keyword&quot;&gt;native&lt;/span&gt; code checksums
&lt;/span&gt;46   &lt;span class=&quot;code-comment&quot;&gt;// 3 chunks simultaneously. The chosen value of 9 strikes a balance between
&lt;/span&gt;47   &lt;span class=&quot;code-comment&quot;&gt;// limiting the number of JNI calls and flushing to the underlying stream
&lt;/span&gt;48   &lt;span class=&quot;code-comment&quot;&gt;// relatively frequently.
&lt;/span&gt;49   &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; BUFFER_NUM_CHUNKS = 9;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Where the byte[] and checksum[] are multiples of 9. Does that have an impact here?&lt;/p&gt;</comment>
                            <comment id="15596719" author="stack" created="Fri, 21 Oct 2016 23:53:55 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; for opening this issue. Lets fix this. It must be something basic given how our current DFSClient works. Let me try and look too over w/e.&lt;/p&gt;</comment>
                            <comment id="15597123" author="stack" created="Sat, 22 Oct 2016 04:27:08 +0000"  >&lt;p&gt;I reran WALPerformanceEvaluation and here is what I got:&lt;/p&gt;

&lt;p&gt;Current&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
11697968
11697969     4204706.715579 task-clock (msec)         #    7.284 CPUs utilized
11697970         51,803,614 context-switches          #    0.012 M/sec
11697971          6,685,043 cpu-migrations            #    0.002 M/sec
11697972         18,132,994 page-faults               #    0.004 M/sec
11697973  7,791,964,493,250 cycles                    #    1.853 GHz
11697974    &amp;lt;not supported&amp;gt; stalled-cycles-frontend
11697975    &amp;lt;not supported&amp;gt; stalled-cycles-backend
11697976  1,927,527,070,105 instructions              #    0.25  insns per cycle
11697977    335,996,633,114 branches                  #   79.910 M/sec
11697978      8,301,975,795 branch-misses             #    2.47% of all branches
11697979
11697980      577.245436180 seconds time elapsed
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With async enabled&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
1596
1597     2820443.128629 task-clock (msec)         #    9.413 CPUs utilized
1598         27,279,634 context-switches          #    0.010 M/sec
1599          4,548,444 cpu-migrations            #    0.002 M/sec
1600          9,174,991 page-faults               #    0.003 M/sec
1601  6,222,195,076,963 cycles                    #    2.206 GHz
1602    &amp;lt;not supported&amp;gt; stalled-cycles-frontend
1603    &amp;lt;not supported&amp;gt; stalled-cycles-backend
1604  1,448,534,066,827 instructions              #    0.23  insns per cycle
1605    244,568,362,833 branches                  #   86.713 M/sec
1606      4,213,196,541 branch-misses             #    1.72% of all branches
1607
1608      299.621230438 seconds time elapsed
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With 100 threads, async finishes in half the time. Let me try with the server up. Here is what I ran:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; i in  100; &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; j in 1; &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; export HBASE_CLASSPATH_PREFIX=`pwd`/hbase/lib/hbase-server-1.4.0-SNAPSHOT-tests.jar ; ./hbase/bin/hbase --config conf_hbase classpath; perf stat ./hbase/bin/hbase --config /home/stack/conf_hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads $i   -iterations 250000 -keySize 50 -valueSize 100  &amp;amp;&amp;gt; &lt;span class=&quot;code-quote&quot;&gt;&quot;/tmp/wal.5.async.${i}.${j}.txt&quot;&lt;/span&gt;; done; done
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15598394" author="stack" created="Sat, 22 Oct 2016 19:59:31 +0000"  >&lt;p&gt;Sorry, I should say my test is against a cluster. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; test is against single node. Let me try that.&lt;/p&gt;</comment>
                            <comment id="15600970" author="ram_krish" created="Mon, 24 Oct 2016 05:13:09 +0000"  >&lt;p&gt;Yup . Even for me WALPE on single node was better. Not the single node actual cluster. I thought WALPE was not instantiating a DistributedFileSystem and verified it and I was wrong. It was doing the right thing.&lt;/p&gt;</comment>
                            <comment id="15600980" author="stack" created="Mon, 24 Oct 2016 05:18:44 +0000"  >&lt;p&gt;So, single node DFS? Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15600989" author="ram_krish" created="Mon, 24 Oct 2016 05:27:28 +0000"  >&lt;p&gt;Yes. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15601494" author="ram_krish" created="Mon, 24 Oct 2016 09:53:40 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;br/&gt;
Can you try with more columns?&lt;br/&gt;
I just did this &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
./hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 50 -iterations 1000000 -qualifiers 10 -keySize 50 -valueSize 200
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and more or less I got same ops/sec with Async and default.&lt;/p&gt;

&lt;p&gt;So my doubt is this -&lt;br/&gt;
In the default case every Append call was triggered and the FSDataOutputStream was doing the checkSum after summer.getBytesPerCheckSum was filled up. So the CPU time spent in summer#calculateChunkedSums() is lesser but the number of times  this getting called is more but in the AsyncWAL case every sync is performed on we do the checksum on the entire data and so the CPU time spent there is siginifcantly more?&lt;/p&gt;

</comment>
                            <comment id="15601519" author="ram_krish" created="Mon, 24 Oct 2016 10:02:54 +0000"  >&lt;p&gt;With 25000 iterations&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; wal
 Summary: threads=50, iterations=25000, syncInterval=0 took 28.384s 44038.895ops/s

async wal
  Summary: threads=50, iterations=25000, syncInterval=0 took 30.327s 41217.398ops/s

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I could see similiar output on repeated runs. Which means that when the amount of data to be checksummed is more in async wal case we do spend lot of CPU there. Is it possible to do this in a chunked way as did for bigger edits? &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;br/&gt;
Can you check this out and see if this stands valid in your case also.&lt;/p&gt;</comment>
                            <comment id="15602781" author="stack" created="Mon, 24 Oct 2016 18:17:36 +0000"  >&lt;p&gt;Ran the test with 10 columns and a single node DFS cluster. I see the async 5% faster:&lt;/p&gt;

&lt;p&gt;Classic:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
8031674  Performance counter stats &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &apos;./hbase/bin/hbase --config /home/stack/conf_hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 100 -ite        rations 250000 -keySize 50 -valueSize 100 -qualifiers 10&apos;:
8031675
8031676     5441780.264390 task-clock (msec)         #    9.846 CPUs utilized
8031677         40,118,809 context-switches          #    0.007 M/sec
8031678          6,179,887 cpu-migrations            #    0.001 M/sec
8031679         23,019,942 page-faults               #    0.004 M/sec
8031680 10,534,132,474,719 cycles                    #    1.936 GHz
8031681    &amp;lt;not supported&amp;gt; stalled-cycles-frontend
8031682    &amp;lt;not supported&amp;gt; stalled-cycles-backend
8031683  3,198,340,897,844 instructions              #    0.30  insns per cycle
8031684    546,248,857,283 branches                  #  100.381 M/sec
8031685      8,545,082,370 branch-misses             #    1.56% of all branches
8031686
8031687      552.674957713 seconds time elapsed
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Async:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
14570  Performance counter stats &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &apos;./hbase/bin/hbase --config /home/stack/conf_hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 100 -itera      tions 250000 -keySize 50 -valueSize 100 -qualifiers 10&apos;:
14571
14572     4993770.973851 task-clock (msec)         #    9.525 CPUs utilized
14573         34,198,406 context-switches          #    0.007 M/sec
14574          6,591,365 cpu-migrations            #    0.001 M/sec
14575         14,969,734 page-faults               #    0.003 M/sec
14576 10,083,281,472,992 cycles                    #    2.019 GHz
14577    &amp;lt;not supported&amp;gt; stalled-cycles-frontend
14578    &amp;lt;not supported&amp;gt; stalled-cycles-backend
14579  2,934,520,140,301 instructions              #    0.29  insns per cycle
14580    500,829,859,305 branches                  #  100.291 M/sec
14581      7,413,365,504 branch-misses             #    1.48% of all branches
14582
14583      524.262212066 seconds time elapsed
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These two WAL implementations are hard to compare since they are so different but this compare is important since it removes fanout from the compare; it should be possible to make asyncwal better than dfsclient in this case.&lt;/p&gt;</comment>
                            <comment id="15602799" author="ram_krish" created="Mon, 24 Oct 2016 18:22:53 +0000"  >&lt;p&gt;Am not sure how you take the above data. But am seeing the ops per sec that the tool prints. &lt;br/&gt;
Excuse typos&lt;/p&gt;</comment>
                            <comment id="15602833" author="stack" created="Mon, 24 Oct 2016 18:36:14 +0000"  >&lt;p&gt;Hang on.... Rerunning. I had TRACE level logging going on for DFSClient... thats not fair in compare. Sorry &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; On rerun I see this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
5610  Performance counter stats &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &apos;./hbase/bin/hbase --config /home/stack/conf_hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 100 -iterat     ions 250000 -keySize 50 -valueSize 100 -qualifiers 10&apos;:
5611
5612     4036698.163447 task-clock (msec)         #    9.891 CPUs utilized
5613         41,344,568 context-switches          #    0.010 M/sec
5614          6,909,262 cpu-migrations            #    0.002 M/sec
5615         12,455,604 page-faults               #    0.003 M/sec
5616  7,548,061,036,706 cycles                    #    1.870 GHz
5617    &amp;lt;not supported&amp;gt; stalled-cycles-frontend
5618    &amp;lt;not supported&amp;gt; stalled-cycles-backend
5619  2,788,283,330,940 instructions              #    0.37  insns per cycle
5620    480,911,981,821 branches                  #  119.135 M/sec
5621      5,351,642,769 branch-misses             #    1.11% of all branches
5622
5623      408.109482919 seconds time elapsed
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So, asyncwal is 30% slower than DFSClient#DFSOS&lt;/p&gt;</comment>
                            <comment id="15602839" author="stack" created="Mon, 24 Oct 2016 18:38:53 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt; You see Rams&apos; notes above?&lt;/p&gt;</comment>
                            <comment id="15602972" author="stack" created="Mon, 24 Oct 2016 19:35:23 +0000"  >&lt;p&gt;Looking at the histograms, if to be believed, then we are sync&apos;ing more in asyncwal; less aggregation.  That synchronize on payloads will be popular. Looks like plenty of opportunity for speedup. Want to put up a patch w/ yours so far &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="15603867" author="apache9" created="Tue, 25 Oct 2016 01:47:17 +0000"  >&lt;p&gt;The DFSOutputStream works like this&lt;/p&gt;

&lt;p&gt;1. Copy data into the buf in FSOutputSummer&lt;br/&gt;
2. If the size exceeds limit(checksumChunkSize * BUFFER_NUM_CHUNKS), then compute the checksum and call writeChunk method in DFSOutputStream&lt;br/&gt;
3. Serialize the chunk data into currentPacket field in DFSOutputStream.&lt;br/&gt;
4. When flushing, compute the checksum of the remaining data in buf if any, call writeChunk, and then write the currentPacket out.&lt;/p&gt;

&lt;p&gt;And for FanOutOneBlockAsyncDFSOutput, the processing is straight forward. Buffer all data in buf, and do all other things such as compute checksum, construct packet when flushing.&lt;/p&gt;

&lt;p&gt;I do not think this will cause much difference unless we write very large data at the same time that we maybe blocked in the JNI call for a long time which has some bad impact on gc.&lt;/p&gt;</comment>
                            <comment id="15603895" author="apache9" created="Tue, 25 Oct 2016 02:02:03 +0000"  >&lt;p&gt;In my opinion, there are two things may impact performance a lot. One is the contention when append as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; said, and the second is the aggregation of sync request as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; said.&lt;/p&gt;

&lt;p&gt;The former one is hard to optimize as we have some other logics in the critial section, it is not only a queue offering...&lt;/p&gt;

&lt;p&gt;The latter one is a trade off between latency and throughput. I have already done the aggregation work in the consumer of AsyncFSWAL so first we need to confirm that it works correctly... And second, if we add some delay before the actual sync, it may help increasing the throughput. This is a common tech to increase throughput by also increasing latency. Of course, it does not always increase latency. Here sync is a heavy operation, so choosing a suitable delay may also decrease the latency. I think we could have a try.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15603977" author="ram_krish" created="Tue, 25 Oct 2016 02:52:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;Which means that when the amount of data to be checksummed is more in async wal case we do spend lot of CPU there.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;. See my previous comment. It is sync that is heavy now. Previously the amount of data to be synced was less in size and once the required size was reached we handed it over to the dfs client to queue those synced data to form the packet header. Am still to read this part of code but i just got inputs from HDFS guys here. &lt;br/&gt;
Now the amount of data to be synced is much bigger and I feel the CPU spends more time there.&lt;br/&gt;
The append synchronization cost I think is something we cannot avoid because that is where we sync the append/sync operations and the consumer uses that lock to actual do the consumption logic.&lt;br/&gt;
[~saint.ack&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;br/&gt;
I have few patches to directly copy to Asyncoutput (it is hacky for now).&lt;br/&gt;
Next is to use onheap buffers instead of DBB because the checkSum calculation API does not deal with DBB directly.&lt;br/&gt;
But before that let me finish the hadoop code and the logic here to actually calculate the checksum.&lt;/p&gt;</comment>
                            <comment id="15603988" author="apache9" created="Tue, 25 Oct 2016 02:59:17 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Next is to use onheap buffers instead of DBB because the checkSum calculation API does not deal with DBB directly.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Really? I think the native part is used to deal with DBB?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (data.hasArray() &amp;amp;&amp;amp; checksums.hasArray()) {
      calculateChunkedSums(data.array(), data.arrayOffset() + data.position(), data.remaining(),
          checksums.array(), checksums.arrayOffset() + checksums.position());
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
    }

    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (NativeCrc32.isAvailable()) {
      NativeCrc32.calculateChunkedSums(bytesPerChecksum, type.id,
          checksums, data);
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="15603994" author="apache9" created="Tue, 25 Oct 2016 03:01:56 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Now the amount of data to be synced is much bigger and I feel the CPU spends more time there.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;But the total data does not increase right? So the total time we spends on calucating checksum will not increase either? Or increase? Why?&lt;/p&gt;</comment>
                            <comment id="15604156" author="ram_krish" created="Tue, 25 Oct 2016 04:36:27 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (NativeCrc32.isAvailable()) {
      NativeCrc32.calculateChunkedSumsByteArray(bytesPerChecksum, type.id,
          sums, sumsOffset, data, dataOffset, dataLength);
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I see. I thought this is a NativeCrc32 that needs to be available in my system. And I was not sure if that was working for me. I can verify that once. But if that works then DBB is not an issue. Thanks @Duo.&lt;/p&gt;</comment>
                            <comment id="15604192" author="ram_krish" created="Tue, 25 Oct 2016 04:57:20 +0000"  >&lt;p&gt;I just verified. So it does go to this piece of code&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
data.mark();
    checksums.mark();
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] buf = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[bytesPerChecksum];
      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (data.remaining() &amp;gt; 0) {
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; n = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.min(data.remaining(), bytesPerChecksum);
        data.get(buf, 0, n);
        summer.reset();
        summer.update(buf, 0, n);
        checksums.putInt((&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)summer.getValue());
      }
    } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
      data.reset();
      checksums.reset();
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So may be I don&apos;t have the native library in my system. &lt;/p&gt;</comment>
                            <comment id="15604204" author="apache9" created="Tue, 25 Oct 2016 05:03:18 +0000"  >&lt;p&gt;But I think we should be able to load the libhadoop.so when testing performance?&lt;/p&gt;</comment>
                            <comment id="15604211" author="stack" created="Tue, 25 Oct 2016 05:04:58 +0000"  >&lt;p&gt;Yeah, I&apos;d think same amount of data. We used to do bulk of checksum calculation at append time rather than inline w/ the sync call. That might make a difference.&lt;/p&gt;

&lt;p&gt;Was looking at the async provider trying to relate our new concurrency model to the old. It is not a simple mapping. We need to guard the EventLoop and currently it is w/ the broad synchronize on a Q (DFSClient#DFSOS has all go via synchronized Q too but less work done inside the synchronize). We should be able to do better but would take a bit of study (You did a load of work in here &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt; &amp;#8211; smile).&lt;/p&gt;


</comment>
                            <comment id="15604232" author="apache9" created="Tue, 25 Oct 2016 05:17:32 +0000"  >&lt;p&gt;There is no contention for the synchronization in DFSClient#DFSOS for our FSHLog. We always call it in the consumer thread of Disruptor...&lt;/p&gt;

&lt;p&gt;The payload queue in AsyncFSWAL acts as the ringbuffer in FSHLog.&lt;/p&gt;

&lt;p&gt;And I still do not think calculate checksum when syncing cause any difference. For both FSHLog and AsyncFSWAL, the append and sync are executed in one thread, no concurrency at all. The FSHLog.append only puts the WALEntry into the ringbuffer, not appends it to DFSClient#DFSOS. It does not make sense that calcuate the checksum of a big piece of data chunk by chunk could be faster? The calculated amount does not change I think?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15604235" author="ram_krish" created="Tue, 25 Oct 2016 05:18:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;We used to do bulk of checksum calculation at append time rather than inline w/ the sync call. That might make a difference.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think so this is the case.&lt;br/&gt;
I have installed the hadoop code to read it. Thanks Stack for the help here. I think I can also share my inputs here.&lt;/p&gt;</comment>
                            <comment id="15604261" author="apache9" created="Tue, 25 Oct 2016 05:31:26 +0000"  >&lt;p&gt;The only possible way that AsyncFSWAL does more work on checksuming is that, it syncs more than FSHLog. The packets sent to datanode need to be aligned with checksum boundary. So if the data is not aligned, we will copy the unaligned data to the beginning of the buffer and its checksum will be calucated again next time. So if AsyncFSWAL syncs more, it is more likely that the checksum of the same piece of data will also be calculated more times.&lt;/p&gt;</comment>
                            <comment id="15604276" author="ram_krish" created="Tue, 25 Oct 2016 05:37:54 +0000"  >&lt;p&gt;Yes the check sum alignment could be a problem because in Dfsclient case i think there is some way to align the data before actually cerating the packet header to be written to DN. Will be back here after some code reading.&lt;/p&gt;</comment>
                            <comment id="15604290" author="apache9" created="Tue, 25 Oct 2016 05:45:17 +0000"  >&lt;p&gt;No magic.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; flushBuffer(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; keep,
      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; flushPartial) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; bufLen = count;
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; partialLen = bufLen % sum.getBytesPerChecksum();
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; lenToFlush = flushPartial ? bufLen : bufLen - partialLen;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (lenToFlush != 0) {
      writeChecksumChunks(buf, 0, lenToFlush);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!flushPartial || keep) {
        count = partialLen;
        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.arraycopy(buf, bufLen - count, buf, 0, count);
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
        count = 0;
      }
    }

    &lt;span class=&quot;code-comment&quot;&gt;// total bytes left minus unflushed bytes left
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; count - (bufLen - lenToFlush);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And in DFSOutputStream.flushOrSync&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-comment&quot;&gt;// flush checksum buffer, but keep checksum buffer intact &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; not
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// need to end the current block
&lt;/span&gt;        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; numKept = flushBuffer(!endBlock, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Just a simple copy...&lt;/p&gt;</comment>
                            <comment id="15605707" author="stack" created="Tue, 25 Oct 2016 16:05:43 +0000"  >&lt;blockquote&gt;&lt;p&gt;There is no contention for the synchronization in DFSClient#DFSOS for our FSHLog. We always call it in the consumer thread of Disruptor...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In FSHLog there is the consumer thread of Disruptor plus five syncer threads all banging on DFSClient#DFSOS.&lt;/p&gt;

</comment>
                            <comment id="15605994" author="ram_krish" created="Tue, 25 Oct 2016 18:01:06 +0000"  >&lt;p&gt;Some updates here. Read the code and discussed internally on how things work. Need to do some verification in cluster tomorrow. Will report back. MAy be what i think is that&lt;br/&gt;
In FSHLog case once the data was equal to (512 * 9) bytes we were flushing the buffer and that flush was resulting in a chunk packet ( which is part of the bigger chunk 64K). So only when the sync is called we may end up in non-aligned chunks. &lt;br/&gt;
All this happens on the dfs client side. &lt;br/&gt;
On the DN side when it sees the unaligned block it tries to overwrite the CRC of the current block with the previous block CRC. Now in the FSHLog case we may get only the one chunk packet as unaligned per sync call.&lt;br/&gt;
But in case of AsyncHLog every packet we generate will mostly be unaligned and so the DN needs to do the extra work of overwriting the CRC every time. This is what I see from code but let me profile the DN also to verify. I may be wrong. Will come back here. From HBase side profiling not much is revealed as per my tests.&lt;/p&gt;</comment>
                            <comment id="15606423" author="stack" created="Tue, 25 Oct 2016 20:40:20 +0000"  >&lt;p&gt;I did a primitive compare with 100 threads, 10 columns on WALPE. The classic FSHLog in JFR shows a few instances of FSOutputSummer#write and DFSOS#flushOrSync in samples (7 and 3 respectively). The asyncwal by contrast has two orders of magnitude more points of contention showing up in samples at append and sync (900 and 200). The sync on waitingConsumePayloads is a throughput killer.&lt;/p&gt;</comment>
                            <comment id="15606424" author="stack" created="Tue, 25 Oct 2016 20:40:33 +0000"  >&lt;p&gt;I did a primitive compare with 100 threads, 10 columns on WALPE. The classic FSHLog in JFR shows a few instances of FSOutputSummer#write and DFSOS#flushOrSync in samples (7 and 3 respectively). The asyncwal by contrast has two orders of magnitude more points of contention showing up in samples at append and sync (900 and 200). The sync on waitingConsumePayloads is a throughput killer.&lt;/p&gt;</comment>
                            <comment id="15606735" author="apache9" created="Tue, 25 Oct 2016 23:01:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; But AsyncFSWAL will not do flushing unless you call the flush method. So the problem is still what I said above, AsyncFSWAL may flush more. Otherwise there is no difference.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15606750" author="apache9" created="Tue, 25 Oct 2016 23:08:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; I think a simple way to avoid the contention is to use a disruptor in front of the old logic. This will need one more thread. But do you guys really think we should do optimizations based on the one node result? In a production we will write at least three node?&lt;/p&gt;</comment>
                            <comment id="15606785" author="stack" created="Tue, 25 Oct 2016 23:24:57 +0000"  >&lt;p&gt;The disruptor consumer thread would feed the eventloop? Could. Another thought was just collect the appends and not assign the trans id until we are going to sync since that is when we add the edit to the WAL and given that the write path is different in master &amp;#8211; we don&apos;t update memstore until after sync has come home &amp;#8211; then this could work.&lt;/p&gt;

&lt;p&gt;One node is bringing out the fact that asyncfswal currently does not run as free as dfsclient#dfsos and the latter is friction-full with its packet-stutter. You&apos;ve made it so it is easy to work on this now. No rush &amp;#8211; asyncwal is better than dfsclient in a couple of regards &amp;#8211; but yeah, lets make it so asyncwal blows away dfsclient any way you look at it.&lt;/p&gt;</comment>
                            <comment id="15607074" author="apache9" created="Wed, 26 Oct 2016 01:55:01 +0000"  >&lt;p&gt;And could JFR print out the time spent in the critical section for each thread?&lt;/p&gt;

&lt;p&gt;I wonder the problem is the consumer thread does too much work under the protection of waitingConsumePayloads.&lt;/p&gt;</comment>
                            <comment id="15607172" author="stack" created="Wed, 26 Oct 2016 02:40:24 +0000"  >&lt;p&gt;Here are some flame graphs of classic vs async. We are in consume a good while of the cpu spent.&lt;/p&gt;

&lt;p&gt;Screenshot shows call tree in JFR for same async.svg period.&lt;/p&gt;

&lt;p&gt;These are time spent when sampling. Hard to get a good handle on synchronize/lock friction. One view is if an item shows up frequently in the thread contention view. Again we are sampling so if it shows here my thinking is that it must be a pain point (JFR does the unsafe safe point sampling so its view is a bit closer to what is going on). I include two images from same jfr compares of the contention windows for async and classic.&lt;/p&gt;</comment>
                            <comment id="15607175" author="stack" created="Wed, 26 Oct 2016 02:41:50 +0000"  >&lt;p&gt;I can spend some time on this if you want. Just say.&lt;/p&gt;</comment>
                            <comment id="15607210" author="apache9" created="Wed, 26 Oct 2016 02:52:24 +0000"  >&lt;p&gt;I think consume method does the main work here so it is reasonable that it spent lots of cpu time. And the contention, maybe I could use the RingBuffer of Disruptor to reduce the time spent in critical section. Will try later.&lt;/p&gt;</comment>
                            <comment id="15607473" author="ram_krish" created="Wed, 26 Oct 2016 05:22:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;The disruptor consumer thread would feed the eventloop? Could. Another thought was just collect the appends and not assign the trans id until we are going to sync since that is when we add the edit to the WAL and given that the write path is different in master &#8211; we don&apos;t update memstore until after sync has come home &#8211; then this could work.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;For doing the second one then it means we can&apos;t create a FSWALEntry till we do the sync and we need to carry the edits upto the sync part. &lt;br/&gt;
The first one I think is doable. As I said since we don&apos;t go with disruptor we need a sequence generator and since &apos;waitingConsumePayloads&apos; acts as the critical section for the consumer - we need to do a sync for getting unique txids. Now may be we can add a disruptor and onEvent of the disruptor we can hand over to the eventLoop?&lt;br/&gt;
But there is context switch here and one thread handing over to the other. I can work on these two. &lt;br/&gt;
So we can first check the disruptor way or the append way?&lt;br/&gt;
Thanks Stack for your tests. Even myy JFR report had the contention issue but I felt that sync and CRC update was &lt;b&gt;also&lt;/b&gt; taking more time than the FSHLog (classic) case. &lt;/p&gt;</comment>
                            <comment id="15607505" author="stack" created="Wed, 26 Oct 2016 05:38:02 +0000"  >&lt;p&gt;Let me try a &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt; suggestion of a version that is sloppy synchronizing and see if we get the expected speedup. I&apos;ll be back.&lt;/p&gt;</comment>
                            <comment id="15607512" author="ram_krish" created="Wed, 26 Oct 2016 05:42:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;br/&gt;
Can I check the disruptor way to reduce synchronization overhead? If am not able to get to it I shall tell you.&lt;br/&gt;
Just telling before you put in your time in that?&lt;/p&gt;</comment>
                            <comment id="15607532" author="stack" created="Wed, 26 Oct 2016 05:55:07 +0000"  >&lt;p&gt;Let me try the sloppy way first. Maybe the synchronizes are not the problem &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15607691" author="ram_krish" created="Wed, 26 Oct 2016 07:15:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;And second, if we add some delay before the actual sync, it may help increasing the throughput. This is a common tech to increase throughput by also increasing latency.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;By sloppy way you mean the above technique that &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt; mentioned?&lt;/p&gt;</comment>
                            <comment id="15608401" author="ram_krish" created="Wed, 26 Oct 2016 13:08:07 +0000"  >&lt;p&gt;Some update from my side. I tried the disruptor way of handing over the Payload to the waitingConsumePayloads instead of adding it to the waitingConsumePayloads in append/sync method. Am able to get 11% increase in throughput with AsyncWAL with WALPE tool.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;/hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 100 -iterations 25000 -qualifiers 25 -keySize 50 -valueSize 200 &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So with classic FSHLog it takes ~26000 ops/sec and with AsyncWAL it takes ~29500 to 30000 ops/sec.&lt;br/&gt;
The impl is simple but we have one problem which I solved in a hacky way.&lt;br/&gt;
In case of FSHLog we do generate a sequence number from the ring buffer for both append and sync. And when we have a sync RingBufferTruck (RBT) we do take that as the currentSequence number and update the highestSyncedTxid to that sequence and the remaining syncfutures are checked if they are lesser than this currentSequence and only then mark it is done. So here the updation of highestSyncedTxid  is actually done by the sync call.&lt;/p&gt;

&lt;p&gt;But in case of AsyncWAL we have a case that the highestSyncedTxid  is also updated only after we manually call a sync and also that sync is called on the last appended txid.  What ever syncFuture was added for the sync call that is just to iterate and decide whether any of the sync txid is less than the last appened txid and if so mark it as done. Here we are sure that the sequenceId for the sync call is going to be one of them that was used for append.&lt;br/&gt;
For the RingBuff type that is not possible if for sync also we just  create a sequence id. So the above logic will not mark the last sync call as done because the there is no append call matching this sync&apos;s sequence id.&lt;/p&gt;

&lt;p&gt;I did a hack (since I was running with PE only). It was nothing but if the syncFuture had any sync call with txid that was one greater than the last appended txid I just marked it as done. It is a big hack but still works for our case so that the WALPE gets completed. Else it hangs on the last sync call.&lt;/p&gt;</comment>
                            <comment id="15609029" author="ram_krish" created="Wed, 26 Oct 2016 17:06:44 +0000"  >&lt;p&gt;I profiled the code after this change and that heavy synchronization penalty is not there. It requires further tests in actual cluster and will report back.&lt;/p&gt;</comment>
                            <comment id="15609678" author="stack" created="Wed, 26 Oct 2016 21:08:40 +0000"  >&lt;p&gt;I think your ringbuffer hack &apos;proves&apos; that the synchronization is the throughput killer; i.e. you did the sloppy test I was talking of doing above. Good. &lt;/p&gt;

&lt;p&gt;I suggest that now we take a step back. There are three Qs, a txid accounting and a netty eventloop that can&apos;t be blocked when running the asyncwal. There is also a means of carrying unsync&apos;d appends from one WAL to another if a WAL goes unresponsive, a feature we&apos;d like to keep (Another &apos;feature&apos; of asyncwal that we don&apos;t have in FSHLog is some size accounting so if N bytes of appends, sync regardless....we should keep this too, something current FSHLog can&apos;t do because it intentionally lets appends and sync run independent of each other). &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt; has undone a bunch of moving parts. Lets be parsimonious about what we put back. Can you post your &apos;hack&quot; I&apos;d like to see it.&lt;/p&gt;

&lt;p&gt;On txid, its the ringbuffer txid in FSHLog &amp;#8211; so syncs get their own &amp;#8211; but in asyncwal, txid is run independently. Any sense of how many syncs you were aggregating in your tests? asyncwal seems to do about half of what ringbuffer was doing for whatever reason. More aggregating is better but not so much as to &apos;hold&apos; tens of handlers from doing anything else (a problem that comes of Handler threads doing request start to finish rather than SEDA model &amp;#8211; a different issue).&lt;/p&gt;

</comment>
                            <comment id="15610351" author="apache9" created="Thu, 27 Oct 2016 01:57:45 +0000"  >&lt;p&gt;I have some ideas on reducing the contentions in append and sync by using the RingBuffer in disruptor without introducing a new thread. Will prepare a patch when I have time. We can test it along with ram&apos;s patch to see which one is better.&lt;/p&gt;</comment>
                            <comment id="15610751" author="stack" created="Thu, 27 Oct 2016 05:38:25 +0000"  >&lt;p&gt;Why keep us in suspense? What you thinking sir?&lt;/p&gt;</comment>
                            <comment id="15610783" author="ram_krish" created="Thu, 27 Oct 2016 05:52:54 +0000"  >&lt;p&gt;Creates a disruptor thread and hands over the Payload to the eventloop in the &apos;onEvent&apos; method of the disruptor. &lt;br/&gt;
A big hack is there in finishSync() because of the fact that the sequence id created for sync is unique from what  was created for append. Corner cases and any even of failure - I need to check them but those are not there in this patch. &lt;/p&gt;</comment>
                            <comment id="15610784" author="apache9" created="Thu, 27 Oct 2016 05:53:09 +0000"  >&lt;p&gt;Oh, sorry. The motivation is to reduce the locking time. I think the heaviest operation when holding lock is offer and poll from queue, so I think we can use a lock-free queue and move the offer and poll operations outside the lock. And the ringbuffer sequence could also be used as txid.&lt;/p&gt;

&lt;p&gt;But I&apos;m not sure if it could perform better than ram&apos;s patch as here we still have lots of threads that acquire the lock. In general, if the operation under lock could be run very fast, then the synchronization will perform like a spinlock which does not cause context switch.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15610797" author="ram_krish" created="Thu, 27 Oct 2016 05:57:44 +0000"  >&lt;p&gt;Just posting as per Stack request to what was done.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;There is also a means of carrying unsync&apos;d appends from one WAL to another if a WAL goes unresponsive, a feature we&apos;d like to keep (Another &apos;feature&apos; of asyncwal that we don&apos;t have in FSHLog is some size accounting so if N bytes of appends, sync regardless....we should keep this too, something current FSHLog can&apos;t do because it intentionally lets appends and sync run independent of each other).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok. Agree. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Any sense of how many syncs you were aggregating in your tests?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Am not sure how to account for this in particular. The JFR reports says most of the time is spent in checksum as part of the sync call in case AsyncWAL but other than that I am not sure specifically how to see that. But I got your intention out here. &lt;br/&gt;
And one reason what I see there is a speed up in my case is that because of the hack I intentionally come out of wait for some of the syncs than it was doing previously. But that should not be major the factor for the gain here.&lt;/p&gt;</comment>
                            <comment id="15610823" author="anoop.hbase" created="Thu, 27 Oct 2016 06:10:35 +0000"  >&lt;p&gt;You mentioned abt the checksum calc is doing an on heap copy. AsyncWAL passes a DBB for this. And the system under test was not having native CRC.  So how abt ur new tests? U changed so as to pass HBB? Or u make suer native crc libs present?&lt;/p&gt;</comment>
                            <comment id="15610832" author="ram_krish" created="Thu, 27 Oct 2016 06:14:48 +0000"  >&lt;p&gt;for this test I did not apply any other patch other than the above patch. Those things are actually not the real killers. But for our offheap thing to work yes we surely need to do some change in the AsyncWALProtbufWriter#append  part. And I don&apos;t have the lib with me so things are working by creating temp buffers only. If we do all those we can reduce some more garbage.&lt;/p&gt;</comment>
                            <comment id="15614568" author="ram_krish" created="Fri, 28 Oct 2016 07:10:14 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;br/&gt;
What do you think of the patch? do you think the above approach will have some problems. That hack to sync all needs to be solved which in turn may require some changes on the 3 points that Stack highlighted which are the main benefits of this patch?&lt;br/&gt;
I can work on that after I get some feedback on the approach.&lt;/p&gt;</comment>
                            <comment id="15622839" author="ram_krish" created="Mon, 31 Oct 2016 17:45:52 +0000"  >&lt;p&gt;In my previous patch other than that hack, I felt there is another problem. Since we synchronize on waitingConsumePayloads in the onEvent() method. Though the onEvent() occurs for every sequence because of synchronize that is there we will be having a situation where&lt;br/&gt;
Seq number 100, 101, 102, 103 wait to enter synchronize and it so happens that 103, 102 and 101 is the sequence. Now which means the append that we do will have a reverse sequence which is not right. So there could be a chance that the highestSyncId could get a value lesser than the previous one and that is not correct.  Previously there is no such problem as the nextTxid is what was getting used and that was an increasing long value.&lt;br/&gt;
I have a way to solve the problem. On append() call generate a sequence but do not create the fSWALEntry with that sequence. Instead just pass on the required things to form the FSWALEntry and when the onEvent() occurs create a FSWALEntry by incrementing the &apos;nextTxid&apos; inside the synchronize block of &apos;waitingConsumePayloads &apos;.&lt;br/&gt;
For the SyncFuture thing the ugly thing is the SyncFuture that is created with the ring buffer sequence, we will update the txid in the SyncFuture by subtracting 1 from nextTxid and rest works as before. &lt;br/&gt;
This model works better than the current AsyncWAL model. Any feedback?&lt;/p&gt;</comment>
                            <comment id="15624851" author="apache9" created="Tue, 1 Nov 2016 09:04:17 +0000"  >&lt;p&gt;Use RingBuffer to remove the locks in append and sync.&lt;/p&gt;</comment>
                            <comment id="15624852" author="apache9" created="Tue, 1 Nov 2016 09:04:38 +0000"  >&lt;p&gt;Let&apos;s try the patch.&lt;/p&gt;</comment>
                            <comment id="15624880" author="apache9" created="Tue, 1 Nov 2016 09:15:08 +0000"  >&lt;p&gt;The basic idea is&lt;/p&gt;

&lt;p&gt;1. It is harmless to schedule redundant consumer task.&lt;br/&gt;
2. We will not schedule consumer task if already scheduled. This could be achieved by using compareAndSet on an AtomicBoolean.&lt;br/&gt;
3. If no lock, then data race may occur when we set consumerScheduled to false. This could be solved by check-&amp;gt;setFalse-&amp;gt;recheck.&lt;br/&gt;
4. writerBroken, waitingRoll can only be changed in consume thread and They are not very important for append and sync, so I make them volatile and acess them in append and sync directly. In waitForSafePoint and consume, they are still accessed under the protection of lock.&lt;/p&gt;</comment>
                            <comment id="15624894" author="ram_krish" created="Tue, 1 Nov 2016 09:18:42 +0000"  >&lt;p&gt;I am just attaching the patch that handles the positive cases. For sequence number generation I need to see if there is any better way rather than we assigning the txid again. Infact SyncFuture logic of setting the txid is not so nice. So idea is we use ring buffer sequnce to publish but we generate our txid in the onEvent() methods. I could see the same performance with what I got with the first patch.&lt;/p&gt;</comment>
                            <comment id="15624896" author="ram_krish" created="Tue, 1 Nov 2016 09:19:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;&lt;br/&gt;
I think you too have attached a patch here. Let me check that also. &lt;/p&gt;</comment>
                            <comment id="15624913" author="apache9" created="Tue, 1 Nov 2016 09:28:46 +0000"  >&lt;p&gt;And there is another difference is that, we will not increase txid when syncing in the old implementation. But now, we just use the sequence of RingBuffer as txid, so a sync request will also increase the txid. So we need a new algorithm to determine if a sync has already been finished.&lt;/p&gt;

&lt;p&gt;The new logic is in the AsyncFSWAL.finishSync method. It works like this&lt;/p&gt;

&lt;p&gt;1. If highestSyncedTxid is less than highestProcessedAppendTxid, then works like the old way, only finish sync request whose txid is less than highestSyncedTxid because we still have unacked appends.&lt;br/&gt;
2. If highestSyncedTxid is greater than or equal to highestProcessedAppendTxid, it means that all outstanding appends have been acked.&lt;br/&gt;
  a. waitingAppendEntries is also empty. This means there is no append before all the sync request we currently track, so just finish them all, and increase highestSyncedTxid  if possible.&lt;br/&gt;
  b. waitingAppendEntries is not empty. Let lowestUnprocessedAppendTxid = &quot;the txid of the first append in waitingAppendEntries&quot;, then we can make sure that, there is no append between (highestProcessedAppendTxid, lowestUnprocessedAppendTxid), so we can finish all the sync request in this range, and set highestSyncedTxid to lowestUnprocessedAppendTxid - 1.&lt;/p&gt;

&lt;p&gt;I tried TestAsyncFSWAL.testSyncNoAppend locally. The algorithm here works well.&lt;/p&gt;</comment>
                            <comment id="15624920" author="apache9" created="Tue, 1 Nov 2016 09:32:57 +0000"  >&lt;p&gt;Yes I think set txid in the event handler will be easier as we can use the old logic as much as possible.&lt;/p&gt;</comment>
                            <comment id="15624925" author="apache9" created="Tue, 1 Nov 2016 09:35:39 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Seq number 100, 101, 102, 103 wait to enter synchronize and it so happens that 103, 102 and 101&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In general I think we should use only one thread to pull data out of the RingBuffer?&lt;/p&gt;</comment>
                            <comment id="15624938" author="ram_krish" created="Tue, 1 Nov 2016 09:41:29 +0000"  >&lt;p&gt;In this patch I attached I have just reused the old logic. And should be fine. But the only problem is updating the txid of the sync future because we create it with a txid.&lt;/p&gt;</comment>
                            <comment id="15624948" author="ram_krish" created="Tue, 1 Nov 2016 09:45:06 +0000"  >&lt;p&gt;It is pulled by only one thread but in my first patch, in RBT&apos;s onEvent()&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
       &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (waitingConsumePayloads) {
+        waitingConsumePayloads.addLast(payload);
       }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I was adding the payLoad inside the synchronized block. So though the onEvent was triggered sequentially but who enters the synchronized block could change. So I thought there could a change in sequence when it is added to waitingConsumePayloads. So 100, 101 and 102 could become 102, 100, 101. Or is it RBT itself calls onEvent one by one only and only if the current onEvent is done then the next onEvent happens?  I have to read that documentation of RBT. But I think it is going to be parallel. Will verify.&lt;/p&gt;</comment>
                            <comment id="15625019" author="apache9" created="Tue, 1 Nov 2016 10:18:18 +0000"  >&lt;p&gt;I think it will call onEvent one by one if you only have one thread.&lt;/p&gt;</comment>
                            <comment id="15625050" author="ram_krish" created="Tue, 1 Nov 2016 10:25:52 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.disruptor = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Disruptor&amp;lt;Payload&amp;gt;(Payload.EVENT_FACTORY, preallocatedEventCount,
+        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.appendExecutor, ProducerType.MULTI, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BlockingWaitStrategy());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What does this do? Multiple threads or single?&lt;/p&gt;</comment>
                            <comment id="15625062" author="apache9" created="Tue, 1 Nov 2016 10:30:15 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.disruptor.handleEventsWith(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RingBufferEventHandler[] { &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.ringBufferEventHandler });
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think one event handler will only be called by one thread, so if you only have one event handler then it will only have one thread.&lt;/p&gt;</comment>
                            <comment id="15625082" author="apache9" created="Tue, 1 Nov 2016 10:38:33 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; Could you guys test the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16890&quot; title=&quot;Analyze the performance of AsyncWAL and fix the same&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16890&quot;&gt;HBASE-16890&lt;/a&gt;-remove-contention patch? I have removed all the locks in append and sync so contention should not be a big problem.&lt;/p&gt;

&lt;p&gt;And I tried locally it could pass all the WAL related tests, and I also tried some other tests that need to write WAL, it all passed.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15625093" author="ram_krish" created="Tue, 1 Nov 2016 10:41:54 +0000"  >&lt;p&gt;Then no problem I think. Still my 2nd patch will be using the same old logic only just that it uses the Ringbufferhandler to publish the event but does not use that seq for the txid.&lt;/p&gt;</comment>
                            <comment id="15625173" author="hadoopqa" created="Tue, 1 Nov 2016 11:24:06 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 3 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 30s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 37s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 52s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 15s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 50s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 30s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 52s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 41s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 41s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 46s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 29m 37s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 1m 57s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 28s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 92m 7s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 135m 3s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; FindBugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; module:hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  org.apache.hadoop.hbase.regionserver.wal.AsyncFSWAL.waitForSafePoint() does not release lock on all exception paths  At AsyncFSWAL.java:on all exception paths  At AsyncFSWAL.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;line 696&amp;#93;&lt;/span&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Timed out junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestHCM &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestCloneSnapshotFromClientWithRegionReplicas &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestMobSnapshotCloneIndependence &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12836313/HBASE-16890-remove-contention.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12836313/HBASE-16890-remove-contention.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16890&quot; title=&quot;Analyze the performance of AsyncWAL and fix the same&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16890&quot;&gt;HBASE-16890&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux acae08caeff7 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / 26cbe44 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.8.0_101 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4263/artifact/patchprocess/new-findbugs-hbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4263/artifact/patchprocess/new-findbugs-hbase-server.html&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4263/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4263/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4263/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4263/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4263/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4263/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4263/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4263/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15625222" author="hadoopqa" created="Tue, 1 Nov 2016 11:49:10 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch doesn&apos;t appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 12s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 37s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 46s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 42s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 28s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 49s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 37s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 37s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 48s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch has 6 line(s) that end in whitespace. Use git apply --whitespace=fix. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 28m 15s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 50s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 26s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 99m 25s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 140m 10s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Failed junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.regionserver.wal.TestSecureAsyncWALReplay &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.regionserver.wal.TestAsyncWALReplay &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.regionserver.wal.TestAsyncLogRollPeriod &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.regionserver.wal.TestAsyncWALReplayCompressed &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.regionserver.TestHRegionWithInMemoryFlush &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.regionserver.wal.TestAsyncLogRolling &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Timed out junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.wal.TestSecureWAL &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.regionserver.wal.TestAsyncFSWAL &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.wal.TestBoundedRegionGroupingStrategy &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.master.procedure.TestRestoreSnapshotProcedure &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.regionserver.wal.TestDurability &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.master.procedure.TestTruncateTableProcedure &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.master.procedure.TestMasterProcedureWalLease &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12836316/AsyncWAL_disruptor_1%20%282%29.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12836316/AsyncWAL_disruptor_1%20%282%29.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16890&quot; title=&quot;Analyze the performance of AsyncWAL and fix the same&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16890&quot;&gt;HBASE-16890&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux b4a2cd1cb931 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / 26cbe44 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.8.0_101 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; whitespace &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4265/artifact/patchprocess/whitespace-eol.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4265/artifact/patchprocess/whitespace-eol.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4265/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4265/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4265/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4265/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4265/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4265/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4265/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4265/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15625298" author="apache9" created="Tue, 1 Nov 2016 12:24:11 +0000"  >&lt;p&gt;The findbugs warning is not very critical as the ringbuffer publish is not likely to fail.. I should use two try-finally block, one for consumeLock and one for ringbuffer. Easy to fix.&lt;/p&gt;</comment>
                            <comment id="15625592" author="ram_krish" created="Tue, 1 Nov 2016 14:39:45 +0000"  >&lt;p&gt;The failure above is due to a silly issue. Will update patch later tomorrow.&lt;/p&gt;</comment>
                            <comment id="15627448" author="apache9" created="Wed, 2 Nov 2016 02:43:10 +0000"  >&lt;p&gt;Fix the findbugs warnings.&lt;/p&gt;

&lt;p&gt;And fix the scheduleTask logic in doReplaceWriter.&lt;/p&gt;</comment>
                            <comment id="15627722" author="hadoopqa" created="Wed, 2 Nov 2016 04:51:41 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 18s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 3 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 29s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 34s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 45s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 45s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 26s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 45s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 50s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 29m 52s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 2m 23s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 79m 21s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 21s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 122m 51s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Failed junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.replication.TestSerialReplication &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Timed out junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestHCM &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestCloneSnapshotFromClientWithRegionReplicas &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestMobSnapshotCloneIndependence &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12836494/HBASE-16890-remove-contention-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12836494/HBASE-16890-remove-contention-v1.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16890&quot; title=&quot;Analyze the performance of AsyncWAL and fix the same&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16890&quot;&gt;HBASE-16890&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux fc3354107335 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / 4bd85f9 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.8.0_101 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4280/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4280/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4280/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4280/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4280/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4280/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4280/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4280/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15628872" author="ram_krish" created="Wed, 2 Nov 2016 12:52:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;&lt;br/&gt;
Sorry was busy through out the day. I will check your patch and also report the finding in terms of Performance. And see if I can make my patch work and solve all test cases&lt;/p&gt;</comment>
                            <comment id="15631866" author="ram_krish" created="Thu, 3 Nov 2016 06:59:59 +0000"  >&lt;p&gt;Updated patch. Corrects the failed test cases. All failed ones pass now.&lt;br/&gt;
The idea here is that use RingBuffer&apos;s sequence to publish the event on that sequence but DO NOT use that as the WAL&apos;s sequence Id. Instead in RB&apos;s onEvent() create your own txid as it was done previously. So by doing this we release the handlers quickly and thus solving the contention. Now the SyncFutures are not constructed with a txid instead we set them in the RB&apos;s onEvent().&lt;br/&gt;
So running WALPE &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
./hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 100 -iterations 25000 -qualifiers 25 -keySize 50 -valueSize 200
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With FSHLog&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Summary: threads=100, iterations=25000, syncInterval=0 took 99.258s 25186.887ops/s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With Duo&apos;s patch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Summary: threads=100, iterations=25000, syncInterval=0 took 98.965s 25261.457ops/s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With AsyncWAL_disruptor_3.patch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Summary: threads=100, iterations=25000, syncInterval=0 took 85.893s 29105.982ops/s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;br/&gt;
Can you have a look at this?&lt;/p&gt;

&lt;p&gt;In the mean time will test with PE tool on a cluster.&lt;/p&gt;</comment>
                            <comment id="15631883" author="hadoopqa" created="Thu, 3 Nov 2016 07:08:50 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; patch &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 5s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16890&quot; title=&quot;Analyze the performance of AsyncWAL and fix the same&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16890&quot;&gt;HBASE-16890&lt;/a&gt; does not apply to master. Rebase required? Wrong Branch? See &lt;a href=&quot;https://yetus.apache.org/documentation/0.3.0/precommit-patchnames&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://yetus.apache.org/documentation/0.3.0/precommit-patchnames&lt;/a&gt; for help. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12836741/AsyncWAL_disruptor_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12836741/AsyncWAL_disruptor_3.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16890&quot; title=&quot;Analyze the performance of AsyncWAL and fix the same&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16890&quot;&gt;HBASE-16890&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4304/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4304/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15631899" author="ram_krish" created="Thu, 3 Nov 2016 07:15:54 +0000"  >&lt;p&gt;There were some conflicts due to some recent updates. Reattaching for QA.&lt;/p&gt;</comment>
                            <comment id="15631931" author="apache9" created="Thu, 3 Nov 2016 07:31:53 +0000"  >&lt;p&gt;So by removing the contention we can get the same performance with FSHLog.&lt;/p&gt;

&lt;p&gt;But the AsyncWAL_disruptor_3.patch is a little strange. What makes it much faster?&lt;/p&gt;

&lt;p&gt;For the patch, I think there is a logic error. You say that the ringbuffer sequence can not be used as txid, but in append, you just return the sequence as txid...&lt;/p&gt;</comment>
                            <comment id="15631945" author="hadoopqa" created="Thu, 3 Nov 2016 07:40:39 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch doesn&apos;t appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 2s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 40s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 46s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 44s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 26s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 36s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 36s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 49s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch has 3 line(s) that end in whitespace. Use git apply --whitespace=fix. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 1m 12s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch causes 22 errors with Hadoop v2.6.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 2m 23s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch causes 22 errors with Hadoop v2.6.2. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 3m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch causes 22 errors with Hadoop v2.6.3. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 4m 47s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch causes 22 errors with Hadoop v2.6.4. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 5m 59s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch causes 22 errors with Hadoop v2.6.5. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 7m 10s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch causes 22 errors with Hadoop v2.7.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 8m 23s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch causes 22 errors with Hadoop v2.7.2. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 9m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch causes 22 errors with Hadoop v2.7.3. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 10m 47s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch causes 22 errors with Hadoop v3.0.0-alpha1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 21s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 25s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 7s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 21m 46s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12836742/AsyncWAL_disruptor_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12836742/AsyncWAL_disruptor_3.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16890&quot; title=&quot;Analyze the performance of AsyncWAL and fix the same&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16890&quot;&gt;HBASE-16890&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux ca3cc62ee30f 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / b1d1dc8 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.8.0_101 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; mvninstall &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/artifact/patchprocess/patch-mvninstall-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/artifact/patchprocess/patch-mvninstall-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; compile &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/artifact/patchprocess/patch-compile-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/artifact/patchprocess/patch-compile-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; javac &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/artifact/patchprocess/patch-compile-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/artifact/patchprocess/patch-compile-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; whitespace &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/artifact/patchprocess/whitespace-eol.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/artifact/patchprocess/whitespace-eol.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/artifact/patchprocess/patch-findbugs-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/artifact/patchprocess/patch-findbugs-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4305/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15632004" author="ram_krish" created="Thu, 3 Nov 2016 08:07:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think there is a logic error. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ya. That is true. I just saw that. But in WALPE anyway we don&apos;t use sync(txid) and we use sync(). So I am not sure if it is really affecting the result of WALPE. But yes may be in cluster it can affect and we may not wait for some sync completion and return early. I will test that.&lt;br/&gt;
Also in the patch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (highestSyncedTxid.get() &amp;gt;= txid) {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I need to unify both sync() and sync(txid) and I cannot have the above there if am not using the RingBuffer&apos;s sequence.&lt;/p&gt;

&lt;p&gt;Just WALPE with existing AsyncFSWAL I get this&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Summary: threads=100, iterations=25000, syncInterval=0 took 106.369s 23503.088ops/s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

</comment>
                            <comment id="15632208" author="ram_krish" created="Thu, 3 Nov 2016 09:36:08 +0000"  >&lt;p&gt;Your patch looks good to me. &lt;br/&gt;
In finishSync()&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
highestSyncedTxid.set(lowestUnprocessedAppendTxid - 1);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Why do we do &apos;-1&apos; when we know lowestUnprocessedAppendTxid &amp;gt; highestProcessedAppendTxid and that &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (doneTxid &amp;gt;= highestProcessedAppendTxid) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;is also true?&lt;/p&gt;</comment>
                            <comment id="15632215" author="apache9" created="Thu, 3 Nov 2016 09:39:35 +0000"  >&lt;p&gt;lowestUnprocessedAppendTxid is the append that we haven&apos;t processed yet so it is impossible that it has been synced right?&lt;/p&gt;</comment>
                            <comment id="15632233" author="ram_krish" created="Thu, 3 Nov 2016 09:47:00 +0000"  >&lt;p&gt;Correct. so shall we just set with highestSyncedTxid.set(lowestUnprocessedAppendTxid)?&lt;/p&gt;</comment>
                            <comment id="15632245" author="apache9" created="Thu, 3 Nov 2016 09:52:51 +0000"  >&lt;p&gt;Shoule be &apos;lowestUnprocessedAppendTxid - 1&apos; as the append whose txid is lowestUnprocessedAppendTxid has not been processed yet...&lt;/p&gt;</comment>
                            <comment id="15632328" author="hadoopqa" created="Thu, 3 Nov 2016 10:31:37 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 1 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 2m 59s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 45s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 12s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 39s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 25s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 45s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 33s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 33s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 44s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch has 4 line(s) that end in whitespace. Use git apply --whitespace=fix. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 30m 31s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 2m 2s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 89m 20s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 18s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 132m 8s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Failed junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.master.TestAssignmentListener &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Timed out junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestHCM &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestCloneSnapshotFromClientWithRegionReplicas &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestMobSnapshotCloneIndependence &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12836754/AsyncWAL_disruptor_4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12836754/AsyncWAL_disruptor_4.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16890&quot; title=&quot;Analyze the performance of AsyncWAL and fix the same&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16890&quot;&gt;HBASE-16890&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux 19f80ad5dbaf 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / b1d1dc8 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.8.0_101 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; whitespace &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4306/artifact/patchprocess/whitespace-eol.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4306/artifact/patchprocess/whitespace-eol.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4306/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4306/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4306/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4306/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4306/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4306/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4306/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4306/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15632371" author="apache9" created="Thu, 3 Nov 2016 10:56:44 +0000"  >&lt;p&gt;And I have done some tests against an HDFS, with replication set to 1 and disable low replication roll check.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;./bin/hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 100 -iterations 25000 -qualifiers 25 -keySize 50 -valueSize 200

FSHLog Summary: threads=100, iterations=25000, syncInterval=0 took 183.412s 13630.515ops/s
AsyncFSWAL Summary: threads=100, iterations=25000, syncInterval=0 took 113.391s 22047.605ops/s
AsyncFSWAL with my patch Summary: threads=100, iterations=25000, syncInterval=0 took 120.933s 20672.604ops/s
AsyncFSWAL with ram&apos;s patch Summary: threads=100, iterations=25000, syncInterval=0 took 114.870s 21763.732ops/s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;./bin/hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 1 -iterations 250000 -qualifiers 25 -keySize 50 -valueSize 200

FSHLog Summary: threads=1, iterations=250000, syncInterval=0 took 100.482s 2488.008ops/s
AsyncFSWAL Summary: threads=1, iterations=250000, syncInterval=0 took 83.233s 3003.616ops/s
AsyncFSWAL with my patch Summary: Summary: threads=1, iterations=250000, syncInterval=0 took 83.149s 3006.651ops/s
AsyncFSWAL with ram&apos;s patch test hang, can not finish
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;None of them can beat the original AsyncFSWAL implementation. I was wondering why the results are different. Do you guys run all test instance in a single node? NN, DN and WALPE on the same node so there is no network latency? I think for most users, the HBsae will be deployed with normal network infrastructures so the latency can not be ignored?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15632375" author="apache9" created="Thu, 3 Nov 2016 10:59:18 +0000"  >&lt;p&gt;And one thing is that, with my patch, the gc pressure is much higher than the original AsyncFSWAL as I can observe lots of young gcs longer than 100ms and cause the slow sync warning.&lt;/p&gt;</comment>
                            <comment id="15632400" author="ram_krish" created="Thu, 3 Nov 2016 11:10:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;AsyncFSWAL with ram&apos;s patch test hang, can not finish&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Which patch did you take!!!&lt;br/&gt;
I can try with 1 thread not sure why it hanged. In my tests my patch performed better with 100 threads. Ya there is no network latency at all in our set up. Everything runs in the same machine. So we get much  better thro put (ops/sec with WALPE). In your set up DN and NN are in different machine?&lt;br/&gt;
But there is more to it. Hang on.&lt;br/&gt;
I tried testing with One node real cluster with PE tool. Loaded 40G of data with 50 threads and each row having 50 cols.&lt;br/&gt;
FSHLog&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Min: 524525ms   Max: 546482ms   Avg: 540959ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;AsycnWAL with Ram&apos;s patch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Min: 992706ms   Max: 1010504ms  Avg: 1006560ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With Duo&apos;s patch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Min: 992568ms   Max: 1020693ms  Avg: 1016597ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So as I said earlier and as Duo mentions is it not worth to test in single node machines? &lt;/p&gt;</comment>
                            <comment id="15632484" author="apache9" created="Thu, 3 Nov 2016 11:36:06 +0000"  >&lt;p&gt;Maybe the problem is we call sync in WALPE, but call sync(txid) in PE? I think we could add a sync-with-txid option to WALPE?&lt;/p&gt;</comment>
                            <comment id="15632513" author="anoop.hbase" created="Thu, 3 Nov 2016 11:50:55 +0000"  >&lt;p&gt;What can be the reason? Suspect?. Sorry I did not read the patches. Just trying to catch up here reading the comments 1st.&lt;/p&gt;</comment>
                            <comment id="15632574" author="apache9" created="Thu, 3 Nov 2016 12:22:21 +0000"  >&lt;p&gt;I do not know. I didn&apos;t tune the GC config in that patch. But I think the first thing here is to explain why PE and WALPE show completely different results.&lt;/p&gt;</comment>
                            <comment id="15632624" author="apache9" created="Thu, 3 Nov 2016 12:44:16 +0000"  >&lt;p&gt;I&apos;ve changed the WALPE code to &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
            &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; txid = wal.append(hri, logkey, walEdit, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.noSync) {
              &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (++lastSync &amp;gt;= &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.syncInterval) {
                wal.sync(txid);
                lastSync = 0;
              }
            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nothing changed... FSHLog is still the slowest...&lt;/p&gt;

&lt;p&gt;This is really weird. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; Can you please run your test again on a normal cluster with at least three DNs to see if AsyncFSWAL is still slower?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15632916" author="ram_krish" created="Thu, 3 Nov 2016 14:39:35 +0000"  >&lt;p&gt;My server is hadoop 2.5.2 in my cluster. Will that be a problem?&lt;/p&gt;</comment>
                            <comment id="15632942" author="apache9" created="Thu, 3 Nov 2016 14:45:28 +0000"  >&lt;p&gt;I do not know but I think 2.5.2 is OK. Will try a PE test tomorrow. Can you please share your configurations to make HBase run on a single DN cluster smoothly?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15633023" author="apache9" created="Thu, 3 Nov 2016 15:11:35 +0000"  >&lt;p&gt;The roll logic is broken in the previous patches, try to address it. And also set AsyncFSWAL to default in this patch to see the pre commit results.&lt;/p&gt;</comment>
                            <comment id="15633028" author="apache9" created="Thu, 3 Nov 2016 15:12:20 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Which patch did you take!!!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The v4 patch. It is blocked on a sync.&lt;/p&gt;</comment>
                            <comment id="15633094" author="ram_krish" created="Thu, 3 Nov 2016 15:27:00 +0000"  >&lt;p&gt;I solved that. Will try once again with PE also.&lt;/p&gt;</comment>
                            <comment id="15633279" author="ram_krish" created="Thu, 3 Nov 2016 16:09:30 +0000"  >&lt;p&gt;This is my config&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;property&amp;gt;
  &amp;lt;name&amp;gt;hbase.regionserver.global.memstore.size&amp;lt;/name&amp;gt;
  &amp;lt;value&amp;gt;0.42&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
  &amp;lt;name&amp;gt;hfile.block.cache.size&amp;lt;/name&amp;gt;
  &amp;lt;value&amp;gt;0.38&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;hbase.regionserver.info.port&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;16031&amp;lt;/value&amp;gt;
      &amp;lt;/property&amp;gt;
 &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;hbase.regionserver.port&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;16041&amp;lt;/value&amp;gt;
      &amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;hbase.master.port&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;16050&amp;lt;/value&amp;gt;
      &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;hbase.master.wait.on.regionservers.mintostart&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;0&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
&amp;lt;name&amp;gt;hbase.master.info.port&amp;lt;/name&amp;gt;
&amp;lt;value&amp;gt;16070&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.regionserver.handler.count&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;100&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
 &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;zookeeper.znode.parent&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;/hbase1&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.ipc.server.reservoir.enabled&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.hregion.memstore.chunkpool.maxsize&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;1&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.hregion.memstore.chunkpool.initialsize&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;0.5&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
&amp;lt;name&amp;gt;hbase.client.rpc.codec&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;org.apache.hadoop.hbase.codec.KeyValueCodec&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
         &amp;lt;name&amp;gt;hbase.regionserver.metahandler.count&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;10&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.hregion.memstore.mslab.enabled&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.hstore.flusher.count&amp;lt;/name&amp;gt; 
    &amp;lt;value&amp;gt;10&amp;lt;/value&amp;gt; 
  &amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.hstore.blockingStoreFiles&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;25&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.ipc.server.reservoir.initial.max&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;600&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
&amp;lt;name&amp;gt;hbase.wal.provider&amp;lt;/name&amp;gt;
&amp;lt;value&amp;gt;asyncfs&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I have xmx as 30G and runs with G1GC config. Do you need any other info?&lt;/p&gt;</comment>
                            <comment id="15633303" author="ram_krish" created="Thu, 3 Nov 2016 16:16:59 +0000"  >&lt;p&gt;I think Stack also found the same. &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;br/&gt;
What was your set up ? Single node ? or multi node? Client and server in seperate machine?&lt;/p&gt;</comment>
                            <comment id="15633448" author="stack" created="Thu, 3 Nov 2016 16:56:04 +0000"  >&lt;p&gt;I had client and servers on separate machines. I first did an HDFS cluster but then changed it to be a single-node HDFS Cluster so I could reproduce the slowness you were seeing &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15633532" author="hadoopqa" created="Thu, 3 Nov 2016 17:22:50 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 21s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 3 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 5s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 44s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 42s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 26s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 46s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 45s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 27m 33s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 1m 50s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 26s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 84m 18s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 124m 5s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; FindBugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; module:hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Condition.await() not in loop in org.apache.hadoop.hbase.regionserver.wal.AsyncFSWAL.waitForSafePoint()  At AsyncFSWAL.java:org.apache.hadoop.hbase.regionserver.wal.AsyncFSWAL.waitForSafePoint()  At AsyncFSWAL.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;line 690&amp;#93;&lt;/span&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Timed out junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.master.procedure.TestServerCrashProcedure &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.master.TestActiveMasterManager &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.master.procedure.TestRestoreSnapshotProcedure &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.master.procedure.TestTruncateTableProcedure &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12836844/HBASE-16890-rc-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12836844/HBASE-16890-rc-v2.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16890&quot; title=&quot;Analyze the performance of AsyncWAL and fix the same&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16890&quot;&gt;HBASE-16890&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux 315e47e2109e 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / c82fc6e &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.8.0_101 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4308/artifact/patchprocess/new-findbugs-hbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4308/artifact/patchprocess/new-findbugs-hbase-server.html&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4308/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4308/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4308/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4308/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4308/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4308/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4308/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4308/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15634943" author="apache9" created="Fri, 4 Nov 2016 02:03:36 +0000"  >&lt;p&gt;So the key point is the HDFS cluster must be single node? I run the WALPE on a standard HDFS cluster with replication set to 1. I can see this log in the output&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2016-11-03 20:58:16,126 INFO  [WALPerfEval.logRoller] wal.AbstractFSWAL: Slow sync cost: 104 ms, current pipeline: [DatanodeInfoWithStorage[10.108.18.25:35402,DS-eb75553e-c64d-42a3-ab43-a772a74c7b51,DISK]]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So I think it worked? And I set block size to 1GB and roll size to 512M to prevent FSHLog roll a new block, the result is still same, FSHLog is the slowest...&lt;/p&gt;

&lt;p&gt;And my HDFS version is 2.7.3.&lt;/p&gt;</comment>
                            <comment id="15635070" author="apache9" created="Fri, 4 Nov 2016 03:15:19 +0000"  >&lt;p&gt;Fix the findbugs warnings.&lt;/p&gt;</comment>
                            <comment id="15635255" author="ram_krish" created="Fri, 4 Nov 2016 04:59:01 +0000"  >&lt;p&gt;In my case for FShLog and AsyncFSWAL I get this slow sync msg. I will better see if I can set up an 3 node cluster but I don think I will be able to get that sooner.&lt;/p&gt;</comment>
                            <comment id="15635437" author="apache9" created="Fri, 4 Nov 2016 06:32:59 +0000"  >&lt;p&gt;Update. I&apos;ve set up a single node HDFS cluster and run WALPE on the same machine.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;core-site.xml&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;configuration&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;fs.defaultFS&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;hdfs:&lt;span class=&quot;code-comment&quot;&gt;//localhost:9000&amp;lt;/value&amp;gt;
&lt;/span&gt;  &amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;hdfs-site.xml&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;configuration&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;dfs.replication&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;1&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;dfs.namenode.name.dir&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;/home/zhangduo/hadoop-2.7.3/nn&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;dfs.datanode.data.dir&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;/home/zhangduo/hadoop-2.7.3/dn&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;dfs.namenode.checkpoint.dir&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;/home/zhangduo/hadoop-2.7.3/snn&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;dfs.namenode.checkpoint.edits.dir&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;/home/zhangduo/hadoop-2.7.3/snn&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And for WALPE, the important configs are&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;hbase-site.xml&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.regionserver.logroll.multiplier&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;0.5f&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.regionserver.logroll.period&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;7200000&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.regionserver.maxlogs&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;10000&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.regionserver.hlog.replication&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;1&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.regionserver.hlog.tolerable.lowreplication&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;1&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.wal.provider&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;filesystem&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.regionserver.hlog.blocksize&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;1073741824&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.regionserver.wal.disruptor.event.count&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;1024&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Will change &apos;hbase.wal.provider&apos; to &apos;asyncfs&apos; when testing AsyncFSWAL.&lt;/p&gt;

&lt;p&gt;The machine is 2 * E5-2620, 2.4G, 24 cores, 128GB memory. And the gc config for WALPE is &apos;-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xmx10g -Xms10g -XX:+UseConcMarkSweepGC&apos;.&lt;/p&gt;

&lt;p&gt;The result is not changed... FSHLog is still the slowest, and the three AsyncFSWAL are almost the same&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;./bin/hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 100 -iterations 25000 -qualifiers 25 -keySize 50 -valueSize 200 &amp;amp;&amp;gt;log

FSHLog Summary: threads=100, iterations=25000, syncInterval=0 took 120.654s 20720.408ops/s
AsyncFSWAL Summary: threads=100, iterations=25000, syncInterval=0 took 86.379s 28942.221ops/s
AsyncFSWAL-duo Summary: threads=100, iterations=25000, syncInterval=0 took 86.635s 28856.697ops/s
AsyncFSWAL-ram Summary: threads=100, iterations=25000, syncInterval=0 took 88.495s 28250.184ops/s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What&apos;s your configs &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;?  Do you guys use SSD or some other new hardwares? Thanks.&lt;/p&gt;</comment>
                            <comment id="15635450" author="ram_krish" created="Fri, 4 Nov 2016 06:41:52 +0000"  >&lt;p&gt;Let me add the configs for WAL specifcally that you had mentioned above and check it.&lt;br/&gt;
I don&apos;t think  this system has any new hard ware. Yes they are with 148G memory and 24 cores.&lt;br/&gt;
For WALPe there is no such GC I had configured but while running with PE we run with G1GC enabled.&lt;br/&gt;
Any way lets discuss after I apply your config and test it.&lt;/p&gt;</comment>
                            <comment id="15635454" author="ram_krish" created="Fri, 4 Nov 2016 06:43:47 +0000"  >&lt;p&gt;One question. Are you trying to avoid log roll in this settings? Have you tried with default log roll size?&lt;/p&gt;</comment>
                            <comment id="15635466" author="apache9" created="Fri, 4 Nov 2016 06:49:11 +0000"  >&lt;p&gt;The config is better for FSHLog as it will never roll a new block. I could have a try.&lt;/p&gt;</comment>
                            <comment id="15635482" author="anoop.hbase" created="Fri, 4 Nov 2016 06:58:40 +0000"  >&lt;p&gt;never roll a new HFile?&lt;br/&gt;
By default we will block writes and do force flushes when there are 32 log files.&lt;/p&gt;</comment>
                            <comment id="15635490" author="apache9" created="Fri, 4 Nov 2016 07:01:54 +0000"  >&lt;p&gt;No, no new block for the wal file. For AsyncFSWAL, we only support one block so even if the actual block size is larger than specified we will still write to the block. But for FSHLog, it will end the current block and ask for a new block from NN and then start a new block.&lt;/p&gt;</comment>
                            <comment id="15635513" author="apache9" created="Fri, 4 Nov 2016 07:13:58 +0000"  >&lt;p&gt;With the default block size and roll rate(comment the configs in hbase-site.xml)&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;FSHLog Summary: threads=100, iterations=25000, syncInterval=0 took 158.343s 15788.510ops/s
AsyncFSWAL Summary: threads=100, iterations=25000, syncInterval=0 took 85.559s 29219.604ops/s
AsyncFSWAL-duo Summary: threads=100, iterations=25000, syncInterval=0 took 82.820s 30185.945ops/s
AsyncFSWAL-ram Summary: threads=100, iterations=25000, syncInterval=0 took 88.081s 28382.965ops/s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15635522" author="hadoopqa" created="Fri, 4 Nov 2016 07:20:03 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 20s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 3 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; mvndep &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 17s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Maven dependency ordering for branch &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 3s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 9s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 29s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 23s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Skipped patched modules with no Java source: . &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 42s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 2m 16s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; mvndep &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 8s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Maven dependency ordering for patch &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 46s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 8s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 8s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 27s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 24s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; xml &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 2s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch has no ill-formed XML file. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 27m 28s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Skipped patched modules with no Java source: . &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 48s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 2m 15s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 88m 42s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 96m 26s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; root in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 241m 8s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Timed out junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer2 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.mapreduce.TestImportTsv &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.mapreduce.TestSyncTable &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12837032/HBASE-16890-rc-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12837032/HBASE-16890-rc-v3.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16890&quot; title=&quot;Analyze the performance of AsyncWAL and fix the same&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16890&quot;&gt;HBASE-16890&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  xml  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux 8473560999c6 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / bb0fc6b &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.8.0_101 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4318/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4318/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4318/artifact/patchprocess/patch-unit-root.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4318/artifact/patchprocess/patch-unit-root.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4318/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4318/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4318/artifact/patchprocess/patch-unit-root.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4318/artifact/patchprocess/patch-unit-root.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4318/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4318/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server . U: . &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4318/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4318/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15635609" author="apache9" created="Fri, 4 Nov 2016 08:07:09 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; What is your command when running PE tool? I&apos;m going to test it on a single node cluster. Both HDFS and HBase are on the same machine.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15635615" author="ram_krish" created="Fri, 4 Nov 2016 08:09:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;./hbase org.apache.hadoop.hbase.PerformanceEvaluation --nomapred --presplit=50 --size=40 --columns=50 --valueSize=200 --writeToWAL=true --bloomFilter=NONE  randomWrite 50&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That &apos;--size=40&apos; you can change.&lt;/p&gt;</comment>
                            <comment id="15635619" author="apache9" created="Fri, 4 Nov 2016 08:11:12 +0000"  >&lt;p&gt;Fine. Let me run a 10G test first.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15635647" author="apache9" created="Fri, 4 Nov 2016 08:25:02 +0000"  >&lt;p&gt;Yeah with PE tool, the qps of AsyncFSWAL is about half of the qps of FSHLog.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;./bin/hbase org.apache.hadoop.hbase.PerformanceEvaluation --nomapred --presplit=50 --size=10 --columns=50 --valueSize=200 --writeToWAL=true --bloomFilter=NONE randomWrite 50

FSHLog: Min:84264ms  Max:102904ms  Avg:98910ms
AsyncFSWAL: Min:136123ms  Max:154905ms  Avg:151415ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let me try the improved AsyncFSWALs.&lt;/p&gt;</comment>
                            <comment id="15635654" author="ram_krish" created="Fri, 4 Nov 2016 08:28:05 +0000"  >&lt;p&gt;The improved ASyncFSWALs also performs similarly. I am once again checking the sync logic and the wal roll logic here.&lt;/p&gt;</comment>
                            <comment id="15635680" author="apache9" created="Fri, 4 Nov 2016 08:40:48 +0000"  >&lt;p&gt;Can you try the latest patch to see if it performs better? &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16890&quot; title=&quot;Analyze the performance of AsyncWAL and fix the same&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16890&quot;&gt;HBASE-16890&lt;/a&gt;-rc-v3.patch.&lt;/p&gt;

&lt;p&gt;I just tested with it and your disruptor_4.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;AsyncFSWAL-duo: Min: 83736ms Max: 98340ms Avg: 94915ms
AsyncFSWAL-ram: Min: 101365ms Max: 112375ms Avg: 109306ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let me test again to confirm.&lt;/p&gt;</comment>
                            <comment id="15635692" author="anoop.hbase" created="Fri, 4 Nov 2016 08:44:42 +0000"  >&lt;p&gt;Did some tests on classic WAL vs async wal using PE tool&lt;br/&gt;
Same configs as Ram&apos;s tests&lt;br/&gt;
With PE&apos;s default row setting, ie. one column/cell per row and its size 1 K am able to see that asyncwal is faster than old wal. PE completion time is reduced by 16%.&lt;br/&gt;
But repeating the test (with same RS and cluster setting) but with PE test to have 50 cols per row and 200 as val size per cell , I can see that the asycnWAL perf is slow. Much slow such that the completion time for PE is almost like double.&lt;br/&gt;
So the row size is a matter for sure.&lt;/p&gt;</comment>
                            <comment id="15635708" author="ram_krish" created="Fri, 4 Nov 2016 08:52:02 +0000"  >&lt;p&gt;I will update my patch with the change for that hang. Sure I can verify your latest patch also.&lt;/p&gt;</comment>
                            <comment id="15635709" author="ram_krish" created="Fri, 4 Nov 2016 08:52:12 +0000"  >&lt;p&gt;Thanks for confirming.&lt;/p&gt;</comment>
                            <comment id="15635789" author="apache9" created="Fri, 4 Nov 2016 09:32:31 +0000"  >&lt;p&gt;Another round, the old AsyncFSWAL is still the slowest. The other three are almost same.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;./bin/hbase org.apache.hadoop.hbase.PerformanceEvaluation --nomapred --presplit=50 --size=10 --columns=50 --valueSize=200 --writeToWAL=true --bloomFilter=NONE randomWrite 50

FSHLog Min: 75930ms Max: 88080ms Avg: 84743ms
AsyncFSWAL: Min: 89337ms Max: 103743ms Avg: 100205ms
AsyncFSWAL-duo: Min: 72335ms Max: 86026ms Avg: 81308ms
AsyncFSWAL-ram: Min: 74423ms Max: 85647msAvg: 82212ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What&apos;s your new result &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;And boss &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, could you please try the new patches to see they work for you? Both ram&apos;s and mine. Thanks.&lt;/p&gt;</comment>
                            <comment id="15635907" author="ram_krish" created="Fri, 4 Nov 2016 10:17:15 +0000"  >&lt;p&gt;My recent test results&lt;/p&gt;

&lt;p&gt;WALPE command&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
./hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 100 -iterations 25000 -qualifiers 25 -keySize 50 -valueSize 200
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;PE command&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
./hbase org.apache.hadoop.hbase.PerformanceEvaluation --nomapred --presplit=50 --size=10 --columns=50 --valueSize=200 --writeToWAL=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; --bloomFilter=NONE   randomWrite 50
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;OldAsyncFSWAL&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
WALPE : 23341 ops/sec
PE :  Min: 170770ms   Max: 182114ms   Avg: 180348ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Duo&apos;s patch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
WALPE : 27244.393ops/s
PE : Min: 142367ms   Max: 161602ms   Avg: 158968ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ram&apos;s patch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
WALPE : 26334 ops/sec
PE : Min: 146147ms   Max: 154044ms   Avg: 152314ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;FSHLog&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
WALPE : 26031 ops/sec
PE : Min: 92627ms    Max: 101547ms   Avg: 99960ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So FSHLog still remains the fastest and oldAsyncWAL being the slowest. All these tests have the hbase-site configs that Duo has commented above.&lt;/p&gt;</comment>
                            <comment id="15635912" author="ram_krish" created="Fri, 4 Nov 2016 10:18:50 +0000"  >&lt;p&gt;But with PE single thread&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
./hbase org.apache.hadoop.hbase.PerformanceEvaluation --nomapred --presplit=50 --size=10 --columns=50 --valueSize=200 --writeToWAL=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; --bloomFilter=NONE   randomWrite 1
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
asyncfswal
 Min: 297339ms   Max: 297339ms   Avg: 297339ms

fshlog
  Min: 338941ms   Max: 338941ms   Avg: 338941ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;AsyncFSWAL is faster. &lt;/p&gt;</comment>
                            <comment id="15635922" author="anoop.hbase" created="Fri, 4 Nov 2016 10:23:53 +0000"  >&lt;p&gt;So the rate at which we might fill the memstores is a matter? AsyncFSWAL writes might be faster and so we fill up memstore much faster resulting in more flushes/compactions which in turns affects the overall performance?  Also the #WAL files generated?&lt;br/&gt;
When more size per row case tested with less #threads asynwal is faster.  When tested with 50 threads also but with less size per row, asyncwal still faster.  So it is not just concurrency matter.  &lt;/p&gt;</comment>
                            <comment id="15635932" author="apache9" created="Fri, 4 Nov 2016 10:27:35 +0000"  >&lt;p&gt;But in my PE test the results are almost same for FSHLog and the modified AsyncFSWAL... Let me try a larger data set.&lt;/p&gt;</comment>
                            <comment id="15636177" author="apache9" created="Fri, 4 Nov 2016 12:15:24 +0000"  >&lt;p&gt;Anyway, with my config the performance of the two modified AsyncFSWALs are not worse than FSHLog then...&lt;/p&gt;

&lt;p&gt;So let me file a issue and upload the ring buffer patch there. And will continue to address the PE issue here.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15636271" author="hadoopqa" created="Fri, 4 Nov 2016 13:02:22 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 1 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 7s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 45s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 39s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 25s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 44s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 34s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 34s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 44s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch has 1 line(s) that end in whitespace. Use git apply --whitespace=fix. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 27m 48s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 55s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 28s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 113m 20s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 15s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 153m 18s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Failed junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.regionserver.wal.TestAsyncFSWAL &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.regionserver.wal.TestDurability &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Timed out junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.regionserver.wal.TestAsyncWALReplay &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestFromClientSide &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.replication.multiwal.TestReplicationKillMasterRSCompressedWithMultipleAsyncWAL &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestAsyncGetMultiThread &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.replication.multiwal.TestReplicationEndpointWithMultipleAsyncWAL &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestHCM &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClientWithRegionReplicas &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.regionserver.wal.TestAsyncWALReplayCompressed &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.wal.TestBoundedRegionGroupingStrategy &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.regionserver.wal.TestSecureAsyncWALReplay &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestMobSnapshotCloneIndependence &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12837092/AsyncWAL_disruptor_6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12837092/AsyncWAL_disruptor_6.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16890&quot; title=&quot;Analyze the performance of AsyncWAL and fix the same&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16890&quot;&gt;HBASE-16890&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux de66e6c97f66 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / 05ee54f &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.8.0_101 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; whitespace &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4323/artifact/patchprocess/whitespace-eol.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4323/artifact/patchprocess/whitespace-eol.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4323/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4323/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4323/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4323/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4323/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4323/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4323/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4323/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15636688" author="apache9" created="Fri, 4 Nov 2016 15:28:00 +0000"  >&lt;p&gt;Ah I could also observe the same result with a larger data set. FSHLog is faster. And I think I found the direct reason.&lt;/p&gt;

&lt;p&gt;The command is&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;./bin/hbase org.apache.hadoop.hbase.PerformanceEvaluation --nomapred --presplit=50 --size=50 --columns=50 --valueSize=200 --writeToWAL=true --bloomFilter=NONE randomWrite 50
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When running with FSHLog, we have flushed 702 times and the average flush size is 85.3227MB. And for the AsyncFSWAL with my patch, we have flushed 850 times, and the average flush size is 71.609MB.&lt;/p&gt;

&lt;p&gt;Usually the flush is triggered by log roller because of too many WAL files.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2016-11-04 22:28:18,925 INFO  [regionserver/c4-hadoop-build01.bj/10.132.4.49:16020.logRoller] wal.AbstractFSWAL: Too many WALs; count=33, max=32; forcing flush of 6 regions(s): 7f18ef6867d0a36627930da34818069f, 7fdd29e6e2e6be
34b2ea97c9a06281d0, d12c296bd1cb70b2ce78e9a3bc914318, 9207d10a0f22877079d3896d6cb6ebb2, d2b6ac38e6edf675225a71748fb1274e, ad371a623567b35a784256e4f05c5f3a
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And for FSHLog, we have rolled 491 times, the average roll size is 130.329MB.&lt;br/&gt;
And for AsyncFSWAL with my patch, we have rolled 584 times, the average roll size is 109.666MB.&lt;/p&gt;

&lt;p&gt;In general, the roll size of FSHLog is a little larger than AsyncFSWAL(which means the AsyncFSWAL is a little faster when rolling?). But I think the main reason is that, for AsyncFSWAL, there are 78 times at which we roll the wal with a size far away from the configured roll size. The configured roll size is 120M+ but we actually roll the wal writer when the file size is between 10MB-20MB. I think this is the problem why we perform so bad in PE. Need to find out where the abnormal rolling comes from.&lt;/p&gt;

&lt;p&gt;Have you guys observe the same stuffs? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoopsamjohn&quot; class=&quot;user-hover&quot; rel=&quot;anoopsamjohn&quot;&gt;Anoop Sam John&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Will go out for two days this weekend. Will come back to dig next Monday.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15636822" author="ram_krish" created="Fri, 4 Nov 2016 16:04:22 +0000"  >&lt;p&gt;I have observed log rolls in both but I have not seen log roll because of too many WAL files. But your point is valid may be there are some additional log rolls in case of WALPE at a lwer size itself and that leads to this problem under heavy load.&lt;/p&gt;</comment>
                            <comment id="15636836" author="ram_krish" created="Fri, 4 Nov 2016 16:08:41 +0000"  >&lt;p&gt;Let me see the pattern in log roll here. Are you seeing 10 MB-20 MB sized wALs in between? &lt;br/&gt;
Then there is one more reason. May be the data distribution of PE is such that in some regions the data is less and since there is flush due to more number of WAL files we select regions and among them few have less data??&lt;/p&gt;</comment>
                            <comment id="15638140" author="stack" created="Sat, 5 Nov 2016 00:12:16 +0000"  >&lt;p&gt;I ran WALPE w/ log roll disabled against a single, remote DN. I see that FSHLog is 2x AsyncWAL even w/  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-17021&quot; title=&quot;Use RingBuffer to reduce the contention in AsyncFSWAL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-17021&quot;&gt;&lt;del&gt;HBASE-17021&lt;/del&gt;&lt;/a&gt; patch in place.&lt;/p&gt;

&lt;p&gt;FSHLog, Default Master Branch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2016-11-04 16:09:05,210 INFO  [main] wal.WALPerformanceEvaluation: Summary: threads=100, iterations=100000, syncInterval=0 took 269.595s 37092.676ops/s
 Performance counter stats &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &apos;./hbase/bin/hbase --config /home/stack/conf_hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 100 -iterations 100000 -qualifiers 25 -keySize 50 -valueSize 200&apos;:

    2970796.406680 task-clock (msec)         #   10.831 CPUs utilized
        19,589,972 context-switches          #    0.007 M/sec
         2,862,328 cpu-migrations            #    0.963 K/sec
         7,026,111 page-faults               #    0.002 M/sec
 5,189,096,974,913 cycles                    #    1.747 GHz
   &amp;lt;not supported&amp;gt; stalled-cycles-frontend
   &amp;lt;not supported&amp;gt; stalled-cycles-backend
 2,899,414,852,894 instructions              #    0.56  insns per cycle
   472,244,057,677 branches                  #  158.962 M/sec
     4,717,852,912 branch-misses             #    1.00% of all branches

     274.288161881 seconds time elapsed
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Current State of AsyncFSWAL in master branch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2016-11-04 16:19:01,247 INFO  [main] wal.WALPerformanceEvaluation: Summary: threads=100, iterations=100000, syncInterval=0 took 541.682s 18461.016ops/s
 Performance counter stats &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &apos;./hbase/bin/hbase --config /home/stack/conf_hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 100 -iterations 100000 -qualifiers 25 -keySize 50 -valueSize 200&apos;:

    3032840.986653 task-clock (msec)         #    5.484 CPUs utilized
        15,400,858 context-switches          #    0.005 M/sec
         3,205,052 cpu-migrations            #    0.001 M/sec
        12,901,416 page-faults               #    0.004 M/sec
 5,212,559,898,743 cycles                    #    1.719 GHz
   &amp;lt;not supported&amp;gt; stalled-cycles-frontend
   &amp;lt;not supported&amp;gt; stalled-cycles-backend
 2,676,707,056,681 instructions              #    0.51  insns per cycle
   445,557,848,140 branches                  #  146.911 M/sec
     6,372,744,336 branch-misses             #    1.43% of all branches

     553.074446643 seconds time elapsed
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Patched AsyncWAL&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2016-11-04 16:36:12,872 INFO  [main] wal.WALPerformanceEvaluation: Summary: threads=100, iterations=100000, syncInterval=0 took 449.542s 22244.863ops/s

 Performance counter stats &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &apos;./hbase/bin/hbase --config /home/stack/conf_hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 100 -iterations 100000 -qualifiers 25 -keySize 50 -valueSize 200&apos;:

    2847554.990457 task-clock (msec)         #    6.151 CPUs utilized
        11,158,364 context-switches          #    0.004 M/sec
         1,697,560 cpu-migrations            #    0.596 K/sec
         8,239,210 page-faults               #    0.003 M/sec
 5,082,916,581,506 cycles                    #    1.785 GHz
   &amp;lt;not supported&amp;gt; stalled-cycles-frontend
   &amp;lt;not supported&amp;gt; stalled-cycles-backend
 2,443,254,158,990 instructions              #    0.48  insns per cycle
   392,726,539,853 branches                  #  137.917 M/sec
     5,782,766,858 branch-misses             #    1.47% of all branches

     462.937995983 seconds time elapsed
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looking in flight recorder, I don&apos;t see any contention reported any more w/ the patched asyncwal so that is good.&lt;/p&gt;</comment>
                            <comment id="15638184" author="stack" created="Sat, 5 Nov 2016 00:33:30 +0000"  >&lt;p&gt;I ran the tests a few times and results consistent. Looking in FSHLog run w/ JFR, I see more points of contention reported &amp;#8211; inside DFSClient. It uses maybe 25% more CPU probably because of the upped throughput.  Otherwise, looking w/ JFR nothing jumps out. Let me put up pictures of the &apos;hot methods&apos; It is almost as though FSHLog is doing more work (The top consumers are the WALPE random generation... we should fix that).&lt;/p&gt;

&lt;p&gt;The FSHLog must have a better &apos;flow&apos; going on. Here is histograms for FSHLog:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

-- Histograms ------------------------------------------------------------------
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.latencyHistogram.nanos
             count = 8461245
               min = 838241
               max = 115799121
              mean = 2696785.63
            stddev = 6486391.73
            median = 2199081.00
              75% &amp;lt;= 2571547.00
              95% &amp;lt;= 3237948.00
              98% &amp;lt;= 3621166.00
              99% &amp;lt;= 5216818.00
            99.9% &amp;lt;= 115799121.00
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.syncCountHistogram.countPerSync
             count = 412764
               min = 1
               max = 86
              mean = 21.04
            stddev = 16.98
            median = 17.00
              75% &amp;lt;= 34.00
              95% &amp;lt;= 53.00
              98% &amp;lt;= 58.00
              99% &amp;lt;= 62.00
            99.9% &amp;lt;= 86.00
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.syncHistogram.nanos-between-syncs
             count = 412764
               min = 405379
               max = 129879546
              mean = 1680258.91
            stddev = 7343616.88
            median = 1127074.00
              75% &amp;lt;= 1448611.00
              95% &amp;lt;= 1812916.00
              98% &amp;lt;= 1978098.00
              99% &amp;lt;= 2150048.00
            99.9% &amp;lt;= 122766311.00

-- Meters ----------------------------------------------------------------------
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.appendMeter.bytes
             count = 59144801550
         mean rate = 244727411.22 events/second
     1-minute rate = 245882558.80 events/second
     5-minute rate = 199668915.99 events/second
    15-minute rate = 166822622.37 events/second
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.syncMeter.syncs
             count = 412764
         mean rate = 1707.90 events/second
     1-minute rate = 1715.17 events/second
     5-minute rate = 1342.77 events/second
    15-minute rate = 1077.71 events/second
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let me get them for asyncwal...&lt;/p&gt;</comment>
                            <comment id="15638189" author="stack" created="Sat, 5 Nov 2016 00:34:04 +0000"  >&lt;p&gt;The methods that consumer .5% or greater&lt;/p&gt;</comment>
                            <comment id="15638205" author="apache9" created="Sat, 5 Nov 2016 00:42:29 +0000"  >&lt;p&gt;So what&apos;s the hardware of your machine &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; ? Seems the problem is AsyncFSWAL can not use more CPUs even if there is no contention? Maybe you could try increase/decrease ioRatio of netty to see if the result changes? Let me find the way of changing ioRatio for netty.&lt;/p&gt;</comment>
                            <comment id="15638206" author="stack" created="Sat, 5 Nov 2016 00:42:39 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

-- Histograms ------------------------------------------------------------------
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.latencyHistogram.nanos
             count = 2101170
               min = 460988
               max = 179884304
              mean = 5793567.54
            stddev = 19665482.79
            median = 2129343.00
              75% &amp;lt;= 2639978.00
              95% &amp;lt;= 7591455.00
              98% &amp;lt;= 106766212.00
              99% &amp;lt;= 120363544.00
            99.9% &amp;lt;= 179884304.00
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.syncCountHistogram.countPerSync
             count = 283081
               min = 0
               max = 16
              mean = 6.46
            stddev = 4.28
            median = 8.00
              75% &amp;lt;= 10.00
              95% &amp;lt;= 12.00
              98% &amp;lt;= 13.00
              99% &amp;lt;= 14.00
            99.9% &amp;lt;= 16.00
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.syncHistogram.nanos-between-syncs
             count = 283083
               min = 747201
               max = 179577999
              mean = 5808497.64
            stddev = 20550849.80
            median = 1919769.00
              75% &amp;lt;= 2594564.00
              95% &amp;lt;= 6725774.00
              98% &amp;lt;= 104668538.00
              99% &amp;lt;= 126351306.00
            99.9% &amp;lt;= 179577999.00

-- Meters ----------------------------------------------------------------------
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.appendMeter.bytes
             count = 14690526510
         mean rate = 69331875.36 events/second
     1-minute rate = 40171021.67 events/second
     5-minute rate = 73866875.49 events/second
    15-minute rate = 83653584.79 events/second
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.syncMeter.syncs
             count = 283104
         mean rate = 1336.08 events/second
     1-minute rate = 780.51 events/second
     5-minute rate = 1324.92 events/second
    15-minute rate = 1452.57 events/second
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looks like FSHLog is aggregating more syncs per actual sync.... 21 vs 6.5&lt;/p&gt;</comment>
                            <comment id="15638208" author="stack" created="Sat, 5 Nov 2016 00:43:31 +0000"  >&lt;p&gt;We should try and get metrics on packet sizes. FSHLog is making fatter packets?&lt;/p&gt;</comment>
                            <comment id="15638213" author="stack" created="Sat, 5 Nov 2016 00:45:55 +0000"  >&lt;p&gt;48core.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Seems the problem is AsyncFSWAL can not use more CPUs even if there is no contention&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How is this bottlenecking us? The ringbuffer consumer is a single thread in both cases? Then in DFSClient it goes into a Q consumed by one thread. AsyncWAL should still be blowing FSHLog away&lt;/p&gt;

&lt;p&gt;Yeah, tell me about ioratio. I&apos;m gone for an hour but will be back on. Can run anything you like.  See above for stats on FSHLog doing better aggregating syncs.&lt;/p&gt;</comment>
                            <comment id="15638369" author="apache9" created="Sat, 5 Nov 2016 02:13:55 +0000"  >&lt;p&gt;If we have more sync request for AsyncFSWAL then no doubt FSHLog does better on aggregating and I think it is possble.&lt;/p&gt;

&lt;p&gt;We have five threads do syncing for FSHLog, so the most number of pending sync request will be five. If we reach the number then we are forced to do aggregating. But for AsyncFSWAL, there is no such limitation. Maybe we could also introduce a limit for AsyncFSWAL. Let me have a try.&lt;/p&gt;</comment>
                            <comment id="15638395" author="stack" created="Sat, 5 Nov 2016 02:28:18 +0000"  >&lt;p&gt;I&apos;d think that asyncwal would aggregate more than the five threads FSHLog has running? I&apos;d think the five threads would keep stamping on each other making smaller Packets than AsyncWAL is capable of and therefore would aggregate less than it.&lt;/p&gt;</comment>
                            <comment id="15638414" author="apache9" created="Sat, 5 Nov 2016 02:41:12 +0000"  >&lt;p&gt;The sync request of AsyncFSWAL is asynchronous so theoretically we could issue a sync for every append if the consumer task runs quickly enough...&lt;/p&gt;

&lt;p&gt;Anyway, let me try to limit the pending sync count to see if it helps for you as I can not observe the same result...&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15638480" author="apache9" created="Sat, 5 Nov 2016 03:24:31 +0000"  >&lt;p&gt;And for ioRatio, you need to cast the EventLoopGroup in AsyncFSWALProvider to NioEventLoopGroup and call its setIoRatio method. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It should be in (0, 100] which means the percentage of the time which the EventLoop will spend on doing io.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15638548" author="stack" created="Sat, 5 Nov 2016 04:11:58 +0000"  >&lt;p&gt;Let me try. Will report back in morning.&lt;/p&gt;</comment>
                            <comment id="15638594" author="stack" created="Sat, 5 Nov 2016 04:41:30 +0000"  >&lt;p&gt;Takes an int. It defaults 50. You want it 100? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15638647" author="apache9" created="Sat, 5 Nov 2016 05:14:17 +0000"  >&lt;p&gt;Honestly I do not know... I have never changed it before. You can try a 25 and a 75 to see if there are some difference.&lt;/p&gt;</comment>
                            <comment id="15638675" author="stack" created="Sat, 5 Nov 2016 05:26:42 +0000"  >&lt;p&gt;Smile. No worries. I&apos;ll try. &lt;/p&gt;</comment>
                            <comment id="15639413" author="ram_krish" created="Sat, 5 Nov 2016 11:37:29 +0000"  >&lt;p&gt;I agree to this. In AsyncWAL it is finally one packet and should be big enough than what the 5 threads in FSHLog creates.&lt;/p&gt;</comment>
                            <comment id="15639495" author="apache9" created="Sat, 5 Nov 2016 12:15:04 +0000"  >&lt;p&gt;Think of this scenario. 10 thread do append and sync sequentiallly, and the background task is fast enough and can process the request one by one, so we will issue an actual hflush for every sync request. Now the DN is blocked by a long gc. For FSHLog, we only have five threads to do hflush so when we have five hflush being blocked, then we will be blocked until the DN recoved and then we will send all the pending data with one packet(maybe multiple packets but at least the packets Will be large enough). But for AsyncFSWAL, nothing changes. We Will still issue a hflush for every sync request.&lt;/p&gt;

&lt;p&gt;Is This clear enough? Thanks.&lt;/p&gt;</comment>
                            <comment id="15639530" author="apache9" created="Sat, 5 Nov 2016 12:23:36 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;  Not log roll by too many WAL files, it is a memstore flush for too many WAL files... I do not think it is a good idea to add one more WAL file when we already have too many WAL files...&lt;/p&gt;

&lt;p&gt;More wal files means we have more chance to force flush regions because of too many WAL files. And the total dataset is the same, then more flush means smaller average flush size.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15639624" author="ram_krish" created="Sat, 5 Nov 2016 13:22:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;Not log roll by too many WAL files, it is a memstore flush for too many WAL files...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ya sorry. I misworded it.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I do not think it is a good idea to add one more WAL file when we already have too many WAL files...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sorry I did not get this. Adding one more WAL ? Are you saying to this to my comment. &lt;/p&gt;

&lt;p&gt;One question though - with WALPE there is no flush at all happening. IT is all append/sync and wal rolls. So is there more wal rolls we do do in AsyncFSWAL?&lt;/p&gt;</comment>
                            <comment id="15643196" author="stack" created="Mon, 7 Nov 2016 05:45:08 +0000"  >&lt;p&gt;I tried 90 for ratioio on @duo zhang patch and it took half as long again... 780 seconds, and at a ration of 10, it took 650 odd. I reran at 50 and it came out again at 570 or so so default seems best. Which one of the attached is your patch &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; so I can try it boss?&lt;/p&gt;</comment>
                            <comment id="15643225" author="ram_krish" created="Mon, 7 Nov 2016 06:02:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12837537/AsyncWAL_disruptor_7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12837537/AsyncWAL_disruptor_7.patch&lt;/a&gt;.&lt;br/&gt;
You can try this. &lt;/p&gt;</comment>
                            <comment id="15643235" author="stack" created="Mon, 7 Nov 2016 06:07:58 +0000"  >&lt;p&gt;Found it over on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-17021&quot; title=&quot;Use RingBuffer to reduce the contention in AsyncFSWAL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-17021&quot;&gt;&lt;del&gt;HBASE-17021&lt;/del&gt;&lt;/a&gt;. I tried it. Took a little more than the Duo patch.. about 580 instead of 570... So about the same.&lt;/p&gt;</comment>
                            <comment id="15643238" author="ram_krish" created="Mon, 7 Nov 2016 06:09:21 +0000"  >&lt;p&gt;Ya that can be made equal. But I avoided some optimizatioins due to some test case issues that happens directly on region.&lt;/p&gt;</comment>
                            <comment id="15643250" author="stack" created="Mon, 7 Nov 2016 06:14:57 +0000"  >&lt;p&gt;I&apos;ve not looked... are the two approaches different? Can we unify?&lt;/p&gt;</comment>
                            <comment id="15643251" author="stack" created="Mon, 7 Nov 2016 06:15:30 +0000"  >&lt;p&gt;Or, why are we twice as slow? Its reasonable to think that asyncwal should be much faster?&lt;/p&gt;</comment>
                            <comment id="15643271" author="apache9" created="Mon, 7 Nov 2016 06:27:26 +0000"  >&lt;p&gt;We both want to reduce the contention by introducing a ringbuffer, but with different ways.&lt;/p&gt;

&lt;p&gt;Ram&apos;s patch aims to introduce a disruptor in front of the old waitingConsumePayloads, all the payload will be added to the ringbuffer firstly and then the disruptor event processor will poll the payload from ringbuffer and add it to waitingConsumePayloads.&lt;/p&gt;

&lt;p&gt;My patch aims to use ringbuffer directly as the waitingConsumePayloads and remove locking as much as possible.&lt;/p&gt;

&lt;p&gt;Ideally ram&apos;s patch should be small and simple(but we still have some problem on the txid generating...) and my patch will be more complicated. But as I can also remove all the lockings in append and sync so I think my patch can save one thread(the event processor thread in ram&apos;s patch) which is a little better.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15643323" author="apache9" created="Mon, 7 Nov 2016 06:58:58 +0000"  >&lt;p&gt;With 3 DNs then AsyncFSWAL should be faster as we use fan out. And one DN is another story as fan out and chained are the same...&lt;/p&gt;

&lt;p&gt;Anyway, two times slower is not acceptable. I think one possible reason is what I said above, AsyncFSWAL could sync more than FSHLog. Let me add a limit on the concurrent sync request after we finished &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-17021&quot; title=&quot;Use RingBuffer to reduce the contention in AsyncFSWAL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-17021&quot;&gt;&lt;del&gt;HBASE-17021&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15644696" author="stack" created="Mon, 7 Nov 2016 16:53:09 +0000"  >&lt;p&gt;Let me compare packet sizes.&lt;/p&gt;</comment>
                            <comment id="15647590" author="apache9" created="Tue, 8 Nov 2016 13:38:19 +0000"  >&lt;p&gt;AsyncFSWAL syncs more even after I introduced a &apos;maxConcurrentSyncRequest&apos; limit. I set the limit to 5.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Apache9/hbase/commit/4366600107646abeb4336191f0385da2c26423e4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Apache9/hbase/commit/4366600107646abeb4336191f0385da2c26423e4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The WALPE command is&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;./bin/hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads 100 -iterations 250000 -qualifiers 25 -keySize 50 -valueSize 200 &amp;amp;&amp;gt;walpelog &amp;amp;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The result of AsyncFSWAL&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Summary: threads=100, iterations=250000, syncInterval=0 took 843.537s 29637.111ops/s
-- Histograms ------------------------------------------------------------------
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.latencyHistogram.nanos
             count = 24939130
               min = 557972
               max = 192175884
              mean = 3986548.37
            stddev = 13706319.65
            median = 2440842.00
              75% &amp;lt;= 3157719.00
              95% &amp;lt;= 9339416.00
              98% &amp;lt;= 11016092.00
              99% &amp;lt;= 12722808.00
            99.9% &amp;lt;= 192175884.00
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.syncCountHistogram.countPerSync
             count = 1688089
               min = 0
               max = 73
              mean = 13.39
            stddev = 11.97
            median = 10.00
              75% &amp;lt;= 11.00
              95% &amp;lt;= 49.00
              98% &amp;lt;= 53.00
              99% &amp;lt;= 56.00
            99.9% &amp;lt;= 68.00
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.syncHistogram.nanos-between-syncs
             count = 1688090
               min = 278482
               max = 14913837
              mean = 1557884.88
            stddev = 1613655.10
            median = 1195771.00
              75% &amp;lt;= 1598231.00
              95% &amp;lt;= 2080325.00
              98% &amp;lt;= 8236173.00
              99% &amp;lt;= 10110921.00
            99.9% &amp;lt;= 11701740.00

-- Meters ----------------------------------------------------------------------
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.appendMeter.bytes
             count = 174324882180
         mean rate = 206827108.20 events/second
     1-minute rate = 207573011.08 events/second
     5-minute rate = 199333528.15 events/second
    15-minute rate = 153738236.11 events/second
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.syncMeter.syncs
             count = 1688090
         mean rate = 2002.81 events/second
     1-minute rate = 2019.97 events/second
     5-minute rate = 1927.71 events/second
    15-minute rate = 1489.09 events/second
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The %CPU of WALPE is about 400% and DN is about 60%&lt;/p&gt;

&lt;p&gt;The result of FSHLog&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Summary: threads=100, iterations=250000, syncInterval=0 took 931.874s 26827.660ops/s
-- Histograms ------------------------------------------------------------------
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.latencyHistogram.nanos
             count = 24954191
               min = 800101
               max = 95039071
              mean = 3747676.48
            stddev = 6153524.13
            median = 3299664.00
              75% &amp;lt;= 3374795.00
              95% &amp;lt;= 3506255.00
              98% &amp;lt;= 3560668.00
              99% &amp;lt;= 3598597.00
            99.9% &amp;lt;= 95039071.00
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.syncCountHistogram.countPerSync
             count = 509596
               min = 0
               max = 100
              mean = 49.58
            stddev = 19.05
            median = 50.00
              75% &amp;lt;= 66.00
              95% &amp;lt;= 76.00
              98% &amp;lt;= 78.00
              99% &amp;lt;= 79.00
            99.9% &amp;lt;= 100.00
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.syncHistogram.nanos-between-syncs
             count = 509596
               min = 88343
               max = 216813006
              mean = 585987.91
            stddev = 5510685.58
            median = 371500.00
              75% &amp;lt;= 431256.00
              95% &amp;lt;= 549931.00
              98% &amp;lt;= 628331.00
              99% &amp;lt;= 809535.00
            99.9% &amp;lt;= 84234716.00

-- Meters ----------------------------------------------------------------------
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.appendMeter.bytes
             count = 174430494090
         mean rate = 187070604.35 events/second
     1-minute rate = 186593392.32 events/second
     5-minute rate = 182509762.22 events/second
    15-minute rate = 152883048.81 events/second
org.apache.hadoop.hbase.wal.WALPerformanceEvaluation.syncMeter.syncs
             count = 509596
         mean rate = 546.52 events/second
     1-minute rate = 546.05 events/second
     5-minute rate = 533.45 events/second
    15-minute rate = 445.05 events/second
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The %CPU of WALPE is about 450% and DN is about 45%.&lt;/p&gt;

&lt;p&gt;The sync request count is 1688090 : 509596 = 3.3 : 1. Need to find out way.&lt;/p&gt;</comment>
                            <comment id="15648095" author="ram_krish" created="Tue, 8 Nov 2016 16:56:12 +0000"  >&lt;p&gt;But you still get more ops/sec. So which means WALPE is not measuring the actual perf rather it is measuring the number ops that were performed and in this case where there are more syncs we calculate those extra syncs in ops/sec.&lt;/p&gt;</comment>
                            <comment id="15649510" author="apache9" created="Wed, 9 Nov 2016 01:53:46 +0000"  >&lt;p&gt;It is the actual perf. AsyncFSWAL can finish WALPE with less time. But for PE AsyncFSWAL is about twice times slower.&lt;/p&gt;

&lt;p&gt;Maybe the problem is we put more stress on DN with AsyncFSWAL. In PE we will also do flush and compaction which also put stress on DN. Maybe this could make the DN too busy and slow thus leads to a bad performance.&lt;/p&gt;</comment>
                            <comment id="15650734" author="ram_krish" created="Wed, 9 Nov 2016 11:55:25 +0000"  >&lt;p&gt;I just ran a PE with 50 threads but loads only 10G of data. The AsyncWAL took close to ~97 secs and the FSHLog took ~81 secs.&lt;br/&gt;
The important thing is that the number of flushes and the number of rolls were exactly same atleast in the logs I got after the experiment got completed. &lt;/p&gt;</comment>
                            <comment id="15656705" author="ram_krish" created="Fri, 11 Nov 2016 10:25:58 +0000"  >&lt;p&gt;With checksum disabled and with 10G of data with 50 threads, we can assume  that the number of sync futures that gets created are almost same, then I could see that there are around 2000 additional syncs that are waiting for around 100 to 300 ms to get done.&lt;br/&gt;
In FSHLOG case syncs waiting betwenn 100 to 300 ms is 2300 where as in AsyncFSHLog it is 4100. As stated in my previous comment I see that the flushes and log rolls are over all same.&lt;/p&gt;</comment>
                            <comment id="15656718" author="apache9" created="Fri, 11 Nov 2016 10:34:00 +0000"  >&lt;blockquote&gt;
&lt;p&gt;we can assume that the number of sync futures that gets created are almost same&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why? As in the above WALPE, the wal.syncs are the same, but the actual syncs on DFSOutput are definitely different...&lt;/p&gt;</comment>
                            <comment id="15656724" author="ram_krish" created="Fri, 11 Nov 2016 10:36:46 +0000"  >&lt;blockquote&gt;&lt;p&gt;ut the actual syncs on DFSOutput are definitely different...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes. So the wal syncs are made to wait more in AsyncFSWAL. In FSHLog many of those syncs wait for less than 100 ms.&lt;/p&gt;</comment>
                            <comment id="15656770" author="ram_krish" created="Fri, 11 Nov 2016 11:00:16 +0000"  >&lt;p&gt;I want to ask some dumb questions.&lt;br/&gt;
FSHLog calls WAL Sync - internally we write data to FSOutputStream and then we will call a fsdos.sync or fsdos.hflush(). So what ever was written till that point will be transffered from client to DNs and here we mark the packet as &apos;tosync = true&apos;. &lt;br/&gt;
Now there is no DFSClient here - instead you try to directly right to DN. But I could see that in any of the packets that you create you don&apos;t set &apos;sync = true&apos; but only when there is endBlock() you say lastPacket=true.  So what difference does this create?&lt;/p&gt;</comment>
                            <comment id="15656848" author="ram_krish" created="Fri, 11 Nov 2016 11:36:42 +0000"  >&lt;p&gt;Sorry. Even FSHLog does not call hsync(), it only calls hflush(). So we are not sure that the data is persisted to DN but we only ensure that new readers can read the data. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12835484" name="AsyncWAL_disruptor.patch" size="16098" author="ram_krish" created="Thu, 27 Oct 2016 05:52:54 +0000"/>
                            <attachment id="12836316" name="AsyncWAL_disruptor_1 (2).patch" size="16023" author="ram_krish" created="Tue, 1 Nov 2016 09:18:42 +0000"/>
                            <attachment id="12836742" name="AsyncWAL_disruptor_3.patch" size="18410" author="ram_krish" created="Thu, 3 Nov 2016 07:15:54 +0000"/>
                            <attachment id="12836741" name="AsyncWAL_disruptor_3.patch" size="18382" author="ram_krish" created="Thu, 3 Nov 2016 06:59:59 +0000"/>
                            <attachment id="12836754" name="AsyncWAL_disruptor_4.patch" size="19564" author="ram_krish" created="Thu, 3 Nov 2016 08:13:46 +0000"/>
                            <attachment id="12837092" name="AsyncWAL_disruptor_6.patch" size="19736" author="ram_krish" created="Fri, 4 Nov 2016 10:21:09 +0000"/>
                            <attachment id="12836844" name="HBASE-16890-rc-v2.patch" size="54772" author="Apache9" created="Thu, 3 Nov 2016 15:11:35 +0000"/>
                            <attachment id="12837032" name="HBASE-16890-rc-v3.patch" size="61456" author="Apache9" created="Fri, 4 Nov 2016 03:15:19 +0000"/>
                            <attachment id="12836494" name="HBASE-16890-remove-contention-v1.patch" size="53498" author="Apache9" created="Wed, 2 Nov 2016 02:43:10 +0000"/>
                            <attachment id="12836313" name="HBASE-16890-remove-contention.patch" size="43178" author="Apache9" created="Tue, 1 Nov 2016 09:04:17 +0000"/>
                            <attachment id="12835248" name="Screen Shot 2016-10-25 at 7.34.47 PM.png" size="594474" author="stack" created="Wed, 26 Oct 2016 02:40:24 +0000"/>
                            <attachment id="12835249" name="Screen Shot 2016-10-25 at 7.39.07 PM.png" size="565538" author="stack" created="Wed, 26 Oct 2016 02:40:24 +0000"/>
                            <attachment id="12835250" name="Screen Shot 2016-10-25 at 7.39.48 PM.png" size="464686" author="stack" created="Wed, 26 Oct 2016 02:40:24 +0000"/>
                            <attachment id="12837326" name="Screen Shot 2016-11-04 at 5.21.27 PM.png" size="332600" author="stack" created="Sat, 5 Nov 2016 00:34:04 +0000"/>
                            <attachment id="12837327" name="Screen Shot 2016-11-04 at 5.30.18 PM.png" size="225493" author="stack" created="Sat, 5 Nov 2016 00:34:04 +0000"/>
                            <attachment id="12835246" name="async.svg" size="960604" author="stack" created="Wed, 26 Oct 2016 02:40:24 +0000"/>
                            <attachment id="12835247" name="classic.svg" size="918698" author="stack" created="Wed, 26 Oct 2016 02:40:24 +0000"/>
                            <attachment id="12834607" name="contention.png" size="42118" author="ram_krish" created="Fri, 21 Oct 2016 05:00:51 +0000"/>
                            <attachment id="12834606" name="contention_defaultWAL.png" size="39643" author="ram_krish" created="Fri, 21 Oct 2016 05:00:51 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 21 Oct 2016 23:53:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3568f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>