<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:45:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-521/HBASE-521.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-521] Improve client scanner interface</title>
                <link>https://issues.apache.org/jira/browse/HBASE-521</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The current client scanner interface is pretty ugly. You need to instantiate an HStoreKey and SortedMap&amp;lt;Text, byte[]&amp;gt; externally and then pass them into next. This is pretty bad, because for starters, the client has to choose the implementation of the map when they create it, so it&apos;s extra brain cycles to figure that out. HStoreKey doesn&apos;t show up anywhere else in the entire client side API, but here it bubbles out of next as a way to get the row and presumably the timestamp of the columns.&lt;/p&gt;

&lt;p&gt;I propose that we supplant HScannerInterface with Scanner, an easier-to-use version for clients. Its next method would look something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; RowResult next() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This packs the data up much more cleanly, including using Cells as values instead of raw byte[], meaning you have much more granular timestamp information. You also don&apos;t need HStoreKey anymore.&lt;/p&gt;

&lt;p&gt;By breaking Scanner away from HScannerInterface, we can leave the internal scanning code completely alone (keep using HStoreKeys and such) but make the client cleaner.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12391664">HBASE-521</key>
            <summary>Improve client scanner interface</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanduxbury">Bryan Duxbury</assignee>
                                    <reporter username="bryanduxbury">Bryan Duxbury</reporter>
                        <labels>
                    </labels>
                <created>Mon, 17 Mar 2008 19:01:54 +0000</created>
                <updated>Fri, 22 Aug 2008 21:13:11 +0000</updated>
                            <resolved>Tue, 8 Apr 2008 22:17:40 +0000</resolved>
                                                    <fixVersion>0.2.0</fixVersion>
                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12581314" author="bryanduxbury" created="Sun, 23 Mar 2008 02:18:44 +0000"  >&lt;p&gt;This patch does the vast majority of the work to replace client-side scanners with the Scanner interface.&lt;/p&gt;

&lt;p&gt;As a side effect, I&apos;ve refactored the way that mapreduce pieces work. TableMap takes in a Text, RowResult pair. TableOutputFormat takes a Text, BatchUpdate pair. (The Text is ignored.). TableReduce takes a Text key and a list of BatchUpdates.&lt;/p&gt;

&lt;p&gt;TTI works fine, but TTMR is having some issues. For some reason the test times out, and watching the log output doesn&apos;t seem to indicate what the problem would be. If someone else would like to take a glance and give me some input, Id be much obliged.&lt;/p&gt;

&lt;p&gt;As far as I can tell, all the rest of the tests pass. &lt;/p&gt;</comment>
                            <comment id="12581315" author="bryanduxbury" created="Sun, 23 Mar 2008 02:19:45 +0000"  >&lt;p&gt;Initial review, please. As there are issues outstanding with TTMR, I&apos;m sure this won&apos;t be the version that gets applied.&lt;/p&gt;</comment>
                            <comment id="12581683" author="jimk" created="Mon, 24 Mar 2008 21:34:30 +0000"  >&lt;p&gt;Code review: Overall +1, however:  remove commented out code in ScannerHandler, TestScannerAPI&lt;/p&gt;</comment>
                            <comment id="12581690" author="stack" created="Mon, 24 Mar 2008 21:53:08 +0000"  >&lt;p&gt;I suppose RowResults could easily be so big, they&apos;d blow out memory on client or server.  Whats our defense?  That designing your request/MR, that you are not select too much?  (I suppose we&apos;ve always had this prob.  This patch does not introduce it)&lt;/p&gt;

&lt;p&gt;This issue addresses one of the items raised in our plan for 0.2.&lt;/p&gt;

&lt;p&gt;Should we bite the bullet and change the name of the methods in HTable to be getScanner instead of &apos;obtainScanner &amp;#8211; just deprecate the old ones... In fact, we probably should do this since we&apos;re breaking the methods anyways (add deprecate to old obtainScanner methods).&lt;/p&gt;

&lt;p&gt;hmmm.... but next is completely different.  Maybe we should just say that HTable has changed completely in 0.2, and TableMap, etc.&lt;/p&gt;

&lt;p&gt;I like changing name from HScannerInterface to Scanner.  Change HInternalScannerInterface to InternalScanner?&lt;/p&gt;

&lt;p&gt;The change in &apos;Index: src/java/org/apache/hadoop/hbase/util/Migrate.java&apos; is odd; you just add imports?  Is that right?&lt;/p&gt;

&lt;p&gt;For IdentityTableReduce, the interface should be &amp;lt;Long, BatchUpdate&amp;gt;, rather than &amp;lt;Text, BatchUpdate&amp;gt;?  The Long would be an index of some kind.  That seems to be the model for identity mappers... same for the TOF/TIF.  Should key be a Long rather than duplicate of info in RowResult/BatchUpdate?&lt;/p&gt;





</comment>
                            <comment id="12581697" author="bryanduxbury" created="Mon, 24 Mar 2008 22:17:18 +0000"  >&lt;p&gt;&amp;gt;however: remove commented out code in ScannerHandler, TestScannerAPI&lt;br/&gt;
Done.&lt;/p&gt;

&lt;p&gt;&amp;gt;I suppose RowResults could easily be so big, they&apos;d blow out memory on client or server. Whats our defense? That designing your request/MR, that you are not select too much? (I suppose we&apos;ve always had this prob. This patch does not introduce it)&lt;br/&gt;
We have this problem throughout our project. Our RPC framework is, well, an RPC, not a stream, so we really can&apos;t handle alternatives. I think we should deal with oversized requests and replies when people actually show us cases where it both makes sense and is a problem.&lt;/p&gt;

&lt;p&gt;&amp;gt;Should we bite the bullet and change the name of the methods in HTable to be getScanner instead of &apos;obtainScanner - just deprecate the old ones... In fact, we probably should do this since we&apos;re breaking the methods anyways (add deprecate to old obtainScanner methods).&lt;br/&gt;
Makes sense, probably should do this. It is an issue that we&apos;re breaking compatibility - we could offer a DeprecatedScanner wrapper class that coverts the RowResult back, if we wanted to. TableMap and friends, I don&apos;t see the point in trying to keep them reverse compatible, because they didn&apos;t work quite right in the first place. The changes I have made give you a lot more options (BatchUpdates as values for TIF), things we actually wanted to fix in 0.2 anyway.&lt;/p&gt;

&lt;p&gt;I&apos;ll change HInternalScannerInterface to InternalScanner. Much cleaner to read.&lt;/p&gt;

&lt;p&gt;Reverted changes to Migrate.java. Changes were relevant until another patch got applied.&lt;/p&gt;

&lt;p&gt;&amp;gt; For IdentityTableReduce, the interface should be &amp;lt;Long, BatchUpdate&amp;gt;, rather than &amp;lt;Text, BatchUpdate&amp;gt;?&lt;br/&gt;
Where would we generate the Long from? Why can&apos;t the Text rowkey be used as the identity attribute? Not that it really matters - all the BatchUpdates are just going to be applied individually. There&apos;s no merging or anything in IdentityTableReduce.&lt;/p&gt;</comment>
                            <comment id="12581711" author="bryanduxbury" created="Mon, 24 Mar 2008 22:45:23 +0000"  >&lt;p&gt;Here&apos;s my latest. Fixes a few more little bugs here and there.&lt;/p&gt;</comment>
                            <comment id="12581742" author="bryanduxbury" created="Tue, 25 Mar 2008 00:22:43 +0000"  >&lt;p&gt;Most up to date of all my thrashing.&lt;/p&gt;</comment>
                            <comment id="12581778" author="stack" created="Tue, 25 Mar 2008 04:39:46 +0000"  >&lt;p&gt;Something is missing from the patch.  On clean checkout of src, I get:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    [javac] Compiling 193 source files to /Users/stack/Documents/checkouts/hbase/trunk/build/classes
    [javac] /Users/stack/Documents/checkouts/hbase/trunk/src/java/org/apache/hadoop/hbase/client/HTable.java:860: cannot find symbol
    [javac] symbol  : method endKey()
    [javac] location: class org.apache.hadoop.hbase.client.HTable.ClientScanner
    [javac]         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (endKey() == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || endKey().equals(EMPTY_TEXT)) {
    [javac]             ^
    [javac] /Users/stack/Documents/checkouts/hbase/trunk/src/java/org/apache/hadoop/hbase/client/HTable.java:860: cannot find symbol
    [javac] symbol  : method endKey()
    [javac] location: class org.apache.hadoop.hbase.client.HTable.ClientScanner
    [javac]         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (endKey() == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || endKey().equals(EMPTY_TEXT)) {
    [javac]                                 ^
    [javac] /Users/stack/Documents/checkouts/hbase/trunk/src/java/org/apache/hadoop/hbase/mapred/TableInputFormat.java:54: cannot find symbol
    [javac] symbol  : method getName()
    [javac] location: class org.apache.hadoop.hbase.mapred.TableInputFormat
    [javac]   &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Log LOG = LogFactory.getLog(TableInputFormat.getName());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12581997" author="bryanduxbury" created="Tue, 25 Mar 2008 16:06:59 +0000"  >&lt;p&gt;Last patch hadn&apos;t been compiled and contained a few errors. This fixes that.&lt;/p&gt;</comment>
                            <comment id="12583135" author="clint.morgan" created="Fri, 28 Mar 2008 18:43:01 +0000"  >&lt;p&gt;When I tried this, and int the shell do a select * from table, I get the table contents then:&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.lang.UnsupportedOperationException: RowResult is read-only!&lt;br/&gt;
	at org.apache.hadoop.hbase.io.RowResult.clear(RowResult.java:99)&lt;br/&gt;
	at org.apache.hadoop.hbase.hql.SelectCommand.scanPrint(SelectCommand.java:266)&lt;br/&gt;
	at org.apache.hadoop.hbase.hql.SelectCommand.execute(SelectCommand.java:99)&lt;br/&gt;
	at org.apache.hadoop.hbase.hql.HQLClient.executeQuery(HQLClient.java:68)&lt;br/&gt;
	at org.apache.hadoop.hbase.Shell.main(Shell.java:114)&lt;/p&gt;</comment>
                            <comment id="12583141" author="clint.morgan" created="Fri, 28 Mar 2008 18:54:27 +0000"  >&lt;p&gt;Changing SelectCommand.java:266 to:&lt;/p&gt;

&lt;p&gt;        results = scan.next();&lt;/p&gt;


&lt;p&gt;fixed it for me&lt;/p&gt;</comment>
                            <comment id="12583142" author="bryanduxbury" created="Fri, 28 Mar 2008 18:56:06 +0000"  >&lt;p&gt;Thanks for catching that, Clint. Looks like we cant trust the HQL test case to actually exercise all the code. I&apos;ll incorporate a fix in the next version.&lt;/p&gt;</comment>
                            <comment id="12584355" author="bryanduxbury" created="Tue, 1 Apr 2008 23:21:27 +0000"  >&lt;p&gt;Latest version.&lt;/p&gt;</comment>
                            <comment id="12584697" author="stack" created="Wed, 2 Apr 2008 17:55:21 +0000"  >&lt;p&gt;Comments on v5&lt;/p&gt;

&lt;p&gt;Your entry in CHANGES.txt belongs in the INCOMPATIBLE section&lt;/p&gt;

&lt;p&gt;You were going to deprecate obtainScanner and make a getScanner instead in HTable?&lt;/p&gt;

&lt;p&gt;Can you leave one of these in place?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Advancing internal scanner to startKey &quot;&lt;/span&gt; + localStartKey);^M
       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.currentRegionLocation = getRegionLocation(localStartKey);^M
-      ^M
-      LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;New region: &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.currentRegionLocation);^
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I know they look useful but I&apos;ve found them useful debugging trying to figure problematic region.... WIth them in place I know the last or current problematic region when scanning.&lt;/p&gt;

&lt;p&gt;Can you write the below...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
       &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (values != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; values.size() != 0) {^M
-        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Map.Entry&amp;lt;Text, Cell&amp;gt; e: values.entrySet()) {^M
-          &lt;span class=&quot;code-comment&quot;&gt;// HStoreKey k = (HStoreKey) e.getKey();^M
&lt;/span&gt;-          key.setRow(values.getRow());^M
-          key.setVersion(e.getValue().getTimestamp());^M
-          key.setColumn(EMPTY_COLUMN);^M
-          results.put(e.getKey(), e.getValue().getValue());^M
-        }^M
+        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; values;^M
       }^M
-      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; values == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt; : values.size() != 0;^M
+      ^M
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;^M
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;instead as just&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; values;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Is this used?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class IdentityTableReduce &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; TableReduce&amp;lt;Text, BatchUpdate&amp;gt; {
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Log LOG =
+    LogFactory.getLog(IdentityTableReduce.class.getName());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For long in reduce, how about &amp;lt;regionid&amp;gt; &apos;:&apos; &amp;lt;rowindex_zeropadded&amp;gt; or jenkins hash of start row plus an index?  It irks me that we&apos;re duplicating info &amp;#8211; row and BatchUpdate.  Same irritiation about TableOutputFormat.&lt;/p&gt;

&lt;p&gt;I was going to argue that minimally, a hash of the row would be easier on the sort but then hash will probably not sort same as key which would probably be a problem in that any one reducer would be inserting all over the table row-namespace &amp;#8211; probably not what we want.&lt;/p&gt;

&lt;p&gt;This is great in TableOutputFormat&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void write(Text key, MapWritable value) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
-      &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; xid = m_table.startUpdate(key);              &lt;span class=&quot;code-comment&quot;&gt;// start transaction
&lt;/span&gt;-
-      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Map.Entry&amp;lt;Writable, Writable&amp;gt; e: value.entrySet()) {
-        m_table.put(xid, (Text)e.getKey(),
-            ((ImmutableBytesWritable)e.getValue()).get());
-      }
-      m_table.commit(xid);                              &lt;span class=&quot;code-comment&quot;&gt;// end transaction
&lt;/span&gt;+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void write(Text key, BatchUpdate value) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+      m_table.commit(value);
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You were going to change the name of HInternalScannerInterface&lt;/p&gt;
</comment>
                            <comment id="12584758" author="bryanduxbury" created="Wed, 2 Apr 2008 20:23:21 +0000"  >&lt;p&gt;Latest version, incorporates some of Stack&apos;s suggestions. &lt;/p&gt;

&lt;p&gt;The stuff transforming RowResult into HStoreKey map is for incommons to have same scanner interface. I can&apos;t just return RowResult there because it expects map&amp;lt;HStoreKey, byte[]&amp;gt;, not map&amp;lt;Text, Cell&amp;gt;. &lt;/p&gt;

&lt;p&gt;We&apos;ve agreed that mapred stuff will be improved further outside of this issue.&lt;/p&gt;</comment>
                            <comment id="12585343" author="bryanduxbury" created="Thu, 3 Apr 2008 23:15:47 +0000"  >&lt;p&gt;Last patch seems not to contain InternalScanner interface. This one should.&lt;/p&gt;</comment>
                            <comment id="12585346" author="bryanduxbury" created="Thu, 3 Apr 2008 23:29:37 +0000"  >&lt;p&gt;Last patch was still messed up. Here&apos;s another try.&lt;/p&gt;</comment>
                            <comment id="12586537" author="bryanduxbury" created="Mon, 7 Apr 2008 21:06:16 +0000"  >&lt;p&gt;This includes the tiny change of making scanner&apos;s close method no longer throw exceptions.&lt;/p&gt;</comment>
                            <comment id="12586598" author="stack" created="Mon, 7 Apr 2008 23:45:45 +0000"  >&lt;p&gt;Further comment on patch:&lt;/p&gt;

&lt;p&gt;When something is deprecated, point at the replacement as in &apos;@deprecated #getScanner....&apos;&lt;/p&gt;

&lt;p&gt;But the deprecation in this case is broke; the original method, obtainScanner has had its return type changed.  Leave the original untouched or call it a singularity and we&apos;ll spotlight the release note that says no going between 0.2 and 0.1 w/o code changes&lt;/p&gt;




</comment>
                            <comment id="12586648" author="stack" created="Tue, 8 Apr 2008 05:05:24 +0000"  >&lt;p&gt;Test was failing TTMR because BatchUpdate was growing with each deserialization.  Let me make a patch in a new issue.&lt;/p&gt;</comment>
                            <comment id="12586923" author="bryanduxbury" created="Tue, 8 Apr 2008 18:33:50 +0000"  >&lt;p&gt;Latest version, merged with trunk, and containing the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-567&quot; title=&quot;Reused BatchUpdate instances accumulate BatchOperations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-567&quot;&gt;&lt;del&gt;HBASE-567&lt;/del&gt;&lt;/a&gt; patch as well. There&apos;s a bug I keep getting in TestTable.&lt;/p&gt;</comment>
                            <comment id="12586987" author="bryanduxbury" created="Tue, 8 Apr 2008 22:17:40 +0000"  >&lt;p&gt;Committed to trunk.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12391672">HBASE-523</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12392062">HBASE-539</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12385424">HBASE-53</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12379683" name="521-v10.patch" size="132961" author="bryanduxbury" created="Tue, 8 Apr 2008 18:33:50 +0000"/>
                            <attachment id="12378519" name="521-v2.patch" size="111312" author="bryanduxbury" created="Mon, 24 Mar 2008 22:45:23 +0000"/>
                            <attachment id="12378530" name="521-v3.patch" size="116443" author="bryanduxbury" created="Tue, 25 Mar 2008 00:22:43 +0000"/>
                            <attachment id="12378577" name="521-v4.patch" size="116435" author="bryanduxbury" created="Tue, 25 Mar 2008 16:06:59 +0000"/>
                            <attachment id="12379078" name="521-v5.patch" size="114762" author="bryanduxbury" created="Tue, 1 Apr 2008 23:21:26 +0000"/>
                            <attachment id="12379181" name="521-v6.patch" size="127320" author="bryanduxbury" created="Wed, 2 Apr 2008 20:23:21 +0000"/>
                            <attachment id="12379333" name="521-v7.patch" size="127320" author="bryanduxbury" created="Thu, 3 Apr 2008 23:15:47 +0000"/>
                            <attachment id="12379334" name="521-v8.patch" size="128135" author="bryanduxbury" created="Thu, 3 Apr 2008 23:29:37 +0000"/>
                            <attachment id="12379600" name="521-v9.patch" size="129862" author="bryanduxbury" created="Mon, 7 Apr 2008 21:06:16 +0000"/>
                            <attachment id="12378444" name="521.patch" size="101329" author="bryanduxbury" created="Sun, 23 Mar 2008 02:18:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Mar 2008 21:34:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31740</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 37 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h7t3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98527</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>