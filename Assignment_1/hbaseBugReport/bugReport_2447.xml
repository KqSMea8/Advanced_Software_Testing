<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:01:59 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2447/HBASE-2447.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2447] LogSyncer.addToSyncQueue doesn&apos;t check if syncer is still running before waiting</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2447</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In testing GC pause scenarios with kill -STOP, I got the regionserver into a situation where it was blocked forever while shutting down (also blocking clients, since the RPCs were still pinging). The root issue is that, if the log syncer has an error just as more edits are being done, addToSyncQueue() can go to sleep waiting on a syncer which has just died.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12462072">HBASE-2447</key>
            <summary>LogSyncer.addToSyncQueue doesn&apos;t check if syncer is still running before waiting</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tlipcon">Todd Lipcon</assignee>
                                    <reporter username="tlipcon">Todd Lipcon</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Apr 2010 19:17:26 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:34 +0000</updated>
                            <resolved>Sat, 24 Apr 2010 04:29:11 +0000</resolved>
                                                    <fixVersion>0.90.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12857087" author="tlipcon" created="Wed, 14 Apr 2010 20:49:57 +0000"  >&lt;p&gt;Here&apos;s a patch that I believe fixes the issue (at least I haven&apos;t seen it reoccur since). The way I triggered the problem was to pause a RS with kill -STOP for 62 seconds - when it came back from sleeping state all if its writes to hlogs would fail, but pending writes would still try to sync. It correctly tried to shut down but was left in a state where multiple threads were waiting on the syncer, but the syncer had already exited, so it never shut down.&lt;/p&gt;</comment>
                            <comment id="12859078" author="stack" created="Tue, 20 Apr 2010 21:50:20 +0000"  >&lt;p&gt;I like the STOP/CONT trick.  I&apos;m trying it to see if I can get into same state...&lt;/p&gt;</comment>
                            <comment id="12860390" author="jdcryans" created="Fri, 23 Apr 2010 21:44:08 +0000"  >&lt;p&gt;If we remove group commit, then we don&apos;t need this patch?&lt;/p&gt;</comment>
                            <comment id="12860425" author="tlipcon" created="Fri, 23 Apr 2010 23:54:02 +0000"  >&lt;p&gt;Yea, but that hflush improvement is still reasonably experimental, I think. I think we ought to commit this first, and if we commit the other patch later that&apos;s fine.&lt;/p&gt;</comment>
                            <comment id="12860435" author="jdcryans" created="Sat, 24 Apr 2010 00:11:09 +0000"  >&lt;p&gt;Fair enough.&lt;/p&gt;

&lt;p&gt;About the patch, instead of creating a new attribute in the thread, would it be possible to use HLog.closed? Or check if logSyncerThread.isAlive? In any case, I&apos;m not satisfied by those kind of solutions. What happens if the thread is instead set closing the moment after the check is done? We would still be hanging on signal? It&apos;s a shame that we can&apos;t timeout that method.&lt;/p&gt;</comment>
                            <comment id="12860437" author="tlipcon" created="Sat, 24 Apr 2010 00:17:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;happens if the thread is instead set closing the moment after the check is done&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This can&apos;t happen, since the boolean is modified inside the lock, and it acquires the lock before checking the boolean.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It&apos;s a shame that we can&apos;t timeout that method.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We could spin and call await() with a timeout, but it just seems like more of a pain.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;would it be possible to use HLog.closed&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think so, because we need to set this from within the finally clause of the log syncer thread itself - we can&apos;t call close() from within logsyncer, because it would wait for itself.&lt;/p&gt;</comment>
                            <comment id="12860442" author="jdcryans" created="Sat, 24 Apr 2010 00:28:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;This can&apos;t happen, since the boolean is modified inside the lock, and it acquires the lock before checking the boolean.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;/me facedesk&lt;/p&gt;

&lt;p&gt;Could we instead consider checking lock. hasWaiters(queueEmpty) before queueEmpty.signal()? Normally the thread will always be waiting there since that&apos;s how it releases the lock. If not, then the thread is dead?&lt;/p&gt;</comment>
                            <comment id="12860449" author="tlipcon" created="Sat, 24 Apr 2010 00:51:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;hasWaiters(queueEmpty) before queueEmpty.signal&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That seems really dirty to me... what&apos;s the problem you see with the flag? It&apos;s an extremely common practice to set a condition before signalling and check the condition before waiting.&lt;/p&gt;

&lt;p&gt;(your proposed solution also doesn&apos;t work if we call addToSyncQueue before the syncer thread has started, probably not possible in current code, but still worth avoiding the problem)&lt;/p&gt;</comment>
                            <comment id="12860453" author="jdcryans" created="Sat, 24 Apr 2010 01:27:46 +0000"  >&lt;p&gt;Just exploring other solutions out loud &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12860481" author="stack" created="Sat, 24 Apr 2010 04:29:11 +0000"  >&lt;p&gt;Committed.  I tried repro&apos;ing but I ain&apos;t too good at waiting around so missed repeatedly.  Patch standalone looks good.  Thanks for reviewing it too J-D.  Thanks for the patch Todd.  Applied branch and trunk.&lt;/p&gt;</comment>
                            <comment id="12866851" author="stack" created="Wed, 12 May 2010 23:52:27 +0000"  >&lt;p&gt;Marking these as fixed against 0.21.0 rather than against 0.20.5.&lt;/p&gt;</comment>
                            <comment id="15017558" author="lars_francke" created="Fri, 20 Nov 2015 12:43:34 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12441767" name="ASF.LICENSE.NOT.GRANTED--hbase-2447.txt" size="1441" author="tlipcon" created="Wed, 14 Apr 2010 20:49:57 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 20 Apr 2010 21:50:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26307</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hhqf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100135</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>